{
  "swagger": "2.0",
  "info": {
    "version": "2015-08-01",
    "title": "AppServiceCertificateOrders API Client"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.CertificateRegistration/certificateOrders": {
      "get": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "List all certificate orders in a subscription.",
        "description": "List all certificate orders in a subscription.",
        "operationId": "AppServiceCertificateOrders_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppServiceCertificateOrderCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CertificateRegistration/validateCertificateRegistrationInformation": {
      "post": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Validate information for a certificate order.",
        "description": "Validate information for a certificate order.",
        "operationId": "AppServiceCertificateOrders_ValidatePurchaseInformation",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "appServiceCertificateOrder",
            "in": "body",
            "description": "Information for a certificate order.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppServiceCertificateOrder"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders": {
      "get": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Get certificate orders in a resource group.",
        "description": "Get certificate orders in a resource group.",
        "operationId": "AppServiceCertificateOrders_ListByResourceGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppServiceCertificateOrderCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates": {
      "get": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "List all certificates associated with a certificate order.",
        "description": "List all certificates associated with a certificate order.",
        "operationId": "AppServiceCertificateOrders_ListCertificates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "Name of the certificate order.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppServiceCertificateCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}": {
      "get": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Get the certificate associated with a certificate order.",
        "description": "Get the certificate associated with a certificate order.",
        "operationId": "AppServiceCertificateOrders_GetCertificate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "Name of the certificate order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppServiceCertificate"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Associate a Key Vault secret to a certificate store that will be used for storing the certificate once it's ready.",
        "description": "Associate a Key Vault secret to a certificate store that will be used for storing the certificate once it's ready.",
        "operationId": "AppServiceCertificateOrders_CreateOrUpdateCertificate",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "Name of the certificate order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyVaultCertificate",
            "in": "body",
            "description": "CSM ID of the Key Vault secret.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppServiceCertificate"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppServiceCertificate"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Delete the certificate associated with a certificate order.",
        "description": "Delete the certificate associated with a certificate order.",
        "operationId": "AppServiceCertificateOrders_DeleteCertificate",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "certificateOrderName",
            "in": "path",
            "description": "Name of the certificate order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully deleted certificate."
          },
          "204": {
            "description": "Certificate does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}": {
      "get": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Get a certificate order.",
        "description": "Get a certificate order.",
        "operationId": "AppServiceCertificateOrders_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppServiceCertificateOrder"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Create or update a certificate purchase order.",
        "description": "Create or update a certificate purchase order.",
        "operationId": "AppServiceCertificateOrders_CreateOrUpdate",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateDistinguishedName",
            "in": "body",
            "description": "Distinguished name to to use for the certificate order.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppServiceCertificateOrder"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "App Service Certificate Order is created.",
            "schema": {
              "$ref": "#/definitions/AppServiceCertificateOrder"
            }
          },
          "201": {
            "description": "App Service Certificate Order creation operation is in progress",
            "schema": {
              "$ref": "#/definitions/AppServiceCertificateOrder"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Delete an existing certificate order.",
        "description": "Delete an existing certificate order.",
        "operationId": "AppServiceCertificateOrders_DeleteCertificateOrder",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully deleted certificate order."
          },
          "204": {
            "description": "Certificate order does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/reissue": {
      "post": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Reissue an existing certificate order.",
        "description": "Reissue an existing certificate order.",
        "operationId": "AppServiceCertificateOrders_Reissue",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "reissueCertificateOrderRequest",
            "in": "body",
            "description": "Parameters for the reissue.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReissueCertificateOrderRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/renew": {
      "post": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Renew an existing certificate order.",
        "description": "Renew an existing certificate order.",
        "operationId": "AppServiceCertificateOrders_Renew",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Certificate name",
            "required": true,
            "type": "string"
          },
          {
            "name": "renewCertificateOrderRequest",
            "in": "body",
            "description": "Renew parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RenewCertificateOrderRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/resendEmail": {
      "post": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Resend certificate email.",
        "description": "Resend certificate email.",
        "operationId": "AppServiceCertificateOrders_ResendEmail",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Certificate order name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/retrieveCertificateActions": {
      "post": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Retrieve the list of certificate actions.",
        "description": "Retrieve the list of certificate actions.",
        "operationId": "AppServiceCertificateOrders_RetrieveCertificateActions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Certificate order name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CertificateOrderAction"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/retrieveEmailHistory": {
      "post": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Retrive email histor.",
        "description": "Retrive email histor.",
        "operationId": "AppServiceCertificateOrders_RetrieveCertificateEmailHistory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Certificate order name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CertificateEmail"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/verifyDomainOwnership": {
      "post": {
        "tags": [
          "AppServiceCertificateOrders"
        ],
        "summary": "Verify domain ownership for this certificate order.",
        "description": "Verify domain ownership for this certificate order.",
        "operationId": "AppServiceCertificateOrders_VerifyDomainOwnership",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Certificate order name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    }
  },
  "definitions": {
    "AppServiceCertificate": {
      "description": "Key Vault container for a certificate that is purchased through Azure.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "keyVaultId": {
              "description": "Key Vault Csm resource Id.",
              "type": "string"
            },
            "keyVaultSecretName": {
              "description": "Key Vault secret name.",
              "type": "string"
            },
            "provisioningState": {
              "description": "Status of the Key Vault secret.",
              "enum": [
                "Initialized",
                "WaitingOnCertificateOrder",
                "Succeeded",
                "CertificateOrderFailed",
                "OperationNotPermittedOnKeyVault",
                "AzureServiceUnauthorizedToAccessKeyVault",
                "KeyVaultDoesNotExist",
                "KeyVaultSecretDoesNotExist",
                "UnknownError",
                "ExternalPrivateKey",
                "Unknown"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "KeyVaultSecretStatus",
                "modelAsString": false
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "AppServiceCertificateCollection": {
      "description": "Collection of certitificateorder certificates.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppServiceCertificate"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "AppServiceCertificateOrder": {
      "description": "SSL certificate purchase order.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "required": [
            "productType"
          ],
          "properties": {
            "certificates": {
              "description": "State of the Key Vault secret.",
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/AppServiceCertificate"
              }
            },
            "distinguishedName": {
              "description": "Certificate distinguished name.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "domainVerificationToken": {
              "description": "Domain verification token.",
              "type": "string",
              "readOnly": true
            },
            "validityInYears": {
              "format": "int32",
              "description": "Duration in years (must be between 1 and 3).",
              "default": 1,
              "type": "integer",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "keySize": {
              "format": "int32",
              "description": "Certificate key size.",
              "default": 2048,
              "type": "integer",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "productType": {
              "description": "Certificate product type.",
              "enum": [
                "StandardDomainValidatedSsl",
                "StandardDomainValidatedWildCardSsl"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "CertificateProductType",
                "modelAsString": false
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "autoRenew": {
              "description": "<code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.",
              "default": true,
              "type": "boolean"
            },
            "provisioningState": {
              "description": "Status of certificate order.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "InProgress",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": false
              }
            },
            "status": {
              "description": "Current order status.",
              "enum": [
                "Pendingissuance",
                "Issued",
                "Revoked",
                "Canceled",
                "Denied",
                "Pendingrevocation",
                "PendingRekey",
                "Unused",
                "Expired",
                "NotSubmitted"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "CertificateOrderStatus",
                "modelAsString": false
              }
            },
            "signedCertificate": {
              "$ref": "#/definitions/CertificateDetails",
              "description": "Signed certificate.",
              "readOnly": true
            },
            "csr": {
              "description": "Last CSR that was created for this order.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "intermediate": {
              "$ref": "#/definitions/CertificateDetails",
              "description": "Intermediate certificate.",
              "readOnly": true
            },
            "root": {
              "$ref": "#/definitions/CertificateDetails",
              "description": "Root certificate.",
              "readOnly": true
            },
            "serialNumber": {
              "description": "Current serial number of the certificate.",
              "type": "string",
              "readOnly": true
            },
            "lastCertificateIssuanceTime": {
              "format": "date-time",
              "description": "Certificate last issuance time.",
              "type": "string",
              "readOnly": true
            },
            "expirationTime": {
              "format": "date-time",
              "description": "Certificate expiration time.",
              "type": "string",
              "readOnly": true
            },
            "isPrivateKeyExternal": {
              "description": "<code>true</code> if private key is external; otherwise, <code>false</code>.",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "AppServiceCertificateOrderCollection": {
      "description": "Collection of certitificate orders.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppServiceCertificateOrder"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "CertificateDetails": {
      "description": "SSL certificate details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "version": {
              "format": "int32",
              "description": "Version.",
              "type": "integer",
              "readOnly": true
            },
            "serialNumber": {
              "description": "Serial Number.",
              "type": "string",
              "readOnly": true
            },
            "thumbprint": {
              "description": "Thumbprint.",
              "type": "string",
              "readOnly": true
            },
            "subject": {
              "description": "Subject.",
              "type": "string",
              "readOnly": true
            },
            "notBefore": {
              "format": "date-time",
              "description": "Valid from.",
              "type": "string",
              "readOnly": true
            },
            "notAfter": {
              "format": "date-time",
              "description": "Valid to.",
              "type": "string",
              "readOnly": true
            },
            "signatureAlgorithm": {
              "description": "Signature algorithm.",
              "type": "string",
              "readOnly": true
            },
            "issuer": {
              "description": "Issuer.",
              "type": "string",
              "readOnly": true
            },
            "rawData": {
              "description": "Raw certificate data.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "CertificateEmail": {
      "description": "SSL certificate email.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "emailId": {
              "description": "Email id.",
              "type": "string"
            },
            "timeStamp": {
              "format": "date-time",
              "description": "Time stamp.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "CertificateOrderAction": {
      "description": "Certificate order action.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "type": {
              "description": "Action type.",
              "enum": [
                "CertificateIssued",
                "CertificateOrderCanceled",
                "CertificateOrderCreated",
                "CertificateRevoked",
                "DomainValidationComplete",
                "FraudDetected",
                "OrgNameChange",
                "OrgValidationComplete",
                "SanDrop",
                "FraudCleared",
                "Unknown"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "CertificateOrderActionType",
                "modelAsString": false
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "Time at which the certificate action was performed.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ReissueCertificateOrderRequest": {
      "description": "Class representing certificate reissue request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "keySize": {
              "format": "int32",
              "description": "Certificate Key Size.",
              "type": "integer"
            },
            "delayExistingRevokeInHours": {
              "format": "int32",
              "description": "Delay in hours to revoke existing certificate after the new certificate is issued.",
              "type": "integer"
            },
            "csr": {
              "description": "Csr to be used for re-key operation.",
              "type": "string"
            },
            "isPrivateKeyExternal": {
              "description": "Should we change the ASC type (from managed private key to external private key and vice versa).",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "RenewCertificateOrderRequest": {
      "description": "Class representing certificate renew request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "keySize": {
              "format": "int32",
              "description": "Certificate Key Size.",
              "type": "integer"
            },
            "csr": {
              "description": "Csr to be used for re-key operation.",
              "type": "string"
            },
            "isPrivateKeyExternal": {
              "description": "Should we change the ASC type (from managed private key to external private key and vice versa).",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Resource": {
      "description": "Azure resource.",
      "required": [
        "location",
        "name"
      ],
      "properties": {
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name.",
          "type": "string"
        },
        "kind": {
          "description": "Kind of resource.",
          "type": "string"
        },
        "location": {
          "description": "Resource Location.",
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "type": "string"
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-azure-resource": true
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
      "required": true,
      "type": "string"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "Name of the resource group to which the resource belongs.",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string",
      "maxLength": 90,
      "minLength": 1,
      "pattern": "^[-\\\\w\\\\._\\\\(\\\\)]+[^\\\\.]$"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "API Version",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}