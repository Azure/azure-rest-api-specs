{
  "swagger": "2.0",
  "info": {
    "version": "2016-08-01",
    "title": "WebApps API Swagger"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/sites": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets all Web Apps for a subscription",
        "description": "Gets all Web Apps for a subscription",
        "operationId": "WebApps_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebAppCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/deletedSites": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets deleted web apps in subscription",
        "description": "Gets deleted web apps in subscription",
        "operationId": "WebApps_ListDeleted",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "propertiesToInclude",
            "in": "query",
            "description": "Additional web app properties included in the response",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeletedWebAppCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the web apps for a subscription in the specified resource group",
        "description": "Gets the web apps for a subscription in the specified resource group",
        "operationId": "WebApps_ListByResourceGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "propertiesToInclude",
            "in": "query",
            "description": "Additional web app properties included in the response",
            "type": "string"
          },
          {
            "name": "includeSlots",
            "in": "query",
            "description": "Whether or not to include deployments slots in results",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebAppCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get details of a web app",
        "description": "Get details of a web app",
        "operationId": "WebApps_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "propertiesToInclude",
            "in": "query",
            "description": "Additional web app properties included in the response",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new web app or modifies an existing web app.",
        "description": "Creates a new web app or modifies an existing web app.",
        "operationId": "WebApps_CreateOrUpdate",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteEnvelope",
            "in": "body",
            "description": "Details of web app if it exists already",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          {
            "name": "skipDnsRegistration",
            "in": "query",
            "description": "If true web app hostname is not registered with DNS on creation. This parameter is\r\n            only used for app creation",
            "type": "boolean"
          },
          {
            "name": "skipCustomDomainVerification",
            "in": "query",
            "description": "If true, custom (non *.azurewebsites.net) domains associated with web app are not verified.",
            "type": "boolean"
          },
          {
            "name": "forceDnsRegistration",
            "in": "query",
            "description": "If true, web app hostname is force registered with DNS",
            "type": "boolean"
          },
          {
            "name": "ttlInSeconds",
            "in": "query",
            "description": "Time to live in seconds for web app's default domain name",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          "202": {
            "description": "Asynchronous operation in progress",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a web app",
        "description": "Deletes a web app",
        "operationId": "WebApps_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "deleteMetrics",
            "in": "query",
            "description": "If true, web app metrics are also deleted",
            "type": "boolean"
          },
          {
            "name": "deleteEmptyServerFarm",
            "in": "query",
            "description": "If true and App Service Plan is empty after web app deletion, App Service Plan is also deleted",
            "type": "boolean"
          },
          {
            "name": "skipDnsRegistration",
            "in": "query",
            "description": "If true, DNS registration is skipped",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/analyzeCustomHostname": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Analyze a custom hostname",
        "description": "Analyze a custom hostname",
        "operationId": "WebApps_AnalyzeCustomHostname",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "query",
            "description": "Custom hostname",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomHostnameAnalysisResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/applySlotConfig": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Applies the configuration settings from the target slot onto the current slot",
        "description": "Applies the configuration settings from the target slot onto the current slot",
        "operationId": "WebApps_ApplySlotConfigToProduction",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slotSwapEntity",
            "in": "body",
            "description": "Request body that contains the target slot name. Settings from that slot will be applied on the source slot",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmSlotEntity"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backup": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates web app backup",
        "description": "Creates web app backup",
        "operationId": "WebApps_Backup",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Information on backup request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItem"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Lists all available backups for web app",
        "description": "Lists all available backups for web app",
        "operationId": "WebApps_ListBackups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItemCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/discover": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Discovers existing web app backups that can be restored",
        "description": "Discovers existing web app backups that can be restored",
        "operationId": "WebApps_DiscoverRestore",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Information on restore request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestoreRequest"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets status of a web app backup that may be in progress.",
        "description": "Gets status of a web app backup that may be in progress.",
        "operationId": "WebApps_GetBackupStatus",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "Id of backup",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItem"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a backup from Azure Storage",
        "description": "Deletes a backup from Azure Storage",
        "operationId": "WebApps_DeleteBackup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "Id of backup",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItem"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets status of a web app backup that may be in progress, including secrets associated with the backup, such as the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is passed in the request body.",
        "description": "Gets status of a web app backup that may be in progress, including secrets associated with the backup, such as the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is passed in the request body.",
        "operationId": "WebApps_ListBackupStatusSecrets",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "Id of backup",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Information on backup request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItem"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}/restore": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Restores a web app",
        "description": "Restores a web app",
        "operationId": "WebApps_Restore",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "Id of backup to restore",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Information on restore request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestoreResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/appsettings": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the application settings of web app",
        "description": "Updates the application settings of web app",
        "operationId": "WebApps_UpdateApplicationSettings",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "appSettings",
            "in": "body",
            "description": "Application settings of web app",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StringDictionary"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StringDictionary"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/appsettings/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the application settings of web app",
        "description": "Gets the application settings of web app",
        "operationId": "WebApps_ListApplicationSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StringDictionary"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/authsettings": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the Authentication / Authorization settings associated with web app",
        "description": "Updates the Authentication / Authorization settings associated with web app",
        "operationId": "WebApps_UpdateAuthSettings",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteAuthSettings",
            "in": "body",
            "description": "Auth settings associated with web app",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteAuthSettings"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteAuthSettings"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/authsettings/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the Authentication / Authorization settings associated with web app",
        "description": "Gets the Authentication / Authorization settings associated with web app",
        "operationId": "WebApps_ListAuthSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteAuthSettings"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/backup": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates backup configuration of web app",
        "description": "Updates backup configuration of web app",
        "operationId": "WebApps_UpdateBackupConfiguration",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Information on backup request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Removes the backup configuration for a web app",
        "description": "Removes the backup configuration for a web app",
        "operationId": "WebApps_DeleteBackupConfiguration",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/backup/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the backup configuration for a web app",
        "description": "Gets the backup configuration for a web app",
        "operationId": "WebApps_GetBackupConfiguration",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/connectionstrings": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the connection strings associated with web app",
        "description": "Updates the connection strings associated with web app",
        "operationId": "WebApps_UpdateConnectionStrings",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionStrings",
            "in": "body",
            "description": "Connection strings associated with web app",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectionStringDictionary"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConnectionStringDictionary"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/connectionstrings/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the connection strings associated with web app",
        "description": "Gets the connection strings associated with web app",
        "operationId": "WebApps_ListConnectionStrings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConnectionStringDictionary"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/logs": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the web app logs configuration",
        "description": "Gets the web app logs configuration",
        "operationId": "WebApps_GetDiagnosticLogsConfiguration",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteLogsConfig"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the meta data for web app",
        "description": "Updates the meta data for web app",
        "operationId": "WebApps_UpdateDiagnosticLogsConfig",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteLogsConfig",
            "in": "body",
            "description": "Site logs configuration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteLogsConfig"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteLogsConfig"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/metadata": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the meta data for web app",
        "description": "Updates the meta data for web app",
        "operationId": "WebApps_UpdateMetadata",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "metadata",
            "in": "body",
            "description": "Meta data of web app",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StringDictionary"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StringDictionary"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/metadata/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the web app meta data.",
        "description": "Gets the web app meta data.",
        "operationId": "WebApps_ListMetadata",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StringDictionary"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/publishingcredentials/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the web app publishing credentials",
        "description": "Gets the web app publishing credentials",
        "operationId": "WebApps_ListPublishingCredentials",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/pushsettings": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the Push settings associated with web app",
        "description": "Updates the Push settings associated with web app",
        "operationId": "WebApps_UpdateSitePushSettings",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "pushSettings",
            "in": "body",
            "description": "Push settings associated with web app",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PushSettings"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PushSettings"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/pushsettings/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the Push settings associated with web app",
        "description": "Gets the Push settings associated with web app",
        "operationId": "WebApps_ListSitePushSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PushSettings"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/slotConfigNames": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the names of application settings and connection string that remain with the slot during swap operation",
        "description": "Gets the names of application settings and connection string that remain with the slot during swap operation",
        "operationId": "WebApps_ListSlotConfigurationNames",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SlotConfigNamesResource"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the names of application settings and connection string that remain with the slot during swap operation",
        "description": "Updates the names of application settings and connection string that remain with the slot during swap operation",
        "operationId": "WebApps_UpdateSlotConfigurationNames",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slotConfigNames",
            "in": "body",
            "description": "Request body containing the names of application settings and connection strings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SlotConfigNamesResource"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SlotConfigNamesResource"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the configuration of the web app",
        "description": "Gets the configuration of the web app",
        "operationId": "WebApps_GetConfiguration",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteConfig"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Update the configuration of web app",
        "description": "Update the configuration of web app",
        "operationId": "WebApps_CreateOrUpdateConfiguration",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteConfig",
            "in": "body",
            "description": "Request body that contains the configuraiton setting for the web app",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteConfig"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteConfig"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Update the configuration of web app",
        "description": "Update the configuration of web app",
        "operationId": "WebApps_UpdateConfiguration",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteConfig",
            "in": "body",
            "description": "Request body that contains the configuraiton setting for the web app",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteConfig"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteConfig"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List deployments",
        "description": "List deployments",
        "operationId": "WebApps_ListDeployments",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get the deployment",
        "description": "Get the deployment",
        "operationId": "WebApps_GetDeployment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the deployment",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Create a deployment",
        "description": "Create a deployment",
        "operationId": "WebApps_CreateDeployment",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the deployment",
            "required": true,
            "type": "string"
          },
          {
            "name": "deployment",
            "in": "body",
            "description": "Details of deployment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete the deployment",
        "description": "Delete the deployment",
        "operationId": "WebApps_DeleteDeployment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the deployment",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get web app hostname bindings",
        "description": "Get web app hostname bindings",
        "operationId": "WebApps_ListHostNameBindings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HostNameBindingCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get web app binding for a hostname",
        "description": "Get web app binding for a hostname",
        "operationId": "WebApps_GetHostNameBinding",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "path",
            "description": "Name of host",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HostNameBinding"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a web app hostname binding",
        "description": "Creates a web app hostname binding",
        "operationId": "WebApps_CreateOrUpdateHostNameBinding",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "path",
            "description": "Name of host",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostNameBinding",
            "in": "body",
            "description": "Host name binding information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HostNameBinding"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HostNameBinding"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a host name binding",
        "description": "Deletes a host name binding",
        "operationId": "WebApps_DeleteHostNameBinding",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "path",
            "description": "Name of host",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Retrieves a specific Service Bus Hybrid Connection used by this Web App.",
        "description": "Retrieves a specific Service Bus Hybrid Connection used by this Web App.",
        "operationId": "WebApps_GetHybridConnection",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace for this hybrid connection",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayName",
            "in": "path",
            "description": "The relay name for this hybrid connection",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HybridConnection"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new Hybrid Connection using a Service Bus relay",
        "description": "Creates a new Hybrid Connection using a Service Bus relay",
        "operationId": "WebApps_CreateOrUpdateHybridConnection",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace for this hybrid connection",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayName",
            "in": "path",
            "description": "The relay name for this hybrid connection",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The details of the hybrid connection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HybridConnection"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HybridConnection"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Removes a Hybrid Connection from this site.",
        "description": "Removes a Hybrid Connection from this site.",
        "operationId": "WebApps_DeleteHybridConnection",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace for this hybrid connection",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayName",
            "in": "path",
            "description": "The relay name for this hybrid connection",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new Hybrid Connection using a Service Bus relay",
        "description": "Creates a new Hybrid Connection using a Service Bus relay",
        "operationId": "WebApps_UpdateHybridConnection",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace for this hybrid connection",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayName",
            "in": "path",
            "description": "The relay name for this hybrid connection",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The details of the hybrid connection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HybridConnection"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HybridConnection"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}/listKeys": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the send key name and value for a Hybrid Connection",
        "description": "Gets the send key name and value for a Hybrid Connection",
        "operationId": "WebApps_ListHybridConnectionKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace for this hybrid connection",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayName",
            "in": "path",
            "description": "The relay name for this hybrid connection",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridConnectionRelays": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Retrieves all Service Bus Hybrid Connections used by this Web App.",
        "description": "Retrieves all Service Bus Hybrid Connections used by this Web App.",
        "operationId": "WebApps_ListHybridConnections",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HybridConnection"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Retrieves all Biztalk Hybrid Connections associated with this web app.",
        "description": "Retrieves all Biztalk Hybrid Connections associated with this web app.",
        "operationId": "WebApps_ListRelayServiceConnections",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Retrieves a Biztalk Hybrid Connection identified by its entity name.",
        "description": "Retrieves a Biztalk Hybrid Connection identified by its entity name.",
        "operationId": "WebApps_GetRelayServiceConnection",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "The name by which the Hybrid Connection is identified",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new association to a Biztalk Hybrid Connection, or updates an existing one.",
        "description": "Creates a new association to a Biztalk Hybrid Connection, or updates an existing one.",
        "operationId": "WebApps_CreateOrUpdateRelayServiceConnection",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "The name by which the Hybrid Connection is identified",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The details of the Hybrid Connection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Removes the association to a Biztalk Hybrid Connection, identified by its entity name.",
        "description": "Removes the association to a Biztalk Hybrid Connection, identified by its entity name.",
        "operationId": "WebApps_DeleteRelayServiceConnection",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "The name by which the Hybrid Connection is identified",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new association to a Biztalk Hybrid Connection, or updates an existing one.",
        "description": "Creates a new association to a Biztalk Hybrid Connection, or updates an existing one.",
        "operationId": "WebApps_UpdateRelayServiceConnection",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "The name by which the Hybrid Connection is identified",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The details of the Hybrid Connection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets all instance of a web app",
        "description": "Gets all instance of a web app",
        "operationId": "WebApps_ListInstanceIdentifiers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteInstanceCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/deployments": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List deployments",
        "description": "List deployments",
        "operationId": "WebApps_ListInstanceDeployments",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "Id of web app instance",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/deployments/{id}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get the deployment",
        "description": "Get the deployment",
        "operationId": "WebApps_GetInstanceDeployment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the deployment",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "Id of web app instance",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Create a deployment",
        "description": "Create a deployment",
        "operationId": "WebApps_CreateInstanceDeployment",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the deployment",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "Id of web app instance",
            "required": true,
            "type": "string"
          },
          {
            "name": "deployment",
            "in": "body",
            "description": "Details of deployment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete the deployment",
        "description": "Delete the deployment",
        "operationId": "WebApps_DeleteInstanceDeployment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the deployment",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "Id of web app instance",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/iscloneable": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new web app or modifies an existing web app.",
        "description": "Creates a new web app or modifies an existing web app.",
        "operationId": "WebApps_IsCloneable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteCloneability"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/metricdefinitions": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets metric definitions for web app",
        "description": "Gets metric definitions for web app",
        "operationId": "WebApps_ListMetricDefinitions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MetricDefinitionCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/metrics": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets metrics for web app",
        "description": "Gets metrics for web app",
        "operationId": "WebApps_ListMetrics",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "details",
            "in": "query",
            "description": "If true, metric details are included in response",
            "type": "boolean"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceMetricCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/migrate": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Restores a web app",
        "description": "Restores a web app",
        "operationId": "WebApps_MigrateStorage",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionName",
            "in": "query",
            "description": "Azure subscription",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "options",
            "in": "body",
            "description": "Migration options",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageMigrationOptions"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StorageMigrationResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/migratemysql": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Migrates a local (in-app) MySql database to a remote MySql database",
        "description": "Migrates a local (in-app) MySql database to a remote MySql database",
        "operationId": "WebApps_MigrateMySql",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "migrationRequestEnvelope",
            "in": "body",
            "description": "MySql migration options",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigrateMySqlRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkFeatures/{view}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Retrieves a view of all network features in use on this web app.",
        "description": "Retrieves a view of all network features in use on this web app.",
        "operationId": "WebApps_ListNetworkFeatures",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "view",
            "in": "path",
            "description": "The type of view. This can either be \"summary\" or \"detailed\".",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NetworkFeatures"
            }
          },
          "404": {
            "description": "The requested view does not exist."
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkTrace/start": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Start capturing network packets for the site",
        "description": "Start capturing network packets for the site",
        "operationId": "WebApps_StartWebSiteNetworkTrace",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "durationInSeconds",
            "in": "query",
            "description": "The duration to keep capturing in seconds",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkTrace/stop": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Stop ongoing capturing network packets for the site",
        "description": "Stop ongoing capturing network packets for the site",
        "operationId": "WebApps_StopWebSiteNetworkTrace",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/newpassword": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Generates new random app publishing password",
        "description": "Generates new random app publishing password",
        "operationId": "WebApps_GenerateNewSitePublishingPassword",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/operationresults/{operationId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the operation for a web app",
        "description": "Gets the operation for a web app",
        "operationId": "WebApps_GetOperation",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Id of an operation",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/perfcounters": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets perfmon counters for web app",
        "description": "Gets perfmon counters for web app",
        "operationId": "WebApps_ListPerfMonCounters",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PerfMonCounterCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/phplogging": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets sites's event logs",
        "description": "Gets sites's event logs",
        "operationId": "WebApps_GetSitePhpErrorLogFlag",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Object"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List premier add ons for web app",
        "description": "List premier add ons for web app",
        "operationId": "WebApps_ListPremierAddOns",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "web app name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a specific premier add on",
        "description": "Gets a specific premier add on",
        "operationId": "WebApps_GetPremierAddOn",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "web app name",
            "required": true,
            "type": "string"
          },
          {
            "name": "premierAddOnName",
            "in": "path",
            "description": "Premier add on",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Add premier add-on",
        "description": "Add premier add-on",
        "operationId": "WebApps_AddPremierAddOn",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "web app name",
            "required": true,
            "type": "string"
          },
          {
            "name": "premierAddOnName",
            "in": "path",
            "description": "Premier add on",
            "required": true,
            "type": "string"
          },
          {
            "name": "premierAddOn",
            "in": "body",
            "description": "Premier add on request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PremierAddOnRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete premier add-on",
        "description": "Delete premier add-on",
        "operationId": "WebApps_DeletePremierAddOn",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "web app name",
            "required": true,
            "type": "string"
          },
          {
            "name": "premierAddOnName",
            "in": "path",
            "description": "Premier add on",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publishxml": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the publishing profile for web app",
        "description": "Gets the publishing profile for web app",
        "operationId": "WebApps_ListPublishingProfileXmlWithSecrets",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "options",
            "in": "body",
            "description": "Specifies options for publishing profile. Pass CsmPublishingProfileOptions.Format=FileZilla3 for FileZilla FTP format.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmPublishingProfileOptions"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/recover": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Recovers a deleted web app",
        "description": "Recovers a deleted web app",
        "operationId": "WebApps_Recover",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "recoveryEntity",
            "in": "body",
            "description": "Snapshot data used for web app recovery. Snapshot information can be obtained by calling GetDeletedSites or GetSiteSnapshots API.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmSiteRecoveryEntity"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoverResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/resetSlotConfig": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Resets the configuration settings of the current slot if they were previously modified by calling ApplySlotConfig API",
        "description": "Resets the configuration settings of the current slot if they were previously modified by calling ApplySlotConfig API",
        "operationId": "WebApps_ResetProductionSlotConfig",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/restart": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Restarts web app",
        "description": "Restarts web app",
        "operationId": "WebApps_Restart",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "softRestart",
            "in": "query",
            "description": "Soft restart applies the configuration settings and restarts the app if necessary. Hard restart always restarts and reprovisions the app",
            "type": "boolean"
          },
          {
            "name": "synchronous",
            "in": "query",
            "description": "If true then the API will block until the app has been restarted",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets all the slots for a web apps",
        "description": "Gets all the slots for a web apps",
        "operationId": "WebApps_ListSlots",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "propertiesToInclude",
            "in": "query",
            "description": "List of app properties to include in the response",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebAppCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get details of a web app",
        "description": "Get details of a web app",
        "operationId": "WebApps_GetSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "propertiesToInclude",
            "in": "query",
            "description": "Additional web app properties included in the response",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new web app or modifies an existing web app.",
        "description": "Creates a new web app or modifies an existing web app.",
        "operationId": "WebApps_CreateOrUpdateSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteEnvelope",
            "in": "body",
            "description": "Details of web app if it exists already",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "skipDnsRegistration",
            "in": "query",
            "description": "If true web app hostname is not registered with DNS on creation. This parameter is\r\n            only used for app creation",
            "type": "boolean"
          },
          {
            "name": "skipCustomDomainVerification",
            "in": "query",
            "description": "If true, custom (non *.azurewebsites.net) domains associated with web app are not verified.",
            "type": "boolean"
          },
          {
            "name": "forceDnsRegistration",
            "in": "query",
            "description": "If true, web app hostname is force registered with DNS",
            "type": "boolean"
          },
          {
            "name": "ttlInSeconds",
            "in": "query",
            "description": "Time to live in seconds for web app's default domain name",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          "202": {
            "description": "Asynchronous operation in progress",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a web app",
        "description": "Deletes a web app",
        "operationId": "WebApps_DeleteSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deleteMetrics",
            "in": "query",
            "description": "If true, web app metrics are also deleted",
            "type": "boolean"
          },
          {
            "name": "deleteEmptyServerFarm",
            "in": "query",
            "description": "If true and App Service Plan is empty after web app deletion, App Service Plan is also deleted",
            "type": "boolean"
          },
          {
            "name": "skipDnsRegistration",
            "in": "query",
            "description": "If true, DNS registration is skipped",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/analyzeCustomHostname": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Analyze a custom hostname",
        "description": "Analyze a custom hostname",
        "operationId": "WebApps_AnalyzeCustomHostnameSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "query",
            "description": "Custom hostname",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomHostnameAnalysisResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/applySlotConfig": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Applies the configuration settings from the target slot onto the current slot",
        "description": "Applies the configuration settings from the target slot onto the current slot",
        "operationId": "WebApps_ApplySlotConfigurationSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slotSwapEntity",
            "in": "body",
            "description": "Request body that contains the target slot name. Settings from that slot will be applied on the source slot",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmSlotEntity"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the source slot. Settings from the target slot will be applied onto this slot",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backup": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates web app backup",
        "description": "Creates web app backup",
        "operationId": "WebApps_BackupSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Information on backup request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItem"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Lists all available backups for web app",
        "description": "Lists all available backups for web app",
        "operationId": "WebApps_ListBackupsSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItemCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/discover": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Discovers existing web app backups that can be restored",
        "description": "Discovers existing web app backups that can be restored",
        "operationId": "WebApps_DiscoverRestoreSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Information on restore request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreRequest"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestoreRequest"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets status of a web app backup that may be in progress.",
        "description": "Gets status of a web app backup that may be in progress.",
        "operationId": "WebApps_GetBackupStatusSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "Id of backup",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItem"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a backup from Azure Storage",
        "description": "Deletes a backup from Azure Storage",
        "operationId": "WebApps_DeleteBackupSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "Id of backup",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItem"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets status of a web app backup that may be in progress, including secrets associated with the backup, such as the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is passed in the request body.",
        "description": "Gets status of a web app backup that may be in progress, including secrets associated with the backup, such as the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is passed in the request body.",
        "operationId": "WebApps_ListBackupStatusSecretsSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "Id of backup",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Information on backup request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupItem"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}/restore": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Restores a web app",
        "description": "Restores a web app",
        "operationId": "WebApps_RestoreSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "Id of backup to restore",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Information on restore request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreRequest"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RestoreResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/appsettings": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the application settings of web app",
        "description": "Updates the application settings of web app",
        "operationId": "WebApps_UpdateApplicationSettingsSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "appSettings",
            "in": "body",
            "description": "Application settings of web app",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StringDictionary"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StringDictionary"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/appsettings/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the application settings of web app",
        "description": "Gets the application settings of web app",
        "operationId": "WebApps_ListApplicationSettingsSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StringDictionary"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/authsettings": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the Authentication / Authorization settings associated with web app",
        "description": "Updates the Authentication / Authorization settings associated with web app",
        "operationId": "WebApps_UpdateAuthSettingsSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteAuthSettings",
            "in": "body",
            "description": "Auth settings associated with web app",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteAuthSettings"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteAuthSettings"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/authsettings/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the Authentication / Authorization settings associated with web app",
        "description": "Gets the Authentication / Authorization settings associated with web app",
        "operationId": "WebApps_ListAuthSettingsSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteAuthSettings"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/backup": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates backup configuration of web app",
        "description": "Updates backup configuration of web app",
        "operationId": "WebApps_UpdateBackupConfigurationSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Information on backup request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Removes the backup configuration for a web app",
        "description": "Removes the backup configuration for a web app",
        "operationId": "WebApps_DeleteBackupConfigurationSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/backup/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the backup configuration for a web app",
        "description": "Gets the backup configuration for a web app",
        "operationId": "WebApps_GetBackupConfigurationSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/connectionstrings": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the connection strings associated with web app",
        "description": "Updates the connection strings associated with web app",
        "operationId": "WebApps_UpdateConnectionStringsSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionStrings",
            "in": "body",
            "description": "Connection strings associated with web app",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectionStringDictionary"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConnectionStringDictionary"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/connectionstrings/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the connection strings associated with web app",
        "description": "Gets the connection strings associated with web app",
        "operationId": "WebApps_ListConnectionStringsSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConnectionStringDictionary"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/logs": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the web app logs configuration",
        "description": "Gets the web app logs configuration",
        "operationId": "WebApps_GetDiagnosticLogsConfigurationSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteLogsConfig"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the meta data for web app",
        "description": "Updates the meta data for web app",
        "operationId": "WebApps_UpdateDiagnosticLogsConfigSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteLogsConfig",
            "in": "body",
            "description": "Site logs configuration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteLogsConfig"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteLogsConfig"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/metadata": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the meta data for web app",
        "description": "Updates the meta data for web app",
        "operationId": "WebApps_UpdateMetadataSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "metadata",
            "in": "body",
            "description": "Meta data of web app",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StringDictionary"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StringDictionary"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/metadata/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the web app meta data.",
        "description": "Gets the web app meta data.",
        "operationId": "WebApps_ListMetadataSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StringDictionary"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/publishingcredentials/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the web app publishing credentials",
        "description": "Gets the web app publishing credentials",
        "operationId": "WebApps_ListPublishingCredentialsSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/pushsettings": {
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the Push settings associated with web app",
        "description": "Updates the Push settings associated with web app",
        "operationId": "WebApps_UpdateSitePushSettingsSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "pushSettings",
            "in": "body",
            "description": "Push settings associated with web app",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PushSettings"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PushSettings"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/pushsettings/list": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the Push settings associated with web app",
        "description": "Gets the Push settings associated with web app",
        "operationId": "WebApps_ListSitePushSettingsSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PushSettings"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the configuration of the web app",
        "description": "Gets the configuration of the web app",
        "operationId": "WebApps_GetConfigurationSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteConfig"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Update the configuration of web app",
        "description": "Update the configuration of web app",
        "operationId": "WebApps_CreateOrUpdateConfigurationSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteConfig",
            "in": "body",
            "description": "Request body that contains the configuraiton setting for the web app",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteConfig"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteConfig"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Update the configuration of web app",
        "description": "Update the configuration of web app",
        "operationId": "WebApps_UpdateConfigurationSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteConfig",
            "in": "body",
            "description": "Request body that contains the configuraiton setting for the web app",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteConfig"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteConfig"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List deployments",
        "description": "List deployments",
        "operationId": "WebApps_ListDeploymentsSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get the deployment",
        "description": "Get the deployment",
        "operationId": "WebApps_GetDeploymentSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the deployment",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Create a deployment",
        "description": "Create a deployment",
        "operationId": "WebApps_CreateDeploymentSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the deployment",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deployment",
            "in": "body",
            "description": "Details of deployment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete the deployment",
        "description": "Delete the deployment",
        "operationId": "WebApps_DeleteDeploymentSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the deployment",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get web app hostname bindings",
        "description": "Get web app hostname bindings",
        "operationId": "WebApps_ListHostNameBindingsSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HostNameBindingCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings/{hostName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get web app binding for a hostname",
        "description": "Get web app binding for a hostname",
        "operationId": "WebApps_GetHostNameBindingSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "path",
            "description": "Name of host",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HostNameBinding"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a web app hostname binding",
        "description": "Creates a web app hostname binding",
        "operationId": "WebApps_CreateOrUpdateHostNameBindingSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "path",
            "description": "Name of host",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostNameBinding",
            "in": "body",
            "description": "Host name binding information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HostNameBinding"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HostNameBinding"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Deletes a host name binding",
        "description": "Deletes a host name binding",
        "operationId": "WebApps_DeleteHostNameBindingSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "path",
            "description": "Name of host",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Retrieves a specific Service Bus Hybrid Connection used by this Web App.",
        "description": "Retrieves a specific Service Bus Hybrid Connection used by this Web App.",
        "operationId": "WebApps_GetHybridConnectionSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace for this hybrid connection",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayName",
            "in": "path",
            "description": "The relay name for this hybrid connection",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for the web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HybridConnection"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new Hybrid Connection using a Service Bus relay",
        "description": "Creates a new Hybrid Connection using a Service Bus relay",
        "operationId": "WebApps_CreateOrUpdateHybridConnectionSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace for this hybrid connection",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayName",
            "in": "path",
            "description": "The relay name for this hybrid connection",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The details of the hybrid connection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HybridConnection"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for the web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HybridConnection"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Removes a Hybrid Connection from this site.",
        "description": "Removes a Hybrid Connection from this site.",
        "operationId": "WebApps_DeleteHybridConnectionSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace for this hybrid connection",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayName",
            "in": "path",
            "description": "The relay name for this hybrid connection",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for the web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new Hybrid Connection using a Service Bus relay",
        "description": "Creates a new Hybrid Connection using a Service Bus relay",
        "operationId": "WebApps_UpdateHybridConnectionSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace for this hybrid connection",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayName",
            "in": "path",
            "description": "The relay name for this hybrid connection",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The details of the hybrid connection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HybridConnection"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for the web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HybridConnection"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}/listKeys": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the send key name and value for a Hybrid Connection",
        "description": "Gets the send key name and value for a Hybrid Connection",
        "operationId": "WebApps_ListHybridConnectionKeysSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace for this hybrid connection",
            "required": true,
            "type": "string"
          },
          {
            "name": "relayName",
            "in": "path",
            "description": "The relay name for this hybrid connection",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for the web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridConnectionRelays": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Retrieves all Service Bus Hybrid Connections used by this Web App.",
        "description": "Retrieves all Service Bus Hybrid Connections used by this Web App.",
        "operationId": "WebApps_ListHybridConnectionsSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for the web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HybridConnection"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Retrieves all Biztalk Hybrid Connections associated with this web app.",
        "description": "Retrieves all Biztalk Hybrid Connections associated with this web app.",
        "operationId": "WebApps_ListRelayServiceConnectionsSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for the web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Retrieves a Biztalk Hybrid Connection identified by its entity name.",
        "description": "Retrieves a Biztalk Hybrid Connection identified by its entity name.",
        "operationId": "WebApps_GetRelayServiceConnectionSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "The name by which the Hybrid Connection is identified",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for the web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new association to a Biztalk Hybrid Connection, or updates an existing one.",
        "description": "Creates a new association to a Biztalk Hybrid Connection, or updates an existing one.",
        "operationId": "WebApps_CreateOrUpdateRelayServiceConnectionSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "The name by which the Hybrid Connection is identified",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The details of the Hybrid Connection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for the web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Removes the association to a Biztalk Hybrid Connection, identified by its entity name.",
        "description": "Removes the association to a Biztalk Hybrid Connection, identified by its entity name.",
        "operationId": "WebApps_DeleteRelayServiceConnectionSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "The name by which the Hybrid Connection is identified",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for the web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new association to a Biztalk Hybrid Connection, or updates an existing one.",
        "description": "Creates a new association to a Biztalk Hybrid Connection, or updates an existing one.",
        "operationId": "WebApps_UpdateRelayServiceConnectionSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityName",
            "in": "path",
            "description": "The name by which the Hybrid Connection is identified",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The details of the Hybrid Connection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for the web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RelayServiceConnectionEntity"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets all instance of a web app",
        "description": "Gets all instance of a web app",
        "operationId": "WebApps_ListInstanceIdentifiersSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteInstanceCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/deployments": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List deployments",
        "description": "List deployments",
        "operationId": "WebApps_ListInstanceDeploymentsSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "Id of web app instance",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/deployments/{id}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get the deployment",
        "description": "Get the deployment",
        "operationId": "WebApps_GetInstanceDeploymentSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the deployment",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "Id of web app instance",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Create a deployment",
        "description": "Create a deployment",
        "operationId": "WebApps_CreateInstanceDeploymentSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the deployment",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "Id of web app instance",
            "required": true,
            "type": "string"
          },
          {
            "name": "deployment",
            "in": "body",
            "description": "Details of deployment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete the deployment",
        "description": "Delete the deployment",
        "operationId": "WebApps_DeleteInstanceDeploymentSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the deployment",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "Id of web app instance",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/iscloneable": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Creates a new web app or modifies an existing web app.",
        "description": "Creates a new web app or modifies an existing web app.",
        "operationId": "WebApps_IsCloneableSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteCloneability"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/metricdefinitions": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets metric definitions for web app",
        "description": "Gets metric definitions for web app",
        "operationId": "WebApps_ListMetricDefinitionsSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MetricDefinitionCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/metrics": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets metrics for web app",
        "description": "Gets metrics for web app",
        "operationId": "WebApps_ListMetricsSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "details",
            "in": "query",
            "description": "If true, metric details are included in response",
            "type": "boolean"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceMetricCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkFeatures/{view}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Retrieves a view of all network features in use on this web app.",
        "description": "Retrieves a view of all network features in use on this web app.",
        "operationId": "WebApps_ListNetworkFeaturesSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "view",
            "in": "path",
            "description": "The type of view. This can either be \"summary\" or \"detailed\".",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for this web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NetworkFeatures"
            }
          },
          "404": {
            "description": "The requested view does not exist."
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkTrace/start": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Start capturing network packets for the site",
        "description": "Start capturing network packets for the site",
        "operationId": "WebApps_StartWebSiteNetworkTraceSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "durationInSeconds",
            "in": "query",
            "description": "The duration to keep capturing in seconds",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for this web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkTrace/stop": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Stop ongoing capturing network packets for the site",
        "description": "Stop ongoing capturing network packets for the site",
        "operationId": "WebApps_StopWebSiteNetworkTraceSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for this web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/newpassword": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Generates new random app publishing password",
        "description": "Generates new random app publishing password",
        "operationId": "WebApps_GenerateNewSitePublishingPasswordSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/operationresults/{operationId}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the operation for a web app",
        "description": "Gets the operation for a web app",
        "operationId": "WebApps_GetOperationSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Id of an operation",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/perfcounters": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets perfmon counters for web app",
        "description": "Gets perfmon counters for web app",
        "operationId": "WebApps_ListPerfMonCountersSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot. **** CURRENTLY UNUSED *****",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PerfMonCounterCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/phplogging": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets sites's event logs",
        "description": "Gets sites's event logs",
        "operationId": "WebApps_GetSitePhpErrorLogFlagSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Object"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "List premier add ons for web app",
        "description": "List premier add ons for web app",
        "operationId": "WebApps_ListPremierAddOnsSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "web app name",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "web app slot name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets a specific premier add on",
        "description": "Gets a specific premier add on",
        "operationId": "WebApps_GetPremierAddOnSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "web app name",
            "required": true,
            "type": "string"
          },
          {
            "name": "premierAddOnName",
            "in": "path",
            "description": "Premier add on",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "web app slot name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Add premier add-on",
        "description": "Add premier add-on",
        "operationId": "WebApps_AddPremierAddOnSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "web app name",
            "required": true,
            "type": "string"
          },
          {
            "name": "premierAddOnName",
            "in": "path",
            "description": "Premier add on",
            "required": true,
            "type": "string"
          },
          {
            "name": "premierAddOn",
            "in": "body",
            "description": "Premier add on request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PremierAddOnRequest"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "web app slot name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete premier add-on",
        "description": "Delete premier add-on",
        "operationId": "WebApps_DeletePremierAddOnSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "web app name",
            "required": true,
            "type": "string"
          },
          {
            "name": "premierAddOnName",
            "in": "path",
            "description": "Premier add on",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "web app slot name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publishxml": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the publishing profile for web app",
        "description": "Gets the publishing profile for web app",
        "operationId": "WebApps_ListPublishingProfileXmlWithSecretsSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "options",
            "in": "body",
            "description": "Specifies options for publishing profile. Pass CsmPublishingProfileOptions.Format=FileZilla3 for FileZilla FTP format.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmPublishingProfileOptions"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/recover": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Recovers a deleted web app",
        "description": "Recovers a deleted web app",
        "operationId": "WebApps_RecoverSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "recoveryEntity",
            "in": "body",
            "description": "Snapshot data used for web app recovery. Snapshot information can be obtained by calling GetDeletedSites or GetSiteSnapshots API.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmSiteRecoveryEntity"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoverResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/resetSlotConfig": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Resets the configuration settings of the current slot if they were previously modified by calling ApplySlotConfig API",
        "description": "Resets the configuration settings of the current slot if they were previously modified by calling ApplySlotConfig API",
        "operationId": "WebApps_ResetSlotConfigurationSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/restart": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Restarts web app",
        "description": "Restarts web app",
        "operationId": "WebApps_RestartSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "softRestart",
            "in": "query",
            "description": "Soft restart applies the configuration settings and restarts the app if necessary. Hard restart always restarts and reprovisions the app",
            "type": "boolean"
          },
          {
            "name": "synchronous",
            "in": "query",
            "description": "If true then the API will block until the app has been restarted",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/slotsdiffs": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get the difference in configuration settings between two web app slots",
        "description": "Get the difference in configuration settings between two web app slots",
        "operationId": "WebApps_GetSlotsDifferencesSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slotSwapEntity",
            "in": "body",
            "description": "Request body that contains the target slot name",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmSlotEntity"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of the source slot",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SlotDifferenceCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/slotsswap": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Swaps web app slots",
        "description": "Swaps web app slots",
        "operationId": "WebApps_SwapSlotsSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slotSwapEntity",
            "in": "body",
            "description": "Request body that contains the target slot name",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmSlotEntity"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of source slot for the swap",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "202": {
            "description": "Operation is in progress",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/snapshots": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Returns all Snapshots to the user.",
        "description": "Returns all Snapshots to the user.",
        "operationId": "WebApps_ListSnapshotsSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Website Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Website Slot",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SnapshotCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get the source control configuration of web app",
        "description": "Get the source control configuration of web app",
        "operationId": "WebApps_GetSourceControlSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Update the source control configuration of web app",
        "description": "Update the source control configuration of web app",
        "operationId": "WebApps_CreateOrUpdateSourceControlSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteSourceControl",
            "in": "body",
            "description": "Request body that contains the source control parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete source control configuration of web app",
        "description": "Delete source control configuration of web app",
        "operationId": "WebApps_DeleteSourceControlSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Update the source control configuration of web app",
        "description": "Update the source control configuration of web app",
        "operationId": "WebApps_UpdateSourceControlSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteSourceControl",
            "in": "body",
            "description": "Request body that contains the source control parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/start": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Starts web app",
        "description": "Starts web app",
        "operationId": "WebApps_StartSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/stop": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Stops web app",
        "description": "Stops web app",
        "operationId": "WebApps_StopSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sync": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Sync web app repository",
        "description": "Sync web app repository",
        "operationId": "WebApps_SyncRepositorySlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/usages": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the quota usage numbers for web app",
        "description": "Gets the quota usage numbers for web app",
        "operationId": "WebApps_ListUsagesSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Return only usages specified in the filter. Filter is specified by using OData syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CsmUsageQuotaCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Retrieves a list of all Virtual Network Connections associated with this web app.",
        "description": "Retrieves a list of all Virtual Network Connections associated with this web app.",
        "operationId": "WebApps_ListVnetConnectionsSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for this web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VnetInfo"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Retrieves a specific Virtual Network Connection associated with this web app.",
        "description": "Retrieves a specific Virtual Network Connection associated with this web app.",
        "operationId": "WebApps_GetVnetConnectionSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "The name of the Virtual Network",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for this web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VnetInfo"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Adds a Virtual Network Connection or updates it's properties.",
        "description": "Adds a Virtual Network Connection or updates it's properties.",
        "operationId": "WebApps_CreateOrUpdateVnetConnectionSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "The name of the Virtual Network",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The properties of this Virtual Network Connection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VnetInfo"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for this web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VnetInfo"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Removes the specified Virtual Network Connection association from this web app.",
        "description": "Removes the specified Virtual Network Connection association from this web app.",
        "operationId": "WebApps_DeleteVnetConnectionSlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "The name of the Virtual Network",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for this web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Adds a Virtual Network Connection or updates it's properties.",
        "description": "Adds a Virtual Network Connection or updates it's properties.",
        "operationId": "WebApps_UpdateVnetConnectionSlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "The name of the Virtual Network",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The properties of this Virtual Network Connection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VnetInfo"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for this web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VnetInfo"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Retrieves a Virtual Network connection gateway associated with this web app and virtual network.",
        "description": "Retrieves a Virtual Network connection gateway associated with this web app and virtual network.",
        "operationId": "WebApps_GetVnetConnectionGatewaySlot",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "The name of the Virtual Network",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of the gateway. The only gateway that exists presently is \"primary\"",
            "required": true,
            "type": "string"
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for this web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "404": {
            "description": "Gateway does not exist. Only the \"primary\" gateway exists presently."
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the Virtual Network Gateway.",
        "description": "Updates the Virtual Network Gateway.",
        "operationId": "WebApps_CreateOrUpdateVnetConnectionGatewaySlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "The name of the Virtual Network",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of the gateway. The only gateway that exists presently is \"primary\"",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The properties to update this gateway with.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VnetGateway"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for this web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VnetGateway"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the Virtual Network Gateway.",
        "description": "Updates the Virtual Network Gateway.",
        "operationId": "WebApps_UpdateVnetConnectionGatewaySlot",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "The name of the Virtual Network",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of the gateway. The only gateway that exists presently is \"primary\"",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The properties to update this gateway with.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VnetGateway"
            }
          },
          {
            "name": "slot",
            "in": "path",
            "description": "The name of the slot for this web app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VnetGateway"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slotsdiffs": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get the difference in configuration settings between two web app slots",
        "description": "Get the difference in configuration settings between two web app slots",
        "operationId": "WebApps_GetSlotsDifferencesFromProduction",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slotSwapEntity",
            "in": "body",
            "description": "Request body that contains the target slot name",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmSlotEntity"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SlotDifferenceCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slotsswap": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Swaps web app slots",
        "description": "Swaps web app slots",
        "operationId": "WebApps_SwapSlotWithProduction",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "slotSwapEntity",
            "in": "body",
            "description": "Request body that contains the target slot name",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CsmSlotEntity"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "202": {
            "description": "Operation is in progress",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/snapshots": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Returns all Snapshots to the user.",
        "description": "Returns all Snapshots to the user.",
        "operationId": "WebApps_ListSnapshots",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Website Name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SnapshotCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Get the source control configuration of web app",
        "description": "Get the source control configuration of web app",
        "operationId": "WebApps_GetSourceControl",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Update the source control configuration of web app",
        "description": "Update the source control configuration of web app",
        "operationId": "WebApps_CreateOrUpdateSourceControl",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteSourceControl",
            "in": "body",
            "description": "Request body that contains the source control parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Delete source control configuration of web app",
        "description": "Delete source control configuration of web app",
        "operationId": "WebApps_DeleteSourceControl",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Update the source control configuration of web app",
        "description": "Update the source control configuration of web app",
        "operationId": "WebApps_UpdateSourceControl",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteSourceControl",
            "in": "body",
            "description": "Request body that contains the source control parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteSourceControl"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/start": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Starts web app",
        "description": "Starts web app",
        "operationId": "WebApps_Start",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/stop": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Stops web app",
        "description": "Stops web app",
        "operationId": "WebApps_Stop",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sync": {
      "post": {
        "tags": [
          "WebApps"
        ],
        "summary": "Sync web app repository",
        "description": "Sync web app repository",
        "operationId": "WebApps_SyncRepository",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/usages": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Gets the quota usage numbers for web app",
        "description": "Gets the quota usage numbers for web app",
        "operationId": "WebApps_ListUsages",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of resource group",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Return only usages specified in the filter. Filter is specified by using OData syntax. Example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CsmUsageQuotaCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Retrieves a list of all Virtual Network Connections associated with this web app.",
        "description": "Retrieves a list of all Virtual Network Connections associated with this web app.",
        "operationId": "WebApps_ListVnetConnections",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VnetInfo"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Retrieves a specific Virtual Network Connection associated with this web app.",
        "description": "Retrieves a specific Virtual Network Connection associated with this web app.",
        "operationId": "WebApps_GetVnetConnection",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "The name of the Virtual Network",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VnetInfo"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Adds a Virtual Network Connection or updates it's properties.",
        "description": "Adds a Virtual Network Connection or updates it's properties.",
        "operationId": "WebApps_CreateOrUpdateVnetConnection",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "The name of the Virtual Network",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The properties of this Virtual Network Connection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VnetInfo"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VnetInfo"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WebApps"
        ],
        "summary": "Removes the specified Virtual Network Connection association from this web app.",
        "description": "Removes the specified Virtual Network Connection association from this web app.",
        "operationId": "WebApps_DeleteVnetConnection",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "The name of the Virtual Network",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Adds a Virtual Network Connection or updates it's properties.",
        "description": "Adds a Virtual Network Connection or updates it's properties.",
        "operationId": "WebApps_UpdateVnetConnection",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "The name of the Virtual Network",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The properties of this Virtual Network Connection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VnetInfo"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VnetInfo"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}": {
      "get": {
        "tags": [
          "WebApps"
        ],
        "summary": "Retrieves a Virtual Network connection gateway associated with this web app and virtual network.",
        "description": "Retrieves a Virtual Network connection gateway associated with this web app and virtual network.",
        "operationId": "WebApps_GetVnetConnectionGateway",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "The name of the Virtual Network",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of the gateway. The only gateway that exists presently is \"primary\"",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "404": {
            "description": "Gateway does not exist. Only the \"primary\" gateway exists presently."
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the Virtual Network Gateway.",
        "description": "Updates the Virtual Network Gateway.",
        "operationId": "WebApps_CreateOrUpdateVnetConnectionGateway",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "The name of the Virtual Network",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of the gateway. The only gateway that exists presently is \"primary\"",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The properties to update this gateway with.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VnetGateway"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VnetGateway"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "WebApps"
        ],
        "summary": "Updates the Virtual Network Gateway.",
        "description": "Updates the Virtual Network Gateway.",
        "operationId": "WebApps_UpdateVnetConnectionGateway",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the web app",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnetName",
            "in": "path",
            "description": "The name of the Virtual Network",
            "required": true,
            "type": "string"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of the gateway. The only gateway that exists presently is \"primary\"",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectionEnvelope",
            "in": "body",
            "description": "The properties to update this gateway with.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VnetGateway"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VnetGateway"
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "Address": {
      "description": "Address information for domain registration",
      "type": "object",
      "properties": {
        "address1": {
          "description": "Address 1",
          "type": "string"
        },
        "address2": {
          "description": "Address 2",
          "type": "string"
        },
        "city": {
          "description": "City",
          "type": "string"
        },
        "country": {
          "description": "Country",
          "type": "string"
        },
        "postalCode": {
          "description": "Postal code",
          "type": "string"
        },
        "state": {
          "description": "State",
          "type": "string"
        }
      }
    },
    "ApiDefinitionInfo": {
      "description": "Information about the formal API definition for the web app.",
      "type": "object",
      "properties": {
        "url": {
          "description": "The URL of the API definition.",
          "type": "string"
        }
      }
    },
    "AppServiceCertificate": {
      "description": "Class representing the Key Vault container for certificate purchased through Azure",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "keyVaultId": {
              "description": "Key Vault Csm resource Id",
              "type": "string"
            },
            "keyVaultSecretName": {
              "description": "Key Vault secret name",
              "type": "string"
            },
            "provisioningState": {
              "description": "Status of the Key Vault secret",
              "enum": [
                "Initialized",
                "WaitingOnCertificateOrder",
                "Succeeded",
                "CertificateOrderFailed",
                "OperationNotPermittedOnKeyVault",
                "AzureServiceUnauthorizedToAccessKeyVault",
                "KeyVaultDoesNotExist",
                "KeyVaultSecretDoesNotExist",
                "UnknownError",
                "ExternalPrivateKey",
                "Unknown"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "KeyVaultSecretStatus",
                "modelAsString": false
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "AppServiceCertificateOrder": {
      "description": "Certificate purchase order",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "certificates": {
              "description": "State of the Key Vault secret",
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/AppServiceCertificate"
              }
            },
            "distinguishedName": {
              "description": "Certificate distinguished name",
              "type": "string"
            },
            "domainVerificationToken": {
              "description": "Domain Verification Token",
              "type": "string"
            },
            "validityInYears": {
              "format": "int32",
              "description": "Duration in years (must be between 1 and 3)",
              "type": "integer"
            },
            "keySize": {
              "format": "int32",
              "description": "Certificate Key Size",
              "type": "integer"
            },
            "productType": {
              "description": "Certificate product type",
              "enum": [
                "StandardDomainValidatedSsl",
                "StandardDomainValidatedWildCardSsl"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "CertificateProductType",
                "modelAsString": false
              }
            },
            "autoRenew": {
              "description": "Auto renew",
              "type": "boolean"
            },
            "provisioningState": {
              "description": "Status of certificate order",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "InProgress",
                "Deleting"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": false
              }
            },
            "status": {
              "description": "Current order status",
              "enum": [
                "Pendingissuance",
                "Issued",
                "Revoked",
                "Canceled",
                "Denied",
                "Pendingrevocation",
                "PendingRekey",
                "Unused",
                "Expired",
                "NotSubmitted"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "CertificateOrderStatus",
                "modelAsString": false
              }
            },
            "signedCertificate": {
              "$ref": "#/definitions/CertificateDetails",
              "description": "Signed certificate"
            },
            "csr": {
              "description": "Last CSR that was created for this order",
              "type": "string"
            },
            "intermediate": {
              "$ref": "#/definitions/CertificateDetails",
              "description": "Intermediate certificate"
            },
            "root": {
              "$ref": "#/definitions/CertificateDetails",
              "description": "Root certificate"
            },
            "serialNumber": {
              "description": "Current serial number of the certificate",
              "type": "string"
            },
            "lastCertificateIssuanceTime": {
              "format": "date-time",
              "description": "Certificate last issuance time",
              "type": "string"
            },
            "expirationTime": {
              "format": "date-time",
              "description": "Certificate expiration time",
              "type": "string"
            },
            "isPrivateKeyExternal": {
              "description": "Is Private Key External",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "AppServiceEnvironment": {
      "description": "Description of an hostingEnvironment (App Service Environment)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "required": [
            "status"
          ],
          "properties": {
            "name": {
              "description": "Name of the hostingEnvironment (App Service Environment)",
              "type": "string"
            },
            "location": {
              "description": "Location of the hostingEnvironment (App Service Environment), e.g. \"West US\"",
              "type": "string"
            },
            "provisioningState": {
              "description": "Provisioning state of the hostingEnvironment (App Service Environment)",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "InProgress",
                "Deleting"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": false
              }
            },
            "status": {
              "description": "Current status of the hostingEnvironment (App Service Environment)",
              "enum": [
                "Preparing",
                "Ready",
                "Scaling",
                "Deleting"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "HostingEnvironmentStatus",
                "modelAsString": false
              }
            },
            "vnetName": {
              "description": "Name of the hostingEnvironment's (App Service Environment) virtual network",
              "type": "string"
            },
            "vnetResourceGroupName": {
              "description": "Resource group of the hostingEnvironment's (App Service Environment) virtual network",
              "type": "string"
            },
            "vnetSubnetName": {
              "description": "Subnet of the hostingEnvironment's (App Service Environment) virtual network",
              "type": "string"
            },
            "virtualNetwork": {
              "$ref": "#/definitions/VirtualNetworkProfile",
              "description": "Description of the hostingEnvironment's (App Service Environment) virtual network"
            },
            "internalLoadBalancingMode": {
              "description": "Specifies which endpoints to serve internally in the hostingEnvironment's (App Service Environment) VNET",
              "enum": [
                "None",
                "Web",
                "Publishing"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "InternalLoadBalancingMode",
                "modelAsString": false
              }
            },
            "multiSize": {
              "description": "Front-end VM size, e.g. \"Medium\", \"Large\"",
              "type": "string"
            },
            "multiRoleCount": {
              "format": "int32",
              "description": "Number of front-end instances",
              "type": "integer"
            },
            "workerPools": {
              "description": "Description of worker pools with worker size ids, VM sizes, and number of workers in each pool",
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkerPool"
              }
            },
            "ipsslAddressCount": {
              "format": "int32",
              "description": "Number of IP SSL addresses reserved for this hostingEnvironment (App Service Environment)",
              "type": "integer"
            },
            "databaseEdition": {
              "description": "Edition of the metadata database for the hostingEnvironment (App Service Environment) e.g. \"Standard\"",
              "type": "string"
            },
            "databaseServiceObjective": {
              "description": "Service objective of the metadata database for the hostingEnvironment (App Service Environment) e.g. \"S0\"",
              "type": "string"
            },
            "upgradeDomains": {
              "format": "int32",
              "description": "Number of upgrade domains of this hostingEnvironment (App Service Environment)",
              "type": "integer"
            },
            "subscriptionId": {
              "description": "Subscription of the hostingEnvironment (App Service Environment)",
              "type": "string"
            },
            "dnsSuffix": {
              "description": "DNS suffix of the hostingEnvironment (App Service Environment)",
              "type": "string"
            },
            "lastAction": {
              "description": "Last deployment action on this hostingEnvironment (App Service Environment)",
              "type": "string"
            },
            "lastActionResult": {
              "description": "Result of the last deployment action on this hostingEnvironment (App Service Environment)",
              "type": "string"
            },
            "allowedMultiSizes": {
              "description": "List of comma separated strings describing which VM sizes are allowed for front-ends",
              "type": "string"
            },
            "allowedWorkerSizes": {
              "description": "List of comma separated strings describing which VM sizes are allowed for workers",
              "type": "string"
            },
            "maximumNumberOfMachines": {
              "format": "int32",
              "description": "Maximum number of VMs in this hostingEnvironment (App Service Environment)",
              "type": "integer"
            },
            "vipMappings": {
              "description": "Description of IP SSL mapping for this hostingEnvironment (App Service Environment)",
              "type": "array",
              "items": {
                "$ref": "#/definitions/VirtualIPMapping"
              }
            },
            "environmentCapacities": {
              "description": "Current total, used, and available worker capacities",
              "type": "array",
              "items": {
                "$ref": "#/definitions/StampCapacity"
              }
            },
            "networkAccessControlList": {
              "description": "Access control list for controlling traffic to the hostingEnvironment (App Service Environment)",
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkAccessControlEntry"
              }
            },
            "environmentIsHealthy": {
              "description": "True/false indicating whether the hostingEnvironment (App Service Environment) is healthy",
              "type": "boolean"
            },
            "environmentStatus": {
              "description": "Detailed message about with results of the last check of the hostingEnvironment (App Service Environment)",
              "type": "string"
            },
            "resourceGroup": {
              "description": "Resource group of the hostingEnvironment (App Service Environment)",
              "type": "string"
            },
            "frontEndScaleFactor": {
              "format": "int32",
              "description": "Scale Factor for FrontEnds",
              "type": "integer"
            },
            "apiManagementAccountId": {
              "type": "string"
            },
            "suspended": {
              "description": "True/false indicating whether the hostingEnvironment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available\r\n            (most likely because NSG blocked the incoming traffic)",
              "type": "boolean"
            },
            "dynamicCacheEnabled": {
              "description": "True/false indicating whether the hostingEnvironment is suspended. The environment can be suspended e.g. when the management endpoint is no longer available\r\n            (most likely because NSG blocked the incoming traffic)",
              "type": "boolean"
            },
            "clusterSettings": {
              "description": "Custom settings for changing the behavior of the hosting environment",
              "type": "array",
              "items": {
                "$ref": "#/definitions/NameValuePair"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "AppServicePlan": {
      "description": "App Service Plan Model",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "required": [
            "status"
          ],
          "properties": {
            "name": {
              "description": "Name for the App Service Plan",
              "type": "string"
            },
            "workerTierName": {
              "description": "Target worker tier assigned to the App Service Plan",
              "type": "string"
            },
            "status": {
              "description": "App Service Plan Status",
              "enum": [
                "Ready",
                "Pending"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "StatusOptions",
                "modelAsString": false
              }
            },
            "subscription": {
              "description": "App Service Plan Subscription",
              "type": "string"
            },
            "adminSiteName": {
              "description": "App Service Plan administration site",
              "type": "string"
            },
            "hostingEnvironmentProfile": {
              "$ref": "#/definitions/HostingEnvironmentProfile",
              "description": "Specification for the hosting environment (App Service Environment) to use for the App Service Plan"
            },
            "maximumNumberOfWorkers": {
              "format": "int32",
              "description": "Maximum number of instances that can be assigned to this App Service Plan",
              "type": "integer"
            },
            "geoRegion": {
              "description": "Geographical location for the App Service Plan",
              "type": "string"
            },
            "perSiteScaling": {
              "description": "If True apps assigned to this App Service Plan can be scaled independently\r\n            If False apps assigned to this App Service Plan will scale to all instances of the plan",
              "type": "boolean"
            },
            "numberOfSites": {
              "format": "int32",
              "description": "Number of web apps assigned to this App Service Plan",
              "type": "integer"
            },
            "resourceGroup": {
              "description": "Resource group of the serverfarm",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/SkuDescription"
        }
      }
    },
    "ApplicationLogsConfig": {
      "description": "Application logs configuration",
      "type": "object",
      "properties": {
        "fileSystem": {
          "$ref": "#/definitions/FileSystemApplicationLogsConfig",
          "description": "Application logs to file system configuration"
        },
        "azureTableStorage": {
          "$ref": "#/definitions/AzureTableStorageApplicationLogsConfig",
          "description": "Application logs to azure table storage configuration"
        },
        "azureBlobStorage": {
          "$ref": "#/definitions/AzureBlobStorageApplicationLogsConfig",
          "description": "Application logs to blob storage configuration"
        }
      }
    },
    "ArmPlan": {
      "description": "The plan object in an ARM, represents a marketplace plan",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name",
          "type": "string"
        },
        "publisher": {
          "description": "The publisher",
          "type": "string"
        },
        "product": {
          "description": "The product",
          "type": "string"
        },
        "promotionCode": {
          "description": "The promotion code",
          "type": "string"
        },
        "version": {
          "description": "Version of product",
          "type": "string"
        }
      }
    },
    "AutoHealActions": {
      "description": "AutoHealActions - Describes the actions which can be\r\n            taken by the auto-heal module when a rule is triggered.",
      "required": [
        "actionType"
      ],
      "type": "object",
      "properties": {
        "actionType": {
          "description": "ActionType - predefined action to be taken",
          "enum": [
            "Recycle",
            "LogEvent",
            "CustomAction"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AutoHealActionType",
            "modelAsString": false
          }
        },
        "customAction": {
          "$ref": "#/definitions/AutoHealCustomAction",
          "description": "CustomAction - custom action to be taken"
        },
        "minProcessExecutionTime": {
          "description": "MinProcessExecutionTime - minimum time the process must execute\r\n            before taking the action",
          "type": "string"
        }
      }
    },
    "AutoHealCustomAction": {
      "description": "AutoHealCustomAction - Describes the custom action to be executed\r\n            when an auto heal rule is triggered.",
      "type": "object",
      "properties": {
        "exe": {
          "description": "Executable to be run",
          "type": "string"
        },
        "parameters": {
          "description": "Parameters for the executable",
          "type": "string"
        }
      }
    },
    "AutoHealRules": {
      "description": "AutoHealRules - describes the rules which can be defined for auto-heal",
      "type": "object",
      "properties": {
        "triggers": {
          "$ref": "#/definitions/AutoHealTriggers",
          "description": "Triggers - Conditions that describe when to execute the auto-heal actions"
        },
        "actions": {
          "$ref": "#/definitions/AutoHealActions",
          "description": "Actions - Actions to be executed when a rule is triggered"
        }
      }
    },
    "AutoHealTriggers": {
      "description": "AutoHealTriggers - describes the triggers for auto-heal.",
      "type": "object",
      "properties": {
        "requests": {
          "$ref": "#/definitions/RequestsBasedTrigger",
          "description": "Requests - Defines a rule based on total requests"
        },
        "privateBytesInKB": {
          "format": "int32",
          "description": "PrivateBytesInKB - Defines a rule based on private bytes",
          "type": "integer"
        },
        "statusCodes": {
          "description": "StatusCodes - Defines a rule based on status codes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCodesBasedTrigger"
          }
        },
        "slowRequests": {
          "$ref": "#/definitions/SlowRequestsBasedTrigger",
          "description": "SlowRequests - Defines a rule based on request execution time"
        }
      }
    },
    "AzureBlobStorageApplicationLogsConfig": {
      "description": "Application logs azure blob storage configuration",
      "type": "object",
      "properties": {
        "level": {
          "description": "Log level",
          "enum": [
            "Off",
            "Verbose",
            "Information",
            "Warning",
            "Error"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LogLevel",
            "modelAsString": false
          }
        },
        "sasUrl": {
          "description": "SAS url to a azure blob container with read/write/list/delete permissions",
          "type": "string"
        },
        "retentionInDays": {
          "format": "int32",
          "description": "Retention in days.\r\n            Remove blobs older than X days.\r\n            0 or lower means no retention.",
          "type": "integer"
        }
      }
    },
    "AzureBlobStorageHttpLogsConfig": {
      "description": "Http logs to azure blob storage configuration",
      "type": "object",
      "properties": {
        "sasUrl": {
          "description": "SAS url to a azure blob container with read/write/list/delete permissions",
          "type": "string"
        },
        "retentionInDays": {
          "format": "int32",
          "description": "Retention in days.\r\n            Remove blobs older than X days.\r\n            0 or lower means no retention.",
          "type": "integer"
        },
        "enabled": {
          "description": "Enabled",
          "type": "boolean"
        }
      }
    },
    "AzureTableStorageApplicationLogsConfig": {
      "description": "Application logs to azure table storage configuration",
      "type": "object",
      "properties": {
        "level": {
          "description": "Log level",
          "enum": [
            "Off",
            "Verbose",
            "Information",
            "Warning",
            "Error"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LogLevel",
            "modelAsString": false
          }
        },
        "sasUrl": {
          "description": "SAS url to an azure table with add/query/delete permissions",
          "type": "string"
        }
      }
    },
    "BackupItem": {
      "description": "Backup description",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "required": [
            "status"
          ],
          "properties": {
            "id": {
              "format": "int32",
              "description": "Id of the backup.",
              "type": "integer"
            },
            "storageAccountUrl": {
              "description": "SAS URL for the storage account container which contains this backup",
              "type": "string"
            },
            "blobName": {
              "description": "Name of the blob which contains data for this backup",
              "type": "string"
            },
            "name": {
              "description": "Name of this backup",
              "type": "string"
            },
            "status": {
              "description": "Backup status",
              "enum": [
                "InProgress",
                "Failed",
                "Succeeded",
                "TimedOut",
                "Created",
                "Skipped",
                "PartiallySucceeded",
                "DeleteInProgress",
                "DeleteFailed",
                "Deleted"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "BackupItemStatus",
                "modelAsString": false
              }
            },
            "sizeInBytes": {
              "format": "int64",
              "description": "Size of the backup in bytes",
              "type": "integer"
            },
            "created": {
              "format": "date-time",
              "description": "Timestamp of the backup creation",
              "type": "string"
            },
            "log": {
              "description": "Details regarding this backup. Might contain an error message.",
              "type": "string"
            },
            "databases": {
              "description": "List of databases included in the backup",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatabaseBackupSetting"
              }
            },
            "scheduled": {
              "description": "True if this backup has been created due to a schedule being triggered.",
              "type": "boolean"
            },
            "lastRestoreTimeStamp": {
              "format": "date-time",
              "description": "Timestamp of a last restore operation which used this backup.",
              "type": "string"
            },
            "finishedTimeStamp": {
              "format": "date-time",
              "description": "Timestamp when this backup finished.",
              "type": "string"
            },
            "correlationId": {
              "description": "Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.",
              "type": "string"
            },
            "websiteSizeInBytes": {
              "format": "int64",
              "description": "Size of the original web app which has been backed up",
              "type": "integer"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupItemCollection": {
      "description": "Collection of Backup Items",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackupItem"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources",
          "type": "string"
        }
      }
    },
    "BackupRequest": {
      "description": "Description of a backup which will be performed",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "required": [
            "type"
          ],
          "properties": {
            "name": {
              "description": "Name of the backup",
              "type": "string"
            },
            "enabled": {
              "description": "True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled",
              "type": "boolean"
            },
            "storageAccountUrl": {
              "description": "SAS URL to the container",
              "type": "string"
            },
            "backupSchedule": {
              "$ref": "#/definitions/BackupSchedule",
              "description": "Schedule for the backup if it is executed periodically"
            },
            "databases": {
              "description": "Databases included in the backup",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatabaseBackupSetting"
              }
            },
            "type": {
              "description": "Type of the backup",
              "enum": [
                "Default",
                "Clone",
                "Relocation"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "BackupRestoreOperationType",
                "modelAsString": false
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupSchedule": {
      "description": "Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.",
      "required": [
        "frequencyUnit"
      ],
      "type": "object",
      "properties": {
        "frequencyInterval": {
          "format": "int32",
          "description": "How often should be the backup executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)",
          "type": "integer"
        },
        "frequencyUnit": {
          "description": "How often should be the backup executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)",
          "enum": [
            "Day",
            "Hour"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "FrequencyUnit",
            "modelAsString": false
          }
        },
        "keepAtLeastOneBackup": {
          "description": "True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.",
          "type": "boolean"
        },
        "retentionPeriodInDays": {
          "format": "int32",
          "description": "After how many days backups should be deleted",
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "description": "When the schedule should start working",
          "type": "string"
        },
        "lastExecutionTime": {
          "format": "date-time",
          "description": "The last time when this schedule was triggered",
          "type": "string"
        }
      }
    },
    "Capability": {
      "description": "Description of a Sku Capability",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the sku capability",
          "type": "string"
        },
        "value": {
          "description": "Value of the sku capability",
          "type": "string"
        },
        "reason": {
          "description": "Reason of the sku capability",
          "type": "string"
        }
      }
    },
    "Certificate": {
      "description": "App certificate",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "friendlyName": {
              "description": "Friendly name of the certificate",
              "type": "string"
            },
            "subjectName": {
              "description": "Subject name of the certificate",
              "type": "string"
            },
            "hostNames": {
              "description": "Host names the certificate applies to",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "pfxBlob": {
              "description": "Pfx blob",
              "type": "string"
            },
            "siteName": {
              "description": "App name",
              "type": "string"
            },
            "selfLink": {
              "description": "Self link",
              "type": "string"
            },
            "issuer": {
              "description": "Certificate issuer",
              "type": "string"
            },
            "issueDate": {
              "format": "date-time",
              "description": "Certificate issue Date",
              "type": "string"
            },
            "expirationDate": {
              "format": "date-time",
              "description": "Certificate expriration date",
              "type": "string"
            },
            "password": {
              "description": "Certificate password",
              "type": "string"
            },
            "thumbprint": {
              "description": "Certificate thumbprint",
              "type": "string"
            },
            "valid": {
              "description": "Is the certificate valid?",
              "type": "boolean"
            },
            "cerBlob": {
              "description": "Raw bytes of .cer file",
              "type": "string"
            },
            "publicKeyHash": {
              "description": "Public key hash",
              "type": "string"
            },
            "hostingEnvironmentProfile": {
              "$ref": "#/definitions/HostingEnvironmentProfile",
              "description": "Specification for the hosting environment (App Service Environment) to use for the certificate"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "CertificateDetails": {
      "description": "Certificate Details",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "version": {
              "format": "int32",
              "description": "Version",
              "type": "integer"
            },
            "serialNumber": {
              "description": "Serial Number",
              "type": "string"
            },
            "thumbprint": {
              "description": "Thumbprint",
              "type": "string"
            },
            "subject": {
              "description": "Subject",
              "type": "string"
            },
            "notBefore": {
              "format": "date-time",
              "description": "Valid from",
              "type": "string"
            },
            "notAfter": {
              "format": "date-time",
              "description": "Valid to",
              "type": "string"
            },
            "signatureAlgorithm": {
              "description": "Signature Algorithm",
              "type": "string"
            },
            "issuer": {
              "description": "Issuer",
              "type": "string"
            },
            "rawData": {
              "description": "Raw certificate data",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ClassicMobileService": {
      "description": "A mobile service",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "name": {
              "description": "Name of the mobile service",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "CloningInfo": {
      "description": "Represents information needed for cloning operation",
      "required": [
        "sourceWebAppId"
      ],
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "Correlation Id of cloning operation. This id ties multiple cloning operations\r\n            together to use the same snapshot",
          "type": "string"
        },
        "overwrite": {
          "description": "Overwrite destination web app",
          "type": "boolean"
        },
        "cloneCustomHostNames": {
          "description": "If true, clone custom hostnames from source web app",
          "type": "boolean"
        },
        "cloneSourceControl": {
          "description": "Clone source control from source web app",
          "type": "boolean"
        },
        "sourceWebAppId": {
          "description": "ARM resource id of the source web app. Web app resource id is of the form \r\n            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and \r\n            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots",
          "type": "string"
        },
        "hostingEnvironment": {
          "description": "Hosting environment",
          "type": "string"
        },
        "appSettingsOverrides": {
          "description": "Application settings overrides for cloned web app. If specified these settings will override the settings cloned \r\n            from source web app. If not specified, application settings from source web app are retained.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "configureLoadBalancing": {
          "description": "If specified configure load balancing for source and clone site",
          "type": "boolean"
        },
        "trafficManagerProfileId": {
          "description": "ARM resource id of the traffic manager profile to use if it exists. Traffic manager resource id is of the form \r\n            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}",
          "type": "string"
        },
        "trafficManagerProfileName": {
          "description": "Name of traffic manager profile to create. This is only needed if traffic manager profile does not already exist",
          "type": "string"
        }
      }
    },
    "ConnStringValueTypePair": {
      "description": "Database connection string value to type pair",
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Value of pair",
          "type": "string"
        },
        "type": {
          "description": "Type of database",
          "enum": [
            "MySql",
            "SQLServer",
            "SQLAzure",
            "Custom",
            "NotificationHub",
            "ServiceBus",
            "EventHub",
            "ApiHub",
            "DocDb",
            "RedisCache"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ConnectionStringType",
            "modelAsString": false
          }
        }
      }
    },
    "ConnectionStringDictionary": {
      "description": "String dictionary resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Connection strings",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ConnStringValueTypePair"
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Contact": {
      "description": "Contact information for domain registration. If 'Domain Privacy' option is not selected then the contact information will be  be made publicly available through the Whois directories as per ICANN requirements.",
      "type": "object",
      "properties": {
        "addressMailing": {
          "$ref": "#/definitions/Address",
          "description": "Mailing address"
        },
        "email": {
          "description": "Email address",
          "type": "string"
        },
        "fax": {
          "description": "Fax number",
          "type": "string"
        },
        "jobTitle": {
          "description": "Job title",
          "type": "string"
        },
        "nameFirst": {
          "description": "First name",
          "type": "string"
        },
        "nameLast": {
          "description": "Last name",
          "type": "string"
        },
        "nameMiddle": {
          "description": "Middle name",
          "type": "string"
        },
        "organization": {
          "description": "Organization",
          "type": "string"
        },
        "phone": {
          "description": "Phone number",
          "type": "string"
        }
      }
    },
    "CorsSettings": {
      "description": "Cross-Origin Resource Sharing (CORS) settings for the web app.",
      "type": "object",
      "properties": {
        "allowedOrigins": {
          "description": "Gets or sets the list of origins that should be allowed to make cross-origin\r\n            calls (for example: http://example.com:12345). Use \"*\" to allow all.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CsmPublishingProfileOptions": {
      "description": "Publishing options for requested profile",
      "type": "object",
      "properties": {
        "format": {
          "description": "Name of the format. Valid values are: \r\n            FileZilla3\r\n            WebDeploy -- default\r\n            Ftp",
          "type": "string"
        }
      }
    },
    "CsmSiteRecoveryEntity": {
      "description": "Class containting details about site recovery operation.",
      "type": "object",
      "properties": {
        "snapshotTime": {
          "format": "date-time",
          "description": "Point in time in which the site recover should be attempted.",
          "type": "string"
        },
        "recoverConfig": {
          "description": "If true, then the website's configuration will be reverted to its state at SnapshotTime",
          "type": "boolean"
        },
        "siteName": {
          "description": "[Optional] Destination web app name into which web app should be recovered. This is case when new web app should be created instead.",
          "type": "string"
        },
        "slotName": {
          "description": "[Optional] Destination web app slot name into which web app should be recovered",
          "type": "string"
        }
      }
    },
    "CsmSlotEntity": {
      "description": "Class containing deployment slot parameters",
      "type": "object",
      "properties": {
        "targetSlot": {
          "description": "Set the destination deployment slot during swap operation",
          "type": "string"
        },
        "preserveVnet": {
          "description": "Get or set the flag indicating it should preserve VNet to the slot during swap",
          "type": "boolean"
        }
      }
    },
    "CsmUsageQuota": {
      "description": "Usage of the quota resource",
      "type": "object",
      "properties": {
        "unit": {
          "description": "Units of measurement for the quota resourse",
          "type": "string"
        },
        "nextResetTime": {
          "format": "date-time",
          "description": "Next reset time for the resource counter",
          "type": "string"
        },
        "currentValue": {
          "format": "int64",
          "description": "The current value of the resource counter",
          "type": "integer"
        },
        "limit": {
          "format": "int64",
          "description": "The resource limit",
          "type": "integer"
        },
        "name": {
          "$ref": "#/definitions/LocalizableString",
          "description": "Quota name"
        }
      }
    },
    "CsmUsageQuotaCollection": {
      "description": "Collection of csm usage quotas",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CsmUsageQuota"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources",
          "type": "string"
        }
      }
    },
    "CustomHostnameAnalysisResult": {
      "description": "Represents a custom domain analysis",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "required": [
            "customDomainVerificationTest"
          ],
          "properties": {
            "isHostnameAlreadyVerified": {
              "description": "Is hostname already verified?",
              "type": "boolean"
            },
            "customDomainVerificationTest": {
              "description": "Dns verification test result",
              "enum": [
                "Passed",
                "Failed",
                "Skipped"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DnsVerificationTestResult",
                "modelAsString": false
              }
            },
            "customDomainVerificationFailureInfo": {
              "$ref": "#/definitions/ErrorEntity",
              "description": "Raw failure info if Dns verification fails"
            },
            "hasConflictOnScaleUnit": {
              "description": "Does it have conflict on scale unit?",
              "type": "boolean"
            },
            "hasConflictAcrossSubscription": {
              "description": "Does it have conflict across subscription?",
              "type": "boolean"
            },
            "conflictingAppResourceId": {
              "description": "Name of the conflicting App on scale unit if it's within the same subscription",
              "type": "string"
            },
            "cNameRecords": {
              "description": "CName records controller could see for this hostname",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "txtRecords": {
              "description": "TxT records controller could see for this hostname",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "aRecords": {
              "description": "A records controller could see for this hostname",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "alternateCNameRecords": {
              "description": "Alternate CName records controller could see for this hostname",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "alternateTxtRecords": {
              "description": "Alternate TxT records controller could see for this hostname",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DatabaseBackupSetting": {
      "description": "Note: properties are serialized in JSON format and stored in DB. \r\n            if new properties are added they might not be in the previous data rows \r\n            so please handle nulls",
      "type": "object",
      "properties": {
        "databaseType": {
          "description": "SqlAzure / MySql",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "connectionStringName": {
          "description": "Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.\r\n            This is used during restore with overwrite connection strings options.",
          "type": "string"
        },
        "connectionString": {
          "description": "Contains a connection string to a database which is being backed up/restored. If the restore should happen to a new database, the database name inside is the new one.",
          "type": "string"
        }
      }
    },
    "DeletedSite": {
      "description": "Reports deleted site including the timestamp of operation",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "required": [
            "usageState",
            "availabilityState"
          ],
          "properties": {
            "deletedTimestamp": {
              "format": "date-time",
              "description": "Time when the site was deleted",
              "type": "string"
            },
            "state": {
              "description": "State of the web app",
              "type": "string"
            },
            "hostNames": {
              "description": "Hostnames associated with web app",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "repositorySiteName": {
              "description": "Name of repository site",
              "type": "string"
            },
            "usageState": {
              "description": "State indicating whether web app has exceeded its quota usage",
              "enum": [
                "Normal",
                "Exceeded"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "UsageState",
                "modelAsString": false
              }
            },
            "enabled": {
              "description": "True if the site is enabled; otherwise, false. Setting this  value to false disables the site (takes the site off line).",
              "type": "boolean"
            },
            "enabledHostNames": {
              "description": "Hostnames for the web app that are enabled. Hostnames need to be assigned and enabled. If some hostnames are assigned but not enabled\r\n            the app is not served on those hostnames",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "availabilityState": {
              "description": "Management information availability state for the web app. Possible values are Normal or Limited. \r\n            Normal means that the site is running correctly and that management information for the site is available. \r\n            Limited means that only partial management information for the site is available and that detailed site information is unavailable.",
              "enum": [
                "Normal",
                "Limited",
                "DisasterRecoveryMode"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SiteAvailabilityState",
                "modelAsString": false
              }
            },
            "hostNameSslStates": {
              "description": "Hostname SSL states are  used to manage the SSL bindings for site's hostnames.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/HostNameSslState"
              }
            },
            "serverFarmId": {
              "type": "string"
            },
            "reserved": {
              "description": "Reserved",
              "type": "boolean"
            },
            "lastModifiedTimeUtc": {
              "format": "date-time",
              "description": "Last time web app was modified in UTC",
              "type": "string"
            },
            "siteConfig": {
              "$ref": "#/definitions/SiteConfig",
              "description": "Configuration of web app"
            },
            "trafficManagerHostNames": {
              "description": "Read-only list of Azure Traffic manager hostnames associated with web app",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "premiumAppDeployed": {
              "description": "If set indicates whether web app is deployed as a premium app",
              "type": "boolean"
            },
            "scmSiteAlsoStopped": {
              "description": "If set indicates whether to stop SCM (KUDU) site when the web app is stopped. Default is false.",
              "type": "boolean"
            },
            "targetSwapSlot": {
              "description": "Read-only property that specifies which slot this app will swap into",
              "type": "string"
            },
            "hostingEnvironmentProfile": {
              "$ref": "#/definitions/HostingEnvironmentProfile",
              "description": "Specification for the hosting environment (App Service Environment) to use for the web app"
            },
            "microService": {
              "description": "Micro services like WebSites, Logic Apps",
              "type": "string"
            },
            "gatewaySiteName": {
              "description": "Name of gateway app associated with web app",
              "type": "string"
            },
            "clientAffinityEnabled": {
              "description": "Specifies if the client affinity is enabled when load balancing http request for multiple instances of the web app",
              "type": "boolean"
            },
            "clientCertEnabled": {
              "description": "Specifies if the client certificate is enabled for the web app",
              "type": "boolean"
            },
            "hostNamesDisabled": {
              "description": "Specifies if the public hostnames are disabled the web app.\r\n            If set to true the app is only accessible via API Management process",
              "type": "boolean"
            },
            "outboundIpAddresses": {
              "description": "List of comma separated IP addresses that this web app uses for outbound connections. Those can be used when configuring firewall rules for databases accessed by this web app.",
              "type": "string"
            },
            "containerSize": {
              "format": "int32",
              "description": "Size of a function container",
              "type": "integer"
            },
            "dailyMemoryTimeQuota": {
              "format": "int32",
              "description": "Maximum allowed daily memory-time quota (applicable on dynamic sites only)",
              "type": "integer"
            },
            "suspendedTill": {
              "format": "date-time",
              "description": "Site suspended till in case memory-time quota is exceeded",
              "type": "string"
            },
            "maxNumberOfWorkers": {
              "format": "int32",
              "description": "Maximum number of workers\r\n            This only applies to function container",
              "type": "integer"
            },
            "cloningInfo": {
              "$ref": "#/definitions/CloningInfo",
              "description": "This is only valid for web app creation. If specified, web app is cloned from \r\n            a source web app"
            },
            "resourceGroup": {
              "description": "Resource group web app belongs to",
              "type": "string"
            },
            "isDefaultContainer": {
              "description": "Site is a default container",
              "type": "boolean"
            },
            "defaultHostName": {
              "description": "Default hostname of the web app",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DeletedWebAppCollection": {
      "description": "Collection of deleted sites",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeletedSite"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources",
          "type": "string"
        }
      }
    },
    "Deployment": {
      "description": "Represents user crendentials used for publishing activity",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "id": {
              "description": "Id",
              "type": "string"
            },
            "status": {
              "format": "int32",
              "description": "Status",
              "type": "integer"
            },
            "message": {
              "description": "Message",
              "type": "string"
            },
            "author": {
              "description": "Author",
              "type": "string"
            },
            "deployer": {
              "description": "Deployer",
              "type": "string"
            },
            "author_email": {
              "description": "AuthorEmail",
              "type": "string"
            },
            "start_time": {
              "format": "date-time",
              "description": "StartTime",
              "type": "string"
            },
            "end_time": {
              "format": "date-time",
              "description": "EndTime",
              "type": "string"
            },
            "active": {
              "description": "Active",
              "type": "boolean"
            },
            "details": {
              "description": "Detail",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DeploymentCollection": {
      "description": "Collection of app deployments",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Deployment"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources",
          "type": "string"
        }
      }
    },
    "Domain": {
      "description": "Represents a domain",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "contactAdmin": {
              "$ref": "#/definitions/Contact",
              "description": "Admin contact information"
            },
            "contactBilling": {
              "$ref": "#/definitions/Contact",
              "description": "Billing contact information"
            },
            "contactRegistrant": {
              "$ref": "#/definitions/Contact",
              "description": "Registrant contact information"
            },
            "contactTech": {
              "$ref": "#/definitions/Contact",
              "description": "Technical contact information"
            },
            "registrationStatus": {
              "description": "Domain registration status",
              "enum": [
                "Active",
                "Awaiting",
                "Cancelled",
                "Confiscated",
                "Disabled",
                "Excluded",
                "Expired",
                "Failed",
                "Held",
                "Locked",
                "Parked",
                "Pending",
                "Reserved",
                "Reverted",
                "Suspended",
                "Transferred",
                "Unknown",
                "Unlocked",
                "Unparked",
                "Updated",
                "JsonConverterFailed"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DomainStatus",
                "modelAsString": false
              }
            },
            "provisioningState": {
              "description": "Domain provisioning state",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "InProgress",
                "Deleting"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": false
              }
            },
            "nameServers": {
              "description": "Name servers",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "privacy": {
              "description": "If true then domain privacy is enabled for this domain",
              "type": "boolean"
            },
            "createdTime": {
              "format": "date-time",
              "description": "Domain creation timestamp",
              "type": "string"
            },
            "expirationTime": {
              "format": "date-time",
              "description": "Domain expiration timestamp",
              "type": "string"
            },
            "lastRenewedTime": {
              "format": "date-time",
              "description": "Timestamp when the domain was renewed last time",
              "type": "string"
            },
            "autoRenew": {
              "description": "If true then domain will renewed automatically",
              "type": "boolean"
            },
            "readyForDnsRecordManagement": {
              "description": "If true then Azure can assign this domain to Web Apps. This value will be true if domain registration status is active and it is hosted on name servers Azure has programmatic access to",
              "type": "boolean"
            },
            "managedHostNames": {
              "description": "All hostnames derived from the domain and assigned to Azure resources",
              "type": "array",
              "items": {
                "$ref": "#/definitions/HostName"
              }
            },
            "consent": {
              "$ref": "#/definitions/DomainPurchaseConsent",
              "description": "Legal agreement consent"
            },
            "domainNotRenewableReasons": {
              "description": "Reasons why domain is not renewable",
              "type": "array",
              "items": {
                "enum": [
                  "RegistrationStatusNotSupportedForRenewal",
                  "ExpirationNotInRenewalTimeRange",
                  "SubscriptionNotActive"
                ],
                "type": "string"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DomainPurchaseConsent": {
      "description": "Domain purchase consent object representing acceptance of applicable legal agreements",
      "type": "object",
      "properties": {
        "agreementKeys": {
          "description": "List of applicable legal agreement keys. This list can be retrieved using ListLegalAgreements Api under TopLevelDomain resource",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "agreedBy": {
          "description": "Client IP address",
          "type": "string"
        },
        "agreedAt": {
          "format": "date-time",
          "description": "Timestamp when the agreements were accepted",
          "type": "string"
        }
      }
    },
    "EnabledConfig": {
      "description": "Enabled configuration",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Enabled",
          "type": "boolean"
        }
      }
    },
    "ErrorEntity": {
      "description": "Body of the error response returned from the API.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Basic error code",
          "type": "string"
        },
        "message": {
          "description": "Any details of the error",
          "type": "string"
        },
        "extendedCode": {
          "description": "Type of error",
          "type": "string"
        },
        "messageTemplate": {
          "description": "Message template",
          "type": "string"
        },
        "parameters": {
          "description": "Parameters for the template",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "innerErrors": {
          "description": "Inner errors",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorEntity"
          }
        }
      }
    },
    "Experiments": {
      "description": "Class containing Routing in production experiments",
      "type": "object",
      "properties": {
        "rampUpRules": {
          "description": "List of {Microsoft.Web.Hosting.Administration.RampUpRule} objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RampUpRule"
          }
        }
      }
    },
    "FileSystemApplicationLogsConfig": {
      "description": "Application logs to file system configuration",
      "type": "object",
      "properties": {
        "level": {
          "description": "Log level",
          "enum": [
            "Off",
            "Verbose",
            "Information",
            "Warning",
            "Error"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LogLevel",
            "modelAsString": false
          }
        }
      }
    },
    "FileSystemHttpLogsConfig": {
      "description": "Http logs to file system configuration",
      "type": "object",
      "properties": {
        "retentionInMb": {
          "format": "int32",
          "description": "Maximum size in megabytes that http log files can use.\r\n            When reached old log files will be removed to make space for new ones.\r\n            Value can range between 25 and 100.",
          "type": "integer"
        },
        "retentionInDays": {
          "format": "int32",
          "description": "Retention in days.\r\n            Remove files older than X days.\r\n            0 or lower means no retention.",
          "type": "integer"
        },
        "enabled": {
          "description": "Enabled",
          "type": "boolean"
        }
      }
    },
    "GeoRegion": {
      "description": "Geographical region",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "name": {
              "description": "Region name",
              "type": "string"
            },
            "description": {
              "description": "Region description",
              "type": "string"
            },
            "displayName": {
              "description": "Display name for region",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "HandlerMapping": {
      "description": "The IIS handler mappings used to define which handler processes HTTP requests with certain extension. \r\n            For example it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.",
      "type": "object",
      "properties": {
        "extension": {
          "description": "Requests with this extension will be handled using the specified FastCGI application.",
          "type": "string"
        },
        "scriptProcessor": {
          "description": "The absolute path to the FastCGI application.",
          "type": "string"
        },
        "arguments": {
          "description": "Command-line arguments to be passed to the script processor.",
          "type": "string"
        }
      }
    },
    "HostName": {
      "description": "Details of a hostname derived from a domain",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the hostname",
          "type": "string"
        },
        "siteNames": {
          "description": "List of sites the hostname is assigned to. This list will have more than one site only if the hostname is pointing to a Traffic Manager",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "azureResourceName": {
          "description": "Name of the Azure resource the hostname is assigned to. If it is assigned to a traffic manager then it will be the traffic manager name otherwise it will be the website name",
          "type": "string"
        },
        "azureResourceType": {
          "description": "Type of the Azure resource the hostname is assigned to",
          "enum": [
            "Website",
            "TrafficManager"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AzureResourceType",
            "modelAsString": false
          }
        },
        "customHostNameDnsRecordType": {
          "description": "Type of the Dns record",
          "enum": [
            "CName",
            "A"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CustomHostNameDnsRecordType",
            "modelAsString": false
          }
        },
        "hostNameType": {
          "description": "Type of the hostname",
          "enum": [
            "Verified",
            "Managed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "HostNameType",
            "modelAsString": false
          }
        }
      }
    },
    "HostNameBinding": {
      "description": "A host name binding object",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "name": {
              "description": "Hostname",
              "type": "string"
            },
            "siteName": {
              "description": "Web app name",
              "type": "string"
            },
            "domainId": {
              "description": "Fully qualified ARM domain resource URI",
              "type": "string"
            },
            "azureResourceName": {
              "description": "Azure resource name",
              "type": "string"
            },
            "azureResourceType": {
              "description": "Azure resource type",
              "enum": [
                "Website",
                "TrafficManager"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AzureResourceType",
                "modelAsString": false
              }
            },
            "customHostNameDnsRecordType": {
              "description": "Custom DNS record type",
              "enum": [
                "CName",
                "A"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "CustomHostNameDnsRecordType",
                "modelAsString": false
              }
            },
            "hostNameType": {
              "description": "Host name type",
              "enum": [
                "Verified",
                "Managed"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "HostNameType",
                "modelAsString": false
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "HostNameBindingCollection": {
      "description": "Collection of host name bindings",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostNameBinding"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources",
          "type": "string"
        }
      }
    },
    "HostNameSslState": {
      "description": "Object that represents a SSL-enabled host name.",
      "required": [
        "sslState"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Host name",
          "type": "string"
        },
        "sslState": {
          "description": "SSL type",
          "enum": [
            "Disabled",
            "SniEnabled",
            "IpBasedEnabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SslState",
            "modelAsString": false
          }
        },
        "virtualIP": {
          "description": "Virtual IP address assigned to the host name if IP based SSL is enabled",
          "type": "string"
        },
        "thumbprint": {
          "description": "SSL cert thumbprint",
          "type": "string"
        },
        "toUpdate": {
          "description": "Set this flag to update existing host name",
          "type": "boolean"
        }
      }
    },
    "HostingEnvironmentProfile": {
      "description": "Specification for a hostingEnvironment (App Service Environment) to use for this resource",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource id of the hostingEnvironment (App Service Environment)",
          "type": "string"
        },
        "name": {
          "description": "Name of the hostingEnvironment (App Service Environment) (read only)",
          "type": "string"
        },
        "type": {
          "description": "Resource type of the hostingEnvironment (App Service Environment) (read only)",
          "type": "string"
        }
      }
    },
    "HttpLogsConfig": {
      "description": "Http logs configuration",
      "type": "object",
      "properties": {
        "fileSystem": {
          "$ref": "#/definitions/FileSystemHttpLogsConfig",
          "description": "Http logs to file system configuration"
        },
        "azureBlobStorage": {
          "$ref": "#/definitions/AzureBlobStorageHttpLogsConfig",
          "description": "Http logs to azure blob storage configuration"
        }
      }
    },
    "HybridConnection": {
      "description": "Hybrid Connection contract. This is used to configure a Hybrid Connection.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "serviceBusNamespace": {
              "description": "The name of the Service Bus Namespace.",
              "type": "string"
            },
            "relayName": {
              "description": "The name of the Service Bus Relay.",
              "type": "string"
            },
            "relayArmUri": {
              "description": "The ARM URI to the Service Bus Relay.",
              "type": "string"
            },
            "hostname": {
              "description": "The hostname of the endpoint.",
              "type": "string"
            },
            "port": {
              "format": "int32",
              "description": "The port of the endpoint.",
              "type": "integer"
            },
            "sendKeyName": {
              "description": "The name of the Service Bus key which has Send permissions. This is used to authenticate to Service Bus.",
              "type": "string"
            },
            "sendKeyValue": {
              "description": "The value of the Service Bus key. This is used to authenticate to Service Bus. In ARM this key will not be returned\r\n            normally, use the POST /listKeys API instead.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "IpSecurityRestriction": {
      "description": "Represents an ip security restriction on a web app.",
      "required": [
        "ipAddress"
      ],
      "type": "object",
      "properties": {
        "ipAddress": {
          "description": "IP address the security restriction is valid for",
          "type": "string"
        },
        "subnetMask": {
          "description": "Subnet mask for the range of IP addresses the restriction is valid for",
          "type": "string"
        }
      }
    },
    "LocalizableString": {
      "description": "LocalizableString object containing the name and a localized value.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Non localized name",
          "type": "string"
        },
        "localizedValue": {
          "description": "Localized name",
          "type": "string"
        }
      }
    },
    "MetricAvailabilily": {
      "description": "Class repesenting metrics availability and retention",
      "type": "object",
      "properties": {
        "timeGrain": {
          "description": "Time grain",
          "type": "string"
        },
        "retention": {
          "description": "Retention period for the current {Microsoft.Web.Hosting.Administration.MetricAvailabilily.TimeGrain}",
          "type": "string"
        }
      }
    },
    "MetricDefinition": {
      "description": "Class repesenting metadata for the metrics",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "name": {
              "description": "Name of the metric",
              "type": "string"
            },
            "unit": {
              "description": "Unit of the metric",
              "type": "string"
            },
            "primaryAggregationType": {
              "description": "Primary aggregation type",
              "type": "string"
            },
            "metricAvailabilities": {
              "description": "List of time grains supported for the metric together with retention period",
              "type": "array",
              "items": {
                "$ref": "#/definitions/MetricAvailabilily"
              }
            },
            "displayName": {
              "description": "Friendly name shown in the UI",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "MetricDefinitionCollection": {
      "description": "Collection of metric defintions",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricDefinition"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources",
          "type": "string"
        }
      }
    },
    "MigrateMySqlRequest": {
      "description": "Description of a MySql migration request",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "connectionString": {
              "description": "Connection string to the remote MySql database to which data should be migrated",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "NameIdentifier": {
      "description": "Identifies an object",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the object",
          "type": "string"
        }
      }
    },
    "NameValuePair": {
      "description": "Name value pair",
      "type": "object",
      "properties": {
        "name": {
          "description": "Pair name",
          "type": "string"
        },
        "value": {
          "description": "Pair value",
          "type": "string"
        }
      }
    },
    "NetworkAccessControlEntry": {
      "description": "Network Access control entry",
      "type": "object",
      "properties": {
        "action": {
          "enum": [
            "Permit",
            "Deny"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AccessControlEntryAction",
            "modelAsString": false
          }
        },
        "description": {
          "type": "string"
        },
        "order": {
          "format": "int32",
          "type": "integer"
        },
        "remoteSubnet": {
          "type": "string"
        }
      }
    },
    "NetworkFeatures": {
      "description": "This is an object used to store a full view of network features (presently VNET integration and Hybrid Connections)\r\n            for a web app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "virtualNetworkName": {
              "description": "The Vnet Name",
              "type": "string"
            },
            "virtualNetworkConnection": {
              "$ref": "#/definitions/VnetInfo",
              "description": "The Vnet Summary view"
            },
            "hybridConnections": {
              "description": "The Hybrid Connections Summary view",
              "type": "array",
              "items": {
                "$ref": "#/definitions/RelayServiceConnectionEntity"
              }
            },
            "hybridConnectionsV2": {
              "description": "The Hybrid Connection V2 (service bus) view",
              "type": "array",
              "items": {
                "$ref": "#/definitions/HybridConnection"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Object": {
      "type": "object",
      "properties": {}
    },
    "Operation": {
      "description": "Class that represents an operation.",
      "required": [
        "status"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Operation Id",
          "type": "string"
        },
        "name": {
          "description": "Operation Name",
          "type": "string"
        },
        "status": {
          "description": "The current status of the operation",
          "enum": [
            "InProgress",
            "Failed",
            "Succeeded",
            "TimedOut",
            "Created"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "OperationStatus",
            "modelAsString": false
          }
        },
        "errors": {
          "description": "Any errors associate with the operation",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorEntity"
          }
        },
        "createdTime": {
          "format": "date-time",
          "description": "Time when operation has started",
          "type": "string"
        },
        "modifiedTime": {
          "format": "date-time",
          "description": "Time when operation has been updated",
          "type": "string"
        },
        "expirationTime": {
          "format": "date-time",
          "description": "Time when operation will expire",
          "type": "string"
        },
        "geoMasterOperationId": {
          "description": "Applicable only for stamp operation ids.",
          "type": "string"
        }
      }
    },
    "PerfMonCounterCollection": {
      "description": "Collection of perf mon counters",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerfMonResponse"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources",
          "type": "string"
        }
      }
    },
    "PerfMonResponse": {
      "description": "Represents the perf monitor api reponse",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets or sets the response code.",
          "type": "string"
        },
        "message": {
          "description": "Gets or sets the message.",
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/PerfMonSet",
          "description": "Gets or sets the perf mon counters."
        }
      }
    },
    "PerfMonSample": {
      "description": "Class representing a Perf Mon Sample",
      "type": "object",
      "properties": {
        "time": {
          "format": "date-time",
          "description": "Point in time for which counter was measured",
          "type": "string"
        },
        "instanceName": {
          "description": "Name of the server on which the measurement is made",
          "type": "string"
        },
        "value": {
          "format": "double",
          "description": "Value of Counter at certain time",
          "type": "number"
        }
      }
    },
    "PerfMonSet": {
      "description": "Class containing metric information",
      "type": "object",
      "properties": {
        "name": {
          "description": "Unique key name of the counter",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "Start time of the period",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time of the period",
          "type": "string"
        },
        "timeGrain": {
          "description": "Presented time grain",
          "type": "string"
        },
        "values": {
          "description": "Collection of workers that are active during this time",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerfMonSample"
          }
        }
      }
    },
    "PremierAddOnRequest": {
      "description": "Request representing premier add-on",
      "type": "object",
      "properties": {
        "location": {
          "description": "Geo region resource belongs to e.g. SouthCentralUS, SouthEastAsia",
          "type": "string"
        },
        "tags": {
          "description": "Tags associated with resource",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "plan": {
          "$ref": "#/definitions/ArmPlan",
          "description": "Azure resource manager plan"
        },
        "properties": {
          "$ref": "#/definitions/Object",
          "description": "Resource specific properties"
        },
        "sku": {
          "$ref": "#/definitions/SkuDescription",
          "description": "Sku description of the resource"
        }
      }
    },
    "PushSettings": {
      "description": "Push settings for the Web App.",
      "type": "object",
      "properties": {
        "isPushEnabled": {
          "description": "Gets or sets a flag indicating whether the Push endpoint is enabled.",
          "type": "boolean"
        },
        "tagWhitelistJson": {
          "description": "Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.",
          "type": "string"
        },
        "tagsRequiringAuth": {
          "description": "Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.",
          "type": "string"
        },
        "dynamicTagsJson": {
          "description": "Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.",
          "type": "string"
        }
      }
    },
    "RampUpRule": {
      "description": "Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance",
      "type": "object",
      "properties": {
        "actionHostName": {
          "description": "Hostname of a slot to which the traffic will be redirected if decided to. E.g. mysite-stage.azurewebsites.net",
          "type": "string"
        },
        "reroutePercentage": {
          "format": "double",
          "description": "Percentage of the traffic which will be redirected to {Microsoft.Web.Hosting.Administration.RampUpRule.ActionHostName}",
          "type": "number"
        },
        "changeStep": {
          "format": "double",
          "description": "[Optional] In auto ramp up scenario this is the step to to add/remove from {Microsoft.Web.Hosting.Administration.RampUpRule.ReroutePercentage} until it reaches \r\n            {Microsoft.Web.Hosting.Administration.RampUpRule.MinReroutePercentage} or {Microsoft.Web.Hosting.Administration.RampUpRule.MaxReroutePercentage}. Site metrics are checked every N minutes specificed in {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeIntervalInMinutes}.\r\n            Custom decision algorithm can be provided in TiPCallback site extension which Url can be specified in {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeDecisionCallbackUrl}",
          "type": "number"
        },
        "changeIntervalInMinutes": {
          "format": "int32",
          "description": "[Optional] Specifies interval in mimuntes to reevaluate ReroutePercentage",
          "type": "integer"
        },
        "minReroutePercentage": {
          "format": "double",
          "description": "[Optional] Specifies lower boundary above which ReroutePercentage will stay.",
          "type": "number"
        },
        "maxReroutePercentage": {
          "format": "double",
          "description": "[Optional] Specifies upper boundary below which ReroutePercentage will stay.",
          "type": "number"
        },
        "changeDecisionCallbackUrl": {
          "description": "Custom decision algorithm can be provided in TiPCallback site extension which Url can be specified. See TiPCallback site extension for the scaffold and contracts.\r\n            https://www.siteextensions.net/packages/TiPCallback/",
          "type": "string"
        },
        "name": {
          "description": "Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.",
          "type": "string"
        }
      }
    },
    "RecoverResponse": {
      "description": "Response for a recover site request",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "operationId": {
              "description": "ID of the recovery operation. Can be used to check the status of the corresponding operation.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "RelayServiceConnectionEntity": {
      "description": "Class that represents a Biztalk Hybrid Connection",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "entityName": {
              "type": "string"
            },
            "entityConnectionString": {
              "type": "string"
            },
            "resourceType": {
              "type": "string"
            },
            "resourceConnectionString": {
              "type": "string"
            },
            "hostname": {
              "type": "string"
            },
            "port": {
              "format": "int32",
              "type": "integer"
            },
            "biztalkUri": {
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "RequestsBasedTrigger": {
      "description": "RequestsBasedTrigger",
      "type": "object",
      "properties": {
        "count": {
          "format": "int32",
          "description": "Count",
          "type": "integer"
        },
        "timeInterval": {
          "description": "TimeInterval",
          "type": "string"
        }
      }
    },
    "Resource": {
      "description": "Azure resource",
      "required": [
        "location",
        "name"
      ],
      "properties": {
        "id": {
          "description": "Resource Id",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name",
          "type": "string"
        },
        "kind": {
          "description": "Kind of resource",
          "type": "string"
        },
        "location": {
          "description": "Resource Location",
          "type": "string"
        },
        "type": {
          "description": "Resource type",
          "type": "string"
        },
        "tags": {
          "description": "Resource tags",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceMetric": {
      "description": "Object representing a metric for any resource",
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/ResourceMetricName",
          "description": "Name of metric",
          "readOnly": true
        },
        "unit": {
          "description": "Metric unit",
          "type": "string",
          "readOnly": true
        },
        "timeGrain": {
          "description": "Metric granularity. E.g PT1H, PT5M, P1D",
          "type": "string",
          "readOnly": true
        },
        "startTime": {
          "format": "date-time",
          "description": "Metric start time",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "format": "date-time",
          "description": "Metric end time",
          "type": "string",
          "readOnly": true
        },
        "resourceId": {
          "description": "Metric resource Id",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "Resource Id",
          "type": "string",
          "readOnly": true
        },
        "metricValues": {
          "description": "Metric values",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceMetricValue"
          },
          "readOnly": true
        },
        "properties": {
          "description": "Properties",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceMetricProperty"
          },
          "readOnly": true
        }
      }
    },
    "ResourceMetricCollection": {
      "description": "Collection of metric responses",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceMetric"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources",
          "type": "string"
        }
      }
    },
    "ResourceMetricName": {
      "description": "Name of a metric for any resource",
      "type": "object",
      "properties": {
        "value": {
          "description": "metric name value",
          "type": "string",
          "readOnly": true
        },
        "localizedValue": {
          "description": "Localized metric name value",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResourceMetricProperty": {
      "description": "Resource metric property",
      "type": "object",
      "properties": {
        "key": {
          "description": "Key for resource metric property",
          "type": "string"
        },
        "value": {
          "description": "Value of pair",
          "type": "string"
        }
      }
    },
    "ResourceMetricValue": {
      "description": "Value of resource metric",
      "type": "object",
      "properties": {
        "timestamp": {
          "description": "Value timestamp",
          "type": "string",
          "readOnly": true
        },
        "average": {
          "format": "float",
          "description": "Value average",
          "type": "number",
          "readOnly": true
        },
        "minimum": {
          "format": "float",
          "description": "Value minimum",
          "type": "number",
          "readOnly": true
        },
        "maximum": {
          "format": "float",
          "description": "Value maximum",
          "type": "number",
          "readOnly": true
        },
        "total": {
          "format": "float",
          "description": "Value total",
          "type": "number",
          "readOnly": true
        },
        "count": {
          "format": "float",
          "description": "Value count",
          "type": "number",
          "readOnly": true
        },
        "properties": {
          "description": "Properties",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceMetricProperty"
          },
          "readOnly": true
        }
      }
    },
    "RestoreRequest": {
      "description": "Description of a restore request",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "required": [
            "operationType"
          ],
          "properties": {
            "storageAccountUrl": {
              "description": "SAS URL to the container",
              "type": "string"
            },
            "blobName": {
              "description": "Name of a blob which contains the backup",
              "type": "string"
            },
            "overwrite": {
              "description": "True if the restore operation can overwrite target site. \"True\" needed if trying to restore over an existing site.",
              "type": "boolean"
            },
            "siteName": {
              "description": "Name of a site (Web App)",
              "type": "string"
            },
            "databases": {
              "description": "Collection of databses which should be restored. This list has to match the list of databases included in the backup.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatabaseBackupSetting"
              }
            },
            "ignoreConflictingHostNames": {
              "description": "Changes a logic when restoring a site with custom domains. If \"true\", custom domains are removed automatically. If \"false\", custom domains are added to \r\n            the site object when it is being restored, but that might fail due to conflicts during the operation.",
              "type": "boolean"
            },
            "operationType": {
              "description": "Operation type",
              "enum": [
                "Default",
                "Clone",
                "Relocation"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "BackupRestoreOperationType",
                "modelAsString": false
              }
            },
            "adjustConnectionStrings": {
              "description": "Gets or sets a flag showing if SiteConfig.ConnectionStrings should be set in new site",
              "type": "boolean"
            },
            "hostingEnvironment": {
              "description": "App Service Environment name, if needed (only when restoring a site to an App Service Environment)",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "RestoreResponse": {
      "description": "Response for a restore site request",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "operationId": {
              "description": "When server starts the restore process, it will return an OperationId identifying that particular restore operation",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Site": {
      "description": "Represents a web app",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "required": [
            "usageState",
            "availabilityState"
          ],
          "properties": {
            "state": {
              "description": "State of the web app",
              "type": "string"
            },
            "hostNames": {
              "description": "Hostnames associated with web app",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "repositorySiteName": {
              "description": "Name of repository site",
              "type": "string"
            },
            "usageState": {
              "description": "State indicating whether web app has exceeded its quota usage",
              "enum": [
                "Normal",
                "Exceeded"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "UsageState",
                "modelAsString": false
              }
            },
            "enabled": {
              "description": "True if the site is enabled; otherwise, false. Setting this  value to false disables the site (takes the site off line).",
              "type": "boolean"
            },
            "enabledHostNames": {
              "description": "Hostnames for the web app that are enabled. Hostnames need to be assigned and enabled. If some hostnames are assigned but not enabled\r\n            the app is not served on those hostnames",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "availabilityState": {
              "description": "Management information availability state for the web app. Possible values are Normal or Limited. \r\n            Normal means that the site is running correctly and that management information for the site is available. \r\n            Limited means that only partial management information for the site is available and that detailed site information is unavailable.",
              "enum": [
                "Normal",
                "Limited",
                "DisasterRecoveryMode"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SiteAvailabilityState",
                "modelAsString": false
              }
            },
            "hostNameSslStates": {
              "description": "Hostname SSL states are  used to manage the SSL bindings for site's hostnames.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/HostNameSslState"
              }
            },
            "serverFarmId": {
              "type": "string"
            },
            "reserved": {
              "description": "Reserved",
              "type": "boolean"
            },
            "lastModifiedTimeUtc": {
              "format": "date-time",
              "description": "Last time web app was modified in UTC",
              "type": "string"
            },
            "siteConfig": {
              "$ref": "#/definitions/SiteConfig",
              "description": "Configuration of web app"
            },
            "trafficManagerHostNames": {
              "description": "Read-only list of Azure Traffic manager hostnames associated with web app",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "premiumAppDeployed": {
              "description": "If set indicates whether web app is deployed as a premium app",
              "type": "boolean"
            },
            "scmSiteAlsoStopped": {
              "description": "If set indicates whether to stop SCM (KUDU) site when the web app is stopped. Default is false.",
              "type": "boolean"
            },
            "targetSwapSlot": {
              "description": "Read-only property that specifies which slot this app will swap into",
              "type": "string"
            },
            "hostingEnvironmentProfile": {
              "$ref": "#/definitions/HostingEnvironmentProfile",
              "description": "Specification for the hosting environment (App Service Environment) to use for the web app"
            },
            "microService": {
              "description": "Micro services like WebSites, Logic Apps",
              "type": "string"
            },
            "gatewaySiteName": {
              "description": "Name of gateway app associated with web app",
              "type": "string"
            },
            "clientAffinityEnabled": {
              "description": "Specifies if the client affinity is enabled when load balancing http request for multiple instances of the web app",
              "type": "boolean"
            },
            "clientCertEnabled": {
              "description": "Specifies if the client certificate is enabled for the web app",
              "type": "boolean"
            },
            "hostNamesDisabled": {
              "description": "Specifies if the public hostnames are disabled the web app.\r\n            If set to true the app is only accessible via API Management process",
              "type": "boolean"
            },
            "outboundIpAddresses": {
              "description": "List of comma separated IP addresses that this web app uses for outbound connections. Those can be used when configuring firewall rules for databases accessed by this web app.",
              "type": "string"
            },
            "containerSize": {
              "format": "int32",
              "description": "Size of a function container",
              "type": "integer"
            },
            "dailyMemoryTimeQuota": {
              "format": "int32",
              "description": "Maximum allowed daily memory-time quota (applicable on dynamic sites only)",
              "type": "integer"
            },
            "suspendedTill": {
              "format": "date-time",
              "description": "Site suspended till in case memory-time quota is exceeded",
              "type": "string"
            },
            "maxNumberOfWorkers": {
              "format": "int32",
              "description": "Maximum number of workers\r\n            This only applies to function container",
              "type": "integer"
            },
            "cloningInfo": {
              "$ref": "#/definitions/CloningInfo",
              "description": "This is only valid for web app creation. If specified, web app is cloned from \r\n            a source web app"
            },
            "resourceGroup": {
              "description": "Resource group web app belongs to",
              "type": "string"
            },
            "isDefaultContainer": {
              "description": "Site is a default container",
              "type": "boolean"
            },
            "defaultHostName": {
              "description": "Default hostname of the web app",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteAuthSettings": {
      "description": "Configuration settings for the Azure App Service Authentication / Authorization feature.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Gets or sets a value indicating whether the Authentication / Authorization feature is enabled for the current app.",
          "type": "boolean"
        },
        "httpApiPrefixPath": {
          "description": "Gets or sets the relative path prefix used by platform HTTP APIs.\r\n            Changing this value is not recommended except for compatibility reasons.",
          "type": "string"
        },
        "unauthenticatedClientAction": {
          "description": "Gets or sets the action to take when an unauthenticated client attempts to access the app.",
          "enum": [
            "RedirectToLoginPage",
            "AllowAnonymous"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "UnauthenticatedClientAction",
            "modelAsString": false
          }
        },
        "tokenStoreEnabled": {
          "description": "Gets or sets a value indicating whether to durably store platform-specific security tokens\r\n            obtained during login flows. This capability is disabled by default.",
          "type": "boolean"
        },
        "allowedExternalRedirectUrls": {
          "description": "Gets or sets a collection of external URLs that can be redirected to as part of logging in\r\n            or logging out of the web app. Note that the query string part of the URL is ignored.\r\n            This is an advanced setting typically only needed by Windows Store application backends.\r\n            Note that URLs within the current domain are always implicitly allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultProvider": {
          "description": "Gets or sets the default authentication provider to use when multiple providers are configured.\r\n            This setting is only needed if multiple providers are configured and the unauthenticated client\r\n            action is set to \"RedirectToLoginPage\".",
          "enum": [
            "AzureActiveDirectory",
            "Facebook",
            "Google",
            "MicrosoftAccount",
            "Twitter"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BuiltInAuthenticationProvider",
            "modelAsString": false
          }
        },
        "tokenRefreshExtensionHours": {
          "format": "double",
          "description": "Gets or sets the number of hours after session token expiration that a session token can be used to\r\n            call the token refresh API. The default is 72 hours.",
          "type": "number"
        },
        "clientId": {
          "description": "Gets or sets the Client ID of this relying party application, known as the client_id.\r\n            This setting is required for enabling OpenID Connection authentication with Azure Active Directory or \r\n            other 3rd party OpenID Connect providers.\r\n            More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
          "type": "string"
        },
        "clientSecret": {
          "description": "Gets or sets the Client Secret of this relying party application (in Azure Active Directory, this is also referred to as the Key).\r\n            This setting is optional. If no client secret is configured, the OpenID Connect implicit auth flow is used to authenticate end users.\r\n            Otherwise, the OpenID Connect Authorization Code Flow is used to authenticate end users.\r\n            More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
          "type": "string"
        },
        "issuer": {
          "description": "Gets or sets the OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\r\n            When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.\r\n            This URI is a case-sensitive identifier for the token issuer.\r\n            More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html",
          "type": "string"
        },
        "allowedAudiences": {
          "description": "Gets or sets a list of allowed audience values to consider when validating JWTs issued by \r\n            Azure Active Directory. Note that the {Microsoft.Web.Hosting.Administration.SiteAuthSettings.ClientId} value is always considered an\r\n            allowed audience, regardless of this setting.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "additionalLoginParams": {
          "description": "Gets or sets a list of login parameters to send to the OpenID Connect authorization endpoint when\r\n            a user logs in. Each parameter must be in the form \"key=value\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "aadClientId": {
          "type": "string"
        },
        "openIdIssuer": {
          "type": "string"
        },
        "googleClientId": {
          "description": "Gets or sets the OpenID Connect Client ID for the Google web application.\r\n            This setting is required for enabling Google Sign-In.\r\n            Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/",
          "type": "string"
        },
        "googleClientSecret": {
          "description": "Gets or sets the client secret associated with the Google web application.\r\n            This setting is required for enabling Google Sign-In.\r\n            Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/",
          "type": "string"
        },
        "googleOAuthScopes": {
          "description": "Gets or sets the OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication.\r\n            This setting is optional. If not specified, \"openid\", \"profile\", and \"email\" are used as default scopes.\r\n            Google Sign-In documentation: https://developers.google.com/identity/sign-in/web/",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "facebookAppId": {
          "description": "Gets or sets the App ID of the Facebook app used for login.\r\n            This setting is required for enabling Facebook Login.\r\n            Facebook Login documentation: https://developers.facebook.com/docs/facebook-login",
          "type": "string"
        },
        "facebookAppSecret": {
          "description": "Gets or sets the App Secret of the Facebook app used for Facebook Login.\r\n            This setting is required for enabling Facebook Login.\r\n            Facebook Login documentation: https://developers.facebook.com/docs/facebook-login",
          "type": "string"
        },
        "facebookOAuthScopes": {
          "description": "Gets or sets the OAuth 2.0 scopes that will be requested as part of Facebook Login authentication.\r\n            This setting is optional.\r\n            Facebook Login documentation: https://developers.facebook.com/docs/facebook-login",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "twitterConsumerKey": {
          "description": "Gets or sets the OAuth 1.0a consumer key of the Twitter application used for sign-in.\r\n            This setting is required for enabling Twitter Sign-In.\r\n            Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
          "type": "string"
        },
        "twitterConsumerSecret": {
          "description": "Gets or sets the OAuth 1.0a consumer secret of the Twitter application used for sign-in.\r\n            This setting is required for enabling Twitter Sign-In.\r\n            Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
          "type": "string"
        },
        "microsoftAccountClientId": {
          "description": "Gets or sets the OAuth 2.0 client ID that was created for the app used for authentication.\r\n            This setting is required for enabling Microsoft Account authentication.\r\n            Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm",
          "type": "string"
        },
        "microsoftAccountClientSecret": {
          "description": "Gets or sets the OAuth 2.0 client secret that was created for the app used for authentication.\r\n            This setting is required for enabling Microsoft Account authentication.\r\n            Microsoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm",
          "type": "string"
        },
        "microsoftAccountOAuthScopes": {
          "description": "Gets or sets the OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication.\r\n            This setting is optional. If not specified, \"wl.basic\" is used as the default scope.\r\n            Microsoft Account Scopes and permissions documentation: https://msdn.microsoft.com/en-us/library/dn631845.aspx",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SiteCloneability": {
      "description": "Represents whether or not a web app is cloneable",
      "required": [
        "result"
      ],
      "type": "object",
      "properties": {
        "result": {
          "description": "Name of web app",
          "enum": [
            "Cloneable",
            "PartiallyCloneable",
            "NotCloneable"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CloneAbilityResult",
            "modelAsString": false
          }
        },
        "blockingFeatures": {
          "description": "List of features enabled on web app that prevent cloning",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteCloneabilityCriterion"
          }
        },
        "unsupportedFeatures": {
          "description": "List of features enabled on web app that are non-blocking but cannot be cloned. The web app can still be cloned\r\n            but the features in this list will not be set up on cloned web app.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteCloneabilityCriterion"
          }
        },
        "blockingCharacteristics": {
          "description": "List of blocking application characteristics",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteCloneabilityCriterion"
          }
        }
      }
    },
    "SiteCloneabilityCriterion": {
      "description": "Represents a site cloneability criterion",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of criterion",
          "type": "string"
        },
        "description": {
          "description": "Description of criterion",
          "type": "string"
        }
      }
    },
    "SiteConfig": {
      "description": "Configuration of Azure web site",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "numberOfWorkers": {
              "format": "int32",
              "description": "Number of workers",
              "type": "integer"
            },
            "defaultDocuments": {
              "description": "Default documents",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "netFrameworkVersion": {
              "description": "Net Framework Version",
              "type": "string"
            },
            "phpVersion": {
              "description": "Version of PHP",
              "type": "string"
            },
            "pythonVersion": {
              "description": "Version of Python",
              "type": "string"
            },
            "nodeVersion": {
              "description": "Version of Node",
              "type": "string"
            },
            "requestTracingEnabled": {
              "description": "Enable request tracing",
              "type": "boolean"
            },
            "requestTracingExpirationTime": {
              "format": "date-time",
              "description": "Request tracing expiration time",
              "type": "string"
            },
            "remoteDebuggingEnabled": {
              "description": "Remote Debugging Enabled",
              "type": "boolean"
            },
            "remoteDebuggingVersion": {
              "description": "Remote Debugging Version",
              "type": "string"
            },
            "httpLoggingEnabled": {
              "description": "HTTP logging Enabled",
              "type": "boolean"
            },
            "logsDirectorySizeLimit": {
              "format": "int32",
              "description": "HTTP Logs Directory size limit",
              "type": "integer"
            },
            "detailedErrorLoggingEnabled": {
              "description": "Detailed error logging enabled",
              "type": "boolean"
            },
            "publishingUsername": {
              "description": "Publishing user name",
              "type": "string"
            },
            "machineKey": {
              "$ref": "#/definitions/SiteMachineKey",
              "description": "Site MachineKey"
            },
            "handlerMappings": {
              "description": "Handler mappings",
              "type": "array",
              "items": {
                "$ref": "#/definitions/HandlerMapping"
              }
            },
            "documentRoot": {
              "description": "Document root",
              "type": "string"
            },
            "scmType": {
              "description": "SCM type",
              "type": "string"
            },
            "use32BitWorkerProcess": {
              "description": "Use 32 bit worker process",
              "type": "boolean"
            },
            "webSocketsEnabled": {
              "description": "Web socket enabled.",
              "type": "boolean"
            },
            "alwaysOn": {
              "description": "Always On",
              "type": "boolean"
            },
            "javaVersion": {
              "description": "Java version",
              "type": "string"
            },
            "javaContainer": {
              "description": "Java container",
              "type": "string"
            },
            "javaContainerVersion": {
              "description": "Java container version",
              "type": "string"
            },
            "appCommandLine": {
              "description": "App Command Line to launch",
              "type": "string"
            },
            "managedPipelineMode": {
              "description": "Managed pipeline mode",
              "enum": [
                "Integrated",
                "Classic"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ManagedPipelineMode",
                "modelAsString": false
              }
            },
            "virtualApplications": {
              "description": "Virtual applications",
              "type": "array",
              "items": {
                "$ref": "#/definitions/VirtualApplication"
              }
            },
            "loadBalancing": {
              "description": "Site load balancing",
              "enum": [
                "WeightedRoundRobin",
                "LeastRequests",
                "LeastResponseTime",
                "WeightedTotalTraffic",
                "RequestHash"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SiteLoadBalancing",
                "modelAsString": false
              }
            },
            "experiments": {
              "$ref": "#/definitions/Experiments",
              "description": "This is work around for polymophic types"
            },
            "limits": {
              "$ref": "#/definitions/SiteLimits",
              "description": "Site limits"
            },
            "autoHealEnabled": {
              "description": "Auto heal enabled",
              "type": "boolean"
            },
            "autoHealRules": {
              "$ref": "#/definitions/AutoHealRules",
              "description": "Auto heal rules"
            },
            "tracingOptions": {
              "description": "Tracing options",
              "type": "string"
            },
            "vnetName": {
              "description": "Vnet name",
              "type": "string"
            },
            "cors": {
              "$ref": "#/definitions/CorsSettings",
              "description": "Cross-Origin Resource Sharing (CORS) settings."
            },
            "push": {
              "$ref": "#/definitions/PushSettings",
              "description": "Push endpoint settings."
            },
            "apiDefinition": {
              "$ref": "#/definitions/ApiDefinitionInfo",
              "description": "Information about the formal API definition for the web app."
            },
            "autoSwapSlotName": {
              "description": "Auto swap slot name",
              "type": "string"
            },
            "localMySqlEnabled": {
              "description": "Local mysql enabled",
              "type": "boolean"
            },
            "ipSecurityRestrictions": {
              "description": "Ip Security restrictions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/IpSecurityRestriction"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteInstance": {
      "description": "Instance of a web app",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "name": {
              "description": "Name of instance",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteInstanceCollection": {
      "description": "Collection of site instances",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteInstance"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources",
          "type": "string"
        }
      }
    },
    "SiteLimits": {
      "description": "Represents metric limits set on a web app.",
      "type": "object",
      "properties": {
        "maxPercentageCpu": {
          "format": "double",
          "description": "Maximum allowed CPU usage percentage",
          "type": "number"
        },
        "maxMemoryInMb": {
          "format": "int64",
          "description": "Maximum allowed memory usage in MB",
          "type": "integer"
        },
        "maxDiskSizeInMb": {
          "format": "int64",
          "description": "Maximum allowed disk size usage in MB",
          "type": "integer"
        }
      }
    },
    "SiteLogsConfig": {
      "description": "Configuration of Azure web site",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "applicationLogs": {
              "$ref": "#/definitions/ApplicationLogsConfig",
              "description": "Application logs configuration"
            },
            "httpLogs": {
              "$ref": "#/definitions/HttpLogsConfig",
              "description": "Http logs configuration"
            },
            "failedRequestsTracing": {
              "$ref": "#/definitions/EnabledConfig",
              "description": "Failed requests tracing configuration"
            },
            "detailedErrorMessages": {
              "$ref": "#/definitions/EnabledConfig",
              "description": "Detailed error messages configuration"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteMachineKey": {
      "description": "MachineKey of Azure web site",
      "type": "object",
      "properties": {
        "validation": {
          "description": "MachineKeyValidation",
          "type": "string"
        },
        "validationKey": {
          "description": "ValidationKey",
          "type": "string"
        },
        "decryption": {
          "description": "Decryption",
          "type": "string"
        },
        "decryptionKey": {
          "description": "DecryptionKey",
          "type": "string"
        }
      }
    },
    "SiteSourceControl": {
      "description": "Describes the source control configuration for web app",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "repoUrl": {
              "description": "Repository or source control url",
              "type": "string"
            },
            "branch": {
              "description": "Name of branch to use for deployment",
              "type": "string"
            },
            "isManualIntegration": {
              "description": "Whether to manual or continuous integration",
              "type": "boolean"
            },
            "deploymentRollbackEnabled": {
              "description": "Whether to manual or continuous integration",
              "type": "boolean"
            },
            "isMercurial": {
              "description": "Mercurial or Git repository type",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SkuCapacity": {
      "description": "Description of the App Service Plan scale options",
      "type": "object",
      "properties": {
        "minimum": {
          "format": "int32",
          "description": "Minimum number of Workers for this App Service Plan SKU",
          "type": "integer"
        },
        "maximum": {
          "format": "int32",
          "description": "Maximum number of Workers for this App Service Plan SKU",
          "type": "integer"
        },
        "default": {
          "format": "int32",
          "description": "Default number of Workers for this App Service Plan SKU",
          "type": "integer"
        },
        "scaleType": {
          "description": "Available scale configurations for an App Service Plan",
          "type": "string"
        }
      }
    },
    "SkuDescription": {
      "description": "Describes a sku for a scalable resource",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the resource sku",
          "type": "string"
        },
        "tier": {
          "description": "Service Tier of the resource sku",
          "type": "string"
        },
        "size": {
          "description": "Size specifier of the resource sku",
          "type": "string"
        },
        "family": {
          "description": "Family code of the resource sku",
          "type": "string"
        },
        "capacity": {
          "format": "int32",
          "description": "Current number of instances assigned to the resource",
          "type": "integer"
        },
        "skuCapacity": {
          "$ref": "#/definitions/SkuCapacity",
          "description": "Min, max, and default scale values of the sku"
        },
        "locations": {
          "description": "Locations of the sku",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "capabilities": {
          "description": "Capabilities of the sku, eg., is traffic manager enabled?",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Capability"
          }
        }
      }
    },
    "SkuInfo": {
      "description": "Sku discovery information",
      "type": "object",
      "properties": {
        "resourceType": {
          "description": "Resource type that this sku applies to",
          "type": "string"
        },
        "sku": {
          "$ref": "#/definitions/SkuDescription",
          "description": "Name and tier of the sku"
        },
        "capacity": {
          "$ref": "#/definitions/SkuCapacity",
          "description": "Min, max, and default scale values of the sku"
        }
      }
    },
    "SlotConfigNamesResource": {
      "description": "Slot Config names azure resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "connectionStringNames": {
              "description": "List of connection string names",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "appSettingNames": {
              "description": "List of application settings names",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SlotDifference": {
      "description": "An object describing the difference in setting values between two web app slots",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "type": {
              "description": "Indicates the type of the difference: Information, Warning or Error.",
              "type": "string"
            },
            "settingType": {
              "description": "The type of the settings: General, AppSetting or ConnectionString",
              "type": "string"
            },
            "diffRule": {
              "description": "Rule that describes how to process the difference in settings during web app slot swap.",
              "type": "string"
            },
            "settingName": {
              "description": "Name of the setting",
              "type": "string"
            },
            "valueInCurrentSlot": {
              "description": "Value of the setting in the current web app slot",
              "type": "string"
            },
            "valueInTargetSlot": {
              "description": "Value of the setting in the target web app slot",
              "type": "string"
            },
            "description": {
              "description": "Description of the difference",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SlotDifferenceCollection": {
      "description": "Collection of Slot Differences",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SlotDifference"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources",
          "type": "string"
        }
      }
    },
    "SlowRequestsBasedTrigger": {
      "description": "SlowRequestsBasedTrigger",
      "type": "object",
      "properties": {
        "timeTaken": {
          "description": "TimeTaken",
          "type": "string"
        },
        "count": {
          "format": "int32",
          "description": "Count",
          "type": "integer"
        },
        "timeInterval": {
          "description": "TimeInterval",
          "type": "string"
        }
      }
    },
    "Snapshot": {
      "description": "A snapshot of a web app",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "time": {
              "format": "date-time",
              "description": "The time the snapshot was taken",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SnapshotCollection": {
      "description": "Collection of Snapshots which can be used to revert a site to a previous time.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Snapshot"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources",
          "type": "string"
        }
      }
    },
    "SourceControl": {
      "description": "Describes the Source Control OAuth Token",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "name": {
              "description": "Name or Source Control Type",
              "type": "string"
            },
            "token": {
              "description": "OAuth Access Token",
              "type": "string"
            },
            "tokenSecret": {
              "description": "OAuth Access Token Secret",
              "type": "string"
            },
            "refreshToken": {
              "description": "OAuth Refresh Token",
              "type": "string"
            },
            "expirationTime": {
              "format": "date-time",
              "description": "OAuth Token Expiration",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StampCapacity": {
      "description": "Class containing stamp capacity information",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the stamp",
          "type": "string"
        },
        "availableCapacity": {
          "format": "int64",
          "description": "Available capacity (# of machines, bytes of storage etc...)",
          "type": "integer"
        },
        "totalCapacity": {
          "format": "int64",
          "description": "Total capacity (# of machines, bytes of storage etc...)",
          "type": "integer"
        },
        "unit": {
          "description": "Name of the unit",
          "type": "string"
        },
        "computeMode": {
          "description": "Shared/Dedicated workers",
          "enum": [
            "Shared",
            "Dedicated",
            "Dynamic"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ComputeModeOptions",
            "modelAsString": false
          }
        },
        "workerSize": {
          "description": "Size of the machines",
          "enum": [
            "Default",
            "Small",
            "Medium",
            "Large"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "WorkerSizeOptions",
            "modelAsString": false
          }
        },
        "workerSizeId": {
          "format": "int32",
          "description": "Size Id of machines: \r\n            0 - Small\r\n            1 - Medium\r\n            2 - Large",
          "type": "integer"
        },
        "excludeFromCapacityAllocation": {
          "description": "If true it includes basic sites\r\n            Basic sites are not used for capacity allocation.",
          "type": "boolean"
        },
        "isApplicableForAllComputeModes": {
          "description": "Is capacity applicable for all sites?",
          "type": "boolean"
        },
        "siteMode": {
          "description": "Shared or Dedicated",
          "type": "string"
        }
      }
    },
    "StatusCodesBasedTrigger": {
      "description": "StatusCodeBasedTrigger",
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "HTTP status code",
          "type": "integer"
        },
        "subStatus": {
          "format": "int32",
          "description": "SubStatus",
          "type": "integer"
        },
        "win32Status": {
          "format": "int32",
          "description": "Win32 error code",
          "type": "integer"
        },
        "count": {
          "format": "int32",
          "description": "Count",
          "type": "integer"
        },
        "timeInterval": {
          "description": "TimeInterval",
          "type": "string"
        }
      }
    },
    "StorageMigrationOptions": {
      "description": "Description of a backup which will be performed",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "azurefilesConnectionString": {
              "description": "AzureFiles connection string",
              "type": "string"
            },
            "azurefilesShare": {
              "description": "AzureFiles share",
              "type": "string"
            },
            "switchSiteAfterMigration": {
              "description": "Indicate if site should be switched over",
              "type": "boolean"
            },
            "blockWriteAccessToSite": {
              "description": "Indicate if the site should be read only during copy operation",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StorageMigrationResponse": {
      "description": "Response for a migration of site content request",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "operationId": {
              "description": "When server starts the migration process, it will return an OperationId identifying that particular migration operation",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "StringDictionary": {
      "description": "String dictionary resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Settings",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "TldLegalAgreement": {
      "description": "Represents a legal agreement for top level domain",
      "type": "object",
      "properties": {
        "agreementKey": {
          "description": "Unique identifier for the agreement",
          "type": "string"
        },
        "title": {
          "description": "Agreement title",
          "type": "string"
        },
        "content": {
          "description": "Agreement details",
          "type": "string"
        },
        "url": {
          "description": "Url where a copy of the agreement details is hosted",
          "type": "string"
        }
      }
    },
    "TopLevelDomain": {
      "description": "A top level domain object",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "name": {
              "description": "Name of the top level domain",
              "type": "string"
            },
            "privacy": {
              "description": "If true then the top level domain supports domain privacy",
              "type": "boolean"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Usage": {
      "description": "Class that represents usage of the quota resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "displayName": {
              "description": "Friendly name shown in the UI",
              "type": "string"
            },
            "name": {
              "description": "Name of the quota",
              "type": "string"
            },
            "resourceName": {
              "description": "Name of the quota resource",
              "type": "string"
            },
            "unit": {
              "description": "Units of measurement for the quota resource",
              "type": "string"
            },
            "currentValue": {
              "format": "int64",
              "description": "The current value of the resource counter",
              "type": "integer"
            },
            "limit": {
              "format": "int64",
              "description": "The resource limit",
              "type": "integer"
            },
            "nextResetTime": {
              "format": "date-time",
              "description": "Next reset time for the resource counter",
              "type": "string"
            },
            "computeMode": {
              "description": "ComputeMode used for this usage",
              "enum": [
                "Shared",
                "Dedicated",
                "Dynamic"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ComputeModeOptions",
                "modelAsString": false
              }
            },
            "siteMode": {
              "description": "SiteMode used for this usage",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "User": {
      "description": "Represents user crendentials used for publishing activity",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "name": {
              "description": "Username (internal)",
              "type": "string"
            },
            "publishingUserName": {
              "description": "Username used for publishing",
              "type": "string"
            },
            "publishingPassword": {
              "description": "Password used for publishing",
              "type": "string"
            },
            "publishingPasswordHash": {
              "description": "PasswordHash used for publishing",
              "type": "string"
            },
            "publishingPasswordHashSalt": {
              "description": "PasswordHashSalt used for publishing",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ValidateProperties": {
      "description": "Site properties used for validation",
      "type": "object",
      "properties": {
        "serverFarmId": {
          "description": "ARM resource id of an app service plan that would host the web app",
          "type": "string"
        },
        "skuName": {
          "description": "Name of the target SKU for the server farm",
          "type": "string"
        },
        "capacity": {
          "format": "int32",
          "description": "Target capacity of the server farm (number of VM's)",
          "type": "integer"
        },
        "hostingEnvironment": {
          "description": "Name of app service environment where site or server farm should be created",
          "type": "string"
        }
      }
    },
    "ValidateResponseError": {
      "description": "Error details for when validation fails",
      "type": "object",
      "properties": {
        "code": {
          "description": "Validation error code",
          "type": "string"
        },
        "message": {
          "description": "Validation error message",
          "type": "string"
        }
      }
    },
    "VirtualApplication": {
      "description": "Virtual application under web app",
      "type": "object",
      "properties": {
        "virtualPath": {
          "description": "Virtual path",
          "type": "string"
        },
        "physicalPath": {
          "description": "Physical path",
          "type": "string"
        },
        "preloadEnabled": {
          "description": "Is preload enabled",
          "type": "boolean"
        },
        "virtualDirectories": {
          "description": "Virtual Directories for virtual application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualDirectory"
          }
        }
      }
    },
    "VirtualDirectory": {
      "description": "Directory for virtual application",
      "type": "object",
      "properties": {
        "virtualPath": {
          "description": "Path to virtual application",
          "type": "string"
        },
        "physicalPath": {
          "description": "Physical path",
          "type": "string"
        }
      }
    },
    "VirtualIPMapping": {
      "description": "Class that represents a VIP mapping",
      "type": "object",
      "properties": {
        "virtualIP": {
          "description": "Virtual IP address",
          "type": "string"
        },
        "internalHttpPort": {
          "format": "int32",
          "description": "Internal HTTP port",
          "type": "integer"
        },
        "internalHttpsPort": {
          "format": "int32",
          "description": "Internal HTTPS port",
          "type": "integer"
        },
        "inUse": {
          "description": "Is VIP mapping in use",
          "type": "boolean"
        }
      }
    },
    "VirtualNetworkProfile": {
      "description": "Specification for using a virtual network",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource id of the virtual network",
          "type": "string"
        },
        "name": {
          "description": "Name of the virtual network (read-only)",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Resource type of the virtual network (read-only)",
          "type": "string",
          "readOnly": true
        },
        "subnet": {
          "description": "Subnet within the virtual network",
          "type": "string"
        }
      }
    },
    "VnetGateway": {
      "description": "The VnetGateway contract. This is used to give the vnet gateway access to the VPN package.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "vnetName": {
              "description": "The VNET name.",
              "type": "string"
            },
            "vpnPackageUri": {
              "description": "The URI where the Vpn package can be downloaded",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VnetInfo": {
      "description": "VNETInfo contract. This contract is public and is a stripped down version of VNETInfoInternal",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "vnetResourceId": {
              "description": "The vnet resource id",
              "type": "string"
            },
            "certThumbprint": {
              "description": "The client certificate thumbprint",
              "type": "string"
            },
            "certBlob": {
              "description": "A certificate file (.cer) blob containing the public key of the private key used to authenticate a \r\n            Point-To-Site VPN connection.",
              "type": "string"
            },
            "routes": {
              "description": "The routes that this virtual network connection uses.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/VnetRoute"
              }
            },
            "resyncRequired": {
              "description": "Flag to determine if a resync is required",
              "type": "boolean"
            },
            "dnsServers": {
              "description": "Dns servers to be used by this VNET. This should be a comma-separated list of IP addresses.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "VnetRoute": {
      "description": "VnetRoute contract used to pass routing information for a vnet.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "name": {
              "description": "The name of this route. This is only returned by the server and does not need to be set by the client.",
              "type": "string"
            },
            "startAddress": {
              "description": "The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.",
              "type": "string"
            },
            "endAddress": {
              "description": "The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.",
              "type": "string"
            },
            "routeType": {
              "description": "The type of route this is:\r\n            DEFAULT - By default, every web app has routes to the local address ranges specified by RFC1918\r\n            INHERITED - Routes inherited from the real Virtual Network routes\r\n            STATIC - Static route set on the web app only\r\n            \r\n            These values will be used for syncing a Web App's routes with those from a Virtual Network. This operation will clear all DEFAULT and INHERITED routes and replace them\r\n            with new INHERITED routes.",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "WebAppCollection": {
      "description": "Collection of sites",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Site"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources",
          "type": "string"
        }
      }
    },
    "WorkerPool": {
      "description": "Worker pool of a hostingEnvironment (App Service Environment)",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "workerSizeId": {
              "format": "int32",
              "description": "Worker size id for referencing this worker pool",
              "type": "integer"
            },
            "computeMode": {
              "description": "Shared or dedicated web app hosting",
              "enum": [
                "Shared",
                "Dedicated",
                "Dynamic"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ComputeModeOptions",
                "modelAsString": false
              }
            },
            "workerSize": {
              "description": "VM size of the worker pool instances",
              "type": "string"
            },
            "workerCount": {
              "format": "int32",
              "description": "Number of instances in the worker pool",
              "type": "integer"
            },
            "instanceNames": {
              "description": "Names of all instances in the worker pool (read only)",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/SkuDescription"
        }
      }
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Subscription Id",
      "required": true,
      "type": "string"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "API Version",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}