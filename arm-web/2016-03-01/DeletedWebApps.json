{
  "swagger": "2.0",
  "info": {
    "version": "2016-03-01",
    "title": "DeletedWebApps API Client"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/deletedSites": {
      "post": {
        "tags": [
          "DeletedWebApps"
        ],
        "summary": "Get all deleted apps for a subscription.",
        "description": "Get all deleted apps for a subscription.",
        "operationId": "DeletedWebApps_List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeletedWebAppCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/deletedSites": {
      "get": {
        "tags": [
          "DeletedWebApps"
        ],
        "summary": "Gets deleted web apps in subscription.",
        "description": "Gets deleted web apps in subscription.",
        "operationId": "DeletedWebApps_ListByResourceGroup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "propertiesToInclude",
            "in": "query",
            "description": "Additional web app properties included in the response",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeletedWebAppCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "ApiDefinitionInfo": {
      "description": "Information about the formal API definition for the app.",
      "type": "object",
      "properties": {
        "url": {
          "description": "The URL of the API definition.",
          "type": "string"
        }
      }
    },
    "AutoHealActions": {
      "description": "Actions which to take by the auto-heal module when a rule is triggered.",
      "type": "object",
      "properties": {
        "actionType": {
          "description": "Predefined action to be taken.",
          "enum": [
            "Recycle",
            "LogEvent",
            "CustomAction"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AutoHealActionType",
            "modelAsString": false
          }
        },
        "customAction": {
          "$ref": "#/definitions/AutoHealCustomAction",
          "description": "Custom action to be taken."
        },
        "minProcessExecutionTime": {
          "description": "Minimum time the process must execute\r\n            before taking the action",
          "type": "string"
        }
      }
    },
    "AutoHealCustomAction": {
      "description": "Custom action to be executed\r\n            when an auto heal rule is triggered.",
      "type": "object",
      "properties": {
        "exe": {
          "description": "Executable to be run.",
          "type": "string"
        },
        "parameters": {
          "description": "Parameters for the executable.",
          "type": "string"
        }
      }
    },
    "AutoHealRules": {
      "description": "Rules that can be defined for auto-heal.",
      "type": "object",
      "properties": {
        "triggers": {
          "$ref": "#/definitions/AutoHealTriggers",
          "description": "Conditions that describe when to execute the auto-heal actions."
        },
        "actions": {
          "$ref": "#/definitions/AutoHealActions",
          "description": "Actions to be executed when a rule is triggered."
        }
      }
    },
    "AutoHealTriggers": {
      "description": "Triggers for auto-heal.",
      "type": "object",
      "properties": {
        "requests": {
          "$ref": "#/definitions/RequestsBasedTrigger",
          "description": "A rule based on total requests."
        },
        "privateBytesInKB": {
          "format": "int32",
          "description": "A rule based on private bytes.",
          "type": "integer"
        },
        "statusCodes": {
          "description": "A rule based on status codes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusCodesBasedTrigger"
          }
        },
        "slowRequests": {
          "$ref": "#/definitions/SlowRequestsBasedTrigger",
          "description": "A rule based on request execution time."
        }
      }
    },
    "CloningInfo": {
      "description": "Information needed for cloning operation.",
      "required": [
        "sourceWebAppId"
      ],
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "Correlation ID of cloning operation. This ID ties multiple cloning operations\r\n            together to use the same snapshot.",
          "type": "string"
        },
        "overwrite": {
          "description": "<code>true</code> to overwrite destination app; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "cloneCustomHostNames": {
          "description": "<code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "cloneSourceControl": {
          "description": "<code>true</code> to clone source control from source app; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "sourceWebAppId": {
          "description": "ARM resource ID of the source app. App resource ID is of the form \r\n            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and \r\n            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.",
          "type": "string"
        },
        "hostingEnvironment": {
          "description": "App Service Environment.",
          "type": "string"
        },
        "appSettingsOverrides": {
          "description": "Application setting overrides for cloned app. If specified, these settings override the settings cloned \r\n            from source app. Otherwise, application settings from source app are retained.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "configureLoadBalancing": {
          "description": "<code>true</code> to configure load balancing for source and destination app.",
          "type": "boolean"
        },
        "trafficManagerProfileId": {
          "description": "ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form \r\n            /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.",
          "type": "string"
        },
        "trafficManagerProfileName": {
          "description": "Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.",
          "type": "string"
        }
      }
    },
    "CorsSettings": {
      "description": "Cross-Origin Resource Sharing (CORS) settings for the app.",
      "type": "object",
      "properties": {
        "allowedOrigins": {
          "description": "Gets or sets the list of origins that should be allowed to make cross-origin\r\n            calls (for example: http://example.com:12345). Use \"*\" to allow all.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DeletedSite": {
      "description": "A deleted app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "deletedTimestamp": {
              "format": "date-time",
              "description": "Time when the app was deleted.",
              "type": "string",
              "readOnly": true
            },
            "state": {
              "description": "Current state of the app. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "hostNames": {
              "description": "Hostnames associated with the app. Read-only.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "repositorySiteName": {
              "description": "Name of the repository site. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "usageState": {
              "description": "State indicating whether the app has exceeded its quota usage. Read-only.",
              "enum": [
                "Normal",
                "Exceeded"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "UsageState",
                "modelAsString": false
              }
            },
            "enabled": {
              "description": "<code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).",
              "type": "boolean"
            },
            "enabledHostNames": {
              "description": "Enabled hostnames for the app. Read-only. Hostnames need to be assigned (see HostNames) AND enabled. Otherwise,\r\n            the app is not served on those hostnames.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "availabilityState": {
              "description": "Management information availability state for the app. Read-only.",
              "enum": [
                "Normal",
                "Limited",
                "DisasterRecoveryMode"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "SiteAvailabilityState",
                "modelAsString": false
              }
            },
            "hostNameSslStates": {
              "description": "Hostname SSL states are used to manage the SSL bindings for app's hostnames.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/HostNameSslState"
              }
            },
            "serverFarmId": {
              "description": "Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".",
              "type": "string"
            },
            "reserved": {
              "description": "<code>true</code> if reserved; otherwise, <code>false</code>.",
              "default": false,
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "lastModifiedTimeUtc": {
              "format": "date-time",
              "description": "Last time the app was modified, in UTC. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "siteConfig": {
              "$ref": "#/definitions/SiteConfig",
              "description": "Configuration of the app."
            },
            "trafficManagerHostNames": {
              "description": "Azure Traffic Manager hostnames associated with the app. Read-only.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "premiumAppDeployed": {
              "description": "Indicates whether app is deployed as a premium app. Read-only.",
              "type": "boolean",
              "readOnly": true
            },
            "scmSiteAlsoStopped": {
              "description": "<code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.",
              "type": "boolean",
              "readOnly": true
            },
            "targetSwapSlot": {
              "description": "Specifies which deployment slot this app will swap into. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "hostingEnvironmentProfile": {
              "$ref": "#/definitions/HostingEnvironmentProfile",
              "description": "App Service Environment to use for the app.",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "microService": {
              "description": "Micro services like apps, logic apps.",
              "default": false,
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "gatewaySiteName": {
              "description": "Name of gateway app associated with the app.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "clientAffinityEnabled": {
              "description": "<code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.",
              "type": "boolean"
            },
            "clientCertEnabled": {
              "description": "<code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.",
              "type": "boolean"
            },
            "hostNamesDisabled": {
              "description": "<code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.\r\n            If <code>true</code>, the app is only accessible via API management process.",
              "type": "boolean"
            },
            "outboundIpAddresses": {
              "description": "List of IP addresses that the app uses for outbound connections (e.g. database access). Read-only.",
              "type": "string",
              "readOnly": true
            },
            "containerSize": {
              "format": "int32",
              "description": "Size of the function container.",
              "type": "integer"
            },
            "dailyMemoryTimeQuota": {
              "format": "int32",
              "description": "Maximum allowed daily memory-time quota (applicable on dynamic apps only).",
              "type": "integer"
            },
            "suspendedTill": {
              "format": "date-time",
              "description": "App suspended till in case memory-time quota is exceeded.",
              "type": "string",
              "readOnly": true
            },
            "maxNumberOfWorkers": {
              "format": "int32",
              "description": "Maximum number of workers.\r\n            This only applies to Functions container.",
              "type": "integer",
              "readOnly": true
            },
            "cloningInfo": {
              "$ref": "#/definitions/CloningInfo",
              "description": "If specified during app creation, the app is cloned from a source app.",
              "x-ms-mutability": [
                "create"
              ]
            },
            "resourceGroup": {
              "description": "Name of the resource group the app belongs to. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "isDefaultContainer": {
              "description": "<code>true</code> if the app is a default container; otherwise, <code>false</code>. Read-only.",
              "type": "boolean",
              "readOnly": true
            },
            "defaultHostName": {
              "description": "Default hostname of the app. Read-only.",
              "type": "string",
              "readOnly": true
            },
            "slotSwapStatus": {
              "$ref": "#/definitions/SlotSwapStatus",
              "description": "Status of the last deployment slot swap operation.",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "DeletedWebAppCollection": {
      "description": "Collection of deleted apps.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeletedSite"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "Experiments": {
      "description": "Routing rules in production experiments.",
      "type": "object",
      "properties": {
        "rampUpRules": {
          "description": "List of ramp-up rules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RampUpRule"
          }
        }
      }
    },
    "HandlerMapping": {
      "description": "The IIS handler mappings used to define which handler processes HTTP requests with certain extension. \r\n            For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.",
      "type": "object",
      "properties": {
        "extension": {
          "description": "Requests with this extension will be handled using the specified FastCGI application.",
          "type": "string"
        },
        "scriptProcessor": {
          "description": "The absolute path to the FastCGI application.",
          "type": "string"
        },
        "arguments": {
          "description": "Command-line arguments to be passed to the script processor.",
          "type": "string"
        }
      }
    },
    "HostNameSslState": {
      "description": "SSL-enabled hostname.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Hostname.",
          "type": "string"
        },
        "sslState": {
          "description": "SSL type.",
          "enum": [
            "Disabled",
            "SniEnabled",
            "IpBasedEnabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SslState",
            "modelAsString": false
          }
        },
        "virtualIP": {
          "description": "Virtual IP address assigned to the hostname if IP based SSL is enabled.",
          "type": "string"
        },
        "thumbprint": {
          "description": "SSL certificate thumbprint.",
          "type": "string"
        },
        "toUpdate": {
          "description": "Set to <code>true</code> to update existing hostname.",
          "type": "boolean"
        }
      }
    },
    "HostingEnvironmentProfile": {
      "description": "Specification for an App Service Environment to use for this resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource ID of the App Service Environment.",
          "type": "string"
        },
        "name": {
          "description": "Name of the App Service Environment (read only).",
          "type": "string"
        },
        "type": {
          "description": "Resource type of the App Service Environment (read only).",
          "type": "string"
        }
      }
    },
    "IpSecurityRestriction": {
      "description": "IP security restriction on an app.",
      "required": [
        "ipAddress"
      ],
      "type": "object",
      "properties": {
        "ipAddress": {
          "description": "IP address the security restriction is valid for.",
          "type": "string"
        },
        "subnetMask": {
          "description": "Subnet mask for the range of IP addresses the restriction is valid for.",
          "type": "string"
        }
      }
    },
    "PushSettings": {
      "description": "Push settings for the App.",
      "type": "object",
      "properties": {
        "isPushEnabled": {
          "description": "Gets or sets a flag indicating whether the Push endpoint is enabled.",
          "type": "boolean"
        },
        "tagWhitelistJson": {
          "description": "Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.",
          "type": "string"
        },
        "tagsRequiringAuth": {
          "description": "Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.",
          "type": "string"
        },
        "dynamicTagsJson": {
          "description": "Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.",
          "type": "string"
        }
      }
    },
    "RampUpRule": {
      "description": "Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.",
      "type": "object",
      "properties": {
        "actionHostName": {
          "description": "Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.",
          "type": "string"
        },
        "reroutePercentage": {
          "format": "double",
          "description": "Percentage of the traffic which will be redirected to <code>ActionHostName</code>.",
          "type": "number"
        },
        "changeStep": {
          "format": "double",
          "description": "[Optional] In auto ramp up scenario this is the step to to add/remove from <code>ReroutePercentage</code> until it reaches \r\n            <code>MinReroutePercentage</code> or <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specificed in <code>ChangeIntervalInMinutes</code>.\r\n            Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.",
          "type": "number"
        },
        "changeIntervalInMinutes": {
          "format": "int32",
          "description": "[Optional] Specifies interval in mimuntes to reevaluate ReroutePercentage.",
          "type": "integer"
        },
        "minReroutePercentage": {
          "format": "double",
          "description": "[Optional] Specifies lower boundary above which ReroutePercentage will stay.",
          "type": "number"
        },
        "maxReroutePercentage": {
          "format": "double",
          "description": "[Optional] Specifies upper boundary below which ReroutePercentage will stay.",
          "type": "number"
        },
        "changeDecisionCallbackUrl": {
          "description": "Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.\r\n            https://www.siteextensions.net/packages/TiPCallback/",
          "type": "string"
        },
        "name": {
          "description": "Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.",
          "type": "string"
        }
      }
    },
    "RequestsBasedTrigger": {
      "description": "Trigger based on total requests.",
      "type": "object",
      "properties": {
        "count": {
          "format": "int32",
          "description": "Count.",
          "type": "integer"
        },
        "timeInterval": {
          "description": "Time interval.",
          "type": "string"
        }
      }
    },
    "Resource": {
      "description": "Azure resource.",
      "required": [
        "location",
        "name"
      ],
      "properties": {
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name.",
          "type": "string"
        },
        "kind": {
          "description": "Kind of resource.",
          "type": "string"
        },
        "location": {
          "description": "Resource Location.",
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "type": "string"
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "SiteConfig": {
      "description": "Configuration of an App Service app.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ARM envelope properties",
          "properties": {
            "numberOfWorkers": {
              "format": "int32",
              "description": "Number of workers.",
              "type": "integer"
            },
            "defaultDocuments": {
              "description": "Default documents.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "netFrameworkVersion": {
              "description": ".NET Framework version.",
              "default": "v4.6",
              "type": "string"
            },
            "phpVersion": {
              "description": "Version of PHP.",
              "type": "string"
            },
            "pythonVersion": {
              "description": "Version of Python.",
              "type": "string"
            },
            "nodeVersion": {
              "description": "Version of Node.js.",
              "type": "string"
            },
            "requestTracingEnabled": {
              "description": "<code>true</code> if request tracing is enabled; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "requestTracingExpirationTime": {
              "format": "date-time",
              "description": "Request tracing expiration time.",
              "type": "string"
            },
            "remoteDebuggingEnabled": {
              "description": "<code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "remoteDebuggingVersion": {
              "description": "Remote debugging version.",
              "type": "string"
            },
            "httpLoggingEnabled": {
              "description": "<code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "logsDirectorySizeLimit": {
              "format": "int32",
              "description": "HTTP logs directory size limit.",
              "type": "integer"
            },
            "detailedErrorLoggingEnabled": {
              "description": "<code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "publishingUsername": {
              "description": "Publishing user name.",
              "type": "string"
            },
            "machineKey": {
              "$ref": "#/definitions/SiteMachineKey",
              "description": "Site MachineKey.",
              "readOnly": true
            },
            "handlerMappings": {
              "description": "Handler mappings.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/HandlerMapping"
              }
            },
            "documentRoot": {
              "description": "Document root.",
              "type": "string"
            },
            "scmType": {
              "description": "SCM type.",
              "type": "string",
              "readOnly": true
            },
            "use32BitWorkerProcess": {
              "description": "<code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "webSocketsEnabled": {
              "description": "<code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "alwaysOn": {
              "description": "<code>true</code> if Always On is enabled; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "javaVersion": {
              "description": "Java version.",
              "type": "string"
            },
            "javaContainer": {
              "description": "Java container.",
              "type": "string"
            },
            "javaContainerVersion": {
              "description": "Java container version.",
              "type": "string"
            },
            "appCommandLine": {
              "description": "App command line to launch.",
              "type": "string"
            },
            "managedPipelineMode": {
              "description": "Managed pipeline mode.",
              "enum": [
                "Integrated",
                "Classic"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ManagedPipelineMode",
                "modelAsString": false
              }
            },
            "virtualApplications": {
              "description": "Virtual applications.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/VirtualApplication"
              }
            },
            "loadBalancing": {
              "description": "Site load balancing.",
              "enum": [
                "WeightedRoundRobin",
                "LeastRequests",
                "LeastResponseTime",
                "WeightedTotalTraffic",
                "RequestHash"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SiteLoadBalancing",
                "modelAsString": false
              }
            },
            "experiments": {
              "$ref": "#/definitions/Experiments",
              "description": "This is work around for polymophic types."
            },
            "limits": {
              "$ref": "#/definitions/SiteLimits",
              "description": "Site limits."
            },
            "autoHealEnabled": {
              "description": "<code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.",
              "type": "boolean"
            },
            "autoHealRules": {
              "$ref": "#/definitions/AutoHealRules",
              "description": "Auto Heal rules."
            },
            "tracingOptions": {
              "description": "Tracing options.",
              "type": "string"
            },
            "vnetName": {
              "description": "Virtual Network name.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "cors": {
              "$ref": "#/definitions/CorsSettings",
              "description": "Cross-Origin Resource Sharing (CORS) settings."
            },
            "push": {
              "$ref": "#/definitions/PushSettings",
              "description": "Push endpoint settings."
            },
            "apiDefinition": {
              "$ref": "#/definitions/ApiDefinitionInfo",
              "description": "Information about the formal API definition for the app."
            },
            "autoSwapSlotName": {
              "description": "Auto-swap slot name.",
              "type": "string"
            },
            "localMySqlEnabled": {
              "description": "<code>true</code> to enable local MySQL; otherwise, <code>false</code>.",
              "default": false,
              "type": "boolean"
            },
            "ipSecurityRestrictions": {
              "description": "IP security restrictions.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/IpSecurityRestriction"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SiteLimits": {
      "description": "Metric limits set on an app.",
      "type": "object",
      "properties": {
        "maxPercentageCpu": {
          "format": "double",
          "description": "Maximum allowed CPU usage percentage.",
          "type": "number"
        },
        "maxMemoryInMb": {
          "format": "int64",
          "description": "Maximum allowed memory usage in MB.",
          "type": "integer"
        },
        "maxDiskSizeInMb": {
          "format": "int64",
          "description": "Maximum allowed disk size usage in MB.",
          "type": "integer"
        }
      }
    },
    "SiteMachineKey": {
      "description": "MachineKey of an app.",
      "type": "object",
      "properties": {
        "validation": {
          "description": "MachineKey validation.",
          "type": "string"
        },
        "validationKey": {
          "description": "Validation key.",
          "type": "string"
        },
        "decryption": {
          "description": "Decryption.",
          "type": "string"
        },
        "decryptionKey": {
          "description": "Decryption key.",
          "type": "string"
        }
      }
    },
    "SlotSwapStatus": {
      "description": "The status of the last successfull slot swap operation.",
      "type": "object",
      "properties": {
        "timestampUtc": {
          "format": "date-time",
          "description": "The time the last successful slot swap completed.",
          "type": "string",
          "readOnly": true
        },
        "sourceSlotName": {
          "description": "The source slot of the last swap operation.",
          "type": "string",
          "readOnly": true
        },
        "destinationSlotName": {
          "description": "The destination slot of the last swap operation.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SlowRequestsBasedTrigger": {
      "description": "Trigger based on request execution time.",
      "type": "object",
      "properties": {
        "timeTaken": {
          "description": "Time taken.",
          "type": "string"
        },
        "count": {
          "format": "int32",
          "description": "Count.",
          "type": "integer"
        },
        "timeInterval": {
          "description": "Time interval.",
          "type": "string"
        }
      }
    },
    "StatusCodesBasedTrigger": {
      "description": "Trigger based on status code.",
      "type": "object",
      "properties": {
        "status": {
          "format": "int32",
          "description": "HTTP status code.",
          "type": "integer"
        },
        "subStatus": {
          "format": "int32",
          "description": "SubStatus.",
          "type": "integer"
        },
        "win32Status": {
          "format": "int32",
          "description": "Win32 error code.",
          "type": "integer"
        },
        "count": {
          "format": "int32",
          "description": "Count.",
          "type": "integer"
        },
        "timeInterval": {
          "description": "Time interval.",
          "type": "string"
        }
      }
    },
    "VirtualApplication": {
      "description": "Virtual application in an app.",
      "type": "object",
      "properties": {
        "virtualPath": {
          "description": "Virtual path.",
          "type": "string"
        },
        "physicalPath": {
          "description": "Physical path.",
          "type": "string"
        },
        "preloadEnabled": {
          "description": "<code>true</code> if preloading is enabled; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "virtualDirectories": {
          "description": "Virtual directories for virtual application.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualDirectory"
          }
        }
      }
    },
    "VirtualDirectory": {
      "description": "Directory for virtual application.",
      "type": "object",
      "properties": {
        "virtualPath": {
          "description": "Path to virtual application.",
          "type": "string"
        },
        "physicalPath": {
          "description": "Physical path.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
      "required": true,
      "type": "string"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "Name of the resource group to which the resource belongs.",
      "required": true,
      "type": "string",
      "maxLength": 90,
      "minLength": 1,
      "pattern": "^[-\\\\w\\\\._\\\\(\\\\)]+[^\\\\.]$"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "API Version",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}