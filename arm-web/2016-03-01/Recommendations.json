{
  "swagger": "2.0",
  "info": {
    "version": "2016-03-01",
    "title": "Recommendations API Client"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/recommendations": {
      "get": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Get all recommendations for a subscription.",
        "description": "Get all recommendations for a subscription.",
        "operationId": "Recommendations_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "featured",
            "in": "query",
            "description": "Specify <code>true</code> to return only the most critical recommendations. The default is <code>false</code>, which returns all recommendations.",
            "type": "boolean"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Return only channels specified in the filter. Filter is specified by using OData syntax. Example: $filter=channels eq 'Api' or channel eq 'Notification'",
            "x-ms-skip-url-encoding": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Recommendation"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/recommendations/reset": {
      "post": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Reset all recommendation opt-out settings for a subscription.",
        "description": "Reset all recommendation opt-out settings for a subscription.",
        "operationId": "Recommendations_ResetAllFilters",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendationHistory": {
      "get": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Get past recommendations for an app, optionally specified by the time range.",
        "description": "Get past recommendations for an app, optionally specified by the time range.",
        "operationId": "Recommendations_ListHistoryForWebApp",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "siteName",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "The start time of a time range to query, e.g. $filter=startTime eq '2015-01-01T00:00:00Z' and endTime eq '2015-01-02T00:00:00Z'.",
            "type": "string"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "The end time of a time range to query, e.g. $filter=startTime eq '2015-01-01T00:00:00Z' and endTime eq '2015-01-02T00:00:00Z'.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Recommendation"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations": {
      "get": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Get all recommendations for an app.",
        "description": "Get all recommendations for an app.",
        "operationId": "Recommendations_ListRecommendedRulesForWebApp",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "siteName",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "featured",
            "in": "query",
            "description": "Specify <code>true</code> to return only the most critical recommendations. The default is <code>false</code>, which returns all recommendations.",
            "type": "boolean"
          },
          {
            "name": "webAppSku",
            "in": "query",
            "description": "SKU of the app.",
            "type": "string"
          },
          {
            "name": "numSlots",
            "in": "query",
            "description": "Number of deployment slots in the app.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "liveHours",
            "in": "query",
            "description": "If greater than zero, this operation scans the last active live site symptoms and dynamically generate on-the-fly recommendations.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Recommendation"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations/disable": {
      "post": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Disable all recommendations for an app.",
        "description": "Disable all recommendations for an app.",
        "operationId": "Recommendations_DisableAllForWebApp",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "siteName",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations/reset": {
      "post": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Reset all recommendation opt-out settings for an app.",
        "description": "Reset all recommendation opt-out settings for an app.",
        "operationId": "Recommendations_ResetAllFiltersForWebApp",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "siteName",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations/{name}": {
      "get": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Get a recommendation rule for an app.",
        "description": "Get a recommendation rule for an app.",
        "operationId": "Recommendations_GetRuleDetailsByWebApp",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "siteName",
            "in": "path",
            "description": "Name of the app.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the recommendation.",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateSeen",
            "in": "query",
            "description": "Specify <code>true</code> to update the last-seen timestamp of the recommendation object.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecommendationRule"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Recommendation": {
      "description": "Represents a recommendation result generated by the recommendation engine.",
      "type": "object",
      "properties": {
        "creationTime": {
          "format": "date-time",
          "description": "Timestamp when this instance was created.",
          "type": "string"
        },
        "recommendationId": {
          "description": "A GUID value that each recommendation object is associated with.",
          "type": "string"
        },
        "resourceId": {
          "description": "Full ARM resource ID string that this recommendation object is associated with.",
          "type": "string"
        },
        "resourceScope": {
          "description": "Name of a resource type this recommendation applies, e.g. Subscription, ServerFarm, Site.",
          "type": "string"
        },
        "ruleName": {
          "description": "Unique name of the rule.",
          "type": "string"
        },
        "displayName": {
          "description": "UI friendly name of the rule (may not be unique).",
          "type": "string"
        },
        "message": {
          "description": "Localized text of recommendation, good for UI.",
          "type": "string"
        },
        "level": {
          "description": "Level indicating how critical this recommendation can impact.",
          "enum": [
            "Critical",
            "Warning",
            "Information",
            "NonUrgentSuggestion"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "NotificationLevel",
            "modelAsString": false
          }
        },
        "channels": {
          "description": "List of channels that this recommendation can apply.",
          "enum": [
            "Notification",
            "Api",
            "Email",
            "Webhook",
            "All"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "Channels",
            "modelAsString": false
          }
        },
        "tags": {
          "description": "The list of category tags that this recommendation belongs to.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "actionName": {
          "description": "Name of action recommended by this object.",
          "type": "string"
        },
        "enabled": {
          "format": "int32",
          "description": "On/off flag indicating the rule is currently enabled or disabled.",
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "description": "The beginning time of a range that the recommendation refers to.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "The end time of a range that the recommendation refers to.",
          "type": "string"
        },
        "nextNotificationTime": {
          "format": "date-time",
          "description": "When to notify this recommendation next. Null means that this will never be notified anymore.",
          "type": "string"
        },
        "notificationExpirationTime": {
          "format": "date-time",
          "description": "Date and time when this notification expires.",
          "type": "string"
        },
        "notifiedTime": {
          "format": "date-time",
          "description": "Last timestamp this instance was actually notified. Null means that this recommendation hasn't been notified yet.",
          "type": "string"
        },
        "score": {
          "format": "double",
          "description": "A metric value measured by the rule.",
          "type": "number"
        }
      }
    },
    "RecommendationRule": {
      "description": "Represents a recommendation rule that the recommendation engine can perform.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Unique name of the rule.",
          "type": "string"
        },
        "displayName": {
          "description": "UI friendly name of the rule.",
          "type": "string"
        },
        "message": {
          "description": "Localized name of the rule (Good for UI).",
          "type": "string"
        },
        "recommendationId": {
          "description": "Recommendation ID of an associated recommendation object tied to the rule, if exists.\r\n            If such an object doesn't exist, it is set to null.",
          "type": "string"
        },
        "description": {
          "description": "Localized detailed description of the rule.",
          "type": "string"
        },
        "actionName": {
          "description": "Name of action that is recommended by this rule in string.",
          "type": "string"
        },
        "enabled": {
          "format": "int32",
          "description": "On/off flag indicating the rule is currently enabled or disabled.",
          "type": "integer"
        },
        "level": {
          "description": "Level of impact indicating how critical this rule is.",
          "enum": [
            "Critical",
            "Warning",
            "Information",
            "NonUrgentSuggestion"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "NotificationLevel",
            "modelAsString": false
          }
        },
        "channels": {
          "description": "List of available channels that this rule applies.",
          "enum": [
            "Notification",
            "Api",
            "Email",
            "Webhook",
            "All"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "Channels",
            "modelAsString": false
          }
        },
        "tags": {
          "description": "An array of category tags that the rule contains.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Resource": {
      "description": "Azure resource.",
      "required": [
        "location",
        "name"
      ],
      "properties": {
        "id": {
          "description": "Resource Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name.",
          "type": "string"
        },
        "kind": {
          "description": "Kind of resource.",
          "type": "string"
        },
        "location": {
          "description": "Resource Location.",
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "type": "string"
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-azure-resource": true
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
      "required": true,
      "type": "string"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "Name of the resource group to which the resource belongs.",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string",
      "maxLength": 90,
      "minLength": 1,
      "pattern": "^[-\\\\w\\\\._\\\\(\\\\)]+[^\\\\.]$"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "API Version",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}