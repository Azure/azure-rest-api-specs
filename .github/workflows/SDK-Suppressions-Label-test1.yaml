name: breakingchange suppressions label Workflow Test

on:
  pull_request:
    branches:
      - jacktn/suppression-action 
    types:
      - opened
      - synchronize
      - reopened

  workflow_dispatch:

env:
  script_result: ''

jobs:
  manage_sdk_suppressions_labels_test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Set Label
      #   uses: actions/github-script@v7
      #   env:
      #     OWNER: ${{ inputs.owner }}
      #     REPO: ${{ inputs.repo }}
      #     ISSUE_NUMBER: ${{ inputs.issue_number }}
      #     RUN_ID: ${{ inputs.run_id }}
      #   with:
      #     script: |
      #       const action = require('./.github/actions/update-labels/action.js')
      #       await action({ github, context, core });
      - name: Set color
        id: color-selector
        run: echo "SELECTED_COLOR=green" >> "$GITHUB_OUTPUT"
      - name: Get color
        env:
          SELECTED_COLOR: ${{ steps.color-selector.outputs.SELECTED_COLOR }}
        run: echo "The selected color is $SELECTED_COLOR"

      - name: get GitHub pr info
        uses: actions/github-script@v7
        id: fetch-pr-info
        with:
          script: |
            const pr = context.payload.pull_request;
            const prNumber = pr.number;
            const prTitle = pr.title;
            const prBaseSha = pr.base.sha;
            const prHeadSha = pr.head.sha;
            const prlabels = pr.labels;

            console.log(`PR Number: ${prNumber}`);
            console.log(`PR Title: ${prTitle}`);
            console.log(`base sha: ${prBaseSha}`);
            console.log(`head sha: ${prHeadSha}`);
            prlabels.map(file => console.log(file.filename));
            console.log(`labels: ${prlabels}`);

            # core.setOutput("prNumber", prNumber);
            # core.setOutput("prTitle", prTitle);
            # core.setOutput("prBaseSha", prBaseSha);
            # core.setOutput("prHeadSha", prHeadSha);
            # core.setOutput("prLabels", prlabels);

            return { prNumber, prTitle };
          result-encoding: string

      - name: save GitHub env
        run: |
          echo "PR_NUMBER=${{ steps.fetch-pr-info.outputs.prNumber }}" >> $GITHUB_ENV
          echo "PR_TITLE=${{ steps.fetch-pr-info.outputs.prTitle }}" >> $GITHUB_ENV
          echo "PR_BASE_SHA=${{ steps.fetch-pr-info.outputs.prBaseSha }}" >> $GITHUB_ENV
          echo "PR_HEAD_SHA=${{ steps.fetch-pr-info.outputs.prHeadSha }}" >> $GITHUB_ENV
          echo "PR_LABELS=${{ steps.fetch-pr-info.outputs.prlabels }}" >> $GITHUB_ENV

      - name: test GitHub env
        run: |
          echo "Pull Request Number: $PR_NUMBER"
          echo "Pull Request Title: $PR_TITLE"
          echo "Pull Request base: $PR_BASE_SHA"
          echo "Pull Request head: $PR_HEAD_SHA"
          echo "Pull Request head: $PR_LABELS"

      - name: Use GitHub Script to get changed files
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number; // Get PR number from context

            // Get changed files in the PR
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
            });

            // Log changed files
            console.log(`Changed files in PR #${prNumber}:`);
            files.forEach(file => {
              console.log(`- ${file.filename} (status: ${file.status})`);
            });

            // Optionally return the list of files to be used in the next steps
            return files.map(file => file.filename);
        id: get-changed-files

      - name: Save changed files to GitHub environment
        run: |
          echo "CHANGED_FILES=${{ steps.get-changed-files.outputs.result }}" >> $GITHUB_ENV

      - name: Display changed files
        run: |
          echo "Changed files in the PR:"
          echo "$CHANGED_FILES"


      # - name: test github-script
      #   uses: actions/github-script@v7
      #   with:
      #     result-encoding: string
      #     retries: 3
      #     retry-exempt-status-codes: 400,401
      #     script: |
      #       # github.rest.issues.createComment({
      #       #   owner: context.repo.owner,
      #       #   repo: context.repo.repo,
      #       #   issue_number: context.issue.number,
      #       #   body: "Thank you for your contribution! ðŸš€"
      #       # });
            

      #       # const script = require('.github/actions/handle-suppressions/suppressions.js')
      #       # await script({github, context, core})

      #       console.log("event:", context.eventName);
      #       console.log("actor:", context.actor);
      #       console.log("repo:", context.repo);
      #       console.log("SHA:", context.sha);
      #       console.log("payload", context.payload);
      #       console.log("pull_request", context.payload.pull_request);


      #       console.log("=== GitHub Context ===");
      #       console.log(context);

      #       console.log("Repository Info:", context.repo);
      #       console.log("Actor:", context.actor);
      #       console.log("Event Name:", context.eventName);
      #       console.log("Payload:", context.payload);
      #       console.log("Run ID:", context.runId);
      #       console.log("Run Number:", context.runNumber);
      #       console.log("SHA:", context.sha);
      #       console.log("Ref:", context.ref);
      #       console.log("Workflow:", context.workflow);
      #       console.log("Job:", context.job);
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.SPEC_REPO_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
            node-version: '20'

      # - name: Print GitHub Context
      #   run: |
      #     echo "GitHub Context: ${{ toJson(github.event) }}"

      # - name: Run the script
      #   run: node eng/tools/sdk-suppressions/cmd/sdk-suppressions-label.js
      - name: Run Node.js script
        id: run-script
        run: |
          # echo "GITHUB_PULL_REQUEST_BASE_REPO_OWNER=${{ github.event.pull_request.base.repo.owner.login }}" >> $GITHUB_ENV
          # echo "GITHUB_PULL_REQUEST_BASE_REPO_NAME=${{ github.event.pull_request.base.repo.name }}" >> $GITHUB_ENV
          # echo "GITHUB_PULL_REQUEST_HEAD_REPO_OWNER=${{ github.event.pull_request.head.repo.owner.login }}" >> $GITHUB_ENV
          # echo "GITHUB_PULL_REQUEST_HEAD_REPO_NAME=${{ github.event.pull_request.head.repo.name }}" >> $GITHUB_ENV
          # echo "GITHUB_PULL_REQUEST_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV

          echo "GITHUB_EVENT_NAME=${{ github.event_name }}" >> $GITHUB_ENV

          echo "GITHUB_HEAD_REF=${{ github.head_ref }}" >> $GITHUB_ENV
          echo "GITHUB_BASE_REF=${{ github.base_ref }}" >> $GITHUB_ENV
          echo "GITHUB_PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          echo "GITHUB_PR_REF=${{ github.ref }}" >> $GITHUB_ENV
          echo "GITHUB_PR_REF_NAME=${{ github.ref_name }}" >> $GITHUB_ENV
          echo "GITHUB_PR_RUN_NUMBER=${{ github.run_number }}" >> $GITHUB_ENV

          node eng/tools/sdk-suppressions/cmd/sdk-suppressions-label.js
          OUTPUT=$(cat output.json)
          echo "Script JSON Output: $OUTPUT"
          echo "script_result=$OUTPUT" >> $GITHUB_ENV

      - name: Write all JSON content
        run: |
          echo "Entire JSON content:"
          echo "${{ env.script_result }}"

      # - name: Run Manage-SDKSuppression-Label script from file
      #   run: |
      #     .\scripts\Manage-SDKSuppression-Label.ps1
      #   env:
      #     GITHUB_EVENT_PULL_REQUEST_BASE_REPO_OWNER: ${{ github.event.pull_request.base.repo.owner.login }}
      #     GITHUB_EVENT_PULL_REQUEST_BASE_REPO_NAME: ${{ github.event.pull_request.base.repo.name }}
      #     GITHUB_EVENT_PULL_REQUEST_BASE_REF: ${{ github.event.pull_request.base.ref }}
      #     GITHUB_EVENT_PULL_REQUEST_HEAD_REPO_OWNER: ${{ github.event.pull_request.head.repo.owner.login }}
      #     GITHUB_EVENT_PULL_REQUEST_HEAD_REPO_NAME: ${{ github.event.pull_request.head.repo.name }}
      #     GITHUB_EVENT_PULL_REQUEST_HEAD_REF: ${{ github.event.pull_request.head.ref }}
      #     GITHUB_EVENT_PULL_REQUEST_NUMBER: ${{ github.event.pull_request.number }}
      #     GITHUB_TOKEN: ${{ secrets.TOKEN }}