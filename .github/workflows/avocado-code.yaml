name: "Swagger Avocado - Analyze Code"

on: pull_request

permissions:
  contents: read

jobs:
  avocado-code:
    name: "Swagger Avocado - Analyze Code"

    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
        with:
          # Must include all branches, for git branch logic in Avocado to work correctly
          fetch-depth: 0

      - name: Setup Node and install deps
        uses: ./.github/actions/setup-node-install-deps

      - name: Run Avocado
        id: run-avocado
        run: |
          set -o pipefail

          AVOCADO_LOG_FILE=$RUNNER_TEMP/avocado.log
          AVOCADO_OUTPUT_FILE=$RUNNER_TEMP/avocado.ndjson

          echo "output-file=$AVOCADO_OUTPUT_FILE"> $GITHUB_OUTPUT
          echo "log-file=$AVOCADO_LOG_FILE"> $GITHUB_OUTPUT

          npm exec --no -- avocado \
            --excludePaths \
              "/common-types/" \
              "/scenarios/" \
              "/package.json" \
              "/package-lock.json" \
              "/cadl/examples/" \
              '(?=/examples/)(?!(?:/stable/|/preview/))' \
              "/\\.github/" \
              "/eng/" \
            --includePaths \
              "data-plane" \
              "resource-manager" \
            --file \
              $AVOCADO_OUTPUT_FILE \
            | tee $AVOCADO_LOG_FILE
        env:
          # Tells Avocado to analyze the files changed between the PR head (default checkout)
          # and the PR base branch.
          SYSTEM_PULLREQUEST_TARGETBRANCH: ${{ github.event.pull_request.base.ref }}

      - name: Generate Job Summary
        if: ${{ always() && (steps.run-avocado.outputs.log-file || steps.run-avocado.outputs.output-file) }}
        id: generate-job-summary
        uses: actions/github-script@v7
        with:
          script: |
            const { default: generateJobSummary } =
              await import('${{ github.workspace }}/.github/workflows/src/avocado-code.js');
            return await generateJobSummary({ core });
        env:
          AVOCADO_LOG_FILE: ${{ steps.run-avocado.outputs.log-file }}
          AVOCADO_OUTPUT_FILE: ${{ steps.run-avocado.outputs.output-file }}

      # Used by other workflows like set-status
      - name: Set job-summary artifact
        if: ${{ always() && steps.generate-job-summary.outputs.summary }}
        uses: actions/upload-artifact@v4
        with:
          name: job-summary
          path: ${{ steps.generate-job-summary.outputs.summary }}
          # If the file doesn't exist, just don't add the artifact
          if-no-files-found: ignore
