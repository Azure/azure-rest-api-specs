---
- rule:
    type: checkbox
    keywords:
      - "WaitForARMFeedback"
    booleanFilterExpression: "!(ARMSignedOff||ARMChangesRequested||Approved-OkToMerge||WaitForARMRevisit)"
    onCheckedLabels:
      - WaitForARMFeedback
    onCheckedComments: "Hi, @${PRAuthor} your PR are labelled with <b> WaitForARMFeedback</b>. A notification email will be sent out shortly afterwards to notify ARM review board(armapireview@microsoft.com). cc @${PRAssignee} "

- rule:
    type: label
    label: BreakingChangeReviewRequired
    variables:
        openapiHub: https://portal.azure-devex-tools.com
    onLabeledComments: "Hi @${PRAuthor}, one or multiple breaking change(s) is detected in your PR. Please check out the breaking change(s), and provide business justification in the PR comment and @ PR assignee why you must have these change(s), and how external customer impact can be mitigated. Please ensure to follow [breaking change policy](https://aka.ms/AzBreakingChangesPolicy) to request breaking change review and approval before proceeding swagger PR review. </br>**Action**: To initiate an evaluation of the breaking change, create a new intake using the [template for breaking changes](https://aka.ms/Breakingchangetemplate). Addition details on the process and office hours are on the [Breaking change Wiki](https://dev.azure.com/msazure/AzureWiki/_wiki/wikis/AzureWiki.wiki/37684/Breaking-Changes).</br> If you want to know the production traffic statistic, please see [ARM Traffic statistic](${openapiHub}/api/pr/query-traffic?pr=${owner}/${repo}/${PRNumber}&days=5). </br> If you think it is false positive breaking change, please provide the reasons in the PR comment, report to Swagger Tooling Team via https://aka.ms/swaggerfeedback."

- rule:
    type: label
    repoAllowList:
      - Azure/azure-rest-api-specs-pr
    variables:
      openapiHub: https://portal.azure-devex-tools.com
      to: Azure/azure-rest-api-specs/master
    label: Approved-OkToMerge
    onLabeledComments: "Hi @${PRAuthor},Your PR is approved. Congratulations. </br>  <li> Since your PR is in private repo (azure-rest-api-specs-pr),  there won’t be PR merge. If you want to publish the PR to public repo (Azure/azure-rest-api-specs) and get it merged, pls use [OpenAPIHub Publish PR](${openapiHub}/tools/publishpullrequest?pr=${owner}/${repo}/${PRNumber}&to=${to}).</li> <li> For further guidance on how to proceed.  Please refer to this [wiki](https://dev.azure.com/azure-sdk/internal/_wiki/wikis/internal.wiki/205/RP-Scenarios-to-Contribute-to-Swagger?anchor=**public-repository-vs.-private-repository**)</li>"

- rule:
    type: label
    label: NewApiVersionRequired
    onLabeledComments: "<b>NewApiVersionRequired reason:</b></br> </br><b>A service’s API is a contract with customers and is represented by using the api-version query parameter. Changes such as adding an optional property to a request/response or introducing a new operation is a change to the service’s contract and therefore requires a new api-version value. This is critically important for documentation, client libraries, and customer support. </b> </br></br> EXAMPLE: if a customer calls a service in the public cloud using <b>api-version=2020-07-27</b>, the new property or operation may exist but if they call the service in a government cloud, air-gapped cloud, or Azure Stack Hub cloud using the same api-version, the property or operation may not exist. Because there is no clear relationship between the service api-version and the new property/operation, customers can’t trust the documentation and Azure customer have difficulty helping customers diagnose issues. In addition, each client library version documents the service version it supports. When an optional property or new operation is added to a service and its Swagger, new client libraries must be produced to expose this functionality to customers. Without updating the api-version, it is unclear to customers which version of a client library supports these new features.  "

- rule:
    type: label
    label: CI-FixRequiredOnFailure
    onLabeledComments: >- 
      Hi @${PRAuthor}, Your PR has some issues. Please fix the CI sequentially by following the order of `Avocado, semantic validation, model validation, breaking change, lintDiff`. 
      <table><tr><th>Task</th><th>How to fix</th><th>Priority</th><th>Support (Microsoft alias)</th></tr>
      <tr><td>Avocado</td><td>[Fix-Avocado](https://github.com/Azure/avocado)</td><td>High</td><td>ruowan</td></tr>
      <tr><td>Semantic validation</td><td>[Fix-SemanticValidation-Error](https://github.com/Azure/azure-rest-api-specs/blob/master/documentation/ci-fix.md#semantic-validation)</td><td>High</td><td>raychen, jianyxi</td></tr>
      <tr><td>Model validation</td><td>[Fix-ModelValidation-Error](https://github.com/Azure/azure-rest-api-specs/blob/master/documentation/ci-fix.md#model-validation)</td><td>High</td><td>raychen,jianyxi</td></tr>
      <tr><td>LintDiff</td><td>[Fix-LintDiff](https://github.com/Azure/azure-rest-api-specs/blob/master/documentation/ci-fix.md#linter-validation)</td><td>high</td><td>jianyxi, ruoxuan</td></tr></table> 
      If you need further help, please feedback via [swagger feedback](https://aka.ms/swaggerfeedback)." 

- rule:
    type: PROpen
    variables:
      openapiHub: https://portal.azure-devex-tools.com
    keywords:
      - "I have reviewed the [documentation](https://aka.ms/ameonboard) for the workflow."
    onOpenedComments: "Hi, @${PRAuthor} Thanks for your PR. I am workflow bot for review process. Here are some small tips. </br> <li> Please ensure to do self-check against checklists in first PR comment.</li> <li> PR assignee is the person auto-assigned and responsible for your current PR reviewing and merging. </li>   <li> For specs comparison cross API versions,  Use [API Specs Comparison Report Generator](${openapiHub}/tools/diff?pr=${owner}/${repo}/${PRNumber})</li>  <li> If there is CI failure(s), to fix CI error(s) is mandatory for PR merging; or you need to provide justification in PR comment for explanation. [How to fix?](https://github.com/Azure/azure-rest-api-specs/blob/master/documentation/ci-fix.md)</li></br> Any feedback about review process or workflow bot, pls contact swagger and tools team. vsswagger@microsoft.com"

- rule:
    type: checkbox
    keywords:
      - "update existing version to fix swagger quality issue in s360"
    onCheckedLabels:
      - FixS360
    onCheckedComments: "In the Window Period to fix mismatches between swagger and service,  when PR is labelled with “FixS360”, breaking change can be approved by PR assignee; the Azure Breaking Change Board is no longer required to approve the PR.  Please ensure to clarify what s360 action items to be solved, and @ mention PR assignee for awareness.  Please check this wiki [Window to Fix Broken]( Window to Fix Broken - Overview (azure.com)) for more details."

