---
- rule:
    type: label
    label: BreakingChangeReviewRequired
    booleanFilterExpression: "!(Approved-OkToMerge)"
    onLabeledComments: >-
      Hi @${PRAuthor}! The automation detected breaking changes in this pull request.
      As a result, it added the `BreakingChangeReviewRequired` label.
      <br/><br/>
      You cannot proceed with merging this PR until you complete one of the following action items:
      <br/><br/>
      **ACTION ITEM ALTERNATIVE A**: Fix the breaking change. <br/>
      Please consult the documentation provided in the relevant validation failures.
      <br/><br/>
      **ACTION ITEM ALTERNATIVE B**: Request approval. <br/>
      Alternatively, if you cannot fix the breaking changes, then you can request an approval for them.
      Please follow the [breaking changes process](https://eng.ms/docs/cloud-ai-platform/azure-core/azure-core-pm-and-design/trusted-platform-pm-karimb/service-lifecycle-and-actions-team/service-lifecycle-actions-team/apex/media/launchingproductbreakingchanges#breaking-change-process-1).
      <br/>
      This case applies even if:
      <ul>
      <li>The tool fails while it shouldn't, e.g. due to runtime exception, or incorrect detection of breaking changes.
      </li>
      <li>You believe there is no need for you to request breaking change approval, for any reason. 
      Such claims must be reviewed, and the process is the same.
      </li>
      </ul>

- rule:
    type: label
    label: NewApiVersionRequired
    booleanFilterExpression: "!(Approved-OkToMerge)"
    onLabeledComments: >-
      Hi @${PRAuthor}! The automation detected this pull request introduces changes
      to at least one existing API version that violate Azure's versioning policy. 
      To comply with the policy, these changes must be made in a new API version.
      As a result, the automation added the `NewApiVersionRequired` label.
      <br/><br/> 
      You cannot proceed with merging this PR until you complete one of the following action items:
      <br/><br/>
      **ACTION ITEM ALTERNATIVE A**: Introduce a new API version. <br/> 
      Submit a new PR instead of this one, or modify this PR, 
      so that it adds a new API version instead of introducing changes to existing API versions.
      <br/><br/>
      **ACTION ITEM ALTERNATIVE B**: Request approval. <br/>
      Alternatively, if you cannot avoid modifying existing API versions, 
      then you can request an approval for them.
      Please follow the [breaking changes process](https://eng.ms/docs/cloud-ai-platform/azure-core/azure-core-pm-and-design/trusted-platform-pm-karimb/service-lifecycle-and-actions-team/service-lifecycle-actions-team/apex/media/launchingproductbreakingchanges#breaking-change-process-1).
      <br/>
      This case applies even if:
      <ul>
      <li>The tool fails while it shouldn't, e.g. due to runtime exception, or incorrect detection of breaking changes.
      </li>
      <li>You believe there is no need for you to request breaking change approval, for any reason. 
      Such claims must be reviewed, and the process is the same.
      </li>
      </ul>

- rule:
    type: label
    label: SuppressionReviewRequired
    onLabeledComments: "Hi @${PRAuthor}, one or multiple validation error/warning suppression(s) is detected in your PR. Please follow the [Swagger-Suppression-Process](https://dev.azure.com/azure-sdk/internal/_wiki/wikis/internal.wiki/85/Swagger-Suppression-Process) to get approval."

- rule:
    type: label
    label: "CI-MissingBaseCommit"
    onLabeledComments: >-
      Hi @${PRAuthor}! For review efficiency consideration, 
      when creating a new API version, it is required to place API specs of the 
      base version in the first commit, and push new version updates into successive commits. 
      You can use OpenAPIHub to initialize the PR for adding a new version. <br/>
      For more details refer to the [wiki](https://dev.azure.com/azure-sdk/internal/_wiki/wikis/internal.wiki/208/OpenAPI-Hub-Adding-new-API-version).

- rule:
    type: label
    repoAllowList:
      - Azure/azure-rest-api-specs-pr
    variables:
      openapiHub: https://aka.ms/openapihub
      to: Azure/azure-rest-api-specs/main
    label: Approved-OkToMerge
    onLabeledComments: >-
      Hi @${PRAuthor}! Your PR is approved. Congratulations. :partying_face::rocket: </br>
      <li>
      If this PR is targeting `main` branch, then it cannot be merged, as `azure-rest-api-specs-pr` repo `main` branch 
      is mirrored from `azure-rest-api-specs` `main`` branch. <br/>
      If you want to publish the PR to the public repo (`Azure/azure-rest-api-specs`) `main` branch, 
      please use [OpenAPIHub Publish PR](${openapiHub}/tools/publishpullrequest?pr=${owner}/${repo}/${PRNumber}&to=${to}).
      </li><li>
      For further guidance on how to proceed please refer to this 
      [wiki article](https://dev.azure.com/azure-sdk/internal/_wiki/wikis/internal.wiki/205/RP-Scenarios-to-Contribute-to-Swagger?anchor=**public-repository-vs.-private-repository**).
      </li>

- rule:
    type: label
    label: CI-NewRPNamespaceWithoutRPaaS
    onLabeledComments: "Hi @${PRAuthor} This PR was flagged for introducing a new RP namespace that is not being onboarded with [RPaaS](https://armwiki.azurewebsites.net/rpaas/overview.html). Merging this PR to the main branch will be blocked as RPaaS is required for new RPs. To resolve this and allow the PR to be merged into the main branch, please [use RPaaS to onboard the new RP](https://armwiki.azurewebsites.net/rpaas/gettingstarted.html)."

- rule:
    type: label
    label: CI-RpaaSRPNotInPrivateRepo
    onLabeledComments: "Hi @${PRAuthor} This PR was flagged for attempting to introduce a new RP namespace to the main branch without first merging the new RP to the RPSaaSMaster branch. Please add the new RP in a merge to RPSaaSMaster before continuing the merge to main."

- rule:
    type: label
    label: ArcReview
    onLabeledComments: "Hi @${PRAuthor} and @arcboard, one or more change(s) have been detected in your Arc enabled VM's or Arc enabled Server's RPs. Please review the changes and ensure that no gaps have been introduced with respect to the ARM API modeling consistency across Azure Arc and Azure Compute. For further details, see guidelines at [Consistency in ARM Modeling](https://msazure.visualstudio.com/One/_wiki/wikis/One.wiki/377428/Consistency-in-ARM-Modeling?anchor=general-design-guidance). To approve the change(s), set the label to ArcSignedOff. If you have any questions, please mail to arcboard@microsoft.com."

- rule:
    type: label
    label: CI-FixRequiredOnFailure
    onLabeledComments: >- 
      Hi @${PRAuthor}! Your PR has some issues. Please fix the CI issues, **if present**, in following order: `Avocado, SemanticValidation, ModelValidation, Breaking Change, LintDiff`.
      <br/>
      <table><tr><th>Task</th><th>How to fix</th><th>Priority</th></tr>
      <tr><td>Avocado</td><td>[Fix-Avocado](https://github.com/Azure/azure-rest-api-specs/blob/main/documentation/ci-fix.md#avocado)</td><td>High</td></tr>
      <tr><td>Semantic Validation</td><td>[Fix-SemanticValidation-Error](https://github.com/Azure/azure-rest-api-specs/blob/main/documentation/ci-fix.md#semantic-validation)</td><td>High</td></tr>
      <tr><td>Model Validation</td><td>[Fix-ModelValidation-Error](https://github.com/Azure/azure-rest-api-specs/blob/main/documentation/ci-fix.md#model-validation)</td><td>High</td></tr>
      <tr><td>LintDiff</td><td>[Fix-LintDiff](https://github.com/Azure/azure-rest-api-specs/blob/main/documentation/ci-fix.md#lintdiff-validation)</td><td>High</td></tr></table>
      <br/>
      If you need further help, please reach out on the Teams channel [aka.ms/azsdk/support/specreview-channel](https://aka.ms/azsdk/support/specreview-channel).

- rule:
    type: label
    label: new-rp-namespace
    onLabeledComments: "Hi, @${PRAuthor}, our workflow has detected that there is no management SDK ever released for your RP, to further process SDK onboard for your RP, you should have the SDK client library name of your RP reviewed and approved. </br> <b>Action Required</b>: <li> Follow this guidance [Naming for new initial management or client libraries (new SDKs) - Overview (azure.com)](https://dev.azure.com/azure-sdk/internal/_wiki/wikis/internal.wiki/821/Naming-for-new-initial-management-or-client-libraries-(new-SDKs)) to create an issue for management client library name arch board review. </li> <li>Paste the issue link that you created in step 1 in this PR</li> </br> <b> Impact</b>: SDK release owner will take the approved management client library name to release SDK. No client library name approval will leads to SDK release delayed."

- rule:
    type: PROpen
    variables:
      openapiHub: https://aka.ms/openapihub
    onOpenedComments: >- 
      Hi, @${PRAuthor}! Thank you for your pull request. To help get your PR merged: </br>
      <li> Ensure you reviewed the checklists in the PR description. </li>
      <li> Know that PR assignee is the person auto-assigned and responsible for your current PR review and approval. </li>
      <li> For convenient view of the API changes made by this PR, refer to the URLs provided in the table in
      the `Generated ApiView` comment added to this PR. You can use ApiView to show API versions diff. </li>

- rule:
    type: checkbox
    keywords:
      - "Update existing version to fix swagger quality issues in S360"
    onCheckedLabels:
      - FixS360

- rule:
    type: label
    label: ARMReview
    booleanFilterExpression: "!(ARMSignedOff||ARMChangesRequested||Approved-OkToMerge)"
    onLabeledAddLabels:
        - WaitForARMFeedback

- rule:
    type: label
    label: WaitForARMFeedback
    onLabeledRemoveLabels:
        - ARMChangesRequested
        - ARMSignedOff
        
- rule:
    type: label
    label: ARMSignedOff
    onLabeledRemoveLabels:
        - WaitForARMFeedback
        - ARMChangesRequested

- rule:
    type: label
    label: ARMChangesRequested
    onLabeledComments: >-
      Please address or respond to feedback from the ARM API reviewer. <br/>
      When you are ready to continue the ARM API review, please remove the `ARMChangesRequested` label. <br/>
      This will notify the reviewer to have another look. <br/>
      If the feedback provided needs further discussion, please use this Teams channel to post your questions - 
      [aka.ms/azsdk/support/specreview-channel](https://aka.ms/azsdk/support/specreview-channel). <br/>
      Please include `[ARM Query]` in the title of your question to indicate that it is ARM-related.
    onLabeledRemoveLabels:
        - WaitForARMFeedback

- rule:
    type: label
    label: Approved-BreakingChange
    booleanFilterExpression: "!(ARMSignedOff||ARMChangesRequested||Approved-OkToMerge||WaitForARMRevisit)&&ARMReview"
    onLabeledAddLabels:
        - WaitForARMFeedback

- rule:
    type: unlabeled
    label: ARMChangesRequested
    onUnlabeledAddLabels:
        - WaitForARMFeedback
        - ARMReview
