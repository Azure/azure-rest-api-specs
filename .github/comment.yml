---
- rule:
    type: checkbox
    keywords:
      - "WaitForARMFeedback"
    booleanFilterExpression: "!(ARMSignedOff||ARMChangesRequested||Approved-OkToMerge||WaitForARMRevisit||BreakingChangeReviewRequired)"
    onCheckedLabels:
      - WaitForARMFeedback
      - ARMReview
    onCheckedComments: "Hi, @${PRAuthor} your PR are labelled with <b> WaitForARMFeedback</b>. A notification email will be sent out shortly afterwards to notify ARM review board(armapireview@microsoft.com)."

- rule:
    type: label
    label: BreakingChangeReviewRequired
    variables:
        openapiHub: https://portal.azure-devex-tools.com
    onLabeledComments: "Hi @${PRAuthor}, one or multiple breaking change(s) is detected in your PR. Please check out the breaking change(s), and provide business justification in the PR comment and @ PR assignee why you must have these change(s), and how external customer impact can be mitigated. Please ensure to follow [breaking change policy](https://aka.ms/AzBreakingChangesPolicy) to request breaking change review and approval before proceeding swagger PR review. </br>**Action**: To initiate an evaluation of the breaking change, create a new intake using the [template for breaking changes](https://aka.ms/Breakingchangetemplate). Addition details on the process and office hours are on the [Breaking change Wiki](https://dev.azure.com/msazure/AzureWiki/_wiki/wikis/AzureWiki.wiki/37684/Breaking-Changes).</br> If you want to know the production traffic statistic, please see [ARM Traffic statistic](${openapiHub}/api/pr/query-traffic?pr=${owner}/${repo}/${PRNumber}&days=5). </br> If you think it is false positive breaking change, please provide the reasons in the PR comment, report to Swagger Tooling Team via https://aka.ms/swaggerfeedback. </br> **Note**: To avoid breaking change, you can refer to [Shift Left Solution](https://aka.ms/shiftleft) for detecting breaking change in early phase at your service code repository."

- rule:
    type: label
    label: SuppressionReviewRequired
    onLabeledComments: "Hi @${PRAuthor}, one or multiple validation error/warning suppression(s) is detected in your PR. Please follow the [Swagger-Suppression-Process](https://dev.azure.com/azure-sdk/internal/_wiki/wikis/internal.wiki/85/Swagger-Suppression-Process) to get approval."

- rule:
    type: label
    label: "CI-MissingBaseCommit"
    onLabeledComments: "Hi, @${PRAuthor}, For review efficiency consideration, when creating a new api version, it is required to place API specs of the base version in the first commit, and push new version updates into successive commits. You can use OpenAPIHub to initialize the PR for adding a new version. For more details refer to the [wiki](https://dev.azure.com/azure-sdk/internal/_wiki/wikis/internal.wiki/208/OpenAPI-Hub-Adding-new-API-version). Or you could onboard [API spec pipeline](https://dev.azure.com/azure-sdk/internal/_wiki/wikis/internal.wiki/606/Enable-API-Spec-Pipeline)"

- rule:
    type: label
    repoAllowList:
      - Azure/azure-rest-api-specs-pr
    variables:
      openapiHub: https://portal.azure-devex-tools.com
      to: Azure/azure-rest-api-specs/main
    label: Approved-OkToMerge
    onLabeledComments: "Hi @${PRAuthor},Your PR is approved. Congratulations. </br>  <li> Since your PR is in private repo (azure-rest-api-specs-pr),  there wonâ€™t be PR merge. If you want to publish the PR to public repo (Azure/azure-rest-api-specs) and get it merged, pls use [OpenAPIHub Publish PR](${openapiHub}/tools/publishpullrequest?pr=${owner}/${repo}/${PRNumber}&to=${to}).</li> <li> For further guidance on how to proceed.  Please refer to this [wiki](https://dev.azure.com/azure-sdk/internal/_wiki/wikis/internal.wiki/205/RP-Scenarios-to-Contribute-to-Swagger?anchor=**public-repository-vs.-private-repository**)</li>"

- rule:
    type: label
    label: NewApiVersionRequired
    onLabeledComments: "The automation detected this Pull Request introduces breaking changes to an existing API version and hence it added the <code>NewApiVersionRequired</code> label. This means you cannot proceed with merging this PR until you complete one of the following action items:<br/><br/>- A) Submit a new PR instead of this one, or modify this PR, so that it introduces a new API version instead of introducing breaking changes to an existing API version. The automation will remove the label once it detects there are no more breaking changes.<br/>- B) OR you can request an approval of the breaking changes, get it reviewed, and approved. The reviewer will add <code>Approved-BreakingChange</code> label if they approve.<br/><br/>For additional guidance, please see https://aka.ms/NewApiVersionRequired<br/>  "

- rule:
    type: label
    label: CI-NewRPNamespaceWithoutRPaaS
    onLabeledComments: "Hi @${PRAuthor} This PR was flagged for introducing a new RP namespace that is not being onboarded with [RPaaS](https://armwiki.azurewebsites.net/rpaas/overview.html). Merging this PR to the main branch will be blocked as RPaaS is required for new RPs. To resolve this and allow the PR to be merged into the main branch, please [use RPaaS to onboard the new RP](https://armwiki.azurewebsites.net/rpaas/gettingstarted.html)."

- rule:
    type: label
    label: CI-RpaaSRPNotInPrivateRepo
    onLabeledComments: "Hi @${PRAuthor} This PR was flagged for attempting to introduce a new RP namespace to the main branch without first merging the new RP to the RPSaaSMaster branch. Please add the new RP in a merge to RPSaaSMaster before continuing the merge to main."

- rule:
    type: label
    label: ArcReview
    onLabeledComments: "Hi @${PRAuthor} and @arcboard, one or more change(s) have been detected in your Arc enabled VM's or Arc enabled Server's RPs. Please review the changes and ensure that no gaps have been introduced with respect to the ARM API modeling consistency across Azure Arc and Azure Compute. For further details, see guidelines at [Consistency in ARM Modeling](https://msazure.visualstudio.com/One/_wiki/wikis/One.wiki/377428/Consistency-in-ARM-Modeling?anchor=general-design-guidance). To approve the change(s), set the label to ArcSignedOff. If you have any questions, please mail to arcboard@microsoft.com."

- rule:
    type: label
    label: CI-FixRequiredOnFailure
    onLabeledComments: >- 
      Hi @${PRAuthor}, Your PR has some issues. Please fix the CI sequentially by following the order of `Avocado, semantic validation, model validation, breaking change, lintDiff`. If you have any questions, please post your questions in this channel https://aka.ms/swaggersupport. 
      <table><tr><th>Task</th><th>How to fix</th><th>Priority</th></tr>
      <tr><td>Avocado</td><td>[Fix-Avocado](https://github.com/Azure/azure-rest-api-specs/blob/main/documentation/ci-fix.md#avocado)</td><td>High</td></tr>
      <tr><td>Semantic validation</td><td>[Fix-SemanticValidation-Error](https://github.com/Azure/azure-rest-api-specs/blob/main/documentation/ci-fix.md#semantic-validation)</td><td>High</td></tr>
      <tr><td>Model validation</td><td>[Fix-ModelValidation-Error](https://github.com/Azure/azure-rest-api-specs/blob/main/documentation/ci-fix.md#model-validation)</td><td>High</td></tr>
      <tr><td>LintDiff</td><td>[Fix-LintDiff](https://github.com/Azure/azure-rest-api-specs/blob/main/documentation/ci-fix.md#linter-validation)</td><td>high</td></tr></table> 
      If you need further help, please feedback via [swagger feedback](https://aka.ms/swaggerfeedback).

- rule:
    type: label
    label: new-rp-namespace
    onLabeledComments: "Hi, @${PRAuthor}, our workflow has detected that there is no management SDK ever released for your RP, to further process SDK onboard for your RP, you should have the SDK client library name of your RP reviewed and approved. </br> <b>Action Required</b>: <li> Follow this guidance [Naming for new initial management or client libraries (new SDKs) - Overview (azure.com)](https://dev.azure.com/azure-sdk/internal/_wiki/wikis/internal.wiki/821/Naming-for-new-initial-management-or-client-libraries-(new-SDKs)) to create an issue for management client library name arch board review. </li> <li>Paste the issue link that you created in step 1 in this PR</li> </br> <b> Impact</b>: SDK release owner will take the approved management client library name to release SDK. No client library name approval will leads to SDK release delayed."

- rule:
    type: PROpen
    variables:
      openapiHub: https://portal.azure-devex-tools.com
    keywords:
      - "I have reviewed the [documentation](https://aka.ms/ameonboard) for the workflow."
    onOpenedComments: "Hi, @${PRAuthor} Thanks for your PR. I am workflow bot for review process. Here are some small tips. </br> <li> Please ensure to do self-check against checklists in first PR comment.</li> <li> PR assignee is the person auto-assigned and responsible for your current PR reviewing and merging. </li>   <li> For specs comparison cross API versions,  Use [API Specs Comparison Report Generator](${openapiHub}/tools/diff?pr=${owner}/${repo}/${PRNumber})</li>  <li> If there is CI failure(s), to fix CI error(s) is mandatory for PR merging; or you need to provide justification in PR comment for explanation. [How to fix?](https://github.com/Azure/azure-rest-api-specs/blob/main/documentation/ci-fix.md)</li></br> Any feedback about review process or workflow bot, pls contact swagger and tools team. vscswagger@microsoft.com"

- rule:
    type: checkbox
    keywords:
      - "update existing version to fix swagger quality issue in s360"
    onCheckedLabels:
      - FixS360
      
- rule:
    type: label
    label: WaitForARMFeedback
    onLabeledRemoveLabels:
        - ARMChangesRequested
        - ARMSignedOff
        
- rule:
    type: label
    label: ARMSignedOff
    onLabeledRemoveLabels:
        - WaitForARMFeedback
        - ARMChangesRequested

- rule:
    type: label
    label: ARMChangesRequested
    onLabeledComments: "Please ensure to respond feedbacks from the ARM API reviewer. When you are ready to continue the ARM API review, please remove `ARMChangesRequested`"
    onLabeledRemoveLabels:
        - WaitForARMFeedback

- rule:
    type: label
    label: Approved-BreakingChange
    booleanFilterExpression: "!(ARMSignedOff||ARMChangesRequested||Approved-OkToMerge||WaitForARMRevisit)&&ARMReview"
    onLabeledAddLabels:
        - WaitForARMFeedback
      
        
- rule:
    type: unlabeled
    label: ARMChangesRequested
    onUnlabeledAddLabels:
        - WaitForARMFeedback
        - ARMReview

