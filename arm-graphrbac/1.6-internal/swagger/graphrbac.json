{
  "swagger": "2.0",
  "info": {
    "title": "GraphRbacManagementClient",
    "version": "1.6-internal"
  },
  "host": "graph.windows.net",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/json"
  ],
  "produces": [
    "application/json",
    "text/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/{tenantID}/applications": {
      "post": {
        "tags": [
          "Application"
        ],
        "operationId": "ApplicationOperations_Create",
        "description": "Create a new application. Reference: http://msdn.microsoft.com/en-us/library/azure/hh974476.aspx",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationCreateParameters"
            },
            "description": "Parameters to create an application."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Application"
        ],
        "operationId": "ApplicationOperations_List",
        "description": "Lists applications by filter parameters. Reference: http://msdn.microsoft.com/en-us/library/azure/hh974476.aspx",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filters to apply on the operation"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ApplicationListResult"
            }
          }
        },
        "x-ms-odata": "#/definitions/ApplicationFilter",
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/{tenantID}/applications/{applicationObjectId}": {
      "delete": {
        "tags": [
          "Application"
        ],
        "operationId": "ApplicationOperations_Delete",
        "description": "Delete an application. Reference: http://msdn.microsoft.com/en-us/library/azure/hh974476.aspx",
        "parameters": [
          {
            "name": "applicationObjectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Application object id",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "Application"
        ],
        "operationId": "ApplicationOperations_Get",
        "description": "Get an application by object Id. Reference: http://msdn.microsoft.com/en-us/library/azure/hh974476.aspx",
        "parameters": [
          {
            "name": "applicationObjectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Application object id",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Application"
        ],
        "operationId": "ApplicationOperations_Patch",
        "description": "Update existing application. Reference: http://msdn.microsoft.com/en-us/library/azure/hh974476.aspx",
        "parameters": [
          {
            "name": "applicationObjectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Application object id",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationCreateParameters"
            },
            "description": "Parameters to create an application."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/{tenantID}/me": {
      "get": {
        "tags": [
          "Objects"
        ],
        "operationId": "ObjectOperations_GetCurrentUser",
        "description": "Gets the details for current logged in user",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AADObject"
            }
          }
        }
      }
    },
    "/{tenantID}/getObjectsByObjectIds": {
      "post": {
        "tags": [
          "Objects"
        ],
        "operationId": "ObjectOperations_GetObjectsByObjectIds",
        "description": "Gets AD group membership by provided AD object Ids",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetObjectsParameters"
            },
            "description": "Objects filtering parameters."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetObjectsResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "ObjectOperations_GetObjectsByObjectIdsNext"
        }
      }
    },
    "/{tenantID}/groups/{groupObjectId}/$links/members/{memberObjectId}": {
      "delete": {
        "tags": [
          "Group"
        ],
        "operationId": "GroupOperations_RemoveMember",
        "description": "Remove a memeber from a group. Reference: http://msdn.microsoft.com/en-us/library/azure/dn151607.aspx",
        "parameters": [
          {
            "name": "groupObjectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Group object id",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "memberObjectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Member Object id",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/{tenantID}/groups/{groupObjectId}/$links/members": {
      "post": {
        "tags": [
          "Group"
        ],
        "operationId": "GroupOperations_AddMember",
        "description": "Add a memeber to a group. Reference: http://msdn.microsoft.com/en-us/library/azure/dn151676.aspx",
        "parameters": [
          {
            "name": "groupObjectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Group object id",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupAddMemberParameters"
            },
            "description": "Member Object Url as https://graph.windows.net/contoso.onmicrosoft.com/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/{tenantID}/groups/{groupObjectId}": {
      "delete": {
        "tags": [
          "Group"
        ],
        "operationId": "GroupOperations_Delete",
        "description": "Delete a group in the directory. Reference: http://msdn.microsoft.com/en-us/library/azure/dn151676.aspx",
        "parameters": [
          {
            "name": "groupObjectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Object id",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/{tenantID}/groups": {
      "post": {
        "tags": [
          "Group"
        ],
        "operationId": "GroupOperations_Create",
        "description": "Create a group in the directory. Reference: http://msdn.microsoft.com/en-us/library/azure/dn151676.aspx",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupCreateParameters"
            },
            "description": "Parameters to create a group"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ADGroup"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "GroupOperations_List",
        "description": "Gets list of groups for the current tenant.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GroupListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "GroupOperations_ListNext"
        },
        "x-ms-odata": "#/definitions/ADGroup"
      }
    },
    "/{tenantID}/groups/{objectId}/members": {
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "GroupOperations_GetGroupMembers",
        "description": "Gets the members of a group.",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Group object Id who's members should be retrieved.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetObjectsResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "GroupOperations_GetGroupMembersNext"
        }
      }
    },
    "/{tenantID}/groups/{objectId}": {
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "GroupOperations_Get",
        "description": "Gets group information from the directory.",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User objectId to get group information.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ADGroup"
            }
          }
        }
      }
    },
    "/{tenantID}/groups/{objectId}/getMemberGroups": {
      "post": {
        "tags": [
          "Group"
        ],
        "operationId": "GroupOperations_GetMemberGroups",
        "description": "Gets a collection that contains the Object IDs of the groups of which the group is a member.",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Group filtering parameters.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupGetMemberGroupsParameters"
            },
            "description": "Group filtering parameters."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GroupGetMemberGroupsResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/{tenantID}/servicePrincipals": {
      "post": {
        "tags": [
          "ServicePrincipal"
        ],
        "operationId": "ServicePrincipalOperations_Create",
        "description": "Creates a service principal in the  directory.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServicePrincipalCreateParameters"
            },
            "description": "Parameters to create a service principal."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServicePrincipal"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ServicePrincipal"
        ],
        "operationId": "ServicePrincipalOperations_List",
        "description": "Gets list of service principals from the current tenant.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServicePrincipalListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "ServicePrincipalOperations_ListNext"
        },
        "x-ms-odata": "#/definitions/ServicePrincipal"
      }
    },
    "/{tenantID}/servicePrincipals/{objectId}": {
      "delete": {
        "tags": [
          "ServicePrincipal"
        ],
        "operationId": "ServicePrincipalOperations_Delete",
        "description": "Deletes service principal from the directory.",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Object id to delete service principal information.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "ServicePrincipal"
        ],
        "operationId": "ServicePrincipalOperations_Get",
        "description": "Gets service principal information from the directory.",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Object id to get service principal information.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServicePrincipal"
            }
          }
        }
      }
    },
    "/{tenantID}/users/{user}": {
      "delete": {
        "tags": [
          "User"
        ],
        "operationId": "UserOperations_Delete",
        "description": "Delete a user. Reference: http://msdn.microsoft.com/en-us/library/azure/dn151676.aspx",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "user object id or user principal name",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/{tenantID}/users": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "UserOperations_Create",
        "description": "Create a new user. Reference: http://msdn.microsoft.com/en-us/library/azure/dn151676.aspx",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCreateParameters"
            },
            "description": "Parameters to create a user."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "UserOperations_List",
        "description": "Gets list of users for the current tenant.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "UserOperations_ListNext"
        },
        "x-ms-odata": "#/definitions/User"
      }
    },
    "/{tenantID}/users/{upnOrObjectId}": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "UserOperations_Get",
        "description": "Gets user information from the directory. Reference: http://msdn.microsoft.com/en-us/library/azure/dn151676.aspx",
        "parameters": [
          {
            "name": "upnOrObjectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User object Id or user principal name to get user information.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/{tenantID}/users/{objectId}/getMemberGroups": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "UserOperations_GetMemberGroups",
        "description": "Gets a collection that contains the Object IDs of the groups of which the user is a member.",
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User filtering parameters.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGetMemberGroupsParameters"
            },
            "description": "User filtering parameters."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserGetMemberGroupsResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    }
  },
  "x-ms-paths": {
    "/{tenantID}/{nextLink}?ObjectOperations_GetObjectsByObjectIdsNext": {
      "post": {
        "tags": [
          "Objects"
        ],
        "operationId": "ObjectOperations_GetObjectsByObjectIdsNext",
        "description": "Gets AD group membership by provided AD object Ids",
        "parameters": [
          {
            "name": "nextLink",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Next link for list operation.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetObjectsResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "ObjectOperations_GetObjectsByObjectIdsNext"
        }
      }
    },
    "/{tenantID}/{nextLink}?GroupOperations_ListNext": {
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "GroupOperations_ListNext",
        "description": "Gets list of groups for the current tenant.",
        "parameters": [
          {
            "name": "nextLink",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Next link for list operation.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GroupListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "GroupOperations_ListNext"
        }
      }
    },
    "/{tenantID}/{nextLink}?GroupOperations_GetGroupMembersNext": {
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "GroupOperations_GetGroupMembersNext",
        "description": "Gets the members of a group.",
        "parameters": [
          {
            "name": "nextLink",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Next link for list operation.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetObjectsResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "GroupOperations_GetGroupMembersNext"
        }
      }
    },
    "/{tenantID}/{nextLink}?ServicePrincipalOperations_ListNext": {
      "get": {
        "tags": [
          "ServicePrincipal"
        ],
        "operationId": "ServicePrincipalOperations_ListNext",
        "description": "Gets list of service principals from the current tenant.",
        "parameters": [
          {
            "name": "nextLink",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Next link for list operation.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServicePrincipalListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "ServicePrincipalOperations_ListNext"
        }
      }
    },
    "/{tenantID}/{nextLink}?UserOperations_ListNext": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "UserOperations_ListNext",
        "description": "Gets list of users for the current tenant.",
        "parameters": [
          {
            "name": "nextLink",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Next link for list operation.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/tenantIDInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "odata.nextLink",
          "operationName": "UserOperations_ListNext"
        }
      }
    }
  },
  "definitions": {
    "KeyCredential": {
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets start date"
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets end date"
        },
        "value": {
          "type": "string",
          "description": "Gets or sets value"
        },
        "keyId": {
          "type": "string",
          "description": "Gets or sets key Id"
        },
        "usage": {
          "type": "string",
          "description": "Gets or sets usage"
        },
        "type": {
          "type": "string",
          "description": "Gets or sets type"
        }
      },
      "description": "Active Directory service principal Key Credential information"
    },
    "PasswordCredential": {
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets start date"
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets end date"
        },
        "keyId": {
          "type": "string",
          "description": "Gets or sets key Id"
        },
        "value": {
          "type": "string",
          "description": "Gets or sets value"
        }
      },
      "description": "Active Directory service principal Password Credential information"
    },
    "ApplicationCreateParameters": {
      "properties": {
        "availableToOtherTenants": {
          "type": "boolean",
          "description": "Indicates if the application will be available to other tenants"
        },
        "displayName": {
          "type": "string",
          "description": "Application display name"
        },
        "homepage": {
          "type": "string",
          "description": "Application homepage"
        },
        "identifierUris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Application Uris"
        },
        "replyUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Application reply Urls"
        },
        "keyCredentials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyCredential"
          },
          "description": "Gets or sets the list of KeyCredential objects"
        },
        "passwordCredentials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PasswordCredential"
          },
          "description": "Gets or sets the list of PasswordCredential objects"
        }
      },
      "required": [
        "availableToOtherTenants",
        "displayName",
        "homepage",
        "identifierUris"
      ],
      "description": "Request parameters for create a new application"
    },
    "ApplicationFilter": {
      "properties": {
        "displayNameStartsWith": {
          "type": "string",
          "description": "Application display name starts with"
        },
        "appId": {
          "type": "string",
          "description": "ApplicationId"
        },
        "identifierUri": {
          "type": "string",
          "description": "Identifier Uri"
        }
      },
      "description": "Filter parameters for listing applications"
    },
    "Application": {
      "properties": {
        "objectId": {
          "type": "string",
          "description": "Gets or sets object Id"
        },
        "objectType": {
          "type": "string",
          "description": "Gets or sets object type"
        },
        "appId": {
          "type": "string",
          "description": "Gets or sets application Id"
        },
        "appPermissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets application permissions"
        },
        "availableToOtherTenants": {
          "type": "boolean",
          "description": "Indicates if the application will be available to other tenants"
        },
        "displayName": {
          "type": "string",
          "description": "Gets or sets the displayName"
        },
        "identifierUris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets the application identifier Uris"
        },
        "replyUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets the application reply Urls"
        }
      },
      "description": "Active Directory user information"
    },
    "ApplicationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Application"
          },
          "description": "Application list."
        }
      },
      "description": "Role assignment list operation result."
    },
    "GetObjectsParameters": {
      "properties": {
        "objectIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Requested object Ids"
        },
        "types": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Requested object types"
        },
        "includeDirectoryObjectReferences": {
          "type": "boolean",
          "description": "If true, also searches for object ids in the partner tenant"
        }
      },
      "required": [
        "includeDirectoryObjectReferences"
      ],
      "description": "Request parameters for GetObjectsByObjectIds API call"
    },
    "AADObject": {
      "properties": {
        "objectId": {
          "type": "string",
          "description": "Gets or sets object Id"
        },
        "objectType": {
          "type": "string",
          "description": "Gets or sets object type"
        },
        "displayName": {
          "type": "string",
          "description": "Gets or sets object display name"
        },
        "userPrincipalName": {
          "type": "string",
          "description": "Gets or sets principal name"
        },
        "mail": {
          "type": "string",
          "description": "Gets or sets mail"
        },
        "mailEnabled": {
          "type": "boolean",
          "description": "Gets or sets MailEnabled field"
        },
        "securityEnabled": {
          "type": "boolean",
          "description": "Gets or sets SecurityEnabled field"
        },
        "signInName": {
          "type": "string",
          "description": "Gets or sets signIn name"
        },
        "servicePrincipalNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets the list of service principal names."
        },
        "userType": {
          "type": "string",
          "description": "Gets or sets the user type"
        }
      },
      "description": "Active Directory object information"
    },
    "GetObjectsResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AADObject"
          },
          "description": "Collection of Active Directory object"
        },
        "odata.nextLink": {
          "type": "string",
          "description": "Gets or sets the URL to get the next set of results."
        }
      },
      "description": "Server response for Active Directory objects inquiry API calls"
    },
    "GroupAddMemberParameters": {
      "properties": {
        "url": {
          "type": "string",
          "description": "Group display name"
        }
      },
      "required": [
        "url"
      ],
      "description": "Request parameters for adding members to a groups"
    },
    "GroupCreateParameters": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Group display name"
        },
        "mailEnabled": {
          "type": "boolean",
          "description": "Mail"
        },
        "mailNickname": {
          "type": "string",
          "description": "Mail nick name"
        },
        "securityEnabled": {
          "type": "boolean",
          "description": "Is security enabled"
        }
      },
      "required": [
        "displayName",
        "mailEnabled",
        "mailNickname",
        "securityEnabled"
      ],
      "description": "Request parameters for create a new group"
    },
    "ADGroup": {
      "properties": {
        "objectId": {
          "type": "string",
          "description": "Gets or sets object Id"
        },
        "objectType": {
          "type": "string",
          "description": "Gets or sets object type"
        },
        "displayName": {
          "type": "string",
          "description": "Gets or sets group display name"
        },
        "securityEnabled": {
          "type": "boolean",
          "description": "Gets or sets security enabled field"
        },
        "mail": {
          "type": "string",
          "description": "Gets or sets mail field"
        }
      },
      "description": "Active Directory group information"
    },
    "GroupListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ADGroup"
          },
          "description": "Gets or sets the list of groups."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "Gets or sets the URL to get the next set of results."
        }
      },
      "description": "Server response for Get tenant groups API call"
    },
    "GroupGetMemberGroupsParameters": {
      "properties": {
        "securityEnabledOnly": {
          "type": "boolean",
          "description": "If true only membership in security enabled groups should be checked. Otherwise membership in all groups should be checked "
        }
      },
      "required": [
        "securityEnabledOnly"
      ],
      "description": "Request parameters for GetMemberGroups API call"
    },
    "GroupGetMemberGroupsResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Group Ids of which the group is a member"
        }
      },
      "description": "Server response for GetMemberGroups API call"
    },
    "ServicePrincipalCreateParameters": {
      "properties": {
        "appId": {
          "type": "string",
          "description": "Gets or sets application Id"
        },
        "accountEnabled": {
          "type": "boolean",
          "description": "Specifies if the account is enabled"
        }
      },
      "required": [
        "appId",
        "accountEnabled"
      ],
      "description": "Request parameters for create a new service principal"
    },
    "ServicePrincipal": {
      "properties": {
        "objectId": {
          "type": "string",
          "description": "Gets or sets object Id"
        },
        "objectType": {
          "type": "string",
          "description": "Gets or sets object type"
        },
        "displayName": {
          "type": "string",
          "description": "Gets or sets service principal display name"
        },
        "appId": {
          "type": "string",
          "description": "Gets or sets app id"
        },
        "servicePrincipalNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets the list of names."
        }
      },
      "description": "Active Directory service principal information"
    },
    "ServicePrincipalListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServicePrincipal"
          },
          "description": "Gets or sets the list of service principals."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "Gets or sets the URL to get the next set of results."
        }
      },
      "description": "Server response for get tenant service principals API call"
    },
    "UserCreateParametersPasswordProfile": {
      "properties": {
        "password": {
          "type": "string",
          "description": "Password"
        },
        "forceChangePasswordNextLogin": {
          "type": "boolean",
          "description": "Force change password on next login"
        }
      },
      "required": [
        "password"
      ]
    },
    "UserCreateParameters": {
      "properties": {
        "userPrincipalName": {
          "type": "string",
          "description": "User Principal Name"
        },
        "accountEnabled": {
          "type": "boolean",
          "description": "Enable the account"
        },
        "displayName": {
          "type": "string",
          "description": "User display name"
        },
        "mailNickname": {
          "type": "string",
          "description": "Mail nick name"
        },
        "passwordProfile": {
          "$ref": "#/definitions/UserCreateParametersPasswordProfile",
          "description": "Password Profile"
        }
      },
      "required": [
        "userPrincipalName",
        "accountEnabled",
        "displayName",
        "mailNickname",
        "passwordProfile"
      ],
      "description": "Request parameters for create a new user"
    },
    "User": {
      "properties": {
        "objectId": {
          "type": "string",
          "description": "Gets or sets object Id"
        },
        "objectType": {
          "type": "string",
          "description": "Gets or sets object type"
        },
        "userPrincipalName": {
          "type": "string",
          "description": "Gets or sets user principal name"
        },
        "displayName": {
          "type": "string",
          "description": "Gets or sets user display name"
        },
        "signInName": {
          "type": "string",
          "description": "Gets or sets user signIn name"
        },
        "mail": {
          "type": "string",
          "description": "Gets or sets user mail"
        }
      },
      "description": "Active Directory user information"
    },
    "UserGetMemberGroupsParameters": {
      "properties": {
        "securityEnabledOnly": {
          "type": "boolean",
          "description": "If true only membership in security enabled groups should be checked. Otherwise membership in all groups should be checked "
        }
      },
      "required": [
        "securityEnabledOnly"
      ],
      "description": "Request parameters for GetMemberGroups API call"
    },
    "UserGetMemberGroupsResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Group Ids of which the user is a member"
        }
      },
      "description": "Server response for GetMemberGroups API call"
    },
    "UserListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          },
          "description": "Gets or sets the list of users."
        },
        "odata.nextLink": {
          "type": "string",
          "description": "Gets or sets the URL to get the next set of results."
        }
      },
      "description": "Server response for Get tenant users API call"
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    },
    "tenantIDInPath": {
      "name": "tenantID",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gets or sets the tenant Id."
    }
  }
}