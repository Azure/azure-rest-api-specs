{
  "swagger": "2.0",
  "info": {
    "version": "2015-11-10",
    "title": "SiteRecoveryManagementClient"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationvCenters/{vCenterName}/operationresults/{jobName}": {
      "get": {
        "tags": [
          "VCenters"
        ],
        "summary": "Tracks the provider async operation.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "VCenters_GetTrackAsyncOperation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vCenterName",
            "in": "path",
            "description": "vCenter name to work on.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "job name to track.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VCenter"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationvCenters/{vCenterName}": {
      "get": {
        "tags": [
          "VCenters"
        ],
        "summary": "Gets the details of a vCenter.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "VCenters_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the fabric containing the vCenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vCenterName",
            "in": "path",
            "description": "vCenter name of interest.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VCenter"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "VCenters"
        ],
        "summary": "Perform Add vCenter operation.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "VCenters_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the fabric containing the vCenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vCenterName",
            "in": "path",
            "description": "The name of the vCenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "addVCenterRequest",
            "in": "body",
            "description": "The input to the add vCenter operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddVCenterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VCenter"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "VCenters"
        ],
        "summary": "Perform remove vCenter operation.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "VCenters_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the fabric containing the vCenter.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vCenterName",
            "in": "path",
            "description": "The name of the vCenter which is to be removed.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "VCenters"
        ],
        "summary": "Perform update vCenter operation.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "VCenters_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the fabric containing the process server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vCenterName",
            "in": "path",
            "description": "The name of the vCenter which is to be updated.",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateVCenterRequest",
            "in": "body",
            "description": "The input for update vCenter operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateVCenterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VCenter"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationvCenters": {
      "get": {
        "tags": [
          "VCenters"
        ],
        "summary": "Gets the list of vCenter registered under a fabric.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "VCenters_ListByFabric",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Fabric name of interest.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VCenterCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationvCenters": {
      "get": {
        "tags": [
          "VCenters"
        ],
        "summary": "Gets the list of vCenter registered under the vault.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "VCenters_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VCenterCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationStorageClassifications/{storageClassificationName}/replicationStorageClassificationMappings/{storageClassificationMappingName}/operationresults/{jobName}": {
      "get": {
        "tags": [
          "StorageClassificationMappings"
        ],
        "summary": "Tracks async operations.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "StorageClassificationMappings_GetTrackAsyncOperation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Site name of interest.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageClassificationName",
            "in": "path",
            "description": "Name of the storage.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageClassificationMappingName",
            "in": "path",
            "description": "Name of the mapping object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "job id to track.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StorageClassificationMapping"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationStorageClassifications/{storageClassificationName}/replicationStorageClassificationMappings/{storageClassificationMappingName}": {
      "get": {
        "tags": [
          "StorageClassificationMappings"
        ],
        "summary": "Gets the details of a storage classification mapping.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "StorageClassificationMappings_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Site name of interest.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageClassificationName",
            "in": "path",
            "description": "Name of the storage.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageClassificationMappingName",
            "in": "path",
            "description": "Name of the mapping object to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StorageClassificationMapping"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "StorageClassificationMappings"
        ],
        "summary": "Pairs two storage objects",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "StorageClassificationMappings_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Site name of interest.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageClassificationName",
            "in": "path",
            "description": "Name of the storage.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageClassificationMappingName",
            "in": "path",
            "description": "Name of the mapping object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pairingInput",
            "in": "body",
            "description": "Pairing input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageClassificationMappingInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StorageClassificationMapping"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "StorageClassificationMappings"
        ],
        "summary": "Pairs two storage objects",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "StorageClassificationMappings_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Site name of interest.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageClassificationName",
            "in": "path",
            "description": "Name of the storage.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageClassificationMappingName",
            "in": "path",
            "description": "Name of the mapping object.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationStorageClassifications/{storageClassificationName}/replicationStorageClassificationMappings": {
      "get": {
        "tags": [
          "StorageClassificationMappings"
        ],
        "summary": "Gets the list of storage classification mappings objects under a storage.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "StorageClassificationMappings_ListByStorageClassification",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Site name of interest.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageClassificationName",
            "in": "path",
            "description": "Name of the storage classfication.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StorageClassificationMappingCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationStorageClassificationMappings": {
      "get": {
        "tags": [
          "StorageClassificationMappings"
        ],
        "summary": "Gets the list of storage classification mappings objects under a vault.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "StorageClassificationMappings_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StorageClassificationMappingCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationStorageClassifications/{storageClassificationName}": {
      "get": {
        "tags": [
          "StorageClassifications"
        ],
        "summary": "Gets the details of a storage classification.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "StorageClassifications_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Site name of interest.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageClassificationName",
            "in": "path",
            "description": "Name of storage classification to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StorageClassification"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationStorageClassifications": {
      "get": {
        "tags": [
          "StorageClassifications"
        ],
        "summary": "Gets the list of storage classification objects under a fabric.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "StorageClassifications_ListByFabric",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Site name of interest.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StorageClassificationCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationStorageClassifications": {
      "get": {
        "tags": [
          "StorageClassifications"
        ],
        "summary": "Gets the list of storage classification objects under a vault.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "StorageClassifications_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StorageClassificationCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/operationresults/{jobId}": {
      "get": {
        "tags": [
          "ReplicationProtectedItems"
        ],
        "summary": "Tracks the Replication protected item async operation.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ReplicationProtectedItems_GetTrackAsyncOperation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Protection container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "replicatedProtectedItemName",
            "in": "path",
            "description": "Replication protected item name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "job id to track.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReplicationProtectedItem"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/applyRecoveryPoint": {
      "post": {
        "tags": [
          "ReplicationProtectedItems"
        ],
        "summary": "Applies recovery point.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ReplicationProtectedItems_ApplyRecoveryPoint",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The ARM fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "The protection container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "replicatedProtectedItemName",
            "in": "path",
            "description": "The replicated protected item's name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applyRecoveryPointInput",
            "in": "body",
            "description": "The ApplyRecoveryPointInput.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplyRecoveryPointInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReplicationProtectedItem"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/repairReplication": {
      "post": {
        "tags": [
          "ReplicationProtectedItems"
        ],
        "summary": "Repairs replication.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ReplicationProtectedItems_RepairReplication",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the fabric.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "The name of the container.",
            "required": true,
            "type": "string"
          },
          {
            "name": "replicatedProtectedItemName",
            "in": "path",
            "description": "The name of the replication protected item.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReplicationProtectedItem"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/updateMobilityService": {
      "post": {
        "tags": [
          "ReplicationProtectedItems"
        ],
        "summary": "Update the mobility service on a protected machine.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ReplicationProtectedItems_UpdateMobilityService",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the fabric containing the machine.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "The name of the container containing the machine.",
            "required": true,
            "type": "string"
          },
          {
            "name": "replicatedProtectedItemName",
            "in": "path",
            "description": "The name of the machine on which the agent\r\n            is to be updated.",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateMobilityServiceRequest",
            "in": "body",
            "description": "Request to update the mobility\r\n            service on the machine.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateMobilityServiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReplicationProtectedItem"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/reProtect": {
      "post": {
        "tags": [
          "ReplicationProtectedItems"
        ],
        "summary": "Execute Reverse Replication\\Reprotect",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ReplicationProtectedItems_Reprotect",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Protection container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "replicatedProtectedItemName",
            "in": "path",
            "description": "Replication protected item name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "rrInput",
            "in": "body",
            "description": "Disable protection input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReverseReplicationInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReplicationProtectedItem"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/failoverCommit": {
      "post": {
        "tags": [
          "ReplicationProtectedItems"
        ],
        "summary": "Execute commit failover",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ReplicationProtectedItems_FailoverCommit",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Protection container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "replicatedProtectedItemName",
            "in": "path",
            "description": "Replication protected item name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReplicationProtectedItem"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/testFailoverCleanup": {
      "post": {
        "tags": [
          "ReplicationProtectedItems"
        ],
        "summary": "Execute test failover cleanup.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ReplicationProtectedItems_TestFailoverCleanup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Protection container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "replicatedProtectedItemName",
            "in": "path",
            "description": "Replication protected item name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cleanupInput",
            "in": "body",
            "description": "Test failover cleanup input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestFailoverCleanupInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReplicationProtectedItem"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/testFailover": {
      "post": {
        "tags": [
          "ReplicationProtectedItems"
        ],
        "summary": "Execute test failover",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ReplicationProtectedItems_TestFailover",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Protection container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "replicatedProtectedItemName",
            "in": "path",
            "description": "Replication protected item name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "failoverInput",
            "in": "body",
            "description": "Test failover input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestFailoverInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReplicationProtectedItem"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/unplannedFailover": {
      "post": {
        "tags": [
          "ReplicationProtectedItems"
        ],
        "summary": "Execute unplanned failover",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ReplicationProtectedItems_UnplannedFailover",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Protection container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "replicatedProtectedItemName",
            "in": "path",
            "description": "Replication protected item name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "failoverInput",
            "in": "body",
            "description": "Disable protection input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnplannedFailoverInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReplicationProtectedItem"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/plannedFailover": {
      "post": {
        "tags": [
          "ReplicationProtectedItems"
        ],
        "summary": "Execute planned failover",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ReplicationProtectedItems_PlannedFailover",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Protection container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "replicatedProtectedItemName",
            "in": "path",
            "description": "Replication protected item name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "failoverInput",
            "in": "body",
            "description": "Disable protection input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlannedFailoverInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReplicationProtectedItem"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/remove": {
      "post": {
        "tags": [
          "ReplicationProtectedItems"
        ],
        "summary": "Disables protection.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ReplicationProtectedItems_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Protection container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "replicatedProtectedItemName",
            "in": "path",
            "description": "Replication protected item name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "disableProtectionInput",
            "in": "body",
            "description": "Disable protection input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisableProtectionInput"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}": {
      "get": {
        "tags": [
          "ReplicationProtectedItems"
        ],
        "summary": "Gets the details of a Replication protected item.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ReplicationProtectedItems_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Fabric unique name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Protection container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "replicatedProtectedItemName",
            "in": "path",
            "description": "Replication protected item name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReplicationProtectedItem"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "ReplicationProtectedItems"
        ],
        "summary": "Enables protection.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ReplicationProtectedItems_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique name of the fabric.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Protection container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "replicatedProtectedItemName",
            "in": "path",
            "description": "Replication protected item name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "body",
            "description": "Enable Protection Input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnableProtectionInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReplicationProtectedItem"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "ReplicationProtectedItems"
        ],
        "summary": "Purges protection.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ReplicationProtectedItems_Purge",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Protection container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "replicatedProtectedItemName",
            "in": "path",
            "description": "Replication protected item name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "ReplicationProtectedItems"
        ],
        "summary": "Updates protection.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ReplicationProtectedItems_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Protection container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "replicatedProtectedItemName",
            "in": "path",
            "description": "Replication protected item name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateProtectionInput",
            "in": "body",
            "description": "Update protection input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateReplicationProtectedItemInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReplicationProtectedItem"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems": {
      "get": {
        "tags": [
          "ReplicationProtectedItems"
        ],
        "summary": "Gets the list of Replication protected items.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ReplicationProtectedItems_ListByProtectionContainer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Fabric unique name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Protection container name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReplicationProtectedItemCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationProtectedItems": {
      "get": {
        "tags": [
          "ReplicationProtectedItems"
        ],
        "summary": "Gets the list of replication protected items.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ReplicationProtectedItems_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "skipToken",
            "in": "query",
            "description": "The pagination token.\r\n            Possible values: \"FabricId\" or \"FabricId_CloudId\" or null",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReplicationProtectedItemCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationRecoveryServicesProviders/{providerName}/operationresults/{jobName}": {
      "get": {
        "tags": [
          "RecoveryServicesProviders"
        ],
        "summary": "Tracks the provider async operation.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "RecoveryServicesProviders_GetTrackAsyncOperation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Site name to work on.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "job id to track.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoveryServicesProvider"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationRecoveryServicesProviders/{providerName}/refreshProvider": {
      "post": {
        "tags": [
          "RecoveryServicesProviders"
        ],
        "summary": "Refresh the data on the provider.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "RecoveryServicesProviders_RefreshProvider",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Unique provider name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoveryServicesProvider"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationRecoveryServicesProviders/{providerName}/remove": {
      "post": {
        "tags": [
          "RecoveryServicesProviders"
        ],
        "summary": "Deletes provider from fabric.\r\n            Note: Deleting provider for any fabric other than SingleHost is unsupported. To\r\n            maintain backward compatibility for released clients the object \"deleteRspInput\" is\r\n            used (if the object is empty we assume that it is old client and continue the old\r\n            behavior).",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "RecoveryServicesProviders_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Unique provider id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationRecoveryServicesProviders/{providerName}": {
      "get": {
        "tags": [
          "RecoveryServicesProviders"
        ],
        "summary": "Gets the details of a server.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "RecoveryServicesProviders_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Server id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoveryServicesProvider"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "RecoveryServicesProviders"
        ],
        "summary": "Purges provider from fabric",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "RecoveryServicesProviders_Purge",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Unique provider id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationRecoveryServicesProviders": {
      "get": {
        "tags": [
          "RecoveryServicesProviders"
        ],
        "summary": "Gets the list of servers registered.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "RecoveryServicesProviders_ListByFabric",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Id of the fabric to be retrieved",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoveryServicesProviderCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationRecoveryServicesProviders": {
      "get": {
        "tags": [
          "RecoveryServicesProviders"
        ],
        "summary": "Gets the list of servers registered across fabrics.\r\n            This is view only api.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "RecoveryServicesProviders_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoveryServicesProviderCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/recoveryPoints/{recoveryPointName}": {
      "get": {
        "tags": [
          "RecoveryPoints"
        ],
        "summary": "Get a recovery point.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "RecoveryPoints_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "The protection container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "replicatedProtectedItemName",
            "in": "path",
            "description": "The replication protectable item's name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "recoveryPointName",
            "in": "path",
            "description": "The recovery point name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoveryPoint"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectedItems/{replicatedProtectedItemName}/recoveryPoints": {
      "get": {
        "tags": [
          "RecoveryPoints"
        ],
        "summary": "Get recovery points for a protected entity.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "RecoveryPoints_ListByReplicationProtectedItem",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "The protection container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "replicatedProtectedItemName",
            "in": "path",
            "description": "The replication protectable item's name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoveryPointCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationRecoveryPlans/{recoveryPlanName}/operationresults/{jobName}": {
      "get": {
        "tags": [
          "RecoveryPlans"
        ],
        "summary": "Tracks the recovery plan async operation.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "RecoveryPlans_GetTrackAsyncOperation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "recoveryPlanName",
            "in": "path",
            "description": "Recovery plan name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "ARM name of the job.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoveryPlan"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationRecoveryPlans/{recoveryPlanName}/reProtect": {
      "post": {
        "tags": [
          "RecoveryPlans"
        ],
        "summary": "Execute reprotect of the recovery plan.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "RecoveryPlans_Reprotect",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "recoveryPlanName",
            "in": "path",
            "description": "Recovery plan name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoveryPlan"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationRecoveryPlans/{recoveryPlanName}/failoverCommit": {
      "post": {
        "tags": [
          "RecoveryPlans"
        ],
        "summary": "Execute commit failover of the recovery plan.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "RecoveryPlans_FailoverCommit",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "recoveryPlanName",
            "in": "path",
            "description": "Recovery plan name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoveryPlan"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationRecoveryPlans/{recoveryPlanName}/testFailoverCleanup": {
      "post": {
        "tags": [
          "RecoveryPlans"
        ],
        "summary": "Execute test failover cleanup of the recovery plan.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "RecoveryPlans_TestFailoverCleanup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "recoveryPlanName",
            "in": "path",
            "description": "Recovery plan name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "body",
            "description": "Test failover cleanup input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecoveryPlanTestFailoverCleanupInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoveryPlan"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationRecoveryPlans/{recoveryPlanName}/testFailover": {
      "post": {
        "tags": [
          "RecoveryPlans"
        ],
        "summary": "Execute test failover of the recovery plan.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "RecoveryPlans_TestFailover",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "recoveryPlanName",
            "in": "path",
            "description": "Recovery plan name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "body",
            "description": "Failover input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecoveryPlanTestFailoverInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoveryPlan"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationRecoveryPlans/{recoveryPlanName}/unplannedFailover": {
      "post": {
        "tags": [
          "RecoveryPlans"
        ],
        "summary": "Execute unplanned failover of the recovery plan.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "RecoveryPlans_UnplannedFailover",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "recoveryPlanName",
            "in": "path",
            "description": "Recovery plan name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "body",
            "description": "Failover input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecoveryPlanUnplannedFailoverInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoveryPlan"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationRecoveryPlans/{recoveryPlanName}/plannedFailover": {
      "post": {
        "tags": [
          "RecoveryPlans"
        ],
        "summary": "Execute planned failover of the recovery plan.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "RecoveryPlans_PlannedFailover",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "recoveryPlanName",
            "in": "path",
            "description": "Recovery plan name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "body",
            "description": "Failover input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecoveryPlanPlannedFailoverInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoveryPlan"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationRecoveryPlans/{recoveryPlanName}": {
      "get": {
        "tags": [
          "RecoveryPlans"
        ],
        "summary": "Gets the requested recovery plan.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "RecoveryPlans_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "recoveryPlanName",
            "in": "path",
            "description": "Unique name of the recovery plan.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoveryPlan"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "RecoveryPlans"
        ],
        "summary": "Creates a recovery plan with the given details.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "RecoveryPlans_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "recoveryPlanName",
            "in": "path",
            "description": "Recovery plan name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "body",
            "description": "Recovery Plan creation input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRecoveryPlanInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoveryPlan"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "RecoveryPlans"
        ],
        "summary": "Deletes the specified recovery plan.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "RecoveryPlans_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "recoveryPlanName",
            "in": "path",
            "description": "Recovery plan name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "RecoveryPlans"
        ],
        "summary": "Updates the given recovery plan.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "RecoveryPlans_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "recoveryPlanName",
            "in": "path",
            "description": "Recovery plan name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "body",
            "description": "Update recovery plan input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRecoveryPlanInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoveryPlan"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationRecoveryPlans": {
      "get": {
        "tags": [
          "RecoveryPlans"
        ],
        "summary": "Gets the list of recovery plans.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "RecoveryPlans_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoveryPlanCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/switchprotection": {
      "post": {
        "tags": [
          "ProtectionContainers"
        ],
        "summary": "Switches protection from one container to another or one replication provider to\r\n            another.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ProtectionContainers_SwitchProtection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Protection container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "switchInput",
            "in": "body",
            "description": "Switch protection input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SwitchProtectionInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionContainer"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/remove": {
      "post": {
        "tags": [
          "ProtectionContainers"
        ],
        "summary": "Removes a protection container.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ProtectionContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Unique protection container ARM name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/operationresults/{jobId}": {
      "get": {
        "tags": [
          "ProtectionContainers"
        ],
        "summary": "Tracks the provider async operation.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ProtectionContainers_GetTrackAsyncOperation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Site name to work on.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "job id to track.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionContainer"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/discoverProtectableItem": {
      "post": {
        "tags": [
          "ProtectionContainers"
        ],
        "summary": "Adds a protectable item inside the replication protection container.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ProtectionContainers_DiscoverProtectableItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the fabric.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "The name of the container.",
            "required": true,
            "type": "string"
          },
          {
            "name": "discoverProtectableItemRequest",
            "in": "body",
            "description": "The request object to add a protectable\r\n            item.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiscoverProtectableItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionContainer"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}": {
      "get": {
        "tags": [
          "ProtectionContainers"
        ],
        "summary": "Gets the protection container details.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ProtectionContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Protection container id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionContainer"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "ProtectionContainers"
        ],
        "summary": "Create a protection container.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ProtectionContainers_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Unique protection container ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "creationInput",
            "in": "body",
            "description": "Creation input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProtectionContainerInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionContainer"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers": {
      "get": {
        "tags": [
          "ProtectionContainers"
        ],
        "summary": "Gets the list of protection container.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ProtectionContainers_ListByFabric",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionContainerCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationProtectionContainers": {
      "get": {
        "tags": [
          "ProtectionContainers"
        ],
        "summary": "Gets the list of all protection containers in a vault.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ProtectionContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionContainerCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectionContainerMappings/{mappingName}/operationresults/{jobId}": {
      "get": {
        "tags": [
          "ProtectionContainerMappings"
        ],
        "summary": "Tracks the protection container mapping async operation.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ProtectionContainerMappings_GetTrackAsyncOperation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Protection container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "mappingName",
            "in": "path",
            "description": "Container mapping ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "job id to track.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionContainerMapping"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectionContainerMappings/{mappingName}/remove": {
      "post": {
        "tags": [
          "ProtectionContainerMappings"
        ],
        "summary": "Remove container mapping.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ProtectionContainerMappings_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Unique protection container ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "mappingName",
            "in": "path",
            "description": "Unique protection container mapping name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "removalInput",
            "in": "body",
            "description": "Removal input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveProtectionContainerMappingInput"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectionContainerMappings/{mappingName}": {
      "get": {
        "tags": [
          "ProtectionContainerMappings"
        ],
        "summary": "Gets the list of mappings under a container.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ProtectionContainerMappings_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Fabric unique ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Unique protection container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "mappingName",
            "in": "path",
            "description": "Container mapping ARM name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionContainerMapping"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "ProtectionContainerMappings"
        ],
        "summary": "Create protection container mapping.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ProtectionContainerMappings_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Unique protection container ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "mappingName",
            "in": "path",
            "description": "Unique protection container mapping name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "creationInput",
            "in": "body",
            "description": "Mapping creation input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProtectionContainerMappingInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionContainerMapping"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "ProtectionContainerMappings"
        ],
        "summary": "Purges protection container mapping.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ProtectionContainerMappings_Purge",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Unique protection container ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "mappingName",
            "in": "path",
            "description": "Unique protection container mapping name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectionContainerMappings": {
      "get": {
        "tags": [
          "ProtectionContainerMappings"
        ],
        "summary": "Gets the list of mappings under a container.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ProtectionContainerMappings_ListByProtectionContainer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Fabric unique ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Unique protection container name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionContainerMappingCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationProtectionContainerMappings": {
      "get": {
        "tags": [
          "ProtectionContainerMappings"
        ],
        "summary": "Gets the list of all protection container mappings in a vault.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ProtectionContainerMappings_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionContainerMappingCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectableItems/{protectableItemName}": {
      "get": {
        "tags": [
          "ProtectableItems"
        ],
        "summary": "Gets the details of a protection entity.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ProtectableItems_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Protection container Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectableItemName",
            "in": "path",
            "description": "Protection entity Id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectableItem"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationProtectionContainers/{protectionContainerName}/replicationProtectableItems": {
      "get": {
        "tags": [
          "ProtectableItems"
        ],
        "summary": "Gets the list of protection entities.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "ProtectableItems_ListByProtectionContainer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Unique fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectionContainerName",
            "in": "path",
            "description": "Protection container Id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectableItemCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationPolicies/{policyName}/operationresults/{jobName}": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Tracks the protection profiles async operation.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Policies_GetTrackAsyncOperation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "Policy Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "job id to track.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationPolicies/{policyName}": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Gets the requested policy.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Policies_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "Unique name of policy.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Policies"
        ],
        "summary": "Creates the policy.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Policies_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "name of Protection Profile",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "body",
            "description": "Create policy input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePolicyInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Policies"
        ],
        "summary": "Delete the policy.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Policies_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "Policy name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Policies"
        ],
        "summary": "Updates the protection profile.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Policies_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "Protection profile Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "body",
            "description": "Update Protection Profile Input",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePolicyInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationPolicies": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Gets the list of policies",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Policies_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PolicyCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationNetworks": {
      "get": {
        "tags": [
          "Networks"
        ],
        "summary": "Gets the list of networks. View-only API.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Networks_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NetworkCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationNetworks": {
      "get": {
        "tags": [
          "Networks"
        ],
        "summary": "Gets the list of networks under a fabric.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Networks_ListByFabric",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Server Id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NetworkCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationNetworks/{networkName}": {
      "get": {
        "tags": [
          "Networks"
        ],
        "summary": "Gets a network with specified server id and network name.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Networks_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Server Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "networkName",
            "in": "path",
            "description": "Primary network name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Network"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationNetworks/{networkName}/replicationNetworkMappings/{networkMappingName}/operationresults/{jobName}": {
      "get": {
        "tags": [
          "NetworkMappings"
        ],
        "summary": "Tracks the provider async operation.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "NetworkMappings_GetTrackAsyncOperation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Primary fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "networkName",
            "in": "path",
            "description": "Primary network name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "networkMappingName",
            "in": "path",
            "description": "ARM Resource Name for network mapping.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "job id to track.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NetworkMapping"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationNetworkMappings": {
      "get": {
        "tags": [
          "NetworkMappings"
        ],
        "summary": "Gets all the network mappings under a vault.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "NetworkMappings_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NetworkMappingCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationNetworks/{networkName}/replicationNetworkMappings": {
      "get": {
        "tags": [
          "NetworkMappings"
        ],
        "summary": "Gets all the network mappings under a network.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "NetworkMappings_ListByFabric",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Primary fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "networkName",
            "in": "path",
            "description": "Primary network name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NetworkMappingCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationNetworks/{networkName}/replicationNetworkMappings/{networkMappingName}": {
      "get": {
        "tags": [
          "NetworkMappings"
        ],
        "summary": "Gets network mapping by name.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "NetworkMappings_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Primary fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "networkName",
            "in": "path",
            "description": "Primary network name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "networkMappingName",
            "in": "path",
            "description": "Network mapping name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NetworkMapping"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "NetworkMappings"
        ],
        "summary": "Creates network mapping.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "NetworkMappings_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Primary fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "networkName",
            "in": "path",
            "description": "Primary network name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "networkMappingName",
            "in": "path",
            "description": "Network mapping name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "body",
            "description": "Create network mapping input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateNetworkMappingInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NetworkMapping"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "NetworkMappings"
        ],
        "summary": "Delete network mapping.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "NetworkMappings_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Primary fabric name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "networkName",
            "in": "path",
            "description": "Primary network name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "networkMappingName",
            "in": "path",
            "description": "ARM Resource Name for network mapping.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationLogicalNetworks": {
      "get": {
        "tags": [
          "LogicalNetworks"
        ],
        "summary": "Gets the list of logical networks under a fabric.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "LogicalNetworks_ListByFabric",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Server Id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LogicalNetworkCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/replicationLogicalNetworks/{logicalNetworkName}": {
      "get": {
        "tags": [
          "LogicalNetworks"
        ],
        "summary": "Gets a logical network with specified server id and logical network name.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "LogicalNetworks_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Server Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "logicalNetworkName",
            "in": "path",
            "description": "Logical network name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LogicalNetwork"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationJobs/{name}/operationresults/{jobName}": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Tracks the Site async operation.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Jobs_GetTrackAsyncOperation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Original Job id on which resume/restart was called.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "job id to track.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationJobs/{jobName}/resume": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Resumes the specified job.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Jobs_Resume",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Id to resume.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resumeJobParams",
            "in": "body",
            "description": "Resume rob comments.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResumeJobParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationJobs/{jobName}/restart": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Restarts the specified job.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Jobs_Restart",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Id to restart.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationJobs/{jobName}/cancel": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Cancels the specified job.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Jobs_Cancel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Id to cancel.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationJobs/{jobName}": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Gets the job details.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Jobs_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Id to look details for.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationJobs/export": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Gets \"ExportJobs\" workflow details.\r\n            Old method: Two APIs were exposed for performing export jobs, one api\r\n            (subscriptions/workflow/computeWorkflowHistory) to trigger the export jobs workflow and\r\n            another api to get the blob information after the workflow has completed successfully\r\n            (subscriptions/workflow/{workflowId}/blobUrlWithSASKey)\r\n            New Method: Only one API is exposed to trigger export jobs workflow, which will trigger\r\n            the export jobs workflow, however in order to store the blob information(blobUri and\r\n            sas token) the CustomDetails field associated with the JobProperties (in Job Object)\r\n            is being used. This will be set once the export jobs workflow completes successfully.\r\n            Within custom details, instanceType is set to \"ExportJobsDetails\" and fields\r\n            \"blobUri\" and \"sasToken\" contains the required information that is necessary to access\r\n            exported jobs data.\r\n            Note:\r\n            1. Current Implementation only supports one type of AffectedObjectType and one value\r\n            for WorkflowStatus for the filer. Hence the current implementation only uses the first\r\n            value in the corresponding lists.\r\n            2. A dummy Job Entity is created in the Jobs table (this is marked as internal job)\r\n            This job entity can be identified by the Scenario Name which is set to\r\n            \"ScenarioName.ExportsJobs\".",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Jobs_Export",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "jobQueryParameter",
            "in": "body",
            "description": "job query filter.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobQueryParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationJobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Gets the list of jobs.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Jobs_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JobCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/JobQueryParameter"
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/operationresults/{jobName}": {
      "get": {
        "tags": [
          "Fabrics"
        ],
        "summary": "Tracks the Site async operation.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Fabrics_GetTrackAsyncOperation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Site name to work on.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "job id to track.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fabric"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/reassociateGateway": {
      "post": {
        "tags": [
          "Fabrics"
        ],
        "summary": "Perform failover of the process server.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Fabrics_ReassociateGateway",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "The name of the fabric containing the process server.",
            "required": true,
            "type": "string"
          },
          {
            "name": "failoverProcessServerRequest",
            "in": "body",
            "description": "The input to the failover process\r\n            server operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FailoverProcessServerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fabric"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/deployProcessServerImage": {
      "post": {
        "tags": [
          "Fabrics"
        ],
        "summary": "Deploys a Process Server.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Fabrics_DeployProcessServerImage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Id of the fabric under which the process server is to be\r\n            deployed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The input to deploy a Process Server from Azure Image.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeployProcessServerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fabric"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/renewcertificate": {
      "post": {
        "tags": [
          "Fabrics"
        ],
        "summary": "Renews certificate for the site.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Fabrics_RenewCertificate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Site it to renew certs for.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fabric"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/checkConsistency": {
      "post": {
        "tags": [
          "Fabrics"
        ],
        "summary": "Checks the consistency of the site.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Fabrics_CheckConsistency",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fabric"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}/remove": {
      "post": {
        "tags": [
          "Fabrics"
        ],
        "summary": "Deletes the site.\r\n            TODO: put a code based DebugAssert to ensure all HttpPosts have Operation entry made.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Fabrics_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Site it to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics/{fabricName}": {
      "get": {
        "tags": [
          "Fabrics"
        ],
        "summary": "Gets the details of a Site.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Fabrics_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Site name of interest.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fabric"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Fabrics"
        ],
        "summary": "Creates the site.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Fabrics_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Name of the site.",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "body",
            "description": "Site creation input.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FabricCreationInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fabric"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Fabrics"
        ],
        "summary": "Purges the site.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Fabrics_Purge",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Site to purge.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationFabrics": {
      "get": {
        "tags": [
          "Fabrics"
        ],
        "summary": "Gets the list of Site registered.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Fabrics_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FabricCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationEvents/{eventName}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get a monitoring event.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Events_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "eventName",
            "in": "path",
            "description": "The name of the event to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationEvents": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Gets the list of monitoring events.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "Events_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationAlertSettings/{alertSettingName}": {
      "get": {
        "tags": [
          "AlertSettings"
        ],
        "summary": "Gets an alert setting.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "AlertSettings_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "alertSettingName",
            "in": "path",
            "description": "The name of the alert setting.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "AlertSettings"
        ],
        "summary": "Configures the alerts for this vault.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "AlertSettings_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "alertSettingName",
            "in": "path",
            "description": "The name of the alert\r\n            setting.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The input to configure the alerts.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigureAlertRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/replicationAlertSettings": {
      "get": {
        "tags": [
          "AlertSettings"
        ],
        "summary": "Gets the list of alerts.",
        "description": "TODO (avrai): Detailed Description.",
        "operationId": "AlertSettings_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceName"
          },
          {
            "$ref": "#/parameters/ResourceType"
          },
          {
            "$ref": "#/parameters/ResourceNamespace"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AlertCollection"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "AlertCollection": {
      "description": "Collection of alerts.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the list of alerts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alert"
          }
        },
        "nextLink": {
          "description": "Gets or sets the value of next link.",
          "type": "string"
        }
      }
    },
    "Alert": {
      "description": "Implements the Alert class.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AlertProperties",
          "description": "Gets or sets Alert related data.",
          "x-ms-client-flatten": true
        }
      }
    },
    "AlertProperties": {
      "description": "The proprties of an alert.",
      "type": "object",
      "properties": {
        "sendToOwners": {
          "description": "Gets or sets a value indicating whether to send email to subscription administrator.",
          "type": "string"
        },
        "customEmailAddresses": {
          "description": "Gets or sets the custom email address for sending emails.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locale": {
          "description": "Gets or sets the locale for the email notification.",
          "type": "string"
        }
      }
    },
    "ConfigureAlertRequest": {
      "description": "Request to configure alerts for the system.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigureAlertRequestProperties",
          "description": "Gets or sets the properties of a configure alert request.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ConfigureAlertRequestProperties": {
      "description": "Properties of a configure alert request.",
      "type": "object",
      "properties": {
        "sendToOwners": {
          "description": "Gets or sets a value indicating whether to send email to subscription administrator.",
          "type": "string"
        },
        "customEmailAddresses": {
          "description": "Gets or sets the custom email address for sending emails.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locale": {
          "description": "Gets or sets the locale for the email notification.",
          "type": "string"
        }
      }
    },
    "EventCollection": {
      "description": "Collection of fabric details.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the list of events.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event"
          }
        },
        "nextLink": {
          "description": "Gets or sets the value of next link.",
          "type": "string"
        }
      }
    },
    "Event": {
      "description": "Implements the Event class.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/EventProperties",
          "description": "Gets or sets Event related data.",
          "x-ms-client-flatten": true
        }
      }
    },
    "EventProperties": {
      "description": "The properties of a monitoring event.",
      "type": "object",
      "properties": {
        "eventCode": {
          "description": "Gets or sets the Id of the monitoring event.",
          "type": "string"
        },
        "description": {
          "description": "Gets or sets the event name.",
          "type": "string"
        },
        "eventType": {
          "description": "Gets or sets the type of the event.\r\n            for example: VM Health, Server Health, Job Failure etc.",
          "type": "string"
        },
        "affectedObjectFriendlyName": {
          "description": "Gets or sets the friendly name of the source of the event on which it \r\n            is raised (for example, VM, VMM etc).",
          "type": "string"
        },
        "severity": {
          "description": "Gets or sets the severity of the event.",
          "type": "string"
        },
        "timeOfOccurrence": {
          "format": "date-time",
          "description": "Gets or sets the time of occurence of the event.",
          "type": "string"
        },
        "fabricId": {
          "description": "Gets or sets the ARM ID of the fabric.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/EventProviderSpecificDetails",
          "description": "Gets or sets the provider specific settings."
        },
        "eventSpecificDetails": {
          "$ref": "#/definitions/EventSpecificDetails",
          "description": "Gets or sets the event specific settings."
        },
        "healthErrors": {
          "description": "Gets or sets the list of errors / warnings capturing details associated with the\r\n            issue(s).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthError"
          }
        }
      }
    },
    "EventProviderSpecificDetails": {
      "description": "Model class for provider specific details for an event.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the class type. Overriden in derived classes.",
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "instanceType"
    },
    "EventSpecificDetails": {
      "description": "Model class for event specific details for an event.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the class type. Overriden in derived classes.",
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "instanceType"
    },
    "HealthError": {
      "description": "Health Error",
      "type": "object",
      "properties": {
        "errorLevel": {
          "description": "Gets or sets Level of error.",
          "type": "string"
        },
        "errorCode": {
          "description": "Gets or sets error code.",
          "type": "string"
        },
        "errorMessage": {
          "description": "Gets or sets error message.",
          "type": "string"
        },
        "possibleCauses": {
          "description": "Gets or sets possible causes of error.",
          "type": "string"
        },
        "recommendedAction": {
          "description": "Gets or sets recommended action to resolve error.",
          "type": "string"
        },
        "creationTimeUtc": {
          "format": "date-time",
          "description": "Gets or sets Error creation time (UTC)",
          "type": "string"
        },
        "recoveryProviderErrorMessage": {
          "description": "Gets or sets DRA error message.",
          "type": "string"
        },
        "entityId": {
          "description": "Gets or sets ID of the entity.",
          "type": "string"
        }
      }
    },
    "FabricCollection": {
      "description": "Collection of fabric details.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the fabric details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Fabric"
          }
        },
        "nextLink": {
          "description": "Gets or sets the value of next link.",
          "type": "string"
        }
      }
    },
    "Fabric": {
      "description": "Fabric definition.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/FabricProperties",
          "description": "Gets or sets Fabric related data.",
          "x-ms-client-flatten": true
        }
      }
    },
    "FabricProperties": {
      "description": "Fabric properties.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "Gets or sets Friendly name of the fabric.",
          "type": "string"
        },
        "encryptionDetails": {
          "$ref": "#/definitions/EncryptionDetails",
          "description": "Gets or sets Encryption details for the fabric."
        },
        "rolloverEncryptionDetails": {
          "$ref": "#/definitions/EncryptionDetails",
          "description": "Gets or sets Rollover encryption details for the fabric."
        },
        "internalIdentifier": {
          "description": "Gets or sets dra Registration Id.",
          "type": "string"
        },
        "bcdrState": {
          "description": "Gets or sets BCDR state of the fabric.",
          "type": "string"
        },
        "customDetails": {
          "$ref": "#/definitions/FabricSpecificDetails",
          "description": "Gets or sets fabric specific settings."
        },
        "healthErrorDetails": {
          "description": "Gets or sets fabric health error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthError"
          }
        },
        "health": {
          "description": "Gets or sets Health of fabric.",
          "type": "string"
        }
      }
    },
    "EncryptionDetails": {
      "description": "Encryption details for the fabric.",
      "type": "object",
      "properties": {
        "kekState": {
          "description": "Gets or sets the key encryption key state for the Vmm.",
          "type": "string"
        },
        "kekCertThumbprint": {
          "description": "Gets or sets the key encryption key certificate thumbprint.",
          "type": "string"
        },
        "kekCertExpiryDate": {
          "format": "date-time",
          "description": "Gets or sets the key encryption key certificate expiry date.",
          "type": "string"
        }
      }
    },
    "FabricSpecificDetails": {
      "description": "Fabric specific details.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the class type. Overriden in derived classes.",
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "instanceType"
    },
    "FabricCreationInput": {
      "description": "Site details provided during the time of site creation",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FabricCreationInputProperties",
          "description": "Gets or sets fabric creation input.",
          "x-ms-client-flatten": true
        }
      }
    },
    "FabricCreationInputProperties": {
      "description": "Properties of site details provided during the time of site creation",
      "type": "object",
      "properties": {
        "customDetails": {
          "$ref": "#/definitions/FabricSpecificCreationInput",
          "description": "Gets or sets fabric provider specific creation input."
        }
      }
    },
    "FabricSpecificCreationInput": {
      "description": "Fabric provider specific settings.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the class type.",
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "instanceType"
    },
    "Object": {
      "description": "Base of all objects.",
      "type": "object",
      "properties": {}
    },
    "DeployProcessServerRequest": {
      "description": "Request to create a Process Server.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeployProcessServerRequestProperties",
          "description": "Gets or sets the deploy process server request propertyies.",
          "x-ms-client-flatten": true
        }
      }
    },
    "DeployProcessServerRequestProperties": {
      "description": "Deploy Process Server request properties.",
      "type": "object",
      "properties": {
        "subscriptionId": {
          "description": "Gets or sets the subscription Id.",
          "type": "string"
        },
        "vaultLocation": {
          "description": "Gets or sets the vault location.",
          "type": "string"
        },
        "friendlyName": {
          "description": "Gets or sets the process server name.",
          "type": "string"
        },
        "userName": {
          "description": "Gets or sets the user name.",
          "type": "string"
        },
        "password": {
          "description": "Gets or sets the password.",
          "type": "string"
        },
        "ipAddress": {
          "description": "Gets or sets the ip address.",
          "type": "string"
        },
        "azureNetworkName": {
          "description": "Gets or sets the azure network name.",
          "type": "string"
        },
        "azureNetworkSubnet": {
          "description": "Gets or sets the azure network subnet.",
          "type": "string"
        }
      }
    },
    "FailoverProcessServerRequest": {
      "description": "Request to failover a process server.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FailoverProcessServerRequestProperties",
          "description": "Gets or sets the properties of the PS Failover request.",
          "x-ms-client-flatten": true
        }
      }
    },
    "FailoverProcessServerRequestProperties": {
      "description": "The properties of the Failover Process Server request.",
      "type": "object",
      "properties": {
        "containerName": {
          "description": "Gets or sets the container identifier.",
          "type": "string"
        },
        "sourceProcessServerId": {
          "description": "Gets or sets the source process server.",
          "type": "string"
        },
        "targetProcessServerId": {
          "description": "Gets or sets the new process server.",
          "type": "string"
        },
        "vmsToMigrate": {
          "description": "Gets or sets the VMS to migrate.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updateType": {
          "description": "Gets or sets a value for failover type. It can be systemlevel/serverlevel",
          "type": "string"
        }
      }
    },
    "JobCollection": {
      "description": "Collection of jobs.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the list of jobs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Job"
          }
        },
        "nextLink": {
          "description": "Gets or sets the value of next link.",
          "type": "string"
        }
      }
    },
    "Job": {
      "description": "Job details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "Gets or sets the custom data.",
          "x-ms-client-flatten": true
        },
        "status": {
          "description": "Gets or sets the status of the Job. ARM expects the terminal status to be one of\r\n            (1) Succeeded, (2) Failed or (3) Canceled.\r\n            All other values imply that the operation is still running / being applied.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ARMException",
          "description": "Gets or sets the error.",
          "x-ms-client-flatten": true
        },
        "startTime": {
          "description": "Gets or sets the start time.",
          "type": "string"
        },
        "endTime": {
          "description": "Gets or sets the start time.",
          "type": "string"
        }
      }
    },
    "JobProperties": {
      "description": "Job custom data details.",
      "type": "object",
      "properties": {
        "activityId": {
          "description": "Gets or sets the activity id.",
          "type": "string"
        },
        "scenarioName": {
          "description": "Gets or sets the ScenarioName.",
          "type": "string"
        },
        "friendlyName": {
          "description": "Gets or sets the DisplayName.",
          "type": "string"
        },
        "state": {
          "description": "Gets or sets the status of the Job. It is one of these values - NotStarted, InProgress,\r\n            Succeeded, Failed, Cancelled, Suspended or Other.",
          "type": "string"
        },
        "stateDescription": {
          "description": "Gets or sets the description of the state of the Job. For e.g. - For Succeeded state,\r\n            description can be Completed, PartiallySucceeded, CompletedWithInformation or Skipped.",
          "type": "string"
        },
        "tasks": {
          "description": "Gets or sets the tasks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ASRTask"
          }
        },
        "errors": {
          "description": "Gets or sets the errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobErrorDetails"
          }
        },
        "startTime": {
          "format": "date-time",
          "description": "Gets or sets the start time.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "Gets or sets the end time.",
          "type": "string"
        },
        "allowedActions": {
          "description": "Gets or sets the Allowed action the job.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targetObjectId": {
          "description": "Gets or sets the affected Object Id.",
          "type": "string"
        },
        "targetObjectName": {
          "description": "Gets or sets the name of the affected object.",
          "type": "string"
        },
        "targetInstanceType": {
          "description": "Gets or sets the type of the affected object which is\r\n            of {Microsoft.Azure.SiteRecovery.V2015_11_10.AffectedObjectType} class.",
          "type": "string"
        },
        "customDetails": {
          "$ref": "#/definitions/JobDetails",
          "description": "Gets or sets the custom job details like test failover job details."
        }
      }
    },
    "ARMException": {
      "description": "ARM inner exception class.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets HTTP status code for the error.",
          "type": "string"
        },
        "message": {
          "description": "Gets exception message.",
          "type": "string"
        },
        "target": {
          "description": "Gets exception target.",
          "type": "string"
        },
        "details": {
          "description": "Gets service based error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ARMExceptionDetails"
          }
        },
        "innererror": {
          "$ref": "#/definitions/ARMInnerError",
          "description": "Gets private data for service debugging."
        }
      }
    },
    "ASRTask": {
      "description": "Task of the Job.",
      "type": "object",
      "properties": {
        "taskId": {
          "description": "Gets or sets the Id.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the unique Task name.",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "Gets or sets the start time.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "Gets or sets the end time.",
          "type": "string"
        },
        "allowedActions": {
          "description": "Gets or sets the state/actions applicable on this task.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "friendlyName": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "state": {
          "description": "Gets or sets the State. It is one of these values - NotStarted, InProgress,\r\n            Succeeded, Failed, Cancelled, Suspended or Other.",
          "type": "string"
        },
        "stateDescription": {
          "description": "Gets or sets the description of the task state. For example - For Succeeded state,\r\n            description can be Completed, PartiallySucceeded, CompletedWithInformation or Skipped.",
          "type": "string"
        },
        "taskType": {
          "description": "Gets or sets the type of task. Details in CustomDetails property depend on this type.",
          "type": "string"
        },
        "customDetails": {
          "$ref": "#/definitions/TaskTypeDetails",
          "description": "Gets or sets the custom task details based on the task type. If the task is one of\r\n            GroupTaskDetails or it's derived types, the details will be in GroupTaskCustomDetails.\r\n            This was done to avoid hydra limitation of not having cyclic dependency, as GroupTasks\r\n            again have child tasks which are of parent type - Task. (Refer Bug 6269808.)"
        },
        "groupTaskCustomDetails": {
          "$ref": "#/definitions/GroupTaskDetails",
          "description": "Gets or sets the custom task details based on the task type, if the task type is\r\n            GroupTaskDetails or one of the types derived from it."
        },
        "errors": {
          "description": "Gets or sets the task error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobErrorDetails"
          }
        }
      }
    },
    "JobErrorDetails": {
      "description": "This class contains the error details per object.",
      "type": "object",
      "properties": {
        "serviceErrorDetails": {
          "$ref": "#/definitions/ServiceError",
          "description": "Gets or sets the Service error details."
        },
        "providerErrorDetails": {
          "$ref": "#/definitions/ProviderError",
          "description": "Gets or sets the Provider error details."
        },
        "errorLevel": {
          "description": "Gets or sets error level of error.",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "description": "Gets or sets the creation time of job error.",
          "type": "string"
        },
        "taskId": {
          "description": "Gets or sets the Id of the task.",
          "type": "string"
        }
      }
    },
    "JobDetails": {
      "description": "Job details based on specific job type.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the type of job details (see JobDetailsTypes enum for possible values).",
          "type": "string",
          "readOnly": true
        },
        "affectedObjectDetails": {
          "description": "Gets or sets the affected object properties like source server, source cloud, target\r\n            server, target cloud etc. based on the workflow object details.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "discriminator": "instanceType"
    },
    "ARMExceptionDetails": {
      "description": "Service based exception details.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets service error code.",
          "type": "string"
        },
        "message": {
          "description": "Gets error message.",
          "type": "string"
        },
        "possibleCauses": {
          "description": "Gets possible cause for error.",
          "type": "string"
        },
        "recommendedAction": {
          "description": "Gets recommended action for the error.",
          "type": "string"
        },
        "clientRequestId": {
          "description": "Gets the client request Id for the session.",
          "type": "string"
        },
        "activityId": {
          "description": "Gets the activity Id for the session.",
          "type": "string"
        },
        "target": {
          "description": "Gets exception target.",
          "type": "string"
        }
      }
    },
    "ARMInnerError": {
      "description": "ARM internal error class for providing additional debug data.",
      "type": "object",
      "properties": {
        "trace": {
          "description": "Gets complete stack trace of the exception.",
          "type": "string"
        },
        "source": {
          "description": "Gets exception source.",
          "type": "string"
        },
        "methodStatus": {
          "$ref": "#/definitions/MethodCallStatus",
          "description": "Gets data related to method which threw the exception."
        },
        "cloudId": {
          "description": "Gets cloud Id in exception.",
          "type": "string"
        },
        "hVHostId": {
          "description": "Gets hyperV host ID.",
          "type": "string"
        },
        "hVClusterId": {
          "description": "Gets hyperV cluster Id.",
          "type": "string"
        },
        "networkId": {
          "description": "Gets network Id.",
          "type": "string"
        },
        "vmId": {
          "description": "Gets Vm Id.",
          "type": "string"
        },
        "fabricId": {
          "description": "Gets Fabric Id.",
          "type": "string"
        },
        "liveId": {
          "description": "Gets Live Id of the caller.",
          "type": "string"
        },
        "containerId": {
          "description": "Gets container Id of the caller.",
          "type": "string"
        },
        "resourceId": {
          "description": "Gets resource id used in the call.",
          "type": "string"
        },
        "resourceName": {
          "description": "Gets caller resource name.",
          "type": "string"
        },
        "subscriptionId": {
          "description": "Gets subscription Id.",
          "type": "string"
        },
        "serializedSRSLogContext": {
          "description": "Gets serialized SRS log context.",
          "type": "string"
        }
      }
    },
    "TaskTypeDetails": {
      "description": "Task details based on specific task type.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets or sets the type of task details.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "GroupTaskDetails": {
      "description": "This class represents the group task details when parent child relationship exists\r\n            in the drill down.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets or sets the type of task details.",
          "type": "string"
        },
        "childTasks": {
          "description": "Gets or sets the child tasks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ASRTask"
          }
        }
      },
      "discriminator": "instanceType"
    },
    "ServiceError": {
      "description": "ASR error model",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets or sets error code.",
          "type": "string"
        },
        "message": {
          "description": "Gets or sets error message.",
          "type": "string"
        },
        "possibleCauses": {
          "description": "Gets or sets possible causes of error.",
          "type": "string"
        },
        "recommendedAction": {
          "description": "Gets or sets recommended action to resolve error.",
          "type": "string"
        },
        "activityId": {
          "description": "Gets or sets activity Id.",
          "type": "string"
        }
      }
    },
    "ProviderError": {
      "description": "This class contains the error details per object.",
      "type": "object",
      "properties": {
        "errorCode": {
          "format": "int32",
          "description": "Gets or sets the Error code.",
          "type": "integer"
        },
        "errorMessage": {
          "description": "Gets or sets the Error message.",
          "type": "string"
        },
        "errorId": {
          "description": "Gets or sets the Provider error Id.",
          "type": "string"
        },
        "possibleCauses": {
          "description": "Gets or sets the possible causes for the error.",
          "type": "string"
        },
        "recommendedAction": {
          "description": "Gets or sets the recommended action to resolve the error.",
          "type": "string"
        }
      }
    },
    "MethodCallStatus": {
      "description": "Reports method status where exception was raised.",
      "type": "object",
      "properties": {
        "isVirtual": {
          "description": "Gets a value indicating whether called method was virtual",
          "type": "string"
        },
        "parameters": {
          "description": "Gets parameter list passed to method.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "containsGenericParameters": {
          "description": "Gets a value indicating whether method container generic params.",
          "type": "string"
        }
      }
    },
    "JobQueryParameter": {
      "description": "Query parameter to enumerate jobs.",
      "type": "object",
      "properties": {
        "startTime": {
          "description": "Gets or sets Date time to get jobs from.",
          "type": "string"
        },
        "endTime": {
          "description": "Gets or sets Date time to get jobs upto.",
          "type": "string"
        },
        "fabricId": {
          "description": "Gets or sets the Id of the fabric to search jobs under.",
          "type": "string"
        },
        "affectedObjectTypes": {
          "description": "Gets or sets the type of objects.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "jobStatus": {
          "description": "Gets or sets the states of the job to be filtered can be in.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResumeJobParams": {
      "description": "Resume job params.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ResumeJobParamsProperties",
          "description": "Gets or sets Resume job properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ResumeJobParamsProperties": {
      "description": "Resume job properties.",
      "type": "object",
      "properties": {
        "comments": {
          "description": "Gets or sets Resume job comments.",
          "type": "string"
        }
      }
    },
    "LogicalNetwork": {
      "description": "Logical network data model.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/LogicalNetworkProperties",
          "description": "Gets or sets the Logical Network Properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "LogicalNetworkProperties": {
      "description": "Logical Network Properties.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "Gets or sets the Friendly Name.",
          "type": "string"
        },
        "networkVirtualizationStatus": {
          "description": "Gets or sets a value indicating whether Network Virtualization is enabled for the logical network.",
          "type": "string"
        },
        "logicalNetworkUsage": {
          "description": "Gets or sets a value indicating whether logical network is used as private test network by test failover.",
          "type": "string"
        },
        "logicalNetworkDefinitionsStatus": {
          "description": "Gets or sets a value indicating whether logical network definitions are isolated.",
          "type": "string"
        }
      }
    },
    "LogicalNetworkCollection": {
      "description": "List of logical networks.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the Logical Networks list details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogicalNetwork"
          }
        },
        "nextLink": {
          "description": "Gets or sets the value of next link.",
          "type": "string"
        }
      }
    },
    "NetworkMapping": {
      "description": "Network Mapping model.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkMappingProperties",
          "description": "Gets or sets the Network Mapping Properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "NetworkMappingProperties": {
      "description": "Network Mapping Properties.",
      "type": "object",
      "properties": {
        "state": {
          "description": "Gets or sets the pairing status for network mapping.",
          "type": "string"
        },
        "primaryNetworkFriendlyName": {
          "description": "Gets or sets the primary network friendly name.",
          "type": "string"
        },
        "recoveryNetworkFriendlyName": {
          "description": "Gets or sets the recovery network friendly name.",
          "type": "string"
        },
        "recoveryNetworkId": {
          "description": "Gets or sets the recovery network id for network mapping.",
          "type": "string"
        }
      }
    },
    "CreateNetworkMappingInput": {
      "description": "Create network mappings input.",
      "type": "object",
      "properties": {
        "recoveryFabricName": {
          "description": "Gets or sets recovery server Id.",
          "type": "string"
        },
        "recoveryNetworkId": {
          "description": "Gets or sets recovery network Id.",
          "type": "string"
        }
      }
    },
    "NetworkMappingCollection": {
      "description": "List of network mappings.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the Network Mappings list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkMapping"
          }
        },
        "nextLink": {
          "description": "Gets or sets the value of next link.",
          "type": "string"
        }
      }
    },
    "Network": {
      "description": "Network model.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkProperties",
          "description": "Gets or sets the Network Properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "NetworkProperties": {
      "description": "Network Properties",
      "type": "object",
      "properties": {
        "fabricType": {
          "description": "Gets or sets the Fabric Type.",
          "type": "string"
        },
        "subnets": {
          "description": "Gets or sets the List of subnets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subnet"
          }
        },
        "friendlyName": {
          "description": "Gets or sets the Friendly Name.",
          "type": "string"
        },
        "networkType": {
          "description": "Gets or sets the Network Type.",
          "type": "string"
        }
      }
    },
    "Subnet": {
      "description": "Subnets of the network.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets the subnet name.",
          "type": "string"
        },
        "friendlyName": {
          "description": "Gets or sets the subnet friendly name.",
          "type": "string"
        },
        "addressList": {
          "description": "Gets or sets the list of addresses for the subnet.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NetworkCollection": {
      "description": "List of networks.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the Networks list details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Network"
          }
        },
        "nextLink": {
          "description": "Gets or sets the value of next link.",
          "type": "string"
        }
      }
    },
    "PolicyCollection": {
      "description": "Protection Profile Collection details.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the policy details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Policy"
          }
        },
        "nextLink": {
          "description": "Gets or sets the value of next link.",
          "type": "string"
        }
      }
    },
    "Policy": {
      "description": "Protection profile details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PolicyProperties",
          "description": "Gets or sets the custom data.",
          "x-ms-client-flatten": true
        }
      }
    },
    "PolicyProperties": {
      "description": "Protection profile custom data details.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "Gets or sets the FriendlyName.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/PolicyProviderSpecificDetails",
          "description": "Gets or sets the ReplicationChannelSetting."
        }
      }
    },
    "PolicyProviderSpecificDetails": {
      "description": "Base class for Provider specific details for policies.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the class type. Overridden in derived classes.",
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "instanceType"
    },
    "CreatePolicyInput": {
      "description": "Protection profile input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CreatePolicyInputProperties",
          "description": "Gets or sets policy creation properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "CreatePolicyInputProperties": {
      "description": "Policy creation properties.",
      "type": "object",
      "properties": {
        "providerSpecificInput": {
          "$ref": "#/definitions/PolicyProviderSpecificInput",
          "description": "Gets or sets the ReplicationProviderSettings."
        }
      }
    },
    "PolicyProviderSpecificInput": {
      "description": "Base class for provider specific input",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets or sets the class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "UpdatePolicyInput": {
      "description": "Update protection profile input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdatePolicyInputProperties",
          "description": "Gets or sets the ReplicationProviderSettings.",
          "x-ms-client-flatten": true
        }
      }
    },
    "UpdatePolicyInputProperties": {
      "description": "Policy update properties.",
      "type": "object",
      "properties": {
        "replicationProviderSettings": {
          "$ref": "#/definitions/PolicyProviderSpecificInput",
          "description": "Gets or sets the ReplicationProviderSettings."
        }
      }
    },
    "ProtectableItemCollection": {
      "description": "Protectable item collection.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the Protectable item details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProtectableItem"
          }
        },
        "nextLink": {
          "description": "Gets or sets the value of next link.",
          "type": "string"
        }
      }
    },
    "ProtectableItem": {
      "description": "Replication protected item",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProtectableItemProperties",
          "description": "Gets or sets the custom data.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ProtectableItemProperties": {
      "description": "Replication protected item custom data details.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "protectionStatus": {
          "description": "Gets or sets the protection status.",
          "type": "string"
        },
        "replicationProtectedItemId": {
          "description": "Gets or sets the ARM resource of protected items.",
          "type": "string"
        },
        "recoveryServicesProviderId": {
          "description": "Gets or sets the recovery provider ARM Id.",
          "type": "string"
        },
        "protectionReadinessErrors": {
          "description": "Gets or sets the Current protection readiness errors.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supportedReplicationProviders": {
          "description": "Gets or sets the list of replication providers supported for the protectable item.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customDetails": {
          "$ref": "#/definitions/ConfigurationSettings",
          "description": "Gets or sets the Replication provider custom settings."
        }
      }
    },
    "ConfigurationSettings": {
      "description": "Replication provider specific settings.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the class type. Overriden in derived classes.",
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "instanceType"
    },
    "ProtectionContainerMappingCollection": {
      "description": "Protection container mapping collection class.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of container mappings.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProtectionContainerMapping"
          }
        },
        "nextLink": {
          "description": "Gets or sets link to fetch rest of the data.",
          "type": "string"
        }
      }
    },
    "ProtectionContainerMapping": {
      "description": "Protection container mapping object.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProtectionContainerMappingProperties",
          "description": "Gets or sets the custom data.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ProtectionContainerMappingProperties": {
      "description": "Protection container mapping properties.",
      "type": "object",
      "properties": {
        "targetProtectionContainerId": {
          "description": "Gets or sets Paired protection container ARM ID.",
          "type": "string"
        },
        "targetProtectionContainerFriendlyName": {
          "description": "Gets or sets Friendly name of paired container.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/ProtectionContainerMappingProviderSpecificDetails",
          "description": "Gets or sets Provider specific provider details."
        },
        "health": {
          "description": "Gets or sets Health of pairing.",
          "type": "string"
        },
        "healthErrorDetails": {
          "description": "Gets or sets Health error.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthError"
          }
        },
        "policyId": {
          "description": "Gets or sets Policy ARM Id.",
          "type": "string"
        },
        "state": {
          "description": "Gets or sets Association Status",
          "type": "string"
        },
        "sourceProtectionContainerFriendlyName": {
          "description": "Gets or sets Friendly name of source protection container.",
          "type": "string"
        },
        "sourceFabricFriendlyName": {
          "description": "Gets or sets Friendly name of source fabric.",
          "type": "string"
        },
        "targetFabricFriendlyName": {
          "description": "Gets or sets Friendly name of target fabric.",
          "type": "string"
        },
        "policyFriendlyName": {
          "description": "Gets or sets Friendly name of replication policy.",
          "type": "string"
        }
      }
    },
    "ProtectionContainerMappingProviderSpecificDetails": {
      "description": "Container mapping provider specific details.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the class type. Overriden in derived classes.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CreateProtectionContainerMappingInput": {
      "description": "Configure pairing input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CreateProtectionContainerMappingInputProperties",
          "description": "Gets or sets Configure protection input properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "CreateProtectionContainerMappingInputProperties": {
      "description": "Configure pairing input properties.",
      "type": "object",
      "properties": {
        "targetProtectionContainerId": {
          "description": "Gets or sets the target unique protection container name.",
          "type": "string"
        },
        "PolicyId": {
          "description": "Gets or sets applicable policy.",
          "type": "string"
        },
        "providerSpecificInput": {
          "$ref": "#/definitions/ReplicationProviderSpecificContainerMappingInput",
          "description": "Gets or sets Provider specific input for pairing."
        }
      }
    },
    "ReplicationProviderSpecificContainerMappingInput": {
      "description": "Provider specific input for pairing operations.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets or sets the class type.",
          "type": "string"
        }
      }
    },
    "RemoveProtectionContainerMappingInput": {
      "description": "Container unpairing input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RemoveProtectionContainerMappingInputProperties",
          "description": "Gets or sets Configure protection input properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "RemoveProtectionContainerMappingInputProperties": {
      "description": "Unpairing input properties.",
      "type": "object",
      "properties": {
        "providerSpecificInput": {
          "$ref": "#/definitions/ReplicationProviderContainerUnmappingInput",
          "description": "Gets or sets Provider specific input for unpairing."
        }
      }
    },
    "ReplicationProviderContainerUnmappingInput": {
      "description": "Provider specific input for unpairing operations.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets or sets the class type.",
          "type": "string"
        }
      }
    },
    "ProtectionContainerCollection": {
      "description": "Protection Container collection.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the Protection Container details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProtectionContainer"
          }
        },
        "nextLink": {
          "description": "Gets or sets the value of next link.",
          "type": "string"
        }
      }
    },
    "ProtectionContainer": {
      "description": "Protection container details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProtectionContainerProperties",
          "description": "Gets or sets the custom data.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ProtectionContainerProperties": {
      "description": "Protection profile custom data details.",
      "type": "object",
      "properties": {
        "fabricFriendlyName": {
          "description": "Gets or sets Fabric friendly name.",
          "type": "string"
        },
        "friendlyName": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "fabricType": {
          "description": "Gets or sets the fabric type.",
          "type": "string"
        },
        "protectedItemCount": {
          "format": "int32",
          "description": "Gets or sets Number of protected PEs",
          "type": "integer"
        },
        "pairingStatus": {
          "description": "Gets or sets the pairing status of this cloud.",
          "type": "string"
        },
        "role": {
          "description": "Gets or sets the role of this cloud.",
          "type": "string"
        },
        "fabricSpecificDetails": {
          "$ref": "#/definitions/ProtectionContainerFabricSpecificDetails",
          "description": "Gets or sets fabric specific details."
        }
      }
    },
    "ProtectionContainerFabricSpecificDetails": {
      "description": "Base class for fabric specific details of container.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the class type. Overriden in derived classes.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CreateProtectionContainerInput": {
      "description": "Create protection container input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CreateProtectionContainerInputProperties",
          "description": "Gets or sets create protection container input properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "CreateProtectionContainerInputProperties": {
      "description": "Create protection container input properties.",
      "type": "object",
      "properties": {
        "providerSpecificInput": {
          "description": "Gets or sets provider specific inputs for container creation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReplicationProviderSpecificContainerCreationInput"
          }
        }
      }
    },
    "ReplicationProviderSpecificContainerCreationInput": {
      "description": "Provider specific input for container creation operation.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets or sets the class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "DiscoverProtectableItemRequest": {
      "description": "Request to add a physical machine as a protectable item in a container.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DiscoverProtectableItemRequestProperties",
          "description": "Gets or sets the properties of a discover protectable item request.",
          "x-ms-client-flatten": true
        }
      }
    },
    "DiscoverProtectableItemRequestProperties": {
      "description": "Discover protectable item properties.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "Gets or sets the friendly name of the physical machine.",
          "type": "string"
        },
        "ipAddress": {
          "description": "Gets or sets the IP address of the physical machine to be discovered.",
          "type": "string"
        },
        "osType": {
          "description": "Gets or sets the OS type on the physical machine.",
          "type": "string"
        }
      }
    },
    "SwitchProtectionInput": {
      "description": "Switch protection input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SwitchProtectionInputProperties",
          "description": "Gets or sets switch protection properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "SwitchProtectionInputProperties": {
      "description": "Switch protection input properties.",
      "type": "object",
      "properties": {
        "replicationProtectedItemName": {
          "description": "Gets or sets the unique replication protected item name.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/SwitchProtectionProviderSpecificInput",
          "description": "Gets or sets Provider specific switch protection input."
        }
      }
    },
    "SwitchProtectionProviderSpecificInput": {
      "description": "Provider specific switch protection input.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the Instance type.",
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "instanceType"
    },
    "RecoveryPlanCollection": {
      "description": "Recovery plan collection details.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the list of recovery plans.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPlan"
          }
        },
        "nextLink": {
          "description": "Gets or sets the value of next link.",
          "type": "string"
        }
      }
    },
    "RecoveryPlan": {
      "description": "Recovery plan details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryPlanProperties",
          "description": "Gets or sets the custom details.",
          "x-ms-client-flatten": true
        }
      }
    },
    "RecoveryPlanProperties": {
      "description": "Recovery plan custom details.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "Gets or sets the friendly name.",
          "type": "string"
        },
        "primaryFabricId": {
          "description": "Gets or sets the primary fabric Id.",
          "type": "string"
        },
        "primaryFabricFriendlyName": {
          "description": "Gets or sets the primary fabric friendly name.",
          "type": "string"
        },
        "recoveryFabricId": {
          "description": "Gets or sets the recovery fabric Id.",
          "type": "string"
        },
        "recoveryFabricFriendlyName": {
          "description": "Gets or sets the recovery fabric friendly name.",
          "type": "string"
        },
        "failoverDeploymentModel": {
          "description": "Gets or sets the failover deployment model.",
          "type": "string"
        },
        "replicationProviders": {
          "description": "Gets or sets the list of replication providers.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedOperations": {
          "description": "Gets or sets the list of allowed operations.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lastPlannedFailoverTime": {
          "format": "date-time",
          "description": "Gets or sets the start time of the last planned failover.",
          "type": "string"
        },
        "lastTestFailoverTime": {
          "format": "date-time",
          "description": "Gets or sets the start time of the last test failover.",
          "type": "string"
        },
        "currentScenario": {
          "$ref": "#/definitions/CurrentScenarioDetails",
          "description": "Gets or sets the current scenario details."
        },
        "currentScenarioStatus": {
          "description": "Gets or sets the recovery plan status.",
          "type": "string"
        },
        "currentScenarioStatusDescription": {
          "description": "Gets or sets the recovery plan status description.",
          "type": "string"
        },
        "groups": {
          "description": "Gets or sets the recovery plan groups.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPlanGroup"
          }
        }
      }
    },
    "CurrentScenarioDetails": {
      "description": "Current scenario details of the protected entity.",
      "type": "object",
      "properties": {
        "scenarioName": {
          "description": "Gets or sets Scenario name.",
          "type": "string"
        },
        "jobId": {
          "description": "Gets or sets ARM Id of the job being executed.",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "Gets or sets Start time of the workflow.",
          "type": "string"
        }
      }
    },
    "RecoveryPlanGroup": {
      "description": "Recovery plan group details.",
      "required": [
        "groupType"
      ],
      "type": "object",
      "properties": {
        "groupType": {
          "description": "Gets or sets the group type.",
          "enum": [
            "Shutdown",
            "Boot",
            "Failover"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RecoveryPlanGroupType",
            "modelAsString": true
          }
        },
        "replicationProtectedItems": {
          "description": "Gets or sets the list of protected items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPlanProtectedItem"
          }
        },
        "startGroupActions": {
          "description": "Gets or sets the start group actions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPlanAction"
          }
        },
        "endGroupActions": {
          "description": "Gets or sets the end group actions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPlanAction"
          }
        }
      }
    },
    "RecoveryPlanProtectedItem": {
      "description": "Recovery plan protected item.",
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets or sets the ARM Id of the recovery plan protected item.",
          "type": "string"
        },
        "virtualMachineId": {
          "description": "Gets or sets the virtual machine Id.",
          "type": "string"
        }
      }
    },
    "RecoveryPlanAction": {
      "description": "Recovery plan action details.",
      "required": [
        "actionName",
        "failoverTypes",
        "failoverDirections",
        "customDetails"
      ],
      "type": "object",
      "properties": {
        "actionName": {
          "description": "Gets or sets the action name.",
          "type": "string"
        },
        "failoverTypes": {
          "description": "Gets or sets the list of failover types.",
          "type": "array",
          "items": {
            "enum": [
              "ReverseReplicate",
              "Commit",
              "PlannedFailover",
              "UnplannedFailover",
              "DisableProtection",
              "TestFailover",
              "TestFailoverCleanup",
              "Failback",
              "FinalizeFailback",
              "ChangePit",
              "RepairReplication",
              "SwitchProtection",
              "CompleteMigration"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "ReplicationProtectedItemOperation",
              "modelAsString": true
            }
          }
        },
        "failoverDirections": {
          "description": "Gets or sets the list of failover directions.",
          "type": "array",
          "items": {
            "enum": [
              "PrimaryToRecovery",
              "RecoveryToPrimary"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "PossibleOperationsDirections",
              "modelAsString": true
            }
          }
        },
        "customDetails": {
          "$ref": "#/definitions/RecoveryPlanActionDetails",
          "description": "Gets or sets the custom details."
        }
      }
    },
    "RecoveryPlanActionDetails": {
      "description": "Recovery plan action custom details.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for\r\n            possible values).",
          "type": "string",
          "readOnly": true
        },
        "CanWrite": {
          "description": "Gets a value indicating whether this Newtonsoft.Json.JsonConverter can write JSON",
          "type": "boolean",
          "readOnly": true
        },
        "CanRead": {
          "type": "boolean",
          "readOnly": true
        }
      },
      "discriminator": "instanceType"
    },
    "CreateRecoveryPlanInput": {
      "description": "Create recovery plan input class.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CreateRecoveryPlanInputProperties",
          "description": "Gets or sets recovery plan creation properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "CreateRecoveryPlanInputProperties": {
      "description": "Recovery plan creation properties.",
      "required": [
        "primaryFabricId",
        "recoveryFabricId",
        "groups"
      ],
      "type": "object",
      "properties": {
        "primaryFabricId": {
          "description": "Gets or sets the primary fabric Id.",
          "type": "string"
        },
        "recoveryFabricId": {
          "description": "Gets or sets the recovery fabric Id.",
          "type": "string"
        },
        "failoverDeploymentModel": {
          "description": "Gets or sets the failover deployment model.",
          "enum": [
            "NotApplicable",
            "Classic",
            "ResourceManager"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "FailoverDeploymentModel",
            "modelAsString": true
          }
        },
        "groups": {
          "description": "Gets or sets the recovery plan groups.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPlanGroup"
          }
        }
      }
    },
    "UpdateRecoveryPlanInput": {
      "description": "Update recovery plan input class.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateRecoveryPlanInputProperties",
          "description": "Gets or sets recovery plan update properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "UpdateRecoveryPlanInputProperties": {
      "description": "Recovery plan updation properties.",
      "type": "object",
      "properties": {
        "groups": {
          "description": "Gets or sets the recovery plan groups.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPlanGroup"
          }
        }
      }
    },
    "RecoveryPlanPlannedFailoverInput": {
      "description": "Recovery plan planned failover input.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryPlanPlannedFailoverInputProperties",
          "description": "Gets or sets the recovery plan planned failover input properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "RecoveryPlanPlannedFailoverInputProperties": {
      "description": "Recovery plan planned failover input properties.",
      "required": [
        "failoverDirection"
      ],
      "type": "object",
      "properties": {
        "failoverDirection": {
          "description": "Gets or sets the failover direction.",
          "enum": [
            "PrimaryToRecovery",
            "RecoveryToPrimary"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PossibleOperationsDirections",
            "modelAsString": true
          }
        },
        "providerSpecificDetails": {
          "description": "Gets or sets the provider specific properties.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
          }
        }
      }
    },
    "RecoveryPlanProviderSpecificFailoverInput": {
      "description": "Recovery plan provider specific failover input base class.",
      "type": "object",
      "properties": {
        "CanWrite": {
          "description": "Gets a value indicating whether this Newtonsoft.Json.JsonConverter can write JSON",
          "type": "boolean",
          "readOnly": true
        },
        "CanRead": {
          "type": "boolean",
          "readOnly": true
        }
      },
      "discriminator": "instanceType"
    },
    "RecoveryPlanUnplannedFailoverInput": {
      "description": "Recovery plan unplanned failover input.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryPlanUnplannedFailoverInputProperties",
          "description": "Gets or sets the recovery plan unplanned failover input properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "RecoveryPlanUnplannedFailoverInputProperties": {
      "description": "Recovery plan unplanned failover input properties.",
      "required": [
        "failoverDirection",
        "sourceSiteOperations"
      ],
      "type": "object",
      "properties": {
        "failoverDirection": {
          "description": "Gets or sets the failover direction.",
          "enum": [
            "PrimaryToRecovery",
            "RecoveryToPrimary"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PossibleOperationsDirections",
            "modelAsString": true
          }
        },
        "sourceSiteOperations": {
          "description": "Gets or sets a value indicating whether source site operations are required.",
          "enum": [
            "Required",
            "NotRequired"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SourceSiteOperations",
            "modelAsString": true
          }
        },
        "providerSpecificDetails": {
          "description": "Gets or sets the provider specific properties.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
          }
        }
      }
    },
    "RecoveryPlanTestFailoverInput": {
      "description": "Recovery plan test failover input.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryPlanTestFailoverInputProperties",
          "description": "Gets or sets the recovery plan test failover input properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "RecoveryPlanTestFailoverInputProperties": {
      "description": "Recovery plan test failover input properties.",
      "required": [
        "failoverDirection",
        "networkType"
      ],
      "type": "object",
      "properties": {
        "failoverDirection": {
          "description": "Gets or sets the failover direction.",
          "enum": [
            "PrimaryToRecovery",
            "RecoveryToPrimary"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PossibleOperationsDirections",
            "modelAsString": true
          }
        },
        "networkType": {
          "description": "Gets or sets the network type to be used for test failover.",
          "type": "string"
        },
        "networkId": {
          "description": "Gets or sets the Id of the network to be used for test failover.",
          "type": "string"
        },
        "skipTestFailoverCleanup": {
          "description": "Gets or sets a value indicating whether the test failover cleanup is to be skipped.\r\n            ToDo(LShai): Change such that we do not expose this property separately.",
          "type": "boolean"
        },
        "providerSpecificDetails": {
          "description": "Gets or sets the provider specific properties.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
          }
        }
      }
    },
    "RecoveryPlanTestFailoverCleanupInput": {
      "description": "Recovery plan test failover cleanup input.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryPlanTestFailoverCleanupInputProperties",
          "description": "Gets or sets the recovery plan test failover cleanup input properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "RecoveryPlanTestFailoverCleanupInputProperties": {
      "description": "Recovery plan test failover cleanup input properties.",
      "type": "object",
      "properties": {
        "comments": {
          "description": "Gets or sets the test failover cleanup comments.",
          "type": "string"
        }
      }
    },
    "RecoveryPointCollection": {
      "description": "Collection of recovery point details.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the recovery point details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPoint"
          }
        },
        "nextLink": {
          "description": "Gets or sets the value of next link.",
          "type": "string"
        }
      }
    },
    "RecoveryPoint": {
      "description": "Base class representing a recovery point.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryPointProperties",
          "description": "Gets or sets recovery point related data.",
          "x-ms-client-flatten": true
        }
      }
    },
    "RecoveryPointProperties": {
      "description": "Recovery point properties.",
      "type": "object",
      "properties": {
        "recoveryPointTime": {
          "format": "date-time",
          "description": "Gets or sets the recovery point time.",
          "type": "string"
        },
        "recoveryPointType": {
          "description": "Gets or sets the recovery point type: ApplicationConsistent, CrashConsistent.",
          "type": "string"
        }
      }
    },
    "RecoveryServicesProviderCollection": {
      "description": "Collection of providers.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the Servers details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryServicesProvider"
          }
        },
        "nextLink": {
          "description": "Gets or sets the value of next link.",
          "type": "string"
        }
      }
    },
    "RecoveryServicesProvider": {
      "description": "Provider details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryServicesProviderProperties",
          "description": "Gets or sets provider properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "RecoveryServicesProviderProperties": {
      "description": "Recovery services provider properties.",
      "type": "object",
      "properties": {
        "fabricType": {
          "description": "Gets or sets type of the site.",
          "type": "string"
        },
        "friendlyName": {
          "description": "Gets or sets Friendly name of the DRA.",
          "type": "string"
        },
        "providerVersion": {
          "description": "Gets or sets the provider version.",
          "type": "string"
        },
        "serverVersion": {
          "description": "Gets or sets the fabric provider.",
          "type": "string"
        },
        "providerVersionState": {
          "description": "Gets or sets DRA version status.",
          "type": "string"
        },
        "providerVersionExpiryDate": {
          "format": "date-time",
          "description": "Gets or sets Expiry date if the version is deprecated.",
          "type": "string"
        },
        "fabricFriendlyName": {
          "description": "Gets or sets the fabric friendly name.",
          "type": "string"
        },
        "lastHeartBeat": {
          "format": "date-time",
          "description": "Gets or sets Time when last heartbeat was sent by the DRA.",
          "type": "string"
        },
        "connectionStatus": {
          "description": "Gets or sets a value indicating whether DRA is responsive.",
          "type": "string"
        },
        "protectedItemCount": {
          "format": "int32",
          "description": "Gets or sets Number of protected VMs currently managed by the DRA.",
          "type": "integer"
        },
        "allowedScenarios": {
          "description": "Gets or sets the scenarions allowed on this provider.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ReplicationProtectedItemCollection": {
      "description": "Replication protected item collection.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the Replication protected item details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReplicationProtectedItem"
          }
        },
        "nextLink": {
          "description": "Gets or sets the value of next link.",
          "type": "string"
        }
      }
    },
    "ReplicationProtectedItem": {
      "description": "Replication protected item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ReplicationProtectedItemProperties",
          "description": "Gets or sets the custom data.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ReplicationProtectedItemProperties": {
      "description": "Replication protected item custom data details.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "protectedItemType": {
          "description": "Gets or sets the type of protected item type.",
          "type": "string"
        },
        "protectableItemId": {
          "description": "Gets or sets the protected item ARM Id.",
          "type": "string"
        },
        "recoveryServicesProviderId": {
          "description": "Gets or sets the recovery provider ARM Id.",
          "type": "string"
        },
        "primaryFabricFriendlyName": {
          "description": "Gets or sets the friendly name of the primary fabric.",
          "type": "string"
        },
        "recoveryFabricFriendlyName": {
          "description": "Gets or sets the friendly name of recovery fabric.",
          "type": "string"
        },
        "recoveryFabricId": {
          "description": "Gets or sets the Arm Id of recovery fabric.",
          "type": "string"
        },
        "primaryProtectionContainerFriendlyName": {
          "description": "Gets or sets the name of primary protection container friendly name.",
          "type": "string"
        },
        "recoveryProtectionContainerFriendlyName": {
          "description": "Gets or sets the name of recovery container friendly name.",
          "type": "string"
        },
        "protectionState": {
          "description": "Gets or sets the protection status.",
          "type": "string"
        },
        "protectionStateDescription": {
          "description": "Gets or sets the protection state description.",
          "type": "string"
        },
        "activeLocation": {
          "description": "Gets or sets the Current active location of the PE.",
          "type": "string"
        },
        "testFailoverState": {
          "description": "Gets or sets the Test failover state.",
          "type": "string"
        },
        "testFailoverStateDescription": {
          "description": "Gets or sets the Test failover state description.",
          "type": "string"
        },
        "allowedOperations": {
          "description": "Gets or sets the allowed operations on the Replication protected item.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "replicationHealth": {
          "description": "Gets or sets the consolidated protection health for the VM taking any issues with SRS\r\n            as well as all the replication units associated with the VM's replication group into\r\n            account. This is a string representation of the ProtectionHealth enumeration.",
          "type": "string"
        },
        "replicationHealthErrors": {
          "description": "Gets or sets list of replication health errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthError"
          }
        },
        "policyId": {
          "description": "Gets or sets the ID of Policy governing this PE.",
          "type": "string"
        },
        "policyFriendlyName": {
          "description": "Gets or sets the name of Policy governing this PE.",
          "type": "string"
        },
        "lastSuccessfulFailoverTime": {
          "format": "date-time",
          "description": "Gets or sets the Last successful failover time.",
          "type": "string"
        },
        "lastSuccessfulTestFailoverTime": {
          "format": "date-time",
          "description": "Gets or sets the Last successful test failover time.",
          "type": "string"
        },
        "currentScenario": {
          "$ref": "#/definitions/CurrentScenarioDetails",
          "description": "Gets or sets the current scenario."
        },
        "failoverRecoveryPointId": {
          "description": "Gets or sets the recovery point ARM Id to which the Vm was failed over.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings",
          "description": "Gets or sets the Replication provider custom settings."
        }
      }
    },
    "ReplicationProviderSpecificSettings": {
      "description": "Replication provider specific settings.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets the Instance type.",
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "instanceType"
    },
    "EnableProtectionInput": {
      "description": "Enable protection input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EnableProtectionInputProperties",
          "description": "Gets or sets enable protection input properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "EnableProtectionInputProperties": {
      "description": "Enable protection input properties.",
      "type": "object",
      "properties": {
        "policyId": {
          "description": "Gets or sets the Policy Id.",
          "type": "string"
        },
        "protectableItemId": {
          "description": "Gets or sets the protectable item Id.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/EnableProtectionProviderSpecificInput",
          "description": "Gets or sets the ReplicationProviderInput.\r\n            For HyperVReplicaAzure provider, it will be AzureEnableProtectionInput object.\r\n            For San provider, it will be SanEnableProtectionInput object.\r\n            For HyperVReplicaAzure provider, it can be null."
        }
      }
    },
    "EnableProtectionProviderSpecificInput": {
      "description": "Enable protection provider specific input.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets or sets the class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "UpdateReplicationProtectedItemInput": {
      "description": "Update replication protected item input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateReplicationProtectedItemInputProperties",
          "description": "Gets or sets update replication protected item properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "UpdateReplicationProtectedItemInputProperties": {
      "description": "Update protected item input properties.",
      "type": "object",
      "properties": {
        "recoveryAzureVMName": {
          "description": "Gets or sets target azure VM name given by the user.",
          "type": "string"
        },
        "recoveryAzureVMSize": {
          "description": "Gets or sets Target Azure Vm size.",
          "type": "string"
        },
        "selectedRecoveryAzureNetworkId": {
          "description": "Gets or sets target Azure Network Id.",
          "type": "string"
        },
        "enableRDPOnTargetOption": {
          "description": "Gets or sets the selected option to enable RDP\\SSH on target vm after failover.\r\n            String value of {SrsDataContract.EnableRDPOnTargetOption} enum.",
          "type": "string"
        },
        "vmNics": {
          "description": "Gets or sets the list of vm nic details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMNicInputDetails"
          }
        },
        "recoveryCloudServiceId": {
          "description": "Gets or sets the target cloud service ARM Id (for V1).",
          "type": "string"
        },
        "recoveryResourceGroupId": {
          "description": "Gets or sets the target resource group ARM Id (for V2).",
          "type": "string"
        },
        "recoveryAvailabilitySetId": {
          "description": "Gets or sets the target availability set id.",
          "type": "string"
        },
        "licenseType": {
          "description": "Gets or sets LicenseType.",
          "enum": [
            "NotSpecified",
            "NoLicenseType",
            "WindowsServer"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LicenseType",
            "modelAsString": true
          }
        }
      }
    },
    "VMNicInputDetails": {
      "description": "Hyper V VM network input details.",
      "type": "object",
      "properties": {
        "nicId": {
          "description": "Gets or sets the nic Id.",
          "type": "string"
        },
        "recoveryVMSubnetName": {
          "description": "Gets or sets recovery VM subnet name.",
          "type": "string"
        },
        "replicaNicStaticIPAddress": {
          "description": "Gets or sets replica nic static IP address.",
          "type": "string"
        },
        "selectionType": {
          "description": "Gets or sets selection type for failover.",
          "type": "string"
        }
      }
    },
    "DisableProtectionInput": {
      "description": "Disable protection input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DisableProtectionInputProperties",
          "description": "Gets or sets disable protection input properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "DisableProtectionInputProperties": {
      "description": "Disable protection input properties.",
      "type": "object",
      "properties": {
        "disableProtectionReason": {
          "description": "Gets or sets Disable protection reason. It can have values NotSpecified/MigrationComplete.",
          "enum": [
            "NotSpecified",
            "MigrationComplete"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DisableProtectionReason",
            "modelAsString": true
          }
        },
        "replicationProviderInput": {
          "$ref": "#/definitions/DisableProtectionProviderSpecificInput",
          "description": "Gets or sets replication provider specific input."
        }
      }
    },
    "DisableProtectionProviderSpecificInput": {
      "description": "Disable protection provider specific input.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets or sets the class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "PlannedFailoverInput": {
      "description": "Input definition for planned failover.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PlannedFailoverInputProperties",
          "description": "Gets or sets Planned failover input properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "PlannedFailoverInputProperties": {
      "description": "Input definition for planned failover input properties.",
      "type": "object",
      "properties": {
        "failoverDirection": {
          "description": "Gets or sets Failover direction.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/ProviderSpecificFailoverInput",
          "description": "Gets or sets Provider specific settings"
        }
      }
    },
    "ProviderSpecificFailoverInput": {
      "description": "Provider specific failover input.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets or sets the class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "UnplannedFailoverInput": {
      "description": "Input definition for planned failover.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UnplannedFailoverInputProperties",
          "description": "Gets or sets Planned failover input properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "UnplannedFailoverInputProperties": {
      "description": "Input definition for planned failover input properties.",
      "type": "object",
      "properties": {
        "failoverDirection": {
          "description": "Gets or sets Failover direction.",
          "type": "string"
        },
        "sourceSiteOperations": {
          "description": "Gets or sets source site operations status",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/ProviderSpecificFailoverInput",
          "description": "Gets or sets Provider specific settings"
        }
      }
    },
    "TestFailoverInput": {
      "description": "Input definition for planned failover.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TestFailoverInputProperties",
          "description": "Gets or sets Planned failover input properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "TestFailoverInputProperties": {
      "description": "Input definition for planned failover input properties.",
      "type": "object",
      "properties": {
        "failoverDirection": {
          "description": "Gets or sets Failover direction.",
          "type": "string"
        },
        "networkType": {
          "description": "Gets or sets network type to be used for test failover.",
          "type": "string"
        },
        "networkId": {
          "description": "Gets or sets the id of the network to be used for test failover",
          "type": "string"
        },
        "skipTestFailoverCleanup": {
          "description": "Gets or sets a value indicating whether the test failover cleanup is to be skipped.\r\n            ToDo(LShai): Change such that we do not expose this property separately.",
          "type": "boolean"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/ProviderSpecificFailoverInput",
          "description": "Gets or sets Provider specific settings"
        }
      }
    },
    "TestFailoverCleanupInput": {
      "description": "Input definition for test failover cleanup.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TestFailoverCleanupInputProperties",
          "description": "Gets or sets test failover cleanup input properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "TestFailoverCleanupInputProperties": {
      "description": "Input definition for test failover cleanup input properties.",
      "type": "object",
      "properties": {
        "comments": {
          "description": "Gets or sets test failover cleanup comments.",
          "type": "string"
        }
      }
    },
    "ReverseReplicationInput": {
      "description": "Reverse replication input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ReverseReplicationInputProperties",
          "description": "Gets or sets Reverse replication properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ReverseReplicationInputProperties": {
      "description": "Reverse replication input properties.",
      "type": "object",
      "properties": {
        "failoverDirection": {
          "description": "Gets or sets Failover direction.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/ReverseReplicationProviderSpecificInput",
          "description": "Gets or sets Provider specific reverse replication input."
        }
      }
    },
    "ReverseReplicationProviderSpecificInput": {
      "description": "Provider specific reverse replication input.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets or sets the class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "UpdateMobilityServiceRequest": {
      "description": "Request to update the mobility service on a protected item.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateMobilityServiceRequestProperties",
          "description": "Gets or sets the properties of the update mobility service request.",
          "x-ms-client-flatten": true
        }
      }
    },
    "UpdateMobilityServiceRequestProperties": {
      "description": "The properties of an update mobility service request.",
      "type": "object",
      "properties": {
        "runAsAccountId": {
          "description": "Gets or sets the CS run as account Id.",
          "type": "string"
        }
      }
    },
    "ApplyRecoveryPointInput": {
      "description": "Input to apply recovery point.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApplyRecoveryPointInputProperties",
          "description": "Gets or sets the input properties to apply recovery point.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ApplyRecoveryPointInputProperties": {
      "description": "Input properties to apply recovery point.",
      "type": "object",
      "properties": {
        "recoveryPointId": {
          "description": "Gets or sets the recovery point Id.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/ApplyRecoveryPointProviderSpecificInput",
          "description": "Gets or sets Provider specific input for applying recovery point."
        }
      }
    },
    "ApplyRecoveryPointProviderSpecificInput": {
      "description": "Provider specific input for apply recovery point.",
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Gets or sets the class type.",
          "type": "string"
        }
      },
      "discriminator": "instanceType"
    },
    "StorageClassificationCollection": {
      "description": "Collection of storage details.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the storage details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageClassification"
          }
        },
        "nextLink": {
          "description": "Gets or sets the value of next link.",
          "type": "string"
        }
      }
    },
    "StorageClassification": {
      "description": "Storage object definition.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageClassificationProperties",
          "description": "Gets or sets proprties of the storage object.",
          "x-ms-client-flatten": true
        }
      }
    },
    "StorageClassificationProperties": {
      "description": "Storage object properties.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "Gets or sets friendly name of the Storage classification.",
          "type": "string"
        }
      }
    },
    "StorageClassificationMappingCollection": {
      "description": "Collection of storage mapping details.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the storage details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageClassificationMapping"
          }
        },
        "nextLink": {
          "description": "Gets or sets the value of next link.",
          "type": "string"
        }
      }
    },
    "StorageClassificationMapping": {
      "description": "Storage mapping object.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageClassificationMappingProperties",
          "description": "Gets or sets proprties of the storage mappping object.",
          "x-ms-client-flatten": true
        }
      }
    },
    "StorageClassificationMappingProperties": {
      "description": "Storage mapping properties.",
      "type": "object",
      "properties": {
        "targetStorageClassificationId": {
          "description": "Gets or sets target storage object Id.",
          "type": "string"
        }
      }
    },
    "StorageClassificationMappingInput": {
      "description": "Storage mapping input.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageMappingInputProperties",
          "description": "Gets or sets storage mapping input properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "StorageMappingInputProperties": {
      "description": "Storage mapping input properties.",
      "type": "object",
      "properties": {
        "targetStorageClassificationId": {
          "description": "Gets or sets the ID of the storage object.",
          "type": "string"
        }
      }
    },
    "VCenterCollection": {
      "description": "Collection of vCenter details.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets the vCenter details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VCenter"
          }
        },
        "nextLink": {
          "description": "Gets or sets the value of next link.",
          "type": "string"
        }
      }
    },
    "VCenter": {
      "description": "vCenter definition.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/VCenterProperties",
          "description": "Gets or sets vCenter related data.",
          "x-ms-client-flatten": true
        }
      }
    },
    "VCenterProperties": {
      "description": "vCenter properties.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "Gets or sets Friendly name of the vCenter.",
          "type": "string"
        },
        "internalId": {
          "description": "Gets or sets vCenter internal ID.",
          "type": "string"
        },
        "lastHeartbeat": {
          "format": "date-time",
          "description": "Gets or sets the time when the last heartbeat was reveived by vCenter.",
          "type": "string"
        },
        "discoveryStatus": {
          "description": "Gets or sets the VCenter discovery status.",
          "type": "string"
        },
        "processServerId": {
          "description": "Gets or sets the process server Id.",
          "type": "string"
        },
        "ipAddress": {
          "description": "Gets or sets the IP address of the vCenter.",
          "type": "string"
        },
        "infrastructureId": {
          "description": "Gets or sets the infrastructure Id of vCenter.",
          "type": "string"
        },
        "port": {
          "description": "Gets or sets the port number for discovery.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "Gets or sets the account Id which has privileges to discover the vCenter.",
          "type": "string"
        },
        "fabricArmResourceName": {
          "description": "Gets or sets the ARM resource name of the fabric containing this VCenter.",
          "type": "string"
        }
      }
    },
    "AddVCenterRequest": {
      "description": "Input required to add vCenter.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AddVCenterRequestProperties",
          "description": "Gets or sets the properties of an add vCenter request.",
          "x-ms-client-flatten": true
        }
      }
    },
    "AddVCenterRequestProperties": {
      "description": "The properties of an add vCenter request.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "Gets or sets the friendly name of the vCenter.",
          "type": "string"
        },
        "ipAddress": {
          "description": "Gets or sets the IP address of the vCenter to be discovered.",
          "type": "string"
        },
        "processServerId": {
          "description": "Gets or sets the process server Id from where the discovery is orchestrated.",
          "type": "string"
        },
        "port": {
          "description": "Gets or sets the port number for discovery.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "Gets or sets the account Id which has privileges to discover the vCenter.",
          "type": "string"
        }
      }
    },
    "UpdateVCenterRequest": {
      "description": "Input required to update vCenter.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateVCenterRequestProperties",
          "description": "Gets or sets the update VCenter Request Properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "UpdateVCenterRequestProperties": {
      "description": "The properties of an update vCenter request.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "Gets or sets the friendly name of the vCenter.",
          "type": "string"
        },
        "ipAddress": {
          "description": "Gets or sets the IP address of the vCenter to be discovered.",
          "type": "string"
        },
        "processServerId": {
          "description": "Gets or sets the process server Id from where the update can be orchestrated.",
          "type": "string"
        },
        "port": {
          "description": "Gets or sets the port number for discovery.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "Gets or sets the CS account Id which has priviliges to update the vCenter.",
          "type": "string"
        }
      }
    },
    "HyperVReplicaBaseEventDetails": {
      "description": "Abstract model class for event details of a HyperVReplica E2E event.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventProviderSpecificDetails"
        }
      ],
      "properties": {
        "containerName": {
          "description": "Gets or sets the container friendly name.",
          "type": "string"
        },
        "fabricName": {
          "description": "Gets or sets the fabric friendly name.",
          "type": "string"
        },
        "remoteContainerName": {
          "description": "Gets or sets the remote container name.",
          "type": "string"
        },
        "remoteFabricName": {
          "description": "Gets or sets the remote fabric name.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaBaseEventDetails"
    },
    "HyperVReplica2012EventDetails": {
      "description": "Model class for event details of a HyperVReplica E2E event.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventProviderSpecificDetails"
        }
      ],
      "properties": {
        "containerName": {
          "description": "Gets or sets the container friendly name.",
          "type": "string"
        },
        "fabricName": {
          "description": "Gets or sets the fabric friendly name.",
          "type": "string"
        },
        "remoteContainerName": {
          "description": "Gets or sets the remote container name.",
          "type": "string"
        },
        "remoteFabricName": {
          "description": "Gets or sets the remote fabric name.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplica2012EventDetails"
    },
    "HyperVReplica2012R2EventDetails": {
      "description": "Model class for event details of a HyperVReplica blue E2E event.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventProviderSpecificDetails"
        }
      ],
      "properties": {
        "containerName": {
          "description": "Gets or sets the container friendly name.",
          "type": "string"
        },
        "fabricName": {
          "description": "Gets or sets the fabric friendly name.",
          "type": "string"
        },
        "remoteContainerName": {
          "description": "Gets or sets the remote container name.",
          "type": "string"
        },
        "remoteFabricName": {
          "description": "Gets or sets the remote fabric name.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplica2012R2EventDetails"
    },
    "HyperVReplicaAzureEventDetails": {
      "description": "Model class for event details of a HyperVReplica E2A event.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventProviderSpecificDetails"
        }
      ],
      "properties": {
        "containerName": {
          "description": "Gets or sets the container friendly name.",
          "type": "string"
        },
        "fabricName": {
          "description": "Gets or sets the fabric friendly name.",
          "type": "string"
        },
        "remoteContainerName": {
          "description": "Gets or sets the remote container name.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaAzureEventDetails"
    },
    "A2AEventDetails": {
      "description": "Model class for event details of a A2A event.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventProviderSpecificDetails"
        }
      ],
      "properties": {
        "protectedItemName": {
          "description": "Gets or sets the protected item arm name.",
          "type": "string"
        },
        "fabricObjectId": {
          "description": "Gets or sets the azure vm arm id.",
          "type": "string"
        },
        "fabricName": {
          "description": "Gets or sets fabric arm name.",
          "type": "string"
        },
        "fabricLocation": {
          "description": "Gets or sets the fabric location.",
          "type": "string"
        },
        "remoteFabricName": {
          "description": "Gets or sets remote fabric arm name.",
          "type": "string"
        },
        "remoteFabricLocation": {
          "description": "Gets or sets remote fabric location.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "A2AEventDetails"
    },
    "InMageAzureV2EventDetails": {
      "description": "Model class for event details of a VMwareAzureV2 event.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventProviderSpecificDetails"
        }
      ],
      "properties": {
        "eventType": {
          "description": "Gets or sets InMage Event type.\r\n            Takes one of the values of {InMageDataContract.InMageMonitoringEventType}.",
          "type": "string"
        },
        "category": {
          "description": "Gets or sets InMage Event Category.",
          "type": "string"
        },
        "component": {
          "description": "Gets or sets InMage Event Component.",
          "type": "string"
        },
        "correctiveAction": {
          "description": "Gets or sets Corrective Action string for the event.",
          "type": "string"
        },
        "details": {
          "description": "Gets or sets InMage Event Details.",
          "type": "string"
        },
        "summary": {
          "description": "Gets or sets InMage Event Summary.",
          "type": "string"
        },
        "siteName": {
          "description": "Gets or sets VMware Site name.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "InMageAzureV2EventDetails"
    },
    "JobStatusEventDetails": {
      "description": "Model class for event details of a job status event.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventSpecificDetails"
        }
      ],
      "properties": {
        "jobId": {
          "description": "Gets or sets job arm id for the event.",
          "type": "string"
        },
        "jobFriendlyName": {
          "description": "Gets or sets JobName for the Event.",
          "type": "string"
        },
        "jobStatus": {
          "description": "Gets or sets JobStatus for the  Event.",
          "type": "string"
        },
        "affectedObjectType": {
          "description": "Gets or sets AffectedObjectType for the event.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "JobStatusEventDetails"
    },
    "HyperVVirtualMachineDetails": {
      "description": "Hyper V replica provider specific settings",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ConfigurationSettings"
        }
      ],
      "properties": {
        "sourceItemId": {
          "description": "Gets or sets the source id of the object.",
          "type": "string"
        },
        "generation": {
          "description": "Gets or sets the id of the object in fabric.",
          "type": "string"
        },
        "osDetails": {
          "$ref": "#/definitions/OSDetails",
          "description": "Gets or sets the Last replication time."
        },
        "diskDetails": {
          "description": "Gets or sets the Last successful failover time.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiskDetails"
          }
        }
      },
      "x-ms-discriminator-value": "HyperVVirtualMachineDetails"
    },
    "OSDetails": {
      "description": "Disk Details.",
      "type": "object",
      "properties": {
        "osType": {
          "description": "Gets or sets VM Disk details.",
          "type": "string"
        },
        "productType": {
          "description": "Gets or sets ProductType.",
          "type": "string"
        },
        "osEdition": {
          "description": "Gets or sets the OSEdition.",
          "type": "string"
        },
        "oSVersion": {
          "description": "Gets or sets the OS Version.",
          "type": "string"
        },
        "oSMajorVersion": {
          "description": "Gets or sets the OS Major Version.",
          "type": "string"
        },
        "oSMinorVersion": {
          "description": "Gets or sets the OS Minor Version.",
          "type": "string"
        }
      }
    },
    "DiskDetails": {
      "description": "Onprem disk details data.",
      "type": "object",
      "properties": {
        "maxSizeMB": {
          "format": "int64",
          "description": "Gets or sets the hard disk max size in MB.",
          "type": "integer"
        },
        "vhdType": {
          "description": "Gets or sets the type of the volume.",
          "type": "string"
        },
        "vhdId": {
          "description": "Gets or sets the VHD Id.",
          "type": "string"
        },
        "vhdName": {
          "description": "Gets or sets the VHD name.",
          "type": "string"
        }
      }
    },
    "VMwareVirtualMachineDetails": {
      "description": "VMware provider specific settings",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ConfigurationSettings"
        }
      ],
      "properties": {
        "agentGeneratedId": {
          "description": "Gets or sets the ID generated by the InMage agent after it gets installed on guest. This is the ID\r\n            to be used during InMage CreateProtection.",
          "type": "string"
        },
        "agentInstalled": {
          "description": "Gets or sets the value indicating if InMage scout agent is installed on guest.",
          "type": "string"
        },
        "osType": {
          "description": "Gets or sets the OsType installed on VM.",
          "type": "string"
        },
        "agentVersion": {
          "description": "Gets or sets the agent version.",
          "type": "string"
        },
        "ipAddress": {
          "description": "Gets or sets the IP address.",
          "type": "string"
        },
        "poweredOn": {
          "description": "Gets or sets the value indicating whether VM is powered on.",
          "type": "string"
        },
        "vCenterInfrastructureId": {
          "description": "Gets or sets the VCenter infrastructure Id.",
          "type": "string"
        },
        "discoveryType": {
          "description": "Gets or sets a value inidicating the discovery type of the machine.\r\n            Value can be vCenter or physical.",
          "type": "string"
        },
        "diskDetails": {
          "description": "Gets or sets the disk details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InMageDiskDetails"
          }
        }
      },
      "x-ms-discriminator-value": "VMwareVirtualMachineDetails"
    },
    "InMageDiskDetails": {
      "description": "VMware/Physical specific Disk Details",
      "type": "object",
      "properties": {
        "diskId": {
          "description": "Gets or sets the disk Id.",
          "type": "string"
        },
        "diskName": {
          "description": "Gets or sets the disk name.",
          "type": "string"
        },
        "diskSizeInMB": {
          "description": "Gets or sets the disk size in MB.",
          "type": "string"
        },
        "diskType": {
          "description": "Gets or sets whether disk is system disk or data disk.",
          "type": "string"
        },
        "diskConfiguration": {
          "description": "Gets or sets whether disk is dynamic disk or basic disk.",
          "type": "string"
        },
        "volumeList": {
          "description": "Gets or sets volumes of the disk.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiskVolumeDetails"
          }
        }
      }
    },
    "DiskVolumeDetails": {
      "description": "Volume details.",
      "type": "object",
      "properties": {
        "label": {
          "description": "Gets or sets the volume label.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the volume name.",
          "type": "string"
        }
      }
    },
    "ReplicationGroupDetails": {
      "description": "Replication group details. This will be used in case of San and Wvr.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ConfigurationSettings"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "ReplicationGroupDetails"
    },
    "HyperVReplicaBaseReplicationDetails": {
      "description": "Hyper V replica provider specific settings base class.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings"
        }
      ],
      "properties": {
        "lastReplicatedTime": {
          "format": "date-time",
          "description": "Gets or sets the Last replication time.",
          "type": "string"
        },
        "vmNics": {
          "description": "Gets or sets the PE Network details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMNicDetails"
          }
        },
        "vmId": {
          "description": "Gets or sets the virtual machine Id.",
          "type": "string"
        },
        "vmProtectionState": {
          "description": "Gets or sets the protection state for the vm.",
          "type": "string"
        },
        "vmProtectionStateDescription": {
          "description": "Gets or sets the protection state description for the vm.",
          "type": "string"
        },
        "initialReplicationDetails": {
          "$ref": "#/definitions/InitialReplicationDetails",
          "description": "Gets or sets initial replication details."
        },
        "vMDiskDetails": {
          "description": "Gets or sets VM disk details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiskDetails"
          }
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaBaseReplicationDetails"
    },
    "VMNicDetails": {
      "description": "Hyper V VM network details.",
      "type": "object",
      "properties": {
        "nicId": {
          "description": "Gets or sets the nic Id.",
          "type": "string"
        },
        "vMSubnetName": {
          "description": "Gets or sets VM subnet name.",
          "type": "string"
        },
        "vMNetworkName": {
          "description": "Gets or sets VM network name.",
          "type": "string"
        },
        "recoveryVMNetworkId": {
          "description": "Gets or sets recovery VM network Id.",
          "type": "string"
        },
        "recoveryVMSubnetName": {
          "description": "Gets or sets recovery VM subnet name.",
          "type": "string"
        },
        "ipAddressType": {
          "description": "Gets or sets ip address type.",
          "type": "string"
        },
        "replicaNicStaticIPAddress": {
          "description": "Gets or sets replica nic static IP address.",
          "type": "string"
        },
        "selectionType": {
          "description": "Gets or sets selection type for failover.",
          "type": "string"
        }
      }
    },
    "InitialReplicationDetails": {
      "description": "Initial replication details.",
      "type": "object",
      "properties": {
        "initialReplicationType": {
          "description": "Gets or sets initial replication type.",
          "type": "string"
        },
        "initialReplicationProgressPercentage": {
          "description": "Gets or sets the initial replication progress percentage.",
          "type": "string"
        }
      }
    },
    "HyperVReplicaReplicationDetails": {
      "description": "HyperV replica 2012 replication details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings"
        }
      ],
      "properties": {
        "lastReplicatedTime": {
          "format": "date-time",
          "description": "Gets or sets the Last replication time.",
          "type": "string"
        },
        "vmNics": {
          "description": "Gets or sets the PE Network details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMNicDetails"
          }
        },
        "vmId": {
          "description": "Gets or sets the virtual machine Id.",
          "type": "string"
        },
        "vmProtectionState": {
          "description": "Gets or sets the protection state for the vm.",
          "type": "string"
        },
        "vmProtectionStateDescription": {
          "description": "Gets or sets the protection state description for the vm.",
          "type": "string"
        },
        "initialReplicationDetails": {
          "$ref": "#/definitions/InitialReplicationDetails",
          "description": "Gets or sets initial replication details."
        },
        "vMDiskDetails": {
          "description": "Gets or sets VM disk details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiskDetails"
          }
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaReplicationDetails"
    },
    "HyperVReplicaBlueReplicationDetails": {
      "description": "HyperV replica 2012 R2 (Blue) replication details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings"
        }
      ],
      "properties": {
        "lastReplicatedTime": {
          "format": "date-time",
          "description": "Gets or sets the Last replication time.",
          "type": "string"
        },
        "vmNics": {
          "description": "Gets or sets the PE Network details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMNicDetails"
          }
        },
        "vmId": {
          "description": "Gets or sets the virtual machine Id.",
          "type": "string"
        },
        "vmProtectionState": {
          "description": "Gets or sets the protection state for the vm.",
          "type": "string"
        },
        "vmProtectionStateDescription": {
          "description": "Gets or sets the protection state description for the vm.",
          "type": "string"
        },
        "initialReplicationDetails": {
          "$ref": "#/definitions/InitialReplicationDetails",
          "description": "Gets or sets initial replication details."
        },
        "vMDiskDetails": {
          "description": "Gets or sets VM disk details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiskDetails"
          }
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaBlueReplicationDetails"
    },
    "HyperVReplicaAzureReplicationDetails": {
      "description": "Hyper V Replica Azure provider specific settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings"
        }
      ],
      "properties": {
        "azureVMDiskDetails": {
          "description": "Gets or sets Azure VM Disk details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureVmDiskDetails"
          }
        },
        "recoveryAzureVMName": {
          "description": "Gets or sets Recovery Azure given name.",
          "type": "string"
        },
        "recoveryAzureVMSize": {
          "description": "Gets or sets the Recovery Azure VM size.",
          "type": "string"
        },
        "recoveryAzureStorageAccount": {
          "description": "Gets or sets the recovery Azure storage account.",
          "type": "string"
        },
        "lastReplicatedTime": {
          "format": "date-time",
          "description": "Gets or sets the Last replication time.",
          "type": "string"
        },
        "vmId": {
          "description": "Gets or sets the virtual machine Id.",
          "type": "string"
        },
        "vmProtectionState": {
          "description": "Gets or sets the protection state for the vm.",
          "type": "string"
        },
        "vmProtectionStateDescription": {
          "description": "Gets or sets the protection state description for the vm.",
          "type": "string"
        },
        "initialReplicationDetails": {
          "$ref": "#/definitions/InitialReplicationDetails",
          "description": "Gets or sets initial replication details."
        },
        "vmNics": {
          "description": "Gets or sets the PE Network details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMNicDetails"
          }
        },
        "selectedRecoveryAzureNetworkId": {
          "description": "Gets or sets the selected recovery azure network Id.",
          "type": "string"
        },
        "encryption": {
          "description": "Gets or sets the encryption info.",
          "type": "string"
        },
        "oSDetails": {
          "$ref": "#/definitions/OSDetails",
          "description": "Gets or sets the operating system info."
        },
        "sourceVmRAMSizeInMB": {
          "format": "int32",
          "description": "Gets or sets the RAM size of the VM on the primary side.",
          "type": "integer"
        },
        "sourceVmCPUCount": {
          "format": "int32",
          "description": "Gets or sets the CPU count of the VM on the primary side.",
          "type": "integer"
        },
        "enableRDPOnTargetOption": {
          "description": "Gets or sets the selected option to enable RDP\\SSH on target vm after failover.\r\n            String value of {SrsDataContract.EnableRDPOnTargetOption} enum.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaAzureReplicationDetails"
    },
    "AzureVmDiskDetails": {
      "description": "Disk details for E2A provider.",
      "type": "object",
      "properties": {
        "vhdType": {
          "description": "Gets or sets VHD type.",
          "type": "string"
        },
        "vhdId": {
          "description": "Gets or sets the VHD id.",
          "type": "string"
        },
        "vhdName": {
          "description": "Gets or sets VHD name.",
          "type": "string"
        },
        "maxSizeMB": {
          "description": "Gets or sets max side in MB.",
          "type": "string"
        },
        "targetDiskLocation": {
          "description": "Gets or sets blob uri of the Azure disk.",
          "type": "string"
        },
        "targetDiskName": {
          "description": "Gets or sets the target Azure disk name.",
          "type": "string"
        },
        "lunId": {
          "description": "Gets or sets Ordinal\\LunId of the disk for the Azure VM.",
          "type": "string"
        }
      }
    },
    "InMageAzureV2ReplicationDetails": {
      "description": "InMageAzureV2 provider specific settings",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings"
        }
      ],
      "properties": {
        "infrastructureVmId": {
          "description": "Gets or sets the infrastructure VM Id.",
          "type": "string"
        },
        "vCenterInfrastructureId": {
          "description": "Gets or sets the vCenter infrastructure Id.",
          "type": "string"
        },
        "protectionStage": {
          "description": "Gets or sets the protection stage.",
          "type": "string"
        },
        "vmId": {
          "description": "Gets or sets the virtual machine Id.",
          "type": "string"
        },
        "vmProtectionState": {
          "description": "Gets or sets the protection state for the vm.",
          "type": "string"
        },
        "vmProtectionStateDescription": {
          "description": "Gets or sets the protection state description for the vm.",
          "type": "string"
        },
        "resyncProgressPercentage": {
          "format": "int32",
          "description": "Gets or sets the resync progress percentage.",
          "type": "integer"
        },
        "rpoInSeconds": {
          "format": "int64",
          "description": "Gets or sets the RPO in seconds.",
          "type": "integer"
        },
        "compressedDataRateInMB": {
          "format": "double",
          "description": "Gets or sets the compressed data change rate in MB.",
          "type": "number"
        },
        "uncompressedDataRateInMB": {
          "format": "double",
          "description": "Gets or sets the uncompressed data change rate in MB.",
          "type": "number"
        },
        "ipAddress": {
          "description": "Gets or sets the source IP address.",
          "type": "string"
        },
        "agentVersion": {
          "description": "Gets or sets the agent version.",
          "type": "string"
        },
        "isAgentUpdateRequired": {
          "description": "Gets or sets a value indicating whether installed agent needs to be updated.",
          "type": "string"
        },
        "isRebootAfterUpdateRequired": {
          "description": "Gets or sets a value indicating whether the source server requires a restart after\r\n            update.",
          "type": "string"
        },
        "lastHeartbeat": {
          "format": "date-time",
          "description": "Gets or sets the last heartbeat received from the source server.",
          "type": "string"
        },
        "processServerId": {
          "description": "Gets or sets the process server Id.",
          "type": "string"
        },
        "multiVmGroupId": {
          "description": "Gets or sets the multi vm group Id.",
          "type": "string"
        },
        "multiVmGroupName": {
          "description": "Gets or sets the multi vm group name.",
          "type": "string"
        },
        "protectedDisks": {
          "description": "Gets or sets the list of protected disks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InMageAzureV2ProtectedDiskDetails"
          }
        },
        "diskResized": {
          "description": "Gets or sets a value indicating whether any disk is resized for this VM.",
          "type": "string"
        },
        "masterTargetId": {
          "description": "Gets or sets the master target Id.",
          "type": "string"
        },
        "sourceVmCPUCount": {
          "format": "int32",
          "description": "Gets or sets the CPU count of the VM on the primary side.",
          "type": "integer"
        },
        "sourceVmRAMSizeInMB": {
          "format": "int32",
          "description": "Gets or sets the RAM size of the VM on the primary side.",
          "type": "integer"
        },
        "osType": {
          "description": "Gets or sets the type of the OS on the VM.",
          "type": "string"
        },
        "vhdName": {
          "description": "Gets or sets the OS disk VHD name.",
          "type": "string"
        },
        "osDiskId": {
          "description": "Gets or sets the id of the disk containing the OS.",
          "type": "string"
        },
        "azureVMDiskDetails": {
          "description": "Gets or sets Azure VM Disk details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureVmDiskDetails"
          }
        },
        "recoveryAzureVMName": {
          "description": "Gets or sets Recovery Azure given name.",
          "type": "string"
        },
        "recoveryAzureVMSize": {
          "description": "Gets or sets the Recovery Azure VM size.",
          "type": "string"
        },
        "recoveryAzureStorageAccount": {
          "description": "Gets or sets the recovery Azure storage account.",
          "type": "string"
        },
        "recoveryAzureLogStorageAccountId": {
          "description": "Gets or sets the ARM id of the log storage acount used for replication.\r\n            This will be set to null if no log storage account was provided during enable\r\n            protection.",
          "type": "string"
        },
        "vmNics": {
          "description": "Gets or sets the PE Network details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMNicDetails"
          }
        },
        "selectedRecoveryAzureNetworkId": {
          "description": "Gets or sets the selected recovery azure network Id.",
          "type": "string"
        },
        "discoveryType": {
          "description": "Gets or sets a value inidicating the discovery type of the machine.\r\n            Value can be vCenter or physical.",
          "type": "string"
        },
        "enableRDPOnTargetOption": {
          "description": "Gets or sets the selected option to enable RDP\\SSH on target vm after failover.\r\n            String value of {SrsDataContract.EnableRDPOnTargetOption} enum.",
          "type": "string"
        },
        "datastores": {
          "description": "Gets or sets the datastores of the on-premise machine.\r\n            Value can be list of strings that contain datastore names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targetVmId": {
          "description": "Gets or sets the ARM Id of the target Azure VM.\r\n            This value will be null until the VM is failed over.\r\n            Only after failure it will be populated with the ARM Id of the Azure VM.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "InMageAzureV2ReplicationDetails"
    },
    "InMageAzureV2ProtectedDiskDetails": {
      "description": "InMageAzureV2 protected disk details.",
      "type": "object",
      "properties": {
        "diskId": {
          "description": "Gets or sets the disk id.",
          "type": "string"
        },
        "diskName": {
          "description": "Gets or sets the disk name.",
          "type": "string"
        },
        "protectionStage": {
          "description": "Gets or sets the protection stage.",
          "type": "string"
        },
        "healthErrorCode": {
          "description": "Gets or sets the health error code for the disk.",
          "type": "string"
        },
        "rpoInSeconds": {
          "format": "int64",
          "description": "Gets or sets the RPO in seconds.",
          "type": "integer"
        },
        "resyncRequired": {
          "description": "Gets or sets a value indicating whether resync is required for this disk.",
          "type": "string"
        },
        "resyncProgressPercentage": {
          "format": "int32",
          "description": "Gets or sets the resync progress percentage.",
          "type": "integer"
        },
        "resyncDurationInSeconds": {
          "format": "int64",
          "description": "Gets or sets the resync duration in seconds.",
          "type": "integer"
        },
        "diskCapacityInBytes": {
          "format": "int64",
          "description": "Gets or sets the disk capacity in bytes.",
          "type": "integer"
        },
        "fileSystemCapacityInBytes": {
          "format": "int64",
          "description": "Gets or sets the disk file system capacity in bytes.",
          "type": "integer"
        },
        "sourceDataInMegaBytes": {
          "format": "double",
          "description": "Gets or sets the source data transit in MB.",
          "type": "number"
        },
        "psDataInMegaBytes": {
          "format": "double",
          "description": "Gets or sets the PS data transit in MB.",
          "type": "number"
        },
        "targetDataInMegaBytes": {
          "format": "double",
          "description": "Gets or sets the target data transit in MB.",
          "type": "number"
        },
        "diskResized": {
          "description": "Gets or sets a value indicating whether disk is resized.",
          "type": "string"
        }
      }
    },
    "InMageReplicationDetails": {
      "description": "InMage provider specific settings",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings"
        }
      ],
      "properties": {
        "activeSiteType": {
          "description": "Gets or sets the active location of the VM. If the VM is being protected\r\n            from Azure, this field will take values from { Azure, OnPrem }. If the VM\r\n            is being protected between two data-centers, this field will be OnPrem always.",
          "type": "string"
        },
        "sourceVmCPUCount": {
          "format": "int32",
          "description": "Gets or sets the CPU count of the VM on the primary side.",
          "type": "integer"
        },
        "sourceVmRAMSizeInMB": {
          "format": "int32",
          "description": "Gets or sets the RAM size of the VM on the primary side.",
          "type": "integer"
        },
        "osDetails": {
          "$ref": "#/definitions/OSDiskDetails",
          "description": "Gets or sets the OS details."
        },
        "protectionStage": {
          "description": "Gets or sets the protection stage.",
          "type": "string"
        },
        "vmId": {
          "description": "Gets or sets the virtual machine Id.",
          "type": "string"
        },
        "vmProtectionState": {
          "description": "Gets or sets the protection state for the vm.",
          "type": "string"
        },
        "vmProtectionStateDescription": {
          "description": "Gets or sets the protection state description for the vm.",
          "type": "string"
        },
        "resyncDetails": {
          "$ref": "#/definitions/InitialReplicationDetails",
          "description": "Gets or sets the resync details of the machine"
        },
        "retentionWindowStart": {
          "format": "date-time",
          "description": "Gets or sets the retention window start time.",
          "type": "string"
        },
        "retentionWindowEnd": {
          "format": "date-time",
          "description": "Gets or sets the retention window end time.",
          "type": "string"
        },
        "compressedDataRateInMB": {
          "format": "double",
          "description": "Gets or sets the compressed data change rate in MB.",
          "type": "number"
        },
        "uncompressedDataRateInMB": {
          "format": "double",
          "description": "Gets or sets the uncompressed data change rate in MB.",
          "type": "number"
        },
        "rpoInSeconds": {
          "format": "int64",
          "description": "Gets or sets the RPO in seconds.",
          "type": "integer"
        },
        "protectedDisks": {
          "description": "Gets or sets the list of protected disks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InMageProtectedDiskDetails"
          }
        },
        "ipAddress": {
          "description": "Gets or sets the source IP address.",
          "type": "string"
        },
        "lastHeartbeat": {
          "format": "date-time",
          "description": "Gets or sets the last heartbeat received from the source server.",
          "type": "string"
        },
        "processServerId": {
          "description": "Gets or sets the process server Id.",
          "type": "string"
        },
        "masterTargetId": {
          "description": "Gets or sets the master target Id.",
          "type": "string"
        },
        "consistencyPoints": {
          "description": "Gets or sets the collection of Consistency points.",
          "type": "object",
          "additionalProperties": {
            "format": "date-time",
            "type": "string"
          }
        },
        "diskResized": {
          "description": "Gets or sets a value indicating whether any disk is resized for this VM.",
          "type": "string"
        },
        "rebootAfterUpdateStatus": {
          "description": "Gets or sets a value indicating whether the source server requires a restart after\r\n            update.",
          "type": "string"
        },
        "multiVmGroupId": {
          "description": "Gets or sets the multi vm group Id, if any.",
          "type": "string"
        },
        "multiVmGroupName": {
          "description": "Gets or sets the multi vm group name, if any.",
          "type": "string"
        },
        "agentDetails": {
          "$ref": "#/definitions/InMageAgentDetails",
          "description": "Gets or sets the agent details."
        },
        "vCenterInfrastructureId": {
          "description": "Gets or sets the vCenter infrastructure Id.",
          "type": "string"
        },
        "infrastructureVmId": {
          "description": "Gets or sets the infrastructure VM Id.",
          "type": "string"
        },
        "vmNics": {
          "description": "Gets or sets the PE Network details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMNicDetails"
          }
        },
        "discoveryType": {
          "description": "Gets or sets a value inidicating the discovery type of the machine.",
          "type": "string"
        },
        "azureStorageAccountId": {
          "description": "Gets or sets a value indicating the underlying Azure storage account. If\r\n            the VM is not running in Azure, this value shall be set to null.",
          "type": "string"
        },
        "datastores": {
          "description": "Gets or sets the datastores of the on-premise machine\r\n            Value can be list of strings that contain datastore names",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "InMageReplicationDetails"
    },
    "OSDiskDetails": {
      "description": "Details of the OS Disk.",
      "type": "object",
      "properties": {
        "osVhdId": {
          "description": "Gets or sets the id of the disk containing the OS.",
          "type": "string"
        },
        "osType": {
          "description": "Gets or sets the type of the OS on the VM.",
          "type": "string"
        },
        "vhdName": {
          "description": "Gets or sets the OS disk VHD name.",
          "type": "string"
        }
      }
    },
    "InMageProtectedDiskDetails": {
      "description": "InMage protected disk details.",
      "type": "object",
      "properties": {
        "diskId": {
          "description": "Gets or sets the disk id.",
          "type": "string"
        },
        "diskName": {
          "description": "Gets or sets the disk name.",
          "type": "string"
        },
        "protectionStage": {
          "description": "Gets or sets the protection stage.",
          "type": "string"
        },
        "healthErrorCode": {
          "description": "Gets or sets the health error code for the disk.",
          "type": "string"
        },
        "rpoInSeconds": {
          "format": "int64",
          "description": "Gets or sets the RPO in seconds.",
          "type": "integer"
        },
        "resyncRequired": {
          "description": "Gets or sets a value indicating whether resync is required for this disk.",
          "type": "string"
        },
        "resyncProgressPercentage": {
          "format": "int32",
          "description": "Gets or sets the resync progress percentage.",
          "type": "integer"
        },
        "resyncDurationInSeconds": {
          "format": "int64",
          "description": "Gets or sets the resync duration in seconds.",
          "type": "integer"
        },
        "diskCapacityInBytes": {
          "format": "int64",
          "description": "Gets or sets the disk capacity in bytes.",
          "type": "integer"
        },
        "fileSystemCapacityInBytes": {
          "format": "int64",
          "description": "Gets or sets the file system capacity in bytes.",
          "type": "integer"
        },
        "sourceDataInMB": {
          "format": "double",
          "description": "Gets or sets the source data transit in MB.",
          "type": "number"
        },
        "psDataInMB": {
          "format": "double",
          "description": "Gets or sets the PS data transit in MB.",
          "type": "number"
        },
        "targetDataInMB": {
          "format": "double",
          "description": "Gets or sets the target data transit in MB.",
          "type": "number"
        },
        "diskResized": {
          "description": "Gets or sets a value indicating whether disk is resized.",
          "type": "string"
        }
      }
    },
    "InMageAgentDetails": {
      "description": "The details of the InMage agent.",
      "type": "object",
      "properties": {
        "agentVersion": {
          "description": "Gets or sets the agent version.",
          "type": "string"
        },
        "agentUpdateStatus": {
          "description": "Gets or sets a value indicating whether installed agent needs to be updated.",
          "type": "string"
        },
        "postUpdateRebootStatus": {
          "description": "Gets or sets a value indicating whether reboot is required after update is applied.",
          "type": "string"
        }
      }
    },
    "A2AReplicationDetails": {
      "description": "A2A provider specific settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings"
        }
      ],
      "properties": {
        "fabricObjectId": {
          "description": "Gets or sets the fabric specific object Id of the virtual machine.",
          "type": "string"
        },
        "multiVmGroupId": {
          "description": "Gets or sets the multi vm group Id.",
          "type": "string"
        },
        "multiVmGroupName": {
          "description": "Gets or sets the multi vm group name.",
          "type": "string"
        },
        "managementId": {
          "description": "Gets or sets the management Id.",
          "type": "string"
        },
        "protectedDisks": {
          "description": "Gets or sets the list of protected disks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/A2AProtectedDiskDetails"
          }
        }
      },
      "x-ms-discriminator-value": "A2AReplicationDetails"
    },
    "A2AProtectedDiskDetails": {
      "description": "A2A protected disk details.",
      "type": "object",
      "properties": {
        "diskUri": {
          "description": "Gets or sets the disk uri.",
          "type": "string"
        },
        "recoveryAzureStorageAccountId": {
          "description": "Gets or sets the recovery disk storage account.",
          "type": "string"
        },
        "primaryStagingAzureStorageAccountId": {
          "description": "Gets or sets the primary staging storage account.",
          "type": "string"
        },
        "primaryDiskAzureStorageAccountId": {
          "description": "Gets or sets the primary disk storage account.",
          "type": "string"
        },
        "recoveryDiskUri": {
          "description": "Gets or sets recovery disk uri.",
          "type": "string"
        }
      }
    },
    "HyperVReplicaAzureEnableProtectionInput": {
      "description": "Azure specific enable protection input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EnableProtectionProviderSpecificInput"
        }
      ],
      "properties": {
        "hvHostVmId": {
          "description": "Gets or sets the Hyper-V host Vm Id.",
          "type": "string"
        },
        "vmName": {
          "description": "Gets or sets the Vm Name.",
          "type": "string"
        },
        "osType": {
          "description": "Gets or sets the OS type associated with vm.",
          "type": "string"
        },
        "vhdId": {
          "description": "Gets or sets the OS disk VHD id associated with vm.",
          "type": "string"
        },
        "targetStorageAccountId": {
          "description": "Gets or sets the storage account name.",
          "type": "string"
        },
        "targetAzureNetworkId": {
          "description": "Gets or sets the selected target Azure network Id.",
          "type": "string"
        },
        "targetAzureSubnetId": {
          "description": "Gets or sets the selected target Azure subnet Id.",
          "type": "string"
        },
        "enableRDPOnTargetOption": {
          "description": "Gets or sets the selected option to enable RDP\\SSH on target vm after failover.\r\n            String value of {SrsDataContract.EnableRDPOnTargetOption} enum.",
          "type": "string"
        },
        "targetAzureVmName": {
          "description": "Gets or sets the target azure Vm Name.",
          "type": "string"
        },
        "disksToInclude": {
          "description": "Gets or sets the list of VHD IDs of disks to be protected.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaAzureEnableProtectionInput"
    },
    "SanEnableProtectionInput": {
      "description": "San enable protection provider specific input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EnableProtectionProviderSpecificInput"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "SanEnableProtectionInput"
    },
    "InMageAzureV2EnableProtectionInput": {
      "description": "VMware Azure specific enable protection input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EnableProtectionProviderSpecificInput"
        }
      ],
      "properties": {
        "masterTargetId": {
          "description": "Gets or sets the Master target Id.",
          "type": "string"
        },
        "processServerId": {
          "description": "Gets or sets the Process Server Id.",
          "type": "string"
        },
        "storageAccountId": {
          "description": "Gets or sets the storage account name.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "Gets or sets the CS account Id.",
          "type": "string"
        },
        "multiVmGroupId": {
          "description": "Gets or sets the multi vm group Id.",
          "type": "string"
        },
        "multiVmGroupName": {
          "description": "Gets or sets the multi vm group name.",
          "type": "string"
        },
        "disksToInclude": {
          "description": "Gets or sets the disks to include list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targetAzureNetworkId": {
          "description": "Gets or sets the selected target Azure network Id.",
          "type": "string"
        },
        "targetAzureSubnetId": {
          "description": "Gets or sets the selected target Azure subnet Id.",
          "type": "string"
        },
        "enableRDPOnTargetOption": {
          "description": "Gets or sets the selected option to enable RDP\\SSH on target vm after failover.\r\n            String value of {SrsDataContract.EnableRDPOnTargetOption} enum.",
          "type": "string"
        },
        "targetAzureVmName": {
          "description": "Gets or sets the target azure Vm Name.",
          "type": "string"
        },
        "logStorageAccountId": {
          "description": "Gets or sets the storage account to be used for logging\r\n            during replication.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "InMageAzureV2EnableProtectionInput"
    },
    "InMageEnableProtectionInput": {
      "description": "VMware Azure specific enable protection input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EnableProtectionProviderSpecificInput"
        }
      ],
      "properties": {
        "vmFriendlyName": {
          "description": "Gets or sets the Vm Name.",
          "type": "string"
        },
        "masterTargetId": {
          "description": "Gets or sets the Master Target Id.",
          "type": "string"
        },
        "processServerId": {
          "description": "Gets or sets the Process Server Id.",
          "type": "string"
        },
        "retentionDrive": {
          "description": "Gets or sets the retention drive to use on the MT.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "Gets or sets the CS account Id.",
          "type": "string"
        },
        "multiVmGroupId": {
          "description": "Gets or sets the multi vm group Id.",
          "type": "string"
        },
        "multiVmGroupName": {
          "description": "Gets or sets the multi vm group name.",
          "type": "string"
        },
        "datastoreName": {
          "description": "Gets or sets the target datastore name.",
          "type": "string"
        },
        "diskExclusionInput": {
          "$ref": "#/definitions/InMageDiskExclusionInput",
          "description": "Gets or sets the enable disk exclusion input."
        },
        "disksToInclude": {
          "description": "Gets or sets the disks to include list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "InMageEnableProtectionInput"
    },
    "InMageDiskExclusionInput": {
      "description": "DiskExclusionInput when doing enable protection of virtual machine in InMage provider.",
      "type": "object",
      "properties": {
        "volumeOptions": {
          "description": "Gets or sets the volume label based option for disk exclusion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InMageVolumeExclusionOptions"
          }
        },
        "diskSignatureOptions": {
          "description": "Gets or sets the guest disk signature based option for disk exclusion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InMageDiskSignatureExclusionOptions"
          }
        }
      }
    },
    "InMageVolumeExclusionOptions": {
      "description": "Guest disk signature based disk exclusion option when doing enable protection of \r\n            virtual machine in InMage provider.",
      "type": "object",
      "properties": {
        "volumeLabel": {
          "description": "Gets or sets the volume label. The disk having any volume with this label will be\r\n            excluded from replication.",
          "type": "string"
        },
        "OnlyExcludeIfSingleVolume": {
          "description": "Gets or sets the value indicating whether to exclude multi volume disk or not. \r\n            If a disk has multiple volumes and one of the volume has label matching with \r\n            VolumeLabel this disk will be excluded from replication if \r\n            OnlyExcludeIfSingleVolume is false.",
          "type": "string"
        }
      }
    },
    "InMageDiskSignatureExclusionOptions": {
      "description": "Guest disk signature based disk exclusion option when doing enable protection of \r\n            virtual machine in InMage provider.",
      "type": "object",
      "properties": {
        "diskSignature": {
          "description": "Gets or sets the guest signature of disk to be excluded from replication.",
          "type": "string"
        }
      }
    },
    "A2AEnableProtectionInput": {
      "description": "A2A enable protection input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EnableProtectionProviderSpecificInput"
        }
      ],
      "properties": {
        "fabricObjectId": {
          "description": "Gets or sets the fabric specific object Id of the virtual machine.",
          "type": "string"
        },
        "recoveryContainerId": {
          "description": "Gets or sets the recovery container Id.",
          "type": "string"
        },
        "recoveryResourceGroupId": {
          "description": "Gets or sets the recovery resource group Id. Valid for V2 scenarios.",
          "type": "string"
        },
        "recoveryCloudServiceId": {
          "description": "Gets or sets the recovery cloud service Id. Valid for V1 scenarios.",
          "type": "string"
        },
        "recoveryAvailabilitySetId": {
          "description": "Gets or sets the recovery availability set Id.",
          "type": "string"
        },
        "vmDisks": {
          "description": "Gets or sets the list of vm disk details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/A2AVmDiskInputDetails"
          }
        }
      },
      "x-ms-discriminator-value": "A2AEnableProtectionInput"
    },
    "A2AVmDiskInputDetails": {
      "description": "Azure VM disk input details.",
      "type": "object",
      "properties": {
        "diskUri": {
          "description": "Gets or sets the disk Uri.",
          "type": "string"
        },
        "recoveryAzureStorageAccountId": {
          "description": "Gets or sets the recovery VHD storage account Id.",
          "type": "string"
        },
        "primaryStagingAzureStorageAccountId": {
          "description": "Gets or sets the primary staging storage account Id.",
          "type": "string"
        }
      }
    },
    "InMageDisableProtectionProviderSpecificInput": {
      "description": "InMage disable protection provider specific input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DisableProtectionProviderSpecificInput"
        }
      ],
      "properties": {
        "replicaVmDeletionStatus": {
          "description": "Gets or sets a value indicating whether the replica VM should be destroyed or retained.\r\n            Values from Delete and Retain.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "InMageDisableProtectionProviderSpecificInput"
    },
    "HyperVReplicaAzureFailoverProviderInput": {
      "description": "HvrA provider specific input for failover.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProviderSpecificFailoverInput"
        }
      ],
      "properties": {
        "vaultLocation": {
          "description": "Gets or sets Location of the vault.",
          "type": "string"
        },
        "primaryKekCertificatePfx": {
          "description": "Gets or sets Primary kek certificate pfx.",
          "type": "string"
        },
        "secondaryKekCertificatePfx": {
          "description": "Gets or sets Secondary kek certificate pfx.",
          "type": "string"
        },
        "recoveryPointId": {
          "description": "Gets or sets the recovery point id to be passed to failover to a particular recovery \r\n            point. In case of latest recovery point, null should be passed.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaAzureFailoverProviderInput"
    },
    "HyperVReplicaAzureFailbackProviderInput": {
      "description": "HvrA provider specific input for failback.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProviderSpecificFailoverInput"
        }
      ],
      "properties": {
        "dataSyncOption": {
          "description": "Gets or sets Data sync option.",
          "type": "string"
        },
        "recoveryVmCreationOption": {
          "description": "Gets or sets ALR options to create alternate recovery.",
          "type": "string"
        },
        "providerIdForAlternateRecovery": {
          "description": "Gets or sets Provider ID for alternate location",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaAzureFailbackProviderInput"
    },
    "InMageAzureV2FailoverProviderInput": {
      "description": "InMageAzureV2 provider specific input for failover.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProviderSpecificFailoverInput"
        }
      ],
      "properties": {
        "vaultLocation": {
          "description": "Gets or sets Location of the vault.",
          "type": "string"
        },
        "recoveryPointId": {
          "description": "Gets or sets the recovery point id to be passed to failover to a particular recovery \r\n            point. In case of latest recovery point, null should be passed.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "InMageAzureV2FailoverProviderInput"
    },
    "InMageFailoverProviderInput": {
      "description": "Provider specific input for InMage failover.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProviderSpecificFailoverInput"
        }
      ],
      "properties": {
        "recoveryPointType": {
          "description": "Gets or sets the recovery point type. Values from LatestTime,\r\n            LatestTag or Custom. In the case of custom, the recovery point provided by\r\n            RecoveryPointId will be used. In the other two cases, recovery point id\r\n            will be ignored.",
          "type": "string"
        },
        "recoveryPointId": {
          "description": "Gets or sets the recovery point id to be passed to failover to a particular recovery \r\n            point. In case of latest recovery point, null should be passed.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "InMageFailoverProviderInput"
    },
    "A2AFailoverProviderInput": {
      "description": "A2A provider specific input for failover.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProviderSpecificFailoverInput"
        }
      ],
      "properties": {
        "recoveryPointId": {
          "description": "Gets or sets the recovery point id to be passed to failover to a particular recovery \r\n            point. In case of latest recovery point, null should be passed.",
          "type": "string"
        },
        "cloudServiceCreationOption": {
          "description": "Gets or sets a value indicating whether to use recovery cloud service for TFO or not.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "A2AFailoverProviderInput"
    },
    "HyperVReplicaAzureReprotectInput": {
      "description": "Azure specific reprotect input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReverseReplicationProviderSpecificInput"
        }
      ],
      "properties": {
        "hvHostVmId": {
          "description": "Gets or sets the Hyper-V host Vm Id.",
          "type": "string"
        },
        "vmName": {
          "description": "Gets or sets the Vm Name.",
          "type": "string"
        },
        "osType": {
          "description": "Gets or sets the OS type associated with vm.",
          "type": "string"
        },
        "vHDId": {
          "description": "Gets or sets the OS disk VHD id associated with vm.",
          "type": "string"
        },
        "storageAccountId": {
          "description": "Gets or sets the storage account name.",
          "type": "string"
        },
        "logStorageAccountId": {
          "description": "Gets or sets the storage account to be used for logging during replication.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaAzureReprotectInput"
    },
    "InMageAzureV2ReprotectInput": {
      "description": "InMageAzureV2 specific provider input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReverseReplicationProviderSpecificInput"
        }
      ],
      "properties": {
        "masterTargetId": {
          "description": "Gets or sets the Master target Id.",
          "type": "string"
        },
        "processServerId": {
          "description": "Gets or sets the Process Server Id.",
          "type": "string"
        },
        "storageAccountId": {
          "description": "Gets or sets the storage account id.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "Gets or sets the CS account Id.",
          "type": "string"
        },
        "policyId": {
          "description": "Gets or sets the Policy Id.",
          "type": "string"
        },
        "logStorageAccountId": {
          "description": "Gets or sets the storage account to be used for logging\r\n            during replication.",
          "type": "string"
        },
        "disksToInclude": {
          "description": "Gets or sets the disks to include list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "InMageAzureV2ReprotectInput"
    },
    "InMageReprotectInput": {
      "description": "InMageAzureV2 specific provider input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReverseReplicationProviderSpecificInput"
        }
      ],
      "properties": {
        "masterTargetId": {
          "description": "Gets or sets the Master Target Id.",
          "type": "string"
        },
        "processServerId": {
          "description": "Gets or sets the Process Server Id.",
          "type": "string"
        },
        "retentionDrive": {
          "description": "Gets or sets the retention drive to use on the MT.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "Gets or sets the CS account Id.",
          "type": "string"
        },
        "datastoreName": {
          "description": "Gets or sets the target datastore name.",
          "type": "string"
        },
        "diskExclusionInput": {
          "$ref": "#/definitions/InMageDiskExclusionInput",
          "description": "Gets or sets the enable disk exclusion input."
        },
        "profileId": {
          "description": "Gets or sets the Policy Id.",
          "type": "string"
        },
        "disksToInclude": {
          "description": "Gets or sets the disks to include list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "InMageReprotectInput"
    },
    "A2AReprotectInput": {
      "description": "Azure specific reprotect input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReverseReplicationProviderSpecificInput"
        }
      ],
      "properties": {
        "recoveryContainerId": {
          "description": "Gets or sets the recovery container Id.",
          "type": "string"
        },
        "vmDisks": {
          "description": "Gets or sets the list of vm disk details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/A2AVmDiskInputDetails"
          }
        },
        "recoveryResourceGroupId": {
          "description": "Gets or sets the recovery resource group Id. Valid for V2 scenarios.",
          "type": "string"
        },
        "recoveryCloudServiceId": {
          "description": "Gets or sets the recovery cloud service Id. Valid for V1 scenarios.",
          "type": "string"
        },
        "recoveryAvailabilitySetId": {
          "description": "Gets or sets the recovery availability set.",
          "type": "string"
        },
        "policyId": {
          "description": "Gets or sets the Policy Id.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "A2AReprotectInput"
    },
    "HyperVReplicaAzureApplyRecoveryPointInput": {
      "description": "ApplyRecoveryPoint input specific to HyperVReplicaAzure provider.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApplyRecoveryPointProviderSpecificInput"
        }
      ],
      "properties": {
        "vaultLocation": {
          "description": "Gets or sets the vault location where the recovery Vm resides.",
          "type": "string"
        },
        "primaryKekCertificatePfx": {
          "description": "Gets or sets the primary kek certificate pfx.",
          "type": "string"
        },
        "secondaryKekCertificatePfx": {
          "description": "Gets or sets the secondary kek certificate pfx.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaAzureApplyRecoveryPointInput"
    },
    "InMageAzureV2ApplyRecoveryPointInput": {
      "description": "ApplyRecoveryPoint input specific to InMageAzureV2 provider.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApplyRecoveryPointProviderSpecificInput"
        }
      ],
      "properties": {
        "vaultLocation": {
          "description": "Gets or sets the vault location where the recovery Vm resides.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "InMageAzureV2ApplyRecoveryPointInput"
    },
    "A2AApplyRecoveryPointInput": {
      "description": "ApplyRecoveryPoint input specific to A2A provider.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ApplyRecoveryPointProviderSpecificInput"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "A2AApplyRecoveryPointInput"
    },
    "JobTaskDetails": {
      "description": "This class represents a task which is actually a workflow so that one can navigate\r\n            to its individual drill down.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "properties": {
        "jobTask": {
          "$ref": "#/definitions/JobEntity",
          "description": "Gets or sets the job entity."
        }
      },
      "x-ms-discriminator-value": "JobTaskDetails"
    },
    "JobEntity": {
      "description": "This class contains the minimal job details required to navigate to the desired drill down.",
      "type": "object",
      "properties": {
        "jobId": {
          "description": "Gets or sets the job id.",
          "type": "string"
        },
        "jobFriendlyName": {
          "description": "Gets or sets the job display name.",
          "type": "string"
        },
        "targetObjectId": {
          "description": "Gets or sets the object id.",
          "type": "string"
        },
        "targetObjectName": {
          "description": "Gets or sets the object name.",
          "type": "string"
        },
        "targetInstanceType": {
          "description": "Gets or sets the workflow affected object type.",
          "type": "string"
        },
        "jobScenarioName": {
          "description": "Gets or sets the job name. Enum type ScenarioName.",
          "type": "string"
        }
      }
    },
    "VirtualMachineTaskDetails": {
      "description": "This class represents the virtual machine task details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "properties": {
        "skippedReason": {
          "description": "Gets or sets the skipped reason.",
          "type": "string"
        },
        "skippedReasonString": {
          "description": "Gets or sets the skipped reason string.",
          "type": "string"
        },
        "jobTask": {
          "$ref": "#/definitions/JobEntity",
          "description": "Gets or sets the job entity."
        }
      },
      "x-ms-discriminator-value": "VirtualMachineTaskDetails"
    },
    "FabricReplicationGroupTaskDetails": {
      "description": "This class represents the fabric replication group task details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "properties": {
        "skippedReason": {
          "description": "Gets or sets the skipped reason.",
          "type": "string"
        },
        "skippedReasonString": {
          "description": "Gets or sets the skipped reason string.",
          "type": "string"
        },
        "jobTask": {
          "$ref": "#/definitions/JobEntity",
          "description": "Gets or sets the job entity."
        }
      },
      "x-ms-discriminator-value": "FabricReplicationGroupTaskDetails"
    },
    "ManualActionTaskDetails": {
      "description": "This class represents the manual action task details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "properties": {
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "instructions": {
          "description": "Gets or sets the instructions.",
          "type": "string"
        },
        "observation": {
          "description": "Gets or sets the observation.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "ManualActionTaskDetails"
    },
    "ScriptActionTaskDetails": {
      "description": "This class represents the script action task details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "properties": {
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "path": {
          "description": "Gets or sets the path.",
          "type": "string"
        },
        "output": {
          "description": "Gets or sets the output.",
          "type": "string"
        },
        "isPrimarySideScript": {
          "description": "Gets or sets a value indicating whether it is a primary side script or not.",
          "type": "boolean"
        }
      },
      "x-ms-discriminator-value": "ScriptActionTaskDetails"
    },
    "VmNicUpdatesTaskDetails": {
      "description": "This class represents the vm NicUpdates task details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "properties": {
        "vmId": {
          "description": "Gets or sets VmId.",
          "type": "string"
        },
        "nicId": {
          "description": "Gets or sets NicId.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets Name.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "VmNicUpdatesTaskDetails"
    },
    "ConsistencyCheckTaskDetails": {
      "description": "This class contains monitoring details of all the inconsistent Protected Entites in Vmm.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "properties": {
        "vmDetails": {
          "description": "Gets or sets the list of inconsistent Vm details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InconsistentVmDetails"
          }
        }
      },
      "x-ms-discriminator-value": "ConsistencyCheckTaskDetails"
    },
    "InconsistentVmDetails": {
      "description": "This class stores the monitoring details for consistency check of\r\n            inconsistent Protected Entity.",
      "type": "object",
      "properties": {
        "vmName": {
          "description": "Gets or sets the Vm name.",
          "type": "string"
        },
        "cloudName": {
          "description": "Gets or sets the Cloud name.",
          "type": "string"
        },
        "details": {
          "description": "Gets or sets the list of details regarding state of the\r\n            Protected Entity in SRS and On prem.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "errorIds": {
          "description": "Gets or sets the list of error ids.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AutomationRunbookTaskDetails": {
      "description": "This class represents the task details for an automation runbook.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "properties": {
        "name": {
          "description": "Gets or sets the recovery plan task name.",
          "type": "string"
        },
        "cloudServiceName": {
          "description": "Gets or sets the cloud service of the automation runbook account.",
          "type": "string"
        },
        "subscriptionId": {
          "description": "Gets or sets the subscription Id of the automation runbook account.",
          "type": "string"
        },
        "accountName": {
          "description": "Gets or sets the automation account name of the runbook.",
          "type": "string"
        },
        "runbookId": {
          "description": "Gets or sets the runbook Id.",
          "type": "string"
        },
        "runbookName": {
          "description": "Gets or sets the runbook name.",
          "type": "string"
        },
        "jobId": {
          "description": "Gets or sets the job Id of the runbook execution.",
          "type": "string"
        },
        "jobOutput": {
          "description": "Gets or sets the execution output of the runbook.",
          "type": "string"
        },
        "isPrimarySideScript": {
          "description": "Gets or sets a value indicating whether it is a primary side script or not.",
          "type": "boolean"
        }
      },
      "x-ms-discriminator-value": "AutomationRunbookTaskDetails"
    },
    "InlineWorkflowTaskDetails": {
      "description": "This class represents the inline workflow task details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GroupTaskDetails"
        }
      ],
      "properties": {
        "workflowIds": {
          "description": "Gets or sets the list of child workflow ids.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "InlineWorkflowTaskDetails"
    },
    "RecoveryPlanGroupTaskDetails": {
      "description": "This class represents the recovery plan group task.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GroupTaskDetails"
        }
      ],
      "properties": {
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "groupId": {
          "description": "Gets or sets the group identifier.",
          "type": "string"
        },
        "rpGroupType": {
          "description": "Gets or sets the group type.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "RecoveryPlanGroupTaskDetails"
    },
    "RecoveryPlanShutdownGroupTaskDetails": {
      "description": "This class represents the recovery plan shutdown group task details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GroupTaskDetails"
        }
      ],
      "properties": {
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "groupId": {
          "description": "Gets or sets the group identifier.",
          "type": "string"
        },
        "rpGroupType": {
          "description": "Gets or sets the group type.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "RecoveryPlanShutdownGroupTaskDetails"
    },
    "AsrJobDetails": {
      "description": "This class represents job details based on specific job type.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobDetails"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "AsrJobDetails"
    },
    "TestFailoverJobDetails": {
      "description": "This class represents the details for a test failover job.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobDetails"
        }
      ],
      "properties": {
        "testFailoverStatus": {
          "description": "Gets or sets the test failover status.",
          "type": "string"
        },
        "comments": {
          "description": "Gets or sets the test failover comments.",
          "type": "string"
        },
        "networkName": {
          "description": "Gets or sets the test network name.",
          "type": "string"
        },
        "networkFriendlyName": {
          "description": "Gets or sets the test network friendly name.",
          "type": "string"
        },
        "networkType": {
          "description": "Gets or sets the test network type (see TestFailoverInput enum for possible values).",
          "type": "string"
        },
        "protectedItemDetails": {
          "description": "Gets or sets the test VM details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestFailoverReplicationProtectedItemDetails"
          }
        }
      },
      "x-ms-discriminator-value": "TestFailoverJobDetails"
    },
    "TestFailoverReplicationProtectedItemDetails": {
      "description": "Test failover details for a replication protected item.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "friendlyName": {
          "description": "Gets or sets the friendly name.",
          "type": "string"
        },
        "testVmName": {
          "description": "Gets or sets the test Vm name.",
          "type": "string"
        },
        "testVmFriendlyName": {
          "description": "Gets or sets the test Vm friendly name.",
          "type": "string"
        },
        "networkConnectionStatus": {
          "description": "Gets or sets the network connection status.",
          "type": "string"
        },
        "networkFriendlyName": {
          "description": "Gets or sets the network friendly name.",
          "type": "string"
        },
        "subnet": {
          "description": "Gets or sets the network subnet.",
          "type": "string"
        }
      }
    },
    "ExportJobDetails": {
      "description": "This class represents details for export jobs workflow.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobDetails"
        }
      ],
      "properties": {
        "blobUri": {
          "description": "Gets or sets blobUri of the exported jobs.",
          "type": "string"
        },
        "sasToken": {
          "description": "Gets or sets the sas token to access blob.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "ExportJobDetails"
    },
    "A2AContainerCreationInput": {
      "description": "A2A cloud creation input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificContainerCreationInput"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "A2AContainerCreationInput"
    },
    "A2ASwitchProtectionInput": {
      "description": "A2A specific switch protection input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SwitchProtectionProviderSpecificInput"
        }
      ],
      "properties": {
        "recoveryContainerId": {
          "description": "Gets or sets the recovery container Id.",
          "type": "string"
        },
        "vmDisks": {
          "description": "Gets or sets the list of vm disk details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/A2AVmDiskInputDetails"
          }
        },
        "recoveryResourceGroupId": {
          "description": "Gets or sets the recovery resource group Id. Valid for V2 scenarios.",
          "type": "string"
        },
        "recoveryCloudServiceId": {
          "description": "Gets or sets the recovery cloud service Id. Valid for V1 scenarios.",
          "type": "string"
        },
        "recoveryAvailabilitySetId": {
          "description": "Gets or sets the recovery availability set.",
          "type": "string"
        },
        "policyId": {
          "description": "Gets or sets the Policy Id.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "A2ASwitchProtectionInput"
    },
    "HyperVReplicaAzurePolicyDetails": {
      "description": "Hyper-V Replica Azure specific protection profile details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "properties": {
        "recoveryPointHistoryDurationInHours": {
          "format": "int32",
          "description": "Gets or sets the duration (in hours) to which point the recovery history needs to be \r\n            maintained.",
          "type": "integer"
        },
        "applicationConsistentSnapshotFrequencyInHours": {
          "format": "int32",
          "description": "Gets or sets the interval (in hours) at which Hyper-V Replica should create an\r\n            application consistent snapshot within the VM.",
          "type": "integer"
        },
        "replicationInterval": {
          "format": "int32",
          "description": "Gets or sets the replication interval.",
          "type": "integer"
        },
        "onlineReplicationStartTime": {
          "description": "Gets or sets the scheduled start time for the initial replication. If this parameter \r\n            is Null, the initial replication starts immediately.",
          "type": "string"
        },
        "encryption": {
          "description": "Gets or sets a value indicating whether encryption is enabled for virtual machines\r\n            in this cloud.",
          "type": "string"
        },
        "activeStorageAccountId": {
          "description": "Gets or sets the active storage account Id.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaAzurePolicyDetails"
    },
    "HyperVReplicaBasePolicyDetails": {
      "description": "Base class for HyperVReplica policy details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "properties": {
        "recoveryPoints": {
          "format": "int32",
          "description": "Gets or sets a value indicating the number of recovery points.",
          "type": "integer"
        },
        "applicationConsistentSnapshotFrequencyInHours": {
          "format": "int32",
          "description": "Gets or sets a value indicating the application consistent frequency.",
          "type": "integer"
        },
        "compression": {
          "description": "Gets or sets a value indicating whether compression has to be enabled.",
          "type": "string"
        },
        "initialReplicationMethod": {
          "description": "Gets or sets a value indicating whether IR is online.",
          "type": "string"
        },
        "onlineReplicationStartTime": {
          "description": "Gets or sets a value indicating the online IR start time.",
          "type": "string"
        },
        "offlineReplicationImportPath": {
          "description": "Gets or sets a value indicating the offline IR import path.",
          "type": "string"
        },
        "offlineReplicationExportPath": {
          "description": "Gets or sets a value indicating the offline IR export path.",
          "type": "string"
        },
        "replicationPort": {
          "format": "int32",
          "description": "Gets or sets a value indicating the recovery HTTPS port.",
          "type": "integer"
        },
        "allowedAuthenticationType": {
          "format": "int32",
          "description": "Gets or sets a value indicating the authentication type.",
          "type": "integer"
        },
        "replicaDeletionOption": {
          "description": "Gets or sets a value indicating whether the VM has to be auto deleted.\r\n            Supported Values: String.Empty, None, OnRecoveryCloud",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaBasePolicyDetails"
    },
    "HyperVReplicaPolicyDetails": {
      "description": "Hyper-V Replica Blue specific protection profile details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "properties": {
        "recoveryPoints": {
          "format": "int32",
          "description": "Gets or sets a value indicating the number of recovery points.",
          "type": "integer"
        },
        "applicationConsistentSnapshotFrequencyInHours": {
          "format": "int32",
          "description": "Gets or sets a value indicating the application consistent frequency.",
          "type": "integer"
        },
        "compression": {
          "description": "Gets or sets a value indicating whether compression has to be enabled.",
          "type": "string"
        },
        "initialReplicationMethod": {
          "description": "Gets or sets a value indicating whether IR is online.",
          "type": "string"
        },
        "onlineReplicationStartTime": {
          "description": "Gets or sets a value indicating the online IR start time.",
          "type": "string"
        },
        "offlineReplicationImportPath": {
          "description": "Gets or sets a value indicating the offline IR import path.",
          "type": "string"
        },
        "offlineReplicationExportPath": {
          "description": "Gets or sets a value indicating the offline IR export path.",
          "type": "string"
        },
        "replicationPort": {
          "format": "int32",
          "description": "Gets or sets a value indicating the recovery HTTPS port.",
          "type": "integer"
        },
        "allowedAuthenticationType": {
          "format": "int32",
          "description": "Gets or sets a value indicating the authentication type.",
          "type": "integer"
        },
        "replicaDeletionOption": {
          "description": "Gets or sets a value indicating whether the VM has to be auto deleted.\r\n            Supported Values: String.Empty, None, OnRecoveryCloud",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaPolicyDetails"
    },
    "HyperVReplicaBluePolicyDetails": {
      "description": "Hyper-V Replica Blue specific protection profile details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "properties": {
        "replicationFrequencyInSeconds": {
          "format": "int32",
          "description": "Gets or sets a value indicating the replication interval.",
          "type": "integer"
        },
        "recoveryPoints": {
          "format": "int32",
          "description": "Gets or sets a value indicating the number of recovery points.",
          "type": "integer"
        },
        "applicationConsistentSnapshotFrequencyInHours": {
          "format": "int32",
          "description": "Gets or sets a value indicating the application consistent frequency.",
          "type": "integer"
        },
        "compression": {
          "description": "Gets or sets a value indicating whether compression has to be enabled.",
          "type": "string"
        },
        "initialReplicationMethod": {
          "description": "Gets or sets a value indicating whether IR is online.",
          "type": "string"
        },
        "onlineReplicationStartTime": {
          "description": "Gets or sets a value indicating the online IR start time.",
          "type": "string"
        },
        "offlineReplicationImportPath": {
          "description": "Gets or sets a value indicating the offline IR import path.",
          "type": "string"
        },
        "offlineReplicationExportPath": {
          "description": "Gets or sets a value indicating the offline IR export path.",
          "type": "string"
        },
        "replicationPort": {
          "format": "int32",
          "description": "Gets or sets a value indicating the recovery HTTPS port.",
          "type": "integer"
        },
        "allowedAuthenticationType": {
          "format": "int32",
          "description": "Gets or sets a value indicating the authentication type.",
          "type": "integer"
        },
        "replicaDeletionOption": {
          "description": "Gets or sets a value indicating whether the VM has to be auto deleted.\r\n            Supported Values: String.Empty, None, OnRecoveryCloud",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaBluePolicyDetails"
    },
    "InMageBasePolicyDetails": {
      "description": "Base class for the policies of providers using InMage replication.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "properties": {
        "recoveryPointThresholdInMinutes": {
          "format": "int32",
          "description": "Gets or sets the recovery point threshold in minutes.",
          "type": "integer"
        },
        "recoveryPointHistory": {
          "format": "int32",
          "description": "Gets or sets the duration in minutes until which the recovery points need to be \r\n            stored.",
          "type": "integer"
        },
        "appConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "Gets or sets the app consistent snapshot frequency in minutes.",
          "type": "integer"
        },
        "multiVmSyncStatus": {
          "description": "Gets or sets a value indicating whether multi-VM sync has to be enabled.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "InMageBasePolicyDetails"
    },
    "InMageAzureV2PolicyDetails": {
      "description": "InMage Azure v2 specific protection profile details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "properties": {
        "crashConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "Gets or sets the crash consistent snapshot frequency in minutes.",
          "type": "integer"
        },
        "recoveryPointThresholdInMinutes": {
          "format": "int32",
          "description": "Gets or sets the recovery point threshold in minutes.",
          "type": "integer"
        },
        "recoveryPointHistory": {
          "format": "int32",
          "description": "Gets or sets the duration in minutes until which the recovery points need to be \r\n            stored.",
          "type": "integer"
        },
        "appConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "Gets or sets the app consistent snapshot frequency in minutes.",
          "type": "integer"
        },
        "multiVmSyncStatus": {
          "description": "Gets or sets a value indicating whether multi-VM sync has to be enabled.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "InMageAzureV2PolicyDetails"
    },
    "InMagePolicyDetails": {
      "description": "InMage specific protection profile details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "properties": {
        "recoveryPointThresholdInMinutes": {
          "format": "int32",
          "description": "Gets or sets the recovery point threshold in minutes.",
          "type": "integer"
        },
        "recoveryPointHistory": {
          "format": "int32",
          "description": "Gets or sets the duration in minutes until which the recovery points need to be \r\n            stored.",
          "type": "integer"
        },
        "appConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "Gets or sets the app consistent snapshot frequency in minutes.",
          "type": "integer"
        },
        "multiVmSyncStatus": {
          "description": "Gets or sets a value indicating whether multi-VM sync has to be enabled.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "InMagePolicyDetails"
    },
    "A2APolicyDetails": {
      "description": "A2A specific policy details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "properties": {
        "recoveryPointThresholdInMinutes": {
          "format": "int32",
          "description": "Gets or sets the recovery point threshold in minutes.",
          "type": "integer"
        },
        "recoveryPointHistory": {
          "format": "int32",
          "description": "Gets or sets the duration in minutes until which the recovery points need to be \r\n            stored.",
          "type": "integer"
        },
        "appConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "Gets or sets the app consistent snapshot frequency in minutes.",
          "type": "integer"
        },
        "multiVmSyncStatus": {
          "description": "Gets or sets a value indicating whether multi-VM sync has to be enabled.",
          "type": "string"
        },
        "crashConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "Gets or sets the crash consistent snapshot frequency in minutes.",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "A2APolicyDetails"
    },
    "HyperVReplicaAzurePolicyInput": {
      "description": "Hyper-V Replica Azure specific input for creating a protection profile.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificInput"
        }
      ],
      "properties": {
        "recoveryPointHistoryDuration": {
          "format": "int32",
          "description": "Gets or sets the duration (in hours) to which point the recovery history needs to be \r\n            maintained.",
          "type": "integer"
        },
        "applicationConsistentSnapshotFrequencyInHours": {
          "format": "int32",
          "description": "Gets or sets the interval (in hours) at which Hyper-V Replica should create an\r\n            application consistent snapshot within the VM.",
          "type": "integer"
        },
        "replicationInterval": {
          "format": "int32",
          "description": "Gets or sets the replication interval.",
          "type": "integer"
        },
        "onlineReplicationStartTime": {
          "description": "Gets or sets the scheduled start time for the initial replication. If this parameter \r\n            is Null, the initial replication starts immediately.",
          "type": "string"
        },
        "encryption": {
          "description": "Gets or sets a value indicating whether encryption needs to be enabled for Vms in this cloud.",
          "type": "string"
        },
        "storageAccounts": {
          "description": "Gets or sets the list of storage accounts to which the VMs in the primary cloud can \r\n            replicate to.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaAzurePolicyInput"
    },
    "HyperVReplicaPolicyInput": {
      "description": "Hyper-V Replica specific protection profile Input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificInput"
        }
      ],
      "properties": {
        "recoveryPoints": {
          "format": "int32",
          "description": "Gets or sets a value indicating the number of recovery points.",
          "type": "integer"
        },
        "applicationConsistentSnapshotFrequencyInHours": {
          "format": "int32",
          "description": "Gets or sets a value indicating the application consistent frequency.",
          "type": "integer"
        },
        "compression": {
          "description": "Gets or sets a value indicating whether compression has to be enabled.",
          "type": "string"
        },
        "initialReplicationMethod": {
          "description": "Gets or sets a value indicating whether IR is online.",
          "type": "string"
        },
        "onlineReplicationStartTime": {
          "description": "Gets or sets a value indicating the online IR start time.",
          "type": "string"
        },
        "offlineReplicationImportPath": {
          "description": "Gets or sets a value indicating the offline IR import path.",
          "type": "string"
        },
        "offlineReplicationExportPath": {
          "description": "Gets or sets a value indicating the offline IR export path.",
          "type": "string"
        },
        "replicationPort": {
          "format": "int32",
          "description": "Gets or sets a value indicating the recovery HTTPS port.",
          "type": "integer"
        },
        "allowedAuthenticationType": {
          "format": "int32",
          "description": "Gets or sets a value indicating the authentication type.",
          "type": "integer"
        },
        "replicaDeletion": {
          "description": "Gets or sets a value indicating whether the VM has to be auto deleted.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaPolicyInput"
    },
    "HyperVReplicaBluePolicyInput": {
      "description": "HyperV Replica Blue policy input.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificInput"
        }
      ],
      "properties": {
        "replicationFrequencyInSeconds": {
          "format": "int32",
          "description": "Gets or sets a value indicating the replication interval.",
          "type": "integer"
        },
        "recoveryPoints": {
          "format": "int32",
          "description": "Gets or sets a value indicating the number of recovery points.",
          "type": "integer"
        },
        "applicationConsistentSnapshotFrequencyInHours": {
          "format": "int32",
          "description": "Gets or sets a value indicating the application consistent frequency.",
          "type": "integer"
        },
        "compression": {
          "description": "Gets or sets a value indicating whether compression has to be enabled.",
          "type": "string"
        },
        "initialReplicationMethod": {
          "description": "Gets or sets a value indicating whether IR is online.",
          "type": "string"
        },
        "onlineReplicationStartTime": {
          "description": "Gets or sets a value indicating the online IR start time.",
          "type": "string"
        },
        "offlineReplicationImportPath": {
          "description": "Gets or sets a value indicating the offline IR import path.",
          "type": "string"
        },
        "offlineReplicationExportPath": {
          "description": "Gets or sets a value indicating the offline IR export path.",
          "type": "string"
        },
        "replicationPort": {
          "format": "int32",
          "description": "Gets or sets a value indicating the recovery HTTPS port.",
          "type": "integer"
        },
        "allowedAuthenticationType": {
          "format": "int32",
          "description": "Gets or sets a value indicating the authentication type.",
          "type": "integer"
        },
        "replicaDeletion": {
          "description": "Gets or sets a value indicating whether the VM has to be auto deleted.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "HyperVReplicaBluePolicyInput"
    },
    "InMageAzureV2PolicyInput": {
      "description": "VMWare Azure specific protection profile Input.",
      "required": [
        "multiVmSyncStatus"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificInput"
        }
      ],
      "properties": {
        "recoveryPointThresholdInMinutes": {
          "format": "int32",
          "description": "Gets or sets the recovery point threshold in minutes.",
          "type": "integer"
        },
        "recoveryPointHistory": {
          "format": "int32",
          "description": "Gets or sets the duration in minutes until which the recovery points need to be \r\n            stored.",
          "type": "integer"
        },
        "crashConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "Gets or sets the crash consistent snapshot frequency (in minutes).",
          "type": "integer"
        },
        "appConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "Gets or sets the app consistent snapshot frequency (in minutes).",
          "type": "integer"
        },
        "multiVmSyncStatus": {
          "description": "Gets or sets a value indicating whether multi-VM sync has to be enabled.\r\n            Value should be 'Enabled' or 'Disabled'.",
          "enum": [
            "Enable",
            "Disable"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SetMultiVmSyncStatus",
            "modelAsString": true
          }
        }
      },
      "x-ms-discriminator-value": "InMageAzureV2PolicyInput"
    },
    "InMagePolicyInput": {
      "description": "VMWare Azure specific protection profile Input.",
      "required": [
        "multiVmSyncStatus"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificInput"
        }
      ],
      "properties": {
        "recoveryPointThresholdInMinutes": {
          "format": "int32",
          "description": "Gets or sets the recovery point threshold in minutes.",
          "type": "integer"
        },
        "recoveryPointHistory": {
          "format": "int32",
          "description": "Gets or sets the duration in minutes until which the recovery points need to be \r\n            stored.",
          "type": "integer"
        },
        "appConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "Gets or sets the app consistent snapshot frequency (in minutes).",
          "type": "integer"
        },
        "multiVmSyncStatus": {
          "description": "Gets or sets a value indicating whether multi-VM sync has to be enabled.\r\n            Value should be 'Enabled' or 'Disabled'.",
          "enum": [
            "Enable",
            "Disable"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SetMultiVmSyncStatus",
            "modelAsString": true
          }
        }
      },
      "x-ms-discriminator-value": "InMagePolicyInput"
    },
    "A2APolicyCreationInput": {
      "description": "A2A Policy creation input.",
      "required": [
        "multiVmSyncStatus"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificInput"
        }
      ],
      "properties": {
        "recoveryPointHistory": {
          "format": "int32",
          "description": "Gets or sets the duration in minutes until which the recovery points need to be \r\n            stored.",
          "type": "integer"
        },
        "crashConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "Gets or sets the crash consistent snapshot frequency (in minutes).",
          "type": "integer"
        },
        "appConsistentFrequencyInMinutes": {
          "format": "int32",
          "description": "Gets or sets the app consistent snapshot frequency (in minutes).",
          "type": "integer"
        },
        "multiVmSyncStatus": {
          "description": "Gets or sets a value indicating whether multi-VM sync has to be enabled.\r\n            Value should be 'Enabled' or 'Disabled'.",
          "enum": [
            "Enable",
            "Disable"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SetMultiVmSyncStatus",
            "modelAsString": true
          }
        }
      },
      "x-ms-discriminator-value": "A2APolicyCreationInput"
    },
    "RecoveryPlanScriptActionDetails": {
      "description": "Recovery plan script action details.",
      "required": [
        "path",
        "fabricLocation"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanActionDetails"
        }
      ],
      "properties": {
        "path": {
          "description": "Gets or sets the script path.",
          "type": "string"
        },
        "timeout": {
          "description": "Gets or sets the script timeout.",
          "type": "string"
        },
        "fabricLocation": {
          "description": "Gets or sets the fabric location.",
          "enum": [
            "Primary",
            "Recovery"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RecoveryPlanActionLocation",
            "modelAsString": true
          }
        },
        "CanWrite": {
          "description": "Gets a value indicating whether this Newtonsoft.Json.JsonConverter can write JSON",
          "type": "boolean",
          "readOnly": true
        },
        "CanRead": {
          "type": "boolean",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "RecoveryPlanScriptActionDetails"
    },
    "RecoveryPlanAutomationRunbookActionDetails": {
      "description": "Recovery plan Automation runbook action details.",
      "required": [
        "fabricLocation"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanActionDetails"
        }
      ],
      "properties": {
        "runbookId": {
          "description": "Gets or sets the runbook ARM Id.",
          "type": "string"
        },
        "timeout": {
          "description": "Gets or sets the runbook timeout.",
          "type": "string"
        },
        "fabricLocation": {
          "description": "Gets or sets the fabric location.",
          "enum": [
            "Primary",
            "Recovery"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RecoveryPlanActionLocation",
            "modelAsString": true
          }
        },
        "CanWrite": {
          "description": "Gets a value indicating whether this Newtonsoft.Json.JsonConverter can write JSON",
          "type": "boolean",
          "readOnly": true
        },
        "CanRead": {
          "type": "boolean",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "RecoveryPlanAutomationRunbookActionDetails"
    },
    "RecoveryPlanManualActionDetails": {
      "description": "Recovery plan manual action details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanActionDetails"
        }
      ],
      "properties": {
        "description": {
          "description": "Gets or sets the manual action description.",
          "type": "string"
        },
        "CanWrite": {
          "description": "Gets a value indicating whether this Newtonsoft.Json.JsonConverter can write JSON",
          "type": "boolean",
          "readOnly": true
        },
        "CanRead": {
          "type": "boolean",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "RecoveryPlanManualActionDetails"
    },
    "RecoveryPlanHyperVReplicaAzureFailoverInput": {
      "description": "Recovery plan HVR Azure failover input.",
      "required": [
        "vaultLocation"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
        }
      ],
      "properties": {
        "vaultLocation": {
          "description": "Gets or sets the vault location.",
          "type": "string"
        },
        "primaryKekCertificatePfx": {
          "description": "Gets or sets the primary KEK certificate PFX.",
          "type": "string"
        },
        "secondaryKekCertificatePfx": {
          "description": "Gets or sets the secondary KEK certificate PFX.",
          "type": "string"
        },
        "recoveryPointType": {
          "description": "Gets or sets the recovery point type.",
          "enum": [
            "Latest",
            "LatestApplicationConsistent",
            "LatestProcessed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "HyperVReplicaAzureRpRecoveryPointType",
            "modelAsString": true
          }
        },
        "CanWrite": {
          "description": "Gets a value indicating whether this Newtonsoft.Json.JsonConverter can write JSON",
          "type": "boolean",
          "readOnly": true
        },
        "CanRead": {
          "type": "boolean",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "RecoveryPlanHyperVReplicaAzureFailoverInput"
    },
    "RecoveryPlanHyperVReplicaAzureFailbackInput": {
      "description": "Recovery plan HVR Azure failback input.",
      "required": [
        "dataSyncOption",
        "recoveryVmCreationOption"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
        }
      ],
      "properties": {
        "dataSyncOption": {
          "description": "Gets or sets the data sync option.",
          "enum": [
            "ForDownTime",
            "ForSynchronization"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataSyncStatus",
            "modelAsString": true
          }
        },
        "recoveryVmCreationOption": {
          "description": "Gets or sets the ALR option.",
          "enum": [
            "CreateVmIfNotFound",
            "NoAction"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlternateLocationRecoveryOption",
            "modelAsString": true
          }
        },
        "CanWrite": {
          "description": "Gets a value indicating whether this Newtonsoft.Json.JsonConverter can write JSON",
          "type": "boolean",
          "readOnly": true
        },
        "CanRead": {
          "type": "boolean",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "RecoveryPlanHyperVReplicaAzureFailbackInput"
    },
    "RecoveryPlanInMageAzureV2FailoverInput": {
      "description": "Recovery plan InMageAzureV2 failover input.",
      "required": [
        "vaultLocation",
        "recoveryPointType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
        }
      ],
      "properties": {
        "vaultLocation": {
          "description": "Gets or sets the vault location.",
          "type": "string"
        },
        "recoveryPointType": {
          "description": "Gets or sets the recovery point type.",
          "enum": [
            "Latest",
            "LatestApplicationConsistent",
            "LatestCrashConsistent",
            "LatestProcessed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InMageV2RpRecoveryPointType",
            "modelAsString": true
          }
        },
        "CanWrite": {
          "description": "Gets a value indicating whether this Newtonsoft.Json.JsonConverter can write JSON",
          "type": "boolean",
          "readOnly": true
        },
        "CanRead": {
          "type": "boolean",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "RecoveryPlanInMageAzureV2FailoverInput"
    },
    "RecoveryPlanInMageFailoverInput": {
      "description": "Recovery plan InMage failover input.",
      "required": [
        "recoveryPointType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
        }
      ],
      "properties": {
        "recoveryPointType": {
          "description": "Gets or sets the recovery point type.",
          "enum": [
            "LatestTime",
            "LatestTag",
            "Custom"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RpInMageRecoveryPointType",
            "modelAsString": true
          }
        },
        "CanWrite": {
          "description": "Gets a value indicating whether this Newtonsoft.Json.JsonConverter can write JSON",
          "type": "boolean",
          "readOnly": true
        },
        "CanRead": {
          "type": "boolean",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "RecoveryPlanInMageFailoverInput"
    },
    "RecoveryPlanA2AFailoverInput": {
      "description": "Recovery plan A2A failover input.",
      "required": [
        "recoveryPointType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
        }
      ],
      "properties": {
        "recoveryPointType": {
          "description": "Gets or sets the recovery point type.",
          "enum": [
            "Latest",
            "LatestApplicationConsistent",
            "LatestCrashConsistent",
            "LatestProcessed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "A2ARpRecoveryPointType",
            "modelAsString": true
          }
        },
        "cloudServiceCreationOption": {
          "description": "Gets or sets a value indicating whether to use recovery cloud service for TFO or not.",
          "type": "string"
        },
        "CanWrite": {
          "description": "Gets a value indicating whether this Newtonsoft.Json.JsonConverter can write JSON",
          "type": "boolean",
          "readOnly": true
        },
        "CanRead": {
          "type": "boolean",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "RecoveryPlanA2AFailoverInput"
    },
    "AzureFabricSpecificDetails": {
      "description": "Azure Fabric Specific Details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificDetails"
        }
      ],
      "properties": {
        "location": {
          "description": "Gets or sets the Location for the Azure fabric.",
          "type": "string"
        },
        "containerIds": {
          "description": "Gets or sets the container Ids for the Azure fabric.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "AzureFabricSpecificDetails"
    },
    "VmmDetails": {
      "description": "VMM fabric specific details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificDetails"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "VmmDetails"
    },
    "HyperVSiteDetails": {
      "description": "HyperVSite fabric specific details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificDetails"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "HyperVSiteDetails"
    },
    "VMwareDetails": {
      "description": "Store the fabric details specific to the VMware fabric.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificDetails"
        }
      ],
      "properties": {
        "processServers": {
          "description": "Gets or sets the list of Process Servers associated with the fabric.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessServer"
          }
        },
        "masterTargetServers": {
          "description": "Gets or sets the list of Master Target servers associated with\r\n            the fabric.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MasterTargetServer"
          }
        },
        "runAsAccounts": {
          "description": "Gets or sets the list of run as accounts created on the server.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RunAsAccount"
          }
        },
        "replicationPairCount": {
          "description": "Gets or sets the number of replication pairs configured in this CS.",
          "type": "string"
        },
        "processServerCount": {
          "description": "Gets or sets the number of process servers.",
          "type": "string"
        },
        "agentCount": {
          "description": "Gets or sets the number of source and target servers configured to talk to this CS.",
          "type": "string"
        },
        "protectedServers": {
          "description": "Gets or sets the number of protected servers.",
          "type": "string"
        },
        "systemLoad": {
          "description": "Gets or sets the percentage of the system load.",
          "type": "string"
        },
        "systemLoadStatus": {
          "description": "Gets or sets the system load status.",
          "type": "string"
        },
        "cpuLoad": {
          "description": "Gets or sets the percentage of the CPU load.",
          "type": "string"
        },
        "cpuLoadStatus": {
          "description": "Gets or sets the CPU load status.",
          "type": "string"
        },
        "totalMemoryInBytes": {
          "format": "int64",
          "description": "Gets or sets the total memory.",
          "type": "integer"
        },
        "availableMemoryInBytes": {
          "format": "int64",
          "description": "Gets or sets the available memory.",
          "type": "integer"
        },
        "memoryUsageStatus": {
          "description": "Gets or sets the memory usage status.",
          "type": "string"
        },
        "totalSpaceInBytes": {
          "format": "int64",
          "description": "Gets or sets the total space.",
          "type": "integer"
        },
        "availableSpaceInBytes": {
          "format": "int64",
          "description": "Gets or sets the available space.",
          "type": "integer"
        },
        "spaceUsageStatus": {
          "description": "Gets or sets the space usage status.",
          "type": "string"
        },
        "webLoad": {
          "description": "Gets or sets the web load.",
          "type": "string"
        },
        "webLoadStatus": {
          "description": "Gets or sets the web load status.",
          "type": "string"
        },
        "databaseServerLoad": {
          "description": "Gets or sets the database server load.",
          "type": "string"
        },
        "databaseServerLoadStatus": {
          "description": "Gets or sets the database server load status.",
          "type": "string"
        },
        "csServiceStatus": {
          "description": "Gets or sets the CS service status.",
          "type": "string"
        },
        "ipAddress": {
          "description": "Gets or sets the IP address.",
          "type": "string"
        },
        "agentVersion": {
          "description": "Gets or sets the agent Version.",
          "type": "string"
        },
        "hostName": {
          "description": "Gets or sets the host name.",
          "type": "string"
        },
        "lastHeartbeat": {
          "format": "date-time",
          "description": "Gets or sets the last heartbeat received from CS server.",
          "type": "string"
        },
        "versionStatus": {
          "description": "Gets or sets version status",
          "type": "string"
        },
        "sslCertExpiryDate": {
          "format": "date-time",
          "description": "Gets or sets CS SSL cert expiry date.",
          "type": "string"
        },
        "sslCertExpiryRemainingDays": {
          "format": "int32",
          "description": "Gets or sets CS SSL cert expiry date.",
          "type": "integer"
        },
        "psTemplateVersion": {
          "description": "Gets or sets PS template version.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "VMwareDetails"
    },
    "ProcessServer": {
      "description": "Details of the Process Server.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "Gets or sets the Process Server's friendly name.",
          "type": "string"
        },
        "id": {
          "description": "Gets or sets the Process Server Id.",
          "type": "string"
        },
        "ipAddress": {
          "description": "Gets or sets the IP address of the server.",
          "type": "string"
        },
        "osType": {
          "description": "Gets or sets the OS type of the server.",
          "type": "string"
        },
        "agentVersion": {
          "description": "Gets or sets the version of the scout component on the server.",
          "type": "string"
        },
        "lastHeartbeat": {
          "format": "date-time",
          "description": "Gets or sets the last heartbeat received from the server.",
          "type": "string"
        },
        "versionStatus": {
          "description": "Gets or sets version status",
          "type": "string"
        },
        "mobilityServiceUpdates": {
          "description": "Gets or sets the list of the mobility service updates available on the\r\n            Process Server.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MobilityServiceUpdate"
          }
        },
        "hostId": {
          "description": "Gets or sets the agent generated Id.",
          "type": "string"
        },
        "machineCount": {
          "description": "Gets or sets the servers configured with this PS.",
          "type": "string"
        },
        "replicationPairCount": {
          "description": "Gets or sets the number of replication pairs configured in this PS.",
          "type": "string"
        },
        "systemLoad": {
          "description": "Gets or sets the percentage of the system load.",
          "type": "string"
        },
        "systemLoadStatus": {
          "description": "Gets or sets the system load status.",
          "type": "string"
        },
        "cpuLoad": {
          "description": "Gets or sets the percentage of the CPU load.",
          "type": "string"
        },
        "cpuLoadStatus": {
          "description": "Gets or sets the CPU load status.",
          "type": "string"
        },
        "totalMemoryInBytes": {
          "format": "int64",
          "description": "Gets or sets the total memory.",
          "type": "integer"
        },
        "availableMemoryInBytes": {
          "format": "int64",
          "description": "Gets or sets the available memory.",
          "type": "integer"
        },
        "memoryUsageStatus": {
          "description": "Gets or sets the memory usage status.",
          "type": "string"
        },
        "totalSpaceInBytes": {
          "format": "int64",
          "description": "Gets or sets the total space.",
          "type": "integer"
        },
        "availableSpaceInBytes": {
          "format": "int64",
          "description": "Gets or sets the available space.",
          "type": "integer"
        },
        "spaceUsageStatus": {
          "description": "Gets or sets the space usage status.",
          "type": "string"
        },
        "psServiceStatus": {
          "description": "Gets or sets the PS service status.",
          "type": "string"
        },
        "sslCertExpiryDate": {
          "format": "date-time",
          "description": "Gets or sets the PS SSL cert expiry date.",
          "type": "string"
        },
        "sslCertExpiryRemainingDays": {
          "format": "int32",
          "description": "Gets or sets CS SSL cert expiry date.",
          "type": "integer"
        }
      }
    },
    "MasterTargetServer": {
      "description": "Details of a Master Target Server.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets or sets the server Id.",
          "type": "string"
        },
        "ipAddress": {
          "description": "Gets or sets the IP address of the server.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the server name.",
          "type": "string"
        },
        "osType": {
          "description": "Gets or sets the OS type of the server.",
          "type": "string"
        },
        "agentVersion": {
          "description": "Gets or sets the version of the scout component on the server.",
          "type": "string"
        },
        "lastHeartbeat": {
          "format": "date-time",
          "description": "Gets or sets the last heartbeat received from the server.",
          "type": "string"
        },
        "versionStatus": {
          "description": "Gets or sets version status",
          "type": "string"
        },
        "retentionVolumes": {
          "description": "Gets or sets the retention volumes of Master target Server.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RetentionVolume"
          }
        },
        "dataStores": {
          "description": "Gets or sets the list of data stores in the fabric.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataStore"
          }
        }
      }
    },
    "RunAsAccount": {
      "description": "CS Accounts Details.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "Gets or sets the CS RunAs account Id.",
          "type": "string"
        },
        "accountName": {
          "description": "Gets or sets the CS RunAs account name.",
          "type": "string"
        }
      }
    },
    "MobilityServiceUpdate": {
      "description": "The Mobility Service update details.",
      "type": "object",
      "properties": {
        "version": {
          "description": "Gets or sets the version of the latest update.",
          "type": "string"
        },
        "rebootStatus": {
          "description": "Gets or sets the reboot status of the update - whether it is required or not.",
          "type": "string"
        },
        "osType": {
          "description": "Gets or sets the OS type.",
          "type": "string"
        }
      }
    },
    "RetentionVolume": {
      "description": "The retention details of the MT.",
      "type": "object",
      "properties": {
        "volumeName": {
          "description": "Gets or sets the volume name.",
          "type": "string"
        },
        "capacityInBytes": {
          "format": "int64",
          "description": "Gets or sets the volume capacity.",
          "type": "integer"
        },
        "freeSpaceInBytes": {
          "format": "int64",
          "description": "Gets or sets the free space available in this volume.",
          "type": "integer"
        },
        "thresholdPercentage": {
          "format": "int32",
          "description": "Gets or sets the threshold percentage.",
          "type": "integer"
        }
      }
    },
    "DataStore": {
      "description": "The datastore details of the MT.",
      "type": "object",
      "properties": {
        "symbolicName": {
          "description": "Gets or sets the symbolic name of data store.",
          "type": "string"
        },
        "uuid": {
          "description": "Gets or sets the uuid of data store.",
          "type": "string"
        },
        "capacity": {
          "description": "Gets or sets the capacity of data store in GBs.",
          "type": "string"
        },
        "freeSpace": {
          "description": "Gets or sets the free space of data store in GBs.",
          "type": "string"
        },
        "type": {
          "description": "Gets or sets the type of data store.",
          "type": "string"
        }
      }
    },
    "AzureFabricCreationInput": {
      "description": "Fabric provider specific settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificCreationInput"
        }
      ],
      "properties": {
        "location": {
          "description": "Gets or sets the Location.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "AzureFabricCreationInput"
    },
    "Resource": {
      "description": "Azure resource.",
      "properties": {
        "id": {
          "description": "Resource Id",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Resource Type",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Resource Location",
          "type": "string"
        }
      },
      "x-ms-azure-resource": true
    }
  },
  "parameters": {
    "SubscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The subscription Id.",
      "required": true,
      "type": "string"
    },
    "ResourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group where the recovery services vault is present.",
      "required": true,
      "type": "string"
    },
    "ResourceNamespace": {
      "name": "resourceNamespace",
      "in": "path",
      "description": "The namespace of the resource. Supported are Microsoft.SiteRecovery and Microsoft.RecoveryServices for production.",
      "required": true,
      "type": "string",
      "default": "Microsoft.RecoveryServices"
    },
    "ResourceType": {
      "name": "resourceType",
      "in": "path",
      "description": "The type of the resource. Supported are SiteRecovery and vault for production.",
      "required": true,
      "type": "string",
      "default": "vaults"
    },
    "ResourceName": {
      "name": "resourceName",
      "in": "path",
      "description": "The name of the recovery services vault.",
      "required": true,
      "type": "string"
    },
    "ApiVersion": {
      "name": "api-version",
      "in": "query",
      "description": "Client Api Version.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account."
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}