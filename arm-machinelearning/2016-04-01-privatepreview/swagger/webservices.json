{
  "swagger": "2.0",
  "info": {
    "title": "Machine Learning Web Services Management Client APIs",
    "description": "These APIs allows end users to operate on Web Services in Azure ML. They support the following operations:<ul><li>Create a Web Service</li><li>Get a Web Service</li><li>Patch a Web Service</li><li>Delete a Web Service</li><li>Get All Web Services in a Resource Group </li><li>Get All Web Services in a Subscription</li><li>Get Web Services Keys</li><li>Check Name Availability</li><li>Get All Available Operations</li></ul>",
    "version": "2016-04-01-privatepreview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/json"
  ],
  "produces": [
    "application/json",
    "text/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}": {
      "put": {
        "operationId": "CreateOrUpdateWebService",
        "description": "Create a new Web Service or update an existing one.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WebServiceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/CreateOrUpdateWebServiceRequestPayloadSchema"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/WebService"
            }
          }
        }
      },
      "get": {
        "operationId": "GetWebService",
        "description": "Retrieve a Web Service information by its name",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WebServiceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebService"
            }
          }
        }
      },
      "patch": {
        "operationId": "PatchWebService",
        "description": "Patch an existing Web Service",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WebServiceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/PatchWebServiceRequestPayloadSchema"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebService"
            }
          }
        }
      },
      "delete": {
        "operationId": "DeleteWebService",
        "description": "Delete an existing Web Service",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WebServiceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No-Content. The Web Service is not found."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}/keys": {
      "get": {
        "operationId": "GetWebServiceKeys",
        "description": "Get the primary and secondary keys of a particular Web Service",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WebServiceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebServiceKeys"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices": {
      "get": {
        "operationId": "GetWebServicesInResourceGroup",
        "description": "Retrieve all Web Services' information in a given Resource Group",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedWebServicesList"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearning/webServices": {
      "get": {
        "operationId": "GetWebServicesInSubscription",
        "description": "Get all Web Services' information in current Azure subscription",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedWebServicesList"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft/MachineLearning/checkNameAvailability": {
      "post": {
        "operationId": "CheckNameAvaliability",
        "description": "Check the Web Service Name is valid and not in use",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/CheckNameAvailabilitySchema"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CheckNameResult"
            }
          }
        }
      }
    },
    "/providers/Microsoft.MachineLearning/operations": {
      "get": {
        "operationId": "GetOperations",
        "description": "Get all available operations of a Web Service",
        "parameters": [
          {
            "$ref": "#/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of Operations",
                  "items": {
                    "$ref": "#/definitions/OperationSchema"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
      "in": "path",
      "type": "string",
      "required": true
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "description": "The name of the resource group within the user's subscription.",
      "in": "path",
      "type": "string",
      "required": true
    },
    "WebServiceNameParameter": {
      "name": "webServiceName",
      "description": "The Web Service name which you want to reach.",
      "in": "path",
      "type": "string",
      "required": true
    },
    "APIVersionParameter": {
      "in": "query",
      "name": "api-version",
      "type": "string",
      "description": "Client Api Version.",
      "required": true,
      "enum": [ "2016-02-01-preview" ]
    },
    "CreateOrUpdateWebServiceRequestPayloadSchema": {
      "in": "body",
      "name": "createOrUpdatePayload",
      "description": "The payload to create or update a Web Service",
      "required": true,
      "schema": {
        "$ref": "#/definitions/WebService"
      }
    },
    "PatchWebServiceRequestPayloadSchema": {
      "in": "body",
      "name": "patchPayload",
      "description": "[TODO] Patch Web Service Request Payload. It indicates all fields could be pacthed.",
      "required": true,
      "schema": {
        "$ref": "#/definitions/WebService"
      }
    },
    "CheckNameAvailabilitySchema": {
      "in": "body",
      "name": "checkNameAvailabilityPayload",
      "description": "The payload to check name availability",
      "required": true,
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The Web Service Name"
          },
          "type": {
            "type": "string",
            "description": "The Web Service Type"
          }
        }
      }
    }
  },
  "definitions": {
    "WebService": {
      "type": "object",
      "title": "[TODO] The Web Service Object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/WebServiceProperties"
        }
      }
    },
    "WebServiceProperties": {
      "type": "object",
      "description": "The definition of the web service being deployed.",
      "required": [
        "packageType"
      ],
      "discriminator": "packageType",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description the web service"
        },
        "createdOn": {
          "type": "string",
          "description": "The moment of time the web service was created.",
          "format": "date-time"
        },
        "modifiedOn": {
          "type": "string",
          "description": "The last moment of time the web service was last modified.",
          "format": "date-time"
        },
        "provisioningState": {
          "type": "string",
          "description": "[TODO] web service's provisioning state",
          "enum": [
            "Unknown",
            "Provisioning"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": false
          }
        },
        "keys": {
          "$ref": "#/definitions/WebServiceKeys"
        },
        "readOnly": {
          "type": "boolean",
          "description": "True, if the Web Service should be read-only; False, otherwise"
        },
        "swaggerUri": {
          "type": "string",
          "description": "The uri for the swagger spec associated with this web service"
        },
        "realtimeConfiguration": {
          "$ref": "#/definitions/RealtimeConfiguration"
        },
        "diagnostics": {
          "$ref": "#/definitions/DiagnosticsConfiguration"
        },
        "storageAccount": {
          "$ref": "#/definitions/StorageAccount"
        },
        "machineLearningWorkspace": {
          "$ref": "#/definitions/MachineLearningWorkspace"
        },
        "commitmentPlan": {
          "$ref": "#/definitions/CommitmentPlan"
        },
        "input": {
          "$ref": "#/definitions/ModuleInterfaceSchema"
        },
        "output": {
          "$ref": "#/definitions/ModuleInterfaceSchema"
        },
        "assets": {
          "$ref": "#/definitions/AssetProperties"
        },
        "parameters": {
          "type": "object",
          "description": "[TODO] Parameters of module package",
          "additionalProperties": {
            "type": "string"
          }
        },
        "packageType": {
          "type": "string",
          "description": "[TODO] Module package type",
          "enum": [
            "Code",
            "Graph"
          ]
        }
      }
    },
    "WebServicePropertiesForGraph": {
      "description": "[TODO] Payload for Graph package",
      "x-ms-discriminator-value": "Graph",
      "allOf": [
        {
          "$ref": "#/definitions/WebServiceProperties"
        }
      ],
      "properties": {
        "package": {
          "type": "object",
          "description": "[TODO] Graph Package",
          "properties": {
            "nodes": {
              "type": "array",
              "description": "[TODO] Graph nodes collection",
              "items": {
                "$ref": "#/definitions/GraphNodeKeyPair"
              }
            },
            "edges": {
              "type": "array",
              "description": "[TODO] List of Graph Edges",
              "items": {
                "$ref": "#/definitions/GraphEdge"
              }
            },
            "graphParameters": {
              "type": "array",
              "description": "[TODO] Graph parameter collection",
              "items": {
                "$ref": "#/definitions/GraphParameterKeyPair"
              }
            }
          }
        }
      }
    },
    "WebServicePropertiesForCode": {
      "description": "[TODO] Payload for Code package",
      "x-ms-discriminator-value": "Code",
      "allOf": [
        {
          "$ref": "#/definitions/WebServiceProperties"
        }
      ],
      "properties": {
        "package": {
          "type": "object",
          "description": "[TODO] Code Package",
          "properties": {
            "language": {
              "type": "string",
              "description": "[TODO] The language of source code",
              "enum": [
                "Python-2.7",
                "R-3.1"
              ]
            },
            "sourceCode": {
              "type": "string",
              "description": "[TODO] The source code"
            },
            "zipFileAssetId": {
              "type": "string",
              "description": "[TODO] Zip file's Asset ID"
            }
          }
        }
      }
    },
    "WebServiceKeys": {
      "type": "object",
      "description": "Web Service Keys",
      "properties": {
        "primary": {
          "type": "string",
          "description": "The Primary Key"
        },
        "secondary": {
          "type": "string",
          "description": "The Secondary Key"
        }
      }
    },
    "PaginatedWebServicesList": {
      "type": "object",
      "description": "[TODO] Paginated list of web services",
      "properties": {
        "values": {
          "type": "array",
          "description": "List of Web Services",
          "items": {
            "$ref": "#/definitions/WebService"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "[TODO] Next Link"
        }
      }
    },
    "OperationSchema": {
      "type": "object",
      "description": "[TODO] The Web Service Operation Description",
      "properties": {
        "name": {
          "type": "string",
          "description": "The operation name"
        },
        "display": {
          "type": "object",
          "description": "[TODO] Display",
          "properties": {
            "provider": {
              "type": "string",
              "description": "[TODO] Provider",
              "default": "Machine Learning"
            },
            "resource": {
              "type": "string",
              "description": "[TODO] Resource",
              "default": "Web Service"
            },
            "operation": {
              "type": "string",
              "description": "[TODO] Operation"
            },
            "description": {
              "type": "string",
              "description": "[TODO] Description"
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "[TODO] Origin",
          "enum": [
            "user",
            "system",
            "user, system"
          ]
        }
      }
    },
    "RealtimeConfiguration": {
      "type": "object",
      "description": "Configuration settings for RRS",
      "properties": {
        "maxConcurrentCalls": {
          "type": "integer",
          "description": "[TODO] Max Concurrent Calls"
        }
      }
    },
    "DiagnosticsConfiguration": {
      "type": "object",
      "description": "The Diagnostics Settings",
      "properties": {
        "level": {
          "type": "string",
          "description": "Trace Level: None, Error, All",
          "enum": [
            "None",
            "Error",
            "All"
          ]
        },
        "expiry": {
          "type": "string",
          "description": "[TODO] Expiry"
        }
      }
    },
    "StorageAccount": {
      "type": "object",
      "description": "[TODO] The Storage Account used in GraphSharp",
      "properties": {
        "id": {
          "type": "string",
          "description": "[TODO] The storage account's Id"
        },
        "name": {
          "type": "string",
          "description": "[TODO] The storage account's name"
        },
        "primaryKey": {
          "type": "string",
          "description": "[TODO] The storage account's primary key"
        },
        "secondaryKey": {
          "type": "string",
          "description": "[TODO] The storage account's secondary key"
        }
      }
    },
    "MachineLearningWorkspace": {
      "type": "object",
      "description": "[TODO] The machine learning workspace",
      "properties": {
        "id": {
          "type": "string",
          "description": "[TODO] The Workspace ID"
        }
      }
    },
    "CommitmentPlan": {
      "type": "object",
      "description": "[TODO] The commitment plan associated with this web service",
      "properties": {
        "id": {
          "type": "string",
          "description": "[TODO] The plan's ID"
        }
      }
    },
    "ModuleInterfaceSchema": {
      "type": "object",
      "description": "[TODO] The swagger schema describing the service's input.",
      "properties": {
        "title": {
          "type": "string",
          "description": "[TODO] Interface title"
        },
        "description": {
          "type": "string",
          "description": "[TODO] Description of the interface"
        },
        "format": {
          "type": "string",
          "description": "[TODO] Format of the interface"
        },
        "type": {
          "type": "string",
          "description": "[TODO] Interface properties' type. Always use 'object' here.",
          "default": "object"
        },
        "properties": {
          "type": "array",
          "description":  "[TODO]",
          "items": {
            "$ref": "#/definitions/DataTableKeyValuePair"
          }
        }
      }
    },
    "DataTableSchema": {
      "type": "object",
      "description": "[TODO] schema for a data table",
      "properties": {
        "title": {
          "type": "string",
          "description": "[TODO] Table title"
        },
        "description": {
          "type": "string",
          "description": "[TODO] Table description"
        },
        "type": {
          "type": "string",
          "description": "[TODO] Table properties' type. Always use 'object' here.",
          "default": "object"
        },
        "format": {
          "type": "string",
          "description": "[TODO] Table format"
        },
        "properties": {
          "type": "array",
          "description": "The set of columns within the data table",
          "items": {
            "$ref": "#/definitions/DataTableColumnKeyPair"
          }
        }
      }
    },
    "DataTableKeyValuePair": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/DataTableSchema"
        }
      }
    },
    "DataTableColumnSchema": {
      "type": "object",
      "description": "[TODO] input column.",
      "properties": {
        "type": {
          "type": "string",
          "description": "[TODO] Data type"
        },
        "format": {
          "type": "string",
          "description": "[TODO] Data format"
        },
        "enum": {
          "type": "array",
          "description": "[TODO] Options",
          "items": {
            "type": "object"
          }
        },
        "x-ms-isnullable": {
          "type": "boolean",
          "description": "[TODO] Is nullable"
        },
        "x-ms-isordered": {
          "type": "boolean",
          "description": "[TODO] Is enum in order"
        }
      }
    },
    "DataTableColumnKeyPair": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/DataTableColumnSchema"
        }
      }
    },
    "AssetProperties": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/AssetItem"
      }
    },
    "AssetItem": {
      "type": "object",
      "description": "[TODO] Service asset details",
      "properties": {
        "name": {
          "type": "string",
          "description": "Module friendly name"
        },
        "type": {
          "type": "string",
          "description": "Module type",
          "default": "module"
        },
        "location": {
          "$ref": "#/definitions/AssetLocation"
        },
        "inputPorts": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AssetPort"
          }
        },
        "outputPorts": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AssetPort"
          }
        },
        "parameters": {
          "$ref": "#/definitions/AssetParameters"
        },
        "metadata": {
          "$ref": "#/definitions/AssetMetadata"
        }
      }
    },
    "AssetLocation": {
      "type": "object",
      "description": "[TODO] Asset Location",
      "properties": {
        "uri": {
          "type": "string",
          "description": "[TODO] Location URI, https:// OR aml:// OR idv :// OR hdfs://",
          "format": "url"
        },
        "credentials": {
          "type": "string",
          "description": "[TODO] null if in BYOS / SAS token / connection string / user asset partition key (when in graphSharp)/ etc."
        }
      }
    },
    "AssetPort": {
      "type": "object",
      "description": "[TODO] Asset Port",
      "properties": {
        "type": {
          "type": "string",
          "description": "[TODO] dataset or zip"
        }
      }
    },
    "AssetParameters": {
      "type": "object",
      "description": "[TODO] Asset parameters",
      "additionalProperties": {
        "type": "string",
        "description": "[TODO] Parameter value"
      }
    },
    "AssetMetadata": {
      "type": "object",
      "description": "[TODO] Asset metadata",
      "additionalProperties": {
        "type": "string",
        "description": "[TODO] Metadata value"
      }
    },
    "GraphNode": {
      "type": "object",
      "description": "[TODO] Graph Node",
      "properties": {
        "assetId": {
          "type": "string",
          "description": "[TODO] Asset ID"
        },
        "inputId": {
          "type": "string",
          "description": "[TODO] Input ID"
        },
        "outputId": {
          "type": "string",
          "description": "[TODO] Output ID"
        },
        "parameters": {
          "type": "object",
          "description": "[TODO] Node Parameters",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GraphNodeKeyPair": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/GraphNode"
        }
      }
    },
    "GraphEdge": {
      "type": "object",
      "description": "[TODO] Graph edge",
      "properties": {
        "sourceNodeId": {
          "type": "string",
          "description": "[TODO] Edge source"
        },
        "sourceOutputPortId": {
          "type": "string",
          "description": "[TODO] Source node output port id"
        },
        "targetNodeId": {
          "type": "string",
          "description": "[TODO] Edge target"
        },
        "targetInputPortId": {
          "type": "string",
          "description": "[TODO] Target node input port id"
        }
      }
    },
    "GraphParameter": {
      "type": "object",
      "description": "[TODO] Graph Parameters",
      "properties": {
        "description": {
          "type": "string",
          "description": "[TODO] Description of this Graph parameter"
        },
        "links": {
          "type": "array",
          "description": "[TODO] Links of this parameter",
          "items": {
            "$ref": "#/definitions/GraphParameterLink"
          }
        },
        "parameterRules": {
          "type": "array",
          "description": "[TODO] Rules for this parameter",
          "items": {
            "$ref": "#/definitions/GraphParameterRule"
          }
        }
      }
    },
    "GraphParameterLink": {
      "type": "object",
      "description": "[TODO] The link in graph parameter",
      "properties": {
        "nodeId": {
          "type": "string",
          "description": "[TODO] The node ID"
        },
        "parameterKey": {
          "type": "string",
          "description": "[TODO] The parameter key"
        }
      }
    },
    "GraphParameterRule": {
      "type": "object",
      "description": "[TODO] A rule for a graph parameter"
    },
    "GraphParameterKeyPair": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/GraphParameter"
        }
      }
    },
    "Resource": {
      "required": [
        "location"
      ],
      "properties": {
        "id": {
          "description": "Resource Id",
          "type": "string"
        },
        "name": {
          "description": "Resource Name",
          "type": "string"
        },
        "location": {
          "description": "Resource Location",
          "type": "string"
        },
        "type": {
          "description": "Resource type",
          "type": "string"
        },
        "tags": {
          "description": "Resource tags",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CheckNameResult": {
      "type": "object",
      "properties": {
        "nameAvaliable": {
          "type": "boolean",
          "description": "True, if the name is available; False, otherwise"
        },
        "reason": {
          "type": "string",
          "description": "The reason why if it is not available",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ]
        },
        "message": {
          "type": "string",
          "description": ": The message from the server"
        }
      }
    }
  }
}