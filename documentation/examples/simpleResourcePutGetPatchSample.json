{
  "swagger": "2.0",
  "info": {
    "title": "SimpleResourceSample",
    "description": "A simple canonical ARM resource sample",
    "version": "2016-01-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SwaggerSample/sampleResources/{sampleResourceName}": {
      "put": {
        "tags": [
          "SwaggerSample"
        ],
        "operationId": "SampleResources_Create",
        "description": "Create an instance of your resource type. The Create suffix is used because there is a corresponding PATCH operation for this resource.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SampleResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SampleResource"
            },
            "required": true,
            "description": "Parameters used to create the sample resource"
          }
        ],
        "responses": {
          "200": {
            "description": "The created resource.",
            "schema": {
              "$ref": "#/definitions/SampleResource"
            }
          },
          "201": {
            "description": "SampleResource created. If present for a long running operation, the return value should have a status field indicating the resources status",
            "schema": {
              "$ref": "#/definitions/SampleResource"
            }
          },
          "202": {
            "description": "Create accepted. We should return no body for 202, but we should have a location header indicating where we can get more info about the progress of the create"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "SwaggerSample"
        ],
        "operationId": "SampleResources_Update",
        "description": "Update an existing instance of your resource type.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SampleResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MutableSampleResource"
            },
            "required": true,
            "description": "Parameters used to create the sample resource"
          }
        ],
        "responses": {
          "200": {
            "description": "The modified resource.",
            "schema": {
              "$ref": "#/definitions/SampleResource"
            }
          },
          "202": {
            "description": "Update accepted. We should return no body for 202, but we should have a location header indicating where we can get more info about the progress of the create"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "SwaggerSample"
        ],
        "operationId": "SampleResources_Get",
        "description": "Get an instance of your sample resource",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SampleResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The specified sample resource",
            "schema": {
              "$ref": "#/definitions/SampleResource"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SwaggerSample"
        ],
        "operationId": "SampleResources_Delete",
        "description": "Delete an instance of your sample resource",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SampleResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "MutatableResource": {
      "description": "Common resource definition containing mutable properties. TODO: move to external reference/x-swagger common definition",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "x-ms-azure-resource": true
    },
    "Resource": {
      "allOf": [
        {
          "$ref": "MutatableResource"
        }
      ],
      "description": "Common resource definition. TODO: move to external reference/x-swagger common definition",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location"
        }
      },
      "x-ms-azure-resource": true
    },
    "MutatableSampleResourceProperties": {
      "description": "The property bag defined by my resource type, listing exactly which properties are mutable",
      "properties": {
        "sampleSize": {
          "type": "integer",
          "description": "A hypothetical size. Here to illustrate how to handle resource specific read/write properties"
        }
      }
    },
    "SampleResourceProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/MutableSampleResourceProperties"
        }
      ],
      "description": "The property bag defined by my resource type. Corresponds to the 'properties' attribute for the common resource type definition",
      "properties": {
        "propertyThatCanOnlyBeSetOnCreate": {
          "type": "string",
          "description": "This property cannot be modified after the resource has been created."
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The provisioning state for this resource. Here to illustrate how to handle server generated (readOnly=true) properties"
        }
      },
      "required": [
        "sampleSize"
      ]
    },
    "MutableSampleResource": {
      "allOf": [
        {
          "$ref": "#/definitions/MutatableResource"
        }
      ],
      "description": "The (very simple) example resource type definition limited to only the properties that can be modified in a PATCH",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MutableSampleResourceProperties"
        }
      }
    },
    "SampleResource": {
      "description": "The (very simple) example resource type definition",
      "allOf": [
        {
          "$ref": "#/definitions/MutatableSampleResource"
        },
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SampleResourceProperties"
        }
      }
    }
  },
  "parameters": {
    "SampleResourceNameParameter": {
      "name": "sampleResourceName",
      "in": "path",
      "type": "string",
      "required": true,
      "pattern": "[a-zA-Z]+",
      "description": "The common definition that includes a sample constraint on out resource type's name so you don't have to specify that everywhere.",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "pattern": "[a-zA-Z]+",
      "maxLength": 42,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the resource group within the user's subscription. TODO: Move to common definitions"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. TODO: Move to common definitions"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    }
  }
}