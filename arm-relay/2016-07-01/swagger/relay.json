{
  "swagger": "2.0",
  "info": {
    "title": "Relay API",
    "description": "Use these API to manage Azure Relay resources through Azure Resources Manager.",
    "version": "2016-07-01",
    "x-ms-code-generation-settings": { "name": "RelayManagementClient" }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/json"
  ],
  "produces": [
    "application/json",
    "text/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CreateOrUpdate",
        "x-ms-examples": {
          "RelayNamespaceCreate": { "$ref": "../examples/NameSpaces/RelayNameSpaceCreate.json" }
        },
        "description": "Create Azure Relay namespace.",

        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            },
            "description": "Parameters supplied to create a Namespace Resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace create request succeeded",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          },
          "201": {
            "description": "Namespace create request accepted",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Delete",
        "x-ms-examples": {
          "RelayNameSpaceDelete": { "$ref": "../examples/NameSpaces/RelayNameSpaceDelete.json" }
        },
        "description": "Deletes an existing namespace. This operation also removes all associated resources under the namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace delete Request succeeded"
          },
          "202": {
            "description": "Namespace delete request has been accepted for processing and the operation will complete asynchronously."
          },
          "204": {
            "description": "Namespace delete request has been accepted, but the Namespace not found"
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Get",
        "x-ms-examples": {
          "RelayNameSpaceGet": { "$ref": "../examples/NameSpaces/RelayNameSpaceGet.json" }
        },
        "description": "Returns the description for the specified namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace returned successfully",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Relay/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListBySubscription",
        "x-ms-examples": {
          "RelayNameSpaceListBySubscription": { "$ref": "../examples/NameSpaces/RelayNameSpaceListBySubscription.json" }
        },
        "description": "Lists all the available namespaces within the subscription irrespective of the resourceGroups.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespaces returned successfully",
            "schema": {
              "$ref": "#/definitions/NamespaceListResult"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListByResourceGroup",
        "x-ms-examples": {
          "RelayNameSpaceListByResourceGroup": { "$ref": "../examples/NameSpaces/RelayNameSpaceListByResourceGroup.json" }
        },
        "description": "Lists all the available namespaces within the ResourceGroup.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespaces by resourcegroup returned successfully",
            "schema": {
              "$ref": "#/definitions/NamespaceListResult"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/AuthorizationRules": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListAuthorizationRules",
        "x-ms-examples": {
          "RelayNameSpaceAutorizationRuleListAll": { "$ref": "../examples/NameSpaces/RelayNameSpaceAutorizationRuleListAll.json" }
        },
        "description": "Authorization rules for a namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace Authorization rule returned successfully",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CreateOrUpdateAuthorizationRule",
        "x-ms-examples": {
          "RelayNameSpaceAuthorizationRuleCreate": { "$ref": "../examples/NameSpaces/RelayNameSpaceAuthorizationRuleCreate.json" }
        },
        "description": "Creates or Updates an authorization rule for a namespace",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace Authorization Rule Name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            },
            "description": "The shared access authorization rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request to create Namespace Authorization rule succeeded",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_DeleteAuthorizationRule",
        "x-ms-examples": {
          "RelayNameSpaceAutorizationRuleDelete": { "$ref": "../examples/NameSpaces/RelayNameSpaceAutorizationRuleDelete.json" }
        },
        "description": "Deletes a namespace authorization rule",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Authorization Rule Name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request to delete Namespace Authorization rule succeeded."
          },
          "204": {
            "description": "No Content. The request has been accepted but the Namespace Authorization rule was not found."
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_GetAuthorizationRule",
        "x-ms-examples": {
          "RelayNameSpaceAutorizationRuleGet": { "$ref": "../examples/NameSpaces/RelayNameSpaceAutorizationRuleGet.json" }
        },
        "description": "Authorization rule for a namespace by name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Authorization rule name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace Authorization rule returned successfully",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListKeys",
        "x-ms-examples": {
          "RelayNameSpaceAuthorizationRuleListKey": { "$ref": "../examples/NameSpaces/RelayNameSpaceAuthorizationRuleListKey.json" }
        },
        "description": "Primary and Secondary ConnectionStrings to the namespace ",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The authorizationRule name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_RegenerateKeys",
        "x-ms-examples": {
          "RelayNameSpaceAuthorizationRuleRegenrateKey": { "$ref": "../examples/NameSpaces/RelayNameSpaceAuthorizationRuleRegenrateKey.json" }
        },
        "description": "Regenerats the Primary or Secondary ConnectionStrings to the namespace ",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The authorizationRule name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateKeysParameters"
            },
            "description": "Parameters supplied to regenerate Auth Rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/HybridConnections/{hybridConnectionName}": {
      "put": {
        "tags": [
          "HybridConnections"
        ],
        "operationId": "HybridConnections_CreateOrUpdate",
        "x-ms-examples": {
          "RelayHybridConnectionCreate": { "$ref": "../examples/HybridConnection/RelayHybridConnectionCreate.json" }
        },
        "description": "Creates or Updates a service HybridConnection. This operation is idempotent.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "hybridConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Hybrid Connections name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HybridConnectionResource"
            },
            "description": "Parameters supplied to create a HybridConnection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request to Create Hybrid Connections succeeded",
            "schema": {
              "$ref": "#/definitions/HybridConnectionResource"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "HybridConnections"
        ],
        "operationId": "HybridConnections_Delete",
        "x-ms-examples": {
          "RelayHybridconnectionDelete": { "$ref": "../examples/HybridConnection/RelayHybridconnectionDelete.json" }
        },
        "description": "Deletes a HybridConnection .",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "hybridConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The hybrid Connection name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request to delete Hybrid Connections succeeded."
          },
          "204": {
            "description": "No Content. The request has been accepted but the Hybrid Connections was not found."
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "HybridConnections"
        ],
        "operationId": "HybridConnections_Get",
        "x-ms-examples": {
          "RelayHybridConnectionGet": { "$ref": "../examples/HybridConnection/RelayHybridConnectionGet.json" }
        },
        "description": "Returns the description for the specified HybridConnection.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "hybridConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hybrid connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved hybridConnection description",
            "schema": {
              "$ref": "#/definitions/HybridConnectionResource"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/HybridConnections": {
      "get": {
        "tags": [
          "HybridConnections"
        ],
        "operationId": "HybridConnections_ListAll",
        "x-ms-examples": {
          "RelayHybridConnectionListAll": { "$ref": "../examples/HybridConnection/RelayHybridConnectionListAll.json" }
        },
        "description": "Lists the HybridConnection within the namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request to retrieve HybridConnections by NameSpace succeeded",
            "schema": {
              "$ref": "#/definitions/HybridConnectionListResult"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/HybridConnections/{hybridConnectionName}/authorizationRules": {
      "get": {
        "tags": [
          "HybridConnections"
        ],
        "operationId": "HybridConnections_ListAuthorizationRules",
        "x-ms-examples": {
          "RelayHybridConnectionAutorizationRuleListAll": { "$ref": "../examples/HybridConnection/RelayHybridConnectionAutorizationRuleListAll.json" }
        },
        "description": "Authorization rules for a HybridConnection.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "hybridConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The HybridConnection name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rules successfully returned.",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/HybridConnections/{hybridConnectionName}/authorizationRules/{authorizationRuleName}": {
      "put": {
        "tags": [
          "HybridConnections"
        ],
        "operationId": "HybridConnections_CreateOrUpdateAuthorizationRule",
        "x-ms-examples": {
          "RelayHybridConnectionAuthorizationRuleCreate": { "$ref": "../examples/HybridConnection/RelayHybridConnectionAuthorizationRuleCreate.json" }
        },
        "description": "Creates or Updates an authorization rule for a HybridConnection",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "hybridConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hybrid connection."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Authorization Rule Name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            },
            "description": "The shared access authorization rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "HybridConnection Authorization rule created",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "HybridConnections"
        ],
        "operationId": "HybridConnections_DeleteAuthorizationRule",
        "x-ms-examples": {
          "RelayHybridConnectionAutorizationRuleDelete": { "$ref": "../examples/HybridConnection/RelayHybridConnectionAutorizationRuleDelete.json" }
        },
        "description": "Deletes a HybridConnection authorization rule",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "hybridConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hybrid connection."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Authorization Rule Name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "HybridConnection authorizationRule deleted",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "204": {
            "description": "Authorization rule does not exist",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "HybridConnections"
        ],
        "operationId": "HybridConnections_GetAuthorizationRule",
        "x-ms-examples": {
          "RelayHybridConnectionAutorizationRuleGet": { "$ref": "../examples/HybridConnection/RelayHybridConnectionAutorizationRuleGet.json" }
        },
        "description": "HybridConnection authorizationRule for a HybridConnection by name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name"
          },
          {
            "name": "hybridConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hybrid connection."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Authorization rule name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "HybridConnection AuthorizationRule returned successfully",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/HybridConnections/{hybridConnectionName}/authorizationRules/{authorizationRuleName}/ListKeys": {
      "post": {
        "tags": [
          "HybridConnections"
        ],
        "operationId": "HybridConnections_ListKeys",
        "x-ms-examples": {
          "RelayHybridConnectionAuthorizationRuleListKey": { "$ref": "../examples/HybridConnection/RelayHybridConnectionAuthorizationRuleListKey.json" }
        },
        "description": "Primary and Secondary ConnectionStrings to the HybridConnection.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "hybridConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hybrid connection."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The authorizationRule name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request to retirve ConnectionStrings to the HybridConnection succeeded",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/HybridConnection/{hybridConnectionName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "tags": [
          "HybridConnections"
        ],
        "operationId": "HybridConnections_RegenerateKeys",
        "x-ms-examples": {
          "RelayHybridConnectionAuthorizationRuleRegenrateKey": { "$ref": "../examples/HybridConnection/RelayHybridConnectionAuthorizationRuleRegenrateKey.json" }
        },
        "description": "Regenerates the Primary or Secondary ConnectionStrings to the HybridConnection",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "hybridConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the hybrid connection."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The authorizationRule name"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateKeysParameters"
            },
            "description": "Parameters supplied to regenerate Auth Rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request to regenerate ConnectionStrings to HybridConnection succeeded",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/WcfRelays/{relayName}": {
      "put": {
        "tags": [
          "WCFRelays"
        ],
        "operationId": "WCFRelays_CreateOrUpdate",
        "x-ms-examples": {
          "RelayCreate": { "$ref": "../examples/Relay/RelayCreate.json" }
        },
        "description": "Creates or Updates a WCFRelays. This operation is idempotent.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "relayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the relay."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WcfRelaysResource"
            },
            "description": "Parameters supplied to create a WCFRelays."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request to create WCFRelays succeeded",
            "schema": {
              "$ref": "#/definitions/WcfRelaysResource"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WCFRelays"
        ],
        "operationId": "WCFRelays_Delete",
        "x-ms-examples": {
          "RelayDelete": { "$ref": "../examples/Relay/RelayDelete.json" }
        },
        "description": "Deletes a WCFRelays .",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "relayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the relay."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "WCFRelays deleted."
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "WCFRelays"
        ],
        "operationId": "WCFRelays_Get",
        "x-ms-examples": {
          "RelayGet": { "$ref": "../examples/Relay/RelayGet.json" }
        },
        "description": "Returns the description for the specified WCFRelays.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "relayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the relay."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved WCFRelays description",
            "schema": {
              "$ref": "#/definitions/WcfRelaysResource"
            }
          },
          "204": {
            "description": "WCFRelays not found",
            "schema": {
              "$ref": "#/definitions/WcfRelaysResource"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/WcfRelays": {
      "get": {
        "tags": [
          "WCFRelays"
        ],
        "operationId": "WCFRelays_ListAll",
        "x-ms-examples": {
          "RelayListAll": { "$ref": "../examples/Relay/RelayListAll.json" }
        },
        "description": "Lists the WCFRelays within the namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "WCF Relays returned successfully",
            "schema": {
              "$ref": "#/definitions/WcfRelaysListResult"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/WcfRelays/{relayName}/authorizationRules": {
      "get": {
        "tags": [
          "WCFRelays"
        ],
        "operationId": "WCFRelays_ListAuthorizationRules",
        "x-ms-examples": {
          "RelayAutorizationRuleListAll": { "$ref": "../examples/Relay/RelayAutorizationRuleListAll.json" }
        },
        "description": "Authorization rules for a WCFRelays.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "relayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The WCFRelays name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rules successfully returned.",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/WcfRelays/{relayName}/authorizationRules/{authorizationRuleName}": {
      "put": {
        "tags": [
          "WCFRelays"
        ],
        "operationId": "WCFRelays_CreateOrUpdateAuthorizationRule",
        "x-ms-examples": {
          "RelayAuthorizationRuleCreate": { "$ref": "../examples/Relay/RelayAuthorizationRuleCreate.json" }
        },
        "description": "Creates or Updates an authorization rule for a WCFRelays",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "relayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the relay."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Authorization Rule Name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            },
            "description": "The shared access authorization rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "WCFRelays Authorization rule created",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WCFRelays"
        ],
        "operationId": "WCFRelays_DeleteAuthorizationRule",
        "x-ms-examples": {
          "RelayAutorizationRuleDelete": { "$ref": "../examples/Relay/RelayAutorizationRuleDelete.json" }
        },
        "description": "Deletes a WCFRelays authorization rule",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "relayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the relay."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Authorization Rule Name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request to delete WCFRelay authorizationRule succeeded",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "204": {
            "description": "Request accepted but Authorization rule does not exist",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "WCFRelays"
        ],
        "operationId": "WCFRelays_GetAuthorizationRule",
        "x-ms-examples": {
          "RelayAutorizationRuleGet": { "$ref": "../examples/Relay/RelayAutorizationRuleGet.json" }
        },
        "description": "Get authorizationRule for a WCFRelays by name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name"
          },
          {
            "name": "relayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the relay."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Authorization rule name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request for WCFRelays AuthorizationRule succeeded",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/WcfRelays/{relayName}/authorizationRules/{authorizationRuleName}/ListKeys": {
      "post": {
        "tags": [
          "WCFRelays"
        ],
        "operationId": "WCFRelays_ListKeys",
        "x-ms-examples": {
          "RelayAuthorizationRuleListKey.json": { "$ref": "../examples/Relay/RelayAuthorizationRuleListKey.json" }
        },
        "description": "Primary and Secondary ConnectionStrings to the WCFRelays.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "relayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the relay."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The authorizationRule name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/WcfRelays/{relayName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "tags": [
          "WCFRelays"
        ],
        "operationId": "WCFRelays_RegenerateKeys",
        "x-ms-examples": {
          "RelayAuthorizationRuleRegenrateKey.json": { "$ref": "../examples/Relay/RelayAuthorizationRuleRegenrateKey.json" }
        },
        "description": "Regenerates the Primary or Secondary ConnectionStrings to the WCFRelays",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "relayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the relay."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The authorizationRule name"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateKeysParameters"
            },
            "description": "Parameters supplied to regenerate Auth Rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Resource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "required": [
        "location"
      ],
      "x-ms-azure-resource": true
    },
    "HybridConnectionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HybridConnectionResource"
          },
          "description": "Result of the List HybridConnection ."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of HybridConnection operation"
        }
      },
      "description": "The response of the List HybridConnection operation."
    },
    "HybridConnectionResource": {
      "properties": {
        "type": {
          "type": "string",
          "description": "HybridConnection Resource type"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/HybridConnectionProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Description of HybridConnection Resource."
    },
    "HybridConnectionProperties": {
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The time the HybridConnection was created."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The time the namespace was updated."
        },
        "listenerCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true,
          "description": "The number of listeners for this HybridConnection. min : 1 and max:25 supported"
        },
        "requiresClientAuthorization": {
          "type": "boolean",
          "description": "true if client authorization is needed for this HybridConnection; otherwise, false."
        },
        "userMetadata": {
          "type": "string",
          "description": "usermetadata is a placeholder to store user-defined string data for the HybridConnection endpoint.e.g. it can be used to store  descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored."
        },
        "path": {
          "type": "string",
          "description": "The path of the HybridConnection."
        }
      },
      "description": "Properties of the HybridConnection."
    },
    "WcfRelaysListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WcfRelaysResource"
          },
          "description": "Result of the List WcfRelays ."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of WcfRelays operation"
        }
      },
      "description": "The response of the List WcfRelays operation."
    },
    "WcfRelaysResource": {
      "properties": {
        "type": {
          "type": "string",
          "description": "WcfRelays Resource type"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WcfRelayProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Description of WcfRelays Resource."
    },
    "WcfRelayProperties": {
      "properties": {
        "relayType": {
          "type": "string",
          "description": "WCFRelay Type.",
          "enum": [
            "NetTcp",
            "Http"
          ],
          "x-ms-enum": {
            "name": "Relaytype",
            "modelAsString": false
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The time the WCFRelay was created."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The time the namespace was updated."
        },
        "listenerCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true,
          "description": "The number of listeners for this relay. min : 1 and max:25 supported"
        },
        "requiresClientAuthorization": {
          "type": "boolean",
          "description": "true if client authorization is needed for this relay; otherwise, false."
        },
        "requiresTransportSecurity": {
          "type": "boolean",
          "description": "true if transport security is needed for this relay; otherwise, false."
        },
        "isDynamic": {
          "type": "boolean",
          "readOnly": true,
          "description": "true if the relay is dynamic; otherwise, false."
        },
        "userMetadata": {
          "type": "string",
          "description": "usermetadata is a placeholder to store user-defined string data for the HybridConnection endpoint.e.g. it can be used to store  descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored."
        }
      },
      "description": "Properties of the Namespace."
    },
    "NamespaceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamespaceResource"
          },
          "description": "Result of the List Namespace operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of Namespaces"
        }
      },
      "description": "The response of the List Namespace operation."
    },
    "NamespaceResource": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku"
        },
        "type": {
          "type": "string",
          "description": "Resource type"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NamespaceProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Description of a Namespace resource."
    },
    "NamespaceProperties": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the namespace."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The time the namespace was created."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The time the namespace was updated."
        },
        "serviceBusEndpoint": {
          "type": "string",
          "description": "Endpoint you can use to perform Service Bus operations."
        },
        "enabled": {
          "type": "boolean",
          "description": "true if client authorization is needed for this relay; otherwise, false."
        }
      },
      "description": "Properties of the Namespace."
    },
    "Sku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of this Sku",
          "enum": [
            "Standard"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "description": "The tier of this particular SKU",
          "enum": [
            "Standard"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": true
          }
        }
      },
      "required": [
        "name",
        "tier"
      ],
      "description": "Sku of the Namespace."
    },
    "SharedAccessAuthorizationRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
          },
          "description": "Result of the List AuthorizationRules operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of AuthorizationRules"
        }
      },
      "description": "The response of the List Namespace operation."
    },
    "SharedAccessAuthorizationRuleResource": {
      "properties": {
        "type": {
          "type": "string",
          "description": "Resource type"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SharedAccessAuthorizationRuleProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Description of a Namespace AuthorizationRules."
    },
    "SharedAccessAuthorizationRuleProperties": {
      "properties": {
        "rights": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "Manage",
              "Send",
              "Listen"
            ],
            "x-ms-enum": {
              "name": "AccessRights",
              "modelAsString": false
            }
          },
          "description": "The rights associated with the rule."
        }
      },
      "required": [
        "rights"
      ],
      "description": "SharedAccessAuthorizationRule properties."
    },
    "ResourceListKeys": {
      "properties": {
        "primaryConnectionString": {
          "type": "string",
          "description": "PrimaryConnectionString of the created Namespace AuthorizationRule."
        },
        "secondaryConnectionString": {
          "type": "string",
          "description": "SecondaryConnectionString of the created Namespace AuthorizationRule"
        },
        "primaryKey": {
          "type": "string",
          "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token"
        },
        "secondaryKey": {
          "type": "string",
          "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token"
        },
        "keyName": {
          "type": "string",
          "description": "A string that describes the authorization rule"
        }
      },
      "description": "Namespace/Relay Connection String"
    },
    "RegenerateKeysParameters": {
      "properties": {
        "Policykey": {
          "type": "string",
          "description": "Key that needs to be regenerated.",
          "enum": [
            "PrimaryKey",
            "SecondaryKey"
          ],
          "x-ms-enum": {
            "name": "Policykey",
            "modelAsString": false
          }
        }
      },
      "description": "Parameters supplied to the Regenerate Authorization Rule operation."
    },
    "ErrorResponse": {
      "description": "Error reponse indicates Relay service is not able to process the incoming request. The reason is provided in the error message.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string"
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    }
  }
}