{
  "swagger": "2.0",
  "info": {
    "title": "DataLakeAnalyticsAccountManagementClient",
    "description": "Creates an Azure Data Lake Analytics account management client.",
    "version": "2016-11-01",
    "x-ms-code-generation-settings": {
      "internalConstructors": true
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/computePolicies/{computePolicyName}": {
      "put": {
        "tags": [
          "ComputePolicies"
        ],
        "operationId": "ComputePolicies_CreateOrUpdate",
        "description": "Creates or updates the specified compute policy. During update, the compute policy with the specified name will be replaced with this new compute policy. An account supports, at most, 50 policies",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account to add or replace the compute policy."
          },
          {
            "name": "computePolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the compute policy to create or update."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ComputePolicyCreateOrUpdateParameters"
            },
            "description": "Parameters supplied to create or update the compute policy. The max degree of parallelism per job property, min priority per job property, or both must be present."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the specified compute policy",
            "schema": {
              "$ref": "#/definitions/ComputePolicy"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ComputePolicies"
        ],
        "operationId": "ComputePolicies_Update",
        "description": "Updates the specified compute policy.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account to which to update the compute policy."
          },
          {
            "name": "computePolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the compute policy to update."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ComputePolicy"
            },
            "description": "Parameters supplied to update the compute policy."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the specified compute policy",
            "schema": {
              "$ref": "#/definitions/ComputePolicy"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ComputePolicies"
        ],
        "operationId": "ComputePolicies_Delete",
        "description": "Deletes the specified compute policy from the specified Data Lake Analytics account",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account from which to delete the compute policy."
          },
          {
            "name": "computePolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the compute policy to delete."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the specified compute policy"
          },
          "204": {
            "description": "The specified compute policy does not exist or was already deleted."
          }
        }
      },
      "get": {
        "tags": [
          "ComputePolicies"
        ],
        "operationId": "ComputePolicies_Get",
        "description": "Gets the specified Data Lake Analytics compute policy.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account from which to get the compute policy."
          },
          {
            "name": "computePolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the compute policy to retrieve."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the specified compute policy.",
            "schema": {
              "$ref": "#/definitions/ComputePolicy"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/computePolicies": {
      "get": {
        "tags": [
          "ComputePolicies"
        ],
        "operationId": "ComputePolicies_ListByAccount",
        "description": "Lists the Data Lake Analytics compute policies within the specified Data Lake Analytics account. An account supports, at most, 50 policies",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account from which to get the compute policies."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed the compute policies.",
            "schema": {
              "$ref": "#/definitions/ComputePolicyListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/firewallRules/{firewallRuleName}": {
      "put": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_CreateOrUpdate",
        "description": "Creates or updates the specified firewall rule. During update, the firewall rule with the specified name will be replaced with this new firewall rule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account to add or replace the firewall rule."
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the firewall rule to create or update."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            },
            "description": "Parameters supplied to create or update the firewall rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the specified firewall rule",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_Update",
        "description": "Updates the specified firewall rule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account to which to update the firewall rule."
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the firewall rule to update."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdateFirewallRuleParameters"
            },
            "description": "Parameters supplied to update the firewall rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the specified firewall rule",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_Delete",
        "description": "Deletes the specified firewall rule from the specified Data Lake Analytics account",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account from which to delete the firewall rule."
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the firewall rule to delete."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the specified firewall rule"
          },
          "204": {
            "description": "The specified firewall rule does not exist or was already deleted."
          }
        }
      },
      "get": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_Get",
        "description": "Gets the specified Data Lake Analytics firewall rule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account from which to get the firewall rule."
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the firewall rule to retrieve."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the specified firewall rule.",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/firewallRules": {
      "get": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_ListByAccount",
        "description": "Lists the Data Lake Analytics firewall rules within the specified Data Lake Analytics account.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account from which to get the firewall rules."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed the firewall rules.",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsFirewallRuleListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/StorageAccounts/{storageAccountName}": {
      "get": {
        "tags": [
          "StorageAccounts"
        ],
        "operationId": "StorageAccounts_Get",
        "description": "Gets the specified Azure Storage account linked to the given Data Lake Analytics account.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account from which to retrieve Azure storage account details."
          },
          {
            "name": "storageAccountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Storage account for which to retrieve the details."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the specified Azure Storage account information.",
            "schema": {
              "$ref": "#/definitions/StorageAccountInfo"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StorageAccounts"
        ],
        "operationId": "StorageAccounts_Delete",
        "description": "Updates the specified Data Lake Analytics account to remove an Azure Storage account.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account from which to remove the Azure Storage account."
          },
          {
            "name": "storageAccountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Storage account to remove"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the specified Azure Storage account information from the Azure Data Lake Analytics account."
          }
        }
      },
      "patch": {
        "tags": [
          "StorageAccounts"
        ],
        "operationId": "StorageAccounts_Update",
        "description": "Updates the Data Lake Analytics account to replace Azure Storage blob account details, such as the access key and/or suffix.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account to modify storage accounts in"
          },
          {
            "name": "storageAccountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Storage account to modify"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdateStorageAccountParameters"
            },
            "description": "The parameters containing the access key and suffix to update the storage account with, if any. Passing nothing results in no change."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully update the specified Azure Storage account information for the specified Azure Data Lake Analytics account."
          }
        }
      },
      "put": {
        "tags": [
          "StorageAccounts"
        ],
        "operationId": "StorageAccounts_Add",
        "description": "Updates the specified Data Lake Analytics account to add an Azure Storage account.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account to which to add the Azure Storage account."
          },
          {
            "name": "storageAccountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Storage account to add"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddStorageAccountParameters"
            },
            "description": "The parameters containing the access key and optional suffix for the Azure Storage Account."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully added the specified Azure Storage account information to the specified Azure Data Lake Analytics account."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/StorageAccounts/{storageAccountName}/Containers/{containerName}": {
      "get": {
        "tags": [
          "StorageAccounts"
        ],
        "operationId": "StorageAccounts_GetStorageContainer",
        "description": "Gets the specified Azure Storage container associated with the given Data Lake Analytics and Azure Storage accounts.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account for which to retrieve blob container."
          },
          {
            "name": "storageAccountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure storage account from which to retrieve the blob container."
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure storage container to retrieve"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the specified Azure Storage container information.",
            "schema": {
              "$ref": "#/definitions/StorageContainer"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/StorageAccounts/{storageAccountName}/Containers": {
      "get": {
        "tags": [
          "StorageAccounts"
        ],
        "operationId": "StorageAccounts_ListStorageContainers",
        "description": "Lists the Azure Storage containers, if any, associated with the specified Data Lake Analytics and Azure Storage account combination. The response includes a link to the next page of results, if any.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account for which to list Azure Storage blob containers."
          },
          {
            "name": "storageAccountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure storage account from which to list blob containers."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of Azure Storage containers under the specified Azure Data Lake Analytics account.",
            "schema": {
              "$ref": "#/definitions/ListStorageContainersResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/StorageAccounts/{storageAccountName}/Containers/{containerName}/listSasTokens": {
      "post": {
        "tags": [
          "StorageAccounts"
        ],
        "operationId": "StorageAccounts_ListSasTokens",
        "description": "Gets the SAS token associated with the specified Data Lake Analytics and Azure Storage account and container combination.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account from which an Azure Storage account's SAS token is being requested."
          },
          {
            "name": "storageAccountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure storage account for which the SAS token is being requested."
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure storage container for which the SAS token is being requested."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of Storage Account SAS tokens for the specified Azure Storage account container.",
            "schema": {
              "$ref": "#/definitions/ListSasTokensResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/DataLakeStoreAccounts/{dataLakeStoreAccountName}": {
      "get": {
        "tags": [
          "DataLakeStoreAccounts"
        ],
        "operationId": "DataLakeStoreAccounts_Get",
        "description": "Gets the specified Data Lake Store account details in the specified Data Lake Analytics account.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account from which to retrieve the Data Lake Store account details."
          },
          {
            "name": "dataLakeStoreAccountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Store account to retrieve"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the specified Azure Data Lake Store account information.",
            "schema": {
              "$ref": "#/definitions/DataLakeStoreAccountInfo"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DataLakeStoreAccounts"
        ],
        "operationId": "DataLakeStoreAccounts_Delete",
        "description": "Updates the Data Lake Analytics account specified to remove the specified Data Lake Store account.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account from which to remove the Data Lake Store account."
          },
          {
            "name": "dataLakeStoreAccountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Store account to remove"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed the specified Azure Data Lake Store account information from the specified Azure Data Lake Analytics account."
          }
        }
      },
      "put": {
        "tags": [
          "DataLakeStoreAccounts"
        ],
        "operationId": "DataLakeStoreAccounts_Add",
        "description": "Updates the specified Data Lake Analytics account to include the additional Data Lake Store account.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account to which to add the Data Lake Store account."
          },
          {
            "name": "dataLakeStoreAccountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Store account to add."
          },
          {
            "name": "parameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddDataLakeStoreParameters"
            },
            "description": "The details of the Data Lake Store account."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully added the specified Azure Data Lake Store account information."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/StorageAccounts/": {
      "get": {
        "tags": [
          "StorageAccounts"
        ],
        "operationId": "StorageAccounts_ListByAccount",
        "description": "Gets the first page of Azure Storage accounts, if any, linked to the specified Data Lake Analytics account. The response includes a link to the next page, if any.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account for which to list Azure Storage accounts."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The OData filter. Optional."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "description": "The number of items to return. Optional."
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "description": "The number of items to skip over before returning elements. Optional."
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional."
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
          },
          {
            "name": "$count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of Azure Storage accounts.",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccountListStorageAccountsResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/StorageAccountInfo"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/DataLakeStoreAccounts/": {
      "get": {
        "tags": [
          "DataLakeStoreAccounts"
        ],
        "operationId": "DataLakeStoreAccounts_ListByAccount",
        "description": "Gets the first page of Data Lake Store accounts linked to the specified Data Lake Analytics account. The response includes a link to the next page, if any.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account for which to list Data Lake Store accounts."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter. Optional."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "description": "The number of items to return. Optional."
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "description": "The number of items to skip over before returning elements. Optional."
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional."
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
          },
          {
            "name": "$count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of Azure Data Lake Store accounts.",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccountListDataLakeStoreResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/DataLakeStoreAccountInfo"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_ListByResourceGroup",
        "description": "Gets the first page of Data Lake Analytics accounts, if any, within a specific resource group. This includes a link to the next page, if any.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter. Optional."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "description": "The number of items to return. Optional."
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "description": "The number of items to skip over before returning elements. Optional."
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional."
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
          },
          {
            "name": "$count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of accounts in the specified resource group.",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccountListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/DataLakeAnalyticsAccount"
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeAnalytics/accounts": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_List",
        "description": "Gets the first page of Data Lake Analytics accounts, if any, within the current subscription. This includes a link to the next page, if any.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData filter. Optional."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "description": "The number of items to return. Optional."
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "description": "The number of items to skip over before returning elements. Optional."
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional."
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
          },
          {
            "name": "$count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of Azure Data Lake Analytics accounts.",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccountListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/DataLakeAnalyticsAccount"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_Get",
        "description": "Gets details of the specified Data Lake Analytics account.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account to retrieve."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the details of the specified account.",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccount"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_Delete",
        "description": "Begins the delete delete process for the Data Lake Analytics account object specified by the account name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account to delete"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the specified account."
          },
          "202": {
            "description": "Successfully initiated the deletion of the specified account."
          },
          "204": {
            "description": "The specified account was not found."
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_Create",
        "description": "Creates the specified Data Lake Analytics account. This supplies the user with computation services for Data Lake Analytics workloads",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account.the account will be associated with."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account to create."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccount"
            },
            "description": "Parameters supplied to the create Data Lake Analytics account operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully initiated creation of the specified account.",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccount"
            }
          },
          "200": {
            "description": "Successfully created the specified account.",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccount"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_Update",
        "description": "Updates the Data Lake Analytics account object specified by the accountName with the contents of the account object.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure resource group that contains the Data Lake Analytics account."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account to update."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccountUpdateParameters"
            },
            "description": "Parameters supplied to the update Data Lake Analytics account operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the specified account.",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccount"
            }
          },
          "201": {
            "description": "Successfully initiated an update of the specified account.",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccount"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "StorageAccountProperties": {
      "required": [
        "accessKey"
      ],
      "properties": {
        "accessKey": {
          "type": "string",
          "description": "the access key associated with this Azure Storage account that will be used to connect to it."
        },
        "suffix": {
          "type": "string",
          "description": "the optional suffix for the storage account."
        }
      },
      "description": "Azure Storage account properties information."
    },
    "UpdateStorageAccountProperties": {
      "properties": {
        "accessKey": {
          "type": "string",
          "description": "the updated access key associated with this Azure Storage account that will be used to connect to it."
        },
        "suffix": {
          "type": "string",
          "description": "the optional suffix for the storage account."
        }
      },
      "description": "Azure Storage account properties information to update."
    },
    "StorageAccountInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageAccountProperties",
          "description": "the properties associated with this storage account.",
          "x-ms-client-flatten": true
        }
      },
      "description": "Azure Storage account information."
    },
    "StorageContainerProperties": {
      "properties": {
        "lastModifiedTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "the last modified time of the blob container."
        }
      },
      "description": "Azure Storage blob container properties information."
    },
    "StorageContainer": {
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "the name of the blob container."
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "the unique identifier of the blob container."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "the type of the blob container."
        },
        "properties": {
          "readOnly": true,
          "$ref": "#/definitions/StorageContainerProperties",
          "description": "the properties of the blob container.",
          "x-ms-client-flatten": true
        }
      },
      "description": "Azure Storage blob container information."
    },
    "ListStorageContainersResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageContainer"
          },
          "readOnly": true,
          "description": "the results of the list operation"
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "the link (url) to the next page of results."
        }
      },
      "description": "The list of blob containers associated with the storage account attached to the Data Lake Analytics account."
    },
    "SasTokenInfo": {
      "properties": {
        "accessToken": {
          "readOnly": true,
          "type": "string",
          "description": "the access token for the associated Azure Storage Container."
        }
      },
      "description": "SAS token information."
    },
    "ListSasTokensResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SasTokenInfo"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "the link (url) to the next page of results."
        }
      },
      "description": "The SAS response that contains the storage account, container and associated SAS token for connection use."
    },
    "DataLakeStoreAccountInfoProperties": {
      "properties": {
        "suffix": {
          "type": "string",
          "description": "the optional suffix for the Data Lake Store account."
        }
      },
      "description": "Data Lake Store account properties information."
    },
    "DataLakeStoreAccountInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataLakeStoreAccountInfoProperties",
          "description": "the properties associated with this Data Lake Store account.",
          "x-ms-client-flatten": true
        }
      },
      "description": "Data Lake Store account information."
    },
    "DataLakeAnalyticsAccountListStorageAccountsResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccountInfo"
          },
          "readOnly": true,
          "description": "the results of the list operation"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "the link (url) to the next page of results."
        }
      },
      "description": "Azure Storage Account list information."
    },
    "DataLakeAnalyticsAccountListDataLakeStoreResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataLakeStoreAccountInfo"
          },
          "readOnly": true,
          "description": "the results of the list operation"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "the link (url) to the next page of results."
        }
      },
      "description": "Data Lake Account list information."
    },
    "DataLakeAnalyticsAccountProperties": {
      "required": [
        "defaultDataLakeStoreAccount",
        "dataLakeStoreAccounts"
      ],
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "the provisioning status of the Data Lake Analytics account.",
          "enum": [
            "Failed",
            "Creating",
            "Running",
            "Succeeded",
            "Patching",
            "Suspending",
            "Resuming",
            "Deleting",
            "Deleted"
          ],
          "x-ms-enum": {
            "name": "DataLakeAnalyticsAccountStatus",
            "modelAsString": false
          }
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "description": "the state of the Data Lake Analytics account.",
          "enum": [
            "Active",
            "Suspended"
          ],
          "x-ms-enum": {
            "name": "DataLakeAnalyticsAccountState",
            "modelAsString": false
          }
        },
        "defaultDataLakeStoreAccount": {
          "type": "string",
          "description": "the default data lake storage account associated with this Data Lake Analytics account."
        },
        "maxDegreeOfParallelism": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "default": 30,
          "description": "the maximum supported degree of parallelism for this account."
        },
        "queryStoreRetention": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 180,
          "default": 30,
          "description": "the number of days that job metadata is retained."
        },
        "maxJobCount": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "default": 3,
          "description": "the maximum supported jobs running under the account at the same time."
        },
        "systemMaxDegreeOfParallelism": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "the system defined maximum supported degree of parallelism for this account, which restricts the maximum value of parallelism the user can set for the account.."
        },
        "systemMaxJobCount": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "the system defined maximum supported jobs running under the account at the same time, which restricts the maximum number of running jobs the user can set for the account."
        },
        "dataLakeStoreAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataLakeStoreAccountInfo"
          },
          "description": "the list of Data Lake storage accounts associated with this account."
        },
        "storageAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccountInfo"
          },
          "description": "the list of Azure Blob storage accounts associated with this account."
        },
        "creationTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "the account creation time."
        },
        "lastModifiedTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "the account last modified time."
        },
        "endpoint": {
          "type": "string",
          "readOnly": true,
          "description": "the full CName endpoint for this account."
        },
        "newTier": {
          "type": "string",
          "enum": [
            "Consumption",
            "Commitment_100AUHours",
            "Commitment_500AUHours",
            "Commitment_1000AUHours",
            "Commitment_5000AUHours",
            "Commitment_10000AUHours",
            "Commitment_50000AUHours",
            "Commitment_100000AUHours",
            "Commitment_500000AUHours"
          ],
          "x-ms-enum": {
            "name": "TierType",
            "modelAsString": false
          },
          "description": "the commitment tier for the next month."
        },
        "currentTier": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Consumption",
            "Commitment_100AUHours",
            "Commitment_500AUHours",
            "Commitment_1000AUHours",
            "Commitment_5000AUHours",
            "Commitment_10000AUHours",
            "Commitment_50000AUHours",
            "Commitment_100000AUHours",
            "Commitment_500000AUHours"
          ],
          "x-ms-enum": {
            "name": "TierType",
            "modelAsString": false
          },
          "description": "the commitment tier in use for the current month."
        },
        "firewallState": {
          "type": "string",
          "description": "The current state of the IP address firewall for this Data Lake Analytics account.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FirewallState",
            "modelAsString": false
          }
        },
        "firewallAllowAzureIps": {
          "type": "string",
          "description": "The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FirewallAllowAzureIpsState",
            "modelAsString": false
          }
        },
        "firewallRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallRule"
          },
          "description": "The list of firewall rules associated with this Data Lake Analytics account."
        },
        "maxDegreeOfParallelismPerJob": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "the maximum supported degree of parallelism per job for this account."
        },
        "minPriorityPerJob": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "the minimum supported priority per job for this account."
        },
        "computePolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComputePolicyAccountCreateParameters"
          },
          "description": "the list of compute policies to create in this account."
        }
      },
      "description": "The account specific properties that are associated with an underlying Data Lake Analytics account."
    },
    "UpdateDataLakeAnalyticsAccountProperties": {
      "properties": {
        "maxDegreeOfParallelism": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "the maximum supported degree of parallelism for this account."
        },
        "queryStoreRetention": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 180,
          "description": "the number of days that job metadata is retained."
        },
        "maxJobCount": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "the maximum supported jobs running under the account at the same time."
        },
        "newTier": {
          "type": "string",
          "enum": [
            "Consumption",
            "Commitment_100AUHours",
            "Commitment_500AUHours",
            "Commitment_1000AUHours",
            "Commitment_5000AUHours",
            "Commitment_10000AUHours",
            "Commitment_50000AUHours",
            "Commitment_100000AUHours",
            "Commitment_500000AUHours"
          ],
          "x-ms-enum": {
            "name": "TierType",
            "modelAsString": false
          },
          "description": "the commitment tier to use for next month."
        },
        "firewallState": {
          "type": "string",
          "description": "The current state of the IP address firewall for this Data Lake Analytics account.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FirewallState",
            "modelAsString": false
          }
        },
        "firewallAllowAzureIps": {
          "type": "string",
          "description": "The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FirewallAllowAzureIpsState",
            "modelAsString": false
          }
        },
        "firewallRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallRule"
          },
          "description": "The list of firewall rules associated with this Data Lake Analytics account."
        },
        "maxDegreeOfParallelismPerJob": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "the maximum supported degree of parallelism per job for this account."
        },
        "minPriorityPerJob": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "the minimum supported priority per job for this account."
        },
        "computePolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComputePolicy"
          },
          "description": "the list of existing compute policies to update in this account."
        }
      },
      "description": "The properties to update that are associated with an underlying Data Lake Analytics account to."
    },
    "AddDataLakeStoreParameters": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataLakeStoreAccountInfoProperties",
          "description": "the properties for the Data Lake Store account being added.",
          "x-ms-client-flatten": true
        }
      },
      "description": "Additional Data Lake Store parameters."
    },
    "AddStorageAccountParameters": {
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageAccountProperties",
          "description": "the properties for the Azure Storage account being added.",
          "x-ms-client-flatten": true
        }
      },
      "description": "Storage account parameters for a storage account being added to a Data Lake Analytics account."
    },
    "UpdateStorageAccountParameters": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateStorageAccountProperties",
          "description": "the properties for the Azure Storage account being updated.",
          "x-ms-client-flatten": true
        }
      },
      "description": "Storage account parameters for a storage account being updated in a Data Lake Analytics account."
    },
    "ComputePolicyPropertiesCreateParameters": {
      "properties": {
        "objectId": {
          "type": "string",
          "format": "uuid",
          "description": "The AAD object identifier for the entity to create a policy for."
        },
        "objectType": {
          "type": "string",
          "description": "The type of AAD object the object identifier refers to.",
          "enum": [
            "User",
            "Group",
            "ServicePrincipal"
          ],
          "x-ms-enum": {
            "name": "AADObjectType",
            "modelAsString": true
          }
        },
        "maxDegreeOfParallelismPerJob": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The maximum degree of parallelism per job this user can use to submit jobs. This property, the min priority per job property, or both must be passed."
        },
        "minPriorityPerJob": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The minimum priority per job this user can use to submit jobs. This property, the max degree of parallelism per job property, or both must be passed."
        }
      },
      "required": [
        "objectId",
        "objectType"
      ],
      "description": "The compute policy properties to use when creating a new compute policy"
    },
    "ComputePolicyCreateOrUpdateParameters": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ComputePolicyPropertiesCreateParameters",
          "description": "The policy properties to use when creating a new compute policy",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "description": "The parameters used to create a new compute policy."
    },
    "ComputePolicyAccountCreateParameters": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name of the policy to create"
        },
        "properties": {
          "$ref": "#/definitions/ComputePolicyPropertiesCreateParameters",
          "description": "The policy properties to use when creating a new compute policy",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "name",
        "properties"
      ],
      "description": "The parameters used to create a new compute policy."
    },
    "ComputePolicyProperties": {
      "properties": {
        "objectId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "description": "The AAD object identifier for the entity to create a policy for."
        },
        "objectType": {
          "type": "string",
          "readOnly": true,
          "description": "The type of AAD object the object identifier refers to.",
          "enum": [
            "User",
            "Group",
            "ServicePrincipal"
          ],
          "x-ms-enum": {
            "name": "AADObjectType",
            "modelAsString": true
          }
        },
        "maxDegreeOfParallelismPerJob": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The maximum degree of parallelism per job this user can use to submit jobs."
        },
        "minPriorityPerJob": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The minimum priority per job this user can use to submit jobs."
        }
      },
      "description": "The compute policy properties to use when creating a new compute policy"
    },
    "ComputePolicy": {
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the compute policy"
        },
        "properties": {
          "$ref": "#/definitions/ComputePolicyProperties",
          "description": "The compute policy properties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The parameters used to create a new compute policy."
    },
    "ComputePolicyListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComputePolicy"
          },
          "readOnly": true,
          "description": "the results of the list operation"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "the link (url) to the next page of results."
        }
      },
      "description": "The list of compute policies in the account."
    },
    "DataLakeAnalyticsAccountUpdateParameters": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "properties": {
          "$ref": "#/definitions/UpdateDataLakeAnalyticsAccountProperties",
          "description": "The properties that can be updated in an existing Data Lake Analytics account.",
          "x-ms-client-flatten": true
        }
      },
      "description": "The parameters that can be used to update an existing Data Lake Analytics account."
    },
    "DataLakeAnalyticsAccount": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataLakeAnalyticsAccountProperties",
          "description": "The properties defined by Data Lake Analytics all properties are specific to each resource provider.",
          "x-ms-client-flatten": true
        }
      },
      "description": "A Data Lake Analytics account object, containing all information associated with the named Data Lake Analytics account."
    },
    "DataLakeAnalyticsAccountListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataLakeAnalyticsAccount"
          },
          "readOnly": true,
          "description": "the results of the list operation"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "the link (url) to the next page of results."
        }
      },
      "description": "DataLakeAnalytics Account list information."
    },
    "DataLakeAnalyticsFirewallRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/FirewallRule"
          },
          "description": "the results of the list operation"
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "the link (url) to the next page of results."
        }
      },
      "description": "Data Lake Analytics firewall rule list information."
    },
    "FirewallRuleProperties": {
      "required": [
        "startIpAddress",
        "endIpAddress"
      ],
      "properties": {
        "startIpAddress": {
          "type": "string",
          "description": "the start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol."
        },
        "endIpAddress": {
          "type": "string",
          "description": "the end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol."
        }
      },
      "description": "Data Lake Analytics firewall rule properties information"
    },
    "FirewallRule": {
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OptionalSubResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/FirewallRuleProperties",
          "description": "the properties of the firewall rule.",
          "x-ms-client-flatten": true
        }
      },
      "description": "Data Lake Analytics firewall rule information"
    },
    "UpdateFirewallRuleProperties": {
      "properties": {
        "startIpAddress": {
          "type": "string",
          "description": "the start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol."
        },
        "endIpAddress": {
          "type": "string",
          "description": "the end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol."
        }
      },
      "description": "Data Lake Analytics firewall rule properties information"
    },
    "UpdateFirewallRuleParameters": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateFirewallRuleProperties",
          "description": "the properties of the firewall rule to update.",
          "x-ms-client-flatten": true
        }
      },
      "description": "Data Lake Analytics firewall rule update parameters"
    },
    "Resource": {
      "description": "The Resource model definition.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "required": [
        "location"
      ],
      "x-ms-azure-resource": true
    },
    "OptionalSubResource": {
      "description": "The Resource model definition for a nested resource with no required properties.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        }
      }
    },
    "SubResource": {
      "description": "The Sub Resource model definition.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        }
      },
      "required": [
        "name"
      ]
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    }
  }
}
