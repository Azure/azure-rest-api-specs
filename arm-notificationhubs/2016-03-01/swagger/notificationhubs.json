{
  "swagger": "2.0",
  "info": {
    "title": "NotificationHubsManagementClient",
    "description": "Azure NotificationHub client",
    "version": "2016-03-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/json"
  ],
  "produces": [
    "application/json",
    "text/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/checkNamespaceAvailability": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CheckAvailability",
        "description": "Checks the availability of the given service namespace across all Azure subscriptions. This is useful because the domain name is created based on the service namespace name.",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityParameters"
            },
            "description": "The namespace name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Checks if the Namespace name is a valid availabile name.",
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CreateOrUpdate",
        "description": "Creates/Updates a service namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace name"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamespaceCreateOrUpdateParameters"
            },
            "description": "Parameters supplied to create a Namespace Resource"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Namespace is Create/Update",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          },
          "200": {
            "description": "Namespace is Create/Update",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Delete",
        "description": "Deletes an existing namespace and removes all associated notificationHubs under the namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "This namespace has already been deleted."
          },
          "200": {
            "description": "This namespace is successfully deleted."
          },
          "202": {
            "description": "The namespace delete request has been accepted"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Get",
        "description": "Gets the requested namespace and returns its description",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Namespace was successfully found and returned.",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CreateOrUpdateAuthorizationRule",
        "description": "Creates an authorization rule for a namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Authorization rule name"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleCreateOrUpdateParameters"
            },
            "description": "Shared access authorization rule"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace Authorization Rule is created/updated.",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_DeleteAuthorizationRule",
        "description": "Deletes a namespace authorization rule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Authorization rule name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "This Namespace Authorization Rule is already deleted."
          },
          "200": {
            "description": "The Namespace Authorization Rule is successfully deleted."
          }
        }
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_GetAuthorizationRule",
        "description": "Gets an authorization rule for a namespace by name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Authorization rule name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "This Namespace Authorization Rule is successfully retrieved.",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_List",
        "description": "Lists the available namespaces within a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name. If resourceGroupName value is null, the method lists all the namespaces within subscription."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespaces are successfully retrieved in the resource group.",
            "schema": {
              "$ref": "#/definitions/NamespaceListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListAll",
        "description": "Lists all the available namespaces within the subscription irrespective of the resource groups.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespaces are successfully retrieved within the subscription irrespective of the resource group.",
            "schema": {
              "$ref": "#/definitions/NamespaceListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListAuthorizationRules",
        "description": "Gets all authorization rules for a namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The authorization rule associated with this namespace is successfully retrieved.",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListKeys",
        "description": "Gets the primary and secondary connection strings to the namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Authorization rule name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The primary and secondary keys with connection strings are successfully retrieved for this authorization rule.",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_RegenerateKeys",
        "description": "Regenerates the primary/Secondary keys to the namespace authorization rule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Authorization rule name"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicykeyResource"
            },
            "description": "Parameters supplied to regenerate the namespace authorization rule key"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The primary/secondary keys are successfully regenerated and connection strings are returned.",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/checkNotificationHubAvailability": {
      "post": {
        "tags": [
          "NotificationHubs"
        ],
        "operationId": "NotificationHubs_CheckAvailability",
        "description": "Checks the availability of the given notification hub in a namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace name"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityParameters"
            },
            "description": "Notification hub name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The validation of Notification Hub name is successfully completed.",
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}": {
      "put": {
        "tags": [
          "NotificationHubs"
        ],
        "operationId": "NotificationHubs_CreateOrUpdate",
        "description": "Creates/updates a notification hub in a namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace name"
          },
          {
            "name": "notificationHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Notification hub name"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationHubCreateOrUpdateParameters"
            },
            "description": "Parameters supplied to the create/update a notification hub resource"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification hub is successfully created/updated.",
            "schema": {
              "$ref": "#/definitions/NotificationHubResource"
            }
          },
          "201": {
            "description": "Notification hub is successfully created/updated.",
            "schema": {
              "$ref": "#/definitions/NotificationHubResource"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NotificationHubs"
        ],
        "operationId": "NotificationHubs_Delete",
        "description": "Deletes a notification hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace name"
          },
          {
            "name": "notificationHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Notification hub name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification hub is deleted successfully."
          }
        }
      },
      "get": {
        "tags": [
          "NotificationHubs"
        ],
        "operationId": "NotificationHubs_Get",
        "description": "Lists the notification hubs associated with a namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace name"
          },
          {
            "name": "notificationHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Notification hub name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The notification hubs associated with this namespace are successfully retrieved.",
            "schema": {
              "$ref": "#/definitions/NotificationHubResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/AuthorizationRules/{authorizationRuleName}": {
      "put": {
        "tags": [
          "NotificationHubs"
        ],
        "operationId": "NotificationHubs_CreateOrUpdateAuthorizationRule",
        "description": "Creates/updates an authorization rule for a notification hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace name"
          },
          {
            "name": "notificationHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Notification hub name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Authorization rule name"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleCreateOrUpdateParameters"
            },
            "description": "Shared access authorization rule"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification hub authorization rule is successfully created/updated.",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NotificationHubs"
        ],
        "operationId": "NotificationHubs_DeleteAuthorizationRule",
        "description": "Deletes a notification hub authorization rule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace name"
          },
          {
            "name": "notificationHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Notification hub name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Authorization rule name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Notification hub authorization rule has already been deleted."
          },
          "200": {
            "description": "Notification hub authorization rule is successfully deleted."
          }
        }
      },
      "get": {
        "tags": [
          "NotificationHubs"
        ],
        "operationId": "NotificationHubs_GetAuthorizationRule",
        "description": "Gets an authorization rule for a notification hub by name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace name"
          },
          {
            "name": "notificationHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Notification hub name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Authorization rule name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification hub authorization rule was successfully retrieved.",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs": {
      "get": {
        "tags": [
          "NotificationHubs"
        ],
        "operationId": "NotificationHubs_List",
        "description": "Lists all notification hubs associated with a namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "All notification hubs within the namespace has been successfully retrieved.",
            "schema": {
              "$ref": "#/definitions/NotificationHubListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/AuthorizationRules": {
      "get": {
        "tags": [
          "NotificationHubs"
        ],
        "operationId": "NotificationHubs_ListAuthorizationRules",
        "description": "Gets all authorization rules for a specific notification hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace name"
          },
          {
            "name": "notificationHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Notification hub name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "All authorization rules associated with the hub have been successfully retrieved.",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/AuthorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "tags": [
          "NotificationHubs"
        ],
        "operationId": "NotificationHubs_ListKeys",
        "description": "Gets the primary and secondary connection strings to the notification hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace name"
          },
          {
            "name": "notificationHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Notification hub name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Authorization rule name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The primary and secondary keys with their connection strings are successfully retrieved.",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/AuthorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "tags": [
          "NotificationHubs"
        ],
        "operationId": "NotificationHubs_RegenerateKeys",
        "description": "Regenerates the primary/secondary keys to the notificationHub authorization rule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace name"
          },
          {
            "name": "notificationHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Notification hub name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Authorization rule name"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicykeyResource"
            },
            "description": "Parameters supplied to regenerate the Notification Hub authorization rule key"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The primary/secondary key generation is successful.",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/pnsCredentials": {
      "post": {
        "tags": [
          "NotificationHubs"
        ],
        "operationId": "NotificationHubs_GetPnsCredentials",
        "description": "Lists all Platform Notification System credentials associated with a notification hub.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource group name"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Namespace name"
          },
          {
            "name": "notificationHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Notification hub name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "All Platform Notification System credentials associated with the given hub are successfully retrieved.",
            "schema": {
              "$ref": "#/definitions/PnsCredentialsResource"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CheckAvailabilityParameters": {
      "properties": {
        "isAvailiable": {
          "type": "boolean",
          "description": "True if the name is available and can be used to create new namespace/notification hub, otherwise false"
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Parameters supplied to the check name availability for namespace and notification hubs"
    },
    "CheckAvailabilityResult": {
      "properties": {
        "isAvailiable": {
          "type": "boolean",
          "description": "True if the name is available and can be used to create new namespace/notification hub, otherwise false"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Description of a CheckAvailibility resource"
    },
    "NamespaceProperties": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Namespace name"
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the namespace"
        },
        "region": {
          "type": "string",
          "description": "Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia EastAustralia SoutheastCentral USEast USEast US 2West USNorth Central USSouth Central USEast AsiaSoutheast AsiaBrazil SouthJapan EastJapan WestNorth EuropeWest Europe."
        },
        "status": {
          "type": "string",
          "description": "Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The time the namespace was created at"
        },
        "serviceBusEndpoint": {
          "type": "string",
          "description": "Endpoint to perform notification hub operations"
        },
        "subscriptionId": {
          "type": "string",
          "description": "The ID of the Azure subscription associated with the namespace"
        },
        "scaleUnit": {
          "type": "string",
          "description": "ScaleUnit where the namespace gets created"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether or not the namespace is currently enabled"
        },
        "critical": {
          "type": "boolean",
          "description": "Whether or not the namespace is set as critical"
        },
        "namespaceType": {
          "type": "string",
          "description": "Namespace type",
          "enum": [
            "Messaging",
            "NotificationHub"
          ],
          "x-ms-enum": {
            "name": "NamespaceType",
            "modelAsString": false
          }
        }
      },
      "description": "Namespace properties"
    },
    "NamespaceCreateOrUpdateParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NamespaceProperties",
          "description": "Namespace properties"
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Parameters supplied to the CreateOrUpdate namespace operation"
    },
    "NamespaceResource": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NamespaceProperties",
          "description": "Namespace properties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Description of a Namespace resource"
    },
    "SharedAccessAuthorizationRuleProperties": {
      "properties": {
        "rights": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Manage",
              "Send",
              "Listen"
            ],
            "x-ms-enum": {
              "name": "AccessRights",
              "modelAsString": false
            }
          },
          "description": "The access rights associated with the rule"
        }
      },
      "description": "SharedAccessAuthorizationRule properties"
    },
    "SharedAccessAuthorizationRuleCreateOrUpdateParameters": {
      "properties": {
        "properties": {          
          "$ref": "#/definitions/SharedAccessAuthorizationRuleProperties",
          "description": "Properties of the Namespace AuthorizationRules"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Parameters supplied to the CreateOrUpdate of namespace authorization rules"
    },
    "SharedAccessAuthorizationRuleResource": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SharedAccessAuthorizationRuleProperties",
          "description": "Properties of the namespace authorization rule"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Description of a namespace authorization rule"
    },
    "NamespaceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamespaceResource"
          },
          "description": "Result of the List Namespace operation"
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of Namespaces."
        }
      },
      "description": "The response of the List Namespace operation."
    },
    "SharedAccessAuthorizationRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
          },
          "description": "Result of the list authorization rules operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of authorization rules"
        }
      },
      "description": "The response of the List Namespace operation."
    },
    "ResourceListKeys": {
      "properties": {
        "primaryConnectionString": {
          "type": "string",
          "description": "PrimaryConnectionString of the AuthorizationRule"
        },
        "secondaryConnectionString": {
          "type": "string",
          "description": "SecondaryConnectionString of the created AuthorizationRule"
        },
        "primaryKey": {
          "type": "string",
          "description": "PrimaryKey of the created AuthorizationRule"
        },
        "secondaryKey": {
          "type": "string",
          "description": "SecondaryKey of the created AuthorizationRule"
        },
        "keyName": {
          "type": "string",
          "description": "KeyName of the created AuthorizationRule"
        }
      },
      "description": "Namespace/NotificationHub Connection String"
    },
    "PolicykeyResource": {
      "properties": {
        "policyKey": {
          "type": "string",
          "description": "Name of the key that has to be regenerated for the Namespace/Notification Hub Authorization Rule. The value can be Primary Key/Secondary Key."
        }
      },
      "description": "Namespace/NotificationHub Regenerate Keys"
    },
    "ApnsCredentialProperties": {
      "properties": {
        "apnsCertificate": {
          "type": "string",
          "description": "The APNS certificate"
        },
        "certificateKey": {
          "type": "string",
          "description": "The certificate key"
        },
        "endpoint": {
          "type": "string",
          "description": "The endpoint of this credential"
        },
        "thumbprint": {
          "type": "string",
          "description": "The APNS certificate thumbprint"
        }
      },
      "description": "Properties of a notification hub APNS credential"
    },
    "ApnsCredential": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApnsCredentialProperties",
          "description": "Properties of a notification hub APNS credential"
        }
      },
      "description": "Description of a notification hub APNS credential"
    },
    "WnsCredentialProperties": {
      "properties": {
        "packageSid": {
          "type": "string",
          "description": "The package ID for this credential"
        },
        "secretKey": {
          "type": "string",
          "description": "The secret key."
        },
        "windowsLiveEndpoint": {
          "type": "string",
          "description": "The Windows Live endpoint."
        }
      },
      "description": "Description of a notification hub WNS Credential"
    },
    "WnsCredential": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WnsCredentialProperties",
          "description": "Properties of notification hub WNS Credential"
        }
      },
      "description": "Description of a notification hub WNS Credential"
    },
    "GcmCredentialProperties": {
      "properties": {
        "gcmEndpoint": {
          "type": "string",
          "description": "The GCM endpoint"
        },
        "googleApiKey": {
          "type": "string",
          "description": "The Google API key"
        }
      },
      "description": "Description of a notification hub GCM credential"
    },
    "GcmCredential": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/GcmCredentialProperties",
          "description": "Properties of a notification hub GCM credential"
        }
      },
      "description": "Description of a notification hub GCM credential"
    },
    "MpnsCredentialProperties": {
      "properties": {
        "mpnsCertificate": {
          "type": "string",
          "description": "The MPNS certificate"
        },
        "certificateKey": {
          "type": "string",
          "description": "The certificate key for this credential"
        },
        "thumbprint": {
          "type": "string",
          "description": "The Mpns certificate Thumbprint"
        }
      },
      "description": "Description of a notification hub MPNS credential"
    },
    "MpnsCredential": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MpnsCredentialProperties",
          "description": "Properties of a notification hub MPNS credential"
        }
      },
      "description": "Description of a notification hub MPNS credential"
    },
    "AdmCredentialProperties": {
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The client identifier"
        },
        "clientSecret": {
          "type": "string",
          "description": "The credential secret access key"
        },
        "authTokenUrl": {
          "type": "string",
          "description": "The URL of the authorization token"
        }
      },
      "description": "Description of a notification hub ADM credential"
    },
    "AdmCredential": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AdmCredentialProperties",
          "description": "Properties of a notification hub ADM credential"
        }
      },
      "description": "Description of a notification hub ADM credential"
    },
    "BaiduCredentialProperties": {
      "properties": {
        "baiduApiKey": {
          "type": "string",
          "description": "Baidu Api Key"
        },
        "baiduEndPoint": {
          "type": "string",
          "description": "Baidu Endpoint"
        },
        "baiduSecretKey": {
          "type": "string",
          "description": "Baidu Secret Key"
        }
      },
      "description": "Description of a notification hub Baidu credential"
    },
    "BaiduCredential": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/BaiduCredentialProperties",
          "description": "Properties of a notification hub Baidu credential"
        }
      },
      "description": "Description of a notification hub Baidu credential"
    },
    "NotificationHubProperties": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The NotificationHub name"
        },
        "registrationTtl": {
          "type": "string",
          "description": "The registration time to live of the created notification hub"
        },
        "authorizationRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedAccessAuthorizationRuleProperties"
          },
          "description": "The AuthorizationRules of the created NotificationHub"
        },
        "apnsCredential": {
          "$ref": "#/definitions/ApnsCredential",
          "description": "The APNS Credential of the created notification hub"
        },
        "wnsCredential": {
          "$ref": "#/definitions/WnsCredential",
          "description": "The WNS Credential of the created notification hub"
        },
        "gcmCredential": {
          "$ref": "#/definitions/GcmCredential",
          "description": "The GCM Credential of the created notification hub"
        },
        "mpnsCredential": {
          "$ref": "#/definitions/MpnsCredential",
          "description": "The MPNS Credential of the created notification hub"
        },
        "admCredential": {
          "$ref": "#/definitions/AdmCredential",
          "description": "The ADM Credential of the created notification hub"
        },
        "baiduCredential": {
          "$ref": "#/definitions/BaiduCredential",
          "description": "The Baidu Credential of the created notification hub"
        }
      },
      "description": "Notification Hub properties"
    },
    "NotificationHubCreateOrUpdateParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NotificationHubProperties",
          "description": "Notification Hub properties"
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Parameters supplied to the CreateOrUpdate notification hub operation"
    },
    "NotificationHubResource": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NotificationHubProperties",
          "description": "Notification hub properties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Description of a notification hub Resource"
    },
    "PnsCredentialsResource": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PnsCredentialsProperties",
          "description": "notification hub Platform Notification System Credentials"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Description of a notification hub Platform Notification System Credentials"
    },
    "PnsCredentialsProperties": {
      "properties": {
        "apnsCredential": {
          "$ref": "#/definitions/ApnsCredential",
          "description": "The APNS Credential of the created notification hub"
        },
        "wnsCredential": {
          "$ref": "#/definitions/WnsCredential",
          "description": "The WNS Credential of the created notification hub"
        },
        "gcmCredential": {
          "$ref": "#/definitions/GcmCredential",
          "description": "The GCM Credential of the created notification hub"
        },
        "mpnsCredential": {
          "$ref": "#/definitions/MpnsCredential",
          "description": "The MPNS Credential of the created notification hub"
        },
        "admCredential": {
          "$ref": "#/definitions/AdmCredential",
          "description": "The ADM Credential of the created notification hub"
        },
        "baiduCredential": {
          "$ref": "#/definitions/BaiduCredential",
          "description": "The Baidu Credential of the created notification hub"
        }
      },
      "description": "Description of a notification hub Platform Notification System Credentials."
    },
    "NotificationHubListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationHubResource"
          },
          "description": "Result of the List notification hub operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of notification hubs"
        }
      },
      "description": "The response of the List notification hub operation."
    },
    "Resource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "required": [
        "location"
      ],
      "x-ms-azure-resource": true
    },
    "SubResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID"
        }
      },
      "x-ms-azure-resource": true
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    }
  }
}