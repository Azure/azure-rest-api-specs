{
  "swagger": "2.0",
  "info": {
    "title": "DocumentDB",
    "description": "Azure DocumentDB Database Service Resource Provider REST API",
    "version": "2015-04-08"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "Impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}": {
      "get": {
        "operationId": "DatabaseAccounts_Get",
        "x-ms-examples": {
          "DocumentDBDatabaseAccountGet": { "$ref": "../examples/DocumentDBDatabaseAccountGet.json" }
        },
        "description": "Retrieves the properties of an existing Azure DocumentDB database account.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The database account properties were retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/DatabaseAccount"
            }
          }
        }
      },
      "patch": {
        "operationId": "DatabaseAccounts_Patch",
        "x-ms-examples": {
          "DocumentDBDatabaseAccountPatch": { "$ref": "../examples/DocumentDBDatabaseAccountPatch.json" }
        },
        "description": "Patches the properties of an existing Azure DocumentDB database account.",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "updateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseAccountPatchParameters"
            },
            "description": "The tags parameter to patch for the current database account."
          }
        ],
        "responses": {
          "200": {
            "description": "The properties of the database account were patched successfully.",
            "schema": {
              "$ref": "#/definitions/DatabaseAccount"
            }
          }
        }
      },
      "put": {
        "operationId": "DatabaseAccounts_CreateOrUpdate",
        "x-ms-examples": {
          "DocumentDBDatabaseAccountCreateMin": { "$ref": "../examples/DocumentDBDatabaseAccountCreateMin.json" },
          "DocumentDBDatabaseAccountCreateMax": { "$ref": "../examples/DocumentDBDatabaseAccountCreateMax.json" }
        },
        "description": "Creates or updates an Azure DocumentDB database account.",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "createUpdateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseAccountCreateUpdateParameters"
            },
            "description": "The parameters to provide for the current database account."
          }
        ],
        "responses": {
          "200": {
            "description": "The database account create or update operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/DatabaseAccount"
            }
          }
        }
      },
      "delete": {
        "operationId": "DatabaseAccounts_Delete",
        "x-ms-examples": {
          "DocumentDBDatabaseAccountDelete": { "$ref": "../examples/DocumentDBDatabaseAccountDelete.json" }
        },
        "description": "Deletes an existing Azure DocumentDB database account.",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "The database account delete operation will complete asynchronously."
          },
          "204": {
            "description": "The specified account does not exist in the subscription."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/failoverPriorityChange": {
      "post": {
        "operationId": "DatabaseAccounts_FailoverPriorityChange",
        "x-ms-examples": {
          "DocumentDBDatabaseAccountFailoverPriorityChange": { "$ref": "../examples/DocumentDBDatabaseAccountFailoverPriorityChange.json" }
        },
        "description": "Changes the failover priority for the Azure DocumentDB database account. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "failoverParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FailoverPolicies"
            },
            "description": "The new failover policies for the database account."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The failover policy change operation will complete asynchronously."
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/databaseAccounts": {
      "get": {
        "operationId": "DatabaseAccounts_List",
        "x-ms-examples": {
          "DocumentDBDatabaseAccountList": { "$ref": "../examples/DocumentDBDatabaseAccountList.json" }
        },
        "description": "Lists all the Azure DocumentDB database accounts available under the subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DatabaseAccountsListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts": {
      "get": {
        "operationId": "DatabaseAccounts_ListByResourceGroup",
        "x-ms-examples": {
          "DocumentDBDatabaseAccountListByResourceGroup": { "$ref": "../examples/DocumentDBDatabaseAccountListByResourceGroup.json" }
        },
        "description": "Lists all the Azure DocumentDB database accounts available under the given resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DatabaseAccountsListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/listKeys": {
      "post": {
        "operationId": "DatabaseAccounts_ListKeys",
        "x-ms-examples": {
          "DocumentDBDatabaseAccountListKeys": { "$ref": "../examples/DocumentDBDatabaseAccountListKeys.json" }
        },
        "description": "Lists the access keys for the specified Azure DocumentDB database account.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DatabaseAccountListKeysResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/listConnectionStrings": {
      "post": {
        "operationId": "DatabaseAccounts_ListConnectionStrings",
        "x-ms-examples": {
          "DocumentDBDatabaseAccountListConnectionStrings": { "$ref": "../examples/DocumentDBDatabaseAccountListConnectionStrings.json" },
          "DocumentDBDatabaseAccountListConnectionStringsMongo": { "$ref": "../examples/DocumentDBDatabaseAccountListConnectionStringsMongo.json" }
        },
        "description": "Lists the connection strings for the specified Azure DocumentDB database account.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DatabaseAccountListConnectionStringsResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/readonlykeys": {
      "get": {
        "operationId": "DatabaseAccounts_ListReadOnlyKeys",
        "x-ms-examples": {
          "DocumentDBDatabaseAccountListReadOnlyKeys": { "$ref": "../examples/DocumentDBDatabaseAccountListReadOnlyKeys.json" }
        },
        "description": "Lists the read-only access keys for the specified Azure DocumentDB database account.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DatabaseAccountListReadOnlyKeysResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/regenerateKey": {
      "post": {
        "operationId": "DatabaseAccounts_RegenerateKey",
        "x-ms-examples": {
          "DocumentDBDatabaseAccountRegenerateKey": { "$ref": "../examples/DocumentDBDatabaseAccountRegenerateKey.json" }
        },
        "description": "Regenerates an access key for the specified Azure DocumentDB database account.",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "keyToRegenerate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseAccountRegenerateKeyParameters"
            },
            "description": "The name of the key to regenerate."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted. The regenerate key operation will complete asynchronously."
          }
        }
      }
    },
    "/providers/Microsoft.DocumentDB/databaseAccountNames/{accountName}": {
      "head": {
        "operationId": "DatabaseAccounts_CheckNameExists",
        "x-ms-examples": {
          "DocumentDBDatabaseAccountCheckNameExists": { "$ref": "../examples/DocumentDBDatabaseAccountCheckNameExists.json" }
        },
        "description": "Checks that the Azure DocumentDB account name already exists. A valid account name may contain only lowercase letters, numbers, and the '-' character, and must be between 3 and 50 characters.",
        "parameters": [
          {
            "$ref": "#/parameters/accountNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The account name is valid but is already in use."
          },
          "404": {
            "description": "Not Found. The account name is available and valid."
          }
        }
      }
    }
  },
  "definitions": {
    "DatabaseAccountsListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabaseAccount"
          },
          "description": "List of database account and their properties."
        }
      },
      "description": "The List operation response, that contains the database accounts and their properties."
    },
    "FailoverPolicies": {
      "properties": {
        "failoverPolicies": {
          "type": "array",
          "description": "List of failover policies.",
          "items": {
            "$ref": "#/definitions/FailoverPolicy"
          }
        }
      },
      "description": "The list of new failover policies for the failover priority change."
    },
    "FailoverPolicy": {
      "type": "object",
      "description": "The failover policy for a given region of a database account.",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;."
        },
        "locationName": {
          "type": "string",
          "description": "The name of the region in which the database account exists."
        },
        "failoverPriority": {
          "type": "integer",
          "minimum": 0,
          "format": "int32",
          "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists."
        }
      }
    },
    "Location": {
      "description": "A region in which the Azure DocumentDB database account is deployed.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
        },
        "locationName": {
          "type": "string",
          "description": "The name of the region."
        },
        "documentEndpoint": {
          "type": "string",
          "readOnly": true,
          "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "failoverPriority": {
          "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
          "format": "int32",
          "type": "integer",
          "minimum": 0
        }
      }
    },
    "Resource": {
      "type": "object",
      "description": "A database account resource.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the database account."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the database account."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "$ref": "#/definitions/Tags"
        }
      },
      "required": [
        "location"
      ],
      "x-ms-azure-resource": true
    },
    "DatabaseAccount": {
      "description": "A DocumentDB database account.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Indicates the type of database account. This can only be set at database account creation.",
          "type": "string",
          "default": "GlobalDocumentDB",
          "enum": [
            "GlobalDocumentDB",
            "MongoDB",
            "Parse"
          ],
          "x-ms-enum": {
            "name": "DatabaseAccountKind",
            "modelAsString": true
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DatabaseAccountProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ConsistencyPolicy": {
      "type": "object",
      "description": "The consistency policy for the DocumentDB database account.",
      "properties": {
        "defaultConsistencyLevel": {
          "description": "The default consistency level and configuration settings of the DocumentDB account.",
          "type": "string",
          "enum": [
            "Eventual",
            "Session",
            "BoundedStaleness",
            "Strong",
            "ConsistentPrefix"
          ],
          "x-ms-enum": {
            "name": "DefaultConsistencyLevel",
            "modelAsString": false
          }
        },
        "maxStalenessPrefix": {
          "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
          "type": "integer",
          "minimum": 1,
          "maximum": 2147483647,
          "format": "int64"
        },
        "maxIntervalInSeconds": {
          "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 1 - 100. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "format": "int32"
        }
      },
      "required": [
        "defaultConsistencyLevel"
      ]
    },
    "DatabaseAccountProperties": {
      "description": "Properties for the database account.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "documentEndpoint": {
          "description": "The connection endpoint for the DocumentDB database account.",
          "type": "string",
          "readOnly": true
        },
        "databaseAccountOfferType": {
          "description": "The offer type for the DocumentDB database account. Default value: Standard.",
          "readOnly": true,
          "$ref": "#/definitions/DatabaseAccountOfferType"
        },
        "ipRangeFilter": {
          "description": "DocumentDB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account. IP addresses/ranges must be comma separated and must not contain any spaces.",
          "$ref": "#/definitions/IPRangeFilter"
        },
        "enableAutomaticFailover": {
          "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.",
          "type": "boolean"
        },
        "consistencyPolicy": {
          "description": "The consistency policy for the DocumentDB database account.",
          "$ref": "#/definitions/ConsistencyPolicy"
        },
        "writeLocations": {
          "type": "array",
          "readOnly": true,
          "description": "An array that contains the write location for the DocumentDB account.",
          "items": {
            "$ref": "#/definitions/Location"
          }
        },
        "readLocations": {
          "type": "array",
          "readOnly": true,
          "description": "An array that contains of the read locations enabled for the DocumentDB account.",
          "items": {
            "$ref": "#/definitions/Location"
          }
        },
        "failoverPolicies": {
          "type": "array",
          "readOnly": true,
          "description": "An array that contains the regions ordered by their failover priorities.",
          "items": {
            "$ref": "#/definitions/FailoverPolicy"
          }
        }
      }
    },
    "DatabaseAccountCreateUpdateProperties": {
      "description": "Properties to create and update Azure DocumentDB database accounts.",
      "type": "object",
      "properties": {
        "consistencyPolicy": {
          "description": "The consistency policy for the DocumentDB account.",
          "$ref": "#/definitions/ConsistencyPolicy"
        },
        "locations": {
          "type": "array",
          "description": "An array that contains the georeplication locations enabled for the DocumentDB account.",
          "items": {
            "$ref": "#/definitions/Location"
          }
        },
        "databaseAccountOfferType": {
          "$ref": "#/definitions/DatabaseAccountOfferType"
        },
        "ipRangeFilter": {
          "description": "DocumentDB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account. IP addresses/ranges must be comma separated and must not contain any spaces.",
          "$ref": "#/definitions/IPRangeFilter"
        },
        "enableAutomaticFailover": {
          "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.",
          "type": "boolean"
        }
      },
      "required": [
        "locations",
        "databaseAccountOfferType"
      ]
    },
    "DatabaseAccountCreateUpdateParameters": {
      "description": "Parameters to create and update DocumentDB database accounts.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Indicates the type of database account. This can only be set at database account creation.",
          "type": "string",
          "default": "GlobalDocumentDB",
          "enum": [
            "GlobalDocumentDB",
            "MongoDB",
            "Parse"
          ],
          "x-ms-enum": {
            "name": "DatabaseAccountKind",
            "modelAsString": true
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DatabaseAccountCreateUpdateProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "required": [
        "properties"
      ]
    },
    "DatabaseAccountPatchParameters": {
      "description": "Parameters for patching Azure DocumentDB database account properties.",
      "type": "object",
      "properties": {
        "tags": {
          "$ref": "#/definitions/Tags"
        }
      },
      "required": [
        "tags"
      ]
    },
    "DatabaseAccountListReadOnlyKeysResult": {
      "description": "The read-only access keys for the given database account.",
      "properties": {
        "primaryReadonlyMasterKey": {
          "readOnly": true,
          "type": "string",
          "description": "Base 64 encoded value of the primary read-only key."
        },
        "secondaryReadonlyMasterKey": {
          "readOnly": true,
          "type": "string",
          "description": "Base 64 encoded value of the secondary read-only key."
        }
      }
    },
    "DatabaseAccountListKeysResult": {
      "description": "The access keys for the given database account.",
      "properties": {
        "primaryMasterKey": {
          "readOnly": true,
          "type": "string",
          "description": "Base 64 encoded value of the primary read-write key."
        },
        "secondaryMasterKey": {
          "readOnly": true,
          "type": "string",
          "description": "Base 64 encoded value of the secondary read-write key."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DatabaseAccountListReadOnlyKeysResult"
        }
      }
    },
    "DatabaseAccountConnectionString": {
      "description": "Connection string for the DocumentDB account",
      "properties": {
        "connectionString": {
          "readOnly": true,
          "type": "string",
          "description": "Value of the connection string"
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "Description of the connection string"
        }
      }
    },
    "DatabaseAccountListConnectionStringsResult": {
      "description": "The connection strings for the given database account.",
      "properties": {
        "connectionStrings": {
          "type": "array",
          "description": "An array that contains the connection strings for the DocumentDB account.",
          "items": {
            "$ref": "#/definitions/DatabaseAccountConnectionString"
          }
        }
      }
    },
    "DatabaseAccountRegenerateKeyParameters": {
      "type": "object",
      "description": "Parameters to regenerate the keys within the database account.",
      "properties": {
        "keyKind": {
          "type": "string",
          "description": "The access key to regenerate.",
          "enum": [
            "primary",
            "secondary",
            "primaryReadonly",
            "secondaryReadonly"
          ],
          "x-ms-enum": {
            "name": "KeyKind",
            "modelAsString": true
          }
        }
      },
      "required": [
       "keyKind"
      ]
    },
    "DatabaseAccountOfferType": {
      "description": "The offer type for the DocumentDB database account.",
      "type": "string",
      "enum": [
        "Standard"
      ],
      "x-ms-enum": {
        "name": "DatabaseAccountOfferType",
        "modelAsString": false
      }
    },
    "Tags": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters."
    },
    "ProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The status of the DocumentDB account at the time the operation was called. The status can be one of following. 'Creating' – the DocumentDB account is being created. When an account is in Creating state, only properties that are specified as input for the Create DocumentDB account operation are returned. 'Succeeded' – the DocumentDB account is active for use. 'Updating' – the DocumentDB account is being updated. 'Deleting' – the DocumentDB account is being deleted. 'Failed' – the DocumentDB account failed creation."
    },
    "IPRangeFilter": {
      "type": "string",
      "description": "DocumentDB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account. IP addresses/ranges must be comma separated and must not contain any spaces."
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Azure subscription ID.",
      "required": true,
      "type": "string"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request. The current version is 2015-04-08."
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method",
      "description": "Name of an Azure resource group."
    },
    "accountNameParameter": {
      "name": "accountName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "DocumentDB database account name.",
      "minLength": 3,
      "maxLength": 50
    }
  }  
}
