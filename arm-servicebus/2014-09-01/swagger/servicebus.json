{
  "swagger": "2.0",
  "info": {
    "title": "ServiceBusManagementClient",
    "description": "Azure Service Bus client",
    "version": "2014-09-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/json"
  ],
  "produces": [
    "application/json",
    "text/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/checkNamespaceAvailability": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CheckAvailability",
        "description": "Checks the availability of the given service namespace across all Windows Azure subscriptions. This is useful because the domain name is created based on the service namespace name.",
        "externalDocs": {
          "url": "http://msdn.microsoft.com/en-us/library/windowsazure/jj870968.aspx"
        },
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityParameters"
            },
            "description": "The namespace name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CreateOrUpdate",
        "description": "Creates/Updates a service namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639408.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamespaceCreateOrUpdateParameters"
            },
            "description": "Parameters supplied to create a Namespace Resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Namespace create request accepted",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          },
          "400": {
            "description": "Invalid request body"
            },
          "500": {
            "description": "Internal error"
            }
          },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Delete",
        "description": "Deletes an existing namespace. This operation also removes all associated resources under the namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639389.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "404": {
            "description": "Namespace does not exist"
          },
          "200": {
            "description": "Namespace delete successful"
          },
          "500": {
            "description": "Internal error"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Get",
        "description": "Returns the description for the specified namespace.",
        "externalDocs": {
          "url": ""
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace returned successfully",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CreateOrUpdateAuthorizationRule",
        "description": "Creates an authorization rule for a namespace",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Aauthorization Rule Name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleCreateOrUpdateParameters"
            },
            "description": "The shared access authorization rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rule created",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_DeleteAuthorizationRule",
        "description": "Deletes a namespace authorization rule",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Authorization Rule Name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rule deleted"
          }
        }
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_GetAuthorizationRule",
        "description": "Gets an authorization rule for a namespace by name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Authorization rule name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rule returned successfully",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListByResourceGroup",
        "description": "Lists the available namespaces within a resourceGroup.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639412.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. If resourceGroupName value is null the method lists all the namespaces within subscription"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespaces returned successfully",
            "schema": {
              "$ref": "#/definitions/NamespaceListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListBySubscription",
        "description": "Lists all the available namespaces within the subscription irrespective of the resourceGroups.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639412.aspx"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespaces returned successfully",
            "schema": {
              "$ref": "#/definitions/NamespaceListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListAuthorizationRules",
        "description": "Gets the authorization rules for a namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rule returned successfully",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListKeys",
        "description": "Gets the Primary and Secondary ConnectionStrings to the namespace ",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639398.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The connection string of the namespace for the specified authorizationRule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_RegenerateKeys",
        "description": "Gets the Primary and Secondary ConnectionStrings to the namespace ",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt718977.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The connection string of the namespace for the specified authorizationRule."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateKeysParameters"
            },
            "description": "Parameters supplied to regenerate Auth Rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CheckAvailabilityParameters": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets name"
        },
        "location": {
          "type": "string",
          "description": "Gets or sets location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets or sets tags."
        },
        "isAvailiable": {
          "type": "boolean",
          "description": "Gets or sets true if the name is available and can be used to create new Namespace/ServiceBus. Otherwise false."
        }
      },
      "required": [
        "name"
      ],
      "description": "Parameters supplied to the Check Name Availability for Namespace and ServiceBus."
    },
    "CheckAvailabilityResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets the id"
        },
        "location": {
          "type": "string",
          "description": "Gets or sets datacenter location"
        },
        "name": {
          "type": "string",
          "description": "Gets or sets name"
        },
        "type": {
          "type": "string",
          "description": "Gets or sets resource type"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets or sets tags"
        },
        "isAvailiable": {
          "type": "boolean",
          "description": "Gets or sets true if the name is available and can be used to create new Namespace/ServiceBus. Otherwise false."
        }
      },
      "description": "Description of a CheckAvailibility resource."
    },
    "NamespaceProperties": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the namespace."
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets or sets provisioning state of the Namespace."
        },
        "region": {
          "externalDocs": {
            "url": "http://msdn.microsoft.com/en-us/library/windowsazure/jj873988.aspx"
          },
          "type": "string",
          "description": "Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia EastAustralia SoutheastCentral USEast USEast US 2West USNorth Central USSouth Central USEast AsiaSoutheast AsiaBrazil SouthJapan EastJapan WestNorth EuropeWest Europe"
        },
        "status": {
          "externalDocs": {
            "url": "http://msdn.microsoft.com/en-us/library/windowsazure/jj873988.aspx"
          },
          "type": "string",
          "description": "Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The time the namespace was created."
        },
        "serviceBusEndpoint": {
          "externalDocs": {
            "url": "http://msdn.microsoft.com/en-us/library/windowsazure/jj873988.aspx"
          },
          "type": "string",
          "description": "Endpoint you can use to perform ServiceBus operations."
        },
        "subscriptionId": {
          "type": "string",
          "description": "The Id of the Azure subscription associated with the namespace."
        },
        "scaleUnit": {
          "type": "string",
          "description": "ScaleUnit where the namespace gets created"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether or not the namespace is currently enabled."
        },
        "critical": {
          "type": "boolean",
          "description": "Whether or not the namespace is set as Critical."
        },
        "namespaceType": {
          "type": "string",
          "description": "Gets or sets the namespace type.",
          "enum": [
            "Messaging",
            "NotificationHub",
            "EventHub"
          ],
          "x-ms-enum": {
            "name": "NamespaceType",
            "modelAsString": false
          }
        }
      },
      "description": "Namespace properties."
    },
    "RegenerateKeysParameters": {
      "properties": {
        "Policykey": {
          "type": "string",
          "description": "Key that needs to be regenerated ."
        }
      },
      "description": "Parameters supplied to the Regenerate Namespace Auth Rule."
    },
    "NamespaceCreateOrUpdateParameters": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Gets or sets Namespace data center location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets or sets Namespace tags."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NamespaceProperties",
          "description": "Gets or sets properties of the Namespace."
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "description": "Parameters supplied to the CreateOrUpdate Namespace operation."
    },
    "NamespaceResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets the id of the created Namespace."
        },
        "location": {
          "type": "string",
          "description": "Gets or sets datacenter location of the Namespace."
        },
        "kind": {
          "type": "string",
          "description": "Gets or sets kind of the Namespace."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets name of the Namespace."
        },
        "type": {
          "type": "string",
          "description": "Gets or sets resource type of the Namespace."
        },
        "sku": {
          "$ref": "#/definitions/ARMSku",
          "description": "Gets or sets sku of the Namespace."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets or sets tags of the Namespace."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NamespaceProperties",
          "description": "Gets or sets properties of the Namespace."
        }
      },
      "description": "Description of a Namespace resource."
    },
    "ARMSku": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "The resource type that this object applies to. Eg: NamespaceType"
        },
        "Tier": {
          "type": "string",
          "description": "The tier of this particular SKU"
        },
        "Size": {
          "type": "string",
          "description": "optional"
        },
        "Family": {
          "type": "string",
          "description": "optional"
        },
        "Capacity": {
          "format": "int32",
          "type": "integer",
          "description": "The messaging units or eventhub throughput units"
        }
      }
    },
    "SharedAccessAuthorizationRuleProperties": {
      "properties": {
        "rights": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Manage",
              "Send",
              "Listen"
            ],
            "x-ms-enum": {
              "name": "AccessRights",
              "modelAsString": false
            }
          },
          "description": "The rights associated with the rule."
        }
      },
      "description": "SharedAccessAuthorizationRule properties."
    },
    "SharedAccessAuthorizationRuleCreateOrUpdateParameters": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Gets or sets Namespace data center location."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets Name of the Namespace AuthorizationRule."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SharedAccessAuthorizationRuleProperties",
          "description": "Gets or sets properties of the Namespace AuthorizationRules."
        }
      },
      "required": [
        "properties"
      ],
      "description": "Parameters supplied to the CreateOrUpdate Namespace AuthorizationRules."
    },
    "SharedAccessAuthorizationRuleResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets the id of the created Namespace AuthorizationRules."
        },
        "location": {
          "type": "string",
          "description": "Gets or sets datacenter location of the Namespace AuthorizationRules."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets name of the Namespace AuthorizationRules."
        },
        "type": {
          "type": "string",
          "description": "Gets or sets resource type of the Namespace AuthorizationRules."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets or sets tags of the Namespace AuthorizationRules."
        },
        "properties": {
          "$ref": "#/definitions/SharedAccessAuthorizationRuleProperties",
          "description": "Gets or sets properties of the Namespace."
        }
      },
      "description": "Description of a Namespace AuthorizationRules."
    },
    "NamespaceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamespaceResource"
          },
          "description": "Gets or sets result of the List Namespace operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets link to the next set of results. Not empty if Value contains incomplete list of Namespaces"
        }
      },
      "description": "The response of the List Namespace operation."
    },
    "SharedAccessAuthorizationRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
          },
          "description": "Gets or sets result of the List AuthorizationRules operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets link to the next set of results. Not empty if Value contains incomplete list of AuthorizationRules"
        }
      },
      "description": "The response of the List Namespace operation."
    },
    "ResourceListKeys": {
      "properties": {
        "primaryConnectionString": {
          "type": "string",
          "description": "Gets or sets the primaryConnectionString of the created Namespace AuthorizationRule."
        },
        "secondaryConnectionString": {
          "type": "string",
          "description": "Gets or sets the secondaryConnectionString of the created Namespace AuthorizationRule"
        },
        "primaryKey": {
          "type": "string",
          "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token"
        },
        "secondaryKey": {
          "type": "string",
          "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token"
        },
        "keyName": {
          "type": "string",
          "description": "A string that describes the authorization rule"
        }
      },
      "description": "Namespace/ServiceBus Connection String"
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    }
  }
}