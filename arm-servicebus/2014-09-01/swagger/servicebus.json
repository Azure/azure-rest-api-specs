{
  "swagger": "2.0",
  "info": {
    "title": "ServiceBusManagementClient",
    "description": "Azure Service Bus client",
    "version": "2014-09-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/json"
  ],
  "produces": [
    "application/json",
    "text/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/checkNamespaceAvailability": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CheckAvailability",
        "description": "Checks the availability of the given service namespace across all Windows Azure subscriptions. This is useful because the domain name is created based on the service namespace name.",
        "externalDocs": {
          "url": "http://msdn.microsoft.com/en-us/library/windowsazure/jj870968.aspx"
        },
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityParameters"
            },
            "description": "The namespace name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Checked name successfully",
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CreateOrUpdate",
        "description": "Creates/Updates a service namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639408.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamespaceCreateOrUpdateParameters"
            },
            "description": "Parameters supplied to create a Namespace Resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Namespace create request accepted",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Delete",
        "description": "Deletes an existing namespace. This operation also removes all associated resources under the namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639389.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace delete successful"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Get",
        "description": "Returns the description for the specified namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639379.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace returned successfully",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CreateOrUpdateAuthorizationRule",
        "description": "Creates an authorization rule for a namespace",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Aauthorization Rule Name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleCreateOrUpdateParameters"
            },
            "description": "The shared access authorization rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rule created",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_DeleteAuthorizationRule",
        "description": "Deletes a namespace authorization rule",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Authorization Rule Name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rule deleted"
          }
        }
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_GetAuthorizationRule",
        "description": "Gets an authorization rule for a namespace by name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Authorization rule name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rule returned successfully",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListByResourceGroup",
        "description": "Lists the available namespaces within a resourceGroup.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639412.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. If resourceGroupName value is null the method lists all the namespaces within subscription"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespaces returned successfully",
            "schema": {
              "$ref": "#/definitions/NamespaceListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListBySubscription",
        "description": "Lists all the available namespaces within the subscription irrespective of the resourceGroups.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639412.aspx"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespaces returned successfully",
            "schema": {
              "$ref": "#/definitions/NamespaceListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListAuthorizationRules",
        "description": "Gets the authorization rules for a namespace.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rule returned successfully",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListKeys",
        "description": "Gets the Primary and Secondary ConnectionStrings to the namespace ",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639398.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The connection string of the namespace for the specified authorizationRule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_RegenerateKeys",
        "description": "Gets the Primary and Secondary ConnectionStrings to the namespace ",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt718977.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The connection string of the namespace for the specified authorizationRule."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateKeysParameters"
            },
            "description": "Parameters supplied to regenerate Auth Rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}": {
      "put": {
        "tags": [
          "Queues"
        ],
        "operationId": "Namespaces_CreateOrUpdateQueue",
        "description": "Creates/Updates a service Queue. This operation is idempotent.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639395.aspx"
        },
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name":"queueName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The queue name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueueCreateOrUpdateParameters"
            },
            "description": "Parameters supplied to create a Queue Resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Queue created",
            "schema": {
              "$ref": "#/definitions/QueueResource"
            }
          }
        }
      },
     "delete": {
         "tags": [
           "Queues"
         ],
         "operationId": "Queues_Delete",
         "description": "Deletes a queue from the specified namespace and resource group.",
         "externalDocs": {
             "url": "https://msdn.microsoft.com/en-us/library/azure/mt639411.aspx"
         },
        "parameters": [
          {
              "name": "resourceGroupName",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "The name of the resource group."
          },
          {
              "name":"queueName",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "The queue name."
          },
          {
              "name": "namespaceName",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "The namespace name."
          },
          {
              "$ref": "#/parameters/ApiVersionParameter"
          },
          {
              "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {          
            "200": {
                "description": "Queue deleted."
            }         
        },
        "x-ms-long-running-operation": false
     },
      "get": {
          "tags": [
            "Queues"
          ],
          "operationId": "Queues_Get",
          "description": "Returns the description for the specified namespace.",
          "externalDocs": {
              "url": "https://msdn.microsoft.com/en-us/library/azure/mt639380.aspx"
          },
        "parameters": [
          {
              "name": "resourceGroupName",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "The name of the resource group."
          },
          {
              "name": "namespaceName",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "The namespace name."
          },
          {
              "name":"queueName",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "The queue name."
          },
          {
              "$ref": "#/parameters/ApiVersionParameter"
          },
          {
              "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
            "200": {
                "description": "Successfully retrieved queue description.",
                "schema": {
                    "$ref": "#/definitions/QueueResource"
                }
            }
        }
      }
    }
  },
  "definitions": {
     "QueueCreateOrUpdateParameters": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets Queue name."
        },
        "type": {
          "type": "string",
          "description": "Gets or sets ARM type of the namespace."
        },
        "location": {
          "type": "string",
          "description": "Gets or sets  the location of the resource."
        },       
        "properties": {
          "$ref": "#/definitions/QueueProperties",
          "description": "Gets or sets properties of the Queues."
        }
      },
      "required": [
        "location"        
      ],
      "description": "Parameters supplied to the CreateOrUpdate Queue operation."
    },
    "QueueProperties": {
      "properties": {
        "AccessedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Get last time a message was sent, or the last time there was a receive request to this queue."
        },        
        "AutoDeleteOnIdle": {
           "type": "string",
           "format": "time-span",
           "description": "Gets or sets the TimeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes."
          },
         "AvailabilityStatus ": {
          "type": "string",
          "description": "Gets the entity availability status for the queue.",
          "enum": [
            "Available",
            "Limited",
            "Renaming",
            "Restoring",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "NamespaceType",
            "modelAsString": false
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the exact time the message was created."
        },
        "DefaultMessageTimeToLive": {
           "type": "string",
           "format": "time-span",
           "description": "Gets or sets the default message time to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
          },
         "DuplicateDetectionHistoryTimeWindow ": {
           "type": "string",
           "format": "time-span",
           "description": "Gets or sets the TimeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.."
          },
          "EnableBatchedOperations": {
          "type": "boolean",
          "description": "Gets or sets a value that indicates whether server-side batched operations are enabled.."
        },
        "EnableDeadLetteringOnMessageExpiration": {
          "type": "boolean",
          "description": "Gets or sets a value that indicates whether this queue has dead letter support when a message expires."
        },
        "EnableExpress": {
          "type": "boolean",
          "description": "Gets or sets a value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage."
        },
        "EnablePartitioning": {
          "type": "boolean",
          "description": "Gets or sets a value that indicates whether the queue to be partitioned across multiple message brokers is enabled."
        },
        "ForwardDeadLetteredMessagesTo": {
          "type": "string",
          "description": "Gets or sets the path to the recipient to which the dead lettered message is forwarded."
        },
        "ForwardTo": {
          "type": "string",
          "description": "Gets or sets the path to the recipient to which the message is forwarded."
        },
        "IsAnonymousAccessible": {
          "type": "boolean",
          "description": "Gets or sets a value that indicates whether the message is anonymous accessible."
        },
        "LockDuration ": {
           "type": "string",
           "format": "time-span",
           "description": "Gets or sets the duration of a peek lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute."
          },
          "MaxDeliveryCount ": {
           "format": "int32",
           "type": "integer",
           "description": "Gets or sets the maximum delivery count. A message is automatically deadlettered after this number of deliveries."
          },
          "MaxSizeInMegabytes ": {
           "format": "int64",
           "type": "integer",
           "description": "Gets or sets the maximum size of the queue in megabytes, which is the size of memory allocated for the queue."
          },
           "MessageCount ": {
           "format": "int64",
           "type": "integer",
           "description": "Gets the number of messages in the queue."
          },
          "MessageCountDetails": {
          "type": "object",
          "description": "Gets message details for a queue."
        },
        "Path": {
          "type": "string",
          "description": "Gets or sets the name of the queue."
        },
         "RequiresDuplicateDetection": {
          "type": "boolean",
          "description": "Gets or sets the value indicating if this queue requires duplicate detection."
        },
         "RequiresSession": {
          "type": "boolean",
          "description": "Gets or sets a value that indicates whether the queue supports the concept of session."
        },
        "SizeInBytes ": {
           "format": "int64",
           "type": "integer",
           "description": "Gets the size of the queue in bytes."
          },
         "EntityStatus ": {
          "type": "string",
          "description": "Enumerates the possible values for the status of a messaging entity.",
          "enum": [
            "Active",
            "Creating",
            "Deleting",
            "Disabled",
            "ReceiveDisabled",
            "Renaming",
            "Restoring",
            "SendDisabled",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "EntityStatus",
            "modelAsString": false
          }
        },
        "SupportOrdering": {
          "type": "boolean",
          "description": "Gets or sets a value that indicates whether the queue supports ordering."
        },
        "UpdatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the exact time the message has been updated."
        },
         "UserMetadata": {
          "type": "string",
          "description": "Gets or sets the user metadata."
        }
    },
      "description": "Represents the metadata description of the queue."
    },
    "QueueResource": {
      "properties": {
                   "properties": {
                "$ref": "#/definitions/QueueProperties",
                "description": "Gets or sets properties of the Queues."
            }
        },
      "allOf": [
        {
            "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Description of queue Resource."
    },
    "CheckAvailabilityParameters": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the namespace"
        },
        "location": {
          "type": "string",
          "description": "Namespace location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Namespace tags"
        },
        "isAvailiable": {
          "type": "boolean",
          "description": "Is true if the name is available and can be used to create new Namespace/ServiceBus. Otherwise false."
        }
      },
      "required": [
        "name"
      ],
      "description": "Parameters supplied to the Check Name Availability for Namespace and ServiceBus."
    },
    "CheckAvailabilityResource": {
      "properties": {
        "isAvailiable": {
          "type": "boolean",
          "description": "Is true if the name is available and can be used to create new Namespace/ServiceBus. Otherwise false."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Description of a CheckAvailibility resource."
    },
    "NamespaceProperties": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the namespace."
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the Namespace."
        },
        "region": {
          "externalDocs": {
            "url": "http://msdn.microsoft.com/en-us/library/windowsazure/jj873988.aspx"
          },
          "type": "string",
          "description": "Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia EastAustralia SoutheastCentral USEast USEast US 2West USNorth Central USSouth Central USEast AsiaSoutheast AsiaBrazil SouthJapan EastJapan WestNorth EuropeWest Europe"
        },
        "status": {
          "externalDocs": {
            "url": "http://msdn.microsoft.com/en-us/library/windowsazure/jj873988.aspx"
          },
          "type": "string",
          "description": "Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The time the namespace was created."
        },
        "serviceBusEndpoint": {
          "externalDocs": {
            "url": "http://msdn.microsoft.com/en-us/library/windowsazure/jj873988.aspx"
          },
          "type": "string",
          "description": "Endpoint you can use to perform ServiceBus operations."
        },
        "subscriptionId": {
          "type": "string",
          "description": "The Id of the Azure subscription associated with the namespace."
        },
        "critical": {
          "type": "boolean",
          "description": "Whether or not the namespace is set as Critical."
        },
        "namespaceType": {
          "type": "string",
          "description": "The namespace type.",
          "enum": [
            "Messaging",
            "NotificationHub",
            "EventHub"
          ],
          "x-ms-enum": {
            "name": "NamespaceType",
            "modelAsString": true
          }
        }
      },
      "x-ms-client-flatten": true,
      "description": "Properties of the Namespace."
    },
    "RegenerateKeysParameters": {
      "properties": {
        "Policykey": {
          "type": "string",
          "description": "Key that needs to be regenerated .",
          "enum": [
            "PrimaryKey",
            "SecondayKey"
          ],
          "x-ms-enum": {
            "name": "Policykey",
            "modelAsString": false
          }
        }
      },
      "description": "Parameters supplied to the Regenerate Namespace Auth Rule."
    },
    "NamespaceCreateOrUpdateParameters": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Namespace data center location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Namespace tags."
        },
        "properties": {
          "$ref": "#/definitions/NamespaceProperties"
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "description": "Parameters supplied to the CreateOrUpdate Namespace operation."
    },
    "NamespaceResource": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind of the Namespace.",
          "enum": [
            "Messaging",
            "EventHub"
          ],
          "x-ms-enum": {
            "name": "kind",
            "modelAsString": true
          }
        },
        "sku": {
          "$ref": "#/definitions/ARMSku"
        },
        "properties": {
          "$ref": "#/definitions/NamespaceProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Description of a Namespace resource."
    },
    "ARMSku": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "The resource type that this object applies to. Eg: NamespaceType",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "Name",
            "modelAsString": true
          }
        },
        "Tier": {
          "type": "string",
          "description": "The tier of this particular SKU",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "Tier",
            "modelAsString": true
          }
        },
        "Capacity": {
          "format": "int32",
          "type": "integer",
          "description": "The messaging units or eventhub throughput units"
        }
      },
      "description": "Sku of the Namespace."
    },
    "SharedAccessAuthorizationRuleProperties": {
      "properties": {
        "rights": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Manage",
              "Send",
              "Listen"
            ],
            "x-ms-enum": {
              "name": "AccessRights",
              "modelAsString": false
            }
          },
          "description": "The rights associated with the rule."
        }
      },
      "x-ms-client-flatten": true,
      "description": "SharedAccessAuthorizationRule properties."
    },
    "SharedAccessAuthorizationRuleCreateOrUpdateParameters": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Namespace data center location."
        },
        "name": {
          "type": "string",
          "description": "Name of the Namespace AuthorizationRule."
        },
        "properties": {
          "$ref": "#/definitions/SharedAccessAuthorizationRuleProperties"
        }
      },
      "required": [
        "properties"
      ],
      "description": "Parameters supplied to the CreateOrUpdate Namespace AuthorizationRules."
    },
    "SharedAccessAuthorizationRuleResource": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/SharedAccessAuthorizationRuleProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Description of a Namespace AuthorizationRules."
    },
    "NamespaceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamespaceResource"
          },
          "description": "Result of the List Namespace operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of Namespaces"
        }
      },
      "description": "The response of the List Namespace operation."
    },
    "SharedAccessAuthorizationRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
          },
          "description": "Result of the List AuthorizationRules operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of AuthorizationRules"
        }
      },
      "description": "The response of the List Namespace operation."
    },
    "ResourceListKeys": {
      "properties": {
        "primaryConnectionString": {
          "type": "string",
          "description": "PrimaryConnectionString of the created Namespace AuthorizationRule."
        },
        "secondaryConnectionString": {
          "type": "string",
          "description": "SecondaryConnectionString of the created Namespace AuthorizationRule"
        },
        "primaryKey": {
          "type": "string",
          "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token"
        },
        "secondaryKey": {
          "type": "string",
          "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token"
        },
        "keyName": {
          "type": "string",
          "description": "A string that describes the authorization rule"
        }
      },
      "description": "Namespace/ServiceBus Connection String"
    },
    "Resource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "x-ms-azure-resource": true
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    }
  }
}