{
  "swagger": "2.0",
  "info": {
    "version": "2016-12-01",
    "title": "RecoveryServicesBackupClient",
    "x-ms-code-generation-settings": {
      "internalConstructors": false
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Returns the list of available operations.",
        "operationId": "Operations_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "./vaults.json#/definitions/ClientDiscoveryResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "NextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupconfig/vaultconfig": {
      "get": {
        "tags": [
          "BackupResourceVaultConfigs"
        ],
        "description": "Fetches resource vault config.",
        "operationId": "BackupResourceVaultConfigs_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/VaultName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupResourceVaultConfigResource"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "BackupResourceVaultConfigs"
        ],
        "description": "Updates vault config model type.",
        "operationId": "BackupResourceVaultConfigs_Update",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "name": "resourceBackupResourceVaultConfig",
            "in": "body",
            "description": "resourceBackupResourceVaultConfig",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupResourceVaultConfigResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupResourceVaultConfigResource"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupstorageconfig/vaultstorageconfig": {
      "get": {
        "tags": [
          "BackupResourceStorageConfigs"
        ],
        "description": "Fetches resource storage config.",
        "operationId": "BackupResourceStorageConfigs_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/VaultName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupResourceConfigResource"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "BackupResourceStorageConfigs"
        ],
        "description": "Updates vault storage model type.",
        "operationId": "BackupResourceStorageConfigs_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "name": "resourceBackupResourceConfig",
            "in": "body",
            "description": "resourceBackupResourceConfig",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupResourceConfigResource"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "BackupResourceConfig": {
      "description": "The resource storage details.",
      "type": "object",
      "properties": {
        "storageModelType": {
          "description": "Storage model type.",
          "enum": [
            "Invalid",
            "GeoRedundant",
            "LocallyRedundant"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "StorageModelType",
            "modelAsString": true
          }
        },
        "storageType": {
          "description": "Storage type.",
          "enum": [
            "Invalid",
            "GeoRedundant",
            "LocallyRedundant"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "StorageType",
            "modelAsString": true
          }
        },
        "storageTypeState": {
          "description": "Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.",
          "enum": [
            "Invalid",
            "Locked",
            "Unlocked"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "StorageTypeState",
            "modelAsString": true
          }
        }
      }
    },
    "BackupResourceConfigResource": {
      "description": "The resource storage details.",
      "allOf": [
        {
          "$ref": "./vaults.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupResourceConfig",
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupResourceVaultConfig": {
      "description": "Backup resource vault config details.",
      "type": "object",
      "properties": {
        "storageType": {
          "description": "Storage type.",
          "enum": [
            "Invalid",
            "GeoRedundant",
            "LocallyRedundant"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "StorageType",
            "modelAsString": true
          }
        },
        "storageTypeState": {
          "description": "Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.",
          "enum": [
            "Invalid",
            "Locked",
            "Unlocked"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "StorageTypeState",
            "modelAsString": true
          }
        },
        "enhancedSecurityState": {
          "description": "Enabled or Disabled.",
          "enum": [
            "Invalid",
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EnhancedSecurityState",
            "modelAsString": true
          }
        }
      }
    },
    "BackupResourceVaultConfigResource": {
      "description": "Backup resource vault config details.",
      "allOf": [
        {
          "$ref": "./vaults.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupResourceVaultConfig",
          "x-ms-client-flatten": true
        }
      }
    }
},
  "parameters": {
    "SubscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The subscription Id.",
      "required": true,
      "type": "string"
    },
    "ResourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group where the recovery services vault is present.",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string"
    },
    "VaultName": {
      "name": "vaultName",
      "in": "path",
      "description": "The name of the recovery services vault.",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string"
    },
    "ApiVersion": {
      "name": "api-version",
      "in": "query",
      "description": "Client Api Version.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account."
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}