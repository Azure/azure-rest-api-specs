{
  "swagger": "2.0",
  "info": {
    "version": "2015-05-01-preview",
    "title": "SqlManagementClient",
    "description": "The Database management API provides a RESTful set of web APIs that interact with Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/virtualNetworkRules/{vnetFirewallRuleName}": {
      "get": {
        "tags": [
          "VnetFirewallRule"
        ],
        "description": "Returns information about a Vnet Firewall Rule.",
        "operationId": "VnetFirewallRule_Get",
        "x-ms-examples": {
          "Gets the virtual network firewall rule": { "$ref": "../examples/VirtualNetworkRulesGet.json" }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "vnetFirewallRuleName",
            "in": "path",
            "description": "The name of the Virtual Network Firewall Rule.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the specified vnet firewall rule.",
            "schema": {
              "$ref": "#/definitions/VnetFirewallRule"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        }
      },
      "put": {
        "tags": [
          "VnetFirewallRule"
        ],
        "description": "Creates a new Vnet Firewall Rule or updates an existing Vnet Firewall Rule.",
        "operationId": "VnetFirewallRule_CreateOrUpdate",
        "x-ms-examples": {
          "Create or update a virtual network firewall rule": { "$ref": "../examples/VirtualNetworkRulesCreateOrUpdate.json" }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "vnetFirewallRuleName",
            "in": "path",
            "description": "The name of the Virtual Network Firewall Rule.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the vnet firewall rule.",
            "schema": {
              "$ref": "#/definitions/VnetFirewallRule"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidResourceId - Invalid resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 NullVirtualNetworkRequest - Virtual Network Request is Null\n\n * 400 NullVirtualNetworkRequestParameters - Virtual Network Request Parameters are Null\n\n * 400 NullVirtualNetworkSubnetId - The Virtual Network Subnet Id is null\n\n * 400 InvalidVirtualNetworkSubnetId - The Virtual Network Subnet url is missing a section. It should be of the form - \"subscriptions/{VirtualNetworkSubscriptionId}/resourceGroups/{VirtualNetworkResourceGroupName}/providers/{VirtualNetworkType}/virtualNetworks/{VirtualNetworkName}/subnets/{subnetName}\"\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
          },
          "201": {
            "description": "Successfully created the vnet firewall rule.",
            "schema": {
              "$ref": "#/definitions/VnetFirewallRule"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "VnetFirewallRule"
        ],
        "description": "Deletes the Vnet Firewall Rule with the given name.",
        "operationId": "VnetFirewallRule_Delete",
        "x-ms-examples": {
          "Delete a virtual network firewall rule": { "$ref": "../examples/VirtualNetworkRulesDelete.json" }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "vnetFirewallRuleName",
            "in": "path",
            "description": "The name of the Virtual Network Firewall Rule.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the Vnet Firewall Rule."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidResourceId - Invalid resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 NullVirtualNetworkRequest - Virtual Network Request is Null\n\n * 400 NullVirtualNetworkRequestParameters - Virtual Network Request Parameters are Null\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
          },
          "204": {
            "description": "The specified Vnet Firewall Rule does not exist."
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/virtualNetworkRules": {
      "get": {
        "tags": [
          "VnetFirewallRule"
        ],
        "description": "Returns information about Vnet Firewall Rules.",
        "operationId": "VnetFirewallRule_List",
        "x-ms-examples": {
          "Lists the virtual network firewall rules": { "$ref": "../examples/VirtualNetworkRulesList.json" }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of vnet firewall rules.",
            "schema": {
              "$ref": "#/definitions/VnetFirewallRuleList"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        }
      }
    }
  },
  "definitions": {
    "OperationListResult": {
      "description": "Result of the request to list SQL operations.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "Operation": {
      "description": "SQL REST API operation definition.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay"
        },
        "origin": {
          "enum": [
            "NotSpecified",
            "user",
            "system"
          ],
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "OperationDisplay": {
      "description": "Display metadata associated with the operation.",
      "type": "object",
      "properties": {
        "provider": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "operation": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "VnetFirewallRule": {
      "description": "Vnet Firewall Rule Resource.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VnetFirewallRuleResourceProperties"
        },
        "location": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "VnetFirewallRuleResourceProperties": {
      "description": "Properties of a vnet firewall rule resource.",
      "type": "object",
      "properties": {
        "virtualNetworkSubnetId": {
          "description": "The VnetSubnetId",
          "type": "string"
        }
      }
    },
    "VnetFirewallRuleList": {
      "description": "A list of Vnet Firewall Rule Resource.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VnetFirewallRule"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The Azure subscription ID.",
      "required": true,
      "type": "string"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "Client Api Version.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    },
    "ResourceGroupParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group that contains the resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ServerNameParameter": {
      "name": "serverName",
      "in": "path",
      "description": "The name of the server.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DatabaseNameParameter": {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}