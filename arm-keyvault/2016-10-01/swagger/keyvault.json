{
  "swagger": "2.0",
  "info": {
    "title": "KeyVaultManagementClient",
    "description": "The Azure management API provides a RESTful set of web services that interact with Azure Key Vault.",
    "version": "2016-10-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}": {
      "put": {
        "tags": [
          "Vaults"
        ],
        "operationId": "Vaults_CreateOrUpdate",
        "description": "Create or update a key vault in the specified subscription.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Resource Group to which the server belongs."
          },
          {
            "name": "vaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "description": "Name of the vault"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VaultCreateOrUpdateParameters"
            },
            "description": "Parameters to create or update the vault"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Created or updated vault",
            "schema": {
              "$ref": "#/definitions/Vault"
            }
          },
          "200": {
            "description": "Created or updated vault",
            "schema": {
              "$ref": "#/definitions/Vault"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Vaults"
        ],
        "operationId": "Vaults_Delete",
        "description": "Deletes the specified Azure key vault.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Resource Group to which the vault belongs."
          },
          {
            "name": "vaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vault to delete"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK Response."
          }
        }
      },
      "get": {
        "tags": [
          "Vaults"
        ],
        "operationId": "Vaults_Get",
        "description": "Gets the specified Azure key vault.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Resource Group to which the vault belongs."
          },
          {
            "name": "vaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vault."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved vault",
            "schema": {
              "$ref": "#/definitions/Vault"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults": {
      "get": {
        "tags": [
          "Vaults"
        ],
        "operationId": "Vaults_ListByResourceGroup",
        "description": "The List operation gets information about the vaults associated with the subscription and within the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Resource Group to which the vault belongs."
          },
          {
            "name": "$top",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of results to return."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get information about all key vaults in the specified resource group.",
            "schema": {
              "$ref": "#/definitions/VaultListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/deletedVaults": {
      "get": {
        "tags": [
          "Vaults"
        ],
        "operationId": "Vaults_ListDeleted",
        "description": "Gets information about the deleted vaults in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved information about all deleted key vaults in a subscription.",
            "schema": {
              "$ref": "#/definitions/DeletedVaultListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedVaults/{vaultName}": {
      "get": {
        "tags": [
          "Vaults"
        ],
        "operationId": "Vaults_GetDeleted",
        "description": "Gets the deleted Azure key vault.",
        "parameters": [
          {
            "name": "vaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vault."
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location of the deleted vault."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved information about the deleted vault.",
            "schema": {
              "$ref": "#/definitions/DeletedVault"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/locations/{location}/deletedVaults/{vaultName}/purge": {
      "post": {
        "tags": [
          "Vaults"
        ],
        "operationId": "Vaults_PurgeDeleted",
        "x-ms-long-running-operation": true,
        "description": "Permanently deletes the specified vault. aka Purges the deleted Azure key vault.",
        "parameters": [
          {
            "name": "vaultName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the soft-deleted vault."
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location of the soft-deleted vault."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The vault is purged."
          },
          "202": {
            "description": "Vault is being purged."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resources": {
      "get": {
        "tags": [
          "Vaults"
        ],
        "operationId": "Vaults_List",
        "description": "The List operation gets information about the vaults associated with the subscription.",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [ "resourceType eq 'Microsoft.KeyVault/vaults'" ],
            "description": "The filter to apply on the operation."
          },
          {
            "name": "$top",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of results to return."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [ "2015-11-01" ],
            "description": "Azure Resource Manager Api Version."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get information about all key vaults in the subscription.",
            "schema": {
              "$ref": "#/definitions/ResourceListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "Sku": {
      "properties": {
        "family": {
          "type": "string",
          "description": "SKU family name",
          "enum": [ "A" ],
          "x-ms-enum": {
            "name": "SkuFamily",
            "modelAsString": true
          }
        },
        "name": {
          "type": "string",
          "description": "SKU name to specify whether the key vault is a standard vault or a premium vault.",
          "enum": [ "standard", "premium" ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": false
          }
        }
      },
      "description": "SKU details",
      "required": [
        "name",
        "family"
      ]
    },
    "AccessPolicyEntry": {
      "properties": {
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault."
        },
        "objectId": {
          "type": "string",
          "description": "The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies."
        },
        "applicationId": {
          "type": "string",
          "format": "uuid",
          "description": " Application ID of the client making request on behalf of a principal"
        },
        "permissions": {
          "$ref": "#/definitions/Permissions",
          "description": "Permissions the identity has for keys, secrets and certificates."
        }
      },
      "description": "An identity that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
      "required": [
        "tenantId",
        "objectId",
        "permissions"
      ]
    },
    "Permissions": {
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [ "encrypt", "decrypt", "wrapKey", "unwrapKey", "sign", "verify", "get", "list", "create", "update", "import", "delete", "backup", "restore", "recover", "purge" ],
            "x-ms-enum": {
              "name": "KeyPermissions",
              "modelAsString": true
            }
          },
          "description": "Permissions to keys"
        },
        "secrets": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [ "get", "list", "set", "delete", "backup", "restore", "recover", "purge" ],
            "x-ms-enum": {
              "name": "SecretPermissions",
              "modelAsString": true
            }
          },
          "description": "Permissions to secrets"
        },
        "certificates": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [ "get", "list", "delete", "create", "import", "update", "managecontacts", "getissuers", "listissuers", "setissuers", "deleteissuers", "manageissuers", "recover", "purge" ],
            "x-ms-enum": {
              "name": "CertificatePermissions",
              "modelAsString": true
            }
          },
          "description": "Permissions to certificates"
        },
        "storage": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [ "get", "list", "delete", "set", "update", "regeneratekey", "setsas", "listsas", "getsas", "deletesas" ],
            "x-ms-enum": {
              "name": "StoragePermissions",
              "modelAsString": true
            }
          },
          "description": "Permissions to storage accounts"
        }
      },
      "description": "Permissions the identity has for keys, secrets, certificates and storage."
    },
    "VaultProperties": {
      "properties": {
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault."
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "SKU details"
        },
        "accessPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessPolicyEntry"
          },
          "maxItems": 16,
          "description": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID."
        },
        "vaultUri": {
          "type": "string",
          "description": "The URI of the vault for performing operations on keys and secrets."
        },
        "enabledForDeployment": {
          "type": "boolean",
          "description": "Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
        },
        "enabledForDiskEncryption": {
          "type": "boolean",
          "description": "Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
        },
        "enabledForTemplateDeployment": {
          "type": "boolean",
          "description": "Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
        },
        "enableSoftDelete": {
          "type": "boolean",
          "description": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. It does not accept false value."
        },
        "createMode": {
          "type": "string",
          "description": "The vault's create mode to indicate whether the vault need to be recovered or not.",
          "enum": [ "recover", "default" ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": false
          }
        }
      },
      "required": [
        "tenantId",
        "sku"
      ],
      "description": "Properties of the vault"
    },
    "DeletedVaultProperties": {
      "properties": {
        "vaultId": {
          "readOnly": true,
          "type": "string",
          "description": "The resource id of the original vault."
        },
        "location": {
          "readOnly": true,
          "type": "string",
          "description": "The location of the original vault."
        },
        "deletionDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The deleted date."
        },
        "scheduledPurgeDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The scheduled purged date."
        },
        "tags": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags of the original vault."
        }
      },
      "description": "Properties of the deleted vault."
    },
    "VaultCreateOrUpdateParameters": {
      "properties": {
        "location": {
          "type": "string",
          "description": "The supported Azure location where the key vault should be created."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The tags that will be assigned to the key vault."
        },
        "properties": {
          "$ref": "#/definitions/VaultProperties",
          "description": "Properties of the vault"
        }
      },
      "description": "Parameters for creating or updating a vault",
      "required": [
        "location",
        "properties"
      ],
      "x-ms-azure-resource": true
    },
    "Vault": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/VaultProperties",
          "description": "Properties of the vault"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Resource information with extended details."
    },
    "DeletedVault": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource ID for the deleted key vault."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the key vault."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type of the key vault."
        },
        "properties": {
          "$ref": "#/definitions/DeletedVaultProperties",
          "description": "Properties of the vault"
        }
      },
      "description": "Deleted vault information with extended details."
    },
    "VaultListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Vault"
          },
          "description": "Gets or sets the list of vaults."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets the URL to get the next set of vaults."
        }
      },
      "description": "List of vaults"
    },
    "DeletedVaultListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeletedVault"
          },
          "description": "The list of deleted vaults."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of deleted vaults."
        }
      },
      "description": "List of vaults"
    },
    "ResourceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          },
          "description": "Gets the list of vault resources."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of vault resources."
        }
      },
      "description": "List of vault resources."
    },
    "Resource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The Azure Resource Manager resource ID for the key vault."
        },
        "name": {
          "type": "string",
          "description": "The name of the key vault."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type of the key vault."
        },
        "location": {
          "type": "string",
          "description": "The supported Azure location where the key vault should be created."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The tags that will be assigned to the key vault. "
        }
      },
      "description": "Key Vault resource",
      "required": [
        "location",
        "name"
      ],
      "x-ms-azure-resource": true
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    }
  }
}