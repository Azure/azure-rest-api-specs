{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft Cognitive Language Service - Generate Question and Answer pairs ",
    "description": "The language service API is a suite of natural language processing (NLP) skills built with best-in-class Microsoft machine learning algorithms.  The API can be used to analyze unstructured text for tasks such as sentiment analysis, key phrase extraction, language detection, question answering and qna generation. Further documentation can be found in <a href=\"https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview\">https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview</a>.",
    "version": "2022-02-15-preview"
  },
  "securityDefinitions": {
    "apim_key": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "apim_key": []
    }
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}/language",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  },
  "paths": {
    "/generate-questionanswers": {
      "post": {
        "summary": "Generate Question and Answers from a set of documents.",
        "operationId": "GenerateQuestionAnswers_SubmitJob",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          },
          {
            "$ref": "#/parameters/SkipParameter"
          },
          {
            "$ref": "#/parameters/MaxPageSizeParameter"
          },
          {
            "$ref": "#/parameters/QnAGenerationRequestBody"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the job.",
            "headers": {
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "x-ms-client-name": "ErrorCode",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Successful query": {
            "$ref": "./examples/generate-questionanswers/SuccessfulSubmitQnAGenerationJob.json"
          },
          "Successful query with marked documents": {
            "$ref": "./examples/generate-questionanswers/SuccessfulSubmitQnAGenerationJob_IsMarked.json"
          },
          "Successful query with URL in a document": {
            "$ref": "./examples/generate-questionanswers/SuccessfulSubmitQnAGenerationJob_URL.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/generate-questionanswers/jobs/{jobId}": {
      "get": {
        "summary": "Gets the status of a QnA generation job.",
        "operationId": "GenerateQuestionAnswers_GetJobStatus",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/JobIdParameter"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "QnA generation job status.",
            "schema": {
              "$ref": "#/definitions/QnAGenerationJobState"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "x-ms-client-name": "ErrorCode",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Successful query": {
            "$ref": "./examples/generate-questionanswers/SuccessfulQnAGenerationJobStatus.json"
          }
        }
      }
    },
    "/generate-questionanswers/jobs/{jobId}/result": {
      "get": {
        "summary": "Gets the result of a QnA generation job.",
        "operationId": "GenerateQuestionAnswers_GetJobResult",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/JobIdParameter"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "questions"
        },
        "responses": {
          "200": {
            "description": "QnA generation job result.",
            "schema": {
              "$ref": "#/definitions/QnAGenerationResult"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "x-ms-client-name": "ErrorCode",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Successful result": {
            "$ref": "./examples/generate-questionanswers/SuccessfulQnAGenerationJobResult.json"
          },
          "Successful result when documents were marked": {
            "$ref": "./examples/generate-questionanswers/SuccessfulQnAGenerationJobResult_IsMarked.json"
          },
          "Successful result with URL in a document": {
            "$ref": "./examples/generate-questionanswers/SuccessfulQnAGenerationJobResult_URL.json"
          }
        }
      }
    }
  },
  "parameters": {
    "Endpoint": {
      "name": "Endpoint",
      "description": "Supported Cognitive Services endpoint (e.g., https://RESOURCE-NAME.api.cognitiveservices.azure.com).",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "format": "url",
      "in": "path",
      "x-ms-skip-url-encoding": true
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    },
    "TopParameter": {
      "name": "top",
      "in": "query",
      "description": "The maximum number of resources to return from the collection.",
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "SkipParameter": {
      "name": "skip",
      "in": "query",
      "description": "An offset into the collection of the first resource to be returned.",
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "MaxPageSizeParameter": {
      "name": "maxpagesize",
      "in": "query",
      "description": "The maximum number of resources to include in a single response.",
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "JobIdParameter": {
      "name": "jobId",
      "in": "path",
      "description": "Job ID.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "QnAGenerationRequestBody": {
      "name": "qnaGenerationRequestBody",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/QnAGenerationRequestBody"
      },
      "x-nullable": true,
      "description": "Post body of the request.",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "ErrorResponse": {
      "type": "object",
      "description": "Error response.",
      "additionalProperties": false,
      "properties": {
        "error": {
          "description": "The error object.",
          "$ref": "#/definitions/Error"
        }
      }
    },
    "Error": {
      "type": "object",
      "description": "The error object.",
      "additionalProperties": false,
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "One of a server-defined set of error codes.",
          "$ref": "#/definitions/ErrorCode"
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "innererror": {
          "description": "An object containing more specific information than the current object about the error.",
          "$ref": "#/definitions/InnerErrorModel"
        }
      }
    },
    "InnerErrorModel": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "additionalProperties": false,
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "One of a server-defined set of error codes.",
          "$ref": "#/definitions/InnerErrorCode"
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Error details."
        },
        "target": {
          "type": "string",
          "description": "Error target."
        },
        "innererror": {
          "description": "An object containing more specific information than the current object about the error.",
          "$ref": "#/definitions/InnerErrorModel"
        }
      }
    },
    "ErrorCode": {
      "type": "string",
      "description": "Human-readable error code.",
      "x-ms-enum": {
        "name": "ErrorCode",
        "modelAsString": true
      },
      "enum": [
        "InvalidRequest",
        "InvalidArgument",
        "Unauthorized",
        "Forbidden",
        "NotFound",
        "TooManyRequests",
        "InternalServerError",
        "ServiceUnavailable"
      ]
    },
    "InnerErrorCode": {
      "type": "string",
      "description": "Human-readable error code.",
      "x-ms-enum": {
        "name": "InnerErrorCode",
        "modelAsString": true
      },
      "enum": [
        "InvalidRequest",
        "InvalidParameterValue"
      ]
    },
    "Language": {
      "type": "string",
      "description": "Language of the document content. This is BCP-47 representation of a language. For example, use \"en\" for English; \"es\" for Spanish etc. If not set, use \"en\" for English as default."
    },
    "StringIndexType": {
      "type": "string",
      "description": "Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets.",
      "default": "TextElements_v8",
      "enum": [
        "TextElements_v8",
        "UnicodeCodePoint",
        "Utf16CodeUnit"
      ],
      "x-ms-enum": {
        "name": "StringIndexType",
        "modelAsString": true,
        "values": [
          {
            "value": "TextElements_v8",
            "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
          },
          {
            "value": "UnicodeCodePoint",
            "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
          },
          {
            "value": "Utf16CodeUnit",
            "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
          }
        ]
      }
    },
    "QnAGenerationRequestBody": {
      "type": "object",
      "description": "QnA Generation job with documents and qnagenparameters.",
      "additionalProperties": false,
      "properties": {
        "documents": {
          "type": "array",
          "description": "The set of documents to process as part of qna generation job.",
          "items": {
            "$ref": "#/definitions/QnAGenDocument"
          }
        },
        "qnaGenerationParameters": {
          "description": "Parameters that define max number of QnAs to be generated, fetch raw documents or not, etc.",
          "$ref": "#/definitions/QnAGenParameters"
        }
      }
    },
    "QnAGenerationResult": {
      "type": "object",
      "description": "QnA Generation job with documents and questions generated.",
      "properties": {
        "documents": {
          "type": "array",
          "description": "The set of documents with processed raw contents.",
          "items": {
            "$ref": "#/definitions/QnAGenDocument"
          }
        },
        "qnas": {
          "type": "array",
          "description": "The set of question and answers generated in the qna generation job.",
          "items": {
            "$ref": "#/definitions/GeneratedQnAs"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "QnAGenDocument": {
      "type": "object",
      "required": [
        "id",
        "content",
        "documentType"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique, non-empty document identifier."
        },
        "content": {
          "type": "string",
          "description": "The input text to process."
        },
        "documentType": {
          "type": "string",
          "$ref": "#/definitions/QnAGenDocumentType"
        },
        "language": {
          "type": "string",
          "description": "(Optional) This is the 2 letter ISO 639-1 representation of a language. For example, use \"en\" for English; \"es\" for Spanish etc. If not set, use \"en\" for English as default."
        }
      },
      "description": "Contains an input document to be analyzed by the service."
    },
    "QnAGenDocumentType": {
      "type": "string",
      "description": "QnA Gen Document type.",
      "enum": [
        "Raw",
        "URL",
        "HTML"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "qnaGenDocumentType",
        "values": [
          {
            "value": "Raw",
            "description": "Raw text which can have entity markers."
          },
          {
            "value": "URL",
            "description": "Content is a URL, whose page needs to be extracted and used for QnA generation."
          },
          {
            "value": "HTML",
            "description": "HTML markup text which can have entity markers."
          }
        ]
      }
    },
    "QnAGenParameters": {
      "type": "object",
      "description": "Parameters for configuring QnA Generation steps and limiting the output.",
      "additionalProperties": false,
      "properties": {
        "fetchRawContent": {
          "type": "boolean",
          "description": "Enable to fetch raw contents of document in the result."
        },
        "useAnswerMarkedInContent": {
          "type": "boolean",
          "description": "Specify this as true - if the documents have marker tags &lt;s&gt; and &lt;/s&gt; for highlighted answers. Example: Satya Nadella was born in &lt;s&gt; Hyderabad &lt;/s&gt; of present-day Telangana, India into a Telugu-speaking Hindu family."
        },
        "maxQnAs": {
          "type": "integer",
          "description": "Maximum number of QnAs to be generated.",
          "format": "int32",
          "maximum": 30,
          "minimum": 1
        }
      }
    },
    "GeneratedQnAs": {
      "type": "array",
      "description": "An array of QnAs generated from a document in the job.",
      "items": {
        "$ref": "#/definitions/GeneratedQnA"
      }
    },
    "GeneratedQnA": {
      "type": "object",
      "properties": {
        "questions": {
          "type": "string",
          "description": "A question generated for a specific answer from a document in the job."
        },
        "answer": {
          "type": "string",
          "description": "Entity or phrase which is the answer to the generated question from a particular document in the job."
        },
        "score": {
          "type": "number",
          "description": "Confidence score of a question generated against the answer in the document's content."
        },
        "confidence": {
          "type": "string",
          "description": "Confidence bucket of a question generated against the answer in the document's content. Possible values &quot;low&quot;, &quot;medium&quot;, &quot;high&quot;."
        },
        "documentId": {
          "type": "string",
          "description": "A unique, non-empty document identifier, GUID will be assigned if user had not provided Id in job request."
        }        
      },
      "description": "Questions generated for an Answer."
    },
    "JobMetadata": {
      "description": "Represents the job metadata.",
      "properties": {
        "createdDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "expirationDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "jobId": {
          "type": "string"
        },
        "lastUpdatedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/JobStatus"
        }
      },
      "required": [
        "jobId",
        "lastUpdatedDateTime",
        "createdDateTime",
        "status"
      ],
      "type": "object"
    },
    "JobStatus": {
      "description": "Job Status.",
      "enum": [
        "notStarted",
        "running",
        "succeeded",
        "failed",
        "cancelled",
        "cancelling",
        "partiallyCompleted"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "jobStatus"
      }
    },
    "QnAGenerationJobState": {
      "description": "QnA Generation Job state represents the job metadata and any errors and a result URL if job succeeded.",
      "allOf": [
        {
          "$ref": "#/definitions/JobState"
        },
        {
          "$ref": "#/definitions/QnAGenerationJobResultUrl"
        }
      ]
    },
    "QnAGenerationJobResultUrl": {
      "type": "object",
      "description": "URL to download the result of the QnA Generation Job.",
      "required": [
        "resultUrl"
      ],
      "properties": {
        "resultUrl": {
          "type": "string",
          "description": "URL to download the result of the QnA Generation Job."
        }
      }
    },
    "JobState": {
      "description": "Job state represents the job metadata and any errors.",
      "allOf": [
        {
          "$ref": "#/definitions/JobMetadata"
        },
        {
          "$ref": "#/definitions/Errors"
        }
      ]
    },
    "Errors": {
      "description": "Collection of Error types.",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    }
  }
}