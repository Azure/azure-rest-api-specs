{
    "swagger": "2.0",
    "info": {
        "title": "WANAsAServiceManagementClient",
        "description": "REST API for Azure WAN As a Service.",
        "version": "2017-06-01"
    },
    "host": "management.azure.com",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "security": [
        {
            "azure_auth": [
                "user_impersonation"
            ]
        }
    ],
    "securityDefinitions": {
        "azure_auth": {
            "type": "oauth2",
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "flow": "implicit",
            "description": "Azure Active Directory OAuth2 Flow",
            "scopes": {
                "user_impersonation": "impersonate your user account"
            }
        }
    },
    "paths": {
        "/subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/Microsoft.Network/WANs/{wanName}": {
            "get": {
                "operationId": "WANs_Get",
                "x-ms-examples": {
                    "WANGet": { "$ref": "../examples/WANGet.json" }
                },
                "description": "Retrieves the details of a WAN.",
                "parameters": [
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "name": "wanName",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The name of the WAN being retrieved."
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the WAN retrieved.",
                        "schema": {
                            "$ref": "#/definitions/WAN"
                        }
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 404 WAN doesn't exist."
                    }
                }
            },
            "put": {
                "operationId": "WANs_CreateOrUpdate",
                "x-ms-examples": {
                    "WANCreate": { "$ref": "../examples/WANPut.json" }
                },
                "description": "Creates a WAN resource if it doesn't exist else updates the existing WAN.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "name": "wanName",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The name of the WAN being created or updated."
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    },
                    {
                        "name": "parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WAN"
                        },
                        "description": "Parameters supplied to create or update WAN."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the WAN created or updated.",
                        "schema": {
                            "$ref": "#/definitions/WAN"
                        }
                    },
                    "202": {
                        "description": "Request received successfully. WAN is not yet provisioned; follow the Location header to poll for the WAN."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-long-running-operation": true
            },
            "patch": {
                "operationId": "WANs_Update",
                "x-ms-examples": {
                    "WANUpdate": { "$ref": "../examples/WANUpdate.json" }
                },
                "description": "Updates a WAN.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "name": "wanName",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The name of the WAN being updated."
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    },
                    {
                        "name": "parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WAN"
                        },
                        "description": "Parameters supplied to Update WAN."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the WAN updated.",
                        "schema": {
                            "$ref": "#/definitions/WAN"
                        }
                    },
                    "202": {
                        "description": "Request received successfully. WAN is not yet provisioned; follow the Location header to poll for the WAN."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-long-running-operation": true
            },
            "delete": {
                "operationId": "WANs_Delete",
                "x-ms-examples": {
                    "WANDelete": { "$ref": "../examples/WANDelete.json" }
                },
                "description": "Deletes a WAN.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "name": "wanName",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The name of the WAN being deleted."
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. WAN deleted."
                    },
                    "202": {
                        "description": "Request received successfully. WAN deletion is in progress; follow the Location header to poll for final outcome."
                    },
                    "204": {
                        "description": "No WANs exist by the name provided."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request. WAN still has hubs, cannot delete."
                    }
                },
                "x-ms-long-running-operation": true
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/Microsoft.Network/WANs": {
            "get": {
                "operationId": "WANs_ListByResourceGroup",
                "x-ms-examples": {
                    "WANListByResourceGroup": { "$ref": "../examples/WANListByResourceGroup.json" }
                },
                "description": "Lists all the WANs in a resource group.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of all the WANs in the resource group.",
                        "schema": {
                            "$ref": "#/definitions/ListWANsResult"
                        }
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/providers/Microsoft.Network/WANs": {
            "get": {
                "operationId": "WANs_ListBySubscriptionId",
                "x-ms-examples": {
                    "WANList": { "$ref": "../examples/WANList.json" }
                },
                "description": "Lists all the WANs in a subscription.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of all the WANs in the subscription.",
                        "schema": {
                            "$ref": "#/definitions/ListWANsResult"
                        }
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },

        "/subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}": {
            "get": {
                "operationId": "VpnSites_Get",
                "x-ms-examples": {
                    "VpnSiteGet": { "$ref": "../examples/VpnSiteGet.json" }
                },
                "description": "Retrieves the details of a VPNsite.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "name": "vpnSiteName",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The name of the VpnSite being retrieved."
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the VpnSite retrieved.",
                        "schema": {
                            "$ref": "#/definitions/VpnSite"
                        }
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request ***\n\n * 404 VpnSite doesn't exist."
                    }
                }
            },
            "put": {
                "operationId": "VpnSites_CreateOrUpdate",
                "x-ms-examples": {
                    "VpnSiteCreate": { "$ref": "../examples/VpnSitePut.json" }
                },
                "description": "Creates a VpnSite resource if it doesn't exist else updates the existing VpnSite.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "name": "vpnSiteName",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The name of the VpnSite being created or updated."
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    },
                    {
                        "name": "parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VpnSite"
                        },
                        "description": "Parameters supplied to create or update VpnSite."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the VpnSite created or updated.",
                        "schema": {
                            "$ref": "#/definitions/VpnSite"
                        }
                    },
                    "202": {
                        "description": "Request received successfully. VpnSite is not yet provisioned; follow the Location header to poll for the VpnSite."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-long-running-operation": true
            },
            "patch": {
                "operationId": "VpnSites_Update",
                "x-ms-examples": {
                    "VpnSiteUpdate": { "$ref": "../examples/VpnSiteUpdate.json" }
                },
                "description": "Updates a VpnSite.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "name": "vpnSiteName",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The name of the VpnSite being updated."
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    },
                    {
                        "name": "parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VpnSite"
                        },
                        "description": "Parameters supplied to Update VpnSite."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the VpnSite updated.",
                        "schema": {
                            "$ref": "#/definitions/VpnSite"
                        }
                    },
                    "202": {
                        "description": "Request received successfully. VpnSite is not yet updated; follow the Location header to poll for final outcome."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-long-running-operation": true
            },
            "delete": {
                "operationId": "VpnSites_Delete",
                "x-ms-examples": {
                    "VpnSiteDelete": { "$ref": "../examples/VpnSiteDelete.json" }
                },
                "description": "Deletes a VpnSite.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "name": "vpnSiteName",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "The name of the VpnSite being deleted."
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. VpnSite deleted."
                    },
                    "202": {
                        "description": "Request received successfully. VpnSite deletion is in progress; follow the Location header to poll for final outcome"
                    },
                    "204": {
                        "description": "No VpnSites exist by the name provided."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-long-running-operation": true
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/Microsoft.Network/vpnSites": {
            "get": {
                "operationId": "VpnSites_ListByResourceGroup",
                "x-ms-examples": {
                    "VpnSiteListByResourceGroup": { "$ref": "../examples/VpnSiteListByResourceGroup.json" }
                },
                "description": "Lists all the vpnSites in a resource group.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of all the vpnSites in the resource group.",
                        "schema": {
                            "$ref": "#/definitions/ListVpnSitesResult"
                        }
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnSites": {
            "get": {
                "operationId": "VpnSites_ListBySubscriptionId",
                "x-ms-examples": {
                    "VpnSiteList": { "$ref": "../examples/VpnSiteList.json" }
                },
                "description": "Lists all the VpnSites in a subscription.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of all the VpnSites in the subscription.",
                        "schema": {
                            "$ref": "#/definitions/ListVpnSitesResult"
                        }
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },

        "/subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/Microsoft.Network/vpnSites/vpnConfiguration": {
            "post": {
                "operationId": "VpnSitesConfiguration_Download",
                "x-ms-examples": {
                    "VpnSitesConfigurationDownload": { "$ref": "../examples/VpnSitesConfigurationDownload.json" }
                },
                "description": "Gives the sas-url to download the configurations for vpn-sites in a resource group.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "name": "WanParameter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WanParameter"
                        },
                        "description": "Parameters supplied to generate the configuration for vpn-sites."
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of all the vpnSites in the resource group.",
                        "schema": {
                            "$ref": "#/definitions/VpnSitesConfigurationDownloadResult"
                        }
                    },
                    "202": {
                        "description": "Accepted and the operation will complete asynchronously."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-long-running-operation": true
            }
        },

        "/subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/Microsoft.Network/hubs/{hubName}": {
            "get": {
                "operationId": "Hubs_Get",
                "x-ms-examples": {
                    "HubGet": { "$ref": "../examples/HubGet.json" }
                },
                "description": "Retrieves the details of a Hub.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the Hub retrieved.",
                        "schema": {
                            "$ref": "#/definitions/Hub"
                        }
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request. ***\n\n * 404 Hub Not Found."
                    }
                }
            },
            "put": {
                "operationId": "Hubs_CreateOrUpdate",
                "x-ms-examples": {
                    "HubPut": { "$ref": "../examples/HubPut.json" }
                },
                "description": "Creates a hub resource if it doesn't exist else updates the existing hub.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    },
                    {
                        "name": "parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Hub"
                        },
                        "description": "Parameters supplied to create or update Hub."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the Hub created or updated.",
                        "schema": {
                            "$ref": "#/definitions/Hub"
                        }
                    },
                    "202": {
                        "description": "Request received successfully. Hub is not yet provisioned; follow the Location header to poll for final outcome."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-long-running-operation": true
            },
            "patch": {
                "operationId": "Hubs_Update",
                "x-ms-examples": {
                    "HubUpdate": { "$ref": "../examples/HubUpdate.json" }
                },
                "description": "Updates a Hub.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    },
                    {
                        "name": "parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Hub"
                        },
                        "description": "Parameters supplied to update Hub."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the Hub updated.",
                        "schema": {
                            "$ref": "#/definitions/Hub"
                        }
                    },
                    "202": {
                        "description": "Request received successfully. Hub is not yet updated; follow the Location header to poll for final outcome."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-long-running-operation": true
            },
            "delete": {
                "operationId": "Hubs_Delete",
                "x-ms-examples": {
                    "HubDelete": { "$ref": "../examples/HubDelete.json" }
                },
                "description": "Deletes a Hub.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Hub deleted."
                    },
                    "202": {
                        "description": "Request received successfully. Hub deletion is in progress; follow the Location header to poll for final outcome."
                    },
                    "204": {
                        "description": "No Hubs exist by the name provided."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request. Cannot delete, hub is still referenced by a WAN."
                    }
                },
                "x-ms-long-running-operation": true
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/Microsoft.Network/hubs": {
            "get": {
                "operationId": "Hubs_ListByResourceGroup",
                "x-ms-examples": {
                    "HubListByResourceGroup": { "$ref": "../examples/HubListByResourceGroup.json" }
                },
                "description": "Lists all the hubs in a resource group.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of all the hubs in the resource group.",
                        "schema": {
                            "$ref": "#/definitions/ListHubsResult"
                        }
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/providers/Microsoft.Network/hubs": {
            "get": {
                "operationId": "Hubs_ListBySubscriptionId",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/HubList.json" }
                },
                "description": "Lists all the hubs in a subscription.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of all the hubs in the subscription.",
                        "schema": {
                            "$ref": "#/definitions/ListHubsResult"
                        }
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },

        "/subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/Microsoft.Network/hubs/{hubName}/scalableVpnGateways/{gatewayName}": {
            "get": {
                "operationId": "ScalableVpnGateways_Get",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/ScalableVpnGatewayGet.json" }
                },
                "description": "Retrieves the details of a scalable vpn gateway.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/GatewayParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the scalable vpn gateway retrieved.",
                        "schema": {
                            "$ref": "#/definitions/ScalableVpnGateway"
                        }
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                }
            },
            "put": {
                "operationId": "ScalableVpnGateways_CreateOrUpdate",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/ScalableVpnGatewayPut.json" }
                },
                "description": "Creates a scalable vpn gateway if it doesn't exist else updates the existing gateway.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/GatewayParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    },
                    {
                        "name": "parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScalableVpnGateway"
                        },
                        "description": "Parameters supplied to create or Update a scalable vpn gateway."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the scalabale Vpn Gateway created or updated.",
                        "schema": {
                            "$ref": "#/definitions/ScalableVpnGateway"
                        }
                    },
                    "202": {
                        "description": "Request received successfully. Scalabale Vpn Gateway is not yet provisioned; follow the Location header to poll for final outcome."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-long-running-operation": true
            },
            "patch": {
                "operationId": "ScalableVpnGateways_Update",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/ScalableVpnGatewayUpdate.json" }
                },
                "description": "Updates a scalable vpn gateway.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/GatewayParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    },
                    {
                        "name": "parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScalableVpnGateway"
                        },
                        "description": "Parameters supplied to update a scalable vpn gateway."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the updated gateway.",
                        "schema": {
                            "$ref": "#/definitions/ScalableVpnGateway"
                        }
                    },
                    "202": {
                        "description": "Request received successfully. ScalableVpnGateway is not yet updated; follow the Location header to poll for final outcome."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-long-running-operation": true
            },
            "delete": {
                "operationId": "ScalableVpnGateways_Delete",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/ScalableVpnGatewayDelete.json" }
                },
                "description": "Deletes a sacalable vpn gateway.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/GatewayParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Scalable Vpn Gateway deleted."
                    },
                    "202": {
                        "description": "Request received successfully. Scalable Vpn Gateway deletion is in progress; follow the Location header to poll for final outcome."
                    },
                    "204": {
                        "description": "No scalable Vpn gateways exist by the name provided."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-long-running-operation": true
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/Microsoft.Network/hubs/{hubName}/scalableVpnGateways/{gatewayName}/vpnConnections/{connectionName}": {
            "get": {
                "operationId": "VpnConnections_Get",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/VpnConnectionGet.json" }
                },
                "description": "Retrieves the details of a vpn connection.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/GatewayParameter"
                    },
                    {
                        "$ref": "#/parameters/ConnectionNameParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the vpn connection.",
                        "schema": {
                            "$ref": "#/definitions/VpnConnection"
                        }
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                }
            },
            "put": {
                "operationId": "VpnConnections_CreateOrUpdate",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/VpnConnectionPut.json" }
                },
                "description": "Creates a vpn connection to a scalable vpn gateway if it doesn't exist else updates the existing connection.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/GatewayParameter"
                    },
                    {
                        "$ref": "#/parameters/ConnectionNameParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    },
                    {
                        "name": "parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VpnConnection"
                        },
                        "description": "Parameters supplied to create or update a vpn connection to a scalable vpn gateway."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the vpn connection created or updated.",
                        "schema": {
                            "$ref": "#/definitions/VpnConnection"
                        }
                    },
                    "202": {
                        "description": "Request received successfully. Vpn connection is not yet provisioned; follow the Location header to poll for final outcome."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-long-running-operation": true
            },
            "patch": {
                "operationId": "VpnConnections_Update",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/VpnConnectionUpdate.json" }
                },
                "description": "Updates a vpn connection.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/GatewayParameter"
                    },
                    {
                        "$ref": "#/parameters/ConnectionNameParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    },
                    {
                        "name": "parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VpnConnection"
                        },
                        "description": "Parameters supplied to update a vpn connection."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the updated gateway.",
                        "schema": {
                            "$ref": "#/definitions/VpnConnection"
                        }
                    },
                    "202": {
                        "description": "Request received successfully. Vpn connection is not yet updated; follow the Location header to poll for final outcome."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-long-running-operation": true
            },
            "delete": {
                "operationId": "VpnConnections_Delete",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/VpnConnectionDelete.json" }
                },
                "description": "Deletes a vpn connection.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/GatewayParameter"
                    },
                    {
                        "$ref": "#/parameters/ConnectionNameParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Vpn connection deleted."
                    },
                    "202": {
                        "description": "Request received successfully. Vpn connection deletion is in progress; follow the Location header to poll for final outcome."
                    },
                    "204": {
                        "description": "No connections by the name exist."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-long-running-operation": true
            }
        },
        "/subscriptions/{subscriptionId}/providers/Microsoft.Network/hubs/{hubName}/scalableVpnGateways/{gatewayName}/vpnConnections": {
            "get": {
                "operationId": "VpnConnections_ListByScalableVpnGateway",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/VpnConnectionList.json" }
                },
                "description": "Retrieves all vpn connections for a particular scalable vpn gateway.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/GatewayParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns all Vpn connections for a scalable vpn gateway.",
                        "schema": {
                            "$ref": "#/definitions/ListVpnConnectionsResult"
                        }
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },

        "/subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/Microsoft.Network/hubs/{hubName}/scalableExpressRouteGateways/{gatewayName}": {
            "get": {
                "operationId": "ScalableExpressRouteGateways_Get",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/ScalableExpressRouteGatewayGet.json" }
                },
                "description": "Retrieves the details of a scalable ExpressRoute gateway.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/GatewayParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the scalable ExpressRoute gateway retrieved.",
                        "schema": {
                            "$ref": "#/definitions/ScalableExpressRouteGateway"
                        }
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                }
            },
            "put": {
                "operationId": "ScalableExpressRouteGateways_CreateOrUpdate",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/ScalableExpressRouteGatewayPut.json" }
                },
                "description": "Creates a scalable ExpressRoute gateway if it doesn't exist else updates the existing gateway.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/GatewayParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    },
                    {
                        "name": "parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScalableExpressRouteGateway"
                        },
                        "description": "Parameters supplied to create or update a scalable ExpressRoute gateway."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the scalabale ExpressRoute Gateway created or updated.",
                        "schema": {
                            "$ref": "#/definitions/ScalableExpressRouteGateway"
                        }
                    },
                    "202": {
                        "description": "Request received successfully. Scalabale ExpressRoute Gateway is not yet provisioned; follow the Location header to poll for final outcome."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-long-running-operation": true
            },
            "patch": {
                "operationId": "ScalableExpressRouteGateways_Update",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/ScalableExpressRouteGatewayUpdate.json" }
                },
                "description": "Updates a scalable ExpressRoute gateway.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/GatewayParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    },
                    {
                        "name": "parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScalableExpressRouteGateway"
                        },
                        "description": "Parameters supplied to update a scalable ExpressRoute gateway."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the updated gateway.",
                        "schema": {
                            "$ref": "#/definitions/ScalableExpressRouteGateway"
                        }
                    },
                    "202": {
                        "description": "Request received successfully. ScalableExpressRouteGateway is not yet updated; follow the Location header to poll for final outcome."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-long-running-operation": true
            },
            "delete": {
                "operationId": "ScalableExpressRouteGateways_Delete",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/ScalableExpressRouteGatewayDelete.json" }
                },
                "description": "Deletes a sacalable ExpressRoute gateway.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/GatewayParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Scalable ExpressRoute Gateway deleted."
                    },
                    "202": {
                        "description": "Request received successfully. Scalable ExpressRoute Gateway deletion is in progress; follow the Location header to poll for final outcome."
                    },
                    "204": {
                        "description": "No scalable ExpressRoute gateways exist by the name provided."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-long-running-operation": true
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/Microsoft.Network/hubs/{hubName}/scalableExpressRouteGateways/{gatewayName}/expressRouteConnections/{connectionName}": {
            "get": {
                "operationId": "ExpressRouteConnections_Get",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/ExpressRouteConnectionGet.json" }
                },
                "description": "Retrieves the details of an ExpressRoute connection.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/GatewayParameter"
                    },
                    {
                        "$ref": "#/parameters/ConnectionNameParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the ExpressRoute connection retrieved.",
                        "schema": {
                            "$ref": "#/definitions/ExpressRouteConnection"
                        }
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                }
            },
            "put": {
                "operationId": "ExpressRouteConnections_CreateOrUpdate",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/ExpressRouteConnectionPut.json" }
                },
                "description": "Creates an ExpressRoute connection to a scalable ExpressRoute gateway if it doesn't exist else updates the existing connection.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/GatewayParameter"
                    },
                    {
                        "$ref": "#/parameters/ConnectionNameParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    },
                    {
                        "name": "parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExpressRouteConnection"
                        },
                        "description": "Parameters supplied to create or update a ExpressRoute connection to a scalable ExpressRoute gateway."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the ExpressRoute connection created or updated.",
                        "schema": {
                            "$ref": "#/definitions/ExpressRouteConnection"
                        }
                    },
                    "202": {
                        "description": "Request received successfully. ExpressRoute connection is not yet provisioned; follow the Location header to poll for final outcome."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-long-running-operation": true
            },
            "patch": {
                "operationId": "ExpressRouteConnections_Update",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/ExpressRouteConnectionUpdate.json" }
                },
                "description": "Updates an ExpressRoute connection.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/GatewayParameter"
                    },
                    {
                        "$ref": "#/parameters/ConnectionNameParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    },
                    {
                        "name": "parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExpressRouteConnection"
                        },
                        "description": "Parameters supplied to update an ExpressRoute connection."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the updated gateway.",
                        "schema": {
                            "$ref": "#/definitions/ExpressRouteConnection"
                        }
                    },
                    "202": {
                        "description": "Request received successfully. ExpressRoute connection is not yet updated; follow the Location header to poll for final outcome."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-long-running-operation": true
            },
            "delete": {
                "operationId": "ExpressRouteConnections_Delete",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/ExpressRouteConnectionDelete.json" }
                },
                "description": "Deletes an ExpressRoute connection.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/GatewayParameter"
                    },
                    {
                        "$ref": "#/parameters/ConnectionNameParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. ExpressRoute connection is deleted."
                    },
                    "202": {
                        "description": "Request received successfully. ExpressRoute connection deletion is in progress; follow the Location header to poll for final outcome."
                    },
                    "204": {
                        "description": "No connections by the name exist."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-long-running-operation": true
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/Microsoft.Network/hubs/{hubName}/scalableExpressRouteGateways/{gatewayName}/expressRouteConnections": {
            "get": {
                "operationId": "ExpressRouteConnections_List",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/ExpressRouteConnectionList.json" }
                },
                "description": "Retrieves the details of all ExpressRoute connections for a particular scalable ExpressRoute gateway.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/GatewayParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of all the ExpressRoute connections to the gateway.",
                        "schema": {
                            "$ref": "#/definitions/ListExpressRouteConnectionsResult"
                        }
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },

        "/subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/Microsoft.Network/hubs/{hubName}/HubVnetConnections/{connectionName}": {
            "get": {
                "operationId": "HubVnetConnections_Get",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/HubVnetConnectionGet.json" }
                },
                "description": "Retrieves the details of a HubVnet connection.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/ConnectionNameParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the HubVnet connection retrieved.",
                        "schema": {
                            "$ref": "#/definitions/HubVnetConnection"
                        }
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                }
            },
            "put": {
                "operationId": "HubVnetConnections_CreateOrUpdate",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/HubVnetConnectionPut.json" }
                },
                "description": "Creates a HubVnet connection if it doesn't exist else updates the existing hub vnet connection.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/ConnectionNameParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    },
                    {
                        "name": "parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HubVnetConnection"
                        },
                        "description": "Parameters supplied to create or update a HubVnet connection."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the HubVnet connection created or updated.",
                        "schema": {
                            "$ref": "#/definitions/HubVnetConnection"
                        }
                    },
                    "202": {
                        "description": "Request received successfully. HubVnet connection is not yet provisioned; follow the Location header to poll for final outcome."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-long-running-operation": true
            },
            "patch": {
                "operationId": "HubVnetConnections_Update",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/HubVnetConnectionUpdate.json" }
                },
                "description": "Updates a HubVnet connection.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/ConnectionNameParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    },
                    {
                        "name": "parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HubVnetConnection"
                        },
                        "description": "Parameters supplied to update a HubVnet connection."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of the updated HubVnet connection.",
                        "schema": {
                            "$ref": "#/definitions/HubVnetConnection"
                        }
                    },
                    "202": {
                        "description": "Request received successfully. HubVnet connection is not yet updated; follow the Location header to poll for final outcome."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-long-running-operation": true
            },
            "delete": {
                "operationId": "HubVnetConnections_Delete",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/HubVnetConnectionDelete.json" }
                },
                "description": "Deletes a HubVnet connection.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/ConnectionNameParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. HubVnet connection deleted."
                    },
                    "202": {
                        "description": "Request received successfully. HubVnet connection deletion is in progress; follow the Location header to poll for final outcome."
                    },
                    "204": {
                        "description": "No connections by the name exist."
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-long-running-operation": true
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroup/{resourceGroupName}/providers/Microsoft.Network/hubs/{hubName}/HubVnetConnections": {
            "get": {
                "operationId": "HubVnetConnections_ListAll",
                "x-ms-examples": {
                    "HubList": { "$ref": "../examples/HubVnetConnectionList.json" }
                },
                "description": "Retrieves the details of all HubVnet connections.",
                "parameters": [
                    {
                        "$ref": "#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/ResourceGroupParameter"
                    },
                    {
                        "$ref": "#/parameters/HubParameter"
                    },
                    {
                        "$ref": "#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request successful. Returns the details of all the HubVnet connections for the hub.",
                        "schema": {
                            "$ref": "#/definitions/ListHubVnetConnectionsResult"
                        }
                    },
                    "default": {
                        "description": "*** Error Response: ***\n\n * 400 Invalid request."
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        }
    },
    "definitions": {
        "WAN": {
            "description": "WAN resource.",
            "properties": {
                "provisioningState": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The current provisisoning state.",
                    "enum": [
                        "Succeeded",
                        "Updating",
                        "Deleting",
                        "Failed"
                    ],
                    "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                    }
                },
                "etag": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Gets a unique read-only string that changes whenever the resource is updated."
                },
                "disableVPNEncryption": {
                    "type": "boolean",
                    "description": "Vpn encryption to be disabled or not."
                },
                "hubs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "description": "List of Hubs in the WAN."
                },
                "vpnSites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "description": "List of vpn-sites in the WAN."
                }
            },
            "allOf": [
                {
                    "$ref": "./network.json#/definitions/Resource"
                }
            ]
        },
        "ListWANsResult": {
            "description": "Result of the request to list WANs. It contains a list of WANs and a URL nextLink to get the next set of results.",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WAN"
                    },
                    "description": "List of WANs."
                },
                "nextLink": {
                    "type": "string",
                    "description": "URL to get the next set of operation list results if there are any."
                }
            }
        },
        "VpnSite": {
            "properties": {
                "provisioningState": {
                    "$ref": "#/definitions/provisioningState"
                },
                "etag": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Gets a unique read-only string that changes whenever the resource is updated."
                },
                "WAN": {
                    "type": "string",
                    "description": "The WAN to which the vpnSite belongs"
                },
                "deviceProperties": {
                    "$ref": "#/definitions/DeviceProperties"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The ip-address for the vpn-site."
                },
                "subnets": {
                    "type": "array",
                    "description": "list of subnets for vpn-site.",
                    "items": {
                        "type": "string"
                    }
                },
                "bgpProperties": {
                    "$ref": "#/definitions/BGPProperties"
                }
            },
            "allOf": [
                {
                    "$ref": "./network.json#/definitions/Resource"
                }
            ],
            "description": "Details of VpnSite resource."
        },
        "ListVpnSitesResult": {
            "description": "Result of the request to list VpnSites. It contains a list of VpnSites and a URL nextLink to get the next set of results.",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VpnSite"
                    },
                    "description": "List of VpnSites."
                },
                "nextLink": {
                    "type": "string",
                    "description": "URL to get the next set of operation list results if there are any."
                }
            }
        },
        "VpnSitesConfigurationDownloadResult": {
            "properties": {
                "wan": {
                    "type": "string",
                    "description": "The nrp resource uri of the wan."
                },
                "configuration": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The sas-url to download the configurations for vpn-sites "
                }
            }
        },
        "Hub": {
            "properties": {
                "provisioningState": {
                    "$ref": "#/definitions/provisioningState"
                },
                "etag": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Gets a unique read-only string that changes whenever the resource is updated."
                },
                "WAN": {
                    "type": "string",
                    "description": "The WAN to which the Hub belongs"
                },
                "scalableVpnGateways": {
                    "type": "array",
                    "description": "list of all scalable vpn gateways with this Hub.",
                    "items": {
                        "$ref": "#/definitions/ScalableVpnGateway"
                    }
                },
                "scalableExpressRouteGateways": {
                    "type": "array",
                    "description": "list of all scalable express route gateways with this Hub.",
                    "items": {
                        "$ref": "#/definitions/ScalableExpressRouteGateway"
                    }
                },
                "HubVnetConnections": {
                    "type": "array",
                    "description": "list of all vnet connections with this Hub.",
                    "items": {
                        "$ref": "#/definitions/HubVnetConnection"
                    }
                },
                "AddressPrefixes": {
                    "type": "array",
                    "description": "list of address-prefixes for this Hub.",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "./network.json#/definitions/Resource"
                }
            ],
            "description": "Details of Hub."
        },
        "ListHubsResult": {
            "description": "Result of the request to list Hubs. It contains a list of Hubs and a URL nextLink to get the next set of results.",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Hub"
                    },
                    "description": "List of Hubs."
                },
                "nextLink": {
                    "type": "string",
                    "description": "URL to get the next set of operation list results if there are any."
                }
            }
        },
        "ScalableVpnGateway": {
            "description": "Details of scalable vpn gateway.",
            "properties": {
                "provisioningState": {
                    "$ref": "#/definitions/provisioningState"
                },
                "etag": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Gets a unique read-only string that changes whenever the resource is updated."
                },
                "vpnConnections": {
                    "type": "array",
                    "description": "list of all vpn connections to the gateway.",
                    "items": {
                        "$ref": "#/definitions/VpnConnection"
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "./network.json#/definitions/Resource"
                }
            ]
        },
        "VpnConnection": {
            "description": "Details of Vpn Connection.",
            "properties": {
                "provisioningState": {
                    "$ref": "#/definitions/provisioningState"
                },
                "etag": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Gets a unique read-only string that changes whenever the resource is updated."
                },
                "connectedSite": {
                    "type": "string",
                    "description": "Id of the connected vpn site."
                },
                "routingWeight": {
                    "type": "integer",
                    "format": "int32",
                    "description": "routing weight for vpn connection."
                },
                "connectionStatus": {
                    "$ref": "#/definitions/VpnConnectionStatus"
                },
                "tunnelConnectionStatus": {
                    "type": "array",
                    "description": "list of connection status.",
                    "items": {
                        "type": "string"
                    }
                },
                "ingressBytesTransferred": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "description": "Ingress bytes transferred."
                },
                "egressBytesTransferred": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "description": "Egress bytes transferred."
                }
            },            
            "allOf": [
                {
                    "$ref": "./network.json#/definitions/Resource"
                }
            ]
        },
        "ListVpnConnectionsResult": {
            "description": "Result of the request to list all vpn connections to a scalable vpn gateway. It contains a list of Vpn Connections and a URL nextLink to get the next set of results.",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VpnConnection"
                    },
                    "description": "List of Vpn Connections."
                },
                "nextLink": {
                    "type": "string",
                    "description": "URL to get the next set of operation list results if there are any."
                }
            }
        },
        "ScalableExpressRouteGateway": {
            "description": "Details of Express Route Gateway.",
            "properties": {
                "provisioningState": {
                    "$ref": "#/definitions/provisioningState"
                },
                "etag": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Gets a unique read-only string that changes whenever the resource is updated."
                },
                "expressRouteConnections": {
                    "type": "array",
                    "description": "list of all ExpressRoute connections to the gateway.",
                    "items": {
                        "$ref": "#/definitions/ExpressRouteConnection"
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "./network.json#/definitions/Resource"
                }
            ]
        },
        "ExpressRouteConnection": {
            "description": "Details of ExpressRoute Connection.",
            "properties": {
                "provisioningState": {
                    "$ref": "#/definitions/provisioningState"
                },
                "etag": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Gets a unique read-only string that changes whenever the resource is updated."
                },
                "connectedCircuit": {
                    "type": "string",
                    "description": "Id of the connected ExpressRoute circuit."
                },
                "routingWeight": {
                    "type": "integer",
                    "format": "int32",
                    "description": "routing weight for ExpressRoute connection."
                },
                "connectionHealth": {
                    "properties": {
                        "connectionStatus": {
                            "$ref": "#/definitions/ExpressRouteConnectionStatus"
                        },
                        "ingressBytesTransferred": {
                            "type": "integer",
                            "format": "int32",
                            "readOnly": true,
                            "description": "Ingress bytes transferred."
                        },
                        "egressBytesTransferred": {
                            "type": "integer",
                            "format": "int32",
                            "readOnly": true,
                            "description": "Egress bytes transferred."
                        }
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "./network.json#/definitions/Resource"
                }
            ]
        },
        "ListExpressRouteConnectionsResult": {
            "description": "Result of the request to list of ExpressRoute connections to a scalable ExpressRoute gateway. It contains a list of ExpressRoute Connections and a URL nextLink to get the next set of results.",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExpressRouteConnection"
                    },
                    "description": "List of ExpressRoute Connections."
                },
                "nextLink": {
                    "type": "string",
                    "description": "URL to get the next set of operation list results if there are any."
                }
            }
        },
        "HubVnetConnection": {
            "description": "Details of Hub-VNet Connection.",
            "properties": {
                "provisioningState": {
                    "$ref": "#/definitions/provisioningState"
                },
                "etag": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Gets a unique read-only string that changes whenever the resource is updated."
                },
                "connectedVNet": {
                    "type": "string",
                    "description": "Id of the connected virtual network."
                },
                "connectionStatus": {
                    "$ref": "#/definitions/HubVnetConnectionStatus"
                },
                "ingressBytesTransferred": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "description": "Ingress bytes transferred."
                },
                "egressBytesTransferred": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "description": "Egress bytes transferred."
                }
            },
            "allOf": [
                {
                    "$ref": "./network.json#/definitions/Resource"
                }
            ]
        },
        "ListHubVnetConnectionsResult": {
            "description": "List of HubVnet Connections and a URL nextLink to get the next set of results.",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HubVnetConnection"
                    },
                    "description": "List of HubVnet Connections."
                },
                "nextLink": {
                    "type": "string",
                    "description": "URL to get the next set of operation list results if there are any."
                }
            }
        },
        "DeviceProperties": {
            "properties": {
                "deviceVendor": {
                    "type": "string",
                    "description": "Name of the device Vendor."
                },
                "deviceModel": {
                    "type": "string",
                    "description": "Model of the device."
                },
                "linkSpeed": {
                    "type": "string",
                    "description": "Link speed."
                }
            },
            "description": "List of properties of the device."
        },
        "BGPProperties": {
            "properties": {
                "peeringIPAddress": {
                    "type": "string",
                    "description": "IP address for bgp peering."
                },
                "asn": {
                    "type": "string",
                    "description": ""
                }
            },
            "description": "List of bgp properties."
        },
        "provisioningState": {
            "type": "string",
            "readOnly": true,
            "description": "The current provisisoning state.",
            "enum": [
                "Succeeded",
                "Updating",
                "Deleting",
                "Failed"
            ],
            "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
            }
        },
        "VpnConnectionStatus": {
            "type": "string",
            "description": "The current state of the vpn connection.",
            "readOnly": true,
            "enum": [
                "Unknown",
                "Connecting",
                "Connected",
                "NotConnected"
            ],
            "x-ms-enum": {
                "name": "vpnConnectionStatus",
                "modelAsString": true
            }
        },
        "ExpressRouteConnectionStatus": {
            "type": "string",
            "description": "The current state of the express-route connection.",
            "readOnly": true,
            "enum": [
                "Unknown",
                "Connecting",
                "Connected",
                "NotConnected"
            ],
            "x-ms-enum": {
                "name": "expressRouteConnectionStatus",
                "modelAsString": true
            }
        },
        "HubVnetConnectionStatus": {
            "type": "string",
            "description": "The current state of the hub to vnet connection.",
            "readOnly": true,
            "enum": [
                "Unknown",
                "Connecting",
                "Connected",
                "NotConnected"
            ],
            "x-ms-enum": {
                "name": "HubVnetConnectionStatus",
                "modelAsString": true
            }
        },
        "disableVPNEncryption": {
            "type": "boolean",
            "description": "Vpn encryption to be disabled or not."
        },
        "access": {
            "type": "string",
            "description": "Access to be allowed or denied.",
            "enum": [
                "Allow",
                "Deny"
            ],
            "x-ms-enum": {
                "name": "access",
                "modelAsString": true
            }
        },
        "vpnClientAddressPool": {
            "type": "object",
            "properties": {
                "addressPrefixes": {
                    "type": "array",
                    "description": "list of address prefixes.",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "description": "Vpn client address pool."
        },
        "vpnClientConnectionHealth": {
            "type": "object",
            "properties": {
                "vpnClientConnectionsCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of vpn client connections."
                },
                "allocatedIpAddresses": {
                    "type": "array",
                    "description": "list of alloctaed ip-addresses.",
                    "items": {
                        "type": "string"
                    }
                },
                "ingressBytesTransferred": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Ingress bytes transferred."
                },
                "egressBytesTransferred": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Egress bytes transferred."
                }
            },
            "description": "Details of Vpn client Connection health."
        },
        "WanParameter": {
            "type": "string",
            "description": "The resource uri of the WAN."
        }
    },
    "parameters": {
        "ApiVersionParameter": {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client API version."
        },
        "SubscriptionIdParameter": {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
        },
        "ResourceGroupParameter": {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the Hub."
        },
        "HubParameter": {
            "name": "hubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Hub."
        },
        "GatewayParameter": {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
        },
        "ConnectionNameParameter": {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn connection."
        }
    }
}
