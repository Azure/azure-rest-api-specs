{
  "swagger": "2.0",
  "info": {
    "title": "InsightsManagementClient",
    "version": "2015-04-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.insights/autoscalesettings": {
      "get": {
        "description": "Lists the autoscale settings for a resource group",
        "tags": [
          "AutoscaleSettings"
        ],
        "operationId": "AutoscaleSettings_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for a list of autoscale settings",
            "schema": {
              "$ref": "#/definitions/AutoscaleSettingResourceCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/AutoscaleSettingResource"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.insights/autoscalesettings/{autoscaleSettingName}": {
      "put": {
        "description": "Creates or updates an autoscale setting.",
        "tags": [
          "AutoscaleSettings"
        ],
        "operationId": "AutoscaleSettings_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AutoscaleSettingNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AutoscaleSettingResource"
            },
            "description": "Parameters supplied to the operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to create or update an autoscale setting",
            "schema": {
              "$ref": "#/definitions/AutoscaleSettingResource"
            }
          },
          "201": {
            "description": "Created autoscale setting",
            "schema": {
              "$ref": "#/definitions/AutoscaleSettingResource"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes and autoscale setting",
        "tags": [
          "AutoscaleSettings"
        ],
        "operationId": "AutoscaleSettings_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AutoscaleSettingNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to delete an autoscale setting"
          },
          "204": {
            "description": "No content: Successful request to delete an autoscale setting, but the response is intentionally empty"
          }
        }
      },
      "get": {
        "description": "Gets an autoscale setting",
        "tags": [
          "AutoscaleSettings"
        ],
        "operationId": "AutoscaleSettings_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AutoscaleSettingNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to get one autoscale setting",
            "schema": {
              "$ref": "#/definitions/AutoscaleSettingResource"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Resource": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource Id"
        },
        "name": {
          "type": "string",
          "description": "Azure resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "required": [
        "location"
      ],
      "x-ms-azure-resource": true,
      "description": "An azure resource object"
    },
    "ScaleCapacity": {
      "required": [
        "minimum",
        "maximum",
        "default"
      ],
      "properties": {
        "minimum": {
          "type": "string",
          "description": "the minimum number of instances for the resource."
        },
        "maximum": {
          "type": "string",
          "description": "the maximum number of instances for the resource. The actual maximum number may be limited by the cores that are available."
        },
        "default": {
          "type": "string",
          "description": "the number of instances that will be set if metrics are not available for evaluation. The default is only used if the current instance count is lower than the default."
        }
      },
      "description": "The number of instances that can be used during this profile."
    },
    "MetricTrigger": {
      "properties": {
        "metricName": {
          "type": "string",
          "description": "the name of the metric that defines what the rule monitors."
        },
        "metricResourceUri": {
          "type": "string",
          "description": "the resource identifier of the resource the rule monitors."
        },
        "timeGrain": {
          "type": "string",
          "format": "duration",
          "description": "the granularity of metrics the rule monitors. Must be one of the predefined values returned from metric definitions for the metric. Must be between 12 hours and 1 minute."
        },
        "statistic": {
          "type": "string",
          "description": "the metric statistic type. How the metrics from multiple instances are combined.",
          "enum": [
            "Average",
            "Min",
            "Max",
            "Sum"
          ],
          "x-ms-enum": {
            "name": "MetricStatisticType",
            "modelAsString": false
          }
        },
        "timeWindow": {
          "type": "string",
          "format": "duration",
          "description": "the range of time in which instance data is collected. This value must be greater than the delay in metric collection, which can vary from resource-to-resource. Must be between 12 hours and 5 minutes."
        },
        "timeAggregation": {
          "type": "string",
          "description": "time aggregation type. How the data that is collected should be combined over time. The default value is Average.",
          "enum": [
            "Average",
            "Minimum",
            "Maximum",
            "Total",
            "Count"
          ],
          "x-ms-enum": {
            "name": "TimeAggregationType",
            "modelAsString": false
          }
        },
        "operator": {
          "type": "string",
          "description": "the operator that is used to compare the metric data and the threshold.",
          "enum": [
            "Equals",
            "NotEquals",
            "GreaterThan",
            "GreaterThanOrEqual",
            "LessThan",
            "LessThanOrEqual"
          ],
          "x-ms-enum": {
            "name": "ComparisonOperationType",
            "modelAsString": false
          }
        },
        "threshold": {
          "type": "number",
          "format": "double",
          "description": "the threshold of the metric that triggers the scale action."
        }
      },
      "description": "The trigger that results in a scaling action."
    },
    "ScaleAction": {
      "required": [
        "direction",
        "type",
        "cooldown"
      ],
      "properties": {
        "direction": {
          "type": "string",
          "description": "the scale direction. Whether the scaling action increases or decreases the number of instances.",
          "enum": [
            "None",
            "Increase",
            "Decrease"
          ],
          "x-ms-enum": {
            "name": "ScaleDirection",
            "modelAsString": false
          }
        },
        "type": {
          "type": "string",
          "description": "the type of action that should occur, this must be set to ChangeCount.",
          "enum": [
            "ChangeCount"
          ],
          "x-ms-enum": {
            "name": "ScaleType",
            "modelAsString": false
          }
        },
        "value": {
          "type": "string",
          "description": "the number of instances that are involved in the scaling action. This value must be 1 or greater. The default value is 1.",
          "default": "1"
        },
        "cooldown": {
          "type": "string",
          "format": "duration",
          "description": "the amount of time to wait since the last scaling action before this action occurs. It must be between 1 week and 1 minute."
        }
      },
      "description": "The parameters for the scaling action."
    },
    "ScaleRule": {
      "required": [
        "scaleAction"
      ],
      "properties": {
        "metricTrigger": {
          "$ref": "#/definitions/MetricTrigger",
          "description": "the trigger that results in a scaling action."
        },
        "scaleAction": {
          "$ref": "#/definitions/ScaleAction",
          "description": "the parameters for the scaling action."
        }
      },
      "description": "A rule that provide the triggers and parameters for the scaling action."
    },
    "TimeWindow": {
      "properties": {
        "timeZone": {
          "type": "string",
          "description": "the time zone of the start and end times for the profile. See examples of valid timezone ids over here: https://msdn.microsoft.com/en-us/library/azure/dn931928.aspx"
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "description": "the start time for the profile in ISO 8601 format."
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "description": "the end time for the profile in ISO 8601 format."
        }
      },
      "required": [ "start", "end" ],
      "description": "A specific date-time for the profile. This element is not used if the Recurrence element is used."
    },
    "RecurrentSchedule": {
      "properties": {
        "timeZone": {
          "type": "string",
          "description": "the time zone for the hours of the profile. See examples of valid timezone ids over here: https://msdn.microsoft.com/en-us/library/azure/dn931928.aspx"
        },
        "days": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "the collection of days that the profile takes effect on. Possible values are Sunday through Saturday."
        },
        "hours": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "A collection of hours that the profile takes effect on. Values supported are 0 to 23 on the 24-hour clock (AM/PM times are not supported)."
        },
        "minutes": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "A collection of minutes at which the profile takes effect at."
        }
      },
      "description": "The scheduling constraints for when the profile begins."
    },
    "Recurrence": {
      "properties": {
        "frequency": {
          "type": "string",
          "description": "the recurrence frequency. How often the schedule profile should take effect. This value must be Week, meaning each week will have the same set of profiles.",
          "enum": [
            "None",
            "Second",
            "Minute",
            "Hour",
            "Day",
            "Week",
            "Month",
            "Year"
          ],
          "x-ms-enum": {
            "name": "RecurrenceFrequency",
            "modelAsString": false
          }
        },
        "schedule": {
          "$ref": "#/definitions/RecurrentSchedule",
          "description": "the scheduling constraints for when the profile begins."
        }
      },
      "description": "The repeating times at which this profile begins. This element is not used if the FixedDate element is used."
    },
    "AutoscaleProfile": {
      "required":[
        "rules",
        "name",
        "capacity"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "the name of the profile."
        },
        "capacity": {
          "$ref": "#/definitions/ScaleCapacity",
          "description": "the number of instances that can be used during this profile."
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScaleRule"
          },
          "description": "the collection of rules that provide the triggers and parameters for the scaling action. A maximum of 10 rules can be specified."
        },
        "fixedDate": {
          "$ref": "#/definitions/TimeWindow",
          "description": "the specific date-time for the profile. This element is not used if the Recurrence element is used."
        },
        "recurrence": {
          "$ref": "#/definitions/Recurrence",
          "description": "the repeating times at which this profile begins. This element is not used if the FixedDate element is used."
        }
      },
      "description": "Autoscale profile."
    },
    "EmailNotification": {
      "properties": {
        "sendToSubscriptionAdministrator": {
          "type": "boolean",
          "description": "a value indicating whether to send email to subscription administrator."
        },
        "sendToSubscriptionCoAdministrators": {
          "type": "boolean",
          "description": "a value indicating whether to send email to subscription co-administrators."
        },
        "customEmails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "the custom email list."
        }
      },
      "description": "Email notification."
    },
    "WebhookNotification": {
      "properties": {
        "serviceUri": {
          "type": "string",
          "description": "the service address to receive the notification."
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "a property bag of settings."
        }
      },
      "description": "Webhook notification."
    },
    "AutoscaleNotification": {
      "required": [
        "operation"
      ],
      "properties": {
        "operation": {
          "type": "string",
          "description": "the operation associated with the notification and it's value must be \"scale\"",
          "enum": ["Scale"],
          "x-ms-enum": {
            "name": "OperationType",
            "modelAsString": false
          }
        },
        "email": {
          "$ref": "#/definitions/EmailNotification",
          "description": "the email notification."
        },
        "webhooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebhookNotification"
          },
          "description": "the collection of webhook notifications."
        }
      },
      "description": "Autoscale notification."
    },
    "AutoscaleSetting": {
      "required":[
        "profiles",
        "name"
      ],
      "properties": {
        "profiles": {
          "type": "array",
          "maxItems": 20,
          "items": {
            "$ref": "#/definitions/AutoscaleProfile"
          },
          "description": "the collection of automatic scaling profiles that specify different scaling parameters for different time periods. A maximum of 20 profiles can be specified."
        },
        "notifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutoscaleNotification"
          },
          "description": "the collection of notifications."
        },
        "enabled": {
          "type": "boolean",
          "description": "the enabled flag. Specifies whether automatic scaling is enabled for the resource.",
          "default": true
        },
        "name": {
          "type": "string",
          "description": "the name of the autoscale setting."
        },
        "targetResourceUri": {
          "type": "string",
          "description": "the resource identifier of the resource that the autoscale setting should be added to."
        }
      },
      "description": "A setting that contains all of the configuration for the automatic scaling of a resource."
    },
    "AutoscaleSettingResource": {
      "type": "object",
      "allOf": [
        {
           "$ref": "#/definitions/Resource"
        }
      ],
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AutoscaleSetting"
        }
      },
      "description": "The autoscale setting resource."
    },
    "AutoscaleSettingResourceCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutoscaleSettingResource"
          },
          "description": "the values for the autoscale setting resources."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "required": ["value"],
      "description": "Represents a collection of autoscale setting resources."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Azure subscription Id."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "FilterParameter": {
      "name": "$filter",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The filter to apply on the operation. For more information please see https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx",
      "x-ms-parameter-location": "method"
    },
    "AutoscaleSettingNameParameter": {
      "name": "autoscaleSettingName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The autoscale setting name.",
      "x-ms-parameter-location": "method"
    }
  }
}