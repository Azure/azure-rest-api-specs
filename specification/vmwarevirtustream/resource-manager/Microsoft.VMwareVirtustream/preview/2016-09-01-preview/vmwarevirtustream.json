{
  "swagger": "2.0",
  "info": {
    "description": "API for managing Virtustream Private Clouds through Azure.",
    "version": "2016-09-01-preview",
    "title": "Virtustream Private Cloud Resource Provider API"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "PrivateClouds",
      "description": ""
    },
    {
      "name": "Clusters",
      "description": ""
    },
    {
      "name": "Subscriptions",
      "description": ""
    },
    {
      "name": "Move Resource",
      "description": ""
    }
  ],
  "parameters": {
    "subscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The unique identifier for a Microsoft Azure subscription."
    },
    "resourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group within the Azure subscription.",
      "x-ms-parameter-location": "method"
    },
    "apiVersion": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The Version of the API to be used with the client request."
    }
  },
  "paths": {
    "/providers/Microsoft.VMwareVirtustream/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available RP operations.",
        "operationId": "ListOperations",
        "parameters": [
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ListOperations": {
            "$ref": "./examples/ListOperations.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.VMwareVirtustream/privateClouds": {
      "get": {
        "operationId": "PrivateCloud_List",
        "tags": [
          "PrivateClouds"
        ],
        "summary": "list private clouds",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AzurePrivateCloudResponse"
              }
            }
          }
        },
        "x-ms-examples": {
          "PrivateCloud_List": {
            "$ref": "./examples/PrivateCloud_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.VMwareVirtustream/privateClouds/{privateCloudName}": {
      "get": {
        "operationId": "PrivateCloud_GetById",
        "tags": [
          "PrivateClouds"
        ],
        "summary": "get a private cloud",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private cloud."
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AzurePrivateCloudResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateCloud_GetById": {
            "$ref": "./examples/PrivateCloud_GetById.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareVirtustream/privateClouds": {
      "get": {
        "operationId": "PrivateCloud_ListInResourceGroup",
        "tags": [
          "PrivateClouds"
        ],
        "summary": "list private clouds in a resource group",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AzurePrivateCloudResponse"
              }
            }
          }
        },
        "x-ms-examples": {
          "PrivateCloud_ListInResourceGroup": {
            "$ref": "./examples/PrivateCloud_ListInResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareVirtustream/privateClouds/{privateCloudName}": {
      "get": {
        "operationId": "PrivateCloud_GetByIdInResourceGroup",
        "tags": [
          "PrivateClouds"
        ],
        "summary": "get a private cloud in a resource group",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private cloud."
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AzurePrivateCloudResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateCloud_GetByIdInResourceGroup": {
            "$ref": "./examples/PrivateCloud_GetByIdInResourceGroup.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateCloud_Create",
        "tags": [
          "PrivateClouds"
        ],
        "summary": "create a private cloud",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private cloud."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzurePrivateCloudRequest"
            }
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AzurePrivateCloudResponse"
            }
          },
          "202": {
            "description": "accepted operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Url to poll for status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "Url to poll for operation status."
              },
              "Retry-After": {
                "type": "string",
                "description": "How long to wait before polling."
              }
            }
          }
        },
        "x-ms-examples": {
          "PrivateCloud_Create": {
            "$ref": "./examples/PrivateCloud_Create.json"
          }
        }
      },
      "patch": {
        "operationId": "PrivateCloud_Modify",
        "tags": [
          "PrivateClouds"
        ],
        "summary": "modify a private cloud",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private cloud."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzurePrivateCloudRequest"
            }
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AzurePrivateCloudResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateCloud_Modify": {
            "$ref": "./examples/PrivateCloud_Modify.json"
          }
        }
      },
      "delete": {
        "operationId": "PrivateCloud_Delete",
        "tags": [
          "PrivateClouds"
        ],
        "summary": "delete a private cloud",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private cloud."
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "202": {
            "description": "accepted operation"
          },
          "204": {
            "description": "no content"
          }
        },
        "x-ms-examples": {
          "PrivateCloud_Delete": {
            "$ref": "./examples/PrivateCloud_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareVirtustream/privateClouds/{privateCloudName}/clusters": {
      "get": {
        "operationId": "Cluster_List",
        "tags": [
          "Clusters"
        ],
        "summary": "list clusters in a private cloud",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private cloud."
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AzureClusterResponse"
              }
            }
          }
        },
        "x-ms-examples": {
          "Cluster_List": {
            "$ref": "./examples/Cluster_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareVirtustream/privateClouds/{privateCloudName}/clusters/{clusterName}": {
      "get": {
        "operationId": "Cluster_GetByName",
        "tags": [
          "Clusters"
        ],
        "summary": "get cluster",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private cloud."
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster."
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AzureClusterResponse"
            }
          }
        },
        "x-ms-examples": {
          "Cluster_GetByName": {
            "$ref": "./examples/Cluster_GetByName.json"
          }
        }
      },
      "put": {
        "operationId": "Cluster_Create",
        "tags": [
          "Clusters"
        ],
        "summary": "create cluster",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private cloud."
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureClusterRequest"
            }
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AzureClusterResponse"
            }
          },
          "202": {
            "description": "accepted operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Url to poll for status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "Url to poll for operation status."
              },
              "Retry-After": {
                "type": "string",
                "description": "How long to wait before polling."
              }
            }
          }
        },
        "x-ms-examples": {
          "Cluster_Create": {
            "$ref": "./examples/Cluster_Create.json"
          }
        }
      },
      "patch": {
        "operationId": "Cluster_Modify",
        "tags": [
          "Clusters"
        ],
        "summary": "modify cluster",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private cloud."
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureClusterRequest"
            }
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "202": {
            "description": "accepted operation"
          }
        },
        "x-ms-examples": {
          "Cluster_Modify": {
            "$ref": "./examples/Cluster_Modify.json"
          }
        }
      },
      "delete": {
        "operationId": "Cluster_Delete",
        "tags": [
          "Clusters"
        ],
        "summary": "delete cluster",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private cloud."
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster."
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "202": {
            "description": "accepted operation"
          },
          "204": {
            "description": "no content"
          }
        },
        "x-ms-examples": {
          "Cluster_Delete": {
            "$ref": "./examples/Cluster_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareVirtustream/privateClouds/{privateCloudName}/operationresults/{operationId}": {
      "get": {
        "operationId": "PrivateCloud_OperationResultsGetById",
        "tags": [
          "PrivateClouds"
        ],
        "summary": "get a private cloud in a resource group",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private cloud."
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the private cloud order to poll."
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AzurePrivateCloudResponse"
            }
          },
          "202": {
            "description": "accepted operation",
            "headers": {
              "Location": {
                "type": "string",
                "description": "Url to poll for status."
              },
              "Retry-After": {
                "type": "string",
                "description": "How long to wait before polling."
              }
            }
          }
        },
        "x-ms-examples": {
          "PrivateCloud_OperationResultsGetById": {
            "$ref": "./examples/PrivateCloud_OperationResultsGetById.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareVirtustream/privateClouds/{privateCloudName}/operationstatuses/{operationId}": {
      "get": {
        "operationId": "PrivateCloud_OperationStatusesGetById",
        "tags": [
          "PrivateClouds"
        ],
        "summary": "get private cloud in a resource group",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the privateCloud."
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the privateCloud order to poll."
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "retrieved operation status",
            "schema": {
              "$ref": "#/definitions/AzureOperationStatus"
            },
            "headers": {
              "Retry-After": {
                "type": "string",
                "description": "How long to wait before polling"
              }
            }
          }
        },
        "x-ms-examples": {
          "PrivateCloud_OperationStatusesGetById": {
            "$ref": "./examples/PrivateCloud_OperationStatusesGetById.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareVirtustream/privateClouds/{privateCloudName}/addAuthorization/{authorizationName}": {
      "post": {
        "operationId": "PrivateCloud_AddAuthorization",
        "tags": [
          "PrivateClouds"
        ],
        "summary": "adds a number of hosts to a cluster",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the privateCloud."
          },
          {
            "name": "authorizationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ER authorization."
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AzurePrivateCloudResponse"
            }
          },
          "202": {
            "description": "accepted"
          }
        },
        "x-ms-examples": {
          "PrivateCloud_AddAuthorization": {
            "$ref": "./examples/PrivateCloud_AddAuthorization.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareVirtustream/privateClouds/{privateCloudName}/deleteAuthorization/{authorizationName}": {
      "post": {
        "operationId": "PrivateCloud_DeleteAuthorization",
        "tags": [
          "PrivateClouds"
        ],
        "summary": "adds a number of hosts to a cluster",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the privateCloud."
          },
          {
            "name": "authorizationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ER authorization."
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AzurePrivateCloudResponse"
            }
          },
          "202": {
            "description": "accepted"
          }
        },
        "x-ms-examples": {
          "PrivateCloud_DeleteAuthorization": {
            "$ref": "./examples/PrivateCloud_DeleteAuthorization.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareVirtustream/privateClouds/{privateCloudName}/addIdentitySource": {
      "post": {
        "operationId": "PrivateCloud_AddIdentitySource",
        "tags": [
          "PrivateClouds"
        ],
        "summary": "adds an identity source for the privateCloud",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the privateCloud."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddIdentitySourceRequest"
            }
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AzurePrivateCloudResponse"
            }
          },
          "202": {
            "description": "accepted"
          }
        },
        "x-ms-examples": {
          "PrivateCloud_AddIdentitySource": {
            "$ref": "./examples/PrivateCloud_AddIdentitySource.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareVirtustream/privateClouds/{privateCloudName}/deleteIdentitySource": {
      "post": {
        "operationId": "PrivateCloud_DeleteIdentitySource",
        "tags": [
          "PrivateClouds"
        ],
        "summary": "deletes an identity source from the private cloud",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the privateCloud."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteIdentitySourceRequest"
            }
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AzurePrivateCloudResponse"
            }
          },
          "202": {
            "description": "accepted"
          }
        },
        "x-ms-examples": {
          "PrivateCloud_DeleteIdentitySource": {
            "$ref": "./examples/PrivateCloud_DeleteIdentitySource.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.VMwareVirtustream/privateClouds/{privateCloudName}/getAdminCredentials": {
      "post": {
        "operationId": "PrivateCloud_GetAdminCredentials",
        "tags": [
          "PrivateClouds"
        ],
        "summary": "fetches the vcenter credentials for the private cloud",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the privateCloud."
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GetAdminCredentialsResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateCloud_GetAdminCredentials": {
            "$ref": "./examples/PrivateCloud_GetAdminCredentials.json"
          }
        }
      }
    }
  },
  "definitions": {
    "OperationListResult": {
      "description": "Result of the request to list Time Series Insights operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "description": "List of Time Series Insights operations supported by the Microsoft.TimeSeriesInsights resource provider.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of operation list results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Operation": {
      "description": "A REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the operation being performed on this particular object.",
          "type": "string",
          "readOnly": true
        },
        "display": {
          "description": "Contains the localized display information for this particular operation / action.",
          "readOnly": true,
          "properties": {
            "provider": {
              "description": "The localized friendly form of the resource provider name.",
              "type": "string",
              "readOnly": true
            },
            "resource": {
              "description": "The localized friendly form of the resource type related to this action/operation.",
              "type": "string",
              "readOnly": true
            },
            "operation": {
              "description": "The localized friendly name for the operation.",
              "type": "string",
              "readOnly": true
            },
            "description": {
              "description": "The localized friendly description for the operation.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "ExpressRouteAuthorization": {
      "properties": {
        "id": {
          "type": "string",
          "example": "/subscriptions/ed5a265b-8c15-4211-a592-abb76b1c86b9/resourceGroups/tnt10-00000000-0000-0000-0000-000000000001-eastus/providers/Microsoft.Network/expressRouteCircuits/tnt10-00000000-0000-0000-0000-000000000001-eastus-xconnect/authorizations/myAuth"
        },
        "name": {
          "type": "string",
          "example": "myAuth"
        },
        "key": {
          "type": "string",
          "example": "12341234-1234-1234-1234-123412341234"
        }
      }
    },
    "Circuit": {
      "properties": {
        "primarySubnet": {
          "type": "string",
          "description": "CIDR of primary subnet",
          "example": "10.19.3.50/30"
        },
        "secondarySubnet": {
          "type": "string",
          "description": "CIDR of secondary subnet",
          "example": "10.19.3.52/30"
        },
        "expressRouteID": {
          "type": "string",
          "description": "ID of privateCloud customer ER (Microsoft Colo only)",
          "example": "/subscriptions/ed5a265b-8c15-4211-a592-abb76b1c86b9/resourceGroups/tnt10-00000000-0000-0000-0000-000000000001-eastus/providers/Microsoft.Network/expressRouteCircuits/tnt10-00000000-0000-0000-0000-000000000001-eastus-xconnect"
        },
        "authorizations": {
          "type": "array",
          "description": "authorizations on privateCloud customer ER (Microsoft Colo only)",
          "items": {
            "$ref": "#/definitions/ExpressRouteAuthorization"
          }
        }
      }
    },
    "ClusterRequest": {
      "properties": {
        "clusterSize": {
          "type": "integer",
          "description": "number of hosts in PrivateCloud cluster",
          "example": "4'"
        }
      }
    },
    "Vpc": {
      "type": "string",
      "example": "10.19.4.0/22"
    },
    "Endpoints": {
      "properties": {
        "nsxManager": {
          "type": "string",
          "example": "https://10.19.4.3/"
        },
        "vcsa": {
          "type": "string",
          "example": "https://10.19.4.2/"
        }
      }
    },
    "AddIdentitySourceRequest": {
      "properties": {
        "name": {
          "type": "string",
          "example": "groupName"
        },
        "alias": {
          "type": "string",
          "example": "groupAlias"
        },
        "domain": {
          "type": "string",
          "example": "groupDomain"
        },
        "baseUserDN": {
          "type": "string",
          "example": "ou=baseUserDN"
        },
        "baseGroupDN": {
          "type": "string",
          "example": "ou=baseGroupDN"
        },
        "primaryServer": {
          "type": "string",
          "example": "ldaps://1.1.1.1:636"
        },
        "secondaryServer": {
          "type": "string",
          "example": "ldaps://1.1.1.2:636"
        },
        "useSsl": {
          "type": "boolean",
          "example": true
        },
        "username": {
          "type": "string",
          "example": "user"
        },
        "credential": {
          "type": "string",
          "example": "password"
        }
      }
    },
    "DeleteIdentitySourceRequest": {
      "properties": {
        "name": {
          "type": "string",
          "example": "groupName"
        },
        "alias": {
          "type": "string",
          "example": "groupAlias"
        },
        "domain": {
          "type": "string",
          "example": "groupDomain"
        }
      }
    },
    "IdentitySource": {
      "properties": {
        "name": {
          "type": "string",
          "example": "groupName"
        },
        "alias": {
          "type": "string",
          "example": "groupAlias"
        },
        "domain": {
          "type": "string",
          "example": "groupDomain"
        },
        "baseUserDN": {
          "type": "string",
          "example": "ou=baseUserDN"
        },
        "baseGroupDN": {
          "type": "string",
          "example": "ou=baseGroupDN"
        },
        "primaryServer": {
          "type": "string",
          "example": "ldaps://1.1.1.1:636"
        },
        "secondaryServer": {
          "type": "string",
          "example": "ldaps://1.1.1.2:636"
        },
        "useSsl": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "PrivateCloud": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Cancelled"
          ]
        },
        "circuit": {
          "$ref": "#/definitions/Circuit"
        },
        "cluster": {
          "$ref": "#/definitions/Cluster"
        },
        "clusters": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "/subscriptions/d7368492-0886-48ef-9846-795b25eb31ad/resourceGroups/mygroup/providers/Microsoft.VMwareVirtustream/privateClouds/myprivateCloud/clusters/mycluster"
          }
        },
        "endpoints": {
          "$ref": "#/definitions/Endpoints"
        },
        "internetEnabled": {
          "type": "boolean"
        },
        "identitySources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentitySource"
          }
        },
        "vpc": {
          "$ref": "#/definitions/Vpc"
        }
      }
    },
    "Cluster": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Cancelled",
            "Updating"
          ]
        },
        "clusterSize": {
          "type": "integer",
          "example": 4
        },
        "hosts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "fakehost09.nyc1.kubernetes.center",
            "fakehost10.nyc1.kubernetes.center",
            "fakehost11.nyc1.kubernetes.center",
            "fakehost12.nyc1.kubernetes.center"
          ]
        }
      }
    },
    "AzurePrivateCloudRequest": {
      "properties": {
        "location": {
          "type": "string",
          "example": "West US"
        },
        "properties": {
          "$ref": "#/definitions/PrivateCloud"
        },
        "tags": {
          "type": "object"
        }
      }
    },
    "AzurePrivateCloudResponse": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "example": "West US"
        },
        "name": {
          "type": "string",
          "example": "myprivateCloud",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/PrivateCloud"
        },
        "type": {
          "type": "string",
          "example": "Microsoft.VMwareVirtustream/privateClouds",
          "readOnly": true
        },
        "tags": {
          "type": "object"
        }
      },
      "x-ms-azure-resource": true
    },
    "AzureClusterRequest": {
      "properties": {
        "location": {
          "type": "string",
          "example": "West US"
        },
        "properties": {
          "$ref": "#/definitions/ClusterRequest"
        }
      }
    },
    "AzureClusterResponse": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "example": "West US"
        },
        "name": {
          "type": "string",
          "example": "mycluster",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/Cluster"
        },
        "type": {
          "type": "string",
          "example": "Microsoft.VMwareVirtustream/privateClouds/clusters",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "AzureOperationStatus": {
      "properties": {
        "endTime": {
          "type": "string",
          "example": "2019-01-17T16:03:39.6032542+00:00"
        },
        "id": {
          "type": "string",
          "example": "/subscriptions/733b60c5-5108-4fe0-ae96-211598f7497b/operations/15404093-f6c6-44e0-887a-0a1af393ed82"
        },
        "percentComplete": {
          "type": "number",
          "example": 100
        },
        "properties": {
          "$ref": "#/definitions/PrivateCloud"
        },
        "startTime": {
          "type": "string",
          "example": "2019-01-17T16:03:19.6032542+00:00"
        },
        "status": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Cancelled"
          ]
        }
      }
    },
    "GetAdminCredentialsResponse": {
      "properties": {
        "user": {
          "type": "string",
          "example": "user@domain.local"
        },
        "password": {
          "type": "string",
          "example": "password"
        }
      }
    }
  }
}