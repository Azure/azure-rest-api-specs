{
  "swagger": "2.0",
  "info": {
    "title": "NotificationHubs RP Client",
    "version": "2023-10-01-preview",
    "description": "Microsoft Notification Hubs Resource Provider REST API.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "NotificationHubResources"
    },
    {
      "name": "Namespaces"
    },
    {
      "name": "NamespaceResources"
    },
    {
      "name": "SharedAccessAuthorizationRuleResources"
    },
    {
      "name": "PrivateEndpointConnectionResources"
    },
    {
      "name": "PrivateLinkResources"
    }
  ],
  "paths": {
    "/providers/Microsoft.NotificationHubs/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/NHOperationsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/checkNamespaceAvailability": {
      "post": {
        "operationId": "Namespaces_CheckAvailability",
        "summary": "Checks the availability of the given service namespace across all Azure subscriptions. This is useful because the domain name is created based on the service namespace name.",
        "description": "Checks the availability of the given service namespace across all Azure subscriptions. This is useful because the domain name is created based on the service namespace name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_CheckAvailability": {
            "$ref": "./examples/Namespaces/CheckAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/namespaces": {
      "get": {
        "operationId": "Namespaces_ListAll",
        "tags": [
          "NamespaceResources"
        ],
        "description": "Lists all the available namespaces within the subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Skip token for subsequent requests.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of results to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NamespaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_ListAll": {
            "$ref": "./examples/Namespaces/ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces": {
      "get": {
        "operationId": "Namespaces_List",
        "tags": [
          "NamespaceResources"
        ],
        "description": "Lists the available namespaces within a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Skip token for subsequent requests.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of results to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NamespaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_List": {
            "$ref": "./examples/Namespaces/ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}": {
      "get": {
        "operationId": "Namespaces_Get",
        "tags": [
          "NamespaceResources"
        ],
        "description": "Returns the given namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_Get": {
            "$ref": "./examples/Namespaces/Get.json"
          }
        }
      },
      "put": {
        "operationId": "Namespaces_CreateOrUpdate",
        "tags": [
          "NamespaceResources"
        ],
        "description": "Creates / Updates a Notification Hub namespace. This operation is idempotent.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request content.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NamespaceResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          },
          "201": {
            "description": "Resource 'NamespaceResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_CreateOrUpdate": {
            "$ref": "./examples/Namespaces/CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Namespaces_Update",
        "tags": [
          "NamespaceResources"
        ],
        "description": "Patches the existing namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request content.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamespacePatchParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_Update": {
            "$ref": "./examples/Namespaces/Update.json"
          }
        }
      },
      "delete": {
        "operationId": "Namespaces_Delete",
        "tags": [
          "NamespaceResources"
        ],
        "description": "Deletes an existing namespace. This operation also removes all associated notificationHubs under the namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_Delete": {
            "$ref": "./examples/Namespaces/Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/authorizationRules": {
      "get": {
        "operationId": "Namespaces_ListAuthorizationRules",
        "tags": [
          "Namespaces"
        ],
        "description": "Gets the authorization rules for a namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_ListAuthorizationRules": {
            "$ref": "./examples/Namespaces/AuthorizationRuleList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}": {
      "get": {
        "operationId": "Namespaces_GetAuthorizationRule",
        "tags": [
          "Namespaces"
        ],
        "description": "Gets an authorization rule for a namespace by name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "Authorization Rule Name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[a-zA-Z0-9!()*-._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_GetAuthorizationRule": {
            "$ref": "./examples/Namespaces/AuthorizationRuleGet.json"
          }
        }
      },
      "put": {
        "operationId": "Namespaces_CreateOrUpdateAuthorizationRule",
        "tags": [
          "Namespaces"
        ],
        "description": "Creates an authorization rule for a namespace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "Authorization Rule Name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[a-zA-Z0-9!()*-._]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request content.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SharedAccessAuthorizationRuleResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "201": {
            "description": "Resource 'SharedAccessAuthorizationRuleResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_CreateOrUpdateAuthorizationRule": {
            "$ref": "./examples/Namespaces/AuthorizationRuleCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "Namespaces_DeleteAuthorizationRule",
        "tags": [
          "Namespaces"
        ],
        "description": "Deletes a namespace authorization rule",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "Authorization Rule Name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[a-zA-Z0-9!()*-._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_DeleteAuthorizationRule": {
            "$ref": "./examples/Namespaces/AuthorizationRuleDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "operationId": "Namespaces_ListKeys",
        "tags": [
          "Namespaces"
        ],
        "description": "Gets the Primary and Secondary ConnectionStrings to the namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "Authorization Rule Name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[a-zA-Z0-9!()*-._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_ListKeys": {
            "$ref": "./examples/Namespaces/AuthorizationRuleListKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "operationId": "Namespaces_RegenerateKeys",
        "tags": [
          "Namespaces"
        ],
        "description": "Regenerates the Primary/Secondary Keys to the Namespace Authorization Rule",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "Authorization Rule Name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[a-zA-Z0-9!()*-._]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request content.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyKeyResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_RegenerateKeys": {
            "$ref": "./examples/Namespaces/AuthorizationRuleRegenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/checkNotificationHubAvailability": {
      "post": {
        "operationId": "NotificationHubs_CheckNotificationHubAvailability",
        "tags": [
          "NamespaceResources"
        ],
        "description": "Checks the availability of the given notificationHub in a namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request content.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_CheckNotificationHubAvailability": {
            "$ref": "./examples/NotificationHubs/CheckAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs": {
      "get": {
        "operationId": "NotificationHubs_List",
        "tags": [
          "NotificationHubResources"
        ],
        "description": "Lists the notification hubs associated with a namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Continuation token.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Page size.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NotificationHubListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_List": {
            "$ref": "./examples/NotificationHubs/List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}": {
      "get": {
        "operationId": "NotificationHubs_Get",
        "tags": [
          "NotificationHubResources"
        ],
        "description": "Gets the notification hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "notificationHubName",
            "in": "path",
            "description": "Notification Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 265,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-./_]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NotificationHubResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_Get": {
            "$ref": "./examples/NotificationHubs/Get.json"
          }
        }
      },
      "put": {
        "operationId": "NotificationHubs_CreateOrUpdate",
        "tags": [
          "NotificationHubResources"
        ],
        "description": "Creates/Update a NotificationHub in a namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "notificationHubName",
            "in": "path",
            "description": "Notification Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 265,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-./_]*$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request content.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationHubResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NotificationHubResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NotificationHubResource"
            }
          },
          "201": {
            "description": "Resource 'NotificationHubResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/NotificationHubResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_CreateOrUpdate": {
            "$ref": "./examples/NotificationHubs/CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "operationId": "NotificationHubs_Update",
        "tags": [
          "NotificationHubResources"
        ],
        "description": "Patch a NotificationHub in a namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "notificationHubName",
            "in": "path",
            "description": "Notification Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 265,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-./_]*$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request content.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationHubPatchParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NotificationHubResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_Update": {
            "$ref": "./examples/NotificationHubs/Update.json"
          }
        }
      },
      "delete": {
        "operationId": "NotificationHubs_Delete",
        "tags": [
          "NotificationHubResources"
        ],
        "description": "Deletes a notification hub associated with a namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "notificationHubName",
            "in": "path",
            "description": "Notification Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 265,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-./_]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_Delete": {
            "$ref": "./examples/NotificationHubs/Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/authorizationRules": {
      "get": {
        "operationId": "NotificationHubs_ListAuthorizationRules",
        "tags": [
          "SharedAccessAuthorizationRuleResources"
        ],
        "description": "Gets the authorization rules for a NotificationHub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "notificationHubName",
            "in": "path",
            "description": "Notification Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 265,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-./_]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_ListAuthorizationRules": {
            "$ref": "./examples/NotificationHubs/AuthorizationRuleList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/authorizationRules/{authorizationRuleName}": {
      "get": {
        "operationId": "NotificationHubs_GetAuthorizationRule",
        "tags": [
          "SharedAccessAuthorizationRuleResources"
        ],
        "description": "Gets an authorization rule for a NotificationHub by name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "notificationHubName",
            "in": "path",
            "description": "Notification Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 265,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-./_]*$"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "Authorization Rule Name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[a-zA-Z0-9!()*-._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_GetAuthorizationRule": {
            "$ref": "./examples/NotificationHubs/AuthorizationRuleGet.json"
          }
        }
      },
      "put": {
        "operationId": "NotificationHubs_CreateOrUpdateAuthorizationRule",
        "tags": [
          "SharedAccessAuthorizationRuleResources"
        ],
        "description": "Creates/Updates an authorization rule for a NotificationHub",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "notificationHubName",
            "in": "path",
            "description": "Notification Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 265,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-./_]*$"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "Authorization Rule Name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[a-zA-Z0-9!()*-._]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request content.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SharedAccessAuthorizationRuleResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "201": {
            "description": "Resource 'SharedAccessAuthorizationRuleResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_CreateOrUpdateAuthorizationRule": {
            "$ref": "./examples/NotificationHubs/AuthorizationRuleCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "NotificationHubs_DeleteAuthorizationRule",
        "tags": [
          "SharedAccessAuthorizationRuleResources"
        ],
        "description": "Deletes a notificationHub authorization rule",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "notificationHubName",
            "in": "path",
            "description": "Notification Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 265,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-./_]*$"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "Authorization Rule Name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[a-zA-Z0-9!()*-._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_DeleteAuthorizationRule": {
            "$ref": "./examples/NotificationHubs/AuthorizationRuleDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "operationId": "NotificationHubs_ListKeys",
        "tags": [
          "SharedAccessAuthorizationRuleResources"
        ],
        "description": "Gets the Primary and Secondary ConnectionStrings to the NotificationHub",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "notificationHubName",
            "in": "path",
            "description": "Notification Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 265,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-./_]*$"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "Authorization Rule Name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[a-zA-Z0-9!()*-._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_ListKeys": {
            "$ref": "./examples/NotificationHubs/AuthorizationRuleListKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "operationId": "NotificationHubs_RegenerateKeys",
        "tags": [
          "SharedAccessAuthorizationRuleResources"
        ],
        "description": "Regenerates the Primary/Secondary Keys to the NotificationHub Authorization Rule",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "notificationHubName",
            "in": "path",
            "description": "Notification Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 265,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-./_]*$"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "Authorization Rule Name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[a-zA-Z0-9!()*-._]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request content.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyKeyResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_RegenerateKeys": {
            "$ref": "./examples/NotificationHubs/AuthorizationRuleRegenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/debugsend": {
      "post": {
        "operationId": "NotificationHubs_DebugSend",
        "tags": [
          "NotificationHubResources"
        ],
        "description": "Test send a push notification.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "notificationHubName",
            "in": "path",
            "description": "Notification Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 265,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-./_]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DebugSendResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_DebugSend": {
            "$ref": "./examples/NotificationHubs/DebugSend.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/pnsCredentials": {
      "post": {
        "operationId": "NotificationHubs_GetPnsCredentials",
        "tags": [
          "NotificationHubResources"
        ],
        "description": "Lists the PNS Credentials associated with a notification hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "notificationHubName",
            "in": "path",
            "description": "Notification Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 265,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-./_]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PnsCredentialsResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationHubs_GetPnsCredentials": {
            "$ref": "./examples/NotificationHubs/PnsCredentialsGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/pnsCredentials": {
      "post": {
        "operationId": "Namespaces_GetPnsCredentials",
        "tags": [
          "NamespaceResources"
        ],
        "description": "Lists the PNS credentials associated with a namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PnsCredentialsResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespaces_GetPnsCredentials": {
            "$ref": "./examples/Namespaces/PnsCredentialsGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_List",
        "tags": [
          "PrivateEndpointConnectionResources"
        ],
        "description": "Returns all Private Endpoint Connections that belong to the given Notification Hubs namespace.\nThis is a public API that can be called directly by Notification Hubs users.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_List": {
            "$ref": "./examples/Namespaces/PrivateEndpointConnectionList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_Get",
        "tags": [
          "PrivateEndpointConnectionResources"
        ],
        "description": "Returns a Private Endpoint Connection with a given name.\nThis is a public API that can be called directly by Notification Hubs users.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "Private Endpoint Connection Name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 87,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*\\.[a-fA-F0-9\\-]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_Get": {
            "$ref": "./examples/Namespaces/PrivateEndpointConnectionGet.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_Update",
        "tags": [
          "PrivateEndpointConnectionResources"
        ],
        "description": "Approves or rejects Private Endpoint Connection.\nThis is a public API that can be called directly by Notification Hubs users.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "Private Endpoint Connection Name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 87,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*\\.[a-fA-F0-9\\-]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Description of the Private Endpoint Connection resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnectionResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionResource"
            }
          },
          "201": {
            "description": "Resource 'PrivateEndpointConnectionResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_Update": {
            "$ref": "./examples/Namespaces/PrivateEndpointConnectionUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_Delete",
        "tags": [
          "PrivateEndpointConnectionResources"
        ],
        "description": "Deletes the Private Endpoint Connection.\nThis is a public API that can be called directly by Notification Hubs users.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "Private Endpoint Connection Name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 87,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*\\.[a-fA-F0-9\\-]+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_Delete": {
            "$ref": "./examples/Namespaces/PrivateEndpointConnectionDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/privateLinkResources": {
      "get": {
        "operationId": "PrivateEndpointConnections_ListGroupIds",
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Even though this namespace requires subscription id, resource group and namespace name, it returns a constant payload (for a given namespacE) every time it's called.\nThat's why we don't send it to the sibling RP, but process it directly in the scale unit that received the request.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_ListGroupIds": {
            "$ref": "./examples/Namespaces/PrivateLinkResourceList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/privateLinkResources/{subResourceName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_GetGroupId",
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Even though this namespace requires subscription id, resource group and namespace name, it returns a constant payload (for a given namespacE) every time it's called.\nThat's why we don't send it to the sibling RP, but process it directly in the scale unit that received the request.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "Namespace name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "subResourceName",
            "in": "path",
            "description": "Name of the Private Link sub-resource. The only supported sub-resource is \"namespace\"",
            "required": true,
            "type": "string",
            "pattern": "^namespace$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_GetGroupId": {
            "$ref": "./examples/Namespaces/PrivateLinkResourceGet.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AccessRights": {
      "type": "string",
      "description": "Defines values for AccessRights.",
      "enum": [
        "Manage",
        "Send",
        "Listen"
      ],
      "x-ms-enum": {
        "name": "AccessRights",
        "modelAsString": true,
        "values": [
          {
            "name": "Manage",
            "value": "Manage"
          },
          {
            "name": "Send",
            "value": "Send"
          },
          {
            "name": "Listen",
            "value": "Listen"
          }
        ]
      }
    },
    "AdmCredential": {
      "type": "object",
      "description": "Description of a NotificationHub AdmCredential.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdmCredentialProperties",
          "description": "Description of a NotificationHub AdmCredential.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ]
    },
    "AdmCredentialProperties": {
      "type": "object",
      "description": "Description of a NotificationHub AdmCredential.",
      "properties": {
        "clientId": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets the client identifier.",
          "minLength": 1,
          "x-ms-secret": true
        },
        "clientSecret": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets the credential secret access key.",
          "minLength": 1,
          "x-ms-secret": true
        },
        "authTokenUrl": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets the URL of the authorization token.",
          "minLength": 1,
          "x-ms-secret": true
        }
      },
      "required": [
        "clientId",
        "clientSecret",
        "authTokenUrl"
      ]
    },
    "ApnsCredential": {
      "type": "object",
      "description": "Description of a NotificationHub ApnsCredential.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApnsCredentialProperties",
          "description": "Description of a NotificationHub ApnsCredential.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ]
    },
    "ApnsCredentialProperties": {
      "type": "object",
      "description": "Description of a NotificationHub ApnsCredential.",
      "properties": {
        "apnsCertificate": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets the APNS certificate.",
          "x-ms-secret": true
        },
        "certificateKey": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets the certificate key.",
          "x-ms-secret": true
        },
        "endpoint": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets the endpoint of this credential.",
          "minLength": 1,
          "x-ms-secret": true
        },
        "thumbprint": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets the APNS certificate Thumbprint",
          "x-ms-secret": true
        },
        "keyId": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets a 10-character key identifier (kid) key, obtained from\nyour developer account",
          "x-ms-secret": true
        },
        "appName": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets the name of the application",
          "x-ms-secret": true
        },
        "appId": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets the issuer (iss) registered claim key, whose value is\nyour 10-character Team ID, obtained from your developer account",
          "x-ms-secret": true
        },
        "token": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets provider Authentication Token, obtained through your\ndeveloper account",
          "x-ms-secret": true
        }
      },
      "required": [
        "endpoint"
      ]
    },
    "Availability": {
      "type": "object",
      "description": "Represents metric availability (part of RP operation descriptions).",
      "properties": {
        "timeGrain": {
          "type": "string",
          "description": "Time grain of the availability.",
          "readOnly": true
        },
        "blobDuration": {
          "type": "string",
          "description": "Duration of the availability blob.",
          "readOnly": true
        }
      }
    },
    "BaiduCredential": {
      "type": "object",
      "description": "Description of a NotificationHub BaiduCredential.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BaiduCredentialProperties",
          "description": "Description of a NotificationHub BaiduCredential.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ]
    },
    "BaiduCredentialProperties": {
      "type": "object",
      "description": "Description of a NotificationHub BaiduCredential.",
      "properties": {
        "baiduApiKey": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets baidu Api Key.",
          "minLength": 1,
          "x-ms-secret": true
        },
        "baiduEndPoint": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets baidu Endpoint.",
          "minLength": 1,
          "x-ms-secret": true
        },
        "baiduSecretKey": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets baidu Secret Key",
          "minLength": 1,
          "x-ms-secret": true
        }
      },
      "required": [
        "baiduApiKey",
        "baiduEndPoint",
        "baiduSecretKey"
      ]
    },
    "BrowserCredential": {
      "type": "object",
      "description": "Description of a NotificationHub BrowserCredential.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BrowserCredentialProperties",
          "description": "Description of a NotificationHub BrowserCredential.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ]
    },
    "BrowserCredentialProperties": {
      "type": "object",
      "description": "Description of a NotificationHub BrowserCredential.",
      "properties": {
        "subject": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets web push subject.",
          "minLength": 1,
          "x-ms-secret": true
        },
        "vapidPrivateKey": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets VAPID private key.",
          "minLength": 1,
          "x-ms-secret": true
        },
        "vapidPublicKey": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets VAPID public key.",
          "minLength": 1,
          "x-ms-secret": true
        }
      },
      "required": [
        "subject",
        "vapidPrivateKey",
        "vapidPublicKey"
      ]
    },
    "CheckAvailabilityParameters": {
      "type": "object",
      "description": "Parameters supplied to the Check Name Availability for Namespace and\nNotificationHubs.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets resource Id",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Gets or sets resource name",
          "minLength": 1
        },
        "type": {
          "type": "string",
          "description": "Gets resource type",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Gets or sets resource location"
        },
        "tags": {
          "type": "object",
          "description": "Gets or sets resource tags",
          "additionalProperties": {
            "type": "string"
          }
        },
        "isAvailiable": {
          "type": "boolean",
          "description": "Not used and deprecated since API version 2023-01-01-preview"
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The Sku description for a namespace"
        }
      },
      "required": [
        "name"
      ]
    },
    "CheckAvailabilityResult": {
      "type": "object",
      "description": "Description of a CheckAvailability resource.",
      "properties": {
        "isAvailiable": {
          "type": "boolean",
          "description": "Gets or sets true if the name is available and can be used to\ncreate new Namespace/NotificationHub. Otherwise false."
        },
        "location": {
          "type": "string",
          "description": "Deprecated - only for compatibility.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Deprecated - only for compatibility.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The Sku description for a namespace"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DebugSendResponse": {
      "type": "object",
      "description": "Description of a NotificationHub Resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DebugSendResult",
          "description": "Result of DebugSend operations.",
          "x-ms-client-flatten": true
        },
        "location": {
          "type": "string",
          "description": "Deprecated - only for compatibility.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Deprecated - only for compatibility.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DebugSendResult": {
      "type": "object",
      "description": "Result of DebugSend operations.",
      "properties": {
        "success": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets successful send",
          "readOnly": true
        },
        "failure": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets send failure",
          "readOnly": true
        },
        "results": {
          "type": "array",
          "description": "Gets or sets actual failure description",
          "items": {
            "$ref": "#/definitions/RegistrationResult"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "FcmV1Credential": {
      "type": "object",
      "description": "Description of a NotificationHub FcmV1Credential.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FcmV1CredentialProperties",
          "description": "Description of a NotificationHub FcmV1Credential.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ]
    },
    "FcmV1CredentialProperties": {
      "type": "object",
      "description": "Description of a NotificationHub FcmV1Credential.",
      "properties": {
        "clientEmail": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets client email.",
          "minLength": 1,
          "x-ms-secret": true
        },
        "privateKey": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets private key.",
          "minLength": 1,
          "x-ms-secret": true
        },
        "projectId": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets project id.",
          "minLength": 1,
          "x-ms-secret": true
        }
      },
      "required": [
        "clientEmail",
        "privateKey",
        "projectId"
      ]
    },
    "GcmCredential": {
      "type": "object",
      "description": "Description of a NotificationHub GcmCredential.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GcmCredentialProperties",
          "description": "Description of a NotificationHub GcmCredential.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ]
    },
    "GcmCredentialProperties": {
      "type": "object",
      "description": "Description of a NotificationHub GcmCredential.",
      "properties": {
        "gcmEndpoint": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets the GCM endpoint.",
          "x-ms-secret": true
        },
        "googleApiKey": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets the Google API key.",
          "minLength": 1,
          "x-ms-secret": true
        }
      },
      "required": [
        "googleApiKey"
      ]
    },
    "IpRule": {
      "type": "object",
      "description": "A network authorization rule that filters traffic based on IP address.",
      "properties": {
        "ipMask": {
          "type": "string",
          "description": "IP mask.",
          "minLength": 1
        },
        "rights": {
          "type": "array",
          "description": "List of access rights.",
          "items": {
            "$ref": "#/definitions/AccessRights"
          }
        }
      },
      "required": [
        "ipMask",
        "rights"
      ]
    },
    "LogSpecification": {
      "type": "object",
      "description": "A single log category specification.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the log category.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the log category.",
          "readOnly": true
        },
        "blobDuration": {
          "type": "string",
          "description": "Duration of data written to a single blob.",
          "readOnly": true
        },
        "categoryGroups": {
          "type": "array",
          "description": "Category group for the log specification.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MetricSpecification": {
      "type": "object",
      "description": "A metric specification.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Metric name / id.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "User-visible metric name.",
          "readOnly": true
        },
        "displayDescription": {
          "type": "string",
          "description": "Description of the metric.",
          "readOnly": true
        },
        "unit": {
          "type": "string",
          "description": "Metric unit.",
          "readOnly": true
        },
        "aggregationType": {
          "type": "string",
          "description": "Type of the aggregation (Average, Minimum, Maximum, Total or Count).",
          "readOnly": true
        },
        "availabilities": {
          "type": "array",
          "description": "List of availabilities.",
          "items": {
            "$ref": "#/definitions/Availability"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "supportedTimeGrainTypes": {
          "type": "array",
          "description": "List of supported time grain types.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "metricFilterPattern": {
          "type": "string",
          "description": "The matching regex pattern to be applied to the field pointed by the \"metricsFilterPathSelector\" flag in the ARM manifest.",
          "readOnly": true
        },
        "fillGapWithZero": {
          "type": "boolean",
          "description": "Optional property. If set to true, then zero will be returned for time duration where no metric is emitted / published.",
          "readOnly": true
        }
      }
    },
    "MpnsCredential": {
      "type": "object",
      "description": "Description of a NotificationHub MpnsCredential.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MpnsCredentialProperties",
          "description": "Description of a NotificationHub MpnsCredential.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ]
    },
    "MpnsCredentialProperties": {
      "type": "object",
      "description": "Description of a NotificationHub MpnsCredential.",
      "properties": {
        "mpnsCertificate": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets the MPNS certificate.",
          "minLength": 1,
          "x-ms-secret": true
        },
        "certificateKey": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets the certificate key for this credential.",
          "minLength": 1,
          "x-ms-secret": true
        },
        "thumbprint": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets the MPNS certificate Thumbprint",
          "minLength": 1,
          "x-ms-secret": true
        }
      },
      "required": [
        "mpnsCertificate",
        "certificateKey",
        "thumbprint"
      ]
    },
    "NamespaceListResult": {
      "type": "object",
      "description": "Paged collection of NamespaceResource items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NamespaceResource items on this page",
          "items": {
            "$ref": "#/definitions/NamespaceResource"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NamespacePatchParameters": {
      "type": "object",
      "description": "Patch parameter for NamespaceResource.",
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The Sku description for a namespace"
        },
        "properties": {
          "$ref": "#/definitions/NamespaceProperties",
          "description": "Represents namespace properties."
        },
        "tags": {
          "type": "object",
          "description": "Dictionary of <string>",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "NamespaceProperties": {
      "type": "object",
      "description": "Represents namespace properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Notification Hubs namespace. This is immutable property, set automatically\nby the service when the namespace is created.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/OperationProvisioningState",
          "description": "Defines values for OperationProvisioningState."
        },
        "status": {
          "$ref": "#/definitions/NamespaceStatus",
          "description": "Namespace status."
        },
        "enabled": {
          "type": "boolean",
          "description": "Gets or sets whether or not the namespace is currently enabled.",
          "readOnly": true
        },
        "critical": {
          "type": "boolean",
          "description": "Gets or sets whether or not the namespace is set as Critical.",
          "readOnly": true
        },
        "subscriptionId": {
          "type": "string",
          "description": "Namespace subscription id.",
          "readOnly": true
        },
        "region": {
          "type": "string",
          "description": "Region. The value is always set to the same value as Namespace.Location, so we are deprecating\nthis property.",
          "readOnly": true
        },
        "metricId": {
          "type": "string",
          "description": "Azure Insights Metrics id.",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the namespace was created.",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the namespace was updated.",
          "readOnly": true
        },
        "namespaceType": {
          "$ref": "#/definitions/NamespaceType",
          "description": "Defines values for NamespaceType."
        },
        "replicationRegion": {
          "$ref": "#/definitions/ReplicationRegion",
          "description": "Allowed replication region"
        },
        "zoneRedundancy": {
          "type": "string",
          "description": "Namespace SKU name.",
          "default": "Disabled",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "ZoneRedundancyPreference",
            "modelAsString": true,
            "values": [
              {
                "name": "Disabled",
                "value": "Disabled"
              },
              {
                "name": "Enabled",
                "value": "Enabled"
              }
            ]
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "networkAcls": {
          "$ref": "#/definitions/NetworkAcls",
          "description": "A collection of network authorization rules."
        },
        "pnsCredentials": {
          "$ref": "#/definitions/PnsCredentials",
          "description": "Collection of Notification Hub or Notification Hub Namespace PNS credentials."
        },
        "serviceBusEndpoint": {
          "type": "string",
          "description": "Gets or sets endpoint you can use to perform NotificationHub\noperations.",
          "readOnly": true
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "Private Endpoint Connections for namespace",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnectionResource"
          },
          "readOnly": true
        },
        "scaleUnit": {
          "type": "string",
          "description": "Gets or sets scaleUnit where the namespace gets created",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "dataCenter": {
          "type": "string",
          "description": "Deprecated."
        },
        "publicNetworkAccess": {
          "type": "string",
          "description": "Type of public network access.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        }
      }
    },
    "NamespaceResource": {
      "type": "object",
      "description": "Notification Hubs Namespace Resource.",
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The Sku description for a namespace"
        },
        "properties": {
          "$ref": "#/definitions/NamespaceProperties",
          "description": "Represents namespace properties.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "sku"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NamespaceStatus": {
      "type": "string",
      "description": "Namespace status.",
      "enum": [
        "Created",
        "Creating",
        "Suspended",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "NamespaceStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Created",
            "value": "Created"
          },
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Suspended",
            "value": "Suspended"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          }
        ]
      }
    },
    "NamespaceType": {
      "type": "string",
      "description": "Defines values for NamespaceType.",
      "enum": [
        "Messaging",
        "NotificationHub"
      ],
      "x-ms-enum": {
        "name": "NamespaceType",
        "modelAsString": true,
        "values": [
          {
            "name": "Messaging",
            "value": "Messaging"
          },
          {
            "name": "NotificationHub",
            "value": "NotificationHub"
          }
        ]
      }
    },
    "NetworkAcls": {
      "type": "object",
      "description": "A collection of network authorization rules.",
      "properties": {
        "ipRules": {
          "type": "array",
          "description": "List of IP rules.",
          "items": {
            "$ref": "#/definitions/IpRule"
          },
          "x-ms-identifiers": []
        },
        "publicNetworkRule": {
          "$ref": "#/definitions/PublicInternetAuthorizationRule",
          "description": "A default (public Internet) network authorization rule, which contains rights if no other network rule matches."
        }
      }
    },
    "NotificationHubListResult": {
      "type": "object",
      "description": "Paged collection of NotificationHubResource items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NotificationHubResource items on this page",
          "items": {
            "$ref": "#/definitions/NotificationHubResource"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NotificationHubPatchParameters": {
      "type": "object",
      "description": "Patch parameter for NamespaceResource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NotificationHubProperties",
          "description": "NotificationHub properties.",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The Sku description for a namespace"
        },
        "tags": {
          "type": "object",
          "description": "Dictionary of <string>",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "NotificationHubProperties": {
      "type": "object",
      "description": "NotificationHub properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the NotificationHub name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "registrationTtl": {
          "type": "string",
          "description": "Gets or sets the RegistrationTtl of the created NotificationHub"
        },
        "authorizationRules": {
          "type": "array",
          "description": "Gets or sets the AuthorizationRules of the created NotificationHub",
          "items": {
            "$ref": "#/definitions/SharedAccessAuthorizationRuleProperties"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "keyName"
          ]
        },
        "apnsCredential": {
          "$ref": "#/definitions/ApnsCredential",
          "description": "Description of a NotificationHub ApnsCredential."
        },
        "wnsCredential": {
          "$ref": "#/definitions/WnsCredential",
          "description": "Description of a NotificationHub WnsCredential."
        },
        "gcmCredential": {
          "$ref": "#/definitions/GcmCredential",
          "description": "Description of a NotificationHub GcmCredential."
        },
        "mpnsCredential": {
          "$ref": "#/definitions/MpnsCredential",
          "description": "Description of a NotificationHub MpnsCredential."
        },
        "admCredential": {
          "$ref": "#/definitions/AdmCredential",
          "description": "Description of a NotificationHub AdmCredential."
        },
        "baiduCredential": {
          "$ref": "#/definitions/BaiduCredential",
          "description": "Description of a NotificationHub BaiduCredential."
        },
        "browserCredential": {
          "$ref": "#/definitions/BrowserCredential",
          "description": "Description of a NotificationHub BrowserCredential."
        },
        "xiaomiCredential": {
          "$ref": "#/definitions/XiaomiCredential",
          "description": "Description of a NotificationHub XiaomiCredential."
        },
        "fcmV1Credential": {
          "$ref": "#/definitions/FcmV1Credential",
          "description": "Description of a NotificationHub FcmV1Credential."
        },
        "dailyMaxActiveDevices": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    },
    "NotificationHubResource": {
      "type": "object",
      "description": "Notification Hub Resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NotificationHubProperties",
          "description": "NotificationHub properties.",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The Sku description for a namespace"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "Operation": {
      "type": "object",
      "description": "Result of the request to list SQL operations.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation being performed on this particular object.\"",
          "readOnly": true
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay",
          "description": "he localized display information for this particular operation / action."
        },
        "isDataAction": {
          "type": "boolean",
          "description": "The intended executor of the operation.\"",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/OperationProperties",
          "description": "Additional descriptions for the operation."
        }
      }
    },
    "OperationDisplay": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
          "readOnly": true
        },
        "resource": {
          "type": "string",
          "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
          "readOnly": true
        },
        "operation": {
          "type": "string",
          "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "Paged collection of Operation items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Operation items on this page",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "OperationProperties": {
      "type": "object",
      "description": "Optional operation properties.",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification",
          "description": "Optional service specification used in Operations API."
        }
      }
    },
    "OperationProvisioningState": {
      "type": "string",
      "description": "Defines values for OperationProvisioningState.",
      "enum": [
        "Unknown",
        "InProgress",
        "Succeeded",
        "Failed",
        "Canceled",
        "Pending",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "OperationProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "InProgress",
            "value": "InProgress"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          },
          {
            "name": "Pending",
            "value": "Pending"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "PnsCredentials": {
      "type": "object",
      "description": "Collection of Notification Hub or Notification Hub Namespace PNS credentials.",
      "properties": {
        "admCredential": {
          "$ref": "#/definitions/AdmCredential",
          "description": "Description of a NotificationHub AdmCredential."
        },
        "apnsCredential": {
          "$ref": "#/definitions/ApnsCredential",
          "description": "Description of a NotificationHub ApnsCredential."
        },
        "baiduCredential": {
          "$ref": "#/definitions/BaiduCredential",
          "description": "Description of a NotificationHub BaiduCredential."
        },
        "browserCredential": {
          "$ref": "#/definitions/BrowserCredential",
          "description": "Description of a NotificationHub BrowserCredential."
        },
        "gcmCredential": {
          "$ref": "#/definitions/GcmCredential",
          "description": "Description of a NotificationHub GcmCredential."
        },
        "mpnsCredential": {
          "$ref": "#/definitions/MpnsCredential",
          "description": "Description of a NotificationHub MpnsCredential."
        },
        "wnsCredential": {
          "$ref": "#/definitions/WnsCredential",
          "description": "Description of a NotificationHub WnsCredential."
        },
        "xiaomiCredential": {
          "$ref": "#/definitions/XiaomiCredential",
          "description": "Description of a NotificationHub XiaomiCredential."
        },
        "fcmV1Credential": {
          "$ref": "#/definitions/FcmV1Credential",
          "description": "Description of a NotificationHub FcmV1Credential."
        }
      }
    },
    "PnsCredentialsResource": {
      "type": "object",
      "description": "Description of a NotificationHub PNS Credentials. This is a response of the POST requests that return namespace or hubs\nPNS credentials.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PnsCredentials",
          "description": "Collection of Notification Hub or Notification Hub Namespace PNS credentials.",
          "x-ms-client-flatten": true
        },
        "location": {
          "type": "string",
          "description": "Deprecated - only for compatibility.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Deprecated - only for compatibility.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PolicyKeyResource": {
      "type": "object",
      "description": "Namespace / NotificationHub Regenerate Keys request.",
      "properties": {
        "policyKey": {
          "$ref": "#/definitions/PolicyKeyType",
          "description": "Type of Shared Access Policy Key (primary or secondary)."
        }
      },
      "required": [
        "policyKey"
      ]
    },
    "PolicyKeyType": {
      "type": "string",
      "description": "Type of Shared Access Policy Key (primary or secondary).",
      "enum": [
        "PrimaryKey",
        "SecondaryKey"
      ],
      "x-ms-enum": {
        "name": "PolicyKeyType",
        "modelAsString": true,
        "values": [
          {
            "name": "PrimaryKey",
            "value": "PrimaryKey"
          },
          {
            "name": "SecondaryKey",
            "value": "SecondaryKey"
          }
        ]
      }
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": "Private Endpoint Connection properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/PrivateEndpointConnectionProvisioningState",
          "description": "State of Private Endpoint Connection."
        },
        "privateEndpoint": {
          "$ref": "#/definitions/RemotePrivateEndpointConnection",
          "description": "Represents a Private Endpoint that is connected to Notification Hubs namespace using Private Endpoint Connection."
        },
        "groupIds": {
          "type": "array",
          "description": "List of group ids. For Notification Hubs, it always contains a single \"namespace\" element.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/RemotePrivateLinkServiceConnectionState",
          "description": "State of the Private Link Service connection."
        }
      }
    },
    "PrivateEndpointConnectionProvisioningState": {
      "type": "string",
      "description": "State of Private Endpoint Connection.",
      "enum": [
        "Unknown",
        "Succeeded",
        "Creating",
        "Updating",
        "UpdatingByProxy",
        "Deleting",
        "DeletingByProxy",
        "Deleted"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Updating",
            "value": "Updating"
          },
          {
            "name": "UpdatingByProxy",
            "value": "UpdatingByProxy"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          },
          {
            "name": "DeletingByProxy",
            "value": "DeletingByProxy"
          },
          {
            "name": "Deleted",
            "value": "Deleted"
          }
        ]
      }
    },
    "PrivateEndpointConnectionResource": {
      "type": "object",
      "description": "Represents a Private Endpoint Connection ARM resource - a sub-resource of Notification Hubs namespace.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "Private Endpoint Connection properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionResourceListResult": {
      "type": "object",
      "description": "The response of a PrivateEndpointConnectionResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateEndpointConnectionResource items on this page",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnectionResource"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateLinkConnectionStatus": {
      "type": "string",
      "description": "State of Private Link Connection.",
      "enum": [
        "Disconnected",
        "Pending",
        "Approved",
        "Rejected"
      ],
      "x-ms-enum": {
        "name": "PrivateLinkConnectionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Disconnected",
            "value": "Disconnected"
          },
          {
            "name": "Pending",
            "value": "Pending"
          },
          {
            "name": "Approved",
            "value": "Approved"
          },
          {
            "name": "Rejected",
            "value": "Rejected"
          }
        ]
      }
    },
    "PrivateLinkResource": {
      "type": "object",
      "description": "A Private Link Arm Resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Represents properties of Private Link Resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateLinkResourceListResult": {
      "type": "object",
      "description": "The response of a PrivateLinkResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateLinkResource items on this page",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "description": "Represents properties of Private Link Resource.",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "A Group Id for Private Link. For Notification Hubs, it is always set to \"namespace\".",
          "readOnly": true
        },
        "requiredMembers": {
          "type": "array",
          "description": "Required members. For Notification Hubs, it's always a collection with a single \"namespace\" item.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "Required DNS zone names. For Notification Hubs, it contains two CNames for Service Bus and Notification Hubs zones.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "PublicInternetAuthorizationRule": {
      "type": "object",
      "description": "A default (public Internet) network authorization rule, which contains rights if no other network rule matches.",
      "properties": {
        "rights": {
          "type": "array",
          "description": "List of access rights.",
          "items": {
            "$ref": "#/definitions/AccessRights"
          }
        }
      },
      "required": [
        "rights"
      ]
    },
    "RegistrationResult": {
      "type": "object",
      "description": "Notification result for a single registration.",
      "properties": {
        "applicationPlatform": {
          "type": "string",
          "description": "PNS type.",
          "readOnly": true
        },
        "pnsHandle": {
          "type": "string",
          "description": "PNS handle.",
          "readOnly": true
        },
        "registrationId": {
          "type": "string",
          "description": "Registration id.",
          "readOnly": true
        },
        "outcome": {
          "type": "string",
          "description": "Notification outcome.",
          "readOnly": true
        }
      }
    },
    "RemotePrivateEndpointConnection": {
      "type": "object",
      "description": "Represents a Private Endpoint that is connected to Notification Hubs namespace using Private Endpoint Connection.",
      "properties": {
        "id": {
          "type": "string",
          "description": "ARM resource ID of the Private Endpoint. This may belong to different subscription and resource group than a Notification Hubs namespace.",
          "readOnly": true
        }
      }
    },
    "RemotePrivateLinkServiceConnectionState": {
      "type": "object",
      "description": "State of the Private Link Service connection.",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateLinkConnectionStatus",
          "description": "State of Private Link Connection."
        },
        "description": {
          "type": "string",
          "description": "Human-friendly description.",
          "readOnly": true
        },
        "actionsRequired": {
          "type": "string",
          "description": "Human-friendly description of required actions.",
          "readOnly": true
        }
      }
    },
    "ReplicationRegion": {
      "type": "string",
      "description": "Allowed replication region",
      "enum": [
        "Default",
        "WestUs2",
        "NorthEurope",
        "AustraliaEast",
        "BrazilSouth",
        "SouthEastAsia",
        "SouthAfricaNorth",
        "None"
      ],
      "x-ms-enum": {
        "name": "ReplicationRegion",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "Default"
          },
          {
            "name": "WestUs2",
            "value": "WestUs2"
          },
          {
            "name": "NorthEurope",
            "value": "NorthEurope"
          },
          {
            "name": "AustraliaEast",
            "value": "AustraliaEast"
          },
          {
            "name": "BrazilSouth",
            "value": "BrazilSouth"
          },
          {
            "name": "SouthEastAsia",
            "value": "SouthEastAsia"
          },
          {
            "name": "SouthAfricaNorth",
            "value": "SouthAfricaNorth"
          },
          {
            "name": "None",
            "value": "None"
          }
        ]
      }
    },
    "ResourceListKeys": {
      "type": "object",
      "description": "Response for the POST request that returns Namespace or NotificationHub access keys (connection strings).",
      "properties": {
        "primaryConnectionString": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets primaryConnectionString of the AuthorizationRule.",
          "readOnly": true,
          "x-ms-secret": true
        },
        "secondaryConnectionString": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets secondaryConnectionString of the created\nAuthorizationRule",
          "readOnly": true,
          "x-ms-secret": true
        },
        "primaryKey": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets primaryKey of the created AuthorizationRule.",
          "readOnly": true,
          "x-ms-secret": true
        },
        "secondaryKey": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets secondaryKey of the created AuthorizationRule",
          "readOnly": true,
          "x-ms-secret": true
        },
        "keyName": {
          "type": "string",
          "description": "Gets or sets keyName of the created AuthorizationRule",
          "readOnly": true
        }
      }
    },
    "ServiceSpecification": {
      "type": "object",
      "description": "Optional service specification used in Operations API.",
      "properties": {
        "logSpecifications": {
          "type": "array",
          "description": "Log specifications.",
          "items": {
            "$ref": "#/definitions/LogSpecification"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "metricSpecifications": {
          "type": "array",
          "description": "Metric specification.",
          "items": {
            "$ref": "#/definitions/MetricSpecification"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name",
            "unit"
          ]
        }
      }
    },
    "SharedAccessAuthorizationRuleListResult": {
      "type": "object",
      "description": "Paged collection of SharedAccessAuthorizationRuleResource items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SharedAccessAuthorizationRuleResource items on this page",
          "items": {
            "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SharedAccessAuthorizationRuleProperties": {
      "type": "object",
      "description": "SharedAccessAuthorizationRule properties.",
      "properties": {
        "rights": {
          "type": "array",
          "description": "Gets or sets the rights associated with the rule.",
          "items": {
            "$ref": "#/definitions/AccessRights"
          }
        },
        "primaryKey": {
          "type": "string",
          "format": "password",
          "description": "Gets a base64-encoded 256-bit primary key for signing and\nvalidating the SAS token.",
          "x-ms-secret": true
        },
        "secondaryKey": {
          "type": "string",
          "format": "password",
          "description": "Gets a base64-encoded 256-bit primary key for signing and\nvalidating the SAS token.",
          "x-ms-secret": true
        },
        "keyName": {
          "type": "string",
          "description": "Gets a string that describes the authorization rule.",
          "readOnly": true
        },
        "modifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the last modified time for this rule",
          "readOnly": true
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the created time for this rule",
          "readOnly": true
        },
        "claimType": {
          "type": "string",
          "description": "Gets a string that describes the claim type",
          "readOnly": true
        },
        "claimValue": {
          "type": "string",
          "description": "Gets a string that describes the claim value",
          "readOnly": true
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "Gets the revision number for the rule",
          "readOnly": true
        }
      },
      "required": [
        "rights"
      ]
    },
    "SharedAccessAuthorizationRuleResource": {
      "type": "object",
      "description": "Response for POST requests that return single SharedAccessAuthorizationRule.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SharedAccessAuthorizationRuleProperties",
          "description": "SharedAccessAuthorizationRule properties.",
          "x-ms-client-flatten": true
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "Sku": {
      "type": "object",
      "description": "The Sku description for a namespace",
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuName",
          "description": "Namespace SKU name."
        },
        "tier": {
          "type": "string",
          "description": "Gets or sets the tier of particular sku"
        },
        "size": {
          "type": "string",
          "description": "Gets or sets the Sku size"
        },
        "family": {
          "type": "string",
          "description": "Gets or sets the Sku Family"
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the capacity of the resource"
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuName": {
      "type": "string",
      "description": "Namespace SKU name.",
      "enum": [
        "Free",
        "Basic",
        "Standard"
      ],
      "x-ms-enum": {
        "name": "SkuName",
        "modelAsString": true,
        "values": [
          {
            "name": "Free",
            "value": "Free"
          },
          {
            "name": "Basic",
            "value": "Basic"
          },
          {
            "name": "Standard",
            "value": "Standard"
          }
        ]
      }
    },
    "WnsCredential": {
      "type": "object",
      "description": "Description of a NotificationHub WnsCredential.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WnsCredentialProperties",
          "description": "Description of a NotificationHub WnsCredential.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ]
    },
    "WnsCredentialProperties": {
      "type": "object",
      "description": "Description of a NotificationHub WnsCredential.",
      "properties": {
        "packageSid": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets the package ID for this credential.",
          "x-ms-secret": true
        },
        "secretKey": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets the secret key.",
          "x-ms-secret": true
        },
        "windowsLiveEndpoint": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets the Windows Live endpoint.",
          "x-ms-secret": true
        },
        "certificateKey": {
          "type": "string",
          "format": "password",
          "description": "Ges or sets the WNS Certificate Key.",
          "x-ms-secret": true
        },
        "wnsCertificate": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets the WNS Certificate.",
          "x-ms-secret": true
        }
      }
    },
    "XiaomiCredential": {
      "type": "object",
      "description": "Description of a NotificationHub XiaomiCredential.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/XiaomiCredentialProperties",
          "description": "Description of a NotificationHub XiaomiCredentialProperties.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ]
    },
    "XiaomiCredentialProperties": {
      "type": "object",
      "description": "Description of a NotificationHub XiaomiCredentialProperties.",
      "properties": {
        "appSecret": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets app secret.",
          "x-ms-secret": true
        },
        "endpoint": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets xiaomi service endpoint.",
          "x-ms-secret": true
        }
      }
    }
  },
  "parameters": {}
}
