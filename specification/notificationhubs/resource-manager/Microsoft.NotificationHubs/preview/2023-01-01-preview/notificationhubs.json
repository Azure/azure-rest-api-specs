{
  "swagger": "2.0",
  "info": {
    "title": "NotificationHubs RP Client",
    "description": "Microsoft Notification Hubs Resource Provider REST API.",
    "version": "2023-01-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/checkNotificationHubAvailability": {
      "post": {
        "tags": [
          "Hubs"
        ],
        "summary": "Checks the availability of the given notificationHub in a namespace.",
        "operationId": "NotificationHubs_CheckNotificationHubAvailability",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request content.",
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityResult"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "NotificationHubs_CheckNotificationHubAvailability": {
            "$ref": "./examples/NotificationHubs/CheckAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}": {
      "get": {
        "tags": [
          "Hubs"
        ],
        "summary": "Gets the notification hub.",
        "operationId": "NotificationHubs_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NotificationHubResource"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "NotificationHubs_Get": {
            "$ref": "./examples/NotificationHubs/Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Hubs"
        ],
        "summary": "Creates/Update a NotificationHub in a namespace.",
        "operationId": "NotificationHubs_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NotificationHubResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NotificationHubResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NotificationHubResource"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "NotificationHubs_CreateOrUpdate": {
            "$ref": "./examples/NotificationHubs/CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Hubs"
        ],
        "summary": "Patch a NotificationHub in a namespace.",
        "operationId": "NotificationHubs_Patch",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NotificationHubResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NotificationHubResource"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "NotificationHubs_Patch": {
            "$ref": "./examples/NotificationHubs/Update.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Hubs"
        ],
        "summary": "Deletes a notification hub associated with a namespace.",
        "operationId": "NotificationHubs_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "in": "header",
            "name": "x-ms-client-principal-name",
            "description": "Added when available. Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id.",
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "NotificationHubs_Delete": {
            "$ref": "./examples/NotificationHubs/Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs": {
      "get": {
        "tags": [
          "Hubs"
        ],
        "summary": "Lists the notification hubs associated with a namespace.",
        "operationId": "NotificationHubs_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Continuation token",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "description": "Page size",
            "type": "integer",
            "format": "int32",
            "default": 100
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NotificationHubListResult"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-pageable": {
          "itemName": "value",
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NotificationHubs_List": {
            "$ref": "./examples/NotificationHubs/List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/debugsend": {
      "post": {
        "tags": [
          "Hubs"
        ],
        "summary": "Test send a push notification.",
        "operationId": "NotificationHubs_DebugSend",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DebugSendResponse"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "NotificationHubs_DebugSend": {
            "$ref": "./examples/NotificationHubs/DebugSend.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/authorizationRules/{authorizationRuleName}": {
      "put": {
        "tags": [
          "Hubs"
        ],
        "summary": "Creates/Updates an authorization rule for a NotificationHub",
        "operationId": "NotificationHubs_CreateOrUpdateAuthorizationRule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "$ref": "#/parameters/AuthorizationRuleName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The shared access authorization rule.",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "NotificationHubs_CreateOrUpdateAuthorizationRule": {
            "$ref": "./examples/NotificationHubs/AuthorizationRuleCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Hubs"
        ],
        "summary": "Deletes a notificationHub authorization rule",
        "operationId": "NotificationHubs_DeleteAuthorizationRule",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "$ref": "#/parameters/AuthorizationRuleName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "NotificationHubs_DeleteAuthorizationRule": {
            "$ref": "./examples/NotificationHubs/AuthorizationRuleDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "Hubs"
        ],
        "summary": "Gets an authorization rule for a NotificationHub by name.",
        "operationId": "NotificationHubs_GetAuthorizationRule",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "$ref": "#/parameters/AuthorizationRuleName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "NotificationHubs_GetAuthorizationRule": {
            "$ref": "./examples/NotificationHubs/AuthorizationRuleGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/authorizationRules": {
      "get": {
        "tags": [
          "Hubs"
        ],
        "summary": "Gets the authorization rules for a NotificationHub.",
        "operationId": "NotificationHubs_ListAuthorizationRules",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-pageable": {
          "itemName": "value",
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "NotificationHubs_ListAuthorizationRules": {
            "$ref": "./examples/NotificationHubs/AuthorizationRuleList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "tags": [
          "Hubs"
        ],
        "summary": "Gets the Primary and Secondary ConnectionStrings to the NotificationHub",
        "operationId": "NotificationHubs_ListKeys",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "$ref": "#/parameters/AuthorizationRuleName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "NotificationHubs_ListKeys": {
            "$ref": "./examples/NotificationHubs/AuthorizationRuleListKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "tags": [
          "Hubs"
        ],
        "summary": "Regenerates the Primary/Secondary Keys to the NotificationHub Authorization Rule",
        "operationId": "NotificationHubs_RegenerateKeys",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "$ref": "#/parameters/AuthorizationRuleName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters supplied to regenerate the NotificationHub Authorization Rule Key.",
            "schema": {
              "$ref": "#/definitions/PolicyKeyResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "NotificationHubs_RegenerateKeys": {
            "$ref": "./examples/NotificationHubs/AuthorizationRuleRegenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationHubs/{notificationHubName}/pnsCredentials": {
      "post": {
        "tags": [
          "Hubs"
        ],
        "summary": "Lists the PNS Credentials associated with a notification hub.",
        "operationId": "NotificationHubs_GetPnsCredentials",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/HubName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PnsCredentialsResource"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "NotificationHubs_GetPnsCredentials": {
            "$ref": "./examples/NotificationHubs/PnsCredentialsGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/checkNamespaceAvailability": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CheckAvailability",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CheckAvailabilityResult"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "Namespaces_CheckAvailability": {
            "$ref": "./examples/Namespaces/CheckAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "in": "header",
            "name": "x-ms-client-principal-name",
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "Namespaces_Get": {
            "$ref": "./examples/Namespaces/Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "in": "header",
            "name": "x-ms-client-principal-name",
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "Namespaces_CreateOrUpdate": {
            "$ref": "./examples/Namespaces/CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Patch",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "in": "header",
            "name": "x-ms-client-principal-name",
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NamespaceResource"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "Namespaces_Patch": {
            "$ref": "./examples/Namespaces/Update.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "in": "header",
            "name": "x-ms-client-principal-name",
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "Namespaces_Delete": {
            "$ref": "./examples/Namespaces/Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListAll",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "in": "query",
            "name": "$skipToken",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "type": "integer",
            "format": "int32",
            "default": 100
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NamespaceListResult"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-pageable": {
          "itemName": "value",
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Namespaces_ListAll": {
            "$ref": "./examples/Namespaces/ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "query",
            "name": "$skipToken",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$count",
            "type": "integer",
            "format": "int32",
            "default": 100
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NamespaceListResult"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-pageable": {
          "itemName": "value",
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Namespaces_List": {
            "$ref": "./examples/Namespaces/ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CreateOrUpdateAuthorizationRule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/AuthorizationRuleName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "Namespaces_CreateOrUpdateAuthorizationRule": {
            "$ref": "./examples/Namespaces/AuthorizationRuleCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_DeleteAuthorizationRule",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/AuthorizationRuleName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "Namespaces_DeleteAuthorizationRule": {
            "$ref": "./examples/Namespaces/AuthorizationRuleDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_GetAuthorizationRule",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/AuthorizationRuleName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "Namespaces_GetAuthorizationRule": {
            "$ref": "./examples/Namespaces/AuthorizationRuleGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/authorizationRules": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListAuthorizationRules",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-pageable": {
          "itemName": "value",
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Namespaces_ListAuthorizationRules": {
            "$ref": "./examples/Namespaces/AuthorizationRuleList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListKeys",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/AuthorizationRuleName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-pageable": {
          "itemName": "value",
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Namespaces_ListKeys": {
            "$ref": "./examples/Namespaces/AuthorizationRuleListKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_RegenerateKeys",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "#/parameters/AuthorizationRuleName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PolicyKeyResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ResourceListKeys"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "Namespaces_RegenerateKeys": {
            "$ref": "./examples/Namespaces/AuthorizationRuleRegenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/pnsCredentials": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "summary": "Lists the PNS credentials associated with a namespace.",
        "operationId": "Namespaces_GetPnsCredentials",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PnsCredentialsResource"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "Namespaces_GetPnsCredentials": {
            "$ref": "./examples/Namespaces/PnsCredentialsGet.json"
          }
        }
      }
    },
    "/providers/Microsoft.NotificationHubs/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-pageable": {
          "itemName": "value",
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/NHOperationsList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "put": {
        "tags": [
          "PrivateLink"
        ],
        "summary": "Approves or rejects Private Endpoint Connection.\r\nThis is a public API that can be called directly by Notification Hubs users.",
        "description": "This is an asynchronous API, which sets the Azure-AsyncOperation header. \r\nCaller can use URI from that header to check status of the operation.",
        "operationId": "PrivateEndpointConnections_ApproveOrReject",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "in": "path",
            "name": "privateEndpointConnectionName",
            "description": "Private Endpoint Connection name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Description of the Private Endpoint Connection resource.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionResource"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionResource"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_ApproveOrReject": {
            "$ref": "./examples/Namespaces/PrivateEndpointConnectionApproveOrReject.json"
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateLink"
        ],
        "summary": "Deletes the Private Endpoint Connection.\r\nThis is a public API that can be called directly by Notification Hubs users.",
        "description": "This is an asynchronous API, which sets the Azure-AsyncOperation header. \r\nCaller can use URI from that header to check status of the operation.",
        "operationId": "PrivateEndpointConnections_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "in": "path",
            "name": "privateEndpointConnectionName",
            "description": "Name of the Private Endpoint Connection to remove.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_Delete": {
            "$ref": "./examples/Namespaces/PrivateEndpointConnectionDelete.json"
          }
        }
      },
      "get": {
        "tags": [
          "PrivateLink"
        ],
        "summary": "Returns a Private Endpoint Connection with a given name. \r\nThis is a public API that can be called directly by Notification Hubs users.",
        "operationId": "PrivateEndpointConnections_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "in": "path",
            "name": "privateEndpointConnectionName",
            "description": "Private Endpoint Connection name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionResource"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_Get": {
            "$ref": "./examples/Namespaces/PrivateEndpointConnectionGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateLink"
        ],
        "summary": "Returns all Private Endpoint Connections that belong to the given Notification Hubs namespace.\r\nThis is a public API that can be called directly by Notification Hubs users.",
        "operationId": "PrivateEndpointConnections_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionResourcePrivateLinkResourceCollection"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_List": {
            "$ref": "./examples/Namespaces/PrivateEndpointConnectionList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/privateLinkResources/{subResourceName}": {
      "get": {
        "tags": [
          "PrivateLink"
        ],
        "summary": "Returns Group Id response. \r\nThis is a public API required by the Networking RP contract. It can be used directly by Notification Hubs users.",
        "description": "Even though this namespace requires subscription id, resource group and namespace name, it returns a constant payload (for a given namespacE) every time it's called.\r\nThat's why we don't send it to the sibling RP, but process it directly in the scale unit that received the request.",
        "operationId": "PrivateEndpointConnections_GetGroupId",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "in": "path",
            "name": "subResourceName",
            "description": "Name of the Private Link sub-resource. The only supported sub-resource is \"namespace\"",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResource"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_GetGroupId": {
            "$ref": "./examples/Namespaces/PrivateLinkResourceGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLink"
        ],
        "summary": "Returns all Group Ids supported by the Notification Hubs RP.\r\nThis is a public API required by the Networking RP contract. It can be used directly by Notification Hubs users.",
        "description": "Even though this namespace requires subscription id, resource group and namespace name, it returns a constant payload (for a given namespacE) every time it's called.\r\nThat's why we don't send it to the sibling RP, but process it directly in the scale unit that received the request.",
        "operationId": "PrivateEndpointConnections_ListGroupIds",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NamespaceName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourcePrivateLinkResourceCollection"
            }
          },
          "default": {
            "description": "Error code with reason."
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_ListGroupIds": {
            "$ref": "./examples/Namespaces/PrivateLinkResourceList.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AccessRights": {
      "enum": [
        "Manage",
        "Send",
        "Listen"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "AccessRights",
        "modelAsString": true
      }
    },
    "AdmCredential": {
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdmCredentialProperties"
        }
      },
      "x-ms-secret": true
    },
    "AdmCredentialProperties": {
      "required": [
        "authTokenUrl",
        "clientId",
        "clientSecret"
      ],
      "type": "object",
      "properties": {
        "clientId": {
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        },
        "clientSecret": {
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        },
        "authTokenUrl": {
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "ApnsCredential": {
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApnsCredentialProperties"
        }
      },
      "x-ms-secret": true
    },
    "ApnsCredentialProperties": {
      "required": [
        "endpoint"
      ],
      "type": "object",
      "properties": {
        "apnsCertificate": {
          "type": "string",
          "x-ms-secret": true
        },
        "certificateKey": {
          "type": "string",
          "x-ms-secret": true
        },
        "endpoint": {
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        },
        "thumbprint": {
          "type": "string",
          "x-ms-secret": true
        },
        "keyId": {
          "type": "string",
          "x-ms-secret": true
        },
        "appName": {
          "type": "string",
          "x-ms-secret": true
        },
        "appId": {
          "type": "string",
          "x-ms-secret": true
        },
        "token": {
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "Availability": {
      "type": "object",
      "properties": {
        "timeGrain": {
          "type": "string",
          "readOnly": true
        },
        "blobDuration": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "BaiduCredential": {
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BaiduCredentialProperties"
        }
      },
      "x-ms-secret": true
    },
    "BaiduCredentialProperties": {
      "required": [
        "baiduApiKey",
        "baiduEndPoint",
        "baiduSecretKey"
      ],
      "type": "object",
      "properties": {
        "baiduApiKey": {
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        },
        "baiduEndPoint": {
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        },
        "baiduSecretKey": {
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "BrowserCredential": {
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BrowserCredentialProperties"
        }
      },
      "x-ms-secret": true
    },
    "BrowserCredentialProperties": {
      "required": [
        "subject",
        "vapidPrivateKey",
        "vapidPublicKey"
      ],
      "type": "object",
      "properties": {
        "subject": {
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        },
        "vapidPrivateKey": {
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        },
        "vapidPublicKey": {
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "CheckAvailabilityParameters": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "location": {
          "type": "string"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "isAvailiable": {
          "type": "boolean"
        }
      }
    },
    "CheckAvailabilityResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "isAvailiable": {
          "type": "boolean"
        },
        "location": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ConnectionDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "privateIpAddress": {
          "type": "string",
          "readOnly": true
        },
        "linkIdentifier": {
          "type": "string",
          "readOnly": true
        },
        "groupId": {
          "type": "string",
          "readOnly": true
        },
        "memberName": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DebugSendResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/DebugSendResult"
        },
        "location": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DebugSendResult": {
      "type": "object",
      "properties": {
        "success": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "failure": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegistrationResult"
          },
          "readOnly": true
        }
      }
    },
    "ErrorDetails": {
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "minLength": 1,
          "type": "string"
        },
        "message": {
          "minLength": 1,
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "required": [
        "error"
      ],
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetails"
        }
      }
    },
    "GcmCredential": {
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GcmCredentialProperties"
        }
      },
      "x-ms-secret": true
    },
    "GcmCredentialProperties": {
      "required": [
        "googleApiKey"
      ],
      "type": "object",
      "properties": {
        "gcmEndpoint": {
          "type": "string",
          "x-ms-secret": true
        },
        "googleApiKey": {
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "GroupConnectivityInformation": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "readOnly": true
        },
        "memberName": {
          "type": "string",
          "readOnly": true
        },
        "customerVisibleFqdns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "internalFqdn": {
          "type": "string",
          "readOnly": true
        },
        "redirectMapId": {
          "type": "string",
          "readOnly": true
        },
        "privateLinkServiceArmRegion": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IpRule": {
      "required": [
        "ipMask",
        "rights"
      ],
      "type": "object",
      "properties": {
        "ipMask": {
          "minLength": 1,
          "type": "string"
        },
        "rights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessRights"
          }
        }
      }
    },
    "LinkedNotification": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/LinkedNotificationProperties"
        }
      }
    },
    "LinkedNotificationProperties": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "LogSpecification": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "readOnly": true
        },
        "blobDuration": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "MetricSpecification": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "readOnly": true
        },
        "displayDescription": {
          "type": "string",
          "readOnly": true
        },
        "unit": {
          "type": "string",
          "readOnly": true
        },
        "aggregationType": {
          "type": "string",
          "readOnly": true
        },
        "availabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Availability"
          },
          "readOnly": true
        },
        "metricFilterPattern": {
          "type": "string",
          "readOnly": true
        },
        "fillGapWithZero": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "MoveResourcesRequest": {
      "required": [
        "resources",
        "targetResourceGroup"
      ],
      "type": "object",
      "properties": {
        "targetResourceGroup": {
          "minLength": 1,
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MpnsCredential": {
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MpnsCredentialProperties"
        }
      },
      "x-ms-secret": true
    },
    "MpnsCredentialProperties": {
      "required": [
        "certificateKey",
        "mpnsCertificate",
        "thumbprint"
      ],
      "type": "object",
      "properties": {
        "mpnsCertificate": {
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        },
        "certificateKey": {
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        },
        "thumbprint": {
          "minLength": 1,
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "NamespaceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamespaceResource"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "NamespaceProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/OperationProvisioningState"
        },
        "status": {
          "$ref": "#/definitions/NamespaceStatus"
        },
        "enabled": {
          "type": "boolean",
          "readOnly": true
        },
        "critical": {
          "type": "boolean",
          "readOnly": true
        },
        "subscriptionId": {
          "type": "string",
          "readOnly": true
        },
        "region": {
          "type": "string",
          "readOnly": true
        },
        "metricId": {
          "type": "string",
          "readOnly": true
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "namespaceType": {
          "$ref": "#/definitions/NamespaceType"
        },
        "replicationRegion": {
          "$ref": "#/definitions/ReplicationRegion"
        },
        "zoneRedundant": {
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "networkAcls": {
          "$ref": "#/definitions/NetworkAcls"
        },
        "pnsCredentials": {
          "$ref": "#/definitions/PnsCredentials"
        },
        "serviceBusEndpoint": {
          "type": "string",
          "readOnly": true
        },
        "privateEndpointConnections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnectionResource"
          },
          "readOnly": true
        }
      }
    },
    "NamespaceResource": {
      "required": [
        "location",
        "properties",
        "sku"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "minLength": 1,
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "sku": {
          "$ref": "#/definitions/Sku"
        },
        "properties": {
          "$ref": "#/definitions/NamespaceProperties"
        }
      },
      "x-ms-azure-resource": true
    },
    "NamespaceStatus": {
      "enum": [
        "Created",
        "Creating",
        "Suspended",
        "Deleting"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "NamespaceStatus",
        "modelAsString": true
      }
    },
    "NamespaceType": {
      "enum": [
        "Messaging",
        "NotificationHub"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "NamespaceType",
        "modelAsString": true
      }
    },
    "NetworkAcls": {
      "required": [
        "ipRules",
        "publicInternetRule"
      ],
      "type": "object",
      "properties": {
        "ipRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpRule"
          }
        },
        "publicInternetRule": {
          "$ref": "#/definitions/PublicInternetAuthorizationRule"
        }
      }
    },
    "NotificationHubListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationHubResource"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "NotificationHubProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "registrationTtl": {
          "type": "string"
        },
        "authorizationRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedAccessAuthorizationRuleProperties"
          },
          "readOnly": true,
          "x-ms-secret": true
        },
        "apnsCredential": {
          "$ref": "#/definitions/ApnsCredential"
        },
        "wnsCredential": {
          "$ref": "#/definitions/WnsCredential"
        },
        "gcmCredential": {
          "$ref": "#/definitions/GcmCredential"
        },
        "mpnsCredential": {
          "$ref": "#/definitions/MpnsCredential"
        },
        "admCredential": {
          "$ref": "#/definitions/AdmCredential"
        },
        "baiduCredential": {
          "$ref": "#/definitions/BaiduCredential"
        },
        "browserCredential": {
          "$ref": "#/definitions/BrowserCredential"
        },
        "xiaomiCredential": {
          "$ref": "#/definitions/XiaomiCredential"
        },
        "dailyMaxActiveDevices": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NotificationHubResource": {
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "properties": {
          "$ref": "#/definitions/NotificationHubProperties"
        }
      },
      "x-ms-azure-resource": true
    },
    "Operation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay"
        },
        "properties": {
          "$ref": "#/definitions/OperationProperties"
        },
        "isDataAction": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "OperationDisplay": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "readOnly": true
        },
        "resource": {
          "type": "string",
          "readOnly": true
        },
        "operation": {
          "type": "string",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OperationProperties": {
      "type": "object",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification"
        }
      }
    },
    "OperationProvisioningState": {
      "enum": [
        "Unknown",
        "InProgress",
        "Succeeded",
        "Failed",
        "Canceled",
        "Pending",
        "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "OperationProvisioningState",
        "modelAsString": true
      }
    },
    "PnsCredentials": {
      "type": "object",
      "properties": {
        "admCredential": {
          "$ref": "#/definitions/AdmCredential"
        },
        "apnsCredential": {
          "$ref": "#/definitions/ApnsCredential"
        },
        "baiduCredential": {
          "$ref": "#/definitions/BaiduCredential"
        },
        "browserCredential": {
          "$ref": "#/definitions/BrowserCredential"
        },
        "gcmCredential": {
          "$ref": "#/definitions/GcmCredential"
        },
        "mpnsCredential": {
          "$ref": "#/definitions/MpnsCredential"
        },
        "wnsCredential": {
          "$ref": "#/definitions/WnsCredential"
        },
        "xiaomiCredential": {
          "$ref": "#/definitions/XiaomiCredential"
        }
      },
      "x-ms-secret": true
    },
    "PnsCredentialsResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/PnsCredentials"
        },
        "location": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PolicyKeyResource": {
      "required": [
        "policyKey"
      ],
      "type": "object",
      "properties": {
        "policyKey": {
          "$ref": "#/definitions/PolicyKeyType"
        }
      }
    },
    "PolicyKeyType": {
      "enum": [
        "PrimaryKey",
        "SecondaryKey"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "PolicyKeyType",
        "modelAsString": true
      }
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true
        },
        "privateEndpoint": {
          "$ref": "#/definitions/RemotePrivateEndpointConnection"
        },
        "groupIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/RemotePrivateLinkServiceConnectionState"
        }
      }
    },
    "PrivateEndpointConnectionProxy": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "readOnly": true
        },
        "remotePrivateEndpoint": {
          "$ref": "#/definitions/RemotePrivateEndpoint"
        }
      }
    },
    "PrivateEndpointConnectionResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties"
        },
        "location": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PrivateEndpointConnectionResourcePrivateLinkResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnectionResource"
          },
          "readOnly": true
        }
      }
    },
    "PrivateLinkConnectionStatus": {
      "enum": [
        "Disconnected",
        "Pending",
        "Approved",
        "Rejected"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "PrivateLinkConnectionStatus",
        "modelAsString": true
      }
    },
    "PrivateLinkResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties"
        }
      }
    },
    "PrivateLinkResourcePrivateLinkResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          },
          "readOnly": true
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "readOnly": true
        },
        "requiredMembers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "PrivateLinkServiceConnection": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "groupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requestMessage": {
          "type": "string"
        }
      }
    },
    "PublicInternetAuthorizationRule": {
      "required": [
        "rights"
      ],
      "type": "object",
      "properties": {
        "rights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessRights"
          }
        }
      }
    },
    "RegistrationResult": {
      "type": "object",
      "properties": {
        "applicationPlatform": {
          "type": "string",
          "readOnly": true
        },
        "pnsHandle": {
          "type": "string",
          "readOnly": true
        },
        "registrationId": {
          "type": "string",
          "readOnly": true
        },
        "outcome": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RemotePrivateEndpoint": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "immutableSubscriptionId": {
          "type": "string",
          "readOnly": true
        },
        "immutableResourceId": {
          "type": "string",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "readOnly": true
        },
        "manualPrivateLinkServiceConnections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkServiceConnection"
          },
          "readOnly": true
        },
        "privateLinkServiceConnections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkServiceConnection"
          },
          "readOnly": true
        },
        "connectionDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectionDetails"
          },
          "readOnly": true
        }
      }
    },
    "RemotePrivateEndpointConnection": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RemotePrivateLinkServiceConnectionState": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateLinkConnectionStatus"
        },
        "description": {
          "type": "string",
          "readOnly": true
        },
        "actionsRequired": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ReplicationRegion": {
      "enum": [
        "Default",
        "WestUs2",
        "NorthEurope",
        "AustraliaEast",
        "BrazilSouth",
        "SouthEastAsia",
        "SouthAfricaNorth",
        "None"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ReplicationRegion",
        "modelAsString": true
      }
    },
    "ResourceListKeys": {
      "type": "object",
      "properties": {
        "primaryConnectionString": {
          "type": "string",
          "readOnly": true,
          "x-ms-secret": true
        },
        "secondaryConnectionString": {
          "type": "string",
          "readOnly": true,
          "x-ms-secret": true
        },
        "primaryKey": {
          "type": "string",
          "readOnly": true,
          "x-ms-secret": true
        },
        "secondaryKey": {
          "type": "string",
          "readOnly": true,
          "x-ms-secret": true
        },
        "keyName": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ServiceSpecification": {
      "type": "object",
      "properties": {
        "logSpecifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogSpecification"
          },
          "readOnly": true
        },
        "metricSpecifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricSpecification"
          },
          "readOnly": true
        }
      }
    },
    "SharedAccessAuthorizationRuleListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SharedAccessAuthorizationRuleProperties": {
      "required": [
        "rights"
      ],
      "type": "object",
      "properties": {
        "rights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessRights"
          }
        },
        "primaryKey": {
          "type": "string",
          "x-ms-secret": true
        },
        "secondaryKey": {
          "type": "string",
          "x-ms-secret": true
        },
        "keyName": {
          "type": "string",
          "readOnly": true
        },
        "modifiedTime": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "createdTime": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "claimType": {
          "type": "string",
          "readOnly": true
        },
        "claimValue": {
          "type": "string",
          "readOnly": true
        },
        "revision": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "SharedAccessAuthorizationRuleResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/SharedAccessAuthorizationRuleProperties"
        },
        "location": {
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "Sku": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "minLength": 1,
          "type": "string"
        },
        "tier": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "family": {
          "type": "string"
        },
        "capacity": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "WnsCredential": {
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WnsCredentialProperties"
        }
      },
      "x-ms-secret": true
    },
    "WnsCredentialProperties": {
      "type": "object",
      "properties": {
        "packageSid": {
          "type": "string",
          "x-ms-secret": true
        },
        "secretKey": {
          "type": "string",
          "x-ms-secret": true
        },
        "windowsLiveEndpoint": {
          "type": "string",
          "x-ms-secret": true
        },
        "certificateKey": {
          "type": "string",
          "x-ms-secret": true
        },
        "wnsCertificate": {
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "XiaomiCredential": {
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/XiaomiCredentialProperties"
        }
      },
      "x-ms-secret": true
    },
    "XiaomiCredentialProperties": {
      "type": "object",
      "properties": {
        "appSecret": {
          "type": "string",
          "x-ms-secret": true
        },
        "endpoint": {
          "type": "string",
          "x-ms-secret": true
        }
      }
    }
  },
  "parameters": {
    "NamespaceName": {
      "in": "path",
      "name": "namespaceName",
      "description": "Namespace name",
      "required": true,
      "maxLength": 50,
      "minLength": 1,
      "pattern": "^[a-zA-Z][a-zA-Z0-9-]*$",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "HubName": {
      "in": "path",
      "name": "notificationHubName",
      "description": "Notification Hub name",
      "required": true,
      "maxLength": 265,
      "minLength": 1,
      "pattern": "^[a-zA-Z][a-zA-Z0-9-./_]*$",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "AuthorizationRuleName": {
      "in": "path",
      "name": "authorizationRuleName",
      "description": "Authorization Rule Name",
      "required": true,
      "maxLength": 256,
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9!()*-._]+$",
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "description": "Azure Active Directory OAuth2 Flow"
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
