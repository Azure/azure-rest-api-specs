{
	"swagger": "2.0",
	"info": {
		"title": "NotificationHubsManagementClient",
		"description": "Azure Notification Hubs client",
		"version": "2017-04-01"
	},
	"host": "management.azure.com",
	"schemes": ["https"],
	"consumes": ["application/json"],
	"produces": ["application/json"],
	"security": [{
		"azure_auth": ["user_impersonation"]
	}],
	"securityDefinitions": {
		"azure_auth": {
			"type": "oauth2",
			"authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
			"flow": "implicit",
			"description": "Azure Active Directory OAuth2 Flow",
			"scopes": {
				"user_impersonation": "impersonate your user account"
			}
		}
	},
	"paths": {
		"/providers/Microsoft.NotificationHubs/operations": {
			"get": {
				"tags": ["Operations"],
				"operationId": "Operations_List",
				"x-ms-examples": {
					"OperationsList": {
						"$ref": "./examples/NHOperationsList.json"
					}
				},
				"description": "Lists all of the available NotificationHubs REST API operations.",
				"parameters": [{
					"$ref": "#/parameters/apiVersionParameter"
				}],
				"responses": {
					"200": {
						"description": "OK. The request has succeeded.",
						"schema": {
							"$ref": "#/definitions/OperationListResult"
						}
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				},
				"x-ms-pageable": {
					"nextLinkName": "nextLink"
				}
			}
		},
		"/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/CheckNamespaceAvailability": {
			"post": {
				"tags": ["Namespaces"],
				"operationId": "Namespaces_CheckNamespaceAvailability",
				"x-ms-examples": {
					"NameSpaceCheckNameAvailability": {
						"$ref": "./examples/NameSpaces/NHNameSpaceCheckNameAvailability.json"
					}
				},
				"description": "Check the give namespace name availability.",
				"parameters": [{
					"$ref": "#/parameters/apiVersionParameter"
				},
				{
					"$ref": "#/parameters/subscriptionIdParameter"
				},
				{
					"name": "parameters",
					"in": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/CheckAvailabilityParameters"
					},
					"description": "Parameters to check availability of the given namespace name"
				}],
				"responses": {
					"200": {
						"description": "check availability returned successfully.",
						"schema": {
							"$ref": "#/definitions/CheckAvailabilityResource"
						}
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/namespaces": {
			"get": {
				"tags": ["Namespaces"],
				"operationId": "Namespaces_List",
				"x-ms-examples": {
					"NameSpaceList": {
						"$ref": "./examples/NameSpaces/NHNameSpaceList.json"
					}
				},
				"description": "Gets all the available namespaces within the subscription, irrespective of the resource groups.",
				"externalDocs": {
					"url": "https://msdn.microsoft.com/en-us/library/azure/mt639412.aspx"
				},
				"parameters": [{
					"$ref": "#/parameters/apiVersionParameter"
				},
				{
					"$ref": "#/parameters/subscriptionIdParameter"
				}],
				"responses": {
					"200": {
						"description": "Namespaces successfully returned.",
						"schema": {
							"$ref": "#/definitions/NamespaceListResult"
						}
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				},
				"x-ms-pageable": {
					"nextLinkName": "nextLink"
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces": {
			"get": {
				"tags": ["Namespaces"],
				"operationId": "Namespaces_ListByResourceGroup",
				"x-ms-examples": {
					"NameSpaceListByResourceGroup": {
						"$ref": "./examples/NameSpaces/NHNameSpaceListByResourceGroup.json"
					}
				},
				"description": "Gets the available namespaces within a resource group.",
				"externalDocs": {
					"url": "https://msdn.microsoft.com/en-us/library/azure/mt639412.aspx"
				},
				"parameters": [{
					"$ref": "#/parameters/resourceGroupNameParameter"
				},
				{
					"$ref": "#/parameters/apiVersionParameter"
				},
				{
					"$ref": "#/parameters/subscriptionIdParameter"
				}],
				"responses": {
					"200": {
						"description": "Namespaces successfully returned.",
						"schema": {
							"$ref": "#/definitions/NamespaceListResult"
						}
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				},
				"x-ms-pageable": {
					"nextLinkName": "nextLink"
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}": {
			"put": {
				"tags": ["Namespaces"],
				"operationId": "Namespaces_CreateOrUpdate",
				"x-ms-examples": {
					"NameSpaceCreate": {
						"$ref": "./examples/NameSpaces/NHNameSpaceCreate.json"
					}
				},
				"description": "Creates or updates a service namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
				"externalDocs": {
					"url": "https://msdn.microsoft.com/en-us/library/azure/mt639408.aspx"
				},
				"parameters": [{
					"$ref": "#/parameters/resourceGroupNameParameter"
				},
				{
					"name": "namespaceName",
					"in": "path",
					"required": true,
					"type": "string",
					"description": "The namespace name."
				},
				{
					"name": "parameters",
					"in": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/NamespaceCreateOrUpdateParameters"
					},
					"description": "Parameters supplied to create a namespace resource."
				},
				{
					"$ref": "#/parameters/apiVersionParameter"
				},
				{
					"$ref": "#/parameters/subscriptionIdParameter"
				}],
				"responses": {
					"201": {
						"description": "Namespace create request accepted.",
						"schema": {
							"$ref": "#/definitions/NamespaceResource"
						}
					},
					"200": {
						"description": "Namespace created successfully.",
						"schema": {
							"$ref": "#/definitions/NamespaceResource"
						}
					},
					"202": {
						"description": "Namespace create or update request accepted."
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				},
				"x-ms-long-running-operation": true
			},
			"delete": {
				"tags": ["Namespaces"],
				"operationId": "Namespaces_Delete",
				"x-ms-examples": {
					"NameSpaceDelete": {
						"$ref": "./examples/NameSpaces/NHNameSpaceDelete.json"
					}
				},
				"description": "Deletes an existing namespace. This operation also removes all associated resources under the namespace.",
				"externalDocs": {
					"url": "https://msdn.microsoft.com/en-us/library/azure/mt639389.aspx"
				},
				"parameters": [{
					"$ref": "#/parameters/resourceGroupNameParameter"
				},
				{
					"$ref": "#/parameters/namespaceNameParameter"
				},
				{
					"$ref": "#/parameters/apiVersionParameter"
				},
				{
					"$ref": "#/parameters/subscriptionIdParameter"
				}],
				"responses": {
					"204": {
						"description": "No content."
					},
					"200": {
						"description": "Namespace successfully deleted."
					},
					"202": {
						"description": "Namespace delete request accepted."
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				},
				"x-ms-long-running-operation": true
			},
			"get": {
				"tags": ["Namespaces"],
				"operationId": "Namespaces_Get",
				"x-ms-examples": {
					"NameSpaceGet": {
						"$ref": "./examples/NameSpaces/NHNameSpaceGet.json"
					}
				},
				"description": "Gets a description for the specified namespace.",
				"externalDocs": {
					"url": "https://msdn.microsoft.com/en-us/library/azure/mt639379.aspx"
				},
				"parameters": [{
					"$ref": "#/parameters/resourceGroupNameParameter"
				},
				{
					"$ref": "#/parameters/namespaceNameParameter"
				},
				{
					"$ref": "#/parameters/apiVersionParameter"
				},
				{
					"$ref": "#/parameters/subscriptionIdParameter"
				}],
				"responses": {
					"200": {
						"description": "Namespace successfully returned.",
						"schema": {
							"$ref": "#/definitions/NamespaceResource"
						}
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules": {
			"get": {
				"tags": ["Namespaces"],
				"operationId": "Namespaces_ListAuthorizationRules",
				"x-ms-examples": {
					"NameSpaceAuthorizationRuleListAll": {
						"$ref": "./examples/NameSpaces/NHNameSpaceAuthorizationRuleListAll.json"
					}
				},
				"description": "Gets the authorization rules for a namespace.",
				"externalDocs": {
					"url": "https://msdn.microsoft.com/en-us/library/azure/mt639376.aspx"
				},
				"parameters": [{
					"$ref": "#/parameters/resourceGroupNameParameter"
				},
				{
					"$ref": "#/parameters/namespaceNameParameter"
				},
				{
					"$ref": "#/parameters/apiVersionParameter"
				},
				{
					"$ref": "#/parameters/subscriptionIdParameter"
				}],
				"responses": {
					"200": {
						"description": "Namespace authorization rules returned successfully.",
						"schema": {
							"$ref": "#/definitions/SharedAccessAuthorizationRuleListResult"
						}
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				},
				"x-ms-pageable": {
					"nextLinkName": "nextLink"
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}": {
			"put": {
				"tags": ["Namespaces"],
				"operationId": "Namespaces_CreateOrUpdateAuthorizationRule",
				"x-ms-examples": {
					"NameSpaceAuthorizationRuleCreate": {
						"$ref": "./examples/NameSpaces/NHNameSpaceAuthorizationRuleCreate.json"
					}
				},
				"description": "Creates or updates an authorization rule for a namespace.",
				"externalDocs": {
					"url": "https://msdn.microsoft.com/en-us/library/azure/mt639410.aspx"
				},
				"parameters": [{
					"$ref": "#/parameters/resourceGroupNameParameter"
				},
				{
					"$ref": "#/parameters/namespaceNameParameter"
				},
				{
					"$ref": "#/parameters/authorizationRuleNameParameter"
				},
				{
					"name": "parameters",
					"in": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/SharedAccessAuthorizationRuleCreateOrUpdateParameters"
					},
					"description": "The shared access authorization rule."
				},
				{
					"$ref": "#/parameters/apiVersionParameter"
				},
				{
					"$ref": "#/parameters/subscriptionIdParameter"
				}],
				"responses": {
					"200": {
						"description": "Namespace authorization rule created.",
						"schema": {
							"$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
						}
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			},
			"delete": {
				"tags": ["Namespaces"],
				"operationId": "Namespaces_DeleteAuthorizationRule",
				"x-ms-examples": {
					"NameSpaceAuthorizationRuleDelete": {
						"$ref": "./examples/NameSpaces/NHNameSpaceAuthorizationRuleDelete.json"
					}
				},
				"description": "Deletes a namespace authorization rule.",
				"externalDocs": {
					"url": "https://msdn.microsoft.com/en-us/library/azure/mt639417.aspx"
				},
				"parameters": [{
					"$ref": "#/parameters/resourceGroupNameParameter"
				},
				{
					"$ref": "#/parameters/namespaceNameParameter"
				},
				{
					"$ref": "#/parameters/authorizationRuleNameParameter"
				},
				{
					"$ref": "#/parameters/apiVersionParameter"
				},
				{
					"$ref": "#/parameters/subscriptionIdParameter"
				}],
				"responses": {
					"204": {
						"description": "No content."
					},
					"200": {
						"description": "Namespace authorization rule successfully deleted."
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			},
			"get": {
				"tags": ["Namespaces"],
				"operationId": "Namespaces_GetAuthorizationRule",
				"x-ms-examples": {
					"NameSpaceAuthorizationRuleGet": {
						"$ref": "./examples/NameSpaces/NHNameSpaceAuthorizationRuleGet.json"
					}
				},
				"description": "Gets an authorization rule for a namespace by rule name.",
				"externalDocs": {
					"url": "https://msdn.microsoft.com/en-us/library/azure/mt639392.aspx"
				},
				"parameters": [{
					"$ref": "#/parameters/resourceGroupNameParameter"
				},
				{
					"$ref": "#/parameters/namespaceNameParameter"
				},
				{
					"$ref": "#/parameters/authorizationRuleNameParameter"
				},
				{
					"$ref": "#/parameters/apiVersionParameter"
				},
				{
					"$ref": "#/parameters/subscriptionIdParameter"
				}],
				"responses": {
					"200": {
						"description": "Namespace authorization rule returned successfully.",
						"schema": {
							"$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
						}
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/listKeys": {
			"post": {
				"tags": ["Namespaces"],
				"operationId": "Namespaces_ListKeys",
				"x-ms-examples": {
					"NameSpaceAuthorizationRuleListKey": {
						"$ref": "./examples/NameSpaces/NHNameSpaceAuthorizationRuleListKey.json"
					}
				},
				"description": "Gets the primary and secondary connection strings for the namespace.",
				"externalDocs": {
					"url": "https://msdn.microsoft.com/en-us/library/azure/mt639398.aspx"
				},
				"parameters": [{
					"$ref": "#/parameters/resourceGroupNameParameter"
				},
				{
					"$ref": "#/parameters/namespaceNameParameter"
				},
				{
					"$ref": "#/parameters/authorizationRuleNameParameter"
				},
				{
					"$ref": "#/parameters/apiVersionParameter"
				},
				{
					"$ref": "#/parameters/subscriptionIdParameter"
				}],
				"responses": {
					"200": {
						"description": "Connection strings successfully returned.",
						"schema": {
							"$ref": "#/definitions/ResourceListKeys"
						}
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/checkNotificationHubAvailability": {
			"post": {
				"tags": ["NotificationHubs"],
				"operationId": "NotificationHubs_CheckAvailability",
				"description": "Checks the availability of the given notificationHub in a namespace.",
				"externalDocs": {
					"url": "http://msdn.microsoft.com/en-us/library/windowsazure/jj870968.aspx"
				},
				"parameters": [{
					"name": "resourceGroupName",
					"in": "path",
					"required": true,
					"type": "string",
					"description": "The name of the resource group."
				},
				{
					"name": "namespaceName",
					"in": "path",
					"required": true,
					"type": "string",
					"description": "The namespace name."
				},
				{
					"name": "parameters",
					"in": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/CheckAvailabilityParameters"
					},
					"description": "The notificationHub name."
				},
				{
					"$ref": "#/parameters/apiVersionParameter"
				},
				{
					"$ref": "#/parameters/subscriptionIdParameter"
				}],
				"responses": {
					"200": {
						"description": "",
						"schema": {
							"$ref": "#/definitions/CheckAvailabilityResource"
						}
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/regenerateKeys": {
			"post": {
				"tags": ["Namespaces"],
				"operationId": "Namespaces_RegenerateKeys",
				"x-ms-examples": {
					"NameSpaceAuthorizationRuleRegenrateKey": {
						"$ref": "./examples/NameSpaces/NHNameSpaceAuthorizationRuleRegenrateKey.json"
					}
				},
				"description": "Regenerates the primary or secondary connection strings for the namespace.",
				"externalDocs": {
					"url": "https://msdn.microsoft.com/en-us/library/azure/mt718977.aspx"
				},
				"parameters": [{
					"$ref": "#/parameters/resourceGroupNameParameter"
				},
				{
					"$ref": "#/parameters/namespaceNameParameter"
				},
				{
					"$ref": "#/parameters/authorizationRuleNameParameter"
				},
				{
					"name": "parameters",
					"in": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/regenerateAccessKeyParameters"
					},
					"description": "Parameters supplied to regenerate the authorization rule."
				},
				{
					"$ref": "#/parameters/apiVersionParameter"
				},
				{
					"$ref": "#/parameters/subscriptionIdParameter"
				}],
				"responses": {
					"200": {
						"description": "Authorization rule successfully regenerated.",
						"schema": {
							"$ref": "#/definitions/AccessKeys"
						}
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationhubs": {
			"get": {
				"tags": ["notificationhubs"],
				"operationId": "notificationhubs_ListByNamespace",
				"x-ms-examples": {
					"notificationhubListByNameSpace": {
						"$ref": "./examples/notificationhubs/NotificationHubListByNameSpace.json"
					}
				},
				"description": "Gets the notificationhubs within a namespace.",
				"externalDocs": {
					"url": "https://msdn.microsoft.com/en-us/library/azure/mt639415.aspx"
				},
				"parameters": [{
					"$ref": "#/parameters/resourceGroupNameParameter"
				},
				{
					"$ref": "#/parameters/namespaceNameParameter"
				},
				{
					"$ref": "#/parameters/apiVersionParameter"
				},
				{
					"$ref": "#/parameters/subscriptionIdParameter"
				}],
				"responses": {
					"200": {
						"description": "notificationhubs successfully returned.",
						"schema": {
							"$ref": "#/definitions/NotificationHubListResult"
						}
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				},
				"x-ms-pageable": {
					"nextLinkName": "nextLink"
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationhubs/{notificationhubName}": {
			"put": {
				"tags": ["notificationhubs"],
				"operationId": "notificationhubs_CreateOrUpdate",
				"x-ms-examples": {
					"notificationhubCreate": {
						"$ref": "./examples/notificationhubs/NotificationHubCreate.json"
					}
				},
				"description": "Creates or updates a Notification Hubs notificationhub. This operation is idempotent.",
				"externalDocs": {
					"url": "https://msdn.microsoft.com/en-us/library/azure/mt639395.aspx"
				},
				"parameters": [{
					"$ref": "#/parameters/resourceGroupNameParameter"
				},
				{
					"$ref": "#/parameters/namespaceNameParameter"
				},
				{
					"$ref": "#/parameters/notificationhubNameParameter"
				},
				{
					"name": "parameters",
					"in": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/NotificationHubCreateOrUpdateParameters"
					},
					"description": "Parameters supplied to create or update a notificationhub resource."
				},
				{
					"$ref": "#/parameters/apiVersionParameter"
				},
				{
					"$ref": "#/parameters/subscriptionIdParameter"
				}],
				"responses": {
					"200": {
						"description": "notificationhub successfully created.",
						"schema": {
							"$ref": "#/definitions/NotificationHubResource"
						}
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			},
			"delete": {
				"tags": ["notificationhubs"],
				"operationId": "notificationhubs_Delete",
				"x-ms-examples": {
					"notificationhubDelete": {
						"$ref": "./examples/notificationhubs/NotificationHubDelete.json"
					}
				},
				"description": "Deletes a notificationhub from the specified namespace in a resource group.",
				"externalDocs": {
					"url": "https://msdn.microsoft.com/en-us/library/azure/mt639411.aspx"
				},
				"parameters": [{
					"$ref": "#/parameters/resourceGroupNameParameter"
				},
				{
					"$ref": "#/parameters/namespaceNameParameter"
				},
				{
					"$ref": "#/parameters/notificationhubNameParameter"
				},
				{
					"$ref": "#/parameters/apiVersionParameter"
				},
				{
					"$ref": "#/parameters/subscriptionIdParameter"
				}],
				"responses": {
					"204": {
						"description": "No content."
					},
					"200": {
						"description": "notificationhub successfully deleted."
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			},
			"get": {
				"tags": ["notificationhubs"],
				"operationId": "notificationhubs_Get",
				"x-ms-examples": {
					"notificationhubGet": {
						"$ref": "./examples/notificationhubs/NotificationHubGet.json"
					}
				},
				"description": "Returns a description for the specified notificationhub.",
				"externalDocs": {
					"url": "https://msdn.microsoft.com/en-us/library/azure/mt639380.aspx"
				},
				"parameters": [{
					"$ref": "#/parameters/resourceGroupNameParameter"
				},
				{
					"$ref": "#/parameters/namespaceNameParameter"
				},
				{
					"$ref": "#/parameters/notificationhubNameParameter"
				},
				{
					"$ref": "#/parameters/apiVersionParameter"
				},
				{
					"$ref": "#/parameters/subscriptionIdParameter"
				}],
				"responses": {
					"200": {
						"description": "notificationhub description successfully returned.",
						"schema": {
							"$ref": "#/definitions/NotificationHubResource"
						}
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationhubs/{notificationhubName}/authorizationRules": {
			"get": {
				"tags": ["notificationhubs"],
				"operationId": "notificationhubs_ListAuthorizationRules",
				"x-ms-examples": {
					"notificationhubAuthorizationRuleListAll": {
						"$ref": "./examples/notificationhubs/NotificationHubAuthorizationRuleListAll.json"
					}
				},
				"description": "Gets all authorization rules for a notificationhub.",
				"externalDocs": {
					"url": "https://msdn.microsoft.com/en-us/library/azure/mt705607.aspx"
				},
				"parameters": [{
					"$ref": "#/parameters/resourceGroupNameParameter"
				},
				{
					"$ref": "#/parameters/namespaceNameParameter"
				},
				{
					"$ref": "#/parameters/notificationhubNameParameter"
				},
				{
					"$ref": "#/parameters/apiVersionParameter"
				},
				{
					"$ref": "#/parameters/subscriptionIdParameter"
				}],
				"responses": {
					"200": {
						"description": "Authorization rules successfully returned.",
						"schema": {
							"$ref": "#/definitions/SharedAccessAuthorizationRuleListResult"
						}
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				},
				"x-ms-pageable": {
					"nextLinkName": "nextLink"
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationhubs/{notificationhubName}/authorizationRules/{authorizationRuleName}": {
			"put": {
				"tags": ["notificationhubs"],
				"operationId": "notificationhubs_CreateOrUpdateAuthorizationRule",
				"x-ms-examples": {
					"notificationhubAuthorizationRuleCreate": {
						"$ref": "./examples/notificationhubs/NotificationHubAuthorizationRuleCreate.json"
					}
				},
				"description": "Creates an authorization rule for a notificationhub.",
				"parameters": [{
					"$ref": "#/parameters/resourceGroupNameParameter"
				},
				{
					"$ref": "#/parameters/namespaceNameParameter"
				},
				{
					"$ref": "#/parameters/notificationhubNameParameter"
				},
				{
					"$ref": "#/parameters/authorizationRuleNameParameter"
				},
				{
					"name": "parameters",
					"in": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/SharedAccessAuthorizationRuleCreateOrUpdateParameters"
					},
					"description": "The shared access authorization rule."
				},
				{
					"$ref": "#/parameters/apiVersionParameter"
				},
				{
					"$ref": "#/parameters/subscriptionIdParameter"
				}],
				"responses": {
					"200": {
						"description": "Authorization rule successfully created.",
						"schema": {
							"$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
						}
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			},
			"delete": {
				"tags": ["notificationhubs"],
				"operationId": "notificationhubs_DeleteAuthorizationRule",
				"x-ms-examples": {
					"notificationhubAuthorizationRuleDelete": {
						"$ref": "./examples/notificationhubs/NotificationHubAuthorizationRuleDelete.json"
					}
				},
				"description": "Deletes a notificationhub authorization rule.",
				"externalDocs": {
					"url": "https://msdn.microsoft.com/en-us/library/azure/mt705609.aspx"
				},
				"parameters": [{
					"$ref": "#/parameters/resourceGroupNameParameter"
				},
				{
					"$ref": "#/parameters/namespaceNameParameter"
				},
				{
					"$ref": "#/parameters/notificationhubNameParameter"
				},
				{
					"$ref": "#/parameters/authorizationRuleNameParameter"
				},
				{
					"$ref": "#/parameters/apiVersionParameter"
				},
				{
					"$ref": "#/parameters/subscriptionIdParameter"
				}],
				"responses": {
					"204": {
						"description": "No content."
					},
					"200": {
						"description": "Authorization rule successfully deleted."
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			},
			"get": {
				"tags": ["notificationhubs"],
				"operationId": "notificationhubs_GetAuthorizationRule",
				"x-ms-examples": {
					"notificationhubAuthorizationRuleGet": {
						"$ref": "./examples/notificationhubs/NotificationHubAuthorizationRuleGet.json"
					}
				},
				"description": "Gets an authorization rule for a notificationhub by rule name.",
				"externalDocs": {
					"url": "https://msdn.microsoft.com/en-us/library/azure/mt705611.aspx"
				},
				"parameters": [{
					"$ref": "#/parameters/resourceGroupNameParameter"
				},
				{
					"$ref": "#/parameters/namespaceNameParameter"
				},
				{
					"$ref": "#/parameters/notificationhubNameParameter"
				},
				{
					"$ref": "#/parameters/authorizationRuleNameParameter"
				},
				{
					"$ref": "#/parameters/apiVersionParameter"
				},
				{
					"$ref": "#/parameters/subscriptionIdParameter"
				}],
				"responses": {
					"200": {
						"description": "Authorization rule successfully returned.",
						"schema": {
							"$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
						}
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationhubs/{notificationhubName}/authorizationRules/{authorizationRuleName}/ListKeys": {
			"post": {
				"tags": ["notificationhubs"],
				"operationId": "notificationhubs_ListKeys",
				"x-ms-examples": {
					"notificationhubAuthorizationRuleListKey": {
						"$ref": "./examples/notificationhubs/NotificationHubAuthorizationRuleListKey.json"
					}
				},
				"description": "Primary and secondary connection strings to the notificationhub.",
				"externalDocs": {
					"url": "https://msdn.microsoft.com/en-us/library/azure/mt705608.aspx"
				},
				"parameters": [{
					"$ref": "#/parameters/resourceGroupNameParameter"
				},
				{
					"$ref": "#/parameters/namespaceNameParameter"
				},
				{
					"$ref": "#/parameters/notificationhubNameParameter"
				},
				{
					"$ref": "#/parameters/authorizationRuleNameParameter"
				},
				{
					"$ref": "#/parameters/apiVersionParameter"
				},
				{
					"$ref": "#/parameters/subscriptionIdParameter"
				}],
				"responses": {
					"200": {
						"description": "Connection strings successfully returned.",
						"schema": {
							"$ref": "#/definitions/AccessKeys"
						}
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NotificationHubs/namespaces/{namespaceName}/notificationhubs/{notificationhubName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
			"post": {
				"tags": ["notificationhubs"],
				"operationId": "notificationhubs_RegenerateKeys",
				"x-ms-examples": {
					"notificationhubAuthorizationRuleRegenrateKey": {
						"$ref": "./examples/notificationhubs/NotificationHubAuthorizationRuleRegenrateKey.json"
					}
				},
				"description": "Regenerates the primary or secondary connection strings to the notificationhub.",
				"externalDocs": {
					"url": "https://msdn.microsoft.com/en-us/library/azure/mt705606.aspx"
				},
				"parameters": [{
					"$ref": "#/parameters/resourceGroupNameParameter"
				},
				{
					"$ref": "#/parameters/namespaceNameParameter"
				},
				{
					"$ref": "#/parameters/notificationhubNameParameter"
				},
				{
					"$ref": "#/parameters/authorizationRuleNameParameter"
				},
				{
					"name": "parameters",
					"in": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/regenerateAccessKeyParameters"
					},
					"description": "Parameters supplied to regenerate the authorization rule."
				},
				{
					"$ref": "#/parameters/apiVersionParameter"
				},
				{
					"$ref": "#/parameters/subscriptionIdParameter"
				}],
				"responses": {
					"200": {
						"description": "Connection strings successfully regenerated.",
						"schema": {
							"$ref": "#/definitions/AccessKeys"
						}
					},
					"default": {
						"description": "NotificationHubs error response describing why the operation failed.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		}
	},
	"definitions": {
		"CheckAvailabilityParameters": {
			"properties": {
				"name": {
					"type": "string",
					"description": "Gets or sets name"
				},
				"location": {
					"type": "string",
					"description": "Gets or sets location."
				},
				"tags": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					},
					"description": "Gets or sets tags."
				},
				"isAvailiable": {
					"type": "boolean",
					"description": "Gets or sets true if the name is available and can be used to create new Namespace/NotificationHub. Otherwise false."
				}
			},
			"required": ["name"],
			"description": "Parameters supplied to the Check Name Availability for Namespace and NotificationHubs."
		},
		"CheckAvailabilityResource": {
			"properties": {
				"id": {
					"type": "string",
					"description": "Gets or sets the id"
				},
				"location": {
					"type": "string",
					"description": "Gets or sets datacenter location"
				},
				"name": {
					"type": "string",
					"description": "Gets or sets name"
				},
				"type": {
					"type": "string",
					"description": "Gets or sets resource type"
				},
				"tags": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					},
					"description": "Gets or sets tags"
				},
				"isAvailiable": {
					"type": "boolean",
					"description": "Gets or sets true if the name is available and can be used to create new Namespace/NotificationHub. Otherwise false."
				}
			},
			"description": "Description of a CheckAvailibility resource."
		},
		"NamespaceProperties": {
			"properties": {
				"name": {
					"type": "string",
					"description": "The name of the namespace."
				},
				"provisioningState": {
					"type": "string",
					"description": "Gets or sets provisioning state of the Namespace."
				},
				"region": {
					"externalDocs": {
						"url": "http://msdn.microsoft.com/en-us/library/windowsazure/jj873988.aspx"
					},
					"type": "string",
					"description": "Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia EastAustralia SoutheastCentral USEast USEast US 2West USNorth Central USSouth Central USEast AsiaSoutheast AsiaBrazil SouthJapan EastJapan WestNorth EuropeWest Europe"
				},
				"status": {
					"externalDocs": {
						"url": "http://msdn.microsoft.com/en-us/library/windowsazure/jj873988.aspx"
					},
					"type": "string",
					"description": "Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting"
				},
				"createdAt": {
					"type": "string",
					"format": "date-time",
					"description": "The time the namespace was created."
				},
				"serviceBusEndpoint": {
					"externalDocs": {
						"url": "http://msdn.microsoft.com/en-us/library/windowsazure/jj873988.aspx"
					},
					"type": "string",
					"description": "Endpoint you can use to perform NotificationHub operations."
				},
				"subscriptionId": {
					"type": "string",
					"description": "The Id of the Azure subscription associated with the namespace."
				},
				"scaleUnit": {
					"type": "string",
					"description": "ScaleUnit where the namespace gets created"
				},
				"enabled": {
					"type": "boolean",
					"description": "Whether or not the namespace is currently enabled."
				},
				"critical": {
					"type": "boolean",
					"description": "Whether or not the namespace is set as Critical."
				},
				"namespaceType": {
					"type": "string",
					"description": "Gets or sets the namespace type.",
					"enum": ["Messaging",
					"NotificationHub"],
					"x-ms-enum": {
						"name": "NamespaceType",
						"modelAsString": false
					}
				}
			},
			"description": "Namespace properties."
		},
		"NamespaceCreateOrUpdateParameters": {
			"properties": {
				"location": {
					"type": "string",
					"description": "Gets or sets Namespace data center location."
				},
				"tags": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					},
					"description": "Gets or sets Namespace tags."
				},
				"properties": {
					"$ref": "#/definitions/NamespaceProperties",
					"description": "Gets or sets properties of the Namespace."
				}
			},
			"required": ["location",
			"properties"],
			"description": "Parameters supplied to the CreateOrUpdate Namespace operation."
		},
		"NamespaceResource": {
			"properties": {
				"id": {
					"type": "string",
					"description": "Gets or sets the id of the created Namespace."
				},
				"location": {
					"type": "string",
					"description": "Gets or sets datacenter location of the Namespace."
				},
				"name": {
					"type": "string",
					"description": "Gets or sets name of the Namespace."
				},
				"type": {
					"type": "string",
					"description": "Gets or sets resource type of the Namespace."
				},
				"tags": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					},
					"description": "Gets or sets tags of the Namespace."
				},
				"properties": {
					"$ref": "#/definitions/NamespaceProperties",
					"description": "Gets or sets properties of the Namespace."
				}
			},
			"description": "Description of a Namespace resource."
		},
		"SharedAccessAuthorizationRuleProperties": {
			"properties": {
				"primaryKey": {
					"type": "string",
					"description": "The primary key that was used."
				},
				"secondaryKey": {
					"type": "string",
					"description": "The secondary key that was used."
				},
				"keyName": {
					"type": "string",
					"description": "The name of the key that was used."
				},
				"claimType": {
					"type": "string",
					"description": "The type of the claim."
				},
				"claimValue": {
					"type": "string",
					"description": "The value of the claim."
				},
				"rights": {
					"type": "array",
					"items": {
						"type": "string",
						"enum": ["Manage",
						"Send",
						"Listen"],
						"x-ms-enum": {
							"name": "AccessRights",
							"modelAsString": false
						}
					},
					"description": "The rights associated with the rule."
				},
				"createdTime": {
					"type": "string",
					"format": "date-time",
					"description": "The time at which the authorization rule was created."
				},
				"modifiedTime": {
					"type": "string",
					"format": "date-time",
					"description": "The most recent time the rule was updated."
				},
				"revision": {
					"type": "integer",
					"format": "int32",
					"description": "The revision number for the rule."
				}
			},
			"description": "SharedAccessAuthorizationRule properties."
		},
		"SharedAccessAuthorizationRuleCreateOrUpdateParameters": {
			"properties": {
				"location": {
					"type": "string",
					"description": "Gets or sets Namespace data center location."
				},
				"name": {
					"type": "string",
					"description": "Gets or sets Name of the Namespace AuthorizationRule."
				},
				"properties": {
					"$ref": "#/definitions/SharedAccessAuthorizationRuleProperties",
					"description": "Gets or sets properties of the Namespace AuthorizationRules."
				}
			},
			"required": ["properties"],
			"description": "Parameters supplied to the CreateOrUpdate Namespace AuthorizationRules."
		},
		"SharedAccessAuthorizationRuleResource": {
			"properties": {
				"id": {
					"type": "string",
					"description": "Gets or sets the id of the created Namespace AuthorizationRules."
				},
				"location": {
					"type": "string",
					"description": "Gets or sets datacenter location of the Namespace AuthorizationRules."
				},
				"name": {
					"type": "string",
					"description": "Gets or sets name of the Namespace AuthorizationRules."
				},
				"type": {
					"type": "string",
					"description": "Gets or sets resource type of the Namespace AuthorizationRules."
				},
				"tags": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					},
					"description": "Gets or sets tags of the Namespace AuthorizationRules."
				},
				"properties": {
					"$ref": "#/definitions/SharedAccessAuthorizationRuleProperties",
					"description": "Gets or sets properties of the Namespace."
				}
			},
			"description": "Description of a Namespace AuthorizationRules."
		},
		"NamespaceListResult": {
			"properties": {
				"value": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/NamespaceResource"
					},
					"description": "Gets or sets result of the List Namespace operation."
				},
				"nextLink": {
					"type": "string",
					"description": "Gets or sets link to the next set of results. Not empty if Value contains incomplete list of Namespaces"
				}
			},
			"description": "The response of the List Namespace operation."
		},
		"SharedAccessAuthorizationRuleListResult": {
			"properties": {
				"value": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SharedAccessAuthorizationRuleResource"
					},
					"description": "Gets or sets result of the List AuthorizationRules operation."
				},
				"nextLink": {
					"type": "string",
					"description": "Gets or sets link to the next set of results. Not empty if Value contains incomplete list of AuthorizationRules"
				}
			},
			"description": "The response of the List Namespace operation."
		},
		"ResourceListKeys": {
			"properties": {
				"primaryConnectionString": {
					"type": "string",
					"description": "Gets or sets the primaryConnectionString of the created Namespace AuthorizationRule."
				},
				"secondaryConnectionString": {
					"type": "string",
					"description": "Gets or sets the secondaryConnectionString of the created Namespace AuthorizationRule"
				}
			},
			"description": "Namespace/NotificationHub Connection String"
		},
		"ApnsCredentialProperties": {
			"properties": {
				"apnsCertificate": {
					"type": "string",
					"description": "Gets or sets the APNS certificate."
				},
				"certificateKey": {
					"type": "string",
					"description": "Gets or sets the certificate key."
				},
				"endpoint": {
					"type": "string",
					"description": "Gets or sets the endpoint of this credential."
				},
				"thumbprint": {
					"type": "string",
					"description": "Gets or sets the Apns certificate Thumbprint"
				}
			},
			"description": "Description of a NotificationHub ApnsCredential."
		},
		"ApnsCredential": {
			"properties": {
				"properties": {
					"$ref": "#/definitions/ApnsCredentialProperties",
					"description": "Gets or sets properties of NotificationHub ApnsCredential."
				}
			},
			"description": "Description of a NotificationHub ApnsCredential."
		},
		"WnsCredentialProperties": {
			"properties": {
				"packageSid": {
					"type": "string",
					"description": "Gets or sets the package ID for this credential."
				},
				"secretKey": {
					"type": "string",
					"description": "Gets or sets the secret key."
				},
				"windowsLiveEndpoint": {
					"type": "string",
					"description": "Gets or sets the Windows Live endpoint."
				}
			},
			"description": "Description of a NotificationHub WnsCredential."
		},
		"WnsCredential": {
			"properties": {
				"properties": {
					"$ref": "#/definitions/WnsCredentialProperties",
					"description": "Gets or sets properties of NotificationHub WnsCredential."
				}
			},
			"description": "Description of a NotificationHub WnsCredential."
		},
		"GcmCredentialProperties": {
			"properties": {
				"gcmEndpoint": {
					"type": "string",
					"description": "Gets or sets the GCM endpoint."
				},
				"googleApiKey": {
					"type": "string",
					"description": "Gets or sets the Google API key."
				}
			},
			"description": "Description of a NotificationHub GcmCredential."
		},
		"GcmCredential": {
			"properties": {
				"properties": {
					"$ref": "#/definitions/GcmCredentialProperties",
					"description": "Gets or sets properties of NotificationHub GcmCredential."
				}
			},
			"description": "Description of a NotificationHub GcmCredential."
		},
		"MpnsCredentialProperties": {
			"properties": {
				"mpnsCertificate": {
					"type": "string",
					"description": "Gets or sets the MPNS certificate."
				},
				"certificateKey": {
					"type": "string",
					"description": "Gets or sets the certificate key for this credential."
				},
				"thumbprint": {
					"type": "string",
					"description": "Gets or sets the Mpns certificate Thumbprint"
				}
			},
			"description": "Description of a NotificationHub MpnsCredential."
		},
		"MpnsCredential": {
			"properties": {
				"properties": {
					"$ref": "#/definitions/MpnsCredentialProperties",
					"description": "Gets or sets properties of NotificationHub MpnsCredential."
				}
			},
			"description": "Description of a NotificationHub MpnsCredential."
		},
		"AdmCredentialProperties": {
			"properties": {
				"clientId": {
					"type": "string",
					"description": "Gets or sets the client identifier."
				},
				"clientSecret": {
					"type": "string",
					"description": "Gets or sets the credential secret access key."
				},
				"authTokenUrl": {
					"type": "string",
					"description": "Gets or sets the URL of the authorization token."
				}
			},
			"description": "Description of a NotificationHub AdmCredential."
		},
		"AdmCredential": {
			"properties": {
				"properties": {
					"$ref": "#/definitions/AdmCredentialProperties",
					"description": "Gets or sets properties of NotificationHub AdmCredential."
				}
			},
			"description": "Description of a NotificationHub AdmCredential."
		},
		"BaiduCredentialProperties": {
			"properties": {
				"baiduApiKey": {
					"type": "string",
					"description": "Get or Set Baidu Api Key."
				},
				"baiduEndPoint": {
					"type": "string",
					"description": "Get or Set Baidu Endpoint."
				},
				"baiduSecretKey": {
					"type": "string",
					"description": "Get or Set Baidu Secret Key"
				}
			},
			"description": "Description of a NotificationHub BaiduCredential."
		},
		"BaiduCredential": {
			"properties": {
				"properties": {
					"$ref": "#/definitions/BaiduCredentialProperties",
					"description": "Gets or sets properties of NotificationHub BaiduCredential."
				}
			},
			"description": "Description of a NotificationHub BaiduCredential."
		},
		"NotificationHubProperties": {
			"properties": {
				"name": {
					"type": "string",
					"description": "The NotificationHub name."
				},
				"registrationTtl": {
					"type": "string",
					"description": "The RegistrationTtl of the created NotificationHub"
				},
				"authorizationRules": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SharedAccessAuthorizationRuleProperties"
					},
					"description": "The AuthorizationRules of the created NotificationHub"
				},
				"apnsCredential": {
					"$ref": "#/definitions/ApnsCredential",
					"description": "The ApnsCredential of the created NotificationHub"
				},
				"wnsCredential": {
					"$ref": "#/definitions/WnsCredential",
					"description": "The WnsCredential of the created NotificationHub"
				},
				"gcmCredential": {
					"$ref": "#/definitions/GcmCredential",
					"description": "The GcmCredential of the created NotificationHub"
				},
				"mpnsCredential": {
					"$ref": "#/definitions/MpnsCredential",
					"description": "The MpnsCredential of the created NotificationHub"
				},
				"admCredential": {
					"$ref": "#/definitions/AdmCredential",
					"description": "The AdmCredential of the created NotificationHub"
				},
				"baiduCredential": {
					"$ref": "#/definitions/BaiduCredential",
					"description": "The BaiduCredential of the created NotificationHub"
				}
			},
			"description": "NotificationHub properties."
		},
		"NotificationHubCreateOrUpdateParameters": {
			"properties": {
				"location": {
					"type": "string",
					"description": "Gets or sets NotificationHub data center location."
				},
				"tags": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					},
					"description": "Gets or sets NotificationHub tags."
				},
				"properties": {
					"$ref": "#/definitions/NotificationHubProperties",
					"description": "Gets or sets properties of the NotificationHub."
				}
			},
			"required": ["location",
			"properties"],
			"description": "Parameters supplied to the CreateOrUpdate NotificationHub operation."
		},
		"NotificationHubResource": {
			"properties": {
				"id": {
					"type": "string",
					"description": "Gets or sets the id of the created NotificationHub."
				},
				"location": {
					"type": "string",
					"description": "Gets or sets datacenter location of the NotificationHub."
				},
				"name": {
					"type": "string",
					"description": "Gets or sets name of the NotificationHub."
				},
				"type": {
					"type": "string",
					"description": "Gets or sets resource type of the NotificationHub."
				},
				"tags": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					},
					"description": "Gets or sets tags of the NotificationHub."
				},
				"properties": {
					"$ref": "#/definitions/NotificationHubProperties",
					"description": "Gets or sets properties of the NotificationHub."
				}
			},
			"description": "Description of a NotificationHub Resource."
		},
		"NotificationHubListResult": {
			"properties": {
				"value": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/NotificationHubResource"
					},
					"description": "Gets or sets result of the List NotificationHub operation."
				},
				"nextLink": {
					"type": "string",
					"description": "Gets or sets link to the next set of results. Not empty if Value contains incomplete list of NotificationHub"
				}
			},
			"description": "The response of the List NotificationHub operation."
		},
		"Resource": {
			"properties": {
				"id": {
					"readOnly": true,
					"type": "string",
					"description": "Resource Id"
				},
				"name": {
					"readOnly": true,
					"type": "string",
					"description": "Resource name"
				},
				"type": {
					"readOnly": true,
					"type": "string",
					"description": "Resource type"
				},
				"location": {
					"type": "string",
					"description": "Resource location"
				},
				"tags": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					},
					"description": "Resource tags"
				}
			},
			"required": ["location"],
			"x-ms-azure-resource": true
		},
		"SubResource": {
			"properties": {
				"id": {
					"type": "string",
					"description": "Resource Id"
				}
			},
			"x-ms-azure-resource": true
		},
		"OperationListResult": {
			"description": "Result of the request to list NotificationHubs operations. It contains a list of operations and a URL link to get the next set of results.",
			"properties": {
				"value": {
					"readOnly": true,
					"type": "array",
					"description": "List of NotificationHubs operations supported by the Microsoft.NotificationHubs resource provider.",
					"items": {
						"$ref": "#/definitions/Operation"
					}
				},
				"nextLink": {
					"readOnly": true,
					"type": "string",
					"description": "URL to get the next set of operation list results if there are any."
				}
			}
		},
		"Operation": {
			"description": "A NotificationHubs REST API operation",
			"type": "object",
			"properties": {
				"name": {
					"readOnly": true,
					"type": "string",
					"description": "Operation name: {provider}/{resource}/{operation}"
				},
				"display": {
					"description": "The object that represents the operation.",
					"properties": {
						"provider": {
							"readOnly": true,
							"type": "string",
							"description": "Service provider: Microsoft.NotificationHubs"
						},
						"resource": {
							"readOnly": true,
							"type": "string",
							"description": "Resource on which the operation is performed: Invoice, etc."
						},
						"operation": {
							"readOnly": true,
							"type": "string",
							"description": "Operation type: Read, write, delete, etc."
						}
					}
				}
			}
		},
		"ErrorResponse": {
			"description": "Error reponse indicates NotificationHubs service is not able to process the incoming request. The reason is provided in the error message.",
			"type": "object",
			"properties": {
				"code": {
					"description": "Error code.",
					"type": "string"
				},
				"message": {
					"description": "Error message indicating why the operation failed.",
					"type": "string"
				}
			}
		},
		"AccessKeys": {
			"properties": {
				"primaryConnectionString": {
					"readOnly": true,
					"type": "string",
					"description": "Primary connection string of the created namespace authorization rule."
				},
				"secondaryConnectionString": {
					"readOnly": true,
					"type": "string",
					"description": "Secondary connection string of the created namespace authorization rule."
				},
				"primaryKey": {
					"readOnly": true,
					"type": "string",
					"description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
				},
				"secondaryKey": {
					"readOnly": true,
					"type": "string",
					"description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
				},
				"keyName": {
					"readOnly": true,
					"type": "string",
					"description": "A string that describes the authorization rule."
				}
			},
			"description": "Namespace/NotificationHubs Connection String"
		},
		"regenerateAccessKeyParameters": {
			"properties": {
				"keyType": {
					"type": "string",
					"description": "The access key to regenerate.",
					"enum": ["PrimaryKey",
					"SecondaryKey"],
					"x-ms-enum": {
						"name": "KeyType",
						"modelAsString": false
					}
				},
				"key": {
					"type": "string",
					"description": "Optional, if the key value provided, is reset for KeyType value or autogenerate Key value set for keyType"
				}
			},
			"required": ["keyType"],
			"description": "Parameters supplied to the Regenerate Authorization Rule operation, specifies which key neeeds to be reset."
		}
	},
	"parameters": {
		"subscriptionIdParameter": {
			"name": "subscriptionId",
			"in": "path",
			"required": true,
			"type": "string",
			"description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
		},
		"apiVersionParameter": {
			"name": "api-version",
			"in": "query",
			"required": true,
			"type": "string",
			"description": "Client Api Version."
		},
		"resourceGroupNameParameter": {
			"name": "resourceGroupName",
			"in": "path",
			"required": true,
			"type": "string",
			"minLength": 1,
			"maxLength": 90,
			"x-ms-parameter-location": "method",
			"description": "Name of the Resource group within the Azure subscription."
		},
		"namespaceNameParameter": {
			"name": "namespaceName",
			"in": "path",
			"required": true,
			"type": "string",
			"minLength": 6,
			"maxLength": 50,
			"x-ms-parameter-location": "method",
			"description": "The namespace name"
		},
		"authorizationRuleNameParameter": {
			"name": "authorizationRuleName",
			"in": "path",
			"required": true,
			"type": "string",
			"minLength": 1,
			"maxLength": 50,
			"x-ms-parameter-location": "method",
			"description": "The authorizationrule name."
		},
		"notificationhubNameParameter": {
			"name": "notificationhubName",
			"in": "path",
			"required": true,
			"type": "string",
			"minLength": 1,
			"x-ms-parameter-location": "method",
			"description": "The notificationhub name."
		}
	}
}