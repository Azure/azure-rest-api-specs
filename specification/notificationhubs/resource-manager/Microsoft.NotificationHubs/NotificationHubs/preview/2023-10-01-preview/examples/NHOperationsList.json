{
  "parameters": {
    "api-version": "2023-10-01-preview"
  },
  "responses": {
    "200": {
      "body": {
        "value": [
          {
            "name": "Microsoft.NotificationHubs/register/action",
            "display": {
              "description": "Registers the subscription for the NotifciationHubs resource provider and enables the creation of Namespaces and NotificationHubs",
              "operation": "Registers the NotificationHubs Provider",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Microsoft Azure Notification Hub"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/unregister/action",
            "display": {
              "description": "Unregisters the subscription for the NotifciationHubs resource provider and enables the creation of Namespaces and NotificationHubs",
              "operation": "Unregisters the NotificationHubs Provider",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Microsoft Azure Notification Hub"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/operations/read",
            "display": {
              "description": "Returns a list of supported operations for Notification Hubs provider",
              "operation": "Notification Hubs provider operations",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Microsoft Azure Notification Hub"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/operationResults/read",
            "display": {
              "description": "Returns operation results for Notification Hubs provider",
              "operation": "Operation results for Notification Hubs provider",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Microsoft Azure Notification Hub"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/namespaces/providers/Microsoft.Insights/diagnosticSettings/read",
            "display": {
              "description": "Get Namespace diagnostic settings",
              "operation": "Read diagnostics setting",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Namespace"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/namespaces/providers/Microsoft.Insights/diagnosticSettings/write",
            "display": {
              "description": "Create or Update Namespace diagnostic settings",
              "operation": "Write diagnostic settings",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Namespace"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/namespaces/providers/Microsoft.Insights/logDefinitions/read",
            "display": {
              "description": "Gets the available logs for Namespace",
              "operation": "Read Namespace log definitions",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "The log definition of Namespace"
            },
            "properties": {
              "serviceSpecification": {
                "logSpecifications": [
                  {
                    "name": "OperationalLogs",
                    "blobDuration": "PT1H",
                    "displayName": "Operational Logs"
                  }
                ]
              }
            }
          },
          {
            "name": "Microsoft.NotificationHubs/CheckNamespaceAvailability/action",
            "display": {
              "description": "Checks whether or not a given Namespace resource name is available within the NotificationHub service.",
              "operation": "Check Namespace name availability.",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Namespace"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/Namespaces/write",
            "display": {
              "description": "Create a Namespace Resource and Update its properties. Tags and Capacity of the Namespace are the properties which can be updated.",
              "operation": "Create Or Update Namespace",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Namespace"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/Namespaces/read",
            "display": {
              "description": "Get the list of Namespace Resource Description",
              "operation": "Get Namespace Resource",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Namespace"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/Namespaces/delete",
            "display": {
              "description": "Delete Namespace Resource",
              "operation": "Delete Namespace",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Namespace"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/Namespaces/authorizationRules/write",
            "display": {
              "description": "Create a Namespace level Authorization Rules and update its properties. The Authorization Rules Access Rights, the Primary and Secondary Keys can be updated.",
              "operation": "Create or Update Namespace Authorization Rules",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Namespace Authorization Rule"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/Namespaces/authorizationRules/action",
            "display": {
              "description": "Get the list of Namespaces Authorization Rules description.",
              "operation": "Get Namespace Authorization Rules",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Namespace Authorization Rule"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/Namespaces/authorizationRules/read",
            "display": {
              "description": "Get the list of Namespaces Authorization Rules description.",
              "operation": "Get Namespace Authorization Rules",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Namespace Authorization Rule"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/Namespaces/authorizationRules/delete",
            "display": {
              "description": "Delete Namespace Authorization Rule. The Default Namespace Authorization Rule cannot be deleted.",
              "operation": "Delete Namespace Authorization Rule",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Namespace Authorization Rule"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/Namespaces/authorizationRules/listkeys/action",
            "display": {
              "description": "Get the Connection String to the Namespace",
              "operation": "Get Namespace Listkeys",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Namespace Authorization Rule"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/Namespaces/authorizationRules/regenerateKeys/action",
            "display": {
              "description": "Namespace Authorization Rule Regenerate Primary/SecondaryKey, Specify the Key that needs to be regenerated",
              "operation": "Namespace Authorization Rule Regenerate Keys",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Namespace Authorization Rule"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/Namespaces/CheckNotificationHubAvailability/action",
            "display": {
              "description": "Checks whether or not a given NotificationHub name is available inside a Namespace.",
              "operation": "Check NotificationHub name availability.",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Namespace"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/Namespaces/NotificationHubs/write",
            "display": {
              "description": "Create a Notification Hub and Update its properties. Its properties mainly include PNS Credentials. Authorization Rules and TTL",
              "operation": "Create or Update Notification Hub",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "NotificationHub"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/Namespaces/NotificationHubs/vapidkeys/read",
            "display": {
              "description": "Get new pair of VAPID keys for a Notification Hub",
              "operation": "Get VAPID keys for a Notification Hub",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "NotificationHub"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/Namespaces/NotificationHubs/read",
            "display": {
              "description": "Get list of Notification Hub Resource Descriptions",
              "operation": "Get Notification Hub",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "NotificationHub"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/Namespaces/NotificationHubs/delete",
            "display": {
              "description": "Delete Notification Hub Resource",
              "operation": "Delete Notification Hub",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "NotificationHub"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/Namespaces/NotificationHubs/authorizationRules/write",
            "display": {
              "description": "Create Notification Hub Authorization Rules and Update its properties. The Authorization Rules Access Rights, the Primary and Secondary Keys can be updated.",
              "operation": "Create or Update Notification hub Authorization Rule",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "NotificationHub Authorization Rule"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/Namespaces/NotificationHubs/authorizationRules/action",
            "display": {
              "description": "Get the list of Notification Hub Authorization Rules",
              "operation": "Get Notification Hub Authorization Rules",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "NotificationHub Authorization Rule"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/Namespaces/NotificationHubs/authorizationRules/read",
            "display": {
              "description": "Get the list of Notification Hub Authorization Rules",
              "operation": "Get Notification Hub Authorization Rules",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "NotificationHub Authorization Rule"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/Namespaces/NotificationHubs/authorizationRules/delete",
            "display": {
              "description": "Delete Notification Hub Authorization Rules",
              "operation": "Delete Notification Hub Authorization Rules",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "NotificationHub Authorization Rule"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/Namespaces/NotificationHubs/authorizationRules/listkeys/action",
            "display": {
              "description": "Get the Connection String to the Notification Hub",
              "operation": "Get Notification Hub Listkeys",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "NotificationHub Authorization Rule"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/Namespaces/NotificationHubs/authorizationRules/regenerateKeys/action",
            "display": {
              "description": "Notification Hub Authorization Rule Regenerate Primary/SecondaryKey, Specify the Key that needs to be regenerated",
              "operation": "Notification Hub Authorization Rule Regenerate Keys",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "NotificationHub Authorization Rule"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/Namespaces/NotificationHubs/pnsCredentials/action",
            "display": {
              "description": "Get All Notification Hub PNS Credentials. This includes, WNS, MPNS, APNS, GCM, Baidu and FcmV1 credentials",
              "operation": "Get Notification Hub PNS Credentials",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "NotificationHub PnsCredential"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/Namespaces/NotificationHubs/debugSend/action",
            "display": {
              "description": "Send a test push notification to 10 matched devices.",
              "operation": "Send a test push notification.",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "NotificationHub"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/Namespaces/NotificationHubs/metricDefinitions/read",
            "display": {
              "description": "Get list of Namespace metrics Resource Descriptions",
              "operation": "Get Namespace metrics",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Namespace metrics"
            },
            "properties": {
              "serviceSpecification": {
                "metricSpecifications": [
                  {
                    "name": "registration.all",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of all successful registration operations (creations updates queries and deletions). ",
                    "displayName": "Registration Operations",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "registration.create",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of all successful registration creations.",
                    "displayName": "Registration Create Operations",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "registration.update",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of all successful registration updates.",
                    "displayName": "Registration Update Operations",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "registration.get",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of all successful registration queries.",
                    "displayName": "Registration Read Operations",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "registration.delete",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of all successful registration deletions.",
                    "displayName": "Registration Delete Operations",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "incoming",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of all successful send API calls. ",
                    "displayName": "Incoming Messages",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "incoming.scheduled",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "Scheduled Push Notifications Sent",
                    "displayName": "Scheduled Push Notifications Sent",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "incoming.scheduled.cancel",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "Scheduled Push Notifications Cancelled",
                    "displayName": "Scheduled Push Notifications Cancelled",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "scheduled.pending",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "Pending Scheduled Notifications",
                    "displayName": "Pending Scheduled Notifications",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "installation.all",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "Installation Management Operations",
                    "displayName": "Installation Management Operations",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "installation.get",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "Get Installation Operations",
                    "displayName": "Get Installation Operations",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "installation.upsert",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "Create or Update Installation Operations",
                    "displayName": "Create or Update Installation Operations",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "installation.patch",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "Patch Installation Operations",
                    "displayName": "Patch Installation Operations",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "installation.delete",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "Delete Installation Operations",
                    "displayName": "Delete Installation Operations",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.allpns.success",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of all successful notifications.",
                    "displayName": "Successful notifications",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.allpns.invalidpayload",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because the PNS returned a bad payload error.",
                    "displayName": "Payload Errors",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.allpns.pnserror",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because there was a problem communicating with the PNS (excludes authentication problems).",
                    "displayName": "External Notification System Errors",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.allpns.channelerror",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because the channel was invalid not associated with the correct app throttled or expired.",
                    "displayName": "Channel Errors",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.allpns.badorexpiredchannel",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because the channel/token/registrationId in the registration was expired or invalid.",
                    "displayName": "Bad or Expired Channel Errors",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.wns.success",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of all successful notifications.",
                    "displayName": "WNS Successful Notifications",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.wns.invalidcredentials",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because the PNS did not accept the provided credentials or the credentials are blocked. (Windows Live does not recognize the credentials).",
                    "displayName": "WNS Authorization Errors (Invalid Credentials)",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.wns.badchannel",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because the ChannelURI in the registration was not recognized (WNS status: 404 not found).",
                    "displayName": "WNS Bad Channel Error",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.wns.expiredchannel",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because the ChannelURI is expired (WNS status: 410 Gone).",
                    "displayName": "WNS Expired Channel Error",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.wns.throttled",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because WNS is throttling this app (WNS status: 406 Not Acceptable).",
                    "displayName": "WNS Throttled Notifications",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.wns.tokenproviderunreachable",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "Windows Live is not reachable.",
                    "displayName": "WNS Authorization Errors (Unreachable)",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.wns.invalidtoken",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The token provided to WNS is not valid (WNS status: 401 Unauthorized).",
                    "displayName": "WNS Authorization Errors (Invalid Token)",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.wns.wrongtoken",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The token provided to WNS is valid but for another application (WNS status: 403 Forbidden). This can happen if the ChannelURI in the registration is associated with another app. Check that the client app is associated with the same app whose credentials are in the notification hub.",
                    "displayName": "WNS Authorization Errors (Wrong Token)",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.wns.invalidnotificationformat",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The format of the notification is invalid (WNS status: 400). Note that WNS does not reject all invalid payloads.",
                    "displayName": "WNS Invalid Notification Format",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.wns.invalidnotificationsize",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The notification payload is too large (WNS status: 413).",
                    "displayName": "WNS Invalid Notification Size Error",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.wns.channelthrottled",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The notification was dropped because the ChannelURI in the registration is throttled (WNS response header: X-WNS-NotificationStatus:channelThrottled).",
                    "displayName": "WNS Channel Throttled",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.wns.channeldisconnected",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The notification was dropped because the ChannelURI in the registration is throttled (WNS response header: X-WNS-DeviceConnectionStatus: disconnected).",
                    "displayName": "WNS Channel Disconnected",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.wns.dropped",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The notification was dropped because the ChannelURI in the registration is throttled (X-WNS-NotificationStatus: dropped but not X-WNS-DeviceConnectionStatus: disconnected).",
                    "displayName": "WNS Dropped Notifications",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.wns.pnserror",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "Notification not delivered because of errors communicating with WNS.",
                    "displayName": "WNS Errors",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.wns.authenticationerror",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "Notification not delivered because of errors communicating with Windows Live invalid credentials or wrong token.",
                    "displayName": "WNS Authentication Errors",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.apns.success",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of all successful notifications.",
                    "displayName": "APNS Successful Notifications",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.apns.invalidcredentials",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because the PNS did not accept the provided credentials or the credentials are blocked.",
                    "displayName": "APNS Authorization Errors",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.apns.badchannel",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because the token is invalid (APNS status code: 8).",
                    "displayName": "APNS Bad Channel Error",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.apns.expiredchannel",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of token that were invalidated by the APNS feedback channel.",
                    "displayName": "APNS Expired Channel Error",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.apns.invalidnotificationsize",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because the payload was too large (APNS status code: 7).",
                    "displayName": "APNS Invalid Notification Size Error",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.apns.pnserror",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because of errors communicating with APNS.",
                    "displayName": "APNS Errors",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.gcm.success",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of all successful notifications.",
                    "displayName": "GCM Successful Notifications",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.gcm.invalidcredentials",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because the PNS did not accept the provided credentials or the credentials are blocked.",
                    "displayName": "GCM Authorization Errors (Invalid Credentials)",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.gcm.badchannel",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because the registrationId in the registration was not recognized (GCM result: Invalid Registration).",
                    "displayName": "GCM Bad Channel Error",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.gcm.expiredchannel",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because the registrationId in the registration was expired (GCM result: NotRegistered).",
                    "displayName": "GCM Expired Channel Error",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.gcm.throttled",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because GCM throttled this app (GCM status code: 501-599 or result:Unavailable).",
                    "displayName": "GCM Throttled Notifications",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.gcm.invalidnotificationformat",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because the payload was not formatted correctly (GCM result: InvalidDataKey or InvalidTtl).",
                    "displayName": "GCM Invalid Notification Format",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.gcm.invalidnotificationsize",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because the payload was too large (GCM result: MessageTooBig).",
                    "displayName": "GCM Invalid Notification Size Error",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.gcm.wrongchannel",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because the registrationId in the registration is not associated to the current app (GCM result: InvalidPackageName).",
                    "displayName": "GCM Wrong Channel Error",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.gcm.pnserror",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because of errors communicating with GCM.",
                    "displayName": "GCM Errors",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.gcm.authenticationerror",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because the PNS did not accept the provided credentials the credentials are blocked or the SenderId is not correctly configured in the app (GCM result: MismatchedSenderId).",
                    "displayName": "GCM Authentication Errors",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.mpns.success",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of all successful notifications.",
                    "displayName": "MPNS Successful Notifications",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.mpns.invalidcredentials",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because the PNS did not accept the provided credentials or the credentials are blocked.",
                    "displayName": "MPNS Invalid Credentials",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.mpns.badchannel",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because the ChannelURI in the registration was not recognized (MPNS status: 404 not found).",
                    "displayName": "MPNS Bad Channel Error",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.mpns.throttled",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because MPNS is throttling this app (WNS MPNS: 406 Not Acceptable).",
                    "displayName": "MPNS Throttled Notifications",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.mpns.invalidnotificationformat",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because the payload of the notification was too large.",
                    "displayName": "MPNS Invalid Notification Format",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.mpns.channeldisconnected",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because the ChannelURI in the registration was disconnected (MPNS status: 412 not found).",
                    "displayName": "MPNS Channel Disconnected",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.mpns.dropped",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that were dropped by MPNS (MPNS response header: X-NotificationStatus: QueueFull or Suppressed).",
                    "displayName": "MPNS Dropped Notifications",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.mpns.pnserror",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because of errors communicating with MPNS.",
                    "displayName": "MPNS Errors",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "outgoing.mpns.authenticationerror",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "The count of pushes that failed because the PNS did not accept the provided credentials or the credentials are blocked.",
                    "displayName": "MPNS Authentication Errors",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "notificationhub.pushes",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "All outgoing notifications of the notification hub",
                    "displayName": "All Outgoing Notifications",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "incoming.all.requests",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "Total incoming requests for a notification hub",
                    "displayName": "All Incoming Requests",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "incoming.all.failedrequests",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "P30D",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "displayDescription": "Total incoming failed requests for a notification hub",
                    "displayName": "All Incoming Failed Requests",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  }
                ]
              }
            }
          },
          {
            "name": "Microsoft.NotificationHubs/namespaces/privateEndpointConnectionsApproval/action",
            "display": {
              "description": "Approve Private Endpoint Connection",
              "operation": "Approve Private Endpoint Connection",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Namespace"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/namespaces/privateEndpointConnectionProxies/validate/action",
            "display": {
              "description": "Validate Private Endpoint Connection Proxy",
              "operation": "Validate Private Endpoint Connection Proxy",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Private Endpoint Connection Proxy"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/namespaces/privateEndpointConnectionProxies/read",
            "display": {
              "description": "Get Private Endpoint Connection Proxy",
              "operation": "Get Private Endpoint Connection Proxy",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Private Endpoint Connection Proxy"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/namespaces/privateEndpointConnectionProxies/write",
            "display": {
              "description": "Create Private Endpoint Connection Proxy",
              "operation": "Create Private Endpoint Connection Proxy",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Private Endpoint Connection Proxy"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/namespaces/privateEndpointConnectionProxies/delete",
            "display": {
              "description": "Delete Private Endpoint Connection Proxy",
              "operation": "Delete Private Endpoint Connection Proxy",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Private Endpoint Connection Proxy"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/namespaces/privateEndpointConnectionProxies/operationstatus/read",
            "display": {
              "description": "Get the status of an asynchronous private endpoint operation",
              "operation": "Private endpoint operation status",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Private Endpoint Connection Proxy"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/namespaces/privateEndpointConnections/read",
            "display": {
              "description": "Get Private Endpoint Connection",
              "operation": "Get Private Endpoint Connection",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Private Endpoint Connection"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/namespaces/privateEndpointConnections/write",
            "display": {
              "description": "Create or Update Private Endpoint Connection",
              "operation": "Create or Update Private Endpoint Connection",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Private Endpoint Connection"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/namespaces/privateEndpointConnections/delete",
            "display": {
              "description": "Removes Private Endpoint Connection",
              "operation": "Removes Private Endpoint Connection",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Private Endpoint Connection"
            }
          },
          {
            "name": "Microsoft.NotificationHubs/namespaces/privateEndpointConnections/operationstatus/read",
            "display": {
              "description": "Removes Private Endpoint Connection",
              "operation": "Removes Private Endpoint Connection",
              "provider": "Microsoft Azure Notification Hub",
              "resource": "Private Endpoint Connection"
            }
          }
        ]
      }
    }
  },
  "operationId": "Operations_List",
  "title": "Operations_List"
}
