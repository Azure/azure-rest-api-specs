{
  "swagger": "2.0",
  "info": {
    "title": "ServiceFabricManagedClustersManagementClient",
    "version": "2024-11-01-preview",
    "description": "Service Fabric Managed Clusters Management Client",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Applications"
    },
    {
      "name": "ApplicationTypes"
    },
    {
      "name": "ApplicationTypeVersions"
    },
    {
      "name": "Services"
    },
    {
      "name": "ManagedClusterVersion"
    },
    {
      "name": "ManagedVMSizes"
    },
    {
      "name": "ManagedClusters"
    },
    {
      "name": "FaultSimulation"
    },
    {
      "name": "ManagedAzResiliencyStatus"
    },
    {
      "name": "ManagedApplyMaintenanceWindow"
    },
    {
      "name": "ManagedMaintenanceWindowStatus"
    },
    {
      "name": "NodeTypes"
    },
    {
      "name": "NodeTypeSkus"
    }
  ],
  "paths": {
    "/providers/Microsoft.ServiceFabric/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "summary": "Lists all of the available Service Fabric resource provider API operations.",
        "description": "Get the list of available Service Fabric resource provider API operations.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List the operations for the provider": {
            "$ref": "./examples/OperationsList_example.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/managedClusterVersions": {
      "get": {
        "operationId": "ManagedClusterVersion_ListByEnvironment",
        "tags": [
          "ManagedClusterVersion"
        ],
        "summary": "Gets the list of Service Fabric cluster code versions available for the specified environment.",
        "description": "Gets all available code versions for Service Fabric cluster resources by environment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "The operating system of the cluster.",
            "required": true,
            "type": "string",
            "enum": [
              "Windows"
            ],
            "x-ms-enum": {
              "name": "ManagedClusterVersionEnvironment",
              "modelAsString": true,
              "values": [
                {
                  "name": "Windows",
                  "value": "Windows",
                  "description": "Indicates os is Windows."
                }
              ]
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ManagedClusterCodeVersionResult"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List cluster versions by environment": {
            "$ref": "./examples/ManagedClusterVersionListByEnvironment.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/managedClusterVersions/{clusterVersion}": {
      "get": {
        "operationId": "ManagedClusterVersion_GetByEnvironment",
        "tags": [
          "ManagedClusterVersion"
        ],
        "summary": "Gets information about a Service Fabric cluster code version available for the specified environment.",
        "description": "Gets information about an available Service Fabric cluster code version by environment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "The operating system of the cluster.",
            "required": true,
            "type": "string",
            "enum": [
              "Windows"
            ],
            "x-ms-enum": {
              "name": "ManagedClusterVersionEnvironment",
              "modelAsString": true,
              "values": [
                {
                  "name": "Windows",
                  "value": "Windows",
                  "description": "Indicates os is Windows."
                }
              ]
            },
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterVersion",
            "in": "path",
            "description": "The cluster code version.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedClusterCodeVersionResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get cluster version by environment": {
            "$ref": "./examples/ManagedClusterVersionGetByEnvironment_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterOperationResults/{operationId}": {
      "get": {
        "operationId": "OperationResults_Get",
        "summary": "Get long running operation result.",
        "description": "Get long running operation result.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/LocationParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "operation identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "No Content. For Delete operation results."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get long running operation result": {
            "$ref": "./examples/OperationResultsGet_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterOperations/{operationId}": {
      "get": {
        "operationId": "OperationStatus_Get",
        "summary": "Get long running operation status.",
        "description": "Get long running operation status.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/LocationParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "operation identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LongRunningOperationResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Error response describing why the operation failed.": {
            "$ref": "./examples/OperationStatusFailed_example.json"
          },
          "OK. The request has succeeded.": {
            "$ref": "./examples/OperationStatusSucceeded_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterVersions": {
      "get": {
        "operationId": "ManagedClusterVersion_List",
        "tags": [
          "ManagedClusterVersion"
        ],
        "summary": "Gets the list of Service Fabric cluster code versions available for the specified location.",
        "description": "Gets all available code versions for Service Fabric cluster resources by location.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ManagedClusterCodeVersionResult"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List cluster versions": {
            "$ref": "./examples/ManagedClusterVersionList_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterVersions/{clusterVersion}": {
      "get": {
        "operationId": "ManagedClusterVersion_Get",
        "tags": [
          "ManagedClusterVersion"
        ],
        "summary": "Gets information about a Service Fabric managed cluster code version available in the specified location.",
        "description": "Gets information about an available Service Fabric managed cluster code version.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterVersion",
            "in": "path",
            "description": "The cluster code version.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedClusterCodeVersionResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get cluster version": {
            "$ref": "./examples/ManagedClusterVersionGet_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedUnsupportedVMSizes": {
      "get": {
        "operationId": "managedUnsupportedVMSizes_List",
        "tags": [
          "ManagedVMSizes"
        ],
        "description": "Get the lists of unsupported vm sizes for Service Fabric Managed Clusters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedVMSizesResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List unsupported vm sizes": {
            "$ref": "./examples/managedUnsupportedVMSizesList_example.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedUnsupportedVMSizes/{vmSize}": {
      "get": {
        "operationId": "managedUnsupportedVMSizes_Get",
        "tags": [
          "ManagedVMSizes"
        ],
        "description": "Get unsupported vm size for Service Fabric Managed Clusters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vmSize",
            "in": "path",
            "description": "VM Size name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedVMSize"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get unsupported vm sizes": {
            "$ref": "./examples/managedUnsupportedVMSizesGet_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/managedClusters": {
      "get": {
        "operationId": "ManagedClusters_ListBySubscription",
        "tags": [
          "ManagedClusters"
        ],
        "description": "Gets all Service Fabric cluster resources created or in the process of being created in the subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedClusterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List managed clusters": {
            "$ref": "./examples/ManagedClusterListBySubscriptionOperation_example.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters": {
      "get": {
        "operationId": "ManagedClusters_ListByResourceGroup",
        "tags": [
          "ManagedClusters"
        ],
        "description": "Gets all Service Fabric cluster resources created or in the process of being created in the resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedClusterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List cluster by resource group": {
            "$ref": "./examples/ManagedClusterListByResourceGroupOperation_example.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}": {
      "get": {
        "operationId": "ManagedClusters_Get",
        "tags": [
          "ManagedClusters"
        ],
        "description": "Get a Service Fabric managed cluster resource created or in the process of being created in the specified resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedCluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a cluster": {
            "$ref": "./examples/ManagedClusterGetOperation_example.json"
          }
        }
      },
      "put": {
        "operationId": "ManagedClusters_CreateOrUpdate",
        "tags": [
          "ManagedClusters"
        ],
        "description": "Create or update a Service Fabric managed cluster resource with the specified name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The cluster resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedCluster"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ManagedCluster' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ManagedCluster"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/ManagedCluster"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Put a cluster with maximum parameters": {
            "$ref": "./examples/ManagedClusterPutOperation_example_max.json"
          },
          "Put a cluster with minimum parameters": {
            "$ref": "./examples/ManagedClusterPutOperation_example_min.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ManagedCluster"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ManagedClusters_Update",
        "tags": [
          "ManagedClusters"
        ],
        "description": "Update the tags of of a Service Fabric managed cluster resource with the specified name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The managed cluster resource updated tags.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedClusterUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedCluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch a managed cluster": {
            "$ref": "./examples/ManagedClusterPatchOperation_example.json"
          }
        }
      },
      "delete": {
        "operationId": "ManagedClusters_Delete",
        "tags": [
          "ManagedClusters"
        ],
        "description": "Delete a Service Fabric managed cluster resource with the specified name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a cluster": {
            "$ref": "./examples/ManagedClusterDeleteOperation_example.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applicationTypes": {
      "get": {
        "operationId": "ApplicationTypes_List",
        "tags": [
          "ApplicationTypes"
        ],
        "description": "Gets all application type name resources created or in the process of being created in the Service Fabric managed cluster resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationTypeResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a list of application type name resources": {
            "$ref": "./examples/ApplicationTypeNameListOperation_example.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applicationTypes/{applicationTypeName}": {
      "get": {
        "operationId": "ApplicationTypes_Get",
        "tags": [
          "ApplicationTypes"
        ],
        "description": "Get a Service Fabric application type name resource created or in the process of being created in the Service Fabric managed cluster resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationTypeResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get an application type": {
            "$ref": "./examples/ApplicationTypeNameGetOperation_example.json"
          }
        }
      },
      "put": {
        "operationId": "ApplicationTypes_CreateOrUpdate",
        "tags": [
          "ApplicationTypes"
        ],
        "description": "Create or update a Service Fabric managed application type name resource with the specified name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The application type name resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationTypeResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ApplicationTypeResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApplicationTypeResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Put an application type": {
            "$ref": "./examples/ApplicationTypeNamePutOperation_example.json"
          }
        }
      },
      "patch": {
        "operationId": "ApplicationTypes_Update",
        "tags": [
          "ApplicationTypes"
        ],
        "description": "Updates the tags of an application type resource of a given managed cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The application type resource updated tags.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationTypeUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationTypeResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch an application type": {
            "$ref": "./examples/ApplicationTypeNamePatchOperation_example.json"
          }
        }
      },
      "delete": {
        "operationId": "ApplicationTypes_Delete",
        "tags": [
          "ApplicationTypes"
        ],
        "description": "Delete a Service Fabric managed application type name resource with the specified name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete an application type": {
            "$ref": "./examples/ApplicationTypeNameDeleteOperation_example.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applicationTypes/{applicationTypeName}/versions": {
      "get": {
        "operationId": "ApplicationTypeVersions_ListByApplicationTypes",
        "tags": [
          "ApplicationTypeVersions"
        ],
        "description": "Gets all application type version resources created or in the process of being created in the Service Fabric managed application type name resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationTypeVersionResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a list of application type version resources": {
            "$ref": "./examples/ApplicationTypeVersionListOperation_example.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applicationTypes/{applicationTypeName}/versions/{version}": {
      "get": {
        "operationId": "ApplicationTypeVersions_Get",
        "tags": [
          "ApplicationTypeVersions"
        ],
        "description": "Get a Service Fabric managed application type version resource created or in the process of being created in the Service Fabric managed application type name resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The application type version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationTypeVersionResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get an application type version": {
            "$ref": "./examples/ApplicationTypeVersionGetOperation_example.json"
          }
        }
      },
      "put": {
        "operationId": "ApplicationTypeVersions_CreateOrUpdate",
        "tags": [
          "ApplicationTypeVersions"
        ],
        "description": "Create or update a Service Fabric managed application type version resource with the specified name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The application type version.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The application type version resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationTypeVersionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ApplicationTypeVersionResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApplicationTypeVersionResource"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/ApplicationTypeVersionResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Put an application type version": {
            "$ref": "./examples/ApplicationTypeVersionPutOperation_example.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ApplicationTypeVersionResource"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ApplicationTypeVersions_Update",
        "tags": [
          "ApplicationTypeVersions"
        ],
        "description": "Updates the tags of an application type version resource of a given managed cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The application type version.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The application type version resource updated tags.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationTypeVersionUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationTypeVersionResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch an application type version": {
            "$ref": "./examples/ApplicationTypeVersionPatchOperation_example.json"
          }
        }
      },
      "delete": {
        "operationId": "ApplicationTypeVersions_Delete",
        "tags": [
          "ApplicationTypeVersions"
        ],
        "description": "Delete a Service Fabric managed application type version resource with the specified name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The application type version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete an application type version": {
            "$ref": "./examples/ApplicationTypeVersionDeleteOperation_example.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications": {
      "get": {
        "operationId": "Applications_List",
        "tags": [
          "Applications"
        ],
        "description": "Gets all managed application resources created or in the process of being created in the Service Fabric cluster resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a list of application resources": {
            "$ref": "./examples/ApplicationListOperation_example.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}": {
      "get": {
        "operationId": "Applications_Get",
        "tags": [
          "Applications"
        ],
        "description": "Get a Service Fabric managed application resource created or in the process of being created in the Service Fabric cluster resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get an application": {
            "$ref": "./examples/ApplicationGetOperation_example.json"
          }
        }
      },
      "put": {
        "operationId": "Applications_CreateOrUpdate",
        "tags": [
          "Applications"
        ],
        "description": "Create or update a Service Fabric managed application resource with the specified name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The application resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ApplicationResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApplicationResource"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/ApplicationResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Put an application with maximum parameters": {
            "$ref": "./examples/ApplicationPutOperation_example_max.json"
          },
          "Put an application with minimum parameters": {
            "$ref": "./examples/ApplicationPutOperation_example_min.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ApplicationResource"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Applications_Update",
        "tags": [
          "Applications"
        ],
        "description": "Updates the tags of an application resource of a given managed cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The application resource updated tags.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch an application": {
            "$ref": "./examples/ApplicationPatchOperation_example.json"
          }
        }
      },
      "delete": {
        "operationId": "Applications_Delete",
        "tags": [
          "Applications"
        ],
        "description": "Delete a Service Fabric managed application resource with the specified name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete an application": {
            "$ref": "./examples/ApplicationDeleteOperation_example.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}/fetchUpgradeStatus": {
      "post": {
        "operationId": "Applications_ReadUpgrade",
        "tags": [
          "Applications"
        ],
        "description": "Get the status of the latest application upgrade. It will query the cluster to find the status of the latest application upgrade.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get an application upgrade": {
            "$ref": "./examples/ApplicationActionGetUpgrade_example.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}/resumeUpgrade": {
      "post": {
        "operationId": "Applications_ResumeUpgrade",
        "tags": [
          "Applications"
        ],
        "description": "Send a request to resume the current application upgrade. This will resume the application upgrade from where it was paused.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters for resuming an application upgrade.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RuntimeResumeApplicationUpgradeParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Resume upgrade": {
            "$ref": "./examples/ApplicationActionResumeUpgrade_example.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}/services": {
      "get": {
        "operationId": "Services_ListByApplications",
        "tags": [
          "Services"
        ],
        "description": "Gets all service resources created or in the process of being created in the Service Fabric managed application resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a list of service resources": {
            "$ref": "./examples/ServiceListOperation_example.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}/services/{serviceName}": {
      "get": {
        "operationId": "Services_Get",
        "tags": [
          "Services"
        ],
        "description": "Get a Service Fabric service resource created or in the process of being created in the Service Fabric managed application resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the service resource in the format of {applicationName}~{serviceName}.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a service": {
            "$ref": "./examples/ServiceGetOperation_example.json"
          }
        }
      },
      "put": {
        "operationId": "Services_CreateOrUpdate",
        "tags": [
          "Services"
        ],
        "description": "Create or update a Service Fabric managed service resource with the specified name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the service resource in the format of {applicationName}~{serviceName}.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The service resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ServiceResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ServiceResource"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/ServiceResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Put a service with maximum parameters": {
            "$ref": "./examples/ServicePutOperation_example_max.json"
          },
          "Put a service with minimum parameters": {
            "$ref": "./examples/ServicePutOperation_example_min.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ServiceResource"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Services_Update",
        "tags": [
          "Services"
        ],
        "description": "Updates the tags of a service resource of a given managed cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the service resource in the format of {applicationName}~{serviceName}.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The service resource updated tags.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch a service": {
            "$ref": "./examples/ServicePatchOperation_example.json"
          }
        }
      },
      "delete": {
        "operationId": "Services_Delete",
        "tags": [
          "Services"
        ],
        "description": "Delete a Service Fabric managed service resource with the specified name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the service resource in the format of {applicationName}~{serviceName}.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a service": {
            "$ref": "./examples/ServiceDeleteOperation_example.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}/startRollback": {
      "post": {
        "operationId": "Applications_StartRollback",
        "tags": [
          "Applications"
        ],
        "description": "Send a request to start a rollback of the current application upgrade. This will start rolling back the application to the previous version.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Start an application upgrade rollback": {
            "$ref": "./examples/ApplicationActionStartRollback_example.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applyMaintenanceWindow": {
      "post": {
        "operationId": "managedApplyMaintenanceWindow_Post",
        "tags": [
          "ManagedApplyMaintenanceWindow"
        ],
        "description": "Action to Apply Maintenance window on the Service Fabric Managed Clusters, right now. Any pending update will be applied.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Apply Maintenance Window Status": {
            "$ref": "./examples/ManagedApplyMaintenanceWindowPost_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/getFaultSimulation": {
      "post": {
        "operationId": "ManagedClusters_GetFaultSimulation",
        "tags": [
          "ManagedClusters",
          "FaultSimulation"
        ],
        "description": "Gets a fault simulation by the simulationId.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "parameter with fault simulation id.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FaultSimulationIdContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FaultSimulation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Managed Cluster Fault Simulation": {
            "$ref": "./examples/faultSimulation/ManagedClusterGetFaultSimulation_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/getMaintenanceWindowStatus": {
      "post": {
        "operationId": "managedMaintenanceWindowStatus_Get",
        "tags": [
          "ManagedMaintenanceWindowStatus"
        ],
        "description": "Action to get Maintenance Window Status of the Service Fabric Managed Clusters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedMaintenanceWindowStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Maintenance Window Status": {
            "$ref": "./examples/ManagedMaintenanceWindowStatusGet_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/getazresiliencystatus": {
      "post": {
        "operationId": "managedAzResiliencyStatus_Get",
        "tags": [
          "ManagedAzResiliencyStatus"
        ],
        "description": "Action to get Az Resiliency Status of all the Base resources constituting Service Fabric Managed Clusters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedAzResiliencyStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Az Resiliency status of Base Resources": {
            "$ref": "./examples/managedAzResiliencyStatusGet_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/listFaultSimulation": {
      "post": {
        "operationId": "ManagedClusters_ListFaultSimulation",
        "tags": [
          "ManagedClusters",
          "FaultSimulation"
        ],
        "description": "Gets the list of recent fault simulations for the cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FaultSimulationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Managed Cluster Fault Simulation": {
            "$ref": "./examples/faultSimulation/ManagedClusterListFaultSimulation_example.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes": {
      "get": {
        "operationId": "NodeTypes_ListByManagedClusters",
        "tags": [
          "NodeTypes"
        ],
        "description": "Gets all Node types of the specified managed cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NodeTypeListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List node type of the specified managed cluster": {
            "$ref": "./examples/NodeTypeListOperation_example.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}": {
      "get": {
        "operationId": "NodeTypes_Get",
        "tags": [
          "NodeTypes"
        ],
        "description": "Get a Service Fabric node type of a given managed cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NodeType"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a node type": {
            "$ref": "./examples/NodeTypeGetOperation_example.json"
          }
        }
      },
      "put": {
        "operationId": "NodeTypes_CreateOrUpdate",
        "tags": [
          "NodeTypes"
        ],
        "description": "Create or update a Service Fabric node type of a given managed cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The node type resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NodeType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NodeType' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NodeType"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/NodeType"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Put a node type with auto-scale parameters": {
            "$ref": "./examples/NodeTypePutOperationAutoScale_example.json"
          },
          "Put a node type with maximum parameters": {
            "$ref": "./examples/NodeTypePutOperation_example_max.json"
          },
          "Put a node type with minimum parameters": {
            "$ref": "./examples/NodeTypePutOperation_example_min.json"
          },
          "Put an stateless node type with temporary disk for service fabric": {
            "$ref": "./examples/NodeTypePutOperationStateless_example.json"
          },
          "Put node type with custom vm image": {
            "$ref": "./examples/NodeTypePutOperationCustomImage_example.json"
          },
          "Put node type with dedicated hosts": {
            "$ref": "./examples/NodeTypePutOperationDedicatedHost_example.json"
          },
          "Put node type with shared galleries custom vm image": {
            "$ref": "./examples/NodeTypePutOperationCustomSharedGalleriesImage_example.json"
          },
          "Put node type with vm image plan ": {
            "$ref": "./examples/NodeTypePutOperationVmImagePlan_example.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/NodeType"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "NodeTypes_Update",
        "tags": [
          "NodeTypes"
        ],
        "description": "Update the configuration of a node type of a given managed cluster, only updating tags.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters to update the node type configuration.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NodeTypeUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NodeType"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch a node type": {
            "$ref": "./examples/NodeTypePatchOperation_example.json"
          },
          "Patch a node type while auto-scaling": {
            "$ref": "./examples/NodeTypePatchOperationAutoScale_example.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/NodeType"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "NodeTypes_Delete",
        "tags": [
          "NodeTypes"
        ],
        "description": "Delete a Service Fabric node type of a given managed cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a node type": {
            "$ref": "./examples/NodeTypeDeleteOperation_example.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/deallocate": {
      "post": {
        "operationId": "NodeTypes_Deallocate",
        "tags": [
          "NodeTypes"
        ],
        "description": "Deallocates one or more nodes on the node type. It will disable the fabric nodes, trigger a shutdown on the VMs and release them from the cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "parameters for deallocate action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NodeTypeActionParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deallocate nodes": {
            "$ref": "./examples/DeallocateNodes_example.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/deleteNode": {
      "post": {
        "operationId": "NodeTypes_DeleteNode",
        "tags": [
          "NodeTypes"
        ],
        "description": "Deletes one or more nodes on the node type. It will disable the fabric nodes, trigger a delete on the VMs and removes the state from the cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "parameters for delete action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NodeTypeActionParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete nodes": {
            "$ref": "./examples/DeleteNodes_example.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/getFaultSimulation": {
      "post": {
        "operationId": "NodeTypes_GetFaultSimulation",
        "tags": [
          "NodeTypes",
          "FaultSimulation"
        ],
        "description": "Gets a fault simulation by the simulationId.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "parameter with fault simulation id.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FaultSimulationIdContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FaultSimulation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Node Type Fault Simulation": {
            "$ref": "./examples/faultSimulation/NodeTypeGetFaultSimulation_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/listFaultSimulation": {
      "post": {
        "operationId": "NodeTypes_ListFaultSimulation",
        "tags": [
          "NodeTypes",
          "FaultSimulation"
        ],
        "description": "Gets the list of recent fault simulations for the node type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FaultSimulationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Node Type Fault Simulation": {
            "$ref": "./examples/faultSimulation/NodeTypeListFaultSimulation_example.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/redeploy": {
      "post": {
        "operationId": "NodeTypes_Redeploy",
        "tags": [
          "NodeTypes"
        ],
        "description": "Redeploys one or more nodes on the node type. It will disable the fabric nodes, trigger a shut down on the VMs, move them to a new node, and power them back on.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "parameters for redeploy action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NodeTypeActionParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Redeploy all nodes by upgrade domain": {
            "$ref": "./examples/RedeployNodes_UD_example.json"
          },
          "Redeploy nodes": {
            "$ref": "./examples/RedeployNodes_example.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/reimage": {
      "post": {
        "operationId": "NodeTypes_Reimage",
        "tags": [
          "NodeTypes"
        ],
        "description": "Reimages one or more nodes on the node type. It will disable the fabric nodes, trigger a reimage on the VMs and activate the nodes back again.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "parameters for reimage action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NodeTypeActionParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Reimage all nodes by upgrade domain": {
            "$ref": "./examples/ReimageNodes_UD_example.json"
          },
          "Reimage nodes": {
            "$ref": "./examples/ReimageNodes_example.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/restart": {
      "post": {
        "operationId": "NodeTypes_Restart",
        "tags": [
          "NodeTypes"
        ],
        "description": "Restarts one or more nodes on the node type. It will disable the fabric nodes, trigger a restart on the VMs and activate the nodes back again.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "parameters for restart action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NodeTypeActionParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Restart nodes": {
            "$ref": "./examples/RestartNodes_example.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/skus": {
      "get": {
        "operationId": "NodeTypeSkus_List",
        "tags": [
          "NodeTypeSkus"
        ],
        "description": "Get a Service Fabric node type supported SKUs.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NodeTypeListSkuResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List a node type SKUs": {
            "$ref": "./examples/NodeTypeSkusListOperation_example.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/start": {
      "post": {
        "operationId": "NodeTypes_Start",
        "tags": [
          "NodeTypes"
        ],
        "description": "Starts one or more nodes on the node type. It will trigger an allocation of the fabric node if needed and activate them.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "parameters for start action.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NodeTypeActionParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Start nodes": {
            "$ref": "./examples/StartNodes_example.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/startFaultSimulation": {
      "post": {
        "operationId": "NodeTypes_StartFaultSimulation",
        "tags": [
          "NodeTypes",
          "FaultSimulation"
        ],
        "description": "Starts a fault simulation on the node type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "parameters describing the fault simulation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FaultSimulationContent"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Start Node Type Fault Simulation": {
            "$ref": "./examples/faultSimulation/NodeTypeStartFaultSimulation_example.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/FaultSimulation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/stopFaultSimulation": {
      "post": {
        "operationId": "NodeTypes_StopFaultSimulation",
        "tags": [
          "NodeTypes",
          "FaultSimulation"
        ],
        "description": "Stops a fault simulation on the node type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "parameter with fault simulation id.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FaultSimulationIdContent"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Stop Node Type Fault Simulation": {
            "$ref": "./examples/faultSimulation/NodeTypeStopFaultSimulation_example.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/FaultSimulation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/startFaultSimulation": {
      "post": {
        "operationId": "ManagedClusters_StartFaultSimulation",
        "tags": [
          "ManagedClusters",
          "FaultSimulation"
        ],
        "description": "Starts a fault simulation on the cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "parameters describing the fault simulation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FaultSimulationContent"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Start Managed Cluster Fault Simulation": {
            "$ref": "./examples/faultSimulation/ManagedClusterStartFaultSimulation_example.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/FaultSimulation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/stopFaultSimulation": {
      "post": {
        "operationId": "ManagedClusters_StopFaultSimulation",
        "tags": [
          "ManagedClusters",
          "FaultSimulation"
        ],
        "description": "Stops a fault simulation on the cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "parameter with fault simulation id.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FaultSimulationIdContent"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Stop Managed Cluster Fault Simulation": {
            "$ref": "./examples/faultSimulation/ManagedClusterStopFaultSimulation_example.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/FaultSimulation"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "Access": {
      "type": "string",
      "description": "The network traffic is allowed or denied.",
      "enum": [
        "allow",
        "deny"
      ],
      "x-ms-enum": {
        "name": "Access",
        "modelAsString": true,
        "values": [
          {
            "name": "allow",
            "value": "allow",
            "description": "The network traffic is allowed."
          },
          {
            "name": "deny",
            "value": "deny",
            "description": "The network traffic is denied."
          }
        ]
      }
    },
    "AddRemoveIncrementalNamedPartitionScalingMechanism": {
      "type": "object",
      "description": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. Partition names are in the format '0','1'...'N-1'.",
      "properties": {
        "minPartitionCount": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum number of named partitions of the service."
        },
        "maxPartitionCount": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of named partitions of the service."
        },
        "scaleIncrement": {
          "type": "integer",
          "format": "int32",
          "description": "The number of instances to add or remove during a scaling operation."
        }
      },
      "required": [
        "minPartitionCount",
        "maxPartitionCount",
        "scaleIncrement"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ScalingMechanism"
        }
      ],
      "x-ms-discriminator-value": "AddRemoveIncrementalNamedPartition"
    },
    "AdditionalNetworkInterfaceConfiguration": {
      "type": "object",
      "description": "Specifies the settings for a network interface to attach to the node type.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the network interface."
        },
        "enableAcceleratedNetworking": {
          "type": "boolean",
          "description": "Specifies whether the network interface is accelerated networking-enabled."
        },
        "dscpConfiguration": {
          "$ref": "#/definitions/SubResource",
          "description": "Specifies the DSCP configuration to apply to the network interface."
        },
        "ipConfigurations": {
          "type": "array",
          "description": "Specifies the IP configurations of the network interface.",
          "items": {
            "$ref": "#/definitions/IpConfiguration"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "required": [
        "name",
        "ipConfigurations"
      ]
    },
    "ApplicationHealthPolicy": {
      "type": "object",
      "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.",
      "properties": {
        "considerWarningAsError": {
          "type": "boolean",
          "description": "Indicates whether warnings are treated with the same severity as errors."
        },
        "maxPercentUnhealthyDeployedApplications": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero."
        },
        "defaultServiceTypeHealthPolicy": {
          "$ref": "#/definitions/ServiceTypeHealthPolicy",
          "description": "The health policy used by default to evaluate the health of a service type."
        },
        "serviceTypeHealthPolicyMap": {
          "type": "object",
          "description": "The map with service type health policy per service type name. The map is empty by default.",
          "additionalProperties": {
            "$ref": "#/definitions/ServiceTypeHealthPolicy"
          }
        }
      },
      "required": [
        "considerWarningAsError",
        "maxPercentUnhealthyDeployedApplications"
      ]
    },
    "ApplicationResource": {
      "type": "object",
      "description": "The application resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApplicationResourceProperties",
          "description": "The application resource properties.",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "$ref": "#/definitions/ManagedIdentity",
          "description": "Describes the managed identities for an Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ApplicationResourceList": {
      "type": "object",
      "description": "The list of application resources.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ApplicationResource items on this page",
          "items": {
            "$ref": "#/definitions/ApplicationResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ApplicationResourceProperties": {
      "type": "object",
      "description": "The application resource properties.",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The current deployment or provisioning state, which only appears in the response",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "The version of the application type as defined in the application manifest.\nThis name must be the full Arm Resource ID for the referenced application type version."
        },
        "parameters": {
          "type": "object",
          "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "upgradePolicy": {
          "$ref": "#/definitions/ApplicationUpgradePolicy",
          "description": "Describes the policy for a monitored application upgrade."
        },
        "managedIdentities": {
          "type": "array",
          "description": "List of user assigned identities for the application, each mapped to a friendly name.",
          "items": {
            "$ref": "#/definitions/ApplicationUserAssignedIdentity"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ApplicationTypeResource": {
      "type": "object",
      "description": "The application type name resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApplicationTypeResourceProperties",
          "description": "The application type name properties",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ApplicationTypeResourceList": {
      "type": "object",
      "description": "The list of application type names.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ApplicationTypeResource items on this page",
          "items": {
            "$ref": "#/definitions/ApplicationTypeResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ApplicationTypeResourceProperties": {
      "type": "object",
      "description": "The application type name properties",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The current deployment or provisioning state, which only appears in the response.",
          "readOnly": true
        }
      }
    },
    "ApplicationTypeUpdateParameters": {
      "type": "object",
      "description": "Application type update request",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Application type update parameters",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ApplicationTypeVersionResource": {
      "type": "object",
      "description": "An application type version resource for the specified application type name resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApplicationTypeVersionResourceProperties",
          "description": "The properties of the application type version resource.",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ApplicationTypeVersionResourceList": {
      "type": "object",
      "description": "The list of application type version resources for the specified application type name resource.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ApplicationTypeVersionResource items on this page",
          "items": {
            "$ref": "#/definitions/ApplicationTypeVersionResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ApplicationTypeVersionResourceProperties": {
      "type": "object",
      "description": "The properties of the application type version resource.",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The current deployment or provisioning state, which only appears in the response",
          "readOnly": true
        },
        "appPackageUrl": {
          "type": "string",
          "description": "The URL to the application package"
        }
      },
      "required": [
        "appPackageUrl"
      ]
    },
    "ApplicationTypeVersionUpdateParameters": {
      "type": "object",
      "description": "Application type version update request",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Application type version update parameters",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ApplicationTypeVersionsCleanupPolicy": {
      "type": "object",
      "description": "The policy used to clean up unused versions. When the policy is not specified explicitly, the default unused application versions to keep will be 3.",
      "properties": {
        "maxUnusedVersionsToKeep": {
          "type": "integer",
          "format": "int32",
          "description": "Number of unused versions per application type to keep.",
          "minimum": 0
        }
      },
      "required": [
        "maxUnusedVersionsToKeep"
      ]
    },
    "ApplicationUpdateParameters": {
      "type": "object",
      "description": "Application update request.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Application update parameters",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ApplicationUpgradePolicy": {
      "type": "object",
      "description": "Describes the policy for a monitored application upgrade.",
      "properties": {
        "applicationHealthPolicy": {
          "$ref": "#/definitions/ApplicationHealthPolicy",
          "description": "Defines a health policy used to evaluate the health of an application or one of its children entities."
        },
        "forceRestart": {
          "type": "boolean",
          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
          "default": false
        },
        "rollingUpgradeMonitoringPolicy": {
          "$ref": "#/definitions/RollingUpgradeMonitoringPolicy",
          "description": "The policy used for monitoring the application upgrade"
        },
        "instanceCloseDelayDuration": {
          "type": "integer",
          "format": "int64",
          "description": "Duration in seconds, to wait before a stateless instance is closed, to allow the active requests to drain gracefully. This would be effective when the instance is closing during the application/cluster upgrade, only for those instances which have a non-zero delay duration configured in the service description."
        },
        "upgradeMode": {
          "$ref": "#/definitions/RollingUpgradeMode",
          "description": "The mode used to monitor health during a rolling upgrade. The values are Monitored, and UnmonitoredAuto."
        },
        "upgradeReplicaSetCheckTimeout": {
          "type": "integer",
          "format": "int64",
          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer)."
        },
        "recreateApplication": {
          "type": "boolean",
          "description": "Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed."
        }
      }
    },
    "ApplicationUserAssignedIdentity": {
      "type": "object",
      "description": "User assigned identity for the application.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The friendly name of user assigned identity."
        },
        "principalId": {
          "type": "string",
          "description": "The principal id of user assigned identity."
        }
      },
      "required": [
        "name",
        "principalId"
      ]
    },
    "AutoGeneratedDomainNameLabelScope": {
      "type": "string",
      "description": "This enum is the entrypoint to using a certificate from a public CA for your cluster. This property was introduced to solve the\ndomain squatting problem with new domains. A domain name will be generated in the following format: {clustername}.{hash}.{regionname}.sfmcdomain.\nThe hash portion comes from Azure DNS' Deterministic Name Library. The library creates a hash using the cluster's Tenant, Subscription, Resource Group\nand Resource Name using the AutoGeneratedDomainNameLabelScope/reuse policy chosen.",
      "enum": [
        "TenantReuse",
        "SubscriptionReuse",
        "ResourceGroupReuse",
        "NoReuse"
      ],
      "x-ms-enum": {
        "name": "AutoGeneratedDomainNameLabelScope",
        "modelAsString": true,
        "values": [
          {
            "name": "TenantReuse",
            "value": "TenantReuse",
            "description": "TenantReuse allows for the same hash to be created if the resource is created in the same Tenant with the same resource name."
          },
          {
            "name": "SubscriptionReuse",
            "value": "SubscriptionReuse",
            "description": "SubscriptionReuse allows for the same hash to be created if the resource is created in the same Subscription with the same resource name."
          },
          {
            "name": "ResourceGroupReuse",
            "value": "ResourceGroupReuse",
            "description": "ResourceGroupReuse allows for the same hash to be created if the resource is created in the same Resource Group with the same resource name."
          },
          {
            "name": "NoReuse",
            "value": "NoReuse",
            "description": "NoReuse will create a new hash regardless of the Subscription, Resource Group, Tenant and Resource name."
          }
        ]
      }
    },
    "AvailableOperationDisplay": {
      "type": "object",
      "description": "Operation supported by the Service Fabric resource provider",
      "properties": {
        "provider": {
          "type": "string",
          "description": "The name of the provider."
        },
        "resource": {
          "type": "string",
          "description": "The resource on which the operation is performed"
        },
        "operation": {
          "type": "string",
          "description": "The operation that can be performed."
        },
        "description": {
          "type": "string",
          "description": "Operation description"
        }
      }
    },
    "AveragePartitionLoadScalingTrigger": {
      "type": "object",
      "description": "Represents a scaling trigger related to an average load of a metric/resource of a partition.",
      "properties": {
        "metricName": {
          "type": "string",
          "description": "The name of the metric for which usage should be tracked."
        },
        "lowerLoadThreshold": {
          "type": "number",
          "format": "double",
          "description": "The lower limit of the load below which a scale in operation should be performed."
        },
        "upperLoadThreshold": {
          "type": "number",
          "format": "double",
          "description": "The upper limit of the load beyond which a scale out operation should be performed."
        },
        "scaleInterval": {
          "type": "string",
          "description": "The period in seconds on which a decision is made whether to scale or not. This property should come in ISO 8601 format \"hh:mm:ss\"."
        }
      },
      "required": [
        "metricName",
        "lowerLoadThreshold",
        "upperLoadThreshold",
        "scaleInterval"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ScalingTrigger"
        }
      ],
      "x-ms-discriminator-value": "AveragePartitionLoadTrigger"
    },
    "AverageServiceLoadScalingTrigger": {
      "type": "object",
      "description": "Represents a scaling policy related to an average load of a metric/resource of a service.",
      "properties": {
        "metricName": {
          "type": "string",
          "description": "The name of the metric for which usage should be tracked."
        },
        "lowerLoadThreshold": {
          "type": "number",
          "format": "double",
          "description": "The lower limit of the load below which a scale in operation should be performed."
        },
        "upperLoadThreshold": {
          "type": "number",
          "format": "double",
          "description": "The upper limit of the load beyond which a scale out operation should be performed."
        },
        "scaleInterval": {
          "type": "string",
          "description": "The period in seconds on which a decision is made whether to scale or not. This property should come in ISO 8601 format \"hh:mm:ss\"."
        },
        "useOnlyPrimaryLoad": {
          "type": "boolean",
          "description": "Flag determines whether only the load of primary replica should be considered for scaling. If set to true, then trigger will only consider the load of primary replicas of stateful service. If set to false, trigger will consider load of all replicas. This parameter cannot be set to true for stateless service."
        }
      },
      "required": [
        "metricName",
        "lowerLoadThreshold",
        "upperLoadThreshold",
        "scaleInterval",
        "useOnlyPrimaryLoad"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ScalingTrigger"
        }
      ],
      "x-ms-discriminator-value": "AverageServiceLoadTrigger"
    },
    "AzureActiveDirectory": {
      "type": "object",
      "description": "The settings to enable AAD authentication on the cluster.",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Azure active directory tenant id."
        },
        "clusterApplication": {
          "type": "string",
          "description": "Azure active directory cluster application id."
        },
        "clientApplication": {
          "type": "string",
          "description": "Azure active directory client application id."
        }
      }
    },
    "ClientCertificate": {
      "type": "object",
      "description": "Client certificate definition.",
      "properties": {
        "isAdmin": {
          "type": "boolean",
          "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
        },
        "thumbprint": {
          "type": "string",
          "description": "Certificate thumbprint."
        },
        "commonName": {
          "type": "string",
          "description": "Certificate common name."
        },
        "issuerThumbprint": {
          "type": "string",
          "description": "Issuer thumbprint for the certificate. Only used together with CommonName."
        }
      },
      "required": [
        "isAdmin"
      ]
    },
    "ClusterHealthPolicy": {
      "type": "object",
      "description": "Defines a health policy used to evaluate the health of the cluster or of a cluster node.",
      "properties": {
        "maxPercentUnhealthyNodes": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.",
          "default": 0,
          "minimum": 0,
          "maximum": 100
        },
        "maxPercentUnhealthyApplications": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.",
          "default": 0,
          "minimum": 0,
          "maximum": 100
        }
      },
      "required": [
        "maxPercentUnhealthyNodes",
        "maxPercentUnhealthyApplications"
      ]
    },
    "ClusterMonitoringPolicy": {
      "type": "object",
      "description": "Describes the monitoring policies for the cluster upgrade.",
      "properties": {
        "healthCheckWaitDuration": {
          "type": "string",
          "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format.",
          "x-ms-format": "duration-constant"
        },
        "healthCheckStableDuration": {
          "type": "string",
          "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format.",
          "x-ms-format": "duration-constant"
        },
        "healthCheckRetryTimeout": {
          "type": "string",
          "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
        },
        "upgradeTimeout": {
          "type": "string",
          "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
        },
        "upgradeDomainTimeout": {
          "type": "string",
          "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
        }
      },
      "required": [
        "healthCheckWaitDuration",
        "healthCheckStableDuration",
        "healthCheckRetryTimeout",
        "upgradeTimeout",
        "upgradeDomainTimeout"
      ]
    },
    "ClusterState": {
      "type": "string",
      "description": "The current state of the cluster.",
      "enum": [
        "WaitingForNodes",
        "Deploying",
        "BaselineUpgrade",
        "Upgrading",
        "UpgradeFailed",
        "Ready"
      ],
      "x-ms-enum": {
        "name": "ClusterState",
        "modelAsString": true,
        "values": [
          {
            "name": "WaitingForNodes",
            "value": "WaitingForNodes",
            "description": "Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it."
          },
          {
            "name": "Deploying",
            "value": "Deploying",
            "description": "Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up."
          },
          {
            "name": "BaselineUpgrade",
            "value": "BaselineUpgrade",
            "description": "Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time."
          },
          {
            "name": "Upgrading",
            "value": "Upgrading",
            "description": "Indicates that the cluster is being upgraded with the user provided configuration."
          },
          {
            "name": "UpgradeFailed",
            "value": "UpgradeFailed",
            "description": "Indicates that the last upgrade for the cluster has failed."
          },
          {
            "name": "Ready",
            "value": "Ready",
            "description": "Indicates that the cluster is in a stable state."
          }
        ]
      }
    },
    "ClusterUpgradeCadence": {
      "type": "string",
      "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0.",
      "enum": [
        "Wave0",
        "Wave1",
        "Wave2"
      ],
      "x-ms-enum": {
        "name": "ClusterUpgradeCadence",
        "modelAsString": true,
        "values": [
          {
            "name": "Wave0",
            "value": "Wave0",
            "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
          },
          {
            "name": "Wave1",
            "value": "Wave1",
            "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
          },
          {
            "name": "Wave2",
            "value": "Wave2",
            "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
          }
        ]
      }
    },
    "ClusterUpgradeDeltaHealthPolicy": {
      "type": "object",
      "description": "Describes the delta health policies for the cluster upgrade.",
      "properties": {
        "maxPercentDeltaUnhealthyNodes": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.",
          "minimum": 0,
          "maximum": 100
        },
        "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.",
          "minimum": 0,
          "maximum": 100
        },
        "maxPercentDeltaUnhealthyApplications": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\nNOTE: This value will overwrite the value specified in properties.UpgradeDescription.HealthPolicy.MaxPercentUnhealthyApplications",
          "minimum": 0,
          "maximum": 100
        }
      },
      "required": [
        "maxPercentDeltaUnhealthyNodes"
      ]
    },
    "ClusterUpgradePolicy": {
      "type": "object",
      "description": "Describes the policy used when upgrading the cluster.",
      "properties": {
        "forceRestart": {
          "type": "boolean",
          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
          "default": false
        },
        "healthPolicy": {
          "$ref": "#/definitions/ClusterHealthPolicy",
          "description": "The cluster health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade."
        },
        "deltaHealthPolicy": {
          "$ref": "#/definitions/ClusterUpgradeDeltaHealthPolicy",
          "description": "The cluster delta health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade."
        },
        "monitoringPolicy": {
          "$ref": "#/definitions/ClusterMonitoringPolicy",
          "description": "The cluster monitoring policy describes the parameters for monitoring an upgrade in Monitored mode."
        },
        "upgradeReplicaSetCheckTimeout": {
          "type": "string",
          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues.\nWhen this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues.\nThe timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.\nThis value must be between 00:00:00 and 49710.06:28:15 (unsigned 32 bit integer for seconds)"
        }
      }
    },
    "Direction": {
      "type": "string",
      "description": "Network security rule direction.",
      "enum": [
        "inbound",
        "outbound"
      ],
      "x-ms-enum": {
        "name": "Direction",
        "modelAsString": true,
        "values": [
          {
            "name": "inbound",
            "value": "inbound",
            "description": "Inbound direction."
          },
          {
            "name": "outbound",
            "value": "outbound",
            "description": "Outbound direction."
          }
        ]
      }
    },
    "EndpointRangeDescription": {
      "type": "object",
      "description": "Port range details",
      "properties": {
        "startPort": {
          "type": "integer",
          "format": "int32",
          "description": "Starting port of a range of ports"
        },
        "endPort": {
          "type": "integer",
          "format": "int32",
          "description": "End port of a range of ports"
        }
      },
      "required": [
        "startPort",
        "endPort"
      ]
    },
    "ErrorModelError": {
      "type": "object",
      "description": "The error details.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        }
      }
    },
    "EvictionPolicyType": {
      "type": "string",
      "description": "Specifies the eviction policy for virtual machines in a SPOT node type.",
      "enum": [
        "Delete",
        "Deallocate"
      ],
      "x-ms-enum": {
        "name": "EvictionPolicyType",
        "modelAsString": true,
        "values": [
          {
            "name": "Delete",
            "value": "Delete",
            "description": "Eviction policy will be Delete for SPOT vms."
          },
          {
            "name": "Deallocate",
            "value": "Deallocate",
            "description": "Eviction policy will be Deallocate for SPOT vms."
          }
        ]
      }
    },
    "FailureAction": {
      "type": "string",
      "description": "The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations. Invalid indicates the failure action is invalid. Rollback specifies that the upgrade will start rolling back automatically. Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode.",
      "enum": [
        "Rollback",
        "Manual"
      ],
      "x-ms-enum": {
        "name": "FailureAction",
        "modelAsString": true,
        "values": [
          {
            "name": "Rollback",
            "value": "Rollback",
            "description": "Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails."
          },
          {
            "name": "Manual",
            "value": "Manual",
            "description": "Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically."
          }
        ]
      }
    },
    "FaultKind": {
      "type": "string",
      "description": "The kind of fault simulation.",
      "enum": [
        "Zone"
      ],
      "x-ms-enum": {
        "name": "FaultKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Zone",
            "value": "Zone",
            "description": "Simulates an availability zone down."
          }
        ]
      }
    },
    "FaultSimulation": {
      "type": "object",
      "description": "Fault simulation object with status.",
      "properties": {
        "simulationId": {
          "type": "string",
          "description": "unique identifier for the fault simulation."
        },
        "status": {
          "$ref": "#/definitions/FaultSimulationStatus",
          "description": "Fault simulation status"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the fault simulation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the fault simulation."
        },
        "details": {
          "$ref": "#/definitions/FaultSimulationDetails",
          "description": "Fault simulation details"
        }
      }
    },
    "FaultSimulationConstraints": {
      "type": "object",
      "description": "Constraints for Fault Simulation action.",
      "properties": {
        "expirationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The absolute expiration timestamp (UTC) after which this fault simulation should be stopped if it's still active."
        }
      }
    },
    "FaultSimulationContent": {
      "type": "object",
      "description": "Parameters for Fault Simulation action.",
      "properties": {
        "faultKind": {
          "$ref": "#/definitions/FaultKind",
          "description": "The kind of fault to be simulated."
        },
        "force": {
          "type": "boolean",
          "description": "Force the action to go through without any check on the cluster."
        },
        "constraints": {
          "$ref": "#/definitions/FaultSimulationConstraints",
          "description": "Constraints for Fault Simulation action."
        }
      },
      "discriminator": "faultKind",
      "required": [
        "faultKind"
      ]
    },
    "FaultSimulationDetails": {
      "type": "object",
      "description": "Details for Fault Simulation.",
      "properties": {
        "clusterId": {
          "type": "string",
          "description": "unique identifier for the cluster resource."
        },
        "operationId": {
          "type": "string",
          "description": "unique identifier for the operation associated with the fault simulation."
        },
        "nodeTypeFaultSimulation": {
          "type": "array",
          "description": "List of node type simulations associated with the cluster fault simulation.",
          "items": {
            "$ref": "#/definitions/NodeTypeFaultSimulation"
          },
          "x-ms-identifiers": [
            "nodeTypeName"
          ]
        },
        "parameters": {
          "$ref": "#/definitions/FaultSimulationContent",
          "description": "Fault simulation parameters."
        }
      }
    },
    "FaultSimulationIdContent": {
      "type": "object",
      "description": "Parameters for Fault Simulation id.",
      "properties": {
        "simulationId": {
          "type": "string",
          "description": "unique identifier for the fault simulation."
        }
      },
      "required": [
        "simulationId"
      ]
    },
    "FaultSimulationListResult": {
      "type": "object",
      "description": "Fault simulation list results",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FaultSimulation items on this page",
          "items": {
            "$ref": "#/definitions/FaultSimulation"
          },
          "x-ms-identifiers": [
            "simulationId"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FaultSimulationStatus": {
      "type": "string",
      "description": "Fault simulation status.",
      "enum": [
        "Starting",
        "Active",
        "Stopping",
        "Done",
        "StartFailed",
        "StopFailed"
      ],
      "x-ms-enum": {
        "name": "FaultSimulationStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Starting",
            "value": "Starting",
            "description": "Indicates the fault simulation is starting. The simulation will have this status while the start operation is in progress."
          },
          {
            "name": "Active",
            "value": "Active",
            "description": "Indicates the fault simulation is active. The simulation will have this status after the start operation has completed successfully."
          },
          {
            "name": "Stopping",
            "value": "Stopping",
            "description": "Indicates the fault simulation is stopping. The simulation will have this status while the stop operation is in progress."
          },
          {
            "name": "Done",
            "value": "Done",
            "description": "Indicates the fault simulation is done. The simulation will have this status after the stop operation has completed successfully."
          },
          {
            "name": "StartFailed",
            "value": "StartFailed",
            "description": "Indicates the fault simulation has failed on start. The simulation will have this status after the start operation fails."
          },
          {
            "name": "StopFailed",
            "value": "StopFailed",
            "description": "Indicates the fault simulation has failed on stop. The simulation will have this status after the stop operation fails."
          }
        ]
      }
    },
    "FrontendConfiguration": {
      "type": "object",
      "description": "Describes the frontend configurations for the node type.",
      "properties": {
        "ipAddressType": {
          "type": "string",
          "description": "The IP address type of this frontend configuration. If omitted the default value is IPv4.",
          "default": "IPv4",
          "enum": [
            "IPv4",
            "IPv6"
          ],
          "x-ms-enum": {
            "name": "IPAddressType",
            "modelAsString": true,
            "values": [
              {
                "name": "IPv4",
                "value": "IPv4",
                "description": "IPv4 address type."
              },
              {
                "name": "IPv6",
                "value": "IPv6",
                "description": "IPv6 address type."
              }
            ]
          }
        },
        "loadBalancerBackendAddressPoolId": {
          "type": "string",
          "format": "arm-id",
          "description": "The resource Id of the Load Balancer backend address pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/backendAddressPools/{backendAddressPoolName}'."
        },
        "loadBalancerInboundNatPoolId": {
          "type": "string",
          "format": "arm-id",
          "description": "The resource Id of the Load Balancer inbound NAT pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/inboundNatPools/{inboundNatPoolName}'."
        },
        "applicationGatewayBackendAddressPoolId": {
          "type": "string",
          "format": "arm-id",
          "description": "The resource Id of application gateway backend address pool. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/backendAddressPools/{backendAddressPoolName}'.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/applicationGateways/backendAddressPools"
              }
            ]
          }
        }
      }
    },
    "IpConfiguration": {
      "type": "object",
      "description": "Specifies an IP configuration of the network interface.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the network interface."
        },
        "applicationGatewayBackendAddressPools": {
          "type": "array",
          "description": "Specifies an array of references to backend address pools of application gateways. A node type can reference backend address pools of multiple application gateways. Multiple node types cannot use the same application gateway.",
          "items": {
            "$ref": "#/definitions/SubResource"
          }
        },
        "loadBalancerBackendAddressPools": {
          "type": "array",
          "description": "Specifies an array of references to backend address pools of load balancers. A node type can reference backend address pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer.",
          "items": {
            "$ref": "#/definitions/SubResource"
          }
        },
        "loadBalancerInboundNatPools": {
          "type": "array",
          "description": "Specifies an array of references to inbound Nat pools of the load balancers. A node type can reference inbound nat pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer.",
          "items": {
            "$ref": "#/definitions/SubResource"
          }
        },
        "subnet": {
          "$ref": "#/definitions/SubResource",
          "description": "Specifies the subnet of the network interface."
        },
        "privateIPAddressVersion": {
          "type": "string",
          "description": "Specifies whether the IP configuration's private IP is IPv4 or IPv6. Default is IPv4.",
          "default": "IPv4",
          "enum": [
            "IPv4",
            "IPv6"
          ],
          "x-ms-enum": {
            "name": "PrivateIPAddressVersion",
            "modelAsString": true,
            "values": [
              {
                "name": "IPv4",
                "value": "IPv4",
                "description": "The IP configuration's private IP is IPv4."
              },
              {
                "name": "IPv6",
                "value": "IPv6",
                "description": "The IP configuration's private IP is IPv6."
              }
            ]
          }
        },
        "publicIPAddressConfiguration": {
          "$ref": "#/definitions/PublicIPAddressConfiguration",
          "description": "The public IP address configuration of the network interface."
        }
      },
      "required": [
        "name"
      ]
    },
    "IpTag": {
      "type": "object",
      "description": "The IP tag associated with the public IP address.",
      "properties": {
        "ipTagType": {
          "type": "string",
          "description": "IP tag type. Example: FirstPartyUsage."
        },
        "tag": {
          "type": "string",
          "description": "IP tag associated with the public IP. Example: SQL, Storage etc."
        }
      },
      "required": [
        "ipTagType",
        "tag"
      ]
    },
    "LoadBalancingRule": {
      "type": "object",
      "description": "Describes a load balancing rule.",
      "properties": {
        "frontendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.",
          "minimum": 1,
          "maximum": 65534
        },
        "backendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.",
          "minimum": 1,
          "maximum": 65534
        },
        "protocol": {
          "$ref": "#/definitions/Protocol",
          "description": "The reference to the transport protocol used by the load balancing rule."
        },
        "probePort": {
          "type": "integer",
          "format": "int32",
          "description": "The prob port used by the load balancing rule. Acceptable values are between 1 and 65535.",
          "minimum": 1,
          "maximum": 65534
        },
        "probeProtocol": {
          "$ref": "#/definitions/ProbeProtocol",
          "description": "the reference to the load balancer probe used by the load balancing rule."
        },
        "probeRequestPath": {
          "type": "string",
          "description": "The probe request path. Only supported for HTTP/HTTPS probes."
        },
        "loadDistribution": {
          "type": "string",
          "description": "The load distribution policy for this rule."
        }
      },
      "required": [
        "frontendPort",
        "backendPort",
        "protocol",
        "probeProtocol"
      ]
    },
    "LongRunningOperationResult": {
      "type": "object",
      "description": "Long running operation result.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "percentComplete": {
          "type": "number",
          "format": "double",
          "description": "The completion percentage of the operation."
        },
        "status": {
          "type": "string",
          "description": "The status of the operation."
        },
        "error": {
          "$ref": "#/definitions/ErrorModelError",
          "description": "The operation error."
        }
      }
    },
    "ManagedAzResiliencyStatus": {
      "type": "object",
      "description": "Describes the result of the request to list Managed VM Sizes for Service Fabric Managed Clusters.",
      "properties": {
        "baseResourceStatus": {
          "type": "array",
          "description": "List of Managed VM Sizes for Service Fabric Managed Clusters.",
          "items": {
            "$ref": "#/definitions/ResourceAzStatus"
          },
          "x-ms-identifiers": []
        },
        "isClusterZoneResilient": {
          "type": "boolean",
          "description": "URL to get the next set of Managed VM Sizes if there are any.",
          "readOnly": true
        }
      }
    },
    "ManagedCluster": {
      "type": "object",
      "description": "The managed cluster resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagedClusterProperties",
          "description": "The managed cluster resource properties",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.\",",
          "readOnly": true
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The sku of the managed cluster"
        }
      },
      "required": [
        "sku"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ManagedClusterAddOnFeature": {
      "type": "string",
      "description": "Available cluster add-on features",
      "enum": [
        "DnsService",
        "BackupRestoreService",
        "ResourceMonitorService"
      ],
      "x-ms-enum": {
        "name": "ManagedClusterAddOnFeature",
        "modelAsString": true,
        "values": [
          {
            "name": "DnsService",
            "value": "DnsService",
            "description": "Dns service"
          },
          {
            "name": "BackupRestoreService",
            "value": "BackupRestoreService",
            "description": "Backup and restore service"
          },
          {
            "name": "ResourceMonitorService",
            "value": "ResourceMonitorService",
            "description": "Resource monitor service"
          }
        ]
      }
    },
    "ManagedClusterCodeVersionResult": {
      "type": "object",
      "description": "The result of the Service Fabric runtime versions",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identification of the result"
        },
        "name": {
          "type": "string",
          "description": "The name of the result"
        },
        "type": {
          "type": "string",
          "description": "The result resource type"
        },
        "properties": {
          "$ref": "#/definitions/ManagedClusterVersionDetails",
          "description": "The detail of the Service Fabric runtime version result",
          "x-ms-client-flatten": true
        }
      }
    },
    "ManagedClusterListResult": {
      "type": "object",
      "description": "The response of a ManagedCluster list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ManagedCluster items on this page",
          "items": {
            "$ref": "#/definitions/ManagedCluster"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ManagedClusterProperties": {
      "type": "object",
      "description": "Describes the managed cluster resource properties.",
      "properties": {
        "dnsName": {
          "type": "string",
          "description": "The cluster dns name."
        },
        "fqdn": {
          "type": "string",
          "description": "The fully qualified domain name associated with the public load balancer of the cluster.",
          "readOnly": true
        },
        "ipv4Address": {
          "type": "string",
          "description": "The IPv4 address associated with the public load balancer of the cluster.",
          "readOnly": true
        },
        "clusterId": {
          "type": "string",
          "description": "A service generated unique identifier for the cluster resource.",
          "readOnly": true
        },
        "clusterState": {
          "$ref": "#/definitions/ClusterState",
          "description": "The current state of the cluster.",
          "readOnly": true
        },
        "clusterCertificateThumbprints": {
          "type": "array",
          "description": "List of thumbprints of the cluster certificates.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "clientConnectionPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port used for client connections to the cluster.",
          "default": 19000
        },
        "httpGatewayConnectionPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port used for HTTP connections to the cluster.",
          "default": 19080
        },
        "adminUserName": {
          "type": "string",
          "description": "VM admin user name."
        },
        "adminPassword": {
          "type": "string",
          "format": "password",
          "description": "VM admin user password.",
          "x-ms-secret": true
        },
        "loadBalancingRules": {
          "type": "array",
          "description": "Load balancing rules that are applied to the public load balancer of the cluster.",
          "items": {
            "$ref": "#/definitions/LoadBalancingRule"
          },
          "x-ms-identifiers": []
        },
        "allowRdpAccess": {
          "type": "boolean",
          "description": "Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to Internet which can be overridden with custom Network Security Rules. The default value for this setting is false."
        },
        "networkSecurityRules": {
          "type": "array",
          "description": "Custom Network Security Rules that are applied to the Virtual Network of the cluster.",
          "items": {
            "$ref": "#/definitions/NetworkSecurityRule"
          },
          "x-ms-identifiers": []
        },
        "clients": {
          "type": "array",
          "description": "Client certificates that are allowed to manage the cluster.",
          "items": {
            "$ref": "#/definitions/ClientCertificate"
          },
          "x-ms-identifiers": []
        },
        "azureActiveDirectory": {
          "$ref": "#/definitions/AzureActiveDirectory",
          "description": "The AAD authentication settings of the cluster."
        },
        "fabricSettings": {
          "type": "array",
          "description": "The list of custom fabric settings to configure the cluster.",
          "items": {
            "$ref": "#/definitions/SettingsSectionDescription"
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "$ref": "#/definitions/ManagedResourceProvisioningState",
          "description": "The provisioning state of the managed cluster resource.",
          "readOnly": true
        },
        "clusterCodeVersion": {
          "type": "string",
          "description": "The Service Fabric runtime version of the cluster. This property is required when **clusterUpgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**."
        },
        "clusterUpgradeMode": {
          "type": "string",
          "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.",
          "default": "Automatic",
          "enum": [
            "Automatic",
            "Manual"
          ],
          "x-ms-enum": {
            "name": "ClusterUpgradeMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Automatic",
                "value": "Automatic",
                "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **clusterUpgradeCadence** will determine when the upgrade starts after the new version becomes available."
              },
              {
                "name": "Manual",
                "value": "Manual",
                "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
              }
            ]
          }
        },
        "clusterUpgradeCadence": {
          "$ref": "#/definitions/ClusterUpgradeCadence",
          "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **clusterUpgradeMode** is set to 'Automatic'."
        },
        "addonFeatures": {
          "type": "array",
          "description": "List of add-on features to enable on the cluster.",
          "items": {
            "$ref": "#/definitions/ManagedClusterAddOnFeature"
          }
        },
        "enableAutoOSUpgrade": {
          "type": "boolean",
          "description": "Enables automatic OS upgrade for node types created using OS images with version 'latest'. The default value for this setting is false."
        },
        "zonalResiliency": {
          "type": "boolean",
          "description": "Indicates if the cluster has zone resiliency.",
          "default": false
        },
        "applicationTypeVersionsCleanupPolicy": {
          "$ref": "#/definitions/ApplicationTypeVersionsCleanupPolicy",
          "description": "The policy used to clean up unused versions."
        },
        "enableIpv6": {
          "type": "boolean",
          "description": "Setting this to true creates IPv6 address space for the default VNet used by the cluster. This setting cannot be changed once the cluster is created. The default value for this setting is false."
        },
        "subnetId": {
          "type": "string",
          "description": "If specified, the node types for the cluster are created in this subnet instead of the default VNet. The **networkSecurityRules** specified for the cluster are also applied to this subnet. This setting cannot be changed once the cluster is created."
        },
        "ipTags": {
          "type": "array",
          "description": "The list of IP tags associated with the default public IP address of the cluster.",
          "items": {
            "$ref": "#/definitions/IpTag"
          },
          "x-ms-identifiers": []
        },
        "ipv6Address": {
          "type": "string",
          "description": "IPv6 address for the cluster if IPv6 is enabled.",
          "readOnly": true
        },
        "enableServicePublicIP": {
          "type": "boolean",
          "description": "Setting this to true will link the IPv4 address as the ServicePublicIP of the IPv6 address. It can only be set to True if IPv6 is enabled on the cluster."
        },
        "auxiliarySubnets": {
          "type": "array",
          "description": "Auxiliary subnets for the cluster.",
          "items": {
            "$ref": "#/definitions/Subnet"
          },
          "x-ms-identifiers": []
        },
        "serviceEndpoints": {
          "type": "array",
          "description": "Service endpoints for subnets in the cluster.",
          "items": {
            "$ref": "#/definitions/ServiceEndpoint"
          },
          "x-ms-identifiers": []
        },
        "zonalUpdateMode": {
          "$ref": "#/definitions/ZonalUpdateMode",
          "description": "Indicates the update mode for Cross Az clusters."
        },
        "useCustomVnet": {
          "type": "boolean",
          "description": "For new clusters, this parameter indicates that it uses Bring your own VNet, but the subnet is specified at node type level; and for such clusters, the subnetId property is required for node types."
        },
        "publicIPPrefixId": {
          "type": "string",
          "format": "arm-id",
          "description": "Specify the resource id of a public IPv4 prefix that the load balancer will allocate a public IPv4 address from. This setting cannot be changed once the cluster is created.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/publicIPPrefixes"
              }
            ]
          }
        },
        "publicIPv6PrefixId": {
          "type": "string",
          "format": "arm-id",
          "description": "Specify the resource id of a public IPv6 prefix that the load balancer will allocate a public IPv6 address from. This setting cannot be changed once the cluster is created.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/publicIPPrefixes"
              }
            ]
          }
        },
        "ddosProtectionPlanId": {
          "type": "string",
          "format": "arm-id",
          "description": "Specify the resource id of a DDoS network protection plan that will be associated with the virtual network of the cluster.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/ddosProtectionPlans"
              }
            ]
          }
        },
        "upgradeDescription": {
          "$ref": "#/definitions/ClusterUpgradePolicy",
          "description": "The policy to use when upgrading the cluster."
        },
        "httpGatewayTokenAuthConnectionPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port used for token-auth based HTTPS connections to the cluster. Cannot be set to the same port as HttpGatewayEndpoint."
        },
        "enableHttpGatewayExclusiveAuthMode": {
          "type": "boolean",
          "description": "If true, token-based authentication is not allowed on the HttpGatewayEndpoint. This is required to support TLS versions 1.3 and above. If token-based authentication is used, HttpGatewayTokenAuthConnectionPort must be defined."
        },
        "autoGeneratedDomainNameLabelScope": {
          "$ref": "#/definitions/AutoGeneratedDomainNameLabelScope",
          "description": "This property is the entry point to using a public CA cert for your cluster cert. It specifies the level of reuse allowed for the custom FQDN created, matching the subject of the public CA cert."
        },
        "allocatedOutboundPorts": {
          "type": "integer",
          "format": "int32",
          "description": "The number of outbound ports allocated for SNAT for each node in the backend pool of the default load balancer. The default value is 0 which provides dynamic port allocation based on pool size."
        }
      },
      "required": [
        "dnsName",
        "adminUserName"
      ]
    },
    "ManagedClusterUpdateParameters": {
      "type": "object",
      "description": "Managed cluster update request",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Managed cluster update parameters",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ManagedClusterVersionDetails": {
      "type": "object",
      "description": "The detail of the Service Fabric runtime version result",
      "properties": {
        "clusterCodeVersion": {
          "type": "string",
          "description": "The Service Fabric runtime version of the cluster."
        },
        "supportExpiryUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The date of expiry of support of the version."
        },
        "osType": {
          "$ref": "#/definitions/OsType",
          "description": "Cluster operating system, the default will be Windows"
        }
      }
    },
    "ManagedIdentity": {
      "type": "object",
      "description": "Describes the managed identities for an Azure resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal id of the managed identity. This property will only be provided for a system assigned identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant id of the managed identity. This property will only be provided for a system assigned identity.",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/ManagedIdentityType",
          "description": "The type of managed identity for the resource."
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
          "additionalProperties": {
            "$ref": "#/definitions/UserAssignedIdentity"
          }
        }
      }
    },
    "ManagedIdentityType": {
      "type": "string",
      "description": "The type of managed identity for the resource.",
      "enum": [
        "None",
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned, UserAssigned"
      ],
      "x-ms-enum": {
        "name": "ManagedIdentityType",
        "modelAsString": false,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "Indicates that no identity is associated with the resource."
          },
          {
            "name": "SystemAssigned",
            "value": "SystemAssigned",
            "description": "Indicates that system assigned identity is associated with the resource."
          },
          {
            "name": "UserAssigned",
            "value": "UserAssigned",
            "description": "Indicates that user assigned identity is associated with the resource."
          },
          {
            "name": "SystemAssigned, UserAssigned",
            "value": "SystemAssigned, UserAssigned",
            "description": "Indicates that both system assigned and user assigned identity are associated with the resource."
          }
        ]
      }
    },
    "ManagedMaintenanceWindowStatus": {
      "type": "object",
      "description": "Describes the maintenance window status of the Service Fabric Managed Cluster.",
      "properties": {
        "isWindowEnabled": {
          "type": "boolean",
          "description": "If maintenance window is enabled on this cluster.",
          "readOnly": true
        },
        "isRegionReady": {
          "type": "boolean",
          "description": "Indicates if the region is ready to configure maintenance windows.",
          "readOnly": true
        },
        "isWindowActive": {
          "type": "boolean",
          "description": "If maintenance window is active.",
          "readOnly": true
        },
        "canApplyUpdates": {
          "type": "boolean",
          "description": "If updates can be applied.",
          "readOnly": true
        },
        "lastWindowStatusUpdateAtUTC": {
          "type": "string",
          "format": "date-time",
          "description": "Last window update time in UTC.",
          "readOnly": true
        },
        "lastWindowStartTimeUTC": {
          "type": "string",
          "format": "date-time",
          "description": "Last window start time in UTC.",
          "readOnly": true
        },
        "lastWindowEndTimeUTC": {
          "type": "string",
          "format": "date-time",
          "description": "Last window end time in UTC.",
          "readOnly": true
        }
      }
    },
    "ManagedResourceProvisioningState": {
      "type": "string",
      "description": "The provisioning state of the managed resource.",
      "enum": [
        "None",
        "Creating",
        "Created",
        "Updating",
        "Succeeded",
        "Failed",
        "Canceled",
        "Deleting",
        "Deleted",
        "Other"
      ],
      "x-ms-enum": {
        "name": "ManagedResourceProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "The resource does not have a provisioning state."
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "The resource is being created."
          },
          {
            "name": "Created",
            "value": "Created",
            "description": "The resource is created."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "The resource is being updated."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The resource provisioning has succeeded."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The resource provisioning has failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "The resource provisioning has been canceled."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The resource is being deleted."
          },
          {
            "name": "Deleted",
            "value": "Deleted",
            "description": "The resource has been deleted."
          },
          {
            "name": "Other",
            "value": "Other",
            "description": "The resource provisioning state is a state other than the previously specified states."
          }
        ]
      },
      "readOnly": true
    },
    "ManagedVMSize": {
      "type": "object",
      "description": "Describes a VM Sizes.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VMSize",
          "description": "VM Size properties.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "VM Size id.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "VM Size name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "VM Size type.",
          "readOnly": true
        }
      }
    },
    "ManagedVMSizesResult": {
      "type": "object",
      "description": "Describes the result of the request to list Managed VM Sizes for Service Fabric Managed Clusters.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ManagedVMSize items on this page",
          "items": {
            "$ref": "#/definitions/ManagedVMSize"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MoveCost": {
      "type": "string",
      "description": "Specifies the move cost for the service.",
      "enum": [
        "Zero",
        "Low",
        "Medium",
        "High"
      ],
      "x-ms-enum": {
        "name": "MoveCost",
        "modelAsString": true,
        "values": [
          {
            "name": "Zero",
            "value": "Zero",
            "description": "Zero move cost. This value is zero."
          },
          {
            "name": "Low",
            "value": "Low",
            "description": "Specifies the move cost of the service as Low. The value is 1."
          },
          {
            "name": "Medium",
            "value": "Medium",
            "description": "Specifies the move cost of the service as Medium. The value is 2."
          },
          {
            "name": "High",
            "value": "High",
            "description": "Specifies the move cost of the service as High. The value is 3."
          }
        ]
      }
    },
    "NamedPartitionScheme": {
      "type": "object",
      "description": "Describes the named partition scheme of the service.",
      "properties": {
        "names": {
          "type": "array",
          "description": "Array for the names of the partitions.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "names"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Partition"
        }
      ],
      "x-ms-discriminator-value": "Named"
    },
    "NetworkSecurityRule": {
      "type": "object",
      "description": "Describes a network security rule.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Network security rule name."
        },
        "description": {
          "type": "string",
          "description": "Network security rule description."
        },
        "protocol": {
          "$ref": "#/definitions/NsgProtocol",
          "description": "Network protocol this rule applies to."
        },
        "sourceAddressPrefixes": {
          "type": "array",
          "description": "The CIDR or source IP ranges.",
          "items": {
            "type": "string"
          }
        },
        "destinationAddressPrefixes": {
          "type": "array",
          "description": "The destination address prefixes. CIDR or destination IP ranges.",
          "items": {
            "type": "string"
          }
        },
        "sourcePortRanges": {
          "type": "array",
          "description": "The source port ranges.",
          "items": {
            "type": "string"
          }
        },
        "destinationPortRanges": {
          "type": "array",
          "description": "The destination port ranges.",
          "items": {
            "type": "string"
          }
        },
        "sourceAddressPrefix": {
          "type": "string",
          "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
        },
        "destinationAddressPrefix": {
          "type": "string",
          "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
        },
        "sourcePortRange": {
          "type": "string",
          "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
        },
        "destinationPortRange": {
          "type": "string",
          "description": "he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
        },
        "access": {
          "$ref": "#/definitions/Access",
          "description": "The network traffic is allowed or denied."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
          "minimum": 1000,
          "maximum": 3000
        },
        "direction": {
          "$ref": "#/definitions/Direction",
          "description": "Network security rule direction."
        }
      },
      "required": [
        "name",
        "protocol",
        "access",
        "priority",
        "direction"
      ]
    },
    "NodeType": {
      "type": "object",
      "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NodeTypeProperties",
          "description": "The node type properties",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "#/definitions/NodeTypeSku",
          "description": "The node type sku."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "NodeTypeActionParameters": {
      "type": "object",
      "description": "Parameters for Node type action. If nodes are not specified on the parameters, the operation will be performed in all nodes of the node type one upgrade domain at a time.",
      "properties": {
        "nodes": {
          "type": "array",
          "description": "List of node names from the node type.",
          "items": {
            "type": "string"
          }
        },
        "force": {
          "type": "boolean",
          "description": "Force the action to go through."
        },
        "updateType": {
          "$ref": "#/definitions/UpdateType",
          "description": "Specifies the way the operation will be performed."
        }
      }
    },
    "NodeTypeAvailableSku": {
      "type": "object",
      "description": "Defines the type of sku available for a node type",
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "The type of resource the sku applies to. Value: Microsoft.ServiceFabric/managedClusters/nodeTypes.",
          "readOnly": true
        },
        "sku": {
          "$ref": "#/definitions/NodeTypeSupportedSku",
          "description": "The supported SKU for a for node type.",
          "readOnly": true
        },
        "capacity": {
          "$ref": "#/definitions/NodeTypeSkuCapacity",
          "description": "Provides information about how the node count can be scaled.",
          "readOnly": true
        }
      }
    },
    "NodeTypeFaultSimulation": {
      "type": "object",
      "description": "Node type fault simulation object with status.",
      "properties": {
        "nodeTypeName": {
          "type": "string",
          "description": "Node type name."
        },
        "status": {
          "$ref": "#/definitions/FaultSimulationStatus",
          "description": "Fault simulation status"
        },
        "operationId": {
          "type": "string",
          "description": "Current or latest asynchronous operation identifier on the node type."
        },
        "operationStatus": {
          "$ref": "#/definitions/SfmcOperationStatus",
          "description": "Current or latest asynchronous operation status on the node type"
        }
      }
    },
    "NodeTypeListResult": {
      "type": "object",
      "description": "The response of a NodeType list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NodeType items on this page",
          "items": {
            "$ref": "#/definitions/NodeType"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NodeTypeListSkuResult": {
      "type": "object",
      "description": "Node type available sku list results",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NodeTypeAvailableSku items on this page",
          "items": {
            "$ref": "#/definitions/NodeTypeAvailableSku"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NodeTypeNatConfig": {
      "type": "object",
      "description": "Provides information about NAT configuration on the default public Load Balancer for the node type.",
      "properties": {
        "backendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The internal port for the NAT configuration.",
          "minimum": 1,
          "maximum": 65535
        },
        "frontendPortRangeStart": {
          "type": "integer",
          "format": "int32",
          "description": "The port range start for the external endpoint.",
          "minimum": 1,
          "maximum": 65534
        },
        "frontendPortRangeEnd": {
          "type": "integer",
          "format": "int32",
          "description": "The port range end for the external endpoint.",
          "minimum": 1,
          "maximum": 65534
        }
      }
    },
    "NodeTypeProperties": {
      "type": "object",
      "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster.",
      "properties": {
        "isPrimary": {
          "type": "boolean",
          "description": "Indicates the Service Fabric system services for the cluster will run on this node type. This setting cannot be changed once the node type is created."
        },
        "vmInstanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of nodes in the node type. **Values:** -1 - Use when auto scale rules are configured or sku.capacity is defined 0 - Not supported >0 - Use for manual scale.",
          "minimum": -1,
          "maximum": 2147483647
        },
        "dataDiskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "Disk size for the managed disk attached to the vms on the node type in GBs."
        },
        "dataDiskType": {
          "type": "string",
          "description": "Managed data disk type. Specifies the storage account type for the managed disk",
          "default": "StandardSSD_LRS",
          "enum": [
            "Standard_LRS",
            "StandardSSD_LRS",
            "Premium_LRS",
            "PremiumV2_LRS",
            "StandardSSD_ZRS",
            "Premium_ZRS"
          ],
          "x-ms-enum": {
            "name": "DiskType",
            "modelAsString": true,
            "values": [
              {
                "name": "Standard_LRS",
                "value": "Standard_LRS",
                "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
              },
              {
                "name": "StandardSSD_LRS",
                "value": "StandardSSD_LRS",
                "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
              },
              {
                "name": "Premium_LRS",
                "value": "Premium_LRS",
                "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
              },
              {
                "name": "PremiumV2_LRS",
                "value": "PremiumV2_LRS",
                "description": "Premium SSD V2 locally redundant storage. Best for production and performance sensitive workloads that consistently require low latency and high IOPS and throughput."
              },
              {
                "name": "StandardSSD_ZRS",
                "value": "StandardSSD_ZRS",
                "description": "Standard SSD zone redundant storage. Best for web servers, lightly used enterprise applications and dev/test that need storage resiliency against zone failures."
              },
              {
                "name": "Premium_ZRS",
                "value": "Premium_ZRS",
                "description": "Premium SSD zone redundant storage. Best for production workloads that need storage resiliency against zone failures."
              }
            ]
          }
        },
        "dataDiskLetter": {
          "type": "string",
          "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created.",
          "pattern": "^[a-zA-Z]{1}$"
        },
        "placementProperties": {
          "type": "object",
          "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "capacities": {
          "type": "object",
          "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "applicationPorts": {
          "$ref": "#/definitions/EndpointRangeDescription",
          "description": "The range of ports from which cluster assigned port to Service Fabric applications."
        },
        "ephemeralPorts": {
          "$ref": "#/definitions/EndpointRangeDescription",
          "description": "The range of ephemeral ports that nodes in this node type should be configured with."
        },
        "vmSize": {
          "type": "string",
          "description": "The size of virtual machines in the pool. All virtual machines in a pool are the same size. For example, Standard_D3."
        },
        "vmImagePublisher": {
          "type": "string",
          "description": "The publisher of the Azure Virtual Machines Marketplace image. For example, Canonical or MicrosoftWindowsServer."
        },
        "vmImageOffer": {
          "type": "string",
          "description": "The offer type of the Azure Virtual Machines Marketplace image. For example, UbuntuServer or WindowsServer."
        },
        "vmImageSku": {
          "type": "string",
          "description": "The SKU of the Azure Virtual Machines Marketplace image. For example, 14.04.0-LTS or 2012-R2-Datacenter."
        },
        "vmImageVersion": {
          "type": "string",
          "description": "The version of the Azure Virtual Machines Marketplace image. A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'."
        },
        "vmSecrets": {
          "type": "array",
          "description": "The secrets to install in the virtual machines.",
          "items": {
            "$ref": "#/definitions/VaultSecretGroup"
          },
          "x-ms-identifiers": [
            "sourceVault"
          ]
        },
        "vmExtensions": {
          "type": "array",
          "description": "Set of extensions that should be installed onto the virtual machines.",
          "items": {
            "$ref": "#/definitions/VMSSExtension"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "vmManagedIdentity": {
          "$ref": "#/definitions/VmManagedIdentity",
          "description": "Identities to assign to the virtual machine scale set under the node type."
        },
        "isStateless": {
          "type": "boolean",
          "description": "Indicates if the node type can only host Stateless workloads.",
          "default": false
        },
        "multiplePlacementGroups": {
          "type": "boolean",
          "description": "Indicates if scale set associated with the node type can be composed of multiple placement groups.",
          "default": false
        },
        "frontendConfigurations": {
          "type": "array",
          "description": "Indicates the node type uses its own frontend configurations instead of the default one for the cluster. This setting can only be specified for non-primary node types and can not be added or removed after the node type is created.",
          "items": {
            "$ref": "#/definitions/FrontendConfiguration"
          },
          "x-ms-identifiers": []
        },
        "networkSecurityRules": {
          "type": "array",
          "description": "The Network Security Rules for this node type. This setting can only be specified for node types that are configured with frontend configurations.",
          "items": {
            "$ref": "#/definitions/NetworkSecurityRule"
          },
          "x-ms-identifiers": []
        },
        "additionalDataDisks": {
          "type": "array",
          "description": "Additional managed data disks.",
          "items": {
            "$ref": "#/definitions/VmssDataDisk"
          },
          "x-ms-identifiers": [
            "lun"
          ]
        },
        "enableEncryptionAtHost": {
          "type": "boolean",
          "description": "Enable or disable the Host Encryption for the virtual machines on the node type. This will enable the encryption for all the disks including Resource/Temp disk at host itself. Default: The Encryption at host will be disabled unless this property is set to true for the resource.",
          "default": false
        },
        "provisioningState": {
          "$ref": "#/definitions/ManagedResourceProvisioningState",
          "description": "The provisioning state of the node type resource.",
          "readOnly": true
        },
        "enableAcceleratedNetworking": {
          "type": "boolean",
          "description": "Specifies whether the network interface is accelerated networking-enabled."
        },
        "useDefaultPublicLoadBalancer": {
          "type": "boolean",
          "description": "Specifies whether the use public load balancer. If not specified and the node type doesn't have its own frontend configuration, it will be attached to the default load balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is true, then the frontend has to be an Internal Load Balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is false or not set, then the custom load balancer must include a public load balancer to provide outbound connectivity."
        },
        "useTempDataDisk": {
          "type": "boolean",
          "description": "Specifies whether to use the temporary disk for the service fabric data root, in which case no managed data disk will be attached and the temporary disk will be used. It is only allowed for stateless node types."
        },
        "enableOverProvisioning": {
          "type": "boolean",
          "description": "Specifies whether the node type should be overprovisioned. It is only allowed for stateless node types."
        },
        "zones": {
          "type": "array",
          "description": "Specifies the availability zones where the node type would span across. If the cluster is not spanning across availability zones, initiates az migration for the cluster.",
          "items": {
            "type": "string"
          }
        },
        "isSpotVM": {
          "type": "boolean",
          "description": "Indicates whether the node type will be Spot Virtual Machines. Azure will allocate the VMs if there is capacity available and the VMs can be evicted at any time."
        },
        "hostGroupId": {
          "type": "string",
          "description": "Specifies the full host group resource Id. This property is used for deploying on azure dedicated hosts."
        },
        "useEphemeralOSDisk": {
          "type": "boolean",
          "description": "Indicates whether to use ephemeral os disk. The sku selected on the vmSize property needs to support this feature."
        },
        "spotRestoreTimeout": {
          "type": "string",
          "description": "Indicates the time duration after which the platform will not try to restore the VMSS SPOT instances specified as ISO 8601."
        },
        "evictionPolicy": {
          "$ref": "#/definitions/EvictionPolicyType",
          "description": "Specifies the eviction policy for virtual machines in a SPOT node type. Default is Delete."
        },
        "vmImageResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Indicates the resource id of the vm image. This parameter is used for custom vm image.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Compute/images"
              },
              {
                "type": "Microsoft.Compute/galleries/images"
              },
              {
                "type": "Microsoft.Compute/galleries/images/versions"
              }
            ]
          }
        },
        "subnetId": {
          "type": "string",
          "format": "arm-id",
          "description": "Indicates the resource id of the subnet for the node type.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets"
              }
            ]
          }
        },
        "vmSetupActions": {
          "type": "array",
          "description": "Specifies the actions to be performed on the vms before bootstrapping the service fabric runtime.",
          "items": {
            "$ref": "#/definitions/VmSetupAction"
          }
        },
        "securityType": {
          "$ref": "#/definitions/SecurityType",
          "description": "Specifies the security type of the nodeType. Only Standard and TrustedLaunch are currently supported"
        },
        "secureBootEnabled": {
          "type": "boolean",
          "description": "Specifies whether secure boot should be enabled on the nodeType. Can only be used with TrustedLaunch SecurityType"
        },
        "enableNodePublicIP": {
          "type": "boolean",
          "description": "Specifies whether each node is allocated its own public IPv4 address. This is only supported on secondary node types with custom Load Balancers."
        },
        "enableNodePublicIPv6": {
          "type": "boolean",
          "description": "Specifies whether each node is allocated its own public IPv6 address. This is only supported on secondary node types with custom Load Balancers."
        },
        "vmSharedGalleryImageId": {
          "type": "string",
          "format": "arm-id",
          "description": "Indicates the resource id of the vm shared galleries image. This parameter is used for custom vm image.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Compute/sharedGalleries/images"
              },
              {
                "type": "Microsoft.Compute/sharedGalleries/images/versions"
              }
            ]
          }
        },
        "natGatewayId": {
          "type": "string",
          "format": "arm-id",
          "description": "Specifies the resource id of a NAT Gateway to attach to the subnet of this node type. Node type must use custom load balancer.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/natGateways"
              }
            ]
          }
        },
        "natConfigurations": {
          "type": "array",
          "description": "Specifies the NAT configuration on default public Load Balancer for the node type. This is only supported for node types use the default public Load Balancer.",
          "items": {
            "$ref": "#/definitions/NodeTypeNatConfig"
          },
          "x-ms-identifiers": []
        },
        "vmImagePlan": {
          "$ref": "#/definitions/VmImagePlan",
          "description": "Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started ->. Enter any required information and then click Save."
        },
        "serviceArtifactReferenceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Compute/galleries/serviceArtifacts/vmArtifactsProfiles"
              }
            ]
          }
        },
        "dscpConfigurationId": {
          "type": "string",
          "format": "arm-id",
          "description": "Specifies the resource id of the DSCP configuration to apply to the node type network interface.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/dscpConfigurations"
              }
            ]
          }
        },
        "additionalNetworkInterfaceConfigurations": {
          "type": "array",
          "description": "Specifies the settings for any additional secondary network interfaces to attach to the node type.",
          "items": {
            "$ref": "#/definitions/AdditionalNetworkInterfaceConfiguration"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "computerNamePrefix": {
          "type": "string",
          "description": "Specifies the computer name prefix. Limited to 9 characters. If specified, allows for a longer name to be specified for the node type name."
        },
        "vmApplications": {
          "type": "array",
          "description": "Specifies the gallery applications that should be made available to the underlying VMSS.",
          "items": {
            "$ref": "#/definitions/VmApplication"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "isPrimary",
        "vmInstanceCount"
      ]
    },
    "NodeTypeSku": {
      "type": "object",
      "description": "Describes a node type sku.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The sku name. Name is internally generated and is used in auto-scale scenarios. Property does not allow to be changed to other values than generated. To avoid deployment errors please omit the property."
        },
        "tier": {
          "type": "string",
          "description": "Specifies the tier of the node type. Possible Values: **Standard**"
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "The number of nodes in the node type. If present in request it will override properties.vmInstanceCount.",
          "minimum": 1,
          "maximum": 2147483647
        }
      },
      "required": [
        "capacity"
      ]
    },
    "NodeTypeSkuCapacity": {
      "type": "object",
      "description": "Provides information about how node type can be scaled.",
      "properties": {
        "minimum": {
          "type": "integer",
          "format": "int32",
          "description": "Lowest permitted node count in a node type.",
          "readOnly": true
        },
        "maximum": {
          "type": "integer",
          "format": "int32",
          "description": "Highest permitted node count in a node type.",
          "readOnly": true
        },
        "default": {
          "type": "integer",
          "format": "int32",
          "description": "Default node count in a node type.",
          "readOnly": true
        },
        "scaleType": {
          "type": "string",
          "description": "Node type capacity scale type.",
          "default": "None",
          "enum": [
            "None",
            "Manual",
            "Automatic"
          ],
          "x-ms-enum": {
            "name": "NodeTypeSkuScaleType",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "Node count is not adjustable in any way (e.g. it is fixed)."
              },
              {
                "name": "Manual",
                "value": "Manual",
                "description": "The user must manually scale out/in."
              },
              {
                "name": "Automatic",
                "value": "Automatic",
                "description": "Automatic scale is allowed."
              }
            ]
          },
          "readOnly": true
        }
      }
    },
    "NodeTypeSupportedSku": {
      "type": "object",
      "description": "Describes a node type supported sku.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The sku name.",
          "readOnly": true
        },
        "tier": {
          "type": "string",
          "description": "Specifies the tier of the node type. Possible Values: **Standard**",
          "readOnly": true
        }
      }
    },
    "NodeTypeUpdateParameters": {
      "type": "object",
      "description": "Node type update request",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Node type update parameters",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "#/definitions/NodeTypeSku",
          "description": "The node type sku."
        }
      }
    },
    "NsgProtocol": {
      "type": "string",
      "description": "Network protocol this rule applies to.",
      "enum": [
        "http",
        "https",
        "tcp",
        "udp",
        "icmp",
        "ah",
        "esp"
      ],
      "x-ms-enum": {
        "name": "NsgProtocol",
        "modelAsString": true,
        "values": [
          {
            "name": "http",
            "value": "http",
            "description": "Protocol applies to HTTP."
          },
          {
            "name": "https",
            "value": "https",
            "description": "Protocol applies to HTTPS."
          },
          {
            "name": "tcp",
            "value": "tcp",
            "description": "Protocol applies to TCP."
          },
          {
            "name": "udp",
            "value": "udp",
            "description": "Protocol applies to UDP."
          },
          {
            "name": "icmp",
            "value": "icmp",
            "description": "Protocol applies to ICMP."
          },
          {
            "name": "ah",
            "value": "ah",
            "description": "Protocol applies to AH."
          },
          {
            "name": "esp",
            "value": "esp",
            "description": "Protocol applies to ESP."
          }
        ]
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "Describes the result of the request to list Service Fabric resource provider operations.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The OperationResult items on this page",
          "items": {
            "$ref": "#/definitions/OperationResult"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "OperationResult": {
      "type": "object",
      "description": "Available operation list result",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation."
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Indicates whether the operation is a data action"
        },
        "display": {
          "$ref": "#/definitions/AvailableOperationDisplay",
          "description": "The object that represents the operation."
        },
        "origin": {
          "type": "string",
          "description": "Origin result"
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      }
    },
    "OsType": {
      "type": "string",
      "description": "Cluster operating system, the default will be Windows",
      "enum": [
        "Windows"
      ],
      "x-ms-enum": {
        "name": "OsType",
        "modelAsString": true,
        "values": [
          {
            "name": "Windows",
            "value": "Windows",
            "description": "Indicates os is Windows."
          }
        ]
      }
    },
    "Partition": {
      "type": "object",
      "description": "Describes how the service is partitioned.",
      "properties": {
        "partitionScheme": {
          "$ref": "#/definitions/PartitionScheme"
        }
      },
      "discriminator": "partitionScheme",
      "required": [
        "partitionScheme"
      ]
    },
    "PartitionInstanceCountScaleMechanism": {
      "type": "object",
      "description": "Represents a scaling mechanism for adding or removing instances of stateless service partition.",
      "properties": {
        "minInstanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum number of instances of the partition."
        },
        "maxInstanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of instances of the partition."
        },
        "scaleIncrement": {
          "type": "integer",
          "format": "int32",
          "description": "The number of instances to add or remove during a scaling operation."
        }
      },
      "required": [
        "minInstanceCount",
        "maxInstanceCount",
        "scaleIncrement"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ScalingMechanism"
        }
      ],
      "x-ms-discriminator-value": "ScalePartitionInstanceCount"
    },
    "PartitionScheme": {
      "type": "string",
      "description": "Enumerates the ways that a service can be partitioned.",
      "enum": [
        "Singleton",
        "UniformInt64Range",
        "Named"
      ],
      "x-ms-enum": {
        "name": "PartitionScheme",
        "modelAsString": true,
        "values": [
          {
            "name": "Singleton",
            "value": "Singleton",
            "description": "Indicates that the partition is based on string names, and is a SingletonPartitionScheme object, The value is 0."
          },
          {
            "name": "UniformInt64Range",
            "value": "UniformInt64Range",
            "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionScheme object. The value is 1."
          },
          {
            "name": "Named",
            "value": "Named",
            "description": "Indicates that the partition is based on string names, and is a NamedPartitionScheme object. The value is 2."
          }
        ]
      }
    },
    "PrivateEndpointNetworkPolicies": {
      "type": "string",
      "description": "Enable or Disable apply network policies on private end point in the subnet.",
      "enum": [
        "enabled",
        "disabled"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointNetworkPolicies",
        "modelAsString": true,
        "values": [
          {
            "name": "enabled",
            "value": "enabled",
            "description": "Enable apply network policies on private end point in the subnet."
          },
          {
            "name": "disabled",
            "value": "disabled",
            "description": "Disable apply network policies on private end point in the subnet."
          }
        ]
      }
    },
    "PrivateLinkServiceNetworkPolicies": {
      "type": "string",
      "description": "Enable or Disable apply network policies on private link service in the subnet.",
      "enum": [
        "enabled",
        "disabled"
      ],
      "x-ms-enum": {
        "name": "PrivateLinkServiceNetworkPolicies",
        "modelAsString": true,
        "values": [
          {
            "name": "enabled",
            "value": "enabled",
            "description": "Enable apply network policies on private link service in the subnet."
          },
          {
            "name": "disabled",
            "value": "disabled",
            "description": "Disable apply network policies on private link service in the subnet."
          }
        ]
      }
    },
    "ProbeProtocol": {
      "type": "string",
      "description": "The reference to the load balancer probe used by the load balancing rule.",
      "enum": [
        "tcp",
        "http",
        "https"
      ],
      "x-ms-enum": {
        "name": "ProbeProtocol",
        "modelAsString": true,
        "values": [
          {
            "name": "tcp",
            "value": "tcp",
            "description": "Probe protocol is TCP."
          },
          {
            "name": "http",
            "value": "http",
            "description": "Probe protocol is HTTP."
          },
          {
            "name": "https",
            "value": "https",
            "description": "Probe protocol is HTTPS."
          }
        ]
      }
    },
    "Protocol": {
      "type": "string",
      "description": "The reference to the transport protocol used by the load balancing rule.",
      "enum": [
        "tcp",
        "udp"
      ],
      "x-ms-enum": {
        "name": "Protocol",
        "modelAsString": true,
        "values": [
          {
            "name": "tcp",
            "value": "tcp",
            "description": "Transport protocol is TCP."
          },
          {
            "name": "udp",
            "value": "udp",
            "description": "Transport protocol is UDP."
          }
        ]
      }
    },
    "PublicIPAddressConfiguration": {
      "type": "object",
      "description": "The public IP address configuration of the network interface.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the network interface."
        },
        "ipTags": {
          "type": "array",
          "description": "Specifies the list of IP tags associated with the public IP address.",
          "items": {
            "$ref": "#/definitions/IpTag"
          },
          "x-ms-identifiers": []
        },
        "publicIPAddressVersion": {
          "type": "string",
          "description": "Specifies whether the IP configuration's public IP is IPv4 or IPv6. Default is IPv4.",
          "default": "IPv4",
          "enum": [
            "IPv4",
            "IPv6"
          ],
          "x-ms-enum": {
            "name": "PublicIPAddressVersion",
            "modelAsString": true,
            "values": [
              {
                "name": "IPv4",
                "value": "IPv4",
                "description": "The IP configuration's public IP is IPv4."
              },
              {
                "name": "IPv6",
                "value": "IPv6",
                "description": "The IP configuration's public IP is IPv6."
              }
            ]
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "ResourceAzStatus": {
      "type": "object",
      "description": "Describes Az Resiliency status of Base resources",
      "properties": {
        "resourceName": {
          "type": "string",
          "description": "VM Size properties.",
          "readOnly": true
        },
        "resourceType": {
          "type": "string",
          "description": "VM Size id.",
          "readOnly": true
        },
        "isZoneResilient": {
          "type": "boolean",
          "description": "VM Size name.",
          "readOnly": true
        },
        "details": {
          "type": "string",
          "description": "Zone resiliency status details for the resource.",
          "readOnly": true
        }
      }
    },
    "RollingUpgradeMode": {
      "type": "string",
      "description": "The mode used to monitor health during a rolling upgrade. The values are Monitored, and UnmonitoredAuto.",
      "enum": [
        "Monitored",
        "UnmonitoredAuto"
      ],
      "x-ms-enum": {
        "name": "RollingUpgradeMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Monitored",
            "value": "Monitored",
            "description": "The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 0."
          },
          {
            "name": "UnmonitoredAuto",
            "value": "UnmonitoredAuto",
            "description": "The upgrade will proceed automatically without performing any health monitoring. The value is 1."
          }
        ]
      }
    },
    "RollingUpgradeMonitoringPolicy": {
      "type": "object",
      "description": "The policy used for monitoring the application upgrade",
      "properties": {
        "failureAction": {
          "$ref": "#/definitions/FailureAction",
          "description": "The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations. Invalid indicates the failure action is invalid. Rollback specifies that the upgrade will start rolling back automatically. Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode."
        },
        "healthCheckWaitDuration": {
          "type": "string",
          "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\".",
          "x-ms-format": "duration-constant"
        },
        "healthCheckStableDuration": {
          "type": "string",
          "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\".",
          "x-ms-format": "duration-constant"
        },
        "healthCheckRetryTimeout": {
          "type": "string",
          "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\".",
          "x-ms-format": "duration-constant"
        },
        "upgradeTimeout": {
          "type": "string",
          "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\".",
          "x-ms-format": "duration-constant"
        },
        "upgradeDomainTimeout": {
          "type": "string",
          "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\".",
          "x-ms-format": "duration-constant"
        }
      },
      "required": [
        "failureAction",
        "healthCheckWaitDuration",
        "healthCheckStableDuration",
        "healthCheckRetryTimeout",
        "upgradeTimeout",
        "upgradeDomainTimeout"
      ]
    },
    "RuntimeResumeApplicationUpgradeParameters": {
      "type": "object",
      "description": "Parameters for Resume Upgrade action. The upgrade domain name must be specified.",
      "properties": {
        "upgradeDomainName": {
          "type": "string",
          "description": "The upgrade domain name. Expected to be the next upgrade domain if the application is upgrading."
        }
      }
    },
    "ScalingMechanism": {
      "type": "object",
      "description": "Describes the mechanism for performing a scaling operation.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/ServiceScalingMechanismKind"
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "ScalingPolicy": {
      "type": "object",
      "description": "Specifies a metric to load balance a service during runtime.",
      "properties": {
        "scalingMechanism": {
          "$ref": "#/definitions/ScalingMechanism",
          "description": "Specifies the mechanism associated with this scaling policy"
        },
        "scalingTrigger": {
          "$ref": "#/definitions/ScalingTrigger",
          "description": "Specifies the trigger associated with this scaling policy."
        }
      },
      "required": [
        "scalingMechanism",
        "scalingTrigger"
      ]
    },
    "ScalingTrigger": {
      "type": "object",
      "description": "Describes the trigger for performing a scaling operation.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/ServiceScalingTriggerKind"
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "SecurityType": {
      "type": "string",
      "description": "Specifies the security type of the nodeType. Only Standard and TrustedLaunch are currently supported",
      "enum": [
        "TrustedLaunch",
        "Standard"
      ],
      "x-ms-enum": {
        "name": "SecurityType",
        "modelAsString": true,
        "values": [
          {
            "name": "TrustedLaunch",
            "value": "TrustedLaunch",
            "description": "Trusted Launch is a security type that secures generation 2 virtual machines."
          },
          {
            "name": "Standard",
            "value": "Standard",
            "description": "Standard is the default security type for all machines."
          }
        ]
      }
    },
    "ServiceCorrelation": {
      "type": "object",
      "description": "Creates a particular correlation between services.",
      "properties": {
        "scheme": {
          "$ref": "#/definitions/ServiceCorrelationScheme",
          "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName."
        },
        "serviceName": {
          "type": "string",
          "description": "The Arm Resource ID of the service that the correlation relationship is established with."
        }
      },
      "required": [
        "scheme",
        "serviceName"
      ]
    },
    "ServiceCorrelationScheme": {
      "type": "string",
      "description": "The service correlation scheme.",
      "enum": [
        "AlignedAffinity",
        "NonAlignedAffinity"
      ],
      "x-ms-enum": {
        "name": "ServiceCorrelationScheme",
        "modelAsString": true,
        "values": [
          {
            "name": "AlignedAffinity",
            "value": "AlignedAffinity",
            "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 0."
          },
          {
            "name": "NonAlignedAffinity",
            "value": "NonAlignedAffinity",
            "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 1."
          }
        ]
      }
    },
    "ServiceEndpoint": {
      "type": "object",
      "description": "The service endpoint properties.",
      "properties": {
        "service": {
          "type": "string",
          "description": "The type of the endpoint service."
        },
        "locations": {
          "type": "array",
          "description": "A list of locations.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "service"
      ]
    },
    "ServiceKind": {
      "type": "string",
      "description": "The kind of service (Stateless or Stateful).",
      "enum": [
        "Stateless",
        "Stateful"
      ],
      "x-ms-enum": {
        "name": "ServiceKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Stateless",
            "value": "Stateless",
            "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 0."
          },
          {
            "name": "Stateful",
            "value": "Stateful",
            "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 1."
          }
        ]
      }
    },
    "ServiceLoadMetric": {
      "type": "object",
      "description": "Specifies a metric to load balance a service during runtime.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
        },
        "weight": {
          "$ref": "#/definitions/ServiceLoadMetricWeight",
          "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number."
        },
        "primaryDefaultLoad": {
          "type": "integer",
          "format": "int32",
          "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
        },
        "secondaryDefaultLoad": {
          "type": "integer",
          "format": "int32",
          "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
        },
        "defaultLoad": {
          "type": "integer",
          "format": "int32",
          "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
        }
      },
      "required": [
        "name"
      ]
    },
    "ServiceLoadMetricWeight": {
      "type": "string",
      "description": "Determines the metric weight relative to the other metrics that are configured for this service. During runtime, if two metrics end up in conflict, the Cluster Resource Manager prefers the metric with the higher weight.",
      "enum": [
        "Zero",
        "Low",
        "Medium",
        "High"
      ],
      "x-ms-enum": {
        "name": "ServiceLoadMetricWeight",
        "modelAsString": true,
        "values": [
          {
            "name": "Zero",
            "value": "Zero",
            "description": "Disables resource balancing for this metric. This value is zero."
          },
          {
            "name": "Low",
            "value": "Low",
            "description": "Specifies the metric weight of the service load as Low. The value is 1."
          },
          {
            "name": "Medium",
            "value": "Medium",
            "description": "Specifies the metric weight of the service load as Medium. The value is 2."
          },
          {
            "name": "High",
            "value": "High",
            "description": "Specifies the metric weight of the service load as High. The value is 3."
          }
        ]
      }
    },
    "ServicePackageActivationMode": {
      "type": "string",
      "description": "The activation Mode of the service package",
      "enum": [
        "SharedProcess",
        "ExclusiveProcess"
      ],
      "x-ms-enum": {
        "name": "ServicePackageActivationMode",
        "modelAsString": true,
        "values": [
          {
            "name": "SharedProcess",
            "value": "SharedProcess",
            "description": "Indicates the application package activation mode will use shared process."
          },
          {
            "name": "ExclusiveProcess",
            "value": "ExclusiveProcess",
            "description": "Indicates the application package activation mode will use exclusive process."
          }
        ]
      }
    },
    "ServicePlacementInvalidDomainPolicy": {
      "type": "object",
      "description": "Describes the policy to be used for placement of a Service Fabric service where a particular fault or upgrade domain should not be used for placement of the instances or replicas of that service.",
      "properties": {
        "domainName": {
          "type": "string",
          "description": "The name of the domain that should not be used for placement."
        }
      },
      "required": [
        "domainName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ServicePlacementPolicy"
        }
      ],
      "x-ms-discriminator-value": "InvalidDomain"
    },
    "ServicePlacementNonPartiallyPlaceServicePolicy": {
      "type": "object",
      "description": "The type of placement policy for a service fabric service. Following are the possible values.",
      "allOf": [
        {
          "$ref": "#/definitions/ServicePlacementPolicy"
        }
      ],
      "x-ms-discriminator-value": "NonPartiallyPlaceService"
    },
    "ServicePlacementPolicy": {
      "type": "object",
      "description": "Describes the policy to be used for placement of a Service Fabric service.",
      "properties": {
        "type": {
          "$ref": "#/definitions/ServicePlacementPolicyType"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "ServicePlacementPolicyType": {
      "type": "string",
      "description": "The type of placement policy for a service fabric service. Following are the possible values.",
      "enum": [
        "InvalidDomain",
        "RequiredDomain",
        "PreferredPrimaryDomain",
        "RequiredDomainDistribution",
        "NonPartiallyPlaceService"
      ],
      "x-ms-enum": {
        "name": "ServicePlacementPolicyType",
        "modelAsString": true,
        "values": [
          {
            "name": "InvalidDomain",
            "value": "InvalidDomain",
            "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0."
          },
          {
            "name": "RequiredDomain",
            "value": "RequiredDomain",
            "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1."
          },
          {
            "name": "PreferredPrimaryDomain",
            "value": "PreferredPrimaryDomain",
            "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2."
          },
          {
            "name": "RequiredDomainDistribution",
            "value": "RequiredDomainDistribution",
            "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3."
          },
          {
            "name": "NonPartiallyPlaceService",
            "value": "NonPartiallyPlaceService",
            "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4."
          }
        ]
      }
    },
    "ServicePlacementPreferPrimaryDomainPolicy": {
      "type": "object",
      "description": "Describes the policy to be used for placement of a Service Fabric service where the service's\nPrimary replicas should optimally be placed in a particular domain.\n\nThis placement policy is usually used with fault domains in scenarios where the Service Fabric\ncluster is geographically distributed in order to indicate that a service's primary replica should\nbe located in a particular fault domain, which in geo-distributed scenarios usually aligns with regional\nor datacenter boundaries. Note that since this is an optimization it is possible that the Primary replica\nmay not end up located in this domain due to failures, capacity limits, or other constraints.",
      "properties": {
        "domainName": {
          "type": "string",
          "description": "The name of the domain that should used for placement as per this policy."
        }
      },
      "required": [
        "domainName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ServicePlacementPolicy"
        }
      ],
      "x-ms-discriminator-value": "PreferredPrimaryDomain"
    },
    "ServicePlacementRequireDomainDistributionPolicy": {
      "type": "object",
      "description": "Describes the policy to be used for placement of a Service Fabric service where two replicas\nfrom the same partition should never be placed in the same fault or upgrade domain.\n\nWhile this is not common it can expose the service to an increased risk of concurrent failures\ndue to unplanned outages or other cases of subsequent/concurrent failures. As an example, consider\na case where replicas are deployed across different data center, with one replica per location.\nIn the event that one of the datacenters goes offline, normally the replica that was placed in that\ndatacenter will be packed into one of the remaining datacenters. If this is not desirable then this\npolicy should be set.",
      "properties": {
        "domainName": {
          "type": "string",
          "description": "The name of the domain that should used for placement as per this policy."
        }
      },
      "required": [
        "domainName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ServicePlacementPolicy"
        }
      ],
      "x-ms-discriminator-value": "RequiredDomainDistribution"
    },
    "ServicePlacementRequiredDomainPolicy": {
      "type": "object",
      "description": "Describes the policy to be used for placement of a Service Fabric service where the instances or replicas of that service must be placed in a particular domain.",
      "properties": {
        "domainName": {
          "type": "string",
          "description": "The name of the domain that should used for placement as per this policy."
        }
      },
      "required": [
        "domainName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ServicePlacementPolicy"
        }
      ],
      "x-ms-discriminator-value": "RequiredDomain"
    },
    "ServiceResource": {
      "type": "object",
      "description": "The service resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServiceResourceProperties",
          "description": "The service resource properties."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ServiceResourceList": {
      "type": "object",
      "description": "The list of service resources.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ServiceResource items on this page",
          "items": {
            "$ref": "#/definitions/ServiceResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ServiceResourceProperties": {
      "type": "object",
      "description": "The service resource properties.",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The current deployment or provisioning state, which only appears in the response",
          "readOnly": true
        },
        "serviceKind": {
          "$ref": "#/definitions/ServiceKind",
          "description": "The kind of service (Stateless or Stateful)."
        },
        "serviceTypeName": {
          "type": "string",
          "description": "The name of the service type"
        },
        "partitionDescription": {
          "$ref": "#/definitions/Partition",
          "description": "Describes how the service is partitioned."
        },
        "servicePackageActivationMode": {
          "$ref": "#/definitions/ServicePackageActivationMode",
          "description": "The activation Mode of the service package"
        },
        "serviceDnsName": {
          "type": "string",
          "description": "Dns name used for the service. If this is specified, then the DNS name can be used to return the IP addresses of service endpoints for application layer protocols (e.g., HTTP).\nWhen updating serviceDnsName, old name may be temporarily resolvable. However, rely on new name.\nWhen removing serviceDnsName, removed name may temporarily be resolvable. Do not rely on the name being unresolvable."
        }
      },
      "discriminator": "serviceKind",
      "required": [
        "serviceKind",
        "serviceTypeName",
        "partitionDescription"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResourcePropertiesBase"
        }
      ]
    },
    "ServiceResourcePropertiesBase": {
      "type": "object",
      "description": "The common service resource properties.",
      "properties": {
        "placementConstraints": {
          "type": "string",
          "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
        },
        "correlationScheme": {
          "type": "array",
          "description": "A list that describes the correlation of the service with other services.",
          "items": {
            "$ref": "#/definitions/ServiceCorrelation"
          },
          "x-ms-identifiers": []
        },
        "serviceLoadMetrics": {
          "type": "array",
          "description": "The service load metrics is given as an array of ServiceLoadMetric objects.",
          "items": {
            "$ref": "#/definitions/ServiceLoadMetric"
          },
          "x-ms-identifiers": []
        },
        "servicePlacementPolicies": {
          "type": "array",
          "description": "A list that describes the correlation of the service with other services.",
          "items": {
            "$ref": "#/definitions/ServicePlacementPolicy"
          },
          "x-ms-identifiers": []
        },
        "defaultMoveCost": {
          "$ref": "#/definitions/MoveCost",
          "description": "Specifies the move cost for the service."
        },
        "scalingPolicies": {
          "type": "array",
          "description": "Scaling policies for this service.",
          "items": {
            "$ref": "#/definitions/ScalingPolicy"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ServiceScalingMechanismKind": {
      "type": "string",
      "description": "Enumerates the ways that a service can be partitioned.",
      "enum": [
        "ScalePartitionInstanceCount",
        "AddRemoveIncrementalNamedPartition"
      ],
      "x-ms-enum": {
        "name": "ServiceScalingMechanismKind",
        "modelAsString": true,
        "values": [
          {
            "name": "ScalePartitionInstanceCount",
            "value": "ScalePartitionInstanceCount",
            "description": "Represents a scaling mechanism for adding or removing instances of stateless service partition. The value is 0."
          },
          {
            "name": "AddRemoveIncrementalNamedPartition",
            "value": "AddRemoveIncrementalNamedPartition",
            "description": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. The value is 1."
          }
        ]
      }
    },
    "ServiceScalingTriggerKind": {
      "type": "string",
      "description": "Enumerates the ways that a service can be partitioned.",
      "enum": [
        "AveragePartitionLoadTrigger",
        "AverageServiceLoadTrigger"
      ],
      "x-ms-enum": {
        "name": "ServiceScalingTriggerKind",
        "modelAsString": true,
        "values": [
          {
            "name": "AveragePartitionLoadTrigger",
            "value": "AveragePartitionLoadTrigger",
            "description": "Represents a scaling trigger related to an average load of a metric/resource of a partition. The value is 0."
          },
          {
            "name": "AverageServiceLoadTrigger",
            "value": "AverageServiceLoadTrigger",
            "description": "Represents a scaling policy related to an average load of a metric/resource of a service. The value is 1."
          }
        ]
      }
    },
    "ServiceTypeHealthPolicy": {
      "type": "object",
      "description": "Represents the health policy used to evaluate the health of services belonging to a service type.",
      "properties": {
        "maxPercentUnhealthyServices": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.",
          "minimum": 0,
          "maximum": 100
        },
        "maxPercentUnhealthyPartitionsPerService": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.",
          "minimum": 0,
          "maximum": 100
        },
        "maxPercentUnhealthyReplicasPerPartition": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.",
          "minimum": 0,
          "maximum": 100
        }
      },
      "required": [
        "maxPercentUnhealthyServices",
        "maxPercentUnhealthyPartitionsPerService",
        "maxPercentUnhealthyReplicasPerPartition"
      ]
    },
    "ServiceUpdateParameters": {
      "type": "object",
      "description": "Service update request",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Service update parameters",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SettingsParameterDescription": {
      "type": "object",
      "description": "Describes a parameter in fabric settings of the cluster.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The parameter name of fabric setting."
        },
        "value": {
          "type": "string",
          "description": "The parameter value of fabric setting."
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "SettingsSectionDescription": {
      "type": "object",
      "description": "Describes a section in the fabric settings of the cluster.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The section name of the fabric settings."
        },
        "parameters": {
          "type": "array",
          "description": "The collection of parameters in the section.",
          "items": {
            "$ref": "#/definitions/SettingsParameterDescription"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "required": [
        "name",
        "parameters"
      ]
    },
    "SfmcOperationStatus": {
      "type": "string",
      "description": "Sfmc operation status.",
      "enum": [
        "Created",
        "Started",
        "Succeeded",
        "Failed",
        "Aborted",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "SfmcOperationStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Created",
            "value": "Created",
            "description": "Operation created."
          },
          {
            "name": "Started",
            "value": "Started",
            "description": "Operation started."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Operation succeeded."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Operation failed."
          },
          {
            "name": "Aborted",
            "value": "Aborted",
            "description": "Operation aborted."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Operation canceled."
          }
        ]
      },
      "readOnly": true
    },
    "SingletonPartitionScheme": {
      "type": "object",
      "description": "Describes the partition scheme of a singleton-partitioned, or non-partitioned service.",
      "allOf": [
        {
          "$ref": "#/definitions/Partition"
        }
      ],
      "x-ms-discriminator-value": "Singleton"
    },
    "Sku": {
      "type": "object",
      "description": "Service Fabric managed cluster Sku definition",
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuName",
          "description": "Sku Name."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuName": {
      "type": "string",
      "description": "Sku Name.",
      "enum": [
        "Basic",
        "Standard"
      ],
      "x-ms-enum": {
        "name": "SkuName",
        "modelAsString": true,
        "values": [
          {
            "name": "Basic",
            "value": "Basic",
            "description": "Basic requires a minimum of 3 nodes and allows only 1 node type."
          },
          {
            "name": "Standard",
            "value": "Standard",
            "description": "Requires a minimum of 5 nodes and allows 1 or more node type."
          }
        ]
      }
    },
    "StatefulServiceProperties": {
      "type": "object",
      "description": "The properties of a stateful service resource.",
      "properties": {
        "hasPersistedState": {
          "type": "boolean",
          "description": "A flag indicating whether this is a persistent service which stores states on the local disk. If it is then the value of this property is true, if not it is false."
        },
        "targetReplicaSetSize": {
          "type": "integer",
          "format": "int32",
          "description": "The target replica set size as a number.",
          "minimum": 1
        },
        "minReplicaSetSize": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum replica set size as a number.",
          "minimum": 1
        },
        "replicaRestartWaitDuration": {
          "type": "string",
          "description": "The duration between when a replica goes down and when a new replica is created, represented in ISO 8601 format \"hh:mm:ss\".",
          "x-ms-format": "duration-constant"
        },
        "quorumLossWaitDuration": {
          "type": "string",
          "description": "The maximum duration for which a partition is allowed to be in a state of quorum loss, represented in ISO 8601 format \"hh:mm:ss\".",
          "x-ms-format": "duration-constant"
        },
        "standByReplicaKeepDuration": {
          "type": "string",
          "description": "The definition on how long StandBy replicas should be maintained before being removed, represented in ISO 8601 format \"hh:mm:ss\".",
          "x-ms-format": "duration-constant"
        },
        "servicePlacementTimeLimit": {
          "type": "string",
          "description": "The duration for which replicas can stay InBuild before reporting that build is stuck, represented in ISO 8601 format \"hh:mm:ss\".",
          "x-ms-format": "duration-constant"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "Stateful"
    },
    "StatelessServiceProperties": {
      "type": "object",
      "description": "The properties of a stateless service resource.",
      "properties": {
        "instanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "The instance count.",
          "minimum": -1
        },
        "minInstanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "MinInstanceCount is the minimum number of instances that must be up to meet the EnsureAvailability safety check during operations like upgrade or deactivate node. The actual number that is used is max( MinInstanceCount, ceil( MinInstancePercentage/100.0 * InstanceCount) ). Note, if InstanceCount is set to -1, during MinInstanceCount computation -1 is first converted into the number of nodes on which the instances are allowed to be placed according to the placement constraints on the service."
        },
        "minInstancePercentage": {
          "type": "integer",
          "format": "int32",
          "description": "MinInstancePercentage is the minimum percentage of InstanceCount that must be up to meet the EnsureAvailability safety check during operations like upgrade or deactivate node. The actual number that is used is max( MinInstanceCount, ceil( MinInstancePercentage/100.0 * InstanceCount) ). Note, if InstanceCount is set to -1, during MinInstancePercentage computation, -1 is first converted into the number of nodes on which the instances are allowed to be placed according to the placement constraints on the service."
        }
      },
      "required": [
        "instanceCount"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "Stateless"
    },
    "SubResource": {
      "type": "object",
      "description": "Azure resource identifier.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource identifier."
        }
      },
      "x-ms-azure-resource": true
    },
    "Subnet": {
      "type": "object",
      "description": "Describes a Subnet.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Subnet name."
        },
        "enableIpv6": {
          "type": "boolean",
          "description": "Indicates wether to enable Ipv6 or not. If not provided, it will take the same configuration as the cluster."
        },
        "privateEndpointNetworkPolicies": {
          "$ref": "#/definitions/PrivateEndpointNetworkPolicies",
          "description": "Enable or Disable apply network policies on private end point in the subnet."
        },
        "privateLinkServiceNetworkPolicies": {
          "$ref": "#/definitions/PrivateLinkServiceNetworkPolicies",
          "description": "Enable or Disable apply network policies on private link service in the subnet."
        },
        "networkSecurityGroupId": {
          "type": "string",
          "description": "Full resource id for the network security group."
        }
      },
      "required": [
        "name"
      ]
    },
    "UniformInt64RangePartitionScheme": {
      "type": "object",
      "description": "Describes a partitioning scheme where an integer range is allocated evenly across a number of partitions.",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of partitions."
        },
        "lowKey": {
          "type": "integer",
          "format": "int64",
          "description": "The lower bound of the partition key range that\nshould be split between the partition ‘Count’"
        },
        "highKey": {
          "type": "integer",
          "format": "int64",
          "description": "The upper bound of the partition key range that\nshould be split between the partition ‘Count’"
        }
      },
      "required": [
        "count",
        "lowKey",
        "highKey"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Partition"
        }
      ],
      "x-ms-discriminator-value": "UniformInt64Range"
    },
    "UpdateType": {
      "type": "string",
      "description": "Specifies the way the operation will be performed.",
      "enum": [
        "Default",
        "ByUpgradeDomain"
      ],
      "x-ms-enum": {
        "name": "UpdateType",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "Default",
            "description": "The operation will proceed in all specified nodes at the same time."
          },
          {
            "name": "ByUpgradeDomain",
            "value": "ByUpgradeDomain",
            "description": "The operation will proceed one upgrade domain at a time, checking the health in between each to continue."
          }
        ]
      }
    },
    "UserAssignedIdentity": {
      "type": "object",
      "description": "User assigned identity.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal id of user assigned identity.",
          "readOnly": true
        },
        "clientId": {
          "type": "string",
          "description": "The client id of user assigned identity.",
          "readOnly": true
        }
      }
    },
    "VMSSExtension": {
      "type": "object",
      "description": "Specifies set of extensions that should be installed onto the virtual machines.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the extension."
        },
        "properties": {
          "$ref": "#/definitions/VMSSExtensionProperties",
          "description": "Describes the properties of a Virtual Machine Scale Set Extension.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "name",
        "properties"
      ]
    },
    "VMSSExtensionProperties": {
      "type": "object",
      "description": "Describes the properties of a Virtual Machine Scale Set Extension.",
      "properties": {
        "publisher": {
          "type": "string",
          "description": "The name of the extension handler publisher."
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Specifies the version of the script handler."
        },
        "autoUpgradeMinorVersion": {
          "type": "boolean",
          "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
        },
        "settings": {
          "type": "object",
          "description": "Json formatted public settings for the extension."
        },
        "protectedSettings": {
          "type": "object",
          "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
        },
        "forceUpdateTag": {
          "type": "string",
          "description": "If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed."
        },
        "provisionAfterExtensions": {
          "type": "array",
          "description": "Collection of extension names after which this extension needs to be provisioned.",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state, which only appears in the response.",
          "readOnly": true
        },
        "enableAutomaticUpgrade": {
          "type": "boolean",
          "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available."
        },
        "setupOrder": {
          "type": "array",
          "description": "Indicates the setup order for the extension.",
          "items": {
            "$ref": "#/definitions/VmssExtensionSetupOrder"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "publisher",
        "type",
        "typeHandlerVersion"
      ]
    },
    "VMSize": {
      "type": "object",
      "description": "VM Sizes properties.",
      "properties": {
        "size": {
          "type": "string",
          "description": "VM Size name.",
          "readOnly": true
        }
      }
    },
    "VaultCertificate": {
      "type": "object",
      "description": "Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.",
      "properties": {
        "certificateUrl": {
          "type": "string",
          "description": "This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add)."
        },
        "certificateStore": {
          "type": "string",
          "description": "For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name {UppercaseThumbprint}.crt for the X509 certificate file and {UppercaseThumbprint}.prv for private key. Both of these files are .pem formatted."
        }
      },
      "required": [
        "certificateUrl",
        "certificateStore"
      ]
    },
    "VaultSecretGroup": {
      "type": "object",
      "description": "Specifies set of certificates that should be installed onto the virtual machines.",
      "properties": {
        "sourceVault": {
          "$ref": "#/definitions/SubResource",
          "description": "The relative URL of the Key Vault containing all of the certificates in VaultCertificates."
        },
        "vaultCertificates": {
          "type": "array",
          "description": "The list of key vault references in SourceVault which contain certificates.",
          "items": {
            "$ref": "#/definitions/VaultCertificate"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "sourceVault",
        "vaultCertificates"
      ]
    },
    "VmApplication": {
      "type": "object",
      "description": "Specifies the gallery application that should be made available to the underlying VMSS.",
      "properties": {
        "configurationReference": {
          "type": "string",
          "format": "uri",
          "description": "Optional, Specifies the uri to an azure blob that will replace the default configuration for the package if provided."
        },
        "enableAutomaticUpgrade": {
          "type": "boolean",
          "description": "If set to true, when a new Gallery Application version is available in PIR/SIG, it will be automatically updated for the underlying VMSS."
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "description": "Optional, Specifies the order in which the packages have to be installed."
        },
        "packageReferenceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Specifies the GalleryApplicationVersion resource id on the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Compute/galleries/applications/versions"
              }
            ]
          }
        },
        "vmGalleryTags": {
          "type": "string",
          "description": "Optional, Specifies a passthrough value for more generic context. Accepts a JSON-formatted string e.g. '{\"Tag1\":\"Value1\",\"Tag2\":\"Value2\"}'."
        },
        "treatFailureAsDeploymentFailure": {
          "type": "boolean",
          "description": "Optional, If true, any failure for any operation in the VmApplication will fail the deployment."
        }
      },
      "required": [
        "packageReferenceId"
      ]
    },
    "VmImagePlan": {
      "type": "object",
      "description": "Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started. Enter any required information and then click Save.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The plan ID."
        },
        "product": {
          "type": "string",
          "description": "Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element."
        },
        "promotionCode": {
          "type": "string",
          "description": "The promotion code."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher ID."
        }
      }
    },
    "VmManagedIdentity": {
      "type": "object",
      "description": "Identities for the virtual machine scale set under the node type.",
      "properties": {
        "userAssignedIdentities": {
          "type": "array",
          "description": "The list of user identities associated with the virtual machine scale set under the node type. Each entry will be an ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VmSetupAction": {
      "type": "string",
      "description": "action to be performed on the vms before bootstrapping the service fabric runtime.",
      "enum": [
        "EnableContainers",
        "EnableHyperV"
      ],
      "x-ms-enum": {
        "name": "VmSetupAction",
        "modelAsString": true,
        "values": [
          {
            "name": "EnableContainers",
            "value": "EnableContainers",
            "description": "Enable windows containers feature."
          },
          {
            "name": "EnableHyperV",
            "value": "EnableHyperV",
            "description": "Enables windows HyperV feature."
          }
        ]
      }
    },
    "VmssDataDisk": {
      "type": "object",
      "description": "Managed data disk description.",
      "properties": {
        "lun": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. Lun 0 is reserved for the service fabric data disk.",
          "minimum": 1
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "Disk size for each vm in the node type in GBs."
        },
        "diskType": {
          "type": "string",
          "description": "Managed data disk type. Specifies the storage account type for the managed disk",
          "default": "StandardSSD_LRS",
          "enum": [
            "Standard_LRS",
            "StandardSSD_LRS",
            "Premium_LRS",
            "PremiumV2_LRS",
            "StandardSSD_ZRS",
            "Premium_ZRS"
          ],
          "x-ms-enum": {
            "name": "DiskType",
            "modelAsString": true,
            "values": [
              {
                "name": "Standard_LRS",
                "value": "Standard_LRS",
                "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
              },
              {
                "name": "StandardSSD_LRS",
                "value": "StandardSSD_LRS",
                "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
              },
              {
                "name": "Premium_LRS",
                "value": "Premium_LRS",
                "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
              },
              {
                "name": "PremiumV2_LRS",
                "value": "PremiumV2_LRS",
                "description": "Premium SSD V2 locally redundant storage. Best for production and performance sensitive workloads that consistently require low latency and high IOPS and throughput."
              },
              {
                "name": "StandardSSD_ZRS",
                "value": "StandardSSD_ZRS",
                "description": "Standard SSD zone redundant storage. Best for web servers, lightly used enterprise applications and dev/test that need storage resiliency against zone failures."
              },
              {
                "name": "Premium_ZRS",
                "value": "Premium_ZRS",
                "description": "Premium SSD zone redundant storage. Best for production workloads that need storage resiliency against zone failures."
              }
            ]
          }
        },
        "diskLetter": {
          "type": "string",
          "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created.",
          "pattern": "^[a-zA-Z]{1}$"
        }
      },
      "required": [
        "lun",
        "diskSizeGB",
        "diskType",
        "diskLetter"
      ]
    },
    "VmssExtensionSetupOrder": {
      "type": "string",
      "description": "Vm extension setup order.",
      "enum": [
        "BeforeSFRuntime"
      ],
      "x-ms-enum": {
        "name": "VmssExtensionSetupOrder",
        "modelAsString": true,
        "values": [
          {
            "name": "BeforeSFRuntime",
            "value": "BeforeSFRuntime",
            "description": "Indicates that the vm extension should run before the service fabric runtime starts."
          }
        ]
      }
    },
    "ZonalUpdateMode": {
      "type": "string",
      "description": "Indicates the update mode for Cross Az clusters.",
      "enum": [
        "Standard",
        "Fast"
      ],
      "x-ms-enum": {
        "name": "ZonalUpdateMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Standard",
            "value": "Standard",
            "description": "The cluster will use 5 upgrade domains for Cross Az Node types."
          },
          {
            "name": "Fast",
            "value": "Fast",
            "description": "The cluster will use a maximum of 3 upgrade domains per zone instead of 5 for Cross Az Node types for faster deployments."
          }
        ]
      }
    },
    "ZoneFaultSimulationContent": {
      "type": "object",
      "description": "Parameters for Zone Fault Simulation action.",
      "properties": {
        "zones": {
          "type": "array",
          "description": "Indicates the zones of the fault simulation.",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FaultSimulationContent"
        }
      ],
      "x-ms-discriminator-value": "Zone"
    }
  },
  "parameters": {}
}
