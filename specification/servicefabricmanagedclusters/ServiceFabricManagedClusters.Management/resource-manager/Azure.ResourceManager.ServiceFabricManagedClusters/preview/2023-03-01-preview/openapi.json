{
  "swagger": "2.0",
  "info": {
    "title": "ServiceFabricManagedClustersManagementClient",
    "version": "2023-03-01-preview",
    "description": "Service Fabric Managed Clusters Management Client",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "ApplicationTypes"
    },
    {
      "name": "ManagedClusters"
    },
    {
      "name": "managedAzResiliencyStatus"
    },
    {
      "name": "ApplicationTypeVersions"
    },
    {
      "name": "Applications"
    },
    {
      "name": "Services"
    },
    {
      "name": "NodeTypes"
    },
    {
      "name": "NodeTypeSkus"
    }
  ],
  "paths": {
    "/providers/Azure.ResourceManager.ServiceFabricManagedClusters/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Azure.ResourceManager.ServiceFabricManagedClusters/managedClusters": {
      "get": {
        "operationId": "ManagedClusters_ListBySubscription",
        "tags": [
          "ManagedClusters"
        ],
        "description": "Gets all Service Fabric cluster resources created or in the process of being created in the subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedClusterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/managedClusterVersions": {
      "get": {
        "operationId": "ManagedClusterVersionOperations_ListByEnvironment",
        "summary": "Gets the list of Service Fabric cluster code versions available for the specified environment.",
        "description": "Gets all available code versions for Service Fabric cluster resources by environment.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "The operating system of the cluster. The default means all.",
            "required": true,
            "type": "string",
            "enum": [
              "Windows"
            ],
            "x-ms-enum": {
              "name": "ManagedClusterVersionEnvironment",
              "modelAsString": true,
              "values": [
                {
                  "name": "Windows",
                  "value": "Windows",
                  "description": "Windows."
                }
              ]
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/managedClusterVersions/{clusterVersion}": {
      "get": {
        "operationId": "ManagedClusterVersionOperations_GetByEnvironment",
        "summary": "Gets information about a Service Fabric cluster code version available for the specified environment.",
        "description": "Gets information about an available Service Fabric cluster code version by environment.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "The operating system of the cluster. The default means all.",
            "required": true,
            "type": "string",
            "enum": [
              "Windows"
            ],
            "x-ms-enum": {
              "name": "ManagedClusterVersionEnvironment",
              "modelAsString": true,
              "values": [
                {
                  "name": "Windows",
                  "value": "Windows",
                  "description": "Windows."
                }
              ]
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterVersion",
            "in": "path",
            "description": "The cluster code version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ManagedClusterCodeVersionResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterVersions": {
      "get": {
        "operationId": "ManagedClusterVersionOperations_List",
        "summary": "Gets the list of Service Fabric cluster code versions available for the specified location.",
        "description": "Gets all available code versions for Service Fabric cluster resources by location.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterVersions/{clusterVersion}": {
      "get": {
        "operationId": "ManagedClusterVersionOperations_Get",
        "summary": "Gets information about a Service Fabric managed cluster code version available in the specified location.",
        "description": "Gets information about an available Service Fabric managed cluster code version.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterVersion",
            "in": "path",
            "description": "The cluster code version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ManagedClusterCodeVersionResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedUnsupportedVMSizes": {
      "get": {
        "operationId": "ManagedUnsupportedVmSizesOperations_List",
        "summary": "Get the lists of unsupported vm sizes for Service Fabric Managed Clusters.",
        "description": "Get the lists of unsupported vm sizes for Service Fabric Managed Clusters.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedManagedVMSize"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedUnsupportedVMSizes/{vmSize}": {
      "get": {
        "operationId": "ManagedUnsupportedVmSizesOperations_Get",
        "summary": "Get unsupported vm size for Service Fabric Managed Clusters.",
        "description": "Get unsupported vm size for Service Fabric Managed Clusters.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vmSize",
            "in": "path",
            "description": "VM Size name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ManagedVMSize"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ServiceFabricManagedClusters/managedClusters": {
      "get": {
        "operationId": "ManagedClusters_ListByResourceGroup",
        "tags": [
          "ManagedClusters"
        ],
        "description": "Gets all Service Fabric cluster resources created or in the process of being created in the resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedClusterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ServiceFabricManagedClusters/managedClusters/{clusterName}": {
      "get": {
        "operationId": "ManagedClusters_Get",
        "tags": [
          "ManagedClusters"
        ],
        "description": "Get a Service Fabric managed cluster resource created or in the process of being created in the specified resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedCluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "ManagedClusters_CreateOrUpdate",
        "tags": [
          "ManagedClusters"
        ],
        "description": "Create or update a Service Fabric managed cluster resource with the specified name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedCluster"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ManagedCluster' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ManagedCluster"
            }
          },
          "201": {
            "description": "Resource 'ManagedCluster' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ManagedCluster"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ManagedClusters_Update",
        "tags": [
          "ManagedClusters"
        ],
        "description": "Update the tags of of a Service Fabric managed cluster resource with the specified name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedClusterUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedCluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "ManagedClusters_Delete",
        "tags": [
          "ManagedClusters"
        ],
        "description": "Delete a Service Fabric managed cluster resource with the specified name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ServiceFabricManagedClusters/managedClusters/{clusterName}/applicationTypes": {
      "get": {
        "operationId": "ApplicationTypes_ListByManagedCluster",
        "tags": [
          "ApplicationTypes"
        ],
        "description": "Gets all application type name resources created or in the process of being created in the Service Fabric managed cluster resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationTypeResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ServiceFabricManagedClusters/managedClusters/{clusterName}/applicationTypes/{applicationTypeName}": {
      "get": {
        "operationId": "ApplicationTypes_Get",
        "tags": [
          "ApplicationTypes"
        ],
        "description": "Get a Service Fabric application type name resource created or in the process of being created in the Service Fabric managed cluster resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationTypeResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "ApplicationTypes_CreateOrUpdate",
        "tags": [
          "ApplicationTypes"
        ],
        "description": "Create or update a Service Fabric managed application type name resource with the specified name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationTypeResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ApplicationTypeResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApplicationTypeResource"
            }
          },
          "201": {
            "description": "Resource 'ApplicationTypeResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApplicationTypeResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "operationId": "ApplicationTypes_Update",
        "tags": [
          "ApplicationTypes"
        ],
        "description": "Updates the tags of an application type resource of a given managed cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationTypeUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationTypeResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "ApplicationTypes_Delete",
        "tags": [
          "ApplicationTypes"
        ],
        "description": "Delete a Service Fabric managed application type name resource with the specified name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ServiceFabricManagedClusters/managedClusters/{clusterName}/applicationTypes/{applicationTypeName}/versions": {
      "get": {
        "operationId": "ApplicationTypeVersions_ListByApplicationTypeResource",
        "tags": [
          "ApplicationTypeVersions"
        ],
        "description": "Gets all application type version resources created or in the process of being created in the Service Fabric managed application type name resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationTypeVersionResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ServiceFabricManagedClusters/managedClusters/{clusterName}/applicationTypes/{applicationTypeName}/versions/{version}": {
      "get": {
        "operationId": "ApplicationTypeVersions_Get",
        "tags": [
          "ApplicationTypeVersions"
        ],
        "description": "Get a Service Fabric managed application type version resource created or in the process of being created in the Service Fabric managed application type name resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The application type version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationTypeVersionResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "ApplicationTypeVersions_CreateOrUpdate",
        "tags": [
          "ApplicationTypeVersions"
        ],
        "description": "Create or update a Service Fabric managed application type version resource with the specified name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The application type version.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationTypeVersionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ApplicationTypeVersionResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApplicationTypeVersionResource"
            }
          },
          "201": {
            "description": "Resource 'ApplicationTypeVersionResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApplicationTypeVersionResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ApplicationTypeVersions_Update",
        "tags": [
          "ApplicationTypeVersions"
        ],
        "description": "Updates the tags of an application type version resource of a given managed cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The application type version.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationTypeVersionUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationTypeVersionResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "ApplicationTypeVersions_Delete",
        "tags": [
          "ApplicationTypeVersions"
        ],
        "description": "Delete a Service Fabric managed application type version resource with the specified name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The application type version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ServiceFabricManagedClusters/managedClusters/{clusterName}/applications": {
      "get": {
        "operationId": "Applications_ListByManagedCluster",
        "tags": [
          "Applications"
        ],
        "description": "Gets all managed application resources created or in the process of being created in the Service Fabric cluster resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ServiceFabricManagedClusters/managedClusters/{clusterName}/applications/{applicationName}": {
      "get": {
        "operationId": "Applications_Get",
        "tags": [
          "Applications"
        ],
        "description": "Get a Service Fabric managed application resource created or in the process of being created in the Service Fabric cluster resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Applications_CreateOrUpdate",
        "tags": [
          "Applications"
        ],
        "description": "Create or update a Service Fabric managed application resource with the specified name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ApplicationResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApplicationResource"
            }
          },
          "201": {
            "description": "Resource 'ApplicationResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApplicationResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Applications_Update",
        "tags": [
          "Applications"
        ],
        "description": "Updates the tags of an application resource of a given managed cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Applications_Delete",
        "tags": [
          "Applications"
        ],
        "description": "Delete a Service Fabric managed application resource with the specified name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ServiceFabricManagedClusters/managedClusters/{clusterName}/applications/{applicationName}/services": {
      "get": {
        "operationId": "Services_ListByApplicationResource",
        "tags": [
          "Services"
        ],
        "description": "Gets all service resources created or in the process of being created in the Service Fabric managed application resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ServiceFabricManagedClusters/managedClusters/{clusterName}/applications/{applicationName}/services/{serviceName}": {
      "get": {
        "operationId": "Services_Get",
        "tags": [
          "Services"
        ],
        "description": "Get a Service Fabric service resource created or in the process of being created in the Service Fabric managed application resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the service resource in the format of {applicationName}~{serviceName}.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Services_CreateOrUpdate",
        "tags": [
          "Services"
        ],
        "description": "Create or update a Service Fabric managed service resource with the specified name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the service resource in the format of {applicationName}~{serviceName}.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ServiceResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ServiceResource"
            }
          },
          "201": {
            "description": "Resource 'ServiceResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ServiceResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Services_Update",
        "tags": [
          "Services"
        ],
        "description": "Updates the tags of a service resource of a given managed cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the service resource in the format of {applicationName}~{serviceName}.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Services_Delete",
        "tags": [
          "Services"
        ],
        "description": "Delete a Service Fabric managed service resource with the specified name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the service resource in the format of {applicationName}~{serviceName}.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ServiceFabricManagedClusters/managedClusters/{clusterName}/get": {
      "post": {
        "operationId": "ManagedAzResiliencyStatus_Get",
        "tags": [
          "managedAzResiliencyStatus"
        ],
        "description": "Action to get Az Resiliency Status of all the Base resources constituting Service Fabric Managed Clusters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedAzResiliencyStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ServiceFabricManagedClusters/managedClusters/{clusterName}/nodeTypes": {
      "get": {
        "operationId": "NodeTypes_ListByManagedCluster",
        "tags": [
          "NodeTypes"
        ],
        "description": "Gets all Node types of the specified managed cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NodeTypeListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ServiceFabricManagedClusters/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}": {
      "get": {
        "operationId": "NodeTypes_Get",
        "tags": [
          "NodeTypes"
        ],
        "description": "Get a Service Fabric node type of a given managed cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NodeType"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "NodeTypes_CreateOrUpdate",
        "tags": [
          "NodeTypes"
        ],
        "description": "Create or update a Service Fabric node type of a given managed cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NodeType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NodeType' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NodeType"
            }
          },
          "201": {
            "description": "Resource 'NodeType' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/NodeType"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "NodeTypes_Update",
        "tags": [
          "NodeTypes"
        ],
        "description": "Update the configuration of a node type of a given managed cluster, only updating tags.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NodeTypeUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NodeType"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "NodeTypes_Delete",
        "tags": [
          "NodeTypes"
        ],
        "description": "Delete a Service Fabric node type of a given managed cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ServiceFabricManagedClusters/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/deleteNode": {
      "post": {
        "operationId": "NodeTypes_DeleteNode",
        "tags": [
          "NodeTypes"
        ],
        "description": "Deletes one or more nodes on the node type. It will disable the fabric nodes, trigger a delete on the VMs and removes the state from the cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NodeTypeActionParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ServiceFabricManagedClusters/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/reimage": {
      "post": {
        "operationId": "NodeTypes_Reimage",
        "tags": [
          "NodeTypes"
        ],
        "description": "Reimages one or more nodes on the node type. It will disable the fabric nodes, trigger a reimage on the VMs and activate the nodes back again.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NodeTypeActionParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ServiceFabricManagedClusters/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/restart": {
      "post": {
        "operationId": "NodeTypes_Restart",
        "tags": [
          "NodeTypes"
        ],
        "description": "Restarts one or more nodes on the node type. It will disable the fabric nodes, trigger a restart on the VMs and activate the nodes back again.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NodeTypeActionParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/skus/{subscriptionId}/{resourceGroupName}/{clusterName}/{nodeTypeName}": {
      "get": {
        "operationId": "NodeTypeSkus_List",
        "tags": [
          "NodeTypeSkus"
        ],
        "summary": "Gets a Service Fabric node type SKUs.",
        "description": "Get a Service Fabric node type supported SKUs.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedNodeTypeAvailableSku"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "Access": {
      "type": "string",
      "enum": [
        "allow",
        "deny"
      ],
      "x-ms-enum": {
        "name": "Access",
        "modelAsString": true
      }
    },
    "AddRemoveIncrementalNamedPartitionScalingMechanism": {
      "type": "object",
      "description": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. Partition names are in the format '0','1'...'N-1'.",
      "properties": {
        "minPartitionCount": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum number of named partitions of the service."
        },
        "maxPartitionCount": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of named partitions of the service."
        },
        "scaleIncrement": {
          "type": "integer",
          "format": "int32",
          "description": "The number of instances to add or remove during a scaling operation."
        }
      },
      "required": [
        "minPartitionCount",
        "maxPartitionCount",
        "scaleIncrement"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ScalingMechanism"
        }
      ],
      "x-ms-discriminator-value": "AddRemoveIncrementalNamedPartition"
    },
    "ApplicationHealthPolicy": {
      "type": "object",
      "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
      "properties": {
        "considerWarningAsError": {
          "type": "boolean",
          "description": "Indicates whether warnings are treated with the same severity as errors."
        },
        "maxPercentUnhealthyDeployedApplications": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n"
        },
        "defaultServiceTypeHealthPolicy": {
          "$ref": "#/definitions/ServiceTypeHealthPolicy",
          "description": "The health policy used by default to evaluate the health of a service type."
        },
        "serviceTypeHealthPolicyMap": {
          "type": "object",
          "description": "The map with service type health policy per service type name. The map is empty by default.",
          "additionalProperties": {
            "$ref": "#/definitions/ServiceTypeHealthPolicy"
          }
        }
      },
      "required": [
        "considerWarningAsError",
        "maxPercentUnhealthyDeployedApplications"
      ]
    },
    "ApplicationResource": {
      "type": "object",
      "description": "The application resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApplicationResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the application resource.",
          "readOnly": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ApplicationResourceListResult": {
      "type": "object",
      "description": "The response of a ApplicationResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ApplicationResource items on this page",
          "items": {
            "$ref": "#/definitions/ApplicationResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ApplicationResourceProperties": {
      "type": "object",
      "description": "The application resource properties.",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The current deployment or provisioning state, which only appears in the response",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "The version of the application type as defined in the application manifest.\nThis name must be the full Arm Resource ID for the referenced application type version.\n"
        },
        "parameters": {
          "type": "object",
          "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "upgradePolicy": {
          "$ref": "#/definitions/ApplicationUpgradePolicy",
          "description": "Describes the policy for a monitored application upgrade."
        },
        "managedIdentities": {
          "type": "array",
          "description": "List of user assigned identities for the application, each mapped to a friendly name.",
          "items": {
            "$ref": "#/definitions/ApplicationUserAssignedIdentity"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ApplicationTypeResource": {
      "type": "object",
      "description": "The application type name resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApplicationTypeResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the application type name resource.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ApplicationTypeResourceListResult": {
      "type": "object",
      "description": "The response of a ApplicationTypeResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ApplicationTypeResource items on this page",
          "items": {
            "$ref": "#/definitions/ApplicationTypeResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ApplicationTypeResourceProperties": {
      "type": "object",
      "description": "The application type name properties",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The current deployment or provisioning state, which only appears in the response.",
          "readOnly": true
        }
      }
    },
    "ApplicationTypeUpdateParameters": {
      "type": "object",
      "description": "Application type update request",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Application type update parameters",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ApplicationTypeVersionResource": {
      "type": "object",
      "description": "An application type version resource for the specified application type name resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApplicationTypeVersionResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The application type version.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ApplicationTypeVersionResourceListResult": {
      "type": "object",
      "description": "The response of a ApplicationTypeVersionResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ApplicationTypeVersionResource items on this page",
          "items": {
            "$ref": "#/definitions/ApplicationTypeVersionResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ApplicationTypeVersionResourceProperties": {
      "type": "object",
      "description": "The properties of the application type version resource.",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The current deployment or provisioning state, which only appears in the response",
          "readOnly": true
        },
        "appPackageUrl": {
          "type": "string",
          "description": "The URL to the application package"
        }
      },
      "required": [
        "appPackageUrl"
      ]
    },
    "ApplicationTypeVersionUpdateParameters": {
      "type": "object",
      "description": "Application type version update request",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Application type version update parameters",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ApplicationTypeVersionsCleanupPolicy": {
      "type": "object",
      "description": "The policy used to clean up unused versions. When the policy is not specified explicitly, the default unused application versions to keep will be 3.",
      "properties": {
        "maxUnusedVersionsToKeep": {
          "type": "integer",
          "format": "int32",
          "description": "Number of unused versions per application type to keep."
        }
      },
      "required": [
        "maxUnusedVersionsToKeep"
      ]
    },
    "ApplicationUpdateParameters": {
      "type": "object",
      "description": "Application update request",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Application update parameters",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ApplicationUpgradePolicy": {
      "type": "object",
      "description": "Describes the policy for a monitored application upgrade.",
      "properties": {
        "applicationHealthPolicy": {
          "$ref": "#/definitions/ApplicationHealthPolicy",
          "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n"
        },
        "forceRestart": {
          "type": "boolean",
          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
        },
        "rollingUpgradeMonitoringPolicy": {
          "$ref": "#/definitions/RollingUpgradeMonitoringPolicy",
          "description": "The policy used for monitoring the application upgrade"
        },
        "instanceCloseDelayDuration": {
          "type": "integer",
          "format": "int32",
          "description": "Duration in seconds, to wait before a stateless instance is closed, to allow the active requests to drain gracefully. This would be effective when the instance is closing during the application/cluster upgrade, only for those instances which have a non-zero delay duration configured in the service description."
        },
        "upgradeMode": {
          "$ref": "#/definitions/RollingUpgradeMode",
          "description": "The mode used to monitor health during a rolling upgrade. The values are Monitored, and UnmonitoredAuto."
        },
        "upgradeReplicaSetCheckTimeout": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer)."
        },
        "recreateApplication": {
          "type": "boolean",
          "description": "Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed."
        }
      }
    },
    "ApplicationUserAssignedIdentity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The friendly name of user assigned identity."
        },
        "principalId": {
          "type": "string",
          "description": "The principal id of user assigned identity."
        }
      },
      "required": [
        "name",
        "principalId"
      ]
    },
    "AvailableOperationDisplay": {
      "type": "object",
      "description": "Operation supported by the Service Fabric resource provider",
      "properties": {
        "provider": {
          "type": "string",
          "description": "The name of the provider."
        },
        "resource": {
          "type": "string",
          "description": "The resource on which the operation is performed"
        },
        "operation": {
          "type": "string",
          "description": "The operation that can be performed."
        },
        "description": {
          "type": "string",
          "description": "Operation description"
        }
      }
    },
    "AveragePartitionLoadScalingTrigger": {
      "type": "object",
      "description": "Represents a scaling trigger related to an average load of a metric/resource of a partition.",
      "properties": {
        "metricName": {
          "type": "string",
          "description": "The name of the metric for which usage should be tracked."
        },
        "lowerLoadThreshold": {
          "type": "number",
          "format": "float",
          "description": "The lower limit of the load below which a scale in operation should be performed."
        },
        "upperLoadThreshold": {
          "type": "number",
          "format": "float",
          "description": "The upper limit of the load beyond which a scale out operation should be performed."
        },
        "scaleInterval": {
          "type": "string",
          "description": "The period in seconds on which a decision is made whether to scale or not. This property should come in ISO 8601 format \"hh:mm:ss\"."
        }
      },
      "required": [
        "metricName",
        "lowerLoadThreshold",
        "upperLoadThreshold",
        "scaleInterval"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ScalingTrigger"
        }
      ],
      "x-ms-discriminator-value": "AveragePartitionLoadTrigger"
    },
    "AverageServiceLoadScalingTrigger": {
      "type": "object",
      "description": "Represents a scaling policy related to an average load of a metric/resource of a service.",
      "properties": {
        "metricName": {
          "type": "string",
          "description": "The name of the metric for which usage should be tracked."
        },
        "lowerLoadThreshold": {
          "type": "number",
          "format": "float",
          "description": "The lower limit of the load below which a scale in operation should be performed."
        },
        "upperLoadThreshold": {
          "type": "number",
          "format": "float",
          "description": "The upper limit of the load beyond which a scale out operation should be performed."
        },
        "scaleInterval": {
          "type": "string",
          "description": "The period in seconds on which a decision is made whether to scale or not. This property should come in ISO 8601 format \"hh:mm:ss\"."
        },
        "useOnlyPrimaryLoad": {
          "type": "boolean",
          "description": "Flag determines whether only the load of primary replica should be considered for scaling. If set to true, then trigger will only consider the load of primary replicas of stateful service. If set to false, trigger will consider load of all replicas. This parameter cannot be set to true for stateless service."
        }
      },
      "required": [
        "metricName",
        "lowerLoadThreshold",
        "upperLoadThreshold",
        "scaleInterval",
        "useOnlyPrimaryLoad"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ScalingTrigger"
        }
      ],
      "x-ms-discriminator-value": "AverageServiceLoadTrigger"
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Azure.ResourceManager.Foundations.UserAssignedIdentity": {
      "type": "object",
      "description": "A managed identity assigned by the user.",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The active directory client identifier for this principal."
        },
        "principalId": {
          "type": "string",
          "description": "The active directory identifier for this principal."
        }
      }
    },
    "AzureActiveDirectory": {
      "type": "object",
      "description": "The settings to enable AAD authentication on the cluster.",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Azure active directory tenant id."
        },
        "clusterApplication": {
          "type": "string",
          "description": "Azure active directory cluster application id."
        },
        "clientApplication": {
          "type": "string",
          "description": "Azure active directory client application id."
        }
      }
    },
    "ClientCertificate": {
      "type": "object",
      "description": "Client certificate definition.",
      "properties": {
        "isAdmin": {
          "type": "boolean",
          "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
        },
        "thumbprint": {
          "type": "string",
          "description": "Certificate thumbprint."
        },
        "commonName": {
          "type": "string",
          "description": "Certificate common name."
        },
        "issuerThumbprint": {
          "type": "string",
          "description": "Issuer thumbprint for the certificate. Only used together with CommonName."
        }
      },
      "required": [
        "isAdmin"
      ]
    },
    "ClusterState": {
      "type": "string",
      "enum": [
        "WaitingForNodes",
        "Deploying",
        "BaselineUpgrade",
        "Upgrading",
        "UpgradeFailed",
        "Ready"
      ],
      "x-ms-enum": {
        "name": "ClusterState",
        "modelAsString": true,
        "values": [
          {
            "name": "WaitingForNodes",
            "value": "WaitingForNodes",
            "description": "Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it."
          },
          {
            "name": "Deploying",
            "value": "Deploying",
            "description": "Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up."
          },
          {
            "name": "BaselineUpgrade",
            "value": "BaselineUpgrade",
            "description": "Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time."
          },
          {
            "name": "Upgrading",
            "value": "Upgrading",
            "description": "Indicates that the cluster is being upgraded with the user provided configuration."
          },
          {
            "name": "UpgradeFailed",
            "value": "UpgradeFailed",
            "description": "Indicates that the last upgrade for the cluster has failed."
          },
          {
            "name": "Ready",
            "value": "Ready",
            "description": "Indicates that the cluster is in a stable state."
          }
        ]
      }
    },
    "ClusterUpgradeCadence": {
      "type": "string",
      "enum": [
        "Wave0",
        "Wave1",
        "Wave2"
      ],
      "x-ms-enum": {
        "name": "ClusterUpgradeCadence",
        "modelAsString": true,
        "values": [
          {
            "name": "Wave0",
            "value": "Wave0",
            "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
          },
          {
            "name": "Wave1",
            "value": "Wave1",
            "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
          },
          {
            "name": "Wave2",
            "value": "Wave2",
            "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
          }
        ]
      }
    },
    "ClusterUpgradeMode": {
      "type": "string",
      "enum": [
        "Automatic",
        "Manual"
      ],
      "x-ms-enum": {
        "name": "ClusterUpgradeMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Automatic",
            "value": "Automatic",
            "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **clusterUpgradeCadence** will determine when the upgrade starts after the new version becomes available."
          },
          {
            "name": "Manual",
            "value": "Manual",
            "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
          }
        ]
      }
    },
    "Direction": {
      "type": "string",
      "enum": [
        "inbound",
        "outbound"
      ],
      "x-ms-enum": {
        "name": "Direction",
        "modelAsString": true
      }
    },
    "DiskType": {
      "type": "string",
      "enum": [
        "Standard_LRS",
        "StandardSSD_LRS",
        "Premium_LRS"
      ],
      "x-ms-enum": {
        "name": "DiskType",
        "modelAsString": true,
        "values": [
          {
            "name": "Standard_LRS",
            "value": "Standard_LRS",
            "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
          },
          {
            "name": "StandardSSD_LRS",
            "value": "StandardSSD_LRS",
            "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
          },
          {
            "name": "Premium_LRS",
            "value": "Premium_LRS",
            "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
          }
        ]
      }
    },
    "EndpointRangeDescription": {
      "type": "object",
      "description": "Port range details",
      "properties": {
        "startPort": {
          "type": "integer",
          "format": "int32",
          "description": "Starting port of a range of ports"
        },
        "endPort": {
          "type": "integer",
          "format": "int32",
          "description": "End port of a range of ports"
        }
      },
      "required": [
        "startPort",
        "endPort"
      ]
    },
    "ErrorModel": {
      "type": "object",
      "description": "The structure of the error.",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorModelError",
          "description": "The error details."
        }
      }
    },
    "ErrorModelError": {
      "type": "object",
      "description": "The error details.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        }
      }
    },
    "EvictionPolicyType": {
      "type": "string",
      "enum": [
        "Delete",
        "Deallocate"
      ],
      "x-ms-enum": {
        "name": "EvictionPolicyType",
        "modelAsString": true,
        "values": [
          {
            "name": "Delete",
            "value": "Delete",
            "description": "Eviction policy will be Delete for SPOT vms."
          },
          {
            "name": "Deallocate",
            "value": "Deallocate",
            "description": "Eviction policy will be Deallocate for SPOT vms."
          }
        ]
      }
    },
    "FailureAction": {
      "type": "string",
      "enum": [
        "Rollback",
        "Manual"
      ],
      "x-ms-enum": {
        "name": "FailureAction",
        "modelAsString": true,
        "values": [
          {
            "name": "Rollback",
            "value": "Rollback",
            "description": "Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails."
          },
          {
            "name": "Manual",
            "value": "Manual",
            "description": "Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically."
          }
        ]
      }
    },
    "FrontendConfiguration": {
      "type": "object",
      "description": "Describes the frontend configurations for the node type.",
      "properties": {
        "ipAddressType": {
          "$ref": "#/definitions/IPAddressType",
          "description": "The IP address type of this frontend configuration. If omitted the default value is IPv4."
        },
        "loadBalancerBackendAddressPoolId": {
          "type": "string",
          "description": "The resource Id of the Load Balancer backend address pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/backendAddressPools/<backendAddressPoolName>'."
        },
        "loadBalancerInboundNatPoolId": {
          "type": "string",
          "description": "The resource Id of the Load Balancer inbound NAT pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/inboundNatPools/<inboundNatPoolName>'."
        },
        "applicationGatewayBackendAddressPoolId": {
          "type": "string",
          "format": "arm-id",
          "description": "The resource Id of application gateway backend address pool. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/applicationGateways/<applicationGatewayName>/backendAddressPools/<backendAddressPoolName>'.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/applicationGateways/backendAddressPools"
              }
            ]
          }
        }
      }
    },
    "IPAddressType": {
      "type": "string",
      "enum": [
        "IPv4",
        "IPv6"
      ],
      "x-ms-enum": {
        "name": "IPAddressType",
        "modelAsString": true,
        "values": [
          {
            "name": "IPv4",
            "value": "IPv4",
            "description": "IPv4 address type."
          },
          {
            "name": "IPv6",
            "value": "IPv6",
            "description": "IPv6 address type."
          }
        ]
      }
    },
    "IPTag": {
      "type": "object",
      "description": "IPTag associated with the object.",
      "properties": {
        "ipTagType": {
          "type": "string",
          "description": "The IP tag type."
        },
        "tag": {
          "type": "string",
          "description": "The value of the IP tag."
        }
      },
      "required": [
        "ipTagType",
        "tag"
      ]
    },
    "LoadBalancingRule": {
      "type": "object",
      "description": "Describes a load balancing rule.",
      "properties": {
        "frontendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.",
          "minimum": 1,
          "maximum": 65534
        },
        "backendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.",
          "minimum": 1,
          "maximum": 65534
        },
        "protocol": {
          "$ref": "#/definitions/Protocol",
          "description": "The reference to the transport protocol used by the load balancing rule."
        },
        "probePort": {
          "type": "integer",
          "format": "int32",
          "description": "The prob port used by the load balancing rule. Acceptable values are between 1 and 65535.",
          "minimum": 1,
          "maximum": 65534
        },
        "probeProtocol": {
          "$ref": "#/definitions/ProbeProtocol",
          "description": "the reference to the load balancer probe used by the load balancing rule."
        },
        "probeRequestPath": {
          "type": "string",
          "description": "The probe request path. Only supported for HTTP/HTTPS probes."
        },
        "loadDistribution": {
          "type": "string",
          "description": "The load distribution policy for this rule."
        }
      },
      "required": [
        "frontendPort",
        "backendPort",
        "protocol",
        "probeProtocol"
      ]
    },
    "LongRunningOperationResult": {
      "type": "object",
      "description": "Long running operation result.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation."
        },
        "percentComplete": {
          "type": "number",
          "format": "float",
          "description": "The completion percentage of the operation."
        },
        "status": {
          "type": "string",
          "description": "The status of the operation."
        },
        "error": {
          "$ref": "#/definitions/ErrorModelError",
          "description": "The operation error."
        }
      }
    },
    "ManagedAzResiliencyStatus": {
      "type": "object",
      "description": "Describes the result of the request to list Managed VM Sizes for Service Fabric Managed Clusters.",
      "properties": {
        "baseResourceStatus": {
          "type": "array",
          "description": "List of Managed VM Sizes for Service Fabric Managed Clusters.",
          "items": {
            "$ref": "#/definitions/ResourceAzStatus"
          },
          "x-ms-identifiers": []
        },
        "isClusterZoneResilient": {
          "type": "boolean",
          "description": "URL to get the next set of Managed VM Sizes if there are any.",
          "readOnly": true
        }
      }
    },
    "ManagedCluster": {
      "type": "object",
      "description": "The managed cluster resource\n",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagedClusterProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the cluster resource.",
          "readOnly": true
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ManagedClusterAddOnFeature": {
      "type": "string",
      "enum": [
        "DnsService",
        "BackupRestoreService",
        "ResourceMonitorService"
      ],
      "x-ms-enum": {
        "name": "ManagedClusterAddOnFeature",
        "modelAsString": true,
        "values": [
          {
            "name": "DnsService",
            "value": "DnsService",
            "description": "Dns service"
          },
          {
            "name": "BackupRestoreService",
            "value": "BackupRestoreService",
            "description": "Backup and restore service"
          },
          {
            "name": "ResourceMonitorService",
            "value": "ResourceMonitorService",
            "description": "Resource monitor service"
          }
        ]
      }
    },
    "ManagedClusterCodeVersionResult": {
      "type": "object",
      "description": "The result of the Service Fabric runtime versions",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identification of the result"
        },
        "name": {
          "type": "string",
          "description": "The name of the result"
        },
        "type": {
          "type": "string",
          "description": "The result resource type"
        },
        "properties": {
          "$ref": "#/definitions/ManagedClusterVersionDetails",
          "description": "The detail of the Service Fabric runtime version result"
        }
      }
    },
    "ManagedClusterListResult": {
      "type": "object",
      "description": "The response of a ManagedCluster list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ManagedCluster items on this page",
          "items": {
            "$ref": "#/definitions/ManagedCluster"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ManagedClusterProperties": {
      "type": "object",
      "description": "Describes the managed cluster resource properties.",
      "properties": {
        "dnsName": {
          "type": "string",
          "description": "The cluster dns name."
        },
        "fqdn": {
          "type": "string",
          "description": "The fully qualified domain name associated with the public load balancer of the cluster.",
          "readOnly": true
        },
        "ipv4Address": {
          "type": "string",
          "description": "The IPv4 address associated with the public load balancer of the cluster.",
          "readOnly": true
        },
        "clusterId": {
          "type": "string",
          "description": "A service generated unique identifier for the cluster resource.",
          "readOnly": true
        },
        "clusterState": {
          "$ref": "#/definitions/ClusterState",
          "description": "The current state of the cluster.",
          "readOnly": true
        },
        "clusterCertificateThumbprints": {
          "type": "array",
          "description": "List of thumbprints of the cluster certificates.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "clientConnectionPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port used for client connections to the cluster."
        },
        "httpGatewayConnectionPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port used for HTTP connections to the cluster."
        },
        "adminUserName": {
          "type": "string",
          "description": "VM admin user name."
        },
        "adminPassword": {
          "type": "string",
          "format": "password",
          "description": "VM admin user password.",
          "x-ms-secret": true
        },
        "loadBalancingRules": {
          "type": "array",
          "description": "Load balancing rules that are applied to the public load balancer of the cluster.",
          "items": {
            "$ref": "#/definitions/LoadBalancingRule"
          },
          "x-ms-identifiers": []
        },
        "allowRdpAccess": {
          "type": "boolean",
          "description": "Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to Internet which can be overridden with custom Network Security Rules. The default value for this setting is false."
        },
        "networkSecurityRules": {
          "type": "array",
          "description": "Custom Network Security Rules that are applied to the Virtual Network of the cluster.",
          "items": {
            "$ref": "#/definitions/NetworkSecurityRule"
          },
          "x-ms-identifiers": []
        },
        "clients": {
          "type": "array",
          "description": "Client certificates that are allowed to manage the cluster.",
          "items": {
            "$ref": "#/definitions/ClientCertificate"
          },
          "x-ms-identifiers": []
        },
        "azureActiveDirectory": {
          "$ref": "#/definitions/AzureActiveDirectory",
          "description": "The AAD authentication settings of the cluster."
        },
        "fabricSettings": {
          "type": "array",
          "description": "The list of custom fabric settings to configure the cluster.",
          "items": {
            "$ref": "#/definitions/SettingsSectionDescription"
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "$ref": "#/definitions/ManagedResourceProvisioningState",
          "description": "The provisioning state of the managed cluster resource.",
          "readOnly": true
        },
        "clusterCodeVersion": {
          "type": "string",
          "description": "The Service Fabric runtime version of the cluster. This property is required when **clusterUpgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**."
        },
        "clusterUpgradeMode": {
          "$ref": "#/definitions/ClusterUpgradeMode",
          "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n"
        },
        "clusterUpgradeCadence": {
          "$ref": "#/definitions/ClusterUpgradeCadence",
          "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **clusterUpgradeMode** is set to 'Automatic'."
        },
        "addonFeatures": {
          "type": "array",
          "description": "List of add-on features to enable on the cluster.",
          "items": {
            "$ref": "#/definitions/ManagedClusterAddOnFeature"
          }
        },
        "enableAutoOSUpgrade": {
          "type": "boolean",
          "description": "Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false."
        },
        "zonalResiliency": {
          "type": "boolean",
          "description": "Indicates if the cluster has zone resiliency."
        },
        "applicationTypeVersionsCleanupPolicy": {
          "$ref": "#/definitions/ApplicationTypeVersionsCleanupPolicy",
          "description": "The policy used to clean up unused versions."
        },
        "enableIpv6": {
          "type": "boolean",
          "description": "Setting this to true creates IPv6 address space for the default VNet used by the cluster. This setting cannot be changed once the cluster is created. The default value for this setting is false."
        },
        "subnetId": {
          "type": "string",
          "description": "If specified, the node types for the cluster are created in this subnet instead of the default VNet. The **networkSecurityRules** specified for the cluster are also applied to this subnet. This setting cannot be changed once the cluster is created."
        },
        "ipTags": {
          "type": "array",
          "description": "The list of IP tags associated with the default public IP address of the cluster.",
          "items": {
            "$ref": "#/definitions/IPTag"
          },
          "x-ms-identifiers": []
        },
        "ipv6Address": {
          "type": "string",
          "description": "IPv6 address for the cluster if IPv6 is enabled.",
          "readOnly": true
        },
        "enableServicePublicIP": {
          "type": "boolean",
          "description": "Setting this to true will link the IPv4 address as the ServicePublicIP of the IPv6 address. It can only be set to True if IPv6 is enabled on the cluster."
        },
        "auxiliarySubnets": {
          "type": "array",
          "description": "Auxiliary subnets for the cluster.",
          "items": {
            "$ref": "#/definitions/Subnet"
          },
          "x-ms-identifiers": []
        },
        "serviceEndpoints": {
          "type": "array",
          "description": "Service endpoints for subnets in the cluster.",
          "items": {
            "$ref": "#/definitions/ServiceEndpoint"
          },
          "x-ms-identifiers": []
        },
        "zonalUpdateMode": {
          "$ref": "#/definitions/ZonalUpdateMode",
          "description": "Indicates the update mode for Cross Az clusters."
        },
        "useCustomVnet": {
          "type": "boolean",
          "description": "For new clusters, this parameter indicates that it uses Bring your own VNet, but the subnet is specified at node type level; and for such clusters, the subnetId property is required for node types."
        },
        "publicIPPrefixId": {
          "type": "string",
          "format": "arm-id",
          "description": "Specify the resource id of a public IP prefix that the load balancer will allocate a public IP address from. Only supports IPv4.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/publicIPPrefixes"
              }
            ]
          }
        }
      },
      "required": [
        "dnsName",
        "adminUserName"
      ]
    },
    "ManagedClusterUpdateParameters": {
      "type": "object",
      "description": "Managed cluster update request",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Managed cluster update parameters",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ManagedClusterVersionDetails": {
      "type": "object",
      "description": "The detail of the Service Fabric runtime version result",
      "properties": {
        "clusterCodeVersion": {
          "type": "string",
          "description": "The Service Fabric runtime version of the cluster."
        },
        "supportExpiryUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The date of expiry of support of the version."
        },
        "osType": {
          "$ref": "#/definitions/OsType",
          "description": "Cluster operating system, the default will be Windows"
        }
      }
    },
    "ManagedClusterVersionEnvironment": {
      "type": "string",
      "enum": [
        "Windows"
      ],
      "x-ms-enum": {
        "name": "ManagedClusterVersionEnvironment",
        "modelAsString": true,
        "values": [
          {
            "name": "Windows",
            "value": "Windows",
            "description": "Windows."
          }
        ]
      }
    },
    "ManagedIdentity": {
      "type": "object",
      "description": "Describes the managed identities for an Azure resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal id of the managed identity. This property will only be provided for a system assigned identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant id of the managed identity. This property will only be provided for a system assigned identity.",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/ManagedIdentityType",
          "description": "The type of managed identity for the resource."
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\n",
          "additionalProperties": {
            "$ref": "#/definitions/Azure.ResourceManager.Foundations.UserAssignedIdentity"
          }
        }
      }
    },
    "ManagedIdentityType": {
      "type": "string",
      "enum": [
        "None",
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned, UserAssigned"
      ],
      "x-ms-enum": {
        "name": "ManagedIdentityType",
        "modelAsString": false,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "Indicates that no identity is associated with the resource."
          },
          {
            "name": "SystemAssigned",
            "value": "SystemAssigned",
            "description": "Indicates that system assigned identity is associated with the resource."
          },
          {
            "name": "UserAssigned",
            "value": "UserAssigned",
            "description": "Indicates that user assigned identity is associated with the resource."
          },
          {
            "name": "SystemAssigned, UserAssigned",
            "value": "SystemAssigned, UserAssigned",
            "description": "Indicates that both system assigned and user assigned identity are associated with the resource."
          }
        ]
      }
    },
    "ManagedProxyResource": {
      "type": "object",
      "description": "The resource model definition for proxy-only resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Azure resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Azure resource type.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Azure resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        }
      }
    },
    "ManagedResourceProvisioningState": {
      "type": "string",
      "enum": [
        "None",
        "Creating",
        "Created",
        "Updating",
        "Succeeded",
        "Failed",
        "Canceled",
        "Deleting",
        "Deleted",
        "Other"
      ],
      "x-ms-enum": {
        "name": "ManagedResourceProvisioningState",
        "modelAsString": true
      }
    },
    "ManagedVMSize": {
      "type": "object",
      "description": "Describes a VM Sizes.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VMSize",
          "description": "VM Size properties.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "VM Size id.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "VM Size name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "VM Size type.",
          "readOnly": true
        }
      }
    },
    "MoveCost": {
      "type": "string",
      "enum": [
        "Zero",
        "Low",
        "Medium",
        "High"
      ],
      "x-ms-enum": {
        "name": "MoveCost",
        "modelAsString": true,
        "values": [
          {
            "name": "Zero",
            "value": "Zero",
            "description": "Zero move cost. This value is zero."
          },
          {
            "name": "Low",
            "value": "Low",
            "description": "Specifies the move cost of the service as Low. The value is 1."
          },
          {
            "name": "Medium",
            "value": "Medium",
            "description": "Specifies the move cost of the service as Medium. The value is 2."
          },
          {
            "name": "High",
            "value": "High",
            "description": "Specifies the move cost of the service as High. The value is 3."
          }
        ]
      }
    },
    "NamedPartitionScheme": {
      "type": "object",
      "description": "Describes the named partition scheme of the service.",
      "properties": {
        "names": {
          "type": "array",
          "description": "Array for the names of the partitions.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "names"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Partition"
        }
      ],
      "x-ms-discriminator-value": "Named"
    },
    "NetworkSecurityRule": {
      "type": "object",
      "description": "Describes a network security rule.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Network security rule name."
        },
        "description": {
          "type": "string",
          "description": "Network security rule description."
        },
        "protocol": {
          "$ref": "#/definitions/NsgProtocol",
          "description": "Network protocol this rule applies to."
        },
        "sourceAddressPrefixes": {
          "type": "array",
          "description": "The CIDR or source IP ranges.",
          "items": {
            "type": "string"
          }
        },
        "destinationAddressPrefixes": {
          "type": "array",
          "description": "The destination address prefixes. CIDR or destination IP ranges.",
          "items": {
            "type": "string"
          }
        },
        "sourcePortRanges": {
          "type": "array",
          "description": "The source port ranges.",
          "items": {
            "type": "string"
          }
        },
        "destinationPortRanges": {
          "type": "array",
          "description": "The destination port ranges.",
          "items": {
            "type": "string"
          }
        },
        "sourceAddressPrefix": {
          "type": "string",
          "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
        },
        "destinationAddressPrefix": {
          "type": "string",
          "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
        },
        "sourcePortRange": {
          "type": "string",
          "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
        },
        "destinationPortRange": {
          "type": "string",
          "description": "he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
        },
        "access": {
          "$ref": "#/definitions/Access",
          "description": "The network traffic is allowed or denied."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
          "minimum": 1000,
          "maximum": 3000
        },
        "direction": {
          "$ref": "#/definitions/Direction",
          "description": "Network security rule direction."
        }
      },
      "required": [
        "name",
        "protocol",
        "access",
        "priority",
        "direction"
      ]
    },
    "NodeType": {
      "type": "object",
      "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NodeTypeProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the node type.",
          "readOnly": true
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "NodeTypeActionParameters": {
      "type": "object",
      "description": "Parameters for Node type action. If nodes are not specified on the parameters, the operation will be performed in all nodes of the node type one upgrade domain at a time.",
      "properties": {
        "nodes": {
          "type": "array",
          "description": "List of node names from the node type.",
          "items": {
            "type": "string"
          }
        },
        "force": {
          "type": "boolean",
          "description": "Force the action to go through."
        },
        "updateType": {
          "$ref": "#/definitions/UpdateType",
          "description": "Specifies the way the operation will be performed."
        }
      }
    },
    "NodeTypeAvailableSku": {
      "type": "object",
      "description": "Defines the type of sku available for a node type",
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "The type of resource the sku applies to.  <br /><br />Value: Microsoft.ServiceFabric/managedClusters/nodeTypes.",
          "readOnly": true
        },
        "sku": {
          "$ref": "#/definitions/NodeTypeSupportedSku",
          "description": "The supported SKU for a for node type.",
          "readOnly": true
        },
        "capacity": {
          "$ref": "#/definitions/NodeTypeSkuCapacity",
          "description": "Provides information about how the node count can be scaled.",
          "readOnly": true
        }
      }
    },
    "NodeTypeListResult": {
      "type": "object",
      "description": "The response of a NodeType list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NodeType items on this page",
          "items": {
            "$ref": "#/definitions/NodeType"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NodeTypeProperties": {
      "type": "object",
      "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster.",
      "properties": {
        "isPrimary": {
          "type": "boolean",
          "description": "Indicates the Service Fabric system services for the cluster will run on this node type. This setting cannot be changed once the node type is created."
        },
        "vmInstanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of nodes in the node type. <br /><br />**Values:** <br />-1 - Use when auto scale rules are configured or sku.capacity is defined <br /> 0 - Not supported <br /> >0 - Use for manual scale.",
          "minimum": -1,
          "maximum": 2147483647
        },
        "dataDiskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "Disk size for the managed disk attached to the vms on the node type in GBs."
        },
        "dataDiskType": {
          "$ref": "#/definitions/DiskType",
          "description": "Managed data disk type. Specifies the storage account type for the managed disk"
        },
        "dataDiskLetter": {
          "type": "string",
          "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created.",
          "pattern": "^[a-zA-Z]{1}$"
        },
        "placementProperties": {
          "type": "object",
          "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "capacities": {
          "type": "object",
          "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "applicationPorts": {
          "$ref": "#/definitions/EndpointRangeDescription",
          "description": "The range of ports from which cluster assigned port to Service Fabric applications."
        },
        "ephemeralPorts": {
          "$ref": "#/definitions/EndpointRangeDescription",
          "description": "The range of ephemeral ports that nodes in this node type should be configured with."
        },
        "vmSize": {
          "type": "string",
          "description": "The size of virtual machines in the pool. All virtual machines in a pool are the same size. For example, Standard_D3."
        },
        "vmImagePublisher": {
          "type": "string",
          "description": "The publisher of the Azure Virtual Machines Marketplace image. For example, Canonical or MicrosoftWindowsServer."
        },
        "vmImageOffer": {
          "type": "string",
          "description": "The offer type of the Azure Virtual Machines Marketplace image. For example, UbuntuServer or WindowsServer."
        },
        "vmImageSku": {
          "type": "string",
          "description": "The SKU of the Azure Virtual Machines Marketplace image. For example, 14.04.0-LTS or 2012-R2-Datacenter."
        },
        "vmImageVersion": {
          "type": "string",
          "description": "The version of the Azure Virtual Machines Marketplace image. A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'."
        },
        "vmSecrets": {
          "type": "array",
          "description": "The secrets to install in the virtual machines.",
          "items": {
            "$ref": "#/definitions/VaultSecretGroup"
          },
          "x-ms-identifiers": []
        },
        "vmExtensions": {
          "type": "array",
          "description": "Set of extensions that should be installed onto the virtual machines.",
          "items": {
            "$ref": "#/definitions/VmssExtension"
          },
          "x-ms-identifiers": []
        },
        "vmManagedIdentity": {
          "$ref": "#/definitions/VmManagedIdentity",
          "description": "Identities to assign to the virtual machine scale set under the node type."
        },
        "isStateless": {
          "type": "boolean",
          "description": "Indicates if the node type can only host Stateless workloads."
        },
        "multiplePlacementGroups": {
          "type": "boolean",
          "description": "Indicates if scale set associated with the node type can be composed of multiple placement groups."
        },
        "frontendConfigurations": {
          "type": "array",
          "description": "Indicates the node type uses its own frontend configurations instead of the default one for the cluster. This setting can only be specified for non-primary node types and can not be added or removed after the node type is created.",
          "items": {
            "$ref": "#/definitions/FrontendConfiguration"
          },
          "x-ms-identifiers": []
        },
        "networkSecurityRules": {
          "type": "array",
          "description": "The Network Security Rules for this node type. This setting can only be specified for node types that are configured with frontend configurations.",
          "items": {
            "$ref": "#/definitions/NetworkSecurityRule"
          },
          "x-ms-identifiers": []
        },
        "additionalDataDisks": {
          "type": "array",
          "description": "Additional managed data disks.",
          "items": {
            "$ref": "#/definitions/VmssDataDisk"
          },
          "x-ms-identifiers": []
        },
        "enableEncryptionAtHost": {
          "type": "boolean",
          "description": "Enable or disable the Host Encryption for the virtual machines on the node type. This will enable the encryption for all the disks including Resource/Temp disk at host itself. Default: The Encryption at host will be disabled unless this property is set to true for the resource."
        },
        "provisioningState": {
          "$ref": "#/definitions/ManagedResourceProvisioningState",
          "description": "The provisioning state of the node type resource.",
          "readOnly": true
        },
        "enableAcceleratedNetworking": {
          "type": "boolean",
          "description": "Specifies whether the network interface is accelerated networking-enabled."
        },
        "useDefaultPublicLoadBalancer": {
          "type": "boolean",
          "description": "Specifies whether the use public load balancer. If not specified and the node type doesn't have its own frontend configuration, it will be attached to the default load balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is true, then the frontend has to be an Internal Load Balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is false or not set, then the custom load balancer must include a public load balancer to provide outbound connectivity."
        },
        "useTempDataDisk": {
          "type": "boolean",
          "description": "Specifies whether to use the temporary disk for the service fabric data root, in which case no managed data disk will be attached and the temporary disk will be used. It is only allowed for stateless node types."
        },
        "enableOverProvisioning": {
          "type": "boolean",
          "description": "Specifies whether the node type should be overprovisioned. It is only allowed for stateless node types."
        },
        "zones": {
          "type": "array",
          "description": "Specifies the availability zones where the node type would span across. If the cluster is not spanning across availability zones, initiates az migration for the cluster.",
          "items": {
            "type": "string"
          }
        },
        "isSpotVM": {
          "type": "boolean",
          "description": "Indicates whether the node type will be Spot Virtual Machines. Azure will allocate the VMs if there is capacity available and the VMs can be evicted at any time."
        },
        "hostGroupId": {
          "type": "string",
          "description": "Specifies the full host group resource Id. This property is used for deploying on azure dedicated hosts."
        },
        "useEphemeralOSDisk": {
          "type": "boolean",
          "description": "Indicates whether to use ephemeral os disk. The sku selected on the vmSize property needs to support this feature."
        },
        "spotRestoreTimeout": {
          "type": "string",
          "description": "Indicates the time duration after which the platform will not try to restore the VMSS SPOT instances specified as ISO 8601."
        },
        "evictionPolicy": {
          "$ref": "#/definitions/EvictionPolicyType",
          "description": "Specifies the eviction policy for virtual machines in a SPOT node type. Default is Delete."
        },
        "vmImageResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Indicates the resource id of the vm image. This parameter is used for custom vm image.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Compute/images"
              },
              {
                "type": "Microsoft.Compute/galleries/images"
              },
              {
                "type": "Microsoft.Compute/galleries/images/versions"
              }
            ]
          }
        },
        "subnetId": {
          "type": "string",
          "format": "arm-id",
          "description": "Indicates the resource id of the subnet for the node type.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets"
              }
            ]
          }
        },
        "vmSetupActions": {
          "type": "array",
          "description": "Specifies the actions to be performed on the vms before bootstrapping the service fabric runtime.",
          "items": {
            "$ref": "#/definitions/VmSetupAction"
          }
        },
        "securityType": {
          "$ref": "#/definitions/SecurityType",
          "description": "Specifies the security type of the nodeType. Only TrustedLaunch is currently supported"
        },
        "secureBootEnabled": {
          "type": "boolean",
          "description": "Specifies whether secure boot should be enabled on the nodeType. Can only be used with TrustedLaunch SecurityType"
        },
        "enableNodePublicIP": {
          "type": "boolean",
          "description": "Specifies whether each node is allocated its own public IP address. This is only supported on secondary node types with custom Load Balancers."
        },
        "vmSharedGalleryImageId": {
          "type": "string",
          "format": "arm-id",
          "description": "Indicates the resource id of the vm shared galleries image. This parameter is used for custom vm image.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Compute/sharedGalleries/images"
              },
              {
                "type": "Microsoft.Compute/sharedGalleries/images/versions"
              }
            ]
          }
        },
        "natGatewayId": {
          "type": "string",
          "format": "arm-id",
          "description": "Specifies the resource id of a NAT Gateway to attach to the subnet of this node type. Node type must use custom load balancer.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/natGateways"
              }
            ]
          }
        },
        "vmImagePlan": {
          "$ref": "#/definitions/VmImagePlan",
          "description": "Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started ->. Enter any required information and then click Save."
        }
      },
      "required": [
        "isPrimary",
        "vmInstanceCount"
      ]
    },
    "NodeTypeSku": {
      "type": "object",
      "description": "Describes a node type sku.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The sku name. <br /><br />Name is internally generated and is used in auto-scale scenarios.<br /> Property does not allow to be changed to other values than generated.<br /> To avoid deployment errors please omit the property."
        },
        "tier": {
          "type": "string",
          "description": "Specifies the tier of the node type. <br /><br /> Possible Values:<br /> **Standard**"
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "The number of nodes in the node type.<br /><br />If present in request it will override properties.vmInstanceCount.",
          "minimum": 1,
          "maximum": 2147483647
        }
      }
    },
    "NodeTypeSkuCapacity": {
      "type": "object",
      "description": "Provides information about how node type can be scaled.",
      "properties": {
        "minimum": {
          "type": "integer",
          "format": "int32",
          "description": "Lowest permitted node count in a node type.",
          "readOnly": true
        },
        "maximum": {
          "type": "integer",
          "format": "int32",
          "description": "Highest permitted node count in a node type.",
          "readOnly": true
        },
        "default": {
          "type": "integer",
          "format": "int32",
          "description": "Default node count in a node type.",
          "readOnly": true
        },
        "scaleType": {
          "$ref": "#/definitions/NodeTypeSkuScaleType",
          "description": "Node type capacity scale type.",
          "readOnly": true
        }
      }
    },
    "NodeTypeSkuScaleType": {
      "type": "string",
      "enum": [
        "None",
        "Manual",
        "Automatic"
      ],
      "x-ms-enum": {
        "name": "NodeTypeSkuScaleType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "Node count is not adjustable in any way (e.g. it is fixed)."
          },
          {
            "name": "Manual",
            "value": "Manual",
            "description": "The user must manually scale out/in."
          },
          {
            "name": "Automatic",
            "value": "Automatic",
            "description": "Automatic scale is allowed."
          }
        ]
      }
    },
    "NodeTypeSupportedSku": {
      "type": "object",
      "description": "Describes a node type supported sku.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The sku name.",
          "readOnly": true
        },
        "tier": {
          "type": "string",
          "description": "Specifies the tier of the node type. <br /><br /> Possible Values:<br /> **Standard**",
          "readOnly": true
        }
      }
    },
    "NodeTypeUpdateParameters": {
      "type": "object",
      "description": "Node type update request",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Node type update parameters",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "#/definitions/NodeTypeSku",
          "description": "The node type sku."
        }
      }
    },
    "NsgProtocol": {
      "type": "string",
      "enum": [
        "http",
        "https",
        "tcp",
        "udp",
        "icmp",
        "ah",
        "esp"
      ],
      "x-ms-enum": {
        "name": "NsgProtocol",
        "modelAsString": true
      }
    },
    "OperationResult": {
      "type": "object",
      "description": "Available operation list result",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation."
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Indicates whether the operation is a data action"
        },
        "display": {
          "$ref": "#/definitions/AvailableOperationDisplay",
          "description": "The object that represents the operation."
        },
        "origin": {
          "type": "string",
          "description": "Origin result"
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      }
    },
    "OsType": {
      "type": "string",
      "enum": [
        "Windows"
      ],
      "x-ms-enum": {
        "name": "OsType",
        "modelAsString": true,
        "values": [
          {
            "name": "Windows",
            "value": "Windows",
            "description": "Indicates os is Windows."
          }
        ]
      }
    },
    "PagedManagedVMSize": {
      "type": "object",
      "description": "Describes the result of the request to list Managed VM Sizes for Service Fabric Managed Clusters.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ManagedVMSize items on this page",
          "items": {
            "$ref": "#/definitions/ManagedVMSize"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedNodeTypeAvailableSku": {
      "type": "object",
      "description": "Node type available sku list results",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NodeTypeAvailableSku items on this page",
          "items": {
            "$ref": "#/definitions/NodeTypeAvailableSku"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "Partition": {
      "type": "object",
      "description": "Describes how the service is partitioned.",
      "properties": {
        "partitionScheme": {
          "type": "string",
          "description": "Discriminator property for Partition."
        }
      },
      "discriminator": "partitionScheme",
      "required": [
        "partitionScheme"
      ]
    },
    "PartitionInstanceCountScaleMechanism": {
      "type": "object",
      "description": "Represents a scaling mechanism for adding or removing instances of stateless service partition.",
      "properties": {
        "minInstanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum number of instances of the partition."
        },
        "maxInstanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of instances of the partition."
        },
        "scaleIncrement": {
          "type": "integer",
          "format": "int32",
          "description": "The number of instances to add or remove during a scaling operation."
        }
      },
      "required": [
        "minInstanceCount",
        "maxInstanceCount",
        "scaleIncrement"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ScalingMechanism"
        }
      ],
      "x-ms-discriminator-value": "ScalePartitionInstanceCount"
    },
    "PartitionScheme": {
      "type": "string",
      "enum": [
        "Singleton",
        "UniformInt64Range",
        "Named"
      ],
      "x-ms-enum": {
        "name": "PartitionScheme",
        "modelAsString": true,
        "values": [
          {
            "name": "Singleton",
            "value": "Singleton",
            "description": "Indicates that the partition is based on string names, and is a SingletonPartitionScheme object, The value is 0."
          },
          {
            "name": "UniformInt64Range",
            "value": "UniformInt64Range",
            "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionScheme object. The value is 1."
          },
          {
            "name": "Named",
            "value": "Named",
            "description": "Indicates that the partition is based on string names, and is a NamedPartitionScheme object. The value is 2."
          }
        ]
      }
    },
    "PrivateEndpointNetworkPolicies": {
      "type": "string",
      "enum": [
        "enabled",
        "disabled"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointNetworkPolicies",
        "modelAsString": true
      }
    },
    "PrivateLinkServiceNetworkPolicies": {
      "type": "string",
      "enum": [
        "enabled",
        "disabled"
      ],
      "x-ms-enum": {
        "name": "PrivateLinkServiceNetworkPolicies",
        "modelAsString": true
      }
    },
    "ProbeProtocol": {
      "type": "string",
      "enum": [
        "tcp",
        "http",
        "https"
      ],
      "x-ms-enum": {
        "name": "ProbeProtocol",
        "modelAsString": true
      }
    },
    "Protocol": {
      "type": "string",
      "enum": [
        "tcp",
        "udp"
      ],
      "x-ms-enum": {
        "name": "Protocol",
        "modelAsString": true
      }
    },
    "Resource": {
      "type": "object",
      "description": "The resource model definition.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Azure resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Azure resource type.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Azure resource location.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Azure resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "etag": {
          "type": "string",
          "description": "Azure resource etag.",
          "readOnly": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "location"
      ]
    },
    "ResourceAzStatus": {
      "type": "object",
      "description": "Describes Az Resiliency status of Base resources",
      "properties": {
        "resourceName": {
          "type": "string",
          "description": "VM Size properties.",
          "readOnly": true
        },
        "resourceType": {
          "type": "string",
          "description": "VM Size id.",
          "readOnly": true
        },
        "isZoneResilient": {
          "type": "boolean",
          "description": "VM Size name.",
          "readOnly": true
        }
      }
    },
    "RollingUpgradeMode": {
      "type": "string",
      "enum": [
        "Monitored",
        "UnmonitoredAuto"
      ],
      "x-ms-enum": {
        "name": "RollingUpgradeMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Monitored",
            "value": "Monitored",
            "description": "The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 0."
          },
          {
            "name": "UnmonitoredAuto",
            "value": "UnmonitoredAuto",
            "description": "The upgrade will proceed automatically without performing any health monitoring. The value is 1."
          }
        ]
      }
    },
    "RollingUpgradeMonitoringPolicy": {
      "type": "object",
      "description": "The policy used for monitoring the application upgrade",
      "properties": {
        "failureAction": {
          "$ref": "#/definitions/FailureAction",
          "description": "The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations. Invalid indicates the failure action is invalid. Rollback specifies that the upgrade will start rolling back automatically. Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode."
        },
        "healthCheckWaitDuration": {
          "type": "string",
          "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
        },
        "healthCheckStableDuration": {
          "type": "string",
          "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
        },
        "healthCheckRetryTimeout": {
          "type": "string",
          "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
        },
        "upgradeTimeout": {
          "type": "string",
          "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
        },
        "upgradeDomainTimeout": {
          "type": "string",
          "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
        }
      },
      "required": [
        "failureAction",
        "healthCheckWaitDuration",
        "healthCheckStableDuration",
        "healthCheckRetryTimeout",
        "upgradeTimeout",
        "upgradeDomainTimeout"
      ]
    },
    "ScalingMechanism": {
      "type": "object",
      "description": "Describes the mechanism for performing a scaling operation.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Discriminator property for ScalingMechanism."
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "ScalingPolicy": {
      "type": "object",
      "description": "Specifies a metric to load balance a service during runtime.",
      "properties": {
        "scalingMechanism": {
          "$ref": "#/definitions/ScalingMechanism",
          "description": "Specifies the mechanism associated with this scaling policy"
        },
        "scalingTrigger": {
          "$ref": "#/definitions/ScalingTrigger",
          "description": "Specifies the trigger associated with this scaling policy."
        }
      },
      "required": [
        "scalingMechanism",
        "scalingTrigger"
      ]
    },
    "ScalingTrigger": {
      "type": "object",
      "description": "Describes the trigger for performing a scaling operation.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Discriminator property for ScalingTrigger."
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "SecurityType": {
      "type": "string",
      "enum": [
        "TrustedLaunch"
      ],
      "x-ms-enum": {
        "name": "SecurityType",
        "modelAsString": true,
        "values": [
          {
            "name": "TrustedLaunch",
            "value": "TrustedLaunch",
            "description": "Trusted Launch is a security type that secures generation 2 virtual machines."
          }
        ]
      }
    },
    "ServiceCorrelation": {
      "type": "object",
      "description": "Creates a particular correlation between services.",
      "properties": {
        "scheme": {
          "$ref": "#/definitions/ServiceCorrelationScheme",
          "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName."
        },
        "serviceName": {
          "type": "string",
          "description": "The Arm Resource ID of the service that the correlation relationship is established with."
        }
      },
      "required": [
        "scheme",
        "serviceName"
      ]
    },
    "ServiceCorrelationScheme": {
      "type": "string",
      "enum": [
        "AlignedAffinity",
        "NonAlignedAffinity"
      ],
      "x-ms-enum": {
        "name": "ServiceCorrelationScheme",
        "modelAsString": true,
        "values": [
          {
            "name": "AlignedAffinity",
            "value": "AlignedAffinity",
            "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 0."
          },
          {
            "name": "NonAlignedAffinity",
            "value": "NonAlignedAffinity",
            "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 1."
          }
        ]
      }
    },
    "ServiceEndpoint": {
      "type": "object",
      "description": "The service endpoint properties.",
      "properties": {
        "service": {
          "type": "string",
          "description": "The type of the endpoint service."
        },
        "locations": {
          "type": "array",
          "description": "A list of locations.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "service"
      ]
    },
    "ServiceKind": {
      "type": "string",
      "enum": [
        "Stateless",
        "Stateful"
      ],
      "x-ms-enum": {
        "name": "ServiceKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Stateless",
            "value": "Stateless",
            "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 0."
          },
          {
            "name": "Stateful",
            "value": "Stateful",
            "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 1."
          }
        ]
      }
    },
    "ServiceLoadMetric": {
      "type": "object",
      "description": "Specifies a metric to load balance a service during runtime.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
        },
        "weight": {
          "$ref": "#/definitions/ServiceLoadMetricWeight",
          "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number."
        },
        "primaryDefaultLoad": {
          "type": "integer",
          "format": "int32",
          "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
        },
        "secondaryDefaultLoad": {
          "type": "integer",
          "format": "int32",
          "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
        },
        "defaultLoad": {
          "type": "integer",
          "format": "int32",
          "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
        }
      },
      "required": [
        "name"
      ]
    },
    "ServiceLoadMetricWeight": {
      "type": "string",
      "enum": [
        "Zero",
        "Low",
        "Medium",
        "High"
      ],
      "x-ms-enum": {
        "name": "ServiceLoadMetricWeight",
        "modelAsString": true,
        "values": [
          {
            "name": "Zero",
            "value": "Zero",
            "description": "Disables resource balancing for this metric. This value is zero."
          },
          {
            "name": "Low",
            "value": "Low",
            "description": "Specifies the metric weight of the service load as Low. The value is 1."
          },
          {
            "name": "Medium",
            "value": "Medium",
            "description": "Specifies the metric weight of the service load as Medium. The value is 2."
          },
          {
            "name": "High",
            "value": "High",
            "description": "Specifies the metric weight of the service load as High. The value is 3."
          }
        ]
      }
    },
    "ServicePackageActivationMode": {
      "type": "string",
      "enum": [
        "SharedProcess",
        "ExclusiveProcess"
      ],
      "x-ms-enum": {
        "name": "ServicePackageActivationMode",
        "modelAsString": true,
        "values": [
          {
            "name": "SharedProcess",
            "value": "SharedProcess",
            "description": "Indicates the application package activation mode will use shared process."
          },
          {
            "name": "ExclusiveProcess",
            "value": "ExclusiveProcess",
            "description": "Indicates the application package activation mode will use exclusive process."
          }
        ]
      }
    },
    "ServicePlacementInvalidDomainPolicy": {
      "type": "object",
      "description": "Describes the policy to be used for placement of a Service Fabric service where a particular fault or upgrade domain should not be used for placement of the instances or replicas of that service.",
      "properties": {
        "domainName": {
          "type": "string",
          "description": "The name of the domain that should not be used for placement."
        }
      },
      "required": [
        "domainName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ServicePlacementPolicy"
        }
      ],
      "x-ms-discriminator-value": "InvalidDomain"
    },
    "ServicePlacementNonPartiallyPlaceServicePolicy": {
      "type": "object",
      "description": "ServicePlacementNonPartiallyPlaceServicePolicy",
      "allOf": [
        {
          "$ref": "#/definitions/ServicePlacementPolicy"
        }
      ],
      "x-ms-discriminator-value": "NonPartiallyPlaceService"
    },
    "ServicePlacementPolicy": {
      "type": "object",
      "description": "Describes the policy to be used for placement of a Service Fabric service.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Discriminator property for ServicePlacementPolicy."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "ServicePlacementPolicyType": {
      "type": "string",
      "enum": [
        "InvalidDomain",
        "RequiredDomain",
        "PreferredPrimaryDomain",
        "RequiredDomainDistribution",
        "NonPartiallyPlaceService"
      ],
      "x-ms-enum": {
        "name": "ServicePlacementPolicyType",
        "modelAsString": true,
        "values": [
          {
            "name": "InvalidDomain",
            "value": "InvalidDomain",
            "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0."
          },
          {
            "name": "RequiredDomain",
            "value": "RequiredDomain",
            "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1."
          },
          {
            "name": "PreferredPrimaryDomain",
            "value": "PreferredPrimaryDomain",
            "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2."
          },
          {
            "name": "RequiredDomainDistribution",
            "value": "RequiredDomainDistribution",
            "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3."
          },
          {
            "name": "NonPartiallyPlaceService",
            "value": "NonPartiallyPlaceService",
            "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4."
          }
        ]
      }
    },
    "ServicePlacementPreferPrimaryDomainPolicy": {
      "type": "object",
      "description": "Describes the policy to be used for placement of a Service Fabric service where the service's \nPrimary replicas should optimally be placed in a particular domain.\n\nThis placement policy is usually used with fault domains in scenarios where the Service Fabric\ncluster is geographically distributed in order to indicate that a service's primary replica should\nbe located in a particular fault domain, which in geo-distributed scenarios usually aligns with regional\nor datacenter boundaries. Note that since this is an optimization it is possible that the Primary replica\nmay not end up located in this domain due to failures, capacity limits, or other constraints.\n",
      "properties": {
        "domainName": {
          "type": "string",
          "description": "The name of the domain that should used for placement as per this policy."
        }
      },
      "required": [
        "domainName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ServicePlacementPolicy"
        }
      ],
      "x-ms-discriminator-value": "PreferredPrimaryDomain"
    },
    "ServicePlacementRequireDomainDistributionPolicy": {
      "type": "object",
      "description": "Describes the policy to be used for placement of a Service Fabric service where two replicas\nfrom the same partition should never be placed in the same fault or upgrade domain.\n\nWhile this is not common it can expose the service to an increased risk of concurrent failures\ndue to unplanned outages or other cases of subsequent/concurrent failures. As an example, consider\na case where replicas are deployed across different data center, with one replica per location.\nIn the event that one of the datacenters goes offline, normally the replica that was placed in that\ndatacenter will be packed into one of the remaining datacenters. If this is not desirable then this\npolicy should be set.\n",
      "properties": {
        "domainName": {
          "type": "string",
          "description": "The name of the domain that should used for placement as per this policy."
        }
      },
      "required": [
        "domainName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ServicePlacementPolicy"
        }
      ],
      "x-ms-discriminator-value": "RequiredDomainDistribution"
    },
    "ServicePlacementRequiredDomainPolicy": {
      "type": "object",
      "description": "Describes the policy to be used for placement of a Service Fabric service where the instances or replicas of that service must be placed in a particular domain.",
      "properties": {
        "domainName": {
          "type": "string",
          "description": "The name of the domain that should used for placement as per this policy."
        }
      },
      "required": [
        "domainName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ServicePlacementPolicy"
        }
      ],
      "x-ms-discriminator-value": "RequiredDomain"
    },
    "ServiceResource": {
      "type": "object",
      "description": "The service resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServiceResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the service resource in the format of {applicationName}~{serviceName}.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ServiceResourceListResult": {
      "type": "object",
      "description": "The response of a ServiceResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ServiceResource items on this page",
          "items": {
            "$ref": "#/definitions/ServiceResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ServiceResourceProperties": {
      "type": "object",
      "description": "The service resource properties.",
      "properties": {
        "serviceKind": {
          "type": "string",
          "description": "Discriminator property for ServiceResourceProperties."
        },
        "provisioningState": {
          "type": "string",
          "description": "The current deployment or provisioning state, which only appears in the response",
          "readOnly": true
        },
        "serviceTypeName": {
          "type": "string",
          "description": "The name of the service type"
        },
        "partitionDescription": {
          "$ref": "#/definitions/Partition",
          "description": "Describes how the service is partitioned."
        },
        "servicePackageActivationMode": {
          "$ref": "#/definitions/ServicePackageActivationMode",
          "description": "The activation Mode of the service package"
        },
        "serviceDnsName": {
          "type": "string",
          "description": "Dns name used for the service. If this is specified, then the DNS name can be used to return the IP addresses of service endpoints for application layer protocols (e.g., HTTP).\nWhen updating serviceDnsName, old name may be temporarily resolvable. However, rely on new name.\nWhen removing serviceDnsName, removed name may temporarily be resolvable. Do not rely on the name being unresolvable.\n"
        }
      },
      "discriminator": "serviceKind",
      "required": [
        "serviceKind",
        "serviceTypeName",
        "partitionDescription"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResourcePropertiesBase"
        }
      ]
    },
    "ServiceResourcePropertiesBase": {
      "type": "object",
      "description": "The common service resource properties.",
      "properties": {
        "placementConstraints": {
          "type": "string",
          "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
        },
        "correlationScheme": {
          "type": "array",
          "description": "A list that describes the correlation of the service with other services.",
          "items": {
            "$ref": "#/definitions/ServiceCorrelation"
          },
          "x-ms-identifiers": []
        },
        "serviceLoadMetrics": {
          "type": "array",
          "description": "The service load metrics is given as an array of ServiceLoadMetric objects.",
          "items": {
            "$ref": "#/definitions/ServiceLoadMetric"
          },
          "x-ms-identifiers": []
        },
        "servicePlacementPolicies": {
          "type": "array",
          "description": "A list that describes the correlation of the service with other services.",
          "items": {
            "$ref": "#/definitions/ServicePlacementPolicy"
          },
          "x-ms-identifiers": []
        },
        "defaultMoveCost": {
          "$ref": "#/definitions/MoveCost",
          "description": "Specifies the move cost for the service."
        },
        "scalingPolicies": {
          "type": "array",
          "description": "Scaling policies for this service.",
          "items": {
            "$ref": "#/definitions/ScalingPolicy"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ServiceScalingMechanismKind": {
      "type": "string",
      "enum": [
        "ScalePartitionInstanceCount",
        "AddRemoveIncrementalNamedPartition"
      ],
      "x-ms-enum": {
        "name": "ServiceScalingMechanismKind",
        "modelAsString": true,
        "values": [
          {
            "name": "ScalePartitionInstanceCount",
            "value": "ScalePartitionInstanceCount",
            "description": "Represents a scaling mechanism for adding or removing instances of stateless service partition. The value is 0."
          },
          {
            "name": "AddRemoveIncrementalNamedPartition",
            "value": "AddRemoveIncrementalNamedPartition",
            "description": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. The value is 1."
          }
        ]
      }
    },
    "ServiceScalingTriggerKind": {
      "type": "string",
      "enum": [
        "AveragePartitionLoadTrigger",
        "AverageServiceLoadTrigger"
      ],
      "x-ms-enum": {
        "name": "ServiceScalingTriggerKind",
        "modelAsString": true,
        "values": [
          {
            "name": "AveragePartitionLoadTrigger",
            "value": "AveragePartitionLoadTrigger",
            "description": "Represents a scaling trigger related to an average load of a metric/resource of a partition. The value is 0."
          },
          {
            "name": "AverageServiceLoadTrigger",
            "value": "AverageServiceLoadTrigger",
            "description": "Represents a scaling policy related to an average load of a metric/resource of a service. The value is 1."
          }
        ]
      }
    },
    "ServiceTypeHealthPolicy": {
      "type": "object",
      "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
      "properties": {
        "maxPercentUnhealthyServices": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
          "maximum": 100
        },
        "maxPercentUnhealthyPartitionsPerService": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
          "maximum": 100
        },
        "maxPercentUnhealthyReplicasPerPartition": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
          "maximum": 100
        }
      },
      "required": [
        "maxPercentUnhealthyServices",
        "maxPercentUnhealthyPartitionsPerService",
        "maxPercentUnhealthyReplicasPerPartition"
      ]
    },
    "ServiceUpdateParameters": {
      "type": "object",
      "description": "Service update request",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Service update parameters",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SettingsParameterDescription": {
      "type": "object",
      "description": "Describes a parameter in fabric settings of the cluster.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The parameter name of fabric setting."
        },
        "value": {
          "type": "string",
          "description": "The parameter value of fabric setting."
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "SettingsSectionDescription": {
      "type": "object",
      "description": "Describes a section in the fabric settings of the cluster.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The section name of the fabric settings."
        },
        "parameters": {
          "type": "array",
          "description": "The collection of parameters in the section.",
          "items": {
            "$ref": "#/definitions/SettingsParameterDescription"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "name",
        "parameters"
      ]
    },
    "SingletonPartitionScheme": {
      "type": "object",
      "description": "SingletonPartitionScheme",
      "allOf": [
        {
          "$ref": "#/definitions/Partition"
        }
      ],
      "x-ms-discriminator-value": "Singleton"
    },
    "Sku": {
      "type": "object",
      "description": "Service Fabric managed cluster Sku definition",
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuName",
          "description": "Sku Name."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuName": {
      "type": "string",
      "enum": [
        "Basic",
        "Standard"
      ],
      "x-ms-enum": {
        "name": "SkuName",
        "modelAsString": true,
        "values": [
          {
            "name": "Basic",
            "value": "Basic",
            "description": "Basic requires a minimum of 3 nodes and allows only 1 node type."
          },
          {
            "name": "Standard",
            "value": "Standard",
            "description": "Requires a minimum of 5 nodes and allows 1 or more node type."
          }
        ]
      }
    },
    "StatefulServiceProperties": {
      "type": "object",
      "description": "The properties of a stateful service resource.",
      "properties": {
        "hasPersistedState": {
          "type": "boolean",
          "description": "A flag indicating whether this is a persistent service which stores states on the local disk. If it is then the value of this property is true, if not it is false."
        },
        "targetReplicaSetSize": {
          "type": "integer",
          "format": "int32",
          "description": "The target replica set size as a number.",
          "minimum": 1
        },
        "minReplicaSetSize": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum replica set size as a number.",
          "minimum": 1
        },
        "replicaRestartWaitDuration": {
          "type": "string",
          "description": "The duration between when a replica goes down and when a new replica is created, represented in ISO 8601 format \"hh:mm:ss\"."
        },
        "quorumLossWaitDuration": {
          "type": "string",
          "description": "The maximum duration for which a partition is allowed to be in a state of quorum loss, represented in ISO 8601 format \"hh:mm:ss\"."
        },
        "standByReplicaKeepDuration": {
          "type": "string",
          "description": "The definition on how long StandBy replicas should be maintained before being removed, represented in ISO 8601 format \"hh:mm:ss\"."
        },
        "servicePlacementTimeLimit": {
          "type": "string",
          "description": "The duration for which replicas can stay InBuild before reporting that build is stuck, represented in ISO 8601 format \"hh:mm:ss\"."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "Stateful"
    },
    "StatelessServiceProperties": {
      "type": "object",
      "description": "The properties of a stateless service resource.",
      "properties": {
        "instanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "The instance count.",
          "minimum": -1
        },
        "minInstanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "MinInstanceCount is the minimum number of instances that must be up to meet the EnsureAvailability safety check during operations like upgrade or deactivate node. The actual number that is used is max( MinInstanceCount, ceil( MinInstancePercentage/100.0 * InstanceCount) ). Note, if InstanceCount is set to -1, during MinInstanceCount computation -1 is first converted into the number of nodes on which the instances are allowed to be placed according to the placement constraints on the service."
        },
        "minInstancePercentage": {
          "type": "integer",
          "format": "int32",
          "description": "MinInstancePercentage is the minimum percentage of InstanceCount that must be up to meet the EnsureAvailability safety check during operations like upgrade or deactivate node. The actual number that is used is max( MinInstanceCount, ceil( MinInstancePercentage/100.0 * InstanceCount) ). Note, if InstanceCount is set to -1, during MinInstancePercentage computation, -1 is first converted into the number of nodes on which the instances are allowed to be placed according to the placement constraints on the service."
        }
      },
      "required": [
        "instanceCount"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "Stateless"
    },
    "SubResource": {
      "type": "object",
      "description": "Azure resource identifier.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource identifier."
        }
      }
    },
    "Subnet": {
      "type": "object",
      "description": "Describes a Subnet.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Subnet name."
        },
        "enableIpv6": {
          "type": "boolean",
          "description": "Indicates wether to enable Ipv6 or not. If not provided, it will take the same configuration as the cluster."
        },
        "privateEndpointNetworkPolicies": {
          "$ref": "#/definitions/PrivateEndpointNetworkPolicies",
          "description": "Enable or Disable apply network policies on private end point in the subnet."
        },
        "privateLinkServiceNetworkPolicies": {
          "$ref": "#/definitions/PrivateLinkServiceNetworkPolicies",
          "description": "Enable or Disable apply network policies on private link service in the subnet."
        },
        "networkSecurityGroupId": {
          "type": "string",
          "description": "Full resource id for the network security group."
        }
      },
      "required": [
        "name"
      ]
    },
    "UniformInt64RangePartitionScheme": {
      "type": "object",
      "description": "Describes a partitioning scheme where an integer range is allocated evenly across a number of partitions.",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of partitions."
        },
        "lowKey": {
          "type": "integer",
          "format": "int32",
          "description": "The lower bound of the partition key range that\nshould be split between the partition ‘Count’\n"
        },
        "highKey": {
          "type": "integer",
          "format": "int32",
          "description": "The upper bound of the partition key range that\nshould be split between the partition ‘Count’\n"
        }
      },
      "required": [
        "count",
        "lowKey",
        "highKey"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Partition"
        }
      ],
      "x-ms-discriminator-value": "UniformInt64Range"
    },
    "UpdateType": {
      "type": "string",
      "enum": [
        "Default",
        "ByUpgradeDomain"
      ],
      "x-ms-enum": {
        "name": "UpdateType",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "Default",
            "description": "The operation will proceed in all specified nodes at the same time."
          },
          {
            "name": "ByUpgradeDomain",
            "value": "ByUpgradeDomain",
            "description": "The operation will proceed one upgrade domain at a time, checking the health in between each to continue."
          }
        ]
      }
    },
    "VMSize": {
      "type": "object",
      "description": "VM Sizes properties.",
      "properties": {
        "size": {
          "type": "string",
          "description": "VM Size name.",
          "readOnly": true
        }
      }
    },
    "VaultCertificate": {
      "type": "object",
      "description": "Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.",
      "properties": {
        "certificateUrl": {
          "type": "string",
          "description": "This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  \"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>  \"password\":\"<pfx-file-password>\"<br>}"
        },
        "certificateStore": {
          "type": "string",
          "description": "For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name <UppercaseThumbprint>.crt for the X509 certificate file and <UppercaseThumbprint>.prv for private key. Both of these files are .pem formatted."
        }
      },
      "required": [
        "certificateUrl",
        "certificateStore"
      ]
    },
    "VaultSecretGroup": {
      "type": "object",
      "description": "Specifies set of certificates that should be installed onto the virtual machines.",
      "properties": {
        "sourceVault": {
          "$ref": "#/definitions/SubResource",
          "description": "The relative URL of the Key Vault containing all of the certificates in VaultCertificates."
        },
        "vaultCertificates": {
          "type": "array",
          "description": "The list of key vault references in SourceVault which contain certificates.",
          "items": {
            "$ref": "#/definitions/VaultCertificate"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "sourceVault",
        "vaultCertificates"
      ]
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2023-03-01-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_03_01_preview",
            "value": "2023-03-01-preview"
          }
        ]
      }
    },
    "VmImagePlan": {
      "type": "object",
      "description": "Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started ->. Enter any required information and then click Save.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The plan ID."
        },
        "product": {
          "type": "string",
          "description": "Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element."
        },
        "promotionCode": {
          "type": "string",
          "description": "The promotion code."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher ID."
        }
      }
    },
    "VmManagedIdentity": {
      "type": "object",
      "description": "Identities for the virtual machine scale set under the node type.",
      "properties": {
        "userAssignedIdentities": {
          "type": "array",
          "description": "The list of user identities associated with the virtual machine scale set under the node type. Each entry will be an ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VmSetupAction": {
      "type": "string",
      "enum": [
        "EnableContainers",
        "EnableHyperV"
      ],
      "x-ms-enum": {
        "name": "VmSetupAction",
        "modelAsString": true,
        "values": [
          {
            "name": "EnableContainers",
            "value": "EnableContainers",
            "description": "Enable windows containers feature."
          },
          {
            "name": "EnableHyperV",
            "value": "EnableHyperV",
            "description": "Enables windows HyperV feature."
          }
        ]
      }
    },
    "VmssDataDisk": {
      "type": "object",
      "description": "Managed data disk description.",
      "properties": {
        "lun": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. Lun 0 is reserved for the service fabric data disk.",
          "minimum": 1
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "Disk size for each vm in the node type in GBs."
        },
        "diskType": {
          "$ref": "#/definitions/DiskType",
          "description": "Managed data disk type. Specifies the storage account type for the managed disk"
        },
        "diskLetter": {
          "type": "string",
          "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created.",
          "pattern": "^[a-zA-Z]{1}$"
        }
      },
      "required": [
        "lun",
        "diskSizeGB",
        "diskType",
        "diskLetter"
      ]
    },
    "VmssExtension": {
      "type": "object",
      "description": "Specifies set of extensions that should be installed onto the virtual machines.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the extension."
        },
        "properties": {
          "$ref": "#/definitions/VmssExtensionProperties",
          "description": "Describes the properties of a Virtual Machine Scale Set Extension."
        }
      },
      "required": [
        "name",
        "properties"
      ]
    },
    "VmssExtensionProperties": {
      "type": "object",
      "description": "Describes the properties of a Virtual Machine Scale Set Extension.",
      "properties": {
        "publisher": {
          "type": "string",
          "description": "The name of the extension handler publisher."
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Specifies the version of the script handler."
        },
        "autoUpgradeMinorVersion": {
          "type": "boolean",
          "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
        },
        "settings": {
          "type": "object",
          "description": "Json formatted public settings for the extension.",
          "additionalProperties": {}
        },
        "protectedSettings": {
          "type": "object",
          "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.",
          "additionalProperties": {}
        },
        "forceUpdateTag": {
          "type": "string",
          "description": "If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed."
        },
        "provisionAfterExtensions": {
          "type": "array",
          "description": "Collection of extension names after which this extension needs to be provisioned.",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state, which only appears in the response.",
          "readOnly": true
        },
        "enableAutomaticUpgrade": {
          "type": "boolean",
          "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available."
        }
      },
      "required": [
        "publisher",
        "type",
        "typeHandlerVersion"
      ]
    },
    "ZonalUpdateMode": {
      "type": "string",
      "enum": [
        "Standard",
        "Fast"
      ],
      "x-ms-enum": {
        "name": "ZonalUpdateMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Standard",
            "value": "Standard",
            "description": "The cluster will use 5 upgrade domains for Cross Az Node types."
          },
          {
            "name": "Fast",
            "value": "Fast",
            "description": "The cluster will use a maximum of 3 upgrade domains per zone instead of 5 for Cross Az Node types for faster deployments."
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
