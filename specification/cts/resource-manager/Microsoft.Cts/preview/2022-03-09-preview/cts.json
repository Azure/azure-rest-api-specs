{
  "swagger": "2.0",
  "info": {
    "version": "2022-03-09-preview",
    "title": "ctsrp",
    "description": "Cloud transfer service resource provider"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cts/flows/{flowName}": {
      "get": {
        "description": "Gets flow resource.",
        "x-ms-examples": {
          "Gets flow resource": {
            "$ref": "examples/getFlow.json"
          }
        },
        "operationId": "Flows_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/flowNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the flows resource.",
            "schema": {
              "$ref": "#/definitions/flow"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "Creates or updates the flow resource.",
        "operationId": "Flows_CreateOrUpdate",
        "x-ms-examples": {
          "Creates or updates the flow resource": {
            "$ref": "examples/createOrUpdateFlow.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/flowNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "flow",
            "description": "Flow body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/flow"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created the flows resource.",
            "schema": {
              "$ref": "#/definitions/flow"
            }
          },
          "201": {
            "description": "Accepted creation the flows resource.",
            "schema": {
              "$ref": "#/definitions/flow"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "description": "Deletes the flow resource.",
        "x-ms-examples": {
          "Deletes the flow resource": {
            "$ref": "examples/deleteFlow.json"
          }
        },
        "operationId": "Flows_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/flowNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted the flows resource."
          },
          "202": {
            "description": "Accepted delete the flows resource."
          },
          "204": {
            "description": "Deleted the flows resource."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "description": "Updates the flow resource.",
        "operationId": "Flows_Update",
        "x-ms-examples": {
          "Updates the flow resource": {
            "$ref": "examples/patchFlow.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/flowNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "flow",
            "description": "Flow body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/flowsPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated the flows resource.",
            "schema": {
              "$ref": "#/definitions/flow"
            }
          },
          "202": {
            "description": "Accepted update to the flows resource.",
            "schema": {
              "$ref": "#/definitions/flow"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cts/flows/{flowName}/enable": {
      "post": {
        "description": "Enables the specified flow.",
        "x-ms-examples": {
          "Enables the specified flow": {
            "$ref": "examples/enableOrDisableFlow.json"
          }
        },
        "operationId": "Flows_Enable",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/flowNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Enables a flow.",
            "schema": {
              "$ref": "#/definitions/flow"
            }
          },
          "202": {
            "description": "Enables a flow.",
            "schema": {
              "$ref": "#/definitions/flow"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cts/flows/{flowName}/disable": {
      "post": {
        "description": "Disables the specified flow",
        "x-ms-examples": {
          "Disables the specified flow": {
            "$ref": "examples/enableOrDisableFlow.json"
          }
        },
        "operationId": "Flows_Disable",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/flowNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Disables a flow.",
            "schema": {
              "$ref": "#/definitions/flow"
            }
          },
          "202": {
            "description": "Disables a flow.",
            "schema": {
              "$ref": "#/definitions/flow"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cts/flows": {
      "get": {
        "description": "Gets flows in a resource group.",
        "x-ms-examples": {
          "Gets flows in a resource group": {
            "$ref": "examples/listFlowsByResourceGroup.json"
          }
        },
        "operationId": "Flows_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Listed all flows under the resource group.",
            "schema": {
              "$ref": "#/definitions/flowsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Cts/flows": {
      "get": {
        "description": "Gets flows in a subscription",
        "x-ms-examples": {
          "Gets flows in a subscription": {
            "$ref": "examples/listFlowsBySubscription.json"
          }
        },
        "operationId": "Flows_ListBySubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Listed all flows under the subscription.",
            "schema": {
              "$ref": "#/definitions/flowsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cts/connections/{connectionName}": {
      "get": {
        "description": "Gets connection resource.",
        "x-ms-examples": {
          "Gets connection resource": {
            "$ref": "examples/getConnection.json"
          }
        },
        "operationId": "Connections_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/connectionNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the connections resource.",
            "schema": {
              "$ref": "#/definitions/connection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "Creates or updates the connection resource.",
        "operationId": "Connections_CreateOrUpdate",
        "x-ms-examples": {
          "Creates or updates the connection resource": {
            "$ref": "examples/createOrUpdateConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/connectionNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "connection",
            "description": "Connection body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/connection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created the connections resource.",
            "schema": {
              "$ref": "#/definitions/connection"
            }
          },
          "201": {
            "description": "Accepted create of the connections resource.",
            "schema": {
              "$ref": "#/definitions/connection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "description": "Deletes the connection resource.",
        "x-ms-examples": {
          "Deletes the connection resource": {
            "$ref": "examples/deleteConnection.json"
          }
        },
        "operationId": "Connections_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/connectionNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted the connections resource."
          },
          "202": {
            "description": "Accepted delete the connections resource."
          },
          "204": {
            "description": "Deleted the connections resource."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "description": "Updates the connection resource.",
        "operationId": "Connections_Update",
        "x-ms-examples": {
          "Updates the connection resource": {
            "$ref": "examples/patchConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/connectionNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "connection",
            "description": "Connection body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/connectionsPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated the connections resource.",
            "schema": {
              "$ref": "#/definitions/connection"
            }
          },
          "202": {
            "description": "Accepted update to the connections resource.",
            "schema": {
              "$ref": "#/definitions/connection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cts/connections": {
      "get": {
        "description": "Gets connections in a resource group.",
        "x-ms-examples": {
          "Gets connections in a resource group": {
            "$ref": "examples/listConnectionsByResourceGroup.json"
          }
        },
        "operationId": "Connections_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Listed all connections under the resource group.",
            "schema": {
              "$ref": "#/definitions/connectionsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Cts/connections": {
      "get": {
        "description": "Gets connections in a subscription.",
        "x-ms-examples": {
          "Gets connections in a subscription": {
            "$ref": "examples/listConnectionsBySubscription.json"
          }
        },
        "operationId": "Connections_ListBySubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Listed all connections under the subscription.",
            "schema": {
              "$ref": "#/definitions/connectionsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cts/pipelines/{pipelineName}": {
      "get": {
        "description": "Gets pipeline resource.",
        "x-ms-examples": {
          "Gets pipeline resource": {
            "$ref": "examples/getPipeline.json"
          }
        },
        "operationId": "Pipelines_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/pipelineNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved the pipelines resource.",
            "schema": {
              "$ref": "#/definitions/pipeline"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "Creates or updates the pipeline resource.",
        "operationId": "Pipelines_CreateOrUpdate",
        "x-ms-examples": {
          "Creates or updates the pipeline resource": {
            "$ref": "examples/createOrUpdatePipeline.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/pipelineNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "pipeline",
            "description": "Pipeline body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pipeline"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created the pipelines resource.",
            "schema": {
              "$ref": "#/definitions/pipeline"
            }
          },
          "201": {
            "description": "Accepted create of the pipelines resource.",
            "schema": {
              "$ref": "#/definitions/pipeline"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "description": "Deletes the pipeline resource.",
        "x-ms-examples": {
          "Deletes the pipeline resource": {
            "$ref": "examples/deletePipeline.json"
          }
        },
        "operationId": "Pipelines_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/pipelineNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted the pipelines resource."
          },
          "202": {
            "description": "Accepted delete of the pipelines resource."
          },
          "204": {
            "description": "Deleted the pipelines resource."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "description": "Updates the pipeline resource.",
        "operationId": "Pipelines_Update",
        "x-ms-examples": {
          "Updates the pipeline resource": {
            "$ref": "examples/patchPipeline.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/pipelineNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "pipeline",
            "description": "Pipeline body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pipelinesPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated the pipelines resource.",
            "schema": {
              "$ref": "#/definitions/pipeline"
            }
          },
          "202": {
            "description": "Accepted update to the pipelines resource.",
            "schema": {
              "$ref": "#/definitions/pipeline"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cts/pipelines/{pipelineName}/approveConnection": {
      "post": {
        "description": "Approves the specified connection in a pipeline.",
        "x-ms-examples": {
          "Approves the specified connection in a pipeline": {
            "$ref": "examples/approveOrRejectConnection.json"
          }
        },
        "operationId": "Pipelines_ApproveConnection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/pipelineNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "connection",
            "description": "Connection body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/connectionBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Approves a connection.",
            "schema": {
              "$ref": "#/definitions/pipeline"
            }
          },
          "202": {
            "description": "Approves a connection.",
            "schema": {
              "$ref": "#/definitions/pipeline"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cts/pipelines/{pipelineName}/rejectConnection": {
      "post": {
        "description": "Rejects the specified connection in a pipeline.",
        "x-ms-examples": {
          "Rejects the specified connection in a pipeline": {
            "$ref": "examples/approveOrRejectConnection.json"
          }
        },
        "operationId": "Pipelines_RejectConnection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/pipelineNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "connection",
            "description": "Connection body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/connectionBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rejects a connection.",
            "schema": {
              "$ref": "#/definitions/pipeline"
            }
          },
          "202": {
            "description": "Rejects a connection.",
            "schema": {
              "$ref": "#/definitions/pipeline"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cts/pipelines": {
      "get": {
        "description": "Gets pipelines in a resource group.",
        "x-ms-examples": {
          "Gets pipelines in a resource group": {
            "$ref": "examples/listPipelinesByResourceGroup.json"
          }
        },
        "operationId": "Pipelines_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Listed all pipelines under the resource group.",
            "schema": {
              "$ref": "#/definitions/pipelinesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Cts/pipelines": {
      "get": {
        "description": "Gets pipelines in a subscription.",
        "x-ms-examples": {
          "Gets pipelines in a subscription": {
            "$ref": "examples/listPipelinesBySubscription.json"
          }
        },
        "operationId": "Pipelines_ListBySubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Listed all pipelines under the subscription.",
            "schema": {
              "$ref": "#/definitions/pipelinesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Cts/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "x-ms-examples": {
          "List operations": {
            "$ref": "./examples/listOperations.json"
          }
        },
        "description": "Lists all of the available Microsoft.Cts REST API operations.",
        "responses": {
          "200": {
            "description": "Listed all of the available operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "selectedResource": {
      "type": "object",
      "description": "A resource selected from ARM",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the connection"
        },
        "id": {
          "type": "string",
          "description": "Id of the connection"
        },
        "location": {
          "type": "string",
          "description": "Location of the connection"
        },
        "subscriptionName": {
          "type": "string",
          "description": "Name of the subscription with the connection"
        }
      },
      "required": [
        "id"
      ]
    },
    "flowProperties": {
      "type": "object",
      "properties": {
        "acceptableUsePolicyForm": {
          "type": "string",
          "description": "Link to signed Acceptable Use Policy (AUP) form"
        },
        "averageDailyData": {
          "type": "integer",
          "format": "int64",
          "description": "Daily estimate on data size (GB)"
        },
        "connection": {
          "$ref": "#/definitions/selectedResource",
          "description": "The connection associated with this flow"
        },
        "dataflowGuid": {
          "type": "string",
          "description": "Dataflow GUID associated with this flow",
          "readOnly": true
        },
        "storageLocation": {
          "enum": [
            "CloudVault",
            "Other"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "storageLocation",
            "modelAsString": true
          },
          "description": "Data currently stored in CloudVault?"
        },
        "dataTypes": {
          "type": "array",
          "items": {
            "enum": [
              "OfficialBuilds",
              "VHDs",
              "OfficeDocuments",
              "Scripts",
              "JSON",
              "Database",
              "Other"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "dataTypes",
              "modelAsString": true
            }
          },
          "description": "List of data types that this Dataflow will service"
        },
        "dataUse": {
          "type": "string",
          "description": "How will the data be used on the high side?"
        },
        "destination": {
          "type": "string",
          "description": "What is the destination of this data? (beyond the high-side Storage Account?)"
        },
        "email": {
          "type": "string",
          "description": "Microsoft corporate e-mail address"
        },
        "incidentNumber": {
          "type": "integer",
          "format": "int64",
          "description": "ICM (Incident Management) number in high side where onboarding details are entered"
        },
        "accessForManualTransfers": {
          "enum": [
            "JIT",
            "None"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "accessForManualTransfers",
            "modelAsString": true
          },
          "description": "Please confirm JIT will be used for manual transfers, whether that be access to the source Storage Container or any service which interacts with the Storage Account"
        },
        "keyVaultUri": {
          "type": "string",
          "description": "AME, PME, or TORUS only! AKV Chain Containing SAS Token"
        },
        "usage": {
          "enum": [
            "Manual",
            "Automatic"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "usage",
            "modelAsString": true
          },
          "description": "Does your service have manual upload through the Teleport pipeline"
        },
        "manualUsersStatus": {
          "enum": [
            "Tented",
            "Standard"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "manualUsersStatus",
            "modelAsString": true
          },
          "description": "Status of manual users"
        },
        "maxData": {
          "type": "integer",
          "format": "int64",
          "description": "Enter the max (99th percentile) data sent in a day (GB)"
        },
        "origin": {
          "type": "string",
          "description": "What is the system of origin for this data?"
        },
        "primaryContactAlias": {
          "type": "string",
          "description": "Primary contact's alias for this data flow"
        },
        "secondaryContactsAliases": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Secondary contacts' aliases for this dataflow"
        },
        "serviceName": {
          "type": "string",
          "description": "Service Name"
        },
        "serviceTreeId": {
          "type": "string",
          "description": "Service Tree ID of the service"
        },
        "status": {
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "flowStatus",
            "modelAsString": true
          },
          "description": "Status of the current flow"
        },
        "storageAccountName": {
          "type": "string",
          "description": "Storage Account"
        },
        "storageContainerName": {
          "type": "string",
          "description": "Storage Container"
        },
        "storageContainerType": {
          "enum": [
            "Blob",
            "Table"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "storageContainerType",
            "modelAsString": true
          },
          "description": "Transfer Storage Blobs or Tables"
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription ID for the storage account to be onboarded"
        },
        "title": {
          "type": "string",
          "description": "Title of flow"
        },
        "useCase": {
          "type": "string",
          "description": "Use case for this data flow."
        },
        "provisioningState": {
          "description": "Provisioning state of the flow",
          "enum": [
            "Failed",
            "Succeeded",
            "Canceled",
            "Accepted"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true
          },
          "readOnly": true
        }
      },
      "required": [
        "storageAccountName",
        "storageContainerName",
        "storageContainerType",
        "connection"
      ],
      "description": "Properties of flow"
    },
    "flow": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "$ref": "#/definitions/flowProperties"
        },
        "plan": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Plan"
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "The flow resource definition."
    },
    "flowsPatch": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "The flows resource patch definition."
    },
    "flowsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/flow"
          },
          "description": "Flows array."
        },
        "nextLink": {
          "description": "Link to next results",
          "type": "string"
        }
      },
      "description": "The flows list result."
    },
    "connectionProperties": {
      "type": "object",
      "properties": {
        "remoteCloud": {
          "type": "string",
          "description": "Destination cloud of the data to be transferred"
        },
        "justification": {
          "type": "string",
          "description": "Justification for the connection request"
        },
        "status": {
          "description": "Status of the connection",
          "enum": [
            "InReview",
            "Approved",
            "Rejected",
            "Accepted"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "status",
            "modelAsString": true
          },
          "readOnly": true
        },
        "statusReason": {
          "type": "string",
          "description": "Reason for status",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the connection",
          "enum": [
            "Failed",
            "Succeeded",
            "Canceled",
            "Accepted"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true
          },
          "readOnly": true
        }
      },
      "required": [
        "remoteCloud"
      ],
      "description": "Properties of connection"
    },
    "connection": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "$ref": "#/definitions/connectionProperties"
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "The connection resource definition."
    },
    "connectionsPatch": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "The connections resource patch definition."
    },
    "connectionsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/connection"
          },
          "description": "Connections array."
        },
        "nextLink": {
          "description": "Link to next results",
          "type": "string"
        }
      },
      "description": "The connections list result."
    },
    "operationStatusProperties": {
      "type": "object",
      "description": "Operation status associated with the last patch request",
      "properties": {
        "status": {
          "enum": [
            "Failed",
            "Succeeded"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "operationStatusEnum",
            "modelAsString": true
          },
          "description": "Operation status for the last patch request for this connection.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "Operation status ID of the last patch request for this connection.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Message for the operation for the last patch request for this connection.",
          "readOnly": true
        }
      }
    },
    "internalMetadataProperties": {
      "type": "object",
      "description": "Internal metadata of the connection inside pipeline.",
      "properties": {
        "operationStatus": {
          "$ref": "#/definitions/operationStatusProperties"
        },
        "statusSetBy": {
          "type": "string",
          "description": "User that last set the approved status for this connection",
          "readOnly": true
        }
      },
      "additionalProperties": {}
    },
    "pipelineConnection": {
      "description": "Connection body inside a pipeline",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Connection id inside pipeline"
        },
        "name": {
          "type": "string",
          "description": "Connection name inside pipeline",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Connection type inside pipeline",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Connection location inside pipeline",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "Connection etag inside pipeline",
          "readOnly": true
        },
        "systemData": {
          "readOnly": true,
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData"
        },
        "properties": {
          "type": "object",
          "description": "Connection properties inside pipeline",
          "properties": {
            "internalMetadata": {
              "$ref": "#/definitions/internalMetadataProperties"
            }
          },
          "additionalProperties": {}
        }
      },
      "additionalProperties": {},
      "required": [
        "id"
      ]
    },
    "pipelineProperties": {
      "type": "object",
      "properties": {
        "remoteCloud": {
          "type": "string",
          "description": "Remote cloud of the data to be transferred or received"
        },
        "connections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pipelineConnection"
          },
          "description": "Connections associated with pipeline",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the pipeline",
          "enum": [
            "Failed",
            "Succeeded",
            "Canceled",
            "Accepted"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true
          },
          "readOnly": true
        }
      },
      "required": [
        "remoteCloud"
      ],
      "description": "Properties of pipeline"
    },
    "pipeline": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "$ref": "#/definitions/pipelineProperties"
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "The pipeline resource definition."
    },
    "pipelinesPatch": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "connections": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pipelineConnection"
              },
              "description": "Connections associated with pipeline"
            }
          },
          "description": "Properties of pipelines patch body."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "The pipelines resource patch definition."
    },
    "pipelinesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pipeline"
          },
          "description": "Pipelines array."
        },
        "nextLink": {
          "description": "Link to next results",
          "type": "string"
        }
      },
      "description": "The pipelines list result."
    },
    "connectionBody": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the connection to approve or reject."
        },
        "statusReason": {
          "type": "string",
          "description": "Reason for approval or rejection."
        }
      },
      "required": [
        "id"
      ],
      "description": "The connection to approve or reject."
    }
  },
  "parameters": {
    "flowNameParameter": {
      "x-ms-parameter-location": "method",
      "name": "flowName",
      "in": "path",
      "required": true,
      "type": "string",
      "maxLength": 64,
      "minLength": 3,
      "description": "The name for the flow that is to be onboarded."
    },
    "connectionNameParameter": {
      "x-ms-parameter-location": "method",
      "name": "connectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "maxLength": 64,
      "minLength": 3,
      "description": "The name for the connection that is to be requested."
    },
    "pipelineNameParameter": {
      "x-ms-parameter-location": "method",
      "name": "pipelineName",
      "in": "path",
      "required": true,
      "type": "string",
      "maxLength": 64,
      "minLength": 3,
      "description": "The name for the pipeline that is to be requested."
    }
  }
}
