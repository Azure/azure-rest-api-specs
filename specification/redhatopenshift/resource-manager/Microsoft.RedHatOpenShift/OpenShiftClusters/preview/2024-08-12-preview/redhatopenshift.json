{
  "swagger": "2.0",
  "info": {
    "title": "Azure Red Hat OpenShift Client",
    "description": "Rest API for Azure Red Hat OpenShift 4",
    "version": "2024-08-12-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/providers/Microsoft.RedHatOpenShift/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "Lists all of the available RP operations.",
        "description": "The operation returns the RP operations.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Lists all of the available RP operations.": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RedHatOpenShift/locations/{location}/openShiftVersions": {
      "get": {
        "tags": [
          "OpenShiftVersions"
        ],
        "summary": "Lists all OpenShift versions available to install in the specified location.",
        "description": "The operation returns the installable OpenShift versions as a string.",
        "operationId": "OpenShiftVersions_List",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpenShiftVersionList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Lists all OpenShift versions available to install in the specified location.": {
            "$ref": "./examples/OpenShiftVersions_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RedHatOpenShift/locations/{location}/openShiftVersions/{openShiftVersion}": {
      "get": {
        "tags": [
          "OpenShiftVersions"
        ],
        "summary": "Gets an available OpenShift version to install in the specified location.",
        "description": "This operation returns installable OpenShift version as a string.",
        "operationId": "OpenShiftVersions_Get",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          },
          {
            "name": "openShiftVersion",
            "in": "path",
            "description": "The desired version value of the OpenShiftVersion resource.",
            "required": true,
            "type": "string",
            "maxLength": 63,
            "minLength": 1,
            "pattern": "^(\\d+)\\.(\\d+)\\.(\\d+)(.*)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpenShiftVersion"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Gets an available OpenShift version to install in the specified location.": {
            "$ref": "./examples/OpenShiftVersions_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RedHatOpenShift/locations/{location}/platformWorkloadIdentityRoleSets": {
      "get": {
        "tags": [
          "PlatformWorkloadIdentityRoleSets"
        ],
        "summary": "Lists a mapping of OpenShift versions to identity requirements, which include operatorName, roleDefinitionName, roleDefinitionId, and serviceAccounts.",
        "description": "This operation returns a list of Platform Workload Identity Role Sets as a string",
        "operationId": "PlatformWorkloadIdentityRoleSets_List",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlatformWorkloadIdentityRoleSetList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Lists a mapping of OpenShift versions to identity requirements, which include operatorName, roleDefinitionName, roleDefinitionId, and serviceAccounts.": {
            "$ref": "./examples/PlatformWorkloadIdentityRoleSets_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RedHatOpenShift/locations/{location}/platformWorkloadIdentityRoleSets/{openShiftMinorVersion}": {
      "get": {
        "tags": [
          "PlatformWorkloadIdentityRoleSets"
        ],
        "summary": "Gets a mapping of an OpenShift version to identity requirements, which includes operatorName, roleDefinitionName, roleDefinitionId, and serviceAccounts.",
        "description": "This operation returns Platform Workload Identity Role Set as a string",
        "operationId": "PlatformWorkloadIdentityRoleSet_Get",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/LocationParameter"
          },
          {
            "name": "openShiftMinorVersion",
            "in": "path",
            "description": "The desired version value of the PlatformWorkloadIdentityRoleSet resource.",
            "required": true,
            "type": "string",
            "maxLength": 63,
            "minLength": 1,
            "pattern": "^(\\d+)\\.(\\d+)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlatformWorkloadIdentityRoleSet"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Gets a mapping of an OpenShift version to identity requirements, which includes operatorName, roleDefinitionName, roleDefinitionId, and serviceAccounts.": {
            "$ref": "./examples/PlatformWorkloadIdentityRoleSet_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RedHatOpenShift/openShiftClusters": {
      "get": {
        "tags": [
          "OpenShiftClusters"
        ],
        "summary": "Lists OpenShift clusters in the specified subscription.",
        "description": "The operation returns properties of each OpenShift cluster.",
        "operationId": "OpenShiftClusters_List",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpenShiftClusterList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Lists OpenShift clusters in the specified subscription.": {
            "$ref": "./examples/OpenShiftClusters_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RedHatOpenShift/openShiftClusters": {
      "get": {
        "tags": [
          "OpenShiftClusters"
        ],
        "summary": "Lists OpenShift clusters in the specified subscription and resource group.",
        "description": "The operation returns properties of each OpenShift cluster.",
        "operationId": "OpenShiftClusters_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpenShiftClusterList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Lists OpenShift clusters in the specified subscription and resource group.": {
            "$ref": "./examples/OpenShiftClusters_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RedHatOpenShift/openShiftClusters/{resourceName}": {
      "get": {
        "tags": [
          "OpenShiftClusters"
        ],
        "summary": "Gets a OpenShift cluster with the specified subscription, resource group and resource name.",
        "description": "The operation returns properties of a OpenShift cluster.",
        "operationId": "OpenShiftClusters_Get",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the OpenShift cluster resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpenShiftCluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Gets a OpenShift cluster with the specified subscription, resource group and resource name.": {
            "$ref": "./examples/OpenShiftClusters_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "OpenShiftClusters"
        ],
        "summary": "Creates or updates a OpenShift cluster with the specified subscription, resource group and resource name.",
        "description": "The operation returns properties of a OpenShift cluster.",
        "operationId": "OpenShiftClusters_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the OpenShift cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The OpenShift cluster resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OpenShiftCluster"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpenShiftCluster"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/OpenShiftCluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Creates or updates a OpenShift cluster with the specified subscription, resource group and resource name.": {
            "$ref": "./examples/OpenShiftClusters_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "OpenShiftClusters"
        ],
        "summary": "Deletes a OpenShift cluster with the specified subscription, resource group and resource name.",
        "description": "The operation returns nothing.",
        "operationId": "OpenShiftClusters_Delete",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the OpenShift cluster resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Deletes a OpenShift cluster with the specified subscription, resource group and resource name.": {
            "$ref": "./examples/OpenShiftClusters_Delete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "OpenShiftClusters"
        ],
        "summary": "Creates or updates a OpenShift cluster with the specified subscription, resource group and resource name.",
        "description": "The operation returns properties of a OpenShift cluster.",
        "operationId": "OpenShiftClusters_Update",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the OpenShift cluster resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The OpenShift cluster resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OpenShiftClusterUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpenShiftCluster"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/OpenShiftCluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Creates or updates a OpenShift cluster with the specified subscription, resource group and resource name.": {
            "$ref": "./examples/OpenShiftClusters_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RedHatOpenShift/openShiftClusters/{resourceName}/listAdminCredentials": {
      "post": {
        "tags": [
          "OpenShiftClusters"
        ],
        "summary": "Lists admin kubeconfig of an OpenShift cluster with the specified subscription, resource group and resource name.",
        "description": "The operation returns the admin kubeconfig.",
        "operationId": "OpenShiftClusters_ListAdminCredentials",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the OpenShift cluster resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpenShiftClusterAdminKubeconfig"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Lists admin kubeconfig of an OpenShift cluster with the specified subscription, resource group and resource name.": {
            "$ref": "./examples/OpenShiftClusters_ListAdminCredentials.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RedHatOpenShift/openShiftClusters/{resourceName}/listCredentials": {
      "post": {
        "tags": [
          "OpenShiftClusters"
        ],
        "summary": "Lists credentials of an OpenShift cluster with the specified subscription, resource group and resource name.",
        "description": "The operation returns the credentials.",
        "operationId": "OpenShiftClusters_ListCredentials",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the OpenShift cluster resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpenShiftClusterCredentials"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.  If the resource doesn't exist, 404 (Not Found) is returned.  If any of the input parameters is wrong, 400 (Bad Request) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Lists credentials of an OpenShift cluster with the specified subscription, resource group and resource name.": {
            "$ref": "./examples/OpenShiftClusters_ListCredentials.json"
          }
        }
      }
    }
  },
  "definitions": {
    "APIServerProfile": {
      "description": "APIServerProfile represents an API server profile.",
      "type": "object",
      "properties": {
        "visibility": {
          "$ref": "#/definitions/Visibility",
          "description": "API server visibility."
        },
        "url": {
          "description": "The URL to access the cluster API server.",
          "type": "string",
          "readOnly": true
        },
        "ip": {
          "description": "The IP of the cluster API server.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CloudError": {
      "description": "CloudError represents a cloud error.",
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "An error response from the service."
        }
      }
    },
    "CloudErrorBody": {
      "description": "CloudErrorBody represents the body of a cloud error.",
      "type": "object",
      "properties": {
        "code": {
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
          "type": "string"
        },
        "message": {
          "description": "A message describing the error, intended to be suitable for display in a user interface.",
          "type": "string"
        },
        "target": {
          "description": "The target of the particular error. For example, the name of the property in error.",
          "type": "string"
        },
        "details": {
          "description": "A list of additional details about the error.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ClusterProfile": {
      "description": "ClusterProfile represents a cluster profile.",
      "type": "object",
      "properties": {
        "pullSecret": {
          "description": "The pull secret for the cluster.",
          "type": "string"
        },
        "domain": {
          "description": "The domain for the cluster.",
          "type": "string"
        },
        "version": {
          "description": "The version of the cluster.",
          "type": "string"
        },
        "resourceGroupId": {
          "description": "The ID of the cluster resource group.",
          "type": "string"
        },
        "fipsValidatedModules": {
          "$ref": "#/definitions/FipsValidatedModules",
          "description": "If FIPS validated crypto modules are used"
        },
        "oidcIssuer": {
          "$ref": "#/definitions/OIDCIssuer",
          "description": "The URL of the managed OIDC issuer in a workload identity cluster."
        }
      }
    },
    "ConsoleProfile": {
      "description": "ConsoleProfile represents a console profile.",
      "type": "object",
      "properties": {
        "url": {
          "description": "The URL to access the cluster console.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Display": {
      "description": "Display represents the display details of an operation.",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Friendly name of the resource provider.",
          "type": "string"
        },
        "resource": {
          "description": "Resource type on which the operation is performed.",
          "type": "string"
        },
        "operation": {
          "description": "Operation type: read, write, delete, listKeys/action, etc.",
          "type": "string"
        },
        "description": {
          "description": "Friendly name of the operation.",
          "type": "string"
        }
      }
    },
    "EffectiveOutboundIP": {
      "description": "EffectiveOutboundIP represents an effective outbound IP resource of the cluster public load balancer.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The fully qualified Azure resource id of an IP address resource.",
          "type": "string"
        }
      }
    },
    "EncryptionAtHost": {
      "description": "EncryptionAtHost represents encryption at host state",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EncryptionAtHost",
        "modelAsString": true
      }
    },
    "FipsValidatedModules": {
      "description": "FipsValidatedModules determines if FIPS is used.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "FipsValidatedModules",
        "modelAsString": true
      }
    },
    "IngressProfile": {
      "description": "IngressProfile represents an ingress profile.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The ingress profile name.",
          "type": "string"
        },
        "visibility": {
          "$ref": "#/definitions/Visibility",
          "description": "Ingress visibility."
        },
        "ip": {
          "description": "The IP of the ingress.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "LoadBalancerProfile": {
      "description": "LoadBalancerProfile represents the profile of the cluster public load balancer.",
      "type": "object",
      "properties": {
        "managedOutboundIps": {
          "$ref": "#/definitions/ManagedOutboundIPs",
          "description": "The desired managed outbound IPs for the cluster public load balancer."
        },
        "effectiveOutboundIps": {
          "description": "The list of effective outbound IP addresses of the public load balancer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EffectiveOutboundIP"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ManagedOutboundIPs": {
      "description": "ManagedOutboundIPs represents the desired managed outbound IPs for the cluster public load balancer.",
      "type": "object",
      "properties": {
        "count": {
          "format": "int32",
          "description": "Count represents the desired number of IPv4 outbound IPs created and managed by Azure for the cluster public load balancer.  Allowed values are in the range of 1 - 20.  The default value is 1.",
          "type": "integer"
        }
      }
    },
    "MasterProfile": {
      "description": "MasterProfile represents a master profile.",
      "type": "object",
      "properties": {
        "vmSize": {
          "$ref": "#/definitions/VMSize",
          "description": "The size of the master VMs."
        },
        "subnetId": {
          "description": "The Azure resource ID of the master subnet.",
          "type": "string"
        },
        "encryptionAtHost": {
          "$ref": "#/definitions/EncryptionAtHost",
          "description": "Whether master virtual machines are encrypted at host."
        },
        "diskEncryptionSetId": {
          "description": "The resource ID of an associated DiskEncryptionSet, if applicable.",
          "type": "string"
        }
      }
    },
    "NetworkProfile": {
      "description": "NetworkProfile represents a network profile.",
      "type": "object",
      "properties": {
        "podCidr": {
          "description": "The CIDR used for OpenShift/Kubernetes Pods.",
          "type": "string"
        },
        "serviceCidr": {
          "description": "The CIDR used for OpenShift/Kubernetes Services.",
          "type": "string"
        },
        "outboundType": {
          "$ref": "#/definitions/OutboundType",
          "description": "The OutboundType used for egress traffic."
        },
        "loadBalancerProfile": {
          "$ref": "#/definitions/LoadBalancerProfile",
          "description": "The cluster load balancer profile."
        },
        "preconfiguredNSG": {
          "$ref": "#/definitions/PreconfiguredNSG",
          "description": "Specifies whether subnets are pre-attached with an NSG"
        }
      }
    },
    "OIDCIssuer": {
      "description": "OIDCIssuer represents the URL of the managed OIDC issuer in a workload identity cluster.",
      "type": "string"
    },
    "OpenShiftCluster": {
      "description": "OpenShiftCluster represents an Azure Red Hat OpenShift cluster.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/OpenShiftClusterProperties",
          "description": "The cluster properties.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../../common-types/resource-management/v6/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "Identity stores information about the cluster MSI(s) in a workload identity cluster."
        }
      }
    },
    "OpenShiftClusterAdminKubeconfig": {
      "description": "OpenShiftClusterAdminKubeconfig represents an OpenShift cluster's admin kubeconfig.",
      "type": "object",
      "properties": {
        "kubeconfig": {
          "description": "The base64-encoded kubeconfig file.",
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "OpenShiftClusterCredentials": {
      "description": "OpenShiftClusterCredentials represents an OpenShift cluster's credentials.",
      "type": "object",
      "properties": {
        "kubeadminUsername": {
          "description": "The username for the kubeadmin user.",
          "type": "string"
        },
        "kubeadminPassword": {
          "description": "The password for the kubeadmin user.",
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "OpenShiftClusterList": {
      "description": "OpenShiftClusterList represents a list of OpenShift clusters.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of OpenShift clusters.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenShiftCluster"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        }
      }
    },
    "OpenShiftClusterProperties": {
      "description": "OpenShiftClusterProperties represents an OpenShift cluster's properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The cluster provisioning state."
        },
        "clusterProfile": {
          "$ref": "#/definitions/ClusterProfile",
          "description": "The cluster profile."
        },
        "consoleProfile": {
          "$ref": "#/definitions/ConsoleProfile",
          "description": "The console profile."
        },
        "servicePrincipalProfile": {
          "$ref": "#/definitions/ServicePrincipalProfile",
          "description": "The cluster service principal profile."
        },
        "platformWorkloadIdentityProfile": {
          "$ref": "#/definitions/PlatformWorkloadIdentityProfile",
          "description": "The workload identity profile."
        },
        "networkProfile": {
          "$ref": "#/definitions/NetworkProfile",
          "description": "The cluster network profile."
        },
        "masterProfile": {
          "$ref": "#/definitions/MasterProfile",
          "description": "The cluster master profile."
        },
        "workerProfiles": {
          "description": "The cluster worker profiles.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkerProfile"
          },
          "x-ms-identifiers": []
        },
        "workerProfilesStatus": {
          "description": "The cluster worker profiles status.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkerProfile"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "apiserverProfile": {
          "$ref": "#/definitions/APIServerProfile",
          "description": "The cluster API server profile."
        },
        "ingressProfiles": {
          "description": "The cluster ingress profiles.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IngressProfile"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "OpenShiftClusterUpdate": {
      "description": "OpenShiftCluster represents an Azure Red Hat OpenShift cluster.",
      "type": "object",
      "properties": {
        "tags": {
          "$ref": "#/definitions/Tags",
          "description": "The resource tags."
        },
        "properties": {
          "$ref": "#/definitions/OpenShiftClusterProperties",
          "description": "The cluster properties.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../../common-types/resource-management/v6/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "Identity stores information about the cluster MSI(s) in a workload identity cluster."
        }
      }
    },
    "OpenShiftVersion": {
      "description": "OpenShiftVersion represents an OpenShift version that can be installed.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/OpenShiftVersionProperties",
          "description": "The properties for the OpenShiftVersion resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "OpenShiftVersionList": {
      "description": "OpenShiftVersionList represents a List of available versions.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The List of available versions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenShiftVersion"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Next Link to next operation.",
          "type": "string"
        }
      }
    },
    "OpenShiftVersionProperties": {
      "description": "OpenShiftVersionProperties represents the properties of an OpenShiftVersion.",
      "type": "object",
      "properties": {
        "version": {
          "description": "Version represents the version to create the cluster at.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "description": "Operation represents an RP operation.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}.",
          "type": "string"
        },
        "display": {
          "$ref": "#/definitions/Display",
          "description": "The object that describes the operation."
        },
        "origin": {
          "description": "Sources of requests to this operation.  Comma separated list with valid values user or system, e.g. \"user,system\".",
          "type": "string"
        }
      }
    },
    "OperationList": {
      "description": "OperationList represents an RP operation list.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of operations supported by the resource provider.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        }
      }
    },
    "OutboundType": {
      "description": "The outbound routing strategy used to provide your cluster egress to the internet.",
      "enum": [
        "Loadbalancer",
        "UserDefinedRouting"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "OutboundType",
        "modelAsString": true
      }
    },
    "PlatformWorkloadIdentity": {
      "description": "PlatformWorkloadIdentity stores information representing a single workload identity.",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The resource ID of the PlatformWorkloadIdentity resource",
          "type": "string"
        },
        "clientId": {
          "description": "The ClientID of the PlatformWorkloadIdentity resource",
          "type": "string",
          "readOnly": true
        },
        "objectId": {
          "description": "The ObjectID of the PlatformWorkloadIdentity resource",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PlatformWorkloadIdentityProfile": {
      "description": "PlatformWorkloadIdentityProfile encapsulates all information that is specific to workload identity clusters.",
      "type": "object",
      "properties": {
        "upgradeableTo": {
          "$ref": "#/definitions/UpgradeableTo"
        },
        "platformWorkloadIdentities": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/PlatformWorkloadIdentity"
          }
        }
      }
    },
    "PlatformWorkloadIdentityRole": {
      "description": "PlatformWorkloadIdentityRole represents a mapping from a particular OCP operator to the built-in role that should be assigned to that operator's corresponding managed identity.",
      "type": "object",
      "properties": {
        "operatorName": {
          "description": "OperatorName represents the name of the operator that this role is for.",
          "type": "string"
        },
        "roleDefinitionName": {
          "description": "RoleDefinitionName represents the name of the role.",
          "type": "string"
        },
        "roleDefinitionId": {
          "description": "RoleDefinitionID represents the resource ID of the role definition.",
          "type": "string"
        }
      }
    },
    "PlatformWorkloadIdentityRoleSet": {
      "description": "PlatformWorkloadIdentityRoleSet represents a mapping from the names of OCP operators to the built-in roles that should be assigned to those operator's corresponding managed identities for a particular OCP version.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PlatformWorkloadIdentityRoleSetProperties",
          "description": "The properties for the PlatformWorkloadIdentityRoleSet resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "PlatformWorkloadIdentityRoleSetList": {
      "description": "PlatformWorkloadIdentityRoleSetList represents a List of role sets.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of role sets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlatformWorkloadIdentityRoleSet"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Next Link to next operation.",
          "type": "string"
        }
      }
    },
    "PlatformWorkloadIdentityRoleSetProperties": {
      "description": "PlatformWorkloadIdentityRoleSetProperties represents the properties of a PlatformWorkloadIdentityRoleSet resource.",
      "type": "object",
      "properties": {
        "openShiftVersion": {
          "description": "OpenShiftVersion represents the version associated with this set of roles.",
          "type": "string"
        },
        "platformWorkloadIdentityRoles": {
          "description": "PlatformWorkloadIdentityRoles represents the set of roles associated with this version.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlatformWorkloadIdentityRole"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "PreconfiguredNSG": {
      "description": "PreconfiguredNSG represents whether customers want to use their own NSG attached to the subnets",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "PreconfiguredNSG",
        "modelAsString": true
      }
    },
    "ProvisioningState": {
      "description": "ProvisioningState represents a provisioning state.",
      "enum": [
        "AdminUpdating",
        "Canceled",
        "Creating",
        "Deleting",
        "Failed",
        "Succeeded",
        "Updating"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "ServicePrincipalProfile": {
      "description": "ServicePrincipalProfile represents a service principal profile.",
      "type": "object",
      "properties": {
        "clientId": {
          "description": "The client ID used for the cluster.",
          "type": "string"
        },
        "clientSecret": {
          "description": "The client secret used for the cluster.",
          "type": "string"
        }
      }
    },
    "Tags": {
      "description": "Tags represents an OpenShift cluster's tags.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "UpgradeableTo": {
      "description": "UpgradeableTo stores a single OpenShift version a workload identity cluster can be upgraded to",
      "type": "string"
    },
    "VMSize": {
      "description": "VM size availability varies by region.\nIf a node contains insufficient compute resources (memory, cpu, etc.), pods might fail to run correctly.\nFor more details on restricted VM sizes, see: https://docs.microsoft.com/en-us/azure/openshift/support-policies-v4#supported-virtual-machine-sizes",
      "type": "string"
    },
    "Visibility": {
      "description": "Visibility represents visibility.",
      "enum": [
        "Private",
        "Public"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "Visibility",
        "modelAsString": true
      }
    },
    "WorkerProfile": {
      "description": "WorkerProfile represents a worker profile.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The worker profile name.",
          "type": "string"
        },
        "vmSize": {
          "$ref": "#/definitions/VMSize",
          "description": "The size of the worker VMs."
        },
        "diskSizeGB": {
          "format": "int32",
          "description": "The disk size of the worker VMs.",
          "type": "integer"
        },
        "subnetId": {
          "description": "The Azure resource ID of the worker subnet.",
          "type": "string"
        },
        "count": {
          "format": "int32",
          "description": "The number of worker VMs.",
          "type": "integer"
        },
        "encryptionAtHost": {
          "$ref": "#/definitions/EncryptionAtHost",
          "description": "Whether master virtual machines are encrypted at host."
        },
        "diskEncryptionSetId": {
          "description": "The resource ID of an associated DiskEncryptionSet, if applicable.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "api-version": {
      "name": "api-version",
      "in": "query",
      "description": "The version of the API the caller wants to use.",
      "required": true,
      "type": "string",
      "pattern": "^\\d{2}-\\d{2}-\\d{4}(-preview)?$",
      "x-ms-parameter-location": "client"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
