{
  "swagger": "2.0",
  "info": {
    "title": "StorageActionsManagementClient",
    "version": "2023-01-01",
    "description": "The Azure Storage Actions Management API.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "StorageTasks"
    }
  ],
  "paths": {
    "/providers/Microsoft.StorageActions/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available Storage Actions Rest API operations.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "OperationsList": {
            "$ref": "./examples/misc/OperationsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StorageActions/locations/{location}/previewActions": {
      "post": {
        "operationId": "StorageTasks_PreviewActions",
        "description": "Runs the input conditions against input object metadata properties and designates matched objects in response.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Represents an Azure geography region where supported resource providers live.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters to preview action condition.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageTaskPreviewAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/StorageTaskPreviewAction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PerformStorageTaskActionsPreview": {
            "$ref": "./examples/misc/PerformStorageTaskActionsPreview.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StorageActions/storageTasks": {
      "get": {
        "operationId": "StorageTasks_ListBySubscription",
        "tags": [
          "StorageTasks"
        ],
        "description": "Lists all the storage tasks available under the subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/StorageTasksListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListStorageTasksBySubscription": {
            "$ref": "./examples/storageTasksList/ListStorageTasksBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageActions/storageTasks": {
      "get": {
        "operationId": "StorageTasks_ListByResourceGroup",
        "tags": [
          "StorageTasks"
        ],
        "description": "Lists all the storage tasks available under the given resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/StorageTasksListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListStorageTasksByResourceGroup": {
            "$ref": "./examples/storageTasksList/ListStorageTasksByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageActions/storageTasks/{storageTaskName}": {
      "get": {
        "operationId": "StorageTasks_Get",
        "tags": [
          "StorageTasks"
        ],
        "description": "Get the storage task properties",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageTaskName",
            "in": "path",
            "description": "The name of the storage task within the specified resource group. Storage task names must be between 3 and 18 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 18,
            "pattern": "^[a-z0-9]{3,18}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageTask"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetStorageTask": {
            "$ref": "./examples/storageTasksCrud/GetStorageTask.json"
          }
        }
      },
      "put": {
        "operationId": "StorageTasks_Create",
        "tags": [
          "StorageTasks"
        ],
        "description": "Asynchronously creates a new storage task resource with the specified parameters. If a storage task is already created and a subsequent create request is issued with different properties, the storage task properties will be updated. If a storage task is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageTaskName",
            "in": "path",
            "description": "The name of the storage task within the specified resource group. Storage task names must be between 3 and 18 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 18,
            "pattern": "^[a-z0-9]{3,18}$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters to create a Storage Task.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageTask"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'StorageTask' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/StorageTask"
            }
          },
          "201": {
            "description": "Resource 'StorageTask' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/StorageTask"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PutStorageTask": {
            "$ref": "./examples/storageTasksCrud/PutStorageTask.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "StorageTasks_Update",
        "tags": [
          "StorageTasks"
        ],
        "description": "Update storage task properties",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageTaskName",
            "in": "path",
            "description": "The name of the storage task within the specified resource group. Storage task names must be between 3 and 18 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 18,
            "pattern": "^[a-z0-9]{3,18}$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters to provide to update the storage task resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageTaskUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'StorageTask' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/StorageTask"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PatchStorageTask": {
            "$ref": "./examples/storageTasksCrud/PatchStorageTask.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "StorageTasks_Delete",
        "tags": [
          "StorageTasks"
        ],
        "description": "Delete the storage task resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageTaskName",
            "in": "path",
            "description": "The name of the storage task within the specified resource group. Storage task names must be between 3 and 18 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 18,
            "pattern": "^[a-z0-9]{3,18}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DeleteStorageTask": {
            "$ref": "./examples/storageTasksCrud/DeleteStorageTask.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageActions/storageTasks/{storageTaskName}/reports": {
      "get": {
        "operationId": "StorageTasksReport_List",
        "tags": [
          "StorageTasks"
        ],
        "description": "Fetch the storage tasks run report summary for each assignment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageTaskName",
            "in": "path",
            "description": "The name of the storage task within the specified resource group. Storage task names must be between 3 and 18 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 18,
            "pattern": "^[a-z0-9]{3,18}$"
          },
          {
            "name": "$maxpagesize",
            "in": "query",
            "description": "Optional, specifies the maximum number of Storage Task Assignment Resource IDs to be included in the list response.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Optional. When specified, it can be used to query using reporting properties.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageTaskReportSummary"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListStorageTasksByResourceGroup": {
            "$ref": "./examples/storageTasksList/ListStorageTasksRunReportSummary.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageActions/storageTasks/{storageTaskName}/storageTaskAssignments": {
      "get": {
        "operationId": "StorageTaskAssignment_List",
        "tags": [
          "StorageTasks"
        ],
        "description": "Lists Resource IDs of the Storage Task Assignments associated with this Storage Task.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageTaskName",
            "in": "path",
            "description": "The name of the storage task within the specified resource group. Storage task names must be between 3 and 18 characters in length and use numbers and lower-case letters only.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 18,
            "pattern": "^[a-z0-9]{3,18}$"
          },
          {
            "name": "$maxpagesize",
            "in": "query",
            "description": "Optional, specifies the maximum number of Storage Task Assignment Resource IDs to be included in the list response.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageTaskAssignmentsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListStorageTaskAssignmentsByResourceGroup": {
            "$ref": "./examples/storageTasksList/ListStorageTaskAssignmentIds.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "ElseCondition": {
      "type": "object",
      "description": "The else block of storage task operation",
      "properties": {
        "operations": {
          "type": "array",
          "description": "List of operations to execute in the else block",
          "items": {
            "$ref": "#/definitions/StorageTaskOperation"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "operations"
      ]
    },
    "IfCondition": {
      "type": "object",
      "description": "The if block of storage task operation",
      "properties": {
        "condition": {
          "type": "string",
          "description": "Condition predicate to evaluate each object. See https://aka.ms/storagetaskconditions for valid properties and operators."
        },
        "operations": {
          "type": "array",
          "description": "List of operations to execute when the condition predicate satisfies.",
          "items": {
            "$ref": "#/definitions/StorageTaskOperation"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "condition",
        "operations"
      ]
    },
    "MatchedBlockName": {
      "type": "string",
      "description": "Represents the condition block name that matched blob properties.",
      "enum": [
        "If",
        "Else",
        "None"
      ],
      "x-ms-enum": {
        "name": "MatchedBlockName",
        "modelAsString": true,
        "values": [
          {
            "name": "If",
            "value": "If"
          },
          {
            "name": "Else",
            "value": "Else"
          },
          {
            "name": "None",
            "value": "None"
          }
        ]
      }
    },
    "OnFailure": {
      "type": "string",
      "description": "Action to be taken when the operation fails for a object.",
      "enum": [
        "break"
      ],
      "x-ms-enum": {
        "name": "OnFailure",
        "modelAsString": true,
        "values": [
          {
            "name": "break",
            "value": "break"
          }
        ]
      }
    },
    "OnSuccess": {
      "type": "string",
      "description": "Action to be taken when the operation is successful for a object.",
      "enum": [
        "continue"
      ],
      "x-ms-enum": {
        "name": "OnSuccess",
        "modelAsString": true,
        "values": [
          {
            "name": "continue",
            "value": "continue"
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Represents the provisioning state of the storage task.",
      "enum": [
        "ValidateSubscriptionQuotaBegin",
        "ValidateSubscriptionQuotaEnd",
        "Accepted",
        "Creating",
        "Succeeded",
        "Deleting",
        "Canceled",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "ValidateSubscriptionQuotaBegin",
            "value": "ValidateSubscriptionQuotaBegin"
          },
          {
            "name": "ValidateSubscriptionQuotaEnd",
            "value": "ValidateSubscriptionQuotaEnd"
          },
          {
            "name": "Accepted",
            "value": "Accepted"
          },
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          },
          {
            "name": "Failed",
            "value": "Failed"
          }
        ]
      },
      "readOnly": true
    },
    "RunResult": {
      "type": "string",
      "description": "Represents the overall result of the execution for the run instance",
      "enum": [
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "RunResult",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed"
          }
        ]
      },
      "readOnly": true
    },
    "RunStatusEnum": {
      "type": "string",
      "description": "Represents the status of the execution.",
      "enum": [
        "InProgress",
        "Finished"
      ],
      "x-ms-enum": {
        "name": "RunStatusEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "InProgress",
            "value": "InProgress"
          },
          {
            "name": "Finished",
            "value": "Finished"
          }
        ]
      }
    },
    "StorageTask": {
      "type": "object",
      "description": "Represents Storage Task.",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identity of the resource."
        },
        "properties": {
          "$ref": "#/definitions/StorageTaskProperties",
          "description": "Properties of the storage task.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "identity",
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "StorageTaskAction": {
      "type": "object",
      "description": "The storage task action represents conditional statements and operations to be performed on target objects.",
      "properties": {
        "if": {
          "$ref": "#/definitions/IfCondition",
          "description": "The if block of storage task operation"
        },
        "else": {
          "$ref": "#/definitions/ElseCondition",
          "description": "The else block of storage task operation"
        }
      },
      "required": [
        "if"
      ]
    },
    "StorageTaskAssignment": {
      "type": "object",
      "description": "Storage Task Assignment associated with this Storage Task.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Resource ID of the Storage Task Assignment.",
          "readOnly": true
        }
      }
    },
    "StorageTaskAssignmentsListResult": {
      "type": "object",
      "description": "The response from the List Storage Tasks operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Storage Task Assignment Resource IDs associated with this Storage Task.",
          "items": {
            "$ref": "#/definitions/StorageTaskAssignment"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "StorageTaskOperation": {
      "type": "object",
      "description": "Represents an operation to be performed on the object",
      "properties": {
        "name": {
          "$ref": "#/definitions/StorageTaskOperationName",
          "description": "The operation to be performed on the object."
        },
        "parameters": {
          "type": "object",
          "description": "Key-value parameters for the operation.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "onSuccess": {
          "$ref": "#/definitions/OnSuccess",
          "description": "Action to be taken when the operation is successful for a object."
        },
        "onFailure": {
          "$ref": "#/definitions/OnFailure",
          "description": "Action to be taken when the operation fails for a object."
        }
      },
      "required": [
        "name"
      ]
    },
    "StorageTaskOperationName": {
      "type": "string",
      "description": "The operation to be performed on the object.",
      "enum": [
        "SetBlobTier",
        "SetBlobTags",
        "SetBlobImmutabilityPolicy",
        "SetBlobLegalHold",
        "SetBlobExpiry",
        "DeleteBlob",
        "UndeleteBlob"
      ],
      "x-ms-enum": {
        "name": "StorageTaskOperationName",
        "modelAsString": true,
        "values": [
          {
            "name": "SetBlobTier",
            "value": "SetBlobTier"
          },
          {
            "name": "SetBlobTags",
            "value": "SetBlobTags"
          },
          {
            "name": "SetBlobImmutabilityPolicy",
            "value": "SetBlobImmutabilityPolicy"
          },
          {
            "name": "SetBlobLegalHold",
            "value": "SetBlobLegalHold"
          },
          {
            "name": "SetBlobExpiry",
            "value": "SetBlobExpiry"
          },
          {
            "name": "DeleteBlob",
            "value": "DeleteBlob"
          },
          {
            "name": "UndeleteBlob",
            "value": "UndeleteBlob"
          }
        ]
      }
    },
    "StorageTaskPreviewAction": {
      "type": "object",
      "description": "Storage Task Preview Action.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageTaskPreviewActionProperties",
          "description": "Properties of the storage task preview.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ]
    },
    "StorageTaskPreviewActionCondition": {
      "type": "object",
      "description": "Represents the storage task conditions to be tested for a match with container and blob properties.",
      "properties": {
        "if": {
          "$ref": "#/definitions/StorageTaskPreviewActionIfCondition",
          "description": "The condition to be tested for a match with container and blob properties."
        },
        "elseBlockExists": {
          "type": "boolean",
          "description": "Specify whether the else block is present in the condition."
        }
      },
      "required": [
        "if",
        "elseBlockExists"
      ]
    },
    "StorageTaskPreviewActionIfCondition": {
      "type": "object",
      "description": "Represents storage task preview action condition.",
      "properties": {
        "condition": {
          "type": "string",
          "description": "Storage task condition to bes tested for a match."
        }
      }
    },
    "StorageTaskPreviewActionProperties": {
      "type": "object",
      "description": "Storage task preview action properties.",
      "properties": {
        "container": {
          "$ref": "#/definitions/StorageTaskPreviewContainerProperties",
          "description": "Properties of a sample container to test for a match with the preview action."
        },
        "blobs": {
          "type": "array",
          "description": "Properties of some sample blobs in the container to test for matches with the preview action.",
          "items": {
            "$ref": "#/definitions/StorageTaskPreviewBlobProperties"
          },
          "x-ms-identifiers": []
        },
        "action": {
          "$ref": "#/definitions/StorageTaskPreviewActionCondition",
          "description": "Preview action to test"
        }
      },
      "required": [
        "container",
        "blobs",
        "action"
      ]
    },
    "StorageTaskPreviewBlobProperties": {
      "type": "object",
      "description": "Storage task preview container properties",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of test blob"
        },
        "properties": {
          "type": "array",
          "description": "properties key value pairs to be tested for a match against the provided condition.",
          "items": {
            "$ref": "#/definitions/StorageTaskPreviewKeyValueProperties"
          },
          "x-ms-identifiers": []
        },
        "metadata": {
          "type": "array",
          "description": "metadata key value pairs to be tested for a match against the provided condition.",
          "items": {
            "$ref": "#/definitions/StorageTaskPreviewKeyValueProperties"
          },
          "x-ms-identifiers": []
        },
        "tags": {
          "type": "array",
          "description": "tags key value pairs to be tested for a match against the provided condition.",
          "items": {
            "$ref": "#/definitions/StorageTaskPreviewKeyValueProperties"
          },
          "x-ms-identifiers": []
        },
        "matchedBlock": {
          "$ref": "#/definitions/MatchedBlockName",
          "description": "Represents the condition block name that matched blob properties.",
          "readOnly": true
        }
      }
    },
    "StorageTaskPreviewContainerProperties": {
      "type": "object",
      "description": "Storage task preview container properties",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of test container"
        },
        "metadata": {
          "type": "array",
          "description": "metadata key value pairs to be tested for a match against the provided condition.",
          "items": {
            "$ref": "#/definitions/StorageTaskPreviewKeyValueProperties"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "StorageTaskPreviewKeyValueProperties": {
      "type": "object",
      "description": "Storage task preview object key value pair properties.",
      "properties": {
        "key": {
          "type": "string",
          "description": "Represents the key property of the pair."
        },
        "value": {
          "type": "string",
          "description": "Represents the value property of the pair."
        }
      }
    },
    "StorageTaskProperties": {
      "type": "object",
      "description": "Properties of the storage task.",
      "properties": {
        "taskVersion": {
          "type": "integer",
          "format": "int64",
          "description": "Storage task version.",
          "minimum": 1,
          "maximum": 1,
          "readOnly": true
        },
        "enabled": {
          "type": "boolean",
          "description": "Storage Task is enabled when set to true and disabled when set to false"
        },
        "description": {
          "type": "string",
          "description": "Text that describes the purpose of the storage task"
        },
        "action": {
          "$ref": "#/definitions/StorageTaskAction",
          "description": "The storage task action that is executed"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Represents the provisioning state of the storage task.",
          "readOnly": true
        },
        "creationTimeInUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date and time of the storage task in UTC.",
          "readOnly": true
        }
      },
      "required": [
        "enabled",
        "description",
        "action"
      ]
    },
    "StorageTaskReportInstance": {
      "type": "object",
      "description": "Storage Tasks run report instance",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageTaskReportProperties",
          "description": "Storage task execution report for a run instance."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "StorageTaskReportProperties": {
      "type": "object",
      "description": "Storage task execution report for a run instance.",
      "properties": {
        "taskAssignmentId": {
          "type": "string",
          "format": "arm-id",
          "description": "Resource ID of the Storage Task Assignment associated with this reported run.",
          "readOnly": true,
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Storage/storageAccounts/storageTaskAssignments"
              }
            ]
          }
        },
        "storageAccountId": {
          "type": "string",
          "format": "arm-id",
          "description": "Resource ID of the Storage Account where this reported run executed.",
          "readOnly": true,
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Storage/storageAccounts"
              }
            ]
          }
        },
        "startTime": {
          "type": "string",
          "description": "Start time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
          "readOnly": true
        },
        "finishTime": {
          "type": "string",
          "description": "End time of the run instance. Filter options such as startTime gt '2023-06-26T20:51:24.4494016Z' and other comparison operators can be used as described for DateTime properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
          "readOnly": true
        },
        "objectsTargetedCount": {
          "type": "string",
          "description": "Total number of objects that meet the condition as defined in the storage task assignment execution context. Filter options such as objectsTargetedCount gt 50 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
          "readOnly": true
        },
        "objectsOperatedOnCount": {
          "type": "string",
          "description": "Total number of objects that meet the storage tasks condition and were operated upon. Filter options such as objectsOperatedOnCount ge 100 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
          "readOnly": true
        },
        "objectFailedCount": {
          "type": "string",
          "description": "Total number of objects where task operation failed when was attempted. Filter options such as objectFailedCount eq 0 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
          "readOnly": true
        },
        "objectsSucceededCount": {
          "type": "string",
          "description": "Total number of objects where task operation succeeded when was attempted.Filter options such as objectsSucceededCount gt 150 and other comparison operators can be used as described for Numerical properties in https://learn.microsoft.com/en-us/rest/api/storageservices/querying-tables-and-entities#supported-comparison-operators",
          "readOnly": true
        },
        "runStatusError": {
          "type": "string",
          "description": "Well known Azure Storage error code that represents the error encountered during execution of the run instance.",
          "readOnly": true
        },
        "runStatusEnum": {
          "$ref": "#/definitions/RunStatusEnum",
          "description": "Represents the status of the execution.",
          "readOnly": true
        },
        "summaryReportPath": {
          "type": "string",
          "description": "Full path to the verbose report stored in the reporting container as specified in the assignment execution context for the storage account.",
          "readOnly": true
        },
        "taskId": {
          "type": "string",
          "format": "arm-id",
          "description": "Resource ID of the Storage Task applied during this run.",
          "readOnly": true,
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.StorageActions/storageTasks"
              }
            ]
          }
        },
        "taskVersion": {
          "type": "string",
          "description": "Storage Task Version",
          "readOnly": true
        },
        "runResult": {
          "$ref": "#/definitions/RunResult",
          "description": "Represents the overall result of the execution for the run instance",
          "readOnly": true
        }
      }
    },
    "StorageTaskReportSummary": {
      "type": "object",
      "description": "Fetch Storage Tasks Run Summary.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Gets storage tasks run result summary.",
          "items": {
            "$ref": "#/definitions/StorageTaskReportInstance"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "StorageTaskUpdateParameters": {
      "type": "object",
      "description": "Parameters of the storage task update request",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The identity of the resource."
        },
        "tags": {
          "type": "object",
          "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/StorageTaskUpdateProperties",
          "description": "Properties of the storage task.",
          "x-ms-client-flatten": true
        }
      }
    },
    "StorageTaskUpdateProperties": {
      "type": "object",
      "description": "Properties of the storage task.",
      "properties": {
        "taskVersion": {
          "type": "integer",
          "format": "int64",
          "description": "Storage task version.",
          "minimum": 1,
          "maximum": 1,
          "readOnly": true
        },
        "enabled": {
          "type": "boolean",
          "description": "Storage Task is enabled when set to true and disabled when set to false"
        },
        "description": {
          "type": "string",
          "description": "Text that describes the purpose of the storage task"
        },
        "action": {
          "$ref": "#/definitions/StorageTaskAction",
          "description": "The storage task action that is executed"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Represents the provisioning state of the storage task.",
          "readOnly": true
        },
        "creationTimeInUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date and time of the storage task in UTC.",
          "readOnly": true
        }
      }
    },
    "StorageTasksListResult": {
      "type": "object",
      "description": "The response from the List Storage Task operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Gets the list of storage tasks and their properties.",
          "items": {
            "$ref": "#/definitions/StorageTask"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    }
  },
  "parameters": {}
}
