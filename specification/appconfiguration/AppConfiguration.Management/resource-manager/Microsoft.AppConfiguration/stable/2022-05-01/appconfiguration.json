{
  "swagger": "2.0",
  "info": {
    "title": "AppConfigurationManagementClient",
    "version": "2022-05-01",
    "description": "// FIXME: (missing-service-description) Add service description",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "AadOauth2Auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "AadOauth2Auth": {
      "type": "oauth2",
      "description": "The Azure Active Directory OAuth2 Flow",
      "flow": "accessCode",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": ""
      },
      "tokenUrl": "https://login.microsoftonline.com/common/oauth2/token"
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "ConfigurationStores"
    },
    {
      "name": "DeletedConfigurationStores"
    },
    {
      "name": "PrivateEndpointConnections"
    },
    {
      "name": "PrivateLinkResources"
    },
    {
      "name": "KeyValues"
    }
  ],
  "paths": {
    "/providers/Microsoft.AppConfiguration/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/locations/{location}/providers/Microsoft.AppConfiguration/deletedConfigurationStores": {
      "get": {
        "operationId": "ConfigurationStores_ListDeleted",
        "tags": [
          "DeletedConfigurationStores"
        ],
        "description": "Gets information about the deleted configuration stores in a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeletedConfigurationStoreListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DeletedConfigurationStores_List": {
            "$ref": "./examples/ConfigurationStores_ListDeleted.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/locations/{location}/providers/Microsoft.AppConfiguration/deletedConfigurationStores/{configStoreName}": {
      "get": {
        "operationId": "ConfigurationStores_GetDeleted",
        "tags": [
          "DeletedConfigurationStores"
        ],
        "description": "Gets a deleted Azure app configuration store.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/LocationParameter"
          },
          {
            "name": "configStoreName",
            "in": "path",
            "description": "The name of the configuration store.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeletedConfigurationStore"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DeletedConfigurationStores_Get": {
            "$ref": "./examples/ConfigurationStores_GetDeleted.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/locations/{location}/providers/Microsoft.AppConfiguration/deletedConfigurationStores/{configStoreName}/purgeDeleted": {
      "post": {
        "operationId": "ConfigurationStores_PurgeDeleted",
        "tags": [
          "DeletedConfigurationStores"
        ],
        "description": "Permanently deletes the specified configuration store.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/LocationParameter"
          },
          {
            "name": "configStoreName",
            "in": "path",
            "description": "The name of the configuration store.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_-]*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Purge a deleted configuration store": {
            "$ref": "./examples/ConfigurationStores_PurgeDeleted.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AppConfiguration/checkNameAvailability": {
      "post": {
        "operationId": "CheckAppConfigurationNameAvailability",
        "description": "Checks whether the configuration store name is available for use.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Microsoft Azure subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "checkNameAvailabilityParameters",
            "in": "body",
            "description": "The object containing information for the availability request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NameAvailabilityStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AppConfiguration/configurationStores": {
      "get": {
        "operationId": "ConfigurationStores_List",
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Lists the configuration stores for a given subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfigurationStoreListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationStores_List": {
            "$ref": "./examples/ConfigurationStores_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AppConfiguration/locations/{location}/checkNameAvailability": {
      "post": {
        "operationId": "OperationsOperations_RegionalCheckNameAvailability",
        "description": "Checks whether the configuration store name is available for use.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Microsoft Azure subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The location in which uniqueness will be verified.",
            "required": true,
            "type": "string"
          },
          {
            "name": "checkNameAvailabilityParameters",
            "in": "body",
            "description": "The object containing information for the availability request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NameAvailabilityStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores": {
      "get": {
        "operationId": "ConfigurationStores_ListByResourceGroup",
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Lists the configuration stores for a given resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfigurationStoreListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationStores_ListByResourceGroup": {
            "$ref": "./examples/ConfigurationStores_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}": {
      "get": {
        "operationId": "ConfigurationStores_Get",
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Gets the properties of the specified configuration store.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configStoreName",
            "in": "path",
            "description": "The name of the configuration store.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfigurationStore"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationStores_Get": {
            "$ref": "./examples/ConfigurationStores_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ConfigurationStores_Create",
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Creates a configuration store with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configStoreName",
            "in": "path",
            "description": "The name of the configuration store.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "configStoreCreationParameters",
            "in": "body",
            "description": "The parameters for creating a configuration store.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigurationStore"
            },
            "x-ms-client-name": "configStoreCreationParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ConfigurationStore' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ConfigurationStore"
            }
          },
          "201": {
            "description": "Resource 'ConfigurationStore' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ConfigurationStore"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationStores_Create": {
            "$ref": "./examples/ConfigurationStores_Create.json"
          },
          "ConfigurationStores_Create_With_Identity": {
            "$ref": "./examples/ConfigurationStores_Create_With_Identity.json"
          },
          "ConfigurationStores_Create_With_Local_Auth_Disabled": {
            "$ref": "./examples/ConfigurationStores_Create_With_Local_Auth_Disabled.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ConfigurationStores_Update",
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Updates a configuration store with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configStoreName",
            "in": "path",
            "description": "The name of the configuration store.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "configStoreUpdateParameters",
            "in": "body",
            "description": "The parameters for updating a configuration store.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigurationStoreUpdateParameters"
            },
            "x-ms-client-name": "configStoreUpdateParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfigurationStore"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationStores_Update": {
            "$ref": "./examples/ConfigurationStores_Update.json"
          },
          "ConfigurationStores_Update_Disable_Local_Auth": {
            "$ref": "./examples/ConfigurationStores_Update_Disable_Local_Auth.json"
          },
          "ConfigurationStores_Update_With_Identity": {
            "$ref": "./examples/ConfigurationStores_Update_With_Identity.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ConfigurationStores_Delete",
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Deletes a configuration store.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configStoreName",
            "in": "path",
            "description": "The name of the configuration store.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationStores_Delete": {
            "$ref": "./examples/ConfigurationStores_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/keyValues": {
      "get": {
        "operationId": "KeyValues_ListByConfigurationStore",
        "tags": [
          "KeyValues"
        ],
        "description": "Lists the key-values for a given configuration store.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.",
            "required": false,
            "type": "string"
          },
          {
            "name": "configStoreName",
            "in": "path",
            "description": "The name of the configuration store.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/KeyValueListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "KeyValues_ListByConfigurationStore": {
            "$ref": "./examples/KeyValues_ListByConfigurationStore.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/keyValues/{keyValueName}": {
      "get": {
        "operationId": "KeyValues_Get",
        "tags": [
          "KeyValues"
        ],
        "description": "Gets the properties of the specified key-value.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configStoreName",
            "in": "path",
            "description": "The name of the configuration store.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "keyValueName",
            "in": "path",
            "description": "Identifier of key and label combination. Key and label are joined by $ character. Label is optional.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/KeyValue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "KeyValues_Get": {
            "$ref": "./examples/KeyValues_Get.json"
          }
        }
      },
      "put": {
        "operationId": "KeyValues_CreateOrUpdate",
        "tags": [
          "KeyValues"
        ],
        "description": "Creates a key-value.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configStoreName",
            "in": "path",
            "description": "The name of the configuration store.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "keyValueName",
            "in": "path",
            "description": "Identifier of key and label combination. Key and label are joined by $ character. Label is optional.",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyValueParameters",
            "in": "body",
            "description": "The parameters for creating a key-value.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KeyValue"
            },
            "x-ms-client-name": "keyValueParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'KeyValue' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/KeyValue"
            }
          },
          "201": {
            "description": "Resource 'KeyValue' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/KeyValue"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "KeyValues_CreateOrUpdate": {
            "$ref": "./examples/KeyValues_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "KeyValues_Delete",
        "tags": [
          "KeyValues"
        ],
        "description": "Deletes a key-value.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configStoreName",
            "in": "path",
            "description": "The name of the configuration store.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "keyValueName",
            "in": "path",
            "description": "Identifier of key and label combination. Key and label are joined by $ character. Label is optional.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "KeyValues_Delete": {
            "$ref": "./examples/KeyValues_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/listKeys": {
      "post": {
        "operationId": "ConfigurationStores_ListKeys",
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Lists the access key for the specified configuration store.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.",
            "required": false,
            "type": "string"
          },
          {
            "name": "configStoreName",
            "in": "path",
            "description": "The name of the configuration store.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PagedApiKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationStores_ListKeys": {
            "$ref": "./examples/ConfigurationStores_ListKeys.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_ListByConfigurationStore",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Lists all private endpoint connections for a configuration store.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configStoreName",
            "in": "path",
            "description": "The name of the configuration store.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_List": {
            "$ref": "./examples/PrivateEndpointConnections_ListByConfigurationStore.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_Get",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets the specified private endpoint connection associated with the configuration store.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configStoreName",
            "in": "path",
            "description": "The name of the configuration store.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "Private endpoint connection name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_GetConnection": {
            "$ref": "./examples/PrivateEndpointConnections_Get.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Update the state of the specified private endpoint connection associated with the configuration store.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configStoreName",
            "in": "path",
            "description": "The name of the configuration store.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "Private endpoint connection name",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnection",
            "in": "body",
            "description": "The private endpoint connection properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "x-ms-client-name": "privateEndpointConnection"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnection' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "201": {
            "description": "Resource 'PrivateEndpointConnection' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_CreateOrUpdate": {
            "$ref": "./examples/PrivateEndpointConnections_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_Delete",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Deletes a private endpoint connection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configStoreName",
            "in": "path",
            "description": "The name of the configuration store.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "Private endpoint connection name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_Delete": {
            "$ref": "./examples/PrivateEndpointConnections_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/privateLinkResources": {
      "get": {
        "operationId": "PrivateLinkResources_ListByConfigurationStore",
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Gets the private link resources that need to be created for a configuration store.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configStoreName",
            "in": "path",
            "description": "The name of the configuration store.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateLinkResources_ListGroupIds": {
            "$ref": "./examples/PrivateLinkResources_ListByConfigurationStore.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/privateLinkResources/{groupName}": {
      "get": {
        "operationId": "PrivateLinkResources_Get",
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Gets a private link resource that need to be created for a configuration store.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configStoreName",
            "in": "path",
            "description": "The name of the configuration store.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "groupName",
            "in": "path",
            "description": "The name of the private link resource group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateLinkResources_Get": {
            "$ref": "./examples/PrivateLinkResources_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/regenerateKey": {
      "post": {
        "operationId": "ConfigurationStores_RegenerateKey",
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Regenerates an access key for the specified configuration store.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "configStoreName",
            "in": "path",
            "description": "The name of the configuration store.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_-]*$"
          },
          {
            "name": "regenerateKeyParameters",
            "in": "body",
            "description": "The parameters for regenerating an access key.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateKeyParameters"
            },
            "x-ms-client-name": "regenerateKeyParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationStores_RegenerateKey": {
            "$ref": "./examples/ConfigurationStores_RegenerateKey.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ActionsRequired": {
      "type": "string",
      "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
      "enum": [
        "None",
        "Recreate"
      ],
      "x-ms-enum": {
        "name": "ActionsRequired",
        "modelAsString": true
      }
    },
    "ApiKey": {
      "type": "object",
      "description": "An API key used for authenticating with a configuration store endpoint.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The key ID.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "A name for the key describing its usage.",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "description": "The value of the key that is used for authentication purposes.",
          "readOnly": true
        },
        "connectionString": {
          "type": "string",
          "description": "A connection string that can be used by supporting clients for authentication.",
          "readOnly": true
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "The last time any of the key's properties were modified.",
          "readOnly": true
        },
        "readOnly": {
          "type": "boolean",
          "description": "Whether this key can only be used for read operations.",
          "readOnly": true
        }
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "CheckNameAvailabilityParameters": {
      "type": "object",
      "description": "Parameters used for checking whether a resource name is available.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name to check for availability."
        },
        "type": {
          "$ref": "#/definitions/ConfigurationResourceType",
          "description": "The resource type to check for name availability."
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "ConfigurationResourceType": {
      "type": "string",
      "description": "The resource type to check for name availability.",
      "enum": [
        "Microsoft.AppConfiguration/configurationStores"
      ],
      "x-ms-enum": {
        "name": "ConfigurationResourceType",
        "modelAsString": true
      }
    },
    "ConfigurationStore": {
      "type": "object",
      "description": "The configuration store along with all resource properties. The Configuration Store will have all information to begin utilizing it.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigurationStoreProperties",
          "description": "The properties of a configuration store.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ConfigurationStoreListResult": {
      "type": "object",
      "description": "The response of a ConfigurationStore list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ConfigurationStore items on this page",
          "items": {
            "$ref": "#/definitions/ConfigurationStore"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ConfigurationStoreProperties": {
      "type": "object",
      "description": "The properties of a configuration store.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the configuration store.",
          "readOnly": true
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date of configuration store.",
          "readOnly": true
        },
        "endpoint": {
          "type": "string",
          "description": "The DNS endpoint where the configuration store API will be available.",
          "readOnly": true
        },
        "encryption": {
          "$ref": "#/definitions/EncryptionProperties",
          "description": "The encryption settings of the configuration store."
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "The list of private endpoint connections that are set up for this resource.",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnectionReference"
          },
          "readOnly": true
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled."
        },
        "disableLocalAuth": {
          "type": "boolean",
          "description": "Disables all authentication methods other than AAD authentication."
        },
        "softDeleteRetentionInDays": {
          "type": "integer",
          "format": "int32",
          "description": "The amount of time in days that the configuration store will be retained when it is soft deleted.",
          "default": 7
        },
        "enablePurgeProtection": {
          "type": "boolean",
          "description": "Property specifying whether protection against purge is enabled for this configuration store."
        },
        "createMode": {
          "$ref": "#/definitions/CreateMode",
          "description": "Indicates whether the configuration store need to be recovered.",
          "x-ms-mutability": [
            "create"
          ]
        }
      }
    },
    "ConfigurationStorePropertiesUpdateParameters": {
      "type": "object",
      "description": "The properties for updating a configuration store.",
      "properties": {
        "encryption": {
          "$ref": "#/definitions/EncryptionProperties",
          "description": "The encryption settings of the configuration store."
        },
        "disableLocalAuth": {
          "type": "boolean",
          "description": "Disables all authentication methods other than AAD authentication."
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled."
        },
        "enablePurgeProtection": {
          "type": "boolean",
          "description": "Property specifying whether protection against purge is enabled for this configuration store."
        }
      }
    },
    "ConfigurationStoreUpdateParameters": {
      "type": "object",
      "description": "The parameters for updating a configuration store.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigurationStorePropertiesUpdateParameters",
          "description": "The properties for updating a configuration store.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "#/definitions/ResourceIdentity",
          "description": "The managed identity information for the configuration store."
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU of the configuration store."
        },
        "tags": {
          "type": "object",
          "description": "The ARM resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ConnectionStatus": {
      "type": "string",
      "description": "The private link service connection status.",
      "enum": [
        "Pending",
        "Approved",
        "Rejected",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "ConnectionStatus",
        "modelAsString": true
      }
    },
    "CreateMode": {
      "type": "string",
      "description": "Indicates whether the configuration store need to be recovered.",
      "enum": [
        "Recover",
        "Default"
      ],
      "x-ms-enum": {
        "name": "CreateMode",
        "modelAsString": false
      }
    },
    "DeletedConfigurationStore": {
      "type": "object",
      "description": "Deleted configuration store information with extended details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeletedConfigurationStoreProperties",
          "description": "Properties of the deleted configuration store",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DeletedConfigurationStoreListResult": {
      "type": "object",
      "description": "The response of a DeletedConfigurationStore list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DeletedConfigurationStore items on this page",
          "items": {
            "$ref": "#/definitions/DeletedConfigurationStore"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DeletedConfigurationStoreProperties": {
      "type": "object",
      "description": "Properties of the deleted configuration store.",
      "properties": {
        "configurationStoreId": {
          "type": "string",
          "description": "The resource id of the original configuration store.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the original configuration store.",
          "readOnly": true
        },
        "deletionDate": {
          "type": "string",
          "format": "date-time",
          "description": "The deleted date.",
          "readOnly": true
        },
        "scheduledPurgeDate": {
          "type": "string",
          "format": "date-time",
          "description": "The scheduled purged date.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Tags of the original configuration store.",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "purgeProtectionEnabled": {
          "type": "boolean",
          "description": "Purge protection status of the original configuration store.",
          "readOnly": true
        }
      }
    },
    "EncryptionProperties": {
      "type": "object",
      "description": "The encryption settings for a configuration store.",
      "properties": {
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "ErrorDetails": {
      "type": "object",
      "description": "The details of the error.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Error message indicating why the operation failed.",
          "readOnly": true
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "IdentityType": {
      "type": "string",
      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.",
      "enum": [
        "None",
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned, UserAssigned"
      ],
      "x-ms-enum": {
        "name": "IdentityType",
        "modelAsString": true
      }
    },
    "KeyValue": {
      "type": "object",
      "description": "The key-value resource along with all resource properties.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/KeyValueProperties",
          "description": "All key-value properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "KeyValueListResult": {
      "type": "object",
      "description": "The response of a KeyValue list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The KeyValue items on this page",
          "items": {
            "$ref": "#/definitions/KeyValue"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "KeyValueProperties": {
      "type": "object",
      "description": "All key-value properties.",
      "properties": {
        "key": {
          "type": "string",
          "description": "The primary identifier of a key-value.\nThe key is used in unison with the label to uniquely identify a key-value.",
          "readOnly": true
        },
        "label": {
          "type": "string",
          "description": "A value used to group key-values.\nThe label is used in unison with the key to uniquely identify a key-value.",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "description": "The value of the key-value."
        },
        "contentType": {
          "type": "string",
          "description": "The content type of the key-value's value.\nProviding a proper content-type can enable transformations of values when they are retrieved by applications."
        },
        "eTag": {
          "type": "string",
          "description": "An ETag indicating the state of a key-value within a configuration store.",
          "readOnly": true
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "The last time a modifying operation was performed on the given key-value.",
          "readOnly": true
        },
        "locked": {
          "type": "boolean",
          "description": "A value indicating whether the key-value is locked.\nA locked key-value may not be modified until it is unlocked.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "A dictionary of tags that can help identify what a key-value may be applicable for.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "description": "Settings concerning key vault encryption for a configuration store.",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "The URI of the key vault key used to encrypt data."
        },
        "identityClientId": {
          "type": "string",
          "description": "The client id of the identity which will be used to access key vault."
        }
      }
    },
    "LogSpecification": {
      "type": "object",
      "description": "Specifications of the Log for Azure Monitoring",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the log"
        },
        "displayName": {
          "type": "string",
          "description": "Localized friendly display name of the log"
        },
        "blobDuration": {
          "type": "string",
          "description": "Blob duration of the log"
        }
      }
    },
    "MetricDimension": {
      "type": "object",
      "description": "Specifications of the Dimension of metrics",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the dimension"
        },
        "displayName": {
          "type": "string",
          "description": "Localized friendly display name of the dimension"
        },
        "internalName": {
          "type": "string",
          "description": "Internal name of the dimension."
        }
      }
    },
    "MetricSpecification": {
      "type": "object",
      "description": "Specifications of the Metrics for Azure Monitoring",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the metric"
        },
        "displayName": {
          "type": "string",
          "description": "Localized friendly display name of the metric"
        },
        "displayDescription": {
          "type": "string",
          "description": "Localized friendly description of the metric"
        },
        "unit": {
          "type": "string",
          "description": "Unit that makes sense for the metric"
        },
        "aggregationType": {
          "type": "string",
          "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count."
        },
        "internalMetricName": {
          "type": "string",
          "description": "Internal metric name."
        },
        "dimensions": {
          "type": "array",
          "description": "Dimensions of the metric",
          "items": {
            "$ref": "#/definitions/MetricDimension"
          },
          "x-ms-identifiers": []
        },
        "fillGapWithZero": {
          "type": "boolean",
          "description": "Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published."
        }
      }
    },
    "NameAvailabilityStatus": {
      "type": "object",
      "description": "The result of a request to check the availability of a resource name.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "The value indicating whether the resource name is available.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "If any, the error message that provides more detail for the reason that the name is not available.",
          "readOnly": true
        },
        "reason": {
          "type": "string",
          "description": "If any, the reason that the name is not available.",
          "readOnly": true
        }
      }
    },
    "OperationDefinition": {
      "type": "object",
      "description": "The definition of a configuration store operation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Operation name: {provider}/{resource}/{operation}."
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Indicates whether the operation is a data action"
        },
        "display": {
          "$ref": "#/definitions/OperationDefinitionDisplay",
          "description": "The display information for the configuration store operation."
        },
        "origin": {
          "type": "string",
          "description": "Origin of the operation"
        },
        "properties": {
          "$ref": "#/definitions/OperationProperties",
          "description": "Properties of the operation"
        }
      }
    },
    "OperationDefinitionDisplay": {
      "type": "object",
      "description": "The display information for a configuration store operation.",
      "properties": {
        "provider": {
          "type": "string",
          "description": "The resource provider name: Microsoft App Configuration.\"",
          "readOnly": true
        },
        "resource": {
          "type": "string",
          "description": "The resource on which the operation is performed."
        },
        "operation": {
          "type": "string",
          "description": "The operation that users can perform."
        },
        "description": {
          "type": "string",
          "description": "The description for the operation."
        }
      }
    },
    "OperationProperties": {
      "type": "object",
      "description": "Extra Operation properties",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification",
          "description": "Service specifications of the operation"
        }
      }
    },
    "PagedApiKey": {
      "type": "object",
      "description": "The result of a request to list API keys.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ApiKey items on this page",
          "items": {
            "$ref": "#/definitions/ApiKey"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateEndpoint": {
      "type": "object",
      "description": "Private endpoint which a connection belongs to.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource Id for private endpoint"
        }
      }
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "description": "A private endpoint connection",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "The properties of a private endpoint.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "The response of a PrivateEndpointConnection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateEndpointConnection items on this page",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": "Properties of a private endpoint connection.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning status of the private endpoint connection.",
          "readOnly": true
        },
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The resource of private endpoint."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ]
    },
    "PrivateEndpointConnectionReference": {
      "type": "object",
      "description": "A reference to a related private endpoint connection.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource ID.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "The properties of a private endpoint connection.",
          "x-ms-client-flatten": true
        }
      }
    },
    "PrivateLinkResource": {
      "type": "object",
      "description": "A resource that supports private link capabilities.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Private link resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateLinkResourceListResult": {
      "type": "object",
      "description": "The response of a PrivateLinkResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateLinkResource items on this page",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "description": "Properties of a private link resource.",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The private link resource group id.",
          "readOnly": true
        },
        "requiredMembers": {
          "type": "array",
          "description": "The private link resource required member names.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "The list of required DNS zone names of the private link resource.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "description": "The state of a private link service connection.",
      "properties": {
        "status": {
          "$ref": "#/definitions/ConnectionStatus",
          "description": "The private link service connection status."
        },
        "description": {
          "type": "string",
          "description": "The private link service connection description."
        },
        "actionsRequired": {
          "$ref": "#/definitions/ActionsRequired",
          "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
          "readOnly": true
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The provisioning state of the configuration store.",
      "enum": [
        "Creating",
        "Updating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "PublicNetworkAccess": {
      "type": "string",
      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true
      }
    },
    "RegenerateKeyParameters": {
      "type": "object",
      "description": "The parameters used to regenerate an API key.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the key to regenerate."
        }
      }
    },
    "Resource": {
      "type": "object",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        }
      }
    },
    "ResourceIdentity": {
      "type": "object",
      "description": "An identity that can be associated with a resource.",
      "properties": {
        "type": {
          "$ref": "#/definitions/IdentityType",
          "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities."
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
          "additionalProperties": {
            "$ref": "#/definitions/UserIdentity"
          }
        },
        "principalId": {
          "type": "string",
          "description": "The principal id of the identity. This property will only be provided for a system-assigned identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant id associated with the resource's identity. This property will only be provided for a system-assigned identity.",
          "readOnly": true
        }
      }
    },
    "ServiceSpecification": {
      "type": "object",
      "description": "Service specification payload",
      "properties": {
        "logSpecifications": {
          "type": "array",
          "description": "Specifications of the Log for Azure Monitoring",
          "items": {
            "$ref": "#/definitions/LogSpecification"
          },
          "x-ms-identifiers": []
        },
        "metricSpecifications": {
          "type": "array",
          "description": "Specifications of the Metrics for Azure Monitoring",
          "items": {
            "$ref": "#/definitions/MetricSpecification"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Sku": {
      "type": "object",
      "description": "Describes a configuration store SKU.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The SKU name of the configuration store."
        }
      },
      "required": [
        "name"
      ]
    },
    "UserIdentity": {
      "type": "object",
      "description": "A resource identity that is managed by the user of the service.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of the user-assigned identity.",
          "readOnly": true
        },
        "clientId": {
          "type": "string",
          "description": "The client ID of the user-assigned identity.",
          "readOnly": true
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2022-05-01"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2022_05_01",
            "value": "2022-05-01",
            "description": "The 2022-05-01 API version."
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
