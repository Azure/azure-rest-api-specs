{
  "swagger": "2.0",
  "info": {
    "version": "2019-11-01-preview",
    "title": "AppConfigurationManagementClient"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.AppConfiguration/configurationStores": {
      "get": {
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Lists the configuration stores for a given subscription.",
        "operationId": "ConfigurationStores_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ConfigurationStoreListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationStores_List": {
            "$ref": "./examples/ConfigurationStoresList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores": {
      "get": {
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Lists the configuration stores for a given resource group.",
        "operationId": "ConfigurationStores_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ConfigurationStoreListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationStores_ListByResourceGroup": {
            "$ref": "./examples/ConfigurationStoresListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}": {
      "get": {
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Gets the properties of the specified configuration store.",
        "operationId": "ConfigurationStores_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ConfigurationStore"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationStores_Get": {
            "$ref": "./examples/ConfigurationStoresGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Creates a configuration store with the specified parameters.",
        "operationId": "ConfigurationStores_Create",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "configStoreCreationParameters",
            "in": "body",
            "description": "The parameters for creating a configuration store.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigurationStore"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ConfigurationStore"
            }
          },
          "201": {
            "description": "The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.",
            "schema": {
              "$ref": "#/definitions/ConfigurationStore"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationStores_Create": {
            "$ref": "./examples/ConfigurationStoresCreate.json"
          },
          "ConfigurationStores_Create_WithIdentity": {
            "$ref": "./examples/ConfigurationStoresCreateWithIdentity.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Deletes a configuration store.",
        "operationId": "ConfigurationStores_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "The request was successful; the operation will complete asynchronously."
          },
          "204": {
            "description": "No Content - the specified resource was not found."
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationStores_Delete": {
            "$ref": "./examples/ConfigurationStoresDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Updates a configuration store with the specified parameters.",
        "operationId": "ConfigurationStores_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "configStoreUpdateParameters",
            "in": "body",
            "description": "The parameters for updating a configuration store.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigurationStoreUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ConfigurationStore"
            }
          },
          "201": {
            "description": "The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.",
            "schema": {
              "$ref": "#/definitions/ConfigurationStore"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationStores_Update": {
            "$ref": "./examples/ConfigurationStoresUpdate.json"
          },
          "ConfigurationStores_Update_WithIdentity": {
            "$ref": "./examples/ConfigurationStoresUpdateWithIdentity.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AppConfiguration/checkNameAvailability": {
      "post": {
        "tags": [
          "Operations"
        ],
        "description": "Checks whether the configuration store name is available for use.",
        "operationId": "Operations_CheckNameAvailability",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "checkNameAvailabilityParameters",
            "in": "body",
            "description": "The object containing information for the availability request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/NameAvailabilityStatus"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationStores_CheckNameAvailable": {
            "$ref": "./examples/CheckNameAvailable.json"
          },
          "ConfigurationStores_CheckNameNotAvailable": {
            "$ref": "./examples/CheckNameNotAvailable.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/ListKeys": {
      "post": {
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Lists the access key for the specified configuration store.",
        "operationId": "ConfigurationStores_ListKeys",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ApiKeyListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationStores_ListKeys": {
            "$ref": "./examples/ConfigurationStoresListKeys.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/RegenerateKey": {
      "post": {
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Regenerates an access key for the specified configuration store.",
        "operationId": "ConfigurationStores_RegenerateKey",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "regenerateKeyParameters",
            "in": "body",
            "description": "The parameters for regenerating an access key.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateKeyParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ApiKey"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationStores_RegenerateKey": {
            "$ref": "./examples/ConfigurationStoresRegenerateKey.json"
          }
        }
      }
    },
    "/providers/Microsoft.AppConfiguration/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists the operations available from this provider.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/OperationDefinitionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {},
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/listKeyValue": {
      "post": {
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Lists a configuration store key-value.",
        "operationId": "ConfigurationStores_ListKeyValue",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "listKeyValueParameters",
            "in": "body",
            "description": "The parameters for retrieving a key-value.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListKeyValueParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/KeyValue"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "ConfigurationStores_ListKeyValue": {
            "$ref": "./examples/ConfigurationStoresListKeyValue.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_ListByConfigurationStore",
        "description": "Lists all private endpoint connections for a configuration store.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_List": {
            "$ref": "./examples/ConfigurationStoresListPrivateEndpointConnections.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Get",
        "description": "Gets the specified private endpoint connection associated with the configuration store.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "Private endpoint connection name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_GetConnection": {
            "$ref": "./examples/ConfigurationStoresGetPrivateEndpointConnection.json"
          }
        }
      },
      "put": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "description": "Update the state of the specified private endpoint connection associated with the configuration store.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "Private endpoint connection name",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnection",
            "in": "body",
            "description": "The private endpoint connection properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "201": {
            "description": "The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_CreateOrUpdate": {
            "$ref": "./examples/ConfigurationStoresCreatePrivateEndpointConnection.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Deletes a private endpoint connection.",
        "operationId": "PrivateEndpointConnections_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "Private endpoint connection name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "The request was successful; the operation will complete asynchronously."
          },
          "204": {
            "description": "No Content - the specified resource was not found."
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_Delete": {
            "$ref": "./examples/ConfigurationStoresDeletePrivateEndpointConnection.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "operationId": "PrivateLinkResources_ListByConfigurationStore",
        "description": "Gets the private link resources that need to be created for a configuration store.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "PrivateLinkResources_ListGroupIds": {
            "$ref": "./examples/PrivateLinkResourcesListByConfigurationStore.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/privateLinkResources/{groupName}": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "operationId": "PrivateLinkResources_Get",
        "description": "Gets a private link resource that need to be created for a configuration store.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "groupName",
            "in": "path",
            "description": "The name of the private link resource group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-ms-examples": {
          "PrivateLinkResources_Get": {
            "$ref": "./examples/PrivateLinkResourceGet.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ConfigurationStoreListResult": {
      "description": "The result of a request to list configuration stores.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigurationStore"
          }
        },
        "nextLink": {
          "description": "The URI that can be used to request the next set of paged results.",
          "type": "string"
        }
      }
    },
    "ConfigurationStore": {
      "description": "The configuration store along with all resource properties. The Configuration Store will have all information to begin utilizing it.",
      "required": [
        "location",
        "sku"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "identity": {
          "$ref": "#/definitions/ResourceIdentity",
          "description": "The managed identity information, if configured."
        },
        "properties": {
          "$ref": "#/definitions/ConfigurationStoreProperties",
          "description": "The properties of a configuration store.",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The sku of the configuration store."
        }
      }
    },
    "ConfigurationStoreProperties": {
      "description": "The properties of a configuration store.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the configuration store.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "creationDate": {
          "format": "date-time",
          "description": "The creation date of configuration store.",
          "type": "string",
          "readOnly": true
        },
        "endpoint": {
          "description": "The DNS endpoint where the configuration store API will be available.",
          "type": "string",
          "readOnly": true
        },
        "encryption": {
          "$ref": "#/definitions/EncryptionProperties",
          "description": "The encryption settings of the configuration store."
        }
      }
    },
    "EncryptionProperties": {
      "type": "object",
      "description": "The encryption settings for a configuration store.",
      "properties": {
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "description": "Settings concerning key vault encryption for a configuration store.",
      "properties": {
        "keyIdentifier": {
          "description": "The URI of the key vault key used to encrypt data.",
          "type": "string"
        },
        "identityClientId": {
          "description": "The client id of the identity which will be used to access key vault.",
          "type": "string"
        }
      }
    },
    "ConfigurationStoreUpdateParameters": {
      "description": "The parameters for updating a configuration store.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigurationStorePropertiesUpdateParameters",
          "description": "The properties for updating a configuration store.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "#/definitions/ResourceIdentity",
          "description": "The managed identity information for the configuration store."
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU of the configuration store."
        },
        "tags": {
          "description": "The ARM resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ConfigurationStorePropertiesUpdateParameters": {
      "description": "The properties for updating a configuration store.",
      "type": "object",
      "properties": {
        "encryption": {
          "$ref": "#/definitions/EncryptionProperties",
          "description": "The encryption settings of the configuration store."
        }
      }
    },
    "CheckNameAvailabilityParameters": {
      "description": "Parameters used for checking whether a resource name is available.",
      "required": [
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The name to check for availability.",
          "type": "string"
        },
        "type": {
          "description": "The resource type to check for name availability.",
          "enum": [
            "Microsoft.AppConfiguration/configurationStores"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ConfigurationResourceType",
            "modelAsString": true
          }
        }
      }
    },
    "NameAvailabilityStatus": {
      "description": "The result of a request to check the availability of a resource name.",
      "type": "object",
      "properties": {
        "nameAvailable": {
          "description": "The value indicating whether the resource name is available.",
          "type": "boolean",
          "readOnly": true
        },
        "message": {
          "description": "If any, the error message that provides more detail for the reason that the name is not available.",
          "type": "string",
          "readOnly": true
        },
        "reason": {
          "description": "If any, the reason that the name is not available.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ApiKeyListResult": {
      "description": "The result of a request to list API keys.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiKey"
          }
        },
        "nextLink": {
          "description": "The URI that can be used to request the next set of paged results.",
          "type": "string"
        }
      }
    },
    "ApiKey": {
      "description": "An API key used for authenticating with a configuration store endpoint.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The key ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "A name for the key describing its usage.",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "The value of the key that is used for authentication purposes.",
          "type": "string",
          "readOnly": true
        },
        "connectionString": {
          "description": "A connection string that can be used by supporting clients for authentication.",
          "type": "string",
          "readOnly": true
        },
        "lastModified": {
          "format": "date-time",
          "description": "The last time any of the key's properties were modified.",
          "type": "string",
          "readOnly": true
        },
        "readOnly": {
          "description": "Whether this key can only be used for read operations.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "RegenerateKeyParameters": {
      "description": "The parameters used to regenerate an API key.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The id of the key to regenerate.",
          "type": "string"
        }
      }
    },
    "ListKeyValueParameters": {
      "description": "The parameters used to list a configuration store key-value",
      "required": [
        "key"
      ],
      "type": "object",
      "properties": {
        "key": {
          "description": "The key to retrieve.",
          "type": "string"
        },
        "label": {
          "description": "The label of the key.",
          "type": "string"
        }
      }
    },
    "KeyValue": {
      "description": "The result of a request to retrieve a key-value from the specified configuration store.",
      "type": "object",
      "properties": {
        "key": {
          "description": "The primary identifier of a key-value.\r\nThe key is used in unison with the label to uniquely identify a key-value.",
          "type": "string",
          "readOnly": true
        },
        "label": {
          "description": "A value used to group key-values.\r\nThe label is used in unison with the key to uniquely identify a key-value.",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "The value of the key-value.",
          "type": "string",
          "readOnly": true
        },
        "contentType": {
          "description": "The content type of the key-value's value.\r\nProviding a proper content-type can enable transformations of values when they are retrieved by applications.",
          "type": "string",
          "readOnly": true
        },
        "eTag": {
          "description": "An ETag indicating the state of a key-value within a configuration store.",
          "type": "string",
          "readOnly": true
        },
        "lastModified": {
          "format": "date-time",
          "description": "The last time a modifying operation was performed on the given key-value.",
          "type": "string",
          "readOnly": true
        },
        "locked": {
          "description": "A value indicating whether the key-value is locked.\r\nA locked key-value may not be modified until it is unlocked.",
          "type": "boolean",
          "readOnly": true
        },
        "tags": {
          "description": "A dictionary of tags that can help identify what a key-value may be applicable for.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "OperationDefinitionListResult": {
      "description": "The result of a request to list configuration store operations.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationDefinition"
          }
        },
        "nextLink": {
          "description": "The URI that can be used to request the next set of paged results.",
          "type": "string"
        }
      }
    },
    "OperationDefinition": {
      "description": "The definition of a configuration store operation.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}.",
          "type": "string"
        },
        "display": {
          "$ref": "#/definitions/OperationDefinitionDisplay",
          "description": "The display information for the configuration store operation."
        }
      }
    },
    "OperationDefinitionDisplay": {
      "description": "The display information for a configuration store operation.",
      "type": "object",
      "properties": {
        "provider": {
          "description": "The resource provider name: Microsoft App Configuration.\"",
          "type": "string",
          "readOnly": true
        },
        "resource": {
          "description": "The resource on which the operation is performed.",
          "type": "string"
        },
        "operation": {
          "description": "The operation that users can perform.",
          "type": "string"
        },
        "description": {
          "description": "The description for the operation.",
          "type": "string"
        }
      }
    },
    "ResourceIdentity": {
      "type": "object",
      "description": "An identity that can be associated with a resource.",
      "properties": {
        "type": {
          "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.",
          "enum": [
            "None",
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IdentityType",
            "modelAsString": true
          }
        },
        "userAssignedIdentities": {
          "description": "The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UserIdentity"
          }
        },
        "principalId": {
          "description": "The principal id of the identity. This property will only be provided for a system-assigned identity.",
          "type": "string",
          "readOnly": true
        },
        "tenantId": {
          "description": "The tenant id associated with the resource's identity. This property will only be provided for a system-assigned identity.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UserIdentity": {
      "type": "object",
      "description": "A resource identity that is managed by the user of the service.",
      "properties": {
        "principalId": {
          "description": "The principal ID of the user-assigned identity.",
          "type": "string",
          "readOnly": true
        },
        "clientId": {
          "description": "The client ID of the user-assigned identity.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Sku": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "The SKU name of the configuration store.",
          "type": "string"
        }
      },
      "description": "Describes a configuration store SKU."
    },
    "Error": {
      "description": "AppConfiguration error object.",
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string"
        },
        "message": {
          "description": "Error message.",
          "type": "string"
        }
      }
    },
    "Resource": {
      "description": "An Azure resource.",
      "required": [
        "location"
      ],
      "properties": {
        "id": {
          "description": "The resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "The location of the resource. This cannot be changed after the resource is created.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "description": "The tags of the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "A list of private endpoint connections",
      "properties": {
        "value": {
          "description": "The collection value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "nextLink": {
          "description": "The URI that can be used to request the next set of paged results.",
          "type": "string"
        }
      }
    },
    "PrivateEndpointConnection": {
      "description": "A private endpoint connection",
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "The properties of a private endpoint.",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-azure-resource": true
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": "Properties of a private endpoint connection.",
      "properties": {
        "provisioningState": {
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "type": "string",
          "readOnly": true,
          "description": "The provisioning status of the private endpoint connection.",
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The resource of private endpoint."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ]
    },
    "PrivateEndpoint": {
      "type": "object",
      "description": "Private endpoint which a connection belongs to.",
      "properties": {
        "id": {
          "description": "The resource Id for private endpoint",
          "type": "string"
        }
      }
    },
    "PrivateLinkServiceConnectionState": {
      "description": "The state of a private link service connection.",
      "type": "object",
      "properties": {
        "status": {
          "enum": [
            "Pending",
            "Approved",
            "Rejected",
            "Disconnected"
          ],
          "type": "string",
          "description": "The private link service connection status.",
          "x-ms-enum": {
            "name": "ConnectionStatus",
            "modelAsString": true
          }
        },
        "description": {
          "type": "string",
          "description": "The private link service connection description."
        },
        "actionsRequired": {
          "enum": [
            "None",
            "Recreate"
          ],
          "type": "string",
          "readOnly": true,
          "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
          "x-ms-enum": {
            "name": "ActionsRequired",
            "modelAsString": true
          }
        }
      }
    },
    "PrivateLinkResourceListResult": {
      "type": "object",
      "description": "A list of private link resources.",
      "properties": {
        "value": {
          "description": "The collection value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        },
        "nextLink": {
          "description": "The URI that can be used to request the next set of paged results.",
          "type": "string"
        }
      }
    },
    "PrivateLinkResource": {
      "type": "object",
      "description": "A resource that supports private link capabilities.",
      "properties": {
        "id": {
          "description": "The resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Private link resource properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "properties": {
        "groupId": {
          "description": "The private link resource group id.",
          "type": "string",
          "readOnly": true
        },
        "requiredMembers": {
          "description": "The private link resource required member names.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "description": "Properties of a private link resource."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The Microsoft Azure subscription ID.",
      "required": true,
      "type": "string"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group to which the container registry belongs.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ConfigStoreNameParameter": {
      "name": "configStoreName",
      "in": "path",
      "description": "The name of the configuration store.",
      "required": true,
      "type": "string",
      "maxLength": 50,
      "minLength": 5,
      "pattern": "^[a-zA-Z0-9_-]*$",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The client API version.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow"
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
