{
  "swagger": "2.0",
  "info": {
    "description": "Azure Data Lake Storage provides storage for Hadoop and other big data workloads.",
    "title": "Azure Data Lake Storage REST API",
    "version": "2019-12-12",
    "x-ms-code-generation-settings": {
      "internalConstructors": true,
      "name": "DataLakeStorageClient",
      "header": "MIT",
      "strictSpecAdherence": false
    }
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{url}",
    "useSchemePrefix": false,
    "positionInOperation": "first",
    "parameters": [
      {
        "$ref": "#/parameters/Url"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {},
  "x-ms-paths": {
    "/": {
      "get": {
        "operationId": "Service_ListFileSystems",
        "summary": "List FileSystems",
        "description": "List filesystems and their properties in given account.",
        "x-ms-pageable": {
          "itemName": "filesystems",
          "nextLinkName": null
        },
        "tags": [
          "Account Operations"
        ],
        "parameters": [
          {
            "name": "resource",
            "in": "query",
            "description": "The value must be \"account\" for all account operations.",
            "required": true,
            "type": "string",
            "enum": [
              "account"
            ],
            "x-ms-enum": {
              "name": "AccountResourceType",
              "modelAsString": false
            }
          },
          {
            "$ref": "#/parameters/Prefix"
          },
          {
            "$ref": "#/parameters/Continuation"
          },
          {
            "$ref": "#/parameters/MaxResults"
          },
          {
            "$ref": "#/parameters/ClientRequestId"
          },
          {
            "$ref": "#/parameters/Timeout"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated.",
                "type": "string",
                "format": "date-time-rfc1123"
              },
              "x-ms-request-id": {
                "x-ms-client-name": "RequestId",
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.",
                "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
                "type": "string"
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "description": "The version of the REST protocol used to process the request.",
                "type": "string"
              },
              "x-ms-continuation": {
                "x-ms-client-name": "Continuation",
                "description": "If the number of filesystems to be listed exceeds the maxResults limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the list operation to continue listing the filesystems.",
                "type": "string"
              },
              "Content-Type": {
                "description": "The content type of list filesystem response. The default content type is application/json.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/FileSystemList"
            }
          },
          "default": {
            "description": "Failure",
            "headers": {
              "x-ms-error-code": {
                "x-ms-client-name": "ErrorCode",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/StorageError"
            }
          }
        }
      }
    },
    "/{filesystem}": {
      "put": {
        "operationId": "FileSystem_Create",
        "summary": "Create FileSystem",
        "description": "Create a FileSystem rooted at the specified location. If the FileSystem already exists, the operation fails.  This operation does not support conditional HTTP requests.",
        "tags": [
          "FileSystem Operations"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Properties"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Date": {
                "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated.",
                "type": "string",
                "format": "date-time-rfc1123"
              },
              "ETag": {
                "description": "An HTTP entity tag associated with the FileSystem.",
                "format": "etag",
                "type": "string"
              },
              "Last-Modified": {
                "description": "The data and time the filesystem was last modified.  Operations on files and directories do not affect the last modified time.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "x-ms-request-id": {
                "x-ms-client-name": "ClientRequestId",
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.",
                "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
                "type": "string"
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "description": "The version of the REST protocol used to process the request.",
                "type": "string"
              },
              "x-ms-namespace-enabled": {
                "x-ms-client-name": "NamespaceEnabled",
                "description": "A bool string indicates whether the namespace feature is enabled. If \"true\", the namespace is enabled for the filesystem.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Failure",
            "headers": {
              "x-ms-error-code": {
                "x-ms-client-name": "ErrorCode",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/StorageError"
            }
          }
        }
      },
      "patch": {
        "operationId": "FileSystem_SetProperties",
        "summary": "Set FileSystem Properties",
        "description": "Set properties for the FileSystem.  This operation supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).",
        "tags": [
          "FileSystem Operations"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Properties"
          },
          {
            "$ref": "#/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/parameters/IfUnmodifiedSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "Date": {
                "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated.",
                "type": "string",
                "format": "date-time-rfc1123"
              },
              "ETag": {
                "description": "An HTTP entity tag associated with the filesystem.  Changes to filesystem properties affect the entity tag, but operations on files and directories do not.",
                "format": "etag",
                "type": "string"
              },
              "Last-Modified": {
                "description": "The data and time the filesystem was last modified.  Changes to filesystem properties update the last modified time, but operations on files and directories do not.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "x-ms-request-id": {
                "x-ms-client-name": "RequestId",
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.",
                "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
                "type": "string"
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "description": "The version of the REST protocol used to process the request.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Failure",
            "headers": {
              "x-ms-error-code": {
                "x-ms-client-name": "ErrorCode",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/StorageError"
            }
          }
        }
      },
      "head": {
        "operationId": "FileSystem_GetProperties",
        "summary": "Get FileSystem Properties.",
        "description": "All system and user-defined filesystem properties are specified in the response headers.",
        "tags": [
          "FileSystem Operations"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "Date": {
                "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated.",
                "type": "string",
                "format": "date-time-rfc1123"
              },
              "ETag": {
                "description": "An HTTP entity tag associated with the filesystem.  Changes to filesystem properties affect the entity tag, but operations on files and directories do not.",
                "format": "etag",
                "type": "string"
              },
              "Last-Modified": {
                "description": "The data and time the filesystem was last modified.  Changes to filesystem properties update the last modified time, but operations on files and directories do not.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "x-ms-request-id": {
                "x-ms-client-name": "RequestId",
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.",
                "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
                "type": "string"
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "description": "The version of the REST protocol used to process the request.",
                "type": "string"
              },
              "x-ms-properties": {
                "x-ms-client-name": "Properties",
                "description": "The user-defined properties associated with the filesystem.  A comma-separated list of name and value pairs in the format \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.",
                "type": "string"
              },
              "x-ms-namespace-enabled": {
                "x-ms-client-name": "NamespaceEnabled",
                "description": "A bool string indicates whether the namespace feature is enabled. If \"true\", the namespace is enabled for the filesystem.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Failure",
            "headers": {
              "x-ms-error-code": {
                "x-ms-client-name": "ErrorCode",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/StorageError"
            }
          }
        }
      },
      "delete": {
        "operationId": "FileSystem_Delete",
        "summary": "Delete FileSystem",
        "description": "Marks the FileSystem for deletion.  When a FileSystem is deleted, a FileSystem with the same identifier cannot be created for at least 30 seconds. While the filesystem is being deleted, attempts to create a filesystem with the same identifier will fail with status code 409 (Conflict), with the service returning additional error information indicating that the filesystem is being deleted. All other operations, including operations on any files or directories within the filesystem, will fail with status code 404 (Not Found) while the filesystem is being deleted. This operation supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).",
        "tags": [
          "FileSystem Operations"
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-request-id": {
                "x-ms-client-name": "RequestId",
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.",
                "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
                "type": "string"
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "description": "The version of the REST protocol used to process the request.",
                "type": "string"
              },
              "Date": {
                "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated.",
                "type": "string",
                "format": "date-time-rfc1123"
              }
            }
          },
          "default": {
            "description": "Failure",
            "headers": {
              "x-ms-error-code": {
                "x-ms-client-name": "ErrorCode",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/StorageError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/parameters/IfUnmodifiedSince"
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/FileSystemResource"
        },
        {
          "$ref": "#/parameters/ClientRequestId"
        },
        {
          "$ref": "#/parameters/Timeout"
        },
        {
          "$ref": "#/parameters/ApiVersionParameter"
        }
      ]
    },
    "/{filesystem}?resource=filesystem": {
      "get": {
        "operationId": "FileSystem_ListPaths",
        "summary": "List Paths",
        "description": "List FileSystem paths and their properties.",
        "x-ms-pageable": {
          "itemName": "paths",
          "nextLinkName": null
        },
        "tags": [
          "FileSystem Operations"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Continuation"
          },
          {
            "$ref": "#/parameters/Directory"
          },
          {
            "$ref": "#/parameters/RecursiveRequired"
          },
          {
            "$ref": "#/parameters/MaxResults"
          },
          {
            "$ref": "#/parameters/Upn"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "Date": {
                "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated.",
                "type": "string",
                "format": "date-time-rfc1123"
              },
              "ETag": {
                "description": "An HTTP entity tag associated with the filesystem.  Changes to filesystem properties affect the entity tag, but operations on files and directories do not.",
                "format": "etag",
                "type": "string"
              },
              "Last-Modified": {
                "description": "The data and time the filesystem was last modified.  Changes to filesystem properties update the last modified time, but operations on files and directories do not.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "x-ms-request-id": {
                "x-ms-client-name": "RequestId",
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.",
                "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
                "type": "string"
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "description": "The version of the REST protocol used to process the request.",
                "type": "string"
              },
              "x-ms-continuation": {
                "x-ms-client-name": "Continuation",
                "description": "If the number of paths to be listed exceeds the maxResults limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the list operation to continue listing the paths.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/PathList"
            }
          },
          "default": {
            "description": "Failure",
            "headers": {
              "x-ms-error-code": {
                "x-ms-client-name": "ErrorCode",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/StorageError"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/FileSystemResource"
        },
        {
          "$ref": "#/parameters/ClientRequestId"
        },
        {
          "$ref": "#/parameters/Timeout"
        },
        {
          "$ref": "#/parameters/ApiVersionParameter"
        }
      ]
    },
    "/{filesystem}/{path}": {
      "put": {
        "operationId": "Path_Create",
        "summary": "Create File | Create Directory | Rename File | Rename Directory",
        "description": "Create or rename a file or directory.    By default, the destination is overwritten and if the destination already exists and has a lease the lease is broken.  This operation supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).  To fail if the destination already exists, use a conditional request with If-None-Match: \"*\".",
        "consumes": [
          "application/octet-stream"
        ],
        "tags": [
          "File and Directory Operations"
        ],
        "parameters": [
          {
            "name": "resource",
            "in": "query",
            "description": "Required only for Create File and Create Directory. The value must be \"file\" or \"directory\".",
            "required": false,
            "type": "string",
            "enum": [
              "directory",
              "file"
            ],
            "x-ms-enum": {
              "name": "PathResourceType",
              "modelAsString": false
            }
          },
          {
            "$ref": "#/parameters/Continuation"
          },
          {
            "name": "mode",
            "in": "query",
            "description": "Optional. Valid only when namespace is enabled. This parameter determines the behavior of the rename operation. The value must be \"legacy\" or \"posix\", and the default value will be \"posix\".",
            "required": false,
            "type": "string",
            "enum": [
              "legacy",
              "posix"
            ],
            "x-ms-enum": {
              "name": "PathRenameMode",
              "modelAsString": false
            }
          },
          {
            "$ref": "#/parameters/CacheControl"
          },
          {
            "$ref": "#/parameters/ContentEncoding"
          },
          {
            "$ref": "#/parameters/ContentLanguage"
          },
          {
            "$ref": "#/parameters/ContentDisposition"
          },
          {
           "$ref": "#/parameters/ContentType"
          },
          {
           "$ref": "#/parameters/RenameSource"
          },
          {
            "$ref": "#/parameters/LeaseIdOptional"
          },
          {
            "$ref": "#/parameters/SourceLeaseId"
          },
          {
            "$ref": "#/parameters/Properties"
          },
          {
            "$ref": "#/parameters/Permissions"
          },
          {
            "$ref": "#/parameters/Umask"
          },
          {
            "$ref": "#/parameters/IfMatch"
          },
          {
            "$ref": "#/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/parameters/SourceIfMatch"
          },
          {
            "$ref": "#/parameters/SourceIfNoneMatch"
          },
          {
            "$ref": "#/parameters/SourceIfModifiedSince"
          },
          {
            "$ref": "#/parameters/SourceIfUnmodifiedSince"
          }
        ],
        "responses": {
          "201": {
            "description": "The file or directory was created.",
            "headers": {
              "Date": {
                "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated.",
                "type": "string",
                "format": "date-time-rfc1123"
              },
              "ETag": {
                "description": "An HTTP entity tag associated with the file or directory.",
                "format": "etag",
                "type": "string"
              },
              "Last-Modified": {
                "description": "The data and time the file or directory was last modified.  Write operations on the file or directory update the last modified time.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "x-ms-request-id": {
                "x-ms-client-name": "RequestId",
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.",
                "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
                "type": "string"
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "description": "The version of the REST protocol used to process the request.",
                "type": "string"
              },
              "x-ms-continuation": {
                "x-ms-client-name": "Continuation",
                "description": "When renaming a directory, the number of paths that are renamed with each invocation is limited.  If the number of paths to be renamed exceeds this limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the rename operation to continue renaming the directory.",
                "type": "string"
              },
              "Content-Length": {
                "description": "The size of the resource in bytes.",
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "default": {
            "description": "Failure",
            "headers": {
              "x-ms-error-code": {
                "x-ms-client-name": "ErrorCode",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/StorageError"
            }
          }
        }
      },
      "patch": {
        "operationId": "Path_Update",
        "summary": "Append Data | Flush Data | Set Properties | Set Access Control",
        "description": "Uploads data to be appended to a file, flushes (writes) previously uploaded data to a file, sets properties for a file or directory, or sets access control for a file or directory. Data can only be appended to a file. This operation supports conditional HTTP requests. For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).",
        "consumes": [
          "application/octet-stream"
        ],
        "tags": [
          "File and Directory Operations"
        ],
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "description": "The action must be \"append\" to upload data to be appended to a file, \"flush\" to flush previously uploaded data to a file, \"setProperties\" to set the properties of a file or directory, \"setAccessControl\" to set the owner, group, permissions, or access control list for a file or directory, or  \"setAccessControlRecursive\" to set the access control list for a directory recursively. Note that Hierarchical Namespace must be enabled for the account in order to use access control.  Also note that the Access Control List (ACL) includes permissions for the owner, owning group, and others, so the x-ms-permissions and x-ms-acl request headers are mutually exclusive.",
            "required": true,
            "type": "string",
            "enum": [
              "append",
              "flush",
              "setProperties",
              "setAccessControl",
              "setAccessControlRecursive"
            ],
            "x-ms-enum": {
              "name": "PathUpdateAction",
              "modelAsString": false
            }
          },
          {
           "name": "mode",
            "in": "query",
            "description": "Optional. Valid and Required for \"SetAccessControlRecursive\" operation.  Mode \"set\" sets POSIX access control rights on files and directories, \"modify\" modifies one or more POSIX access control rights  that pre-exist on files and directories, \"remove\" removes one or more POSIX access control rights  that were present earlier on files and directories",
            "required": false,
            "type": "string",
            "enum": [
              "set",
              "modify",
              "remove"
            ]
          },
          {
            "name": "maxRecords",
            "in": "query",
            "description": "Optional. Valid for \"SetAccessControlRecursive\" operation. It specifies the maximum number of files or directories on which the acl change will be applied. If omitted or greater than 2,000, the request will process up to 2,000 items",
            "format": "int32",
            "minimum": 1,
            "required": false,
            "type": "integer"
          },
          {
            "name": "continuation",
            "in": "query",
            "description": "Optional. The number of paths processed with each invocation is limited. If the number of paths to be processed exceeds this limit, a continuation token is returned in the response header x-ms-continuation. When a continuation token is  returned in the response, it must be percent-encoded and specified in a subsequent invocation of setAcessControlRecursive operation.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Position"
          },
          {
            "$ref": "#/parameters/RetainUncommittedData"
          },
          {
            "$ref": "#/parameters/Close"
          },
          {
            "$ref": "#/parameters/ContentLength"
          },
          {
            "$ref": "#/parameters/ContentMD5"
          },
          {
            "$ref": "#/parameters/LeaseIdOptional"
          },
          {
            "$ref": "#/parameters/CacheControl"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/ContentDisposition"
          },
          {
            "$ref": "#/parameters/ContentEncoding"
          },
          {
            "$ref": "#/parameters/ContentLanguage"
          },
          {
            "$ref": "#/parameters/Properties"
          },
          {
            "$ref": "#/parameters/Owner"
          },
          {
            "$ref": "#/parameters/Group"
          },
          {
            "$ref": "#/parameters/Permissions"
          },
          {
            "$ref": "#/parameters/Acl"
          },
          {
            "$ref": "#/parameters/IfMatch"
          },
          {
            "$ref": "#/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/parameters/Body"
          }
        ],
        "responses": {
          "200": {
            "description": "The data was flushed (written) to the file or the properties were set successfully.  Response body is optional and is valid only for \"SetAccessControlRecursive\"",
            "headers": {
              "Date": {
                "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated.",
                "type": "string",
                "format": "date-time-rfc1123"
              },
              "ETag": {
                "description": "An HTTP entity tag associated with the file or directory.",
                "format": "etag",
                "type": "string"
              },
              "Last-Modified": {
                "description": "The data and time the file or directory was last modified.  Write operations on the file or directory update the last modified time.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "Accept-Ranges": {
                "description": "Indicates that the service supports requests for partial file content.",
                "type": "string"
              },
              "Cache-Control": {
                "description": "If the Cache-Control request header has previously been set for the resource, that value is returned in this header.",
                "type": "string"
              },
              "Content-Disposition": {
                "description": "If the Content-Disposition request header has previously been set for the resource, that value is returned in this header.",
                "type": "string"
              },
              "Content-Encoding": {
                "description": "If the Content-Encoding request header has previously been set for the resource, that value is returned in this header.",
                "type": "string"
              },
              "Content-Language": {
                "description": "If the Content-Language request header has previously been set for the resource, that value is returned in this header.",
                "type": "string"
              },
              "Content-Length": {
                "description": "The size of the resource in bytes.",
                "type": "integer",
                "format": "int64"
              },
              "Content-Range": {
                "description": "Indicates the range of bytes returned in the event that the client requested a subset of the file by setting the Range request header.",
                "type": "string"
              },
              "Content-Type": {
                "description": "The content type specified for the resource. If no content type was specified, the default content type is application/octet-stream.",
                "type": "string"
              },
              "Content-MD5": {
                "description": "An MD5 hash of the request content. This header is only returned for \"Flush\" operation. This header is returned so that the client can check for message content integrity. This header refers to the content of the request, not actual file content.",
                "type": "string"
              },
              "x-ms-properties": {
                "x-ms-client-name": "Properties",
                "description": "User-defined properties associated with the file or directory, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.",
                "type": "string"
              },
              "x-ms-continuation": {
                "description": "When performing setAccessControlRecursive on a directory, the number of paths that are processed with each invocation is limited.  If the number of paths to be processed exceeds this limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the setAccessControlRecursive operation to continue the setAccessControlRecursive operation on the directory.",
                "type": "string"
              },
              "x-ms-request-id": {
                "x-ms-client-name": "RequestId",
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.",
                "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
                "type": "string"
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "description": "The version of the REST protocol used to process the request.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/SetAccessControlRecursiveResponse"
            }
          },
          "202": {
            "description": "The uploaded data was accepted.",
            "headers": {
              "Content-MD5": {
                "description": "An MD5 hash of the request content. This header is only returned for \"Append\" operation. This header is returned so that the client can check for message content integrity. The value of this header is computed by the service; it is not necessarily the same value specified in the request headers.",
                "type": "string"
              },
              "Date": {
                "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated.",
                "type": "string",
                "format": "date-time-rfc1123"
              },
              "x-ms-request-id": {
                "x-ms-client-name": "RequestId", 
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.",
                "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
                "type": "string"
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "description": "The version of the REST protocol used to process the request.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Failure",
            "headers": {
              "x-ms-error-code": {
                "x-ms-client-name": "ErrorCode",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/StorageError"
            }
          }
        }
      },
      "post": {
        "operationId": "Path_Lease",
        "summary": "Lease Path",
        "description": "Create and manage a lease to restrict write and delete access to the path. This operation supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).",
        "tags": [
          "File and Directory Operations"
        ],
        "parameters": [
          {
            "name": "x-ms-lease-action",
            "in": "header",
            "description": "There are five lease actions: \"acquire\", \"break\", \"change\", \"renew\", and \"release\". Use \"acquire\" and specify the \"x-ms-proposed-lease-id\" and \"x-ms-lease-duration\" to acquire a new lease. Use \"break\" to break an existing lease. When a lease is broken, the lease break period is allowed to elapse, during which time no lease operation except break and release can be performed on the file. When a lease is successfully broken, the response indicates the interval in seconds until a new lease can be acquired. Use \"change\" and specify the current lease ID in \"x-ms-lease-id\" and the new lease ID in \"x-ms-proposed-lease-id\" to change the lease ID of an active lease. Use \"renew\" and specify the \"x-ms-lease-id\" to renew an existing lease. Use \"release\" and specify the \"x-ms-lease-id\" to release a lease.",
            "required": true,
            "type": "string",
            "enum": [
              "acquire",
              "break",
              "change",
              "renew",
              "release"
            ],
            "x-ms-enum": {
              "name": "PathLeaseAction",
              "modelAsString": false
            }
          },
          {
            "name": "x-ms-lease-duration",
            "in": "header",
            "description": "The lease duration is required to acquire a lease, and specifies the duration of the lease in seconds.  The lease duration must be between 15 and 60 seconds or -1 for infinite lease.",
            "format": "int32",
            "required": false,
            "type": "integer"
          },
          {
            "name": "x-ms-lease-break-period",
            "in": "header",
            "description": "The lease break period duration is optional to break a lease, and  specifies the break period of the lease in seconds.  The lease break  duration must be between 0 and 60 seconds.",
            "format": "int32",
            "required": false,
            "type": "integer"
          },
          {
            "$ref": "#/parameters/LeaseIdOptional"
          },
          {
            "$ref": "#/parameters/ProposedLeaseIdOptional"
          },
          {
            "$ref": "#/parameters/IfMatch"
          },
          {
            "$ref": "#/parameters/IfNoneMatch"
          },
          {
           "$ref": "#/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/parameters/IfUnmodifiedSince"
          }
        ],
        "responses": {
          "200": {
            "description": "The \"renew\", \"change\" or \"release\" action was successful.",
            "headers": {
              "Date": {
                "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated.",
                "type": "string",
                "format": "date-time-rfc1123"
              },
              "ETag": {
                "description": "An HTTP entity tag associated with the file.",
                "format": "etag",
                "type": "string"
              },
              "Last-Modified": {
                "description": "The data and time the file was last modified.  Write operations on the file update the last modified time.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "x-ms-request-id": {
                "x-ms-client-name": "RequestId",
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.",
                "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
                "type": "string"
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "description": "The version of the REST protocol used to process the request.",
                "type": "string"
              },
              "x-ms-lease-id": {
                "x-ms-client-name": "LeaseId",
                "description": "A successful \"renew\" action returns the lease ID.",
                "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
                "type": "string"
              }
            }
          },
          "201": {
            "description": "A new lease has been created.  The \"acquire\" action was successful.",
            "headers": {
              "Date": {
                "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated.",
                "type": "string",
                "format": "date-time-rfc1123"
              },
              "ETag": {
                "description": "An HTTP entity tag associated with the file or directory.",
                "format": "etag",
                "type": "string"
              },
              "Last-Modified": {
                "description": "The data and time the file or directory was last modified.  Write operations on the file or directory update the last modified time.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "x-ms-request-id": {
                "x-ms-client-name": "RequestId",
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.",
                "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
                "type": "string"
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "description": "The version of the REST protocol used to process the request.",
                "type": "string"
              },
              "x-ms-lease-id": {
                "x-ms-client-name": "LeaseId",
                "description": "A successful \"acquire\" action returns the lease ID.",
                "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
                "type": "string"
              }
            }
          },
          "202": {
            "description": "The \"break\" lease action was successful.",
            "headers": {
              "ETag": {
                "description": "An HTTP entity tag associated with the file or directory.",
                "format": "etag",
                "type": "string"
              },
              "Last-Modified": {
                "description": "The data and time the file or directory was last modified.  Write operations on the file or directory update the last modified time.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "x-ms-request-id": {
                "x-ms-client-name": "RequestId",
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.",
                "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
                "type": "string"
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "description": "The version of the REST protocol used to process the request.",
                "type": "string"
              },
              "x-ms-lease-time": {
                "x-ms-client-name": "LeaseTime",
                "description": "The time remaining in the lease period in seconds.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Failure",
            "headers": {
              "x-ms-error-code": {
                "x-ms-client-name": "ErrorCode",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/StorageError"
            }
          }
        }
      },
      "get": {
        "operationId": "Path_Read",
        "summary": "Read File",
        "description": "Read the contents of a file.  For read operations, range requests are supported. This operation supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).",
        "tags": [
          "File and Directory Operations"
        ],
        "parameters": [
          {
            "in": "header",
            "description": "The HTTP Range request header specifies one or more byte ranges of the resource to be retrieved.",
            "required": false,
            "type": "string",
            "name": "Range"
          },
          {
            "$ref": "#/parameters/LeaseIdOptional"
          },
          {
            "name": "x-ms-range-get-content-md5",
            "in": "header",
            "description": "Optional. When this header is set to \"true\" and specified together with the Range header, the service returns the MD5 hash for the range, as long as the range is less than or equal to 4MB in size. If this header is specified without the Range header, the service returns status code 400 (Bad Request). If this header is set to true when the range exceeds 4 MB in size, the service returns status code 400 (Bad Request).",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/IfMatch"
          },
          {
            "$ref": "#/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/parameters/IfUnmodifiedSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "Accept-Ranges": {
                "description": "Indicates that the service supports requests for partial file content.",
                "type": "string"
              },
              "Cache-Control": {
                "description": "If the Cache-Control request header has previously been set for the resource, that value is returned in this header.",
                "type": "string"
              },
              "Content-Disposition": {
                "description": "If the Content-Disposition request header has previously been set for the resource, that value is returned in this header.",
                "type": "string"
              },
              "Content-Encoding": {
                "description": "If the Content-Encoding request header has previously been set for the resource, that value is returned in this header.",
                "type": "string"
              },
              "Content-Language": {
                "description": "If the Content-Language request header has previously been set for the resource, that value is returned in this header.",
                "type": "string"
              },
              "Content-Length": {
                "description": "The size of the resource in bytes.",
                "type": "integer",
                "format": "int64"
              },
              "Content-Range": {
                "description": "Indicates the range of bytes returned in the event that the client requested a subset of the file by setting the Range request header.",
                "type": "string"
              },
              "Content-Type": {
                "description": "The content type specified for the resource. If no content type was specified, the default content type is application/octet-stream.",
                "type": "string"
              },
              "Content-MD5": {
                "description": "The MD5 hash of complete file. If the file has an MD5 hash and this read operation is to read the complete file, this response header is returned so that the client can check for message content integrity.",
                "type": "string"
              },
              "Date": {
                "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated.",
                "type": "string",
                "format": "date-time-rfc1123"
              },
              "ETag": {
                "description": "An HTTP entity tag associated with the file or directory.",
                "format": "etag",
                "type": "string"
              },
              "Last-Modified": {
                "description": "The data and time the file or directory was last modified.  Write operations on the file or directory update the last modified time.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "x-ms-request-id": {
                "x-ms-client-name": "RequestId",
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.",
                "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
                "type": "string"
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "description": "The version of the REST protocol used to process the request.",
                "type": "string"
              },
              "x-ms-resource-type": {
                "x-ms-client-name": "ResourceType",
                "description": "The type of the resource.  The value may be \"file\" or \"directory\".  If not set, the value is \"file\".",
                "type": "string"
              },
              "x-ms-properties": {
                "x-ms-client-name": "Properties",
                "description": "The user-defined properties associated with the file or directory, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.",
                "type": "string"
              },
              "x-ms-lease-duration": {
                "x-ms-client-name": "LeaseDuration",
                "description": "When a resource is leased, specifies whether the lease is of infinite or fixed duration.",
                "type": "string"
              },
              "x-ms-lease-state": {
                "x-ms-client-name": "LeaseState",
                "description": "Lease state of the resource.",
                "type": "string"
              },
              "x-ms-lease-status": {
                "x-ms-client-name": "LeaseStatus",
                "description": "The lease status of the resource.",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "format": "file"
            }
          },
          "206": {
            "description": "Partial content",
            "headers": {
              "Accept-Ranges": {
                "description": "Indicates that the service supports requests for partial file content.",
                "type": "string"
              },
              "Cache-Control": {
                "description": "If the Cache-Control request header has previously been set for the resource, that value is returned in this header.",
                "type": "string"
              },
              "Content-Disposition": {
                "description": "If the Content-Disposition request header has previously been set for the resource, that value is returned in this header.",
                "type": "string"
              },
              "Content-Encoding": {
                "description": "If the Content-Encoding request header has previously been set for the resource, that value is returned in this header.",
                "type": "string"
              },
              "Content-Language": {
                "description": "If the Content-Language request header has previously been set for the resource, that value is returned in this header.",
                "type": "string"
              },
              "Content-Length": {
                "description": "The size of the resource in bytes.",
                "type": "integer",
                "format": "int64"
              },
              "Content-Range": {
                "description": "Indicates the range of bytes returned in the event that the client requested a subset of the file by setting the Range request header.",
                "type": "string"
              },
              "Content-Type": {
                "description": "The content type specified for the resource. If no content type was specified, the default content type is application/octet-stream.",
                "type": "string"
              },
              "Content-MD5": {
                "description": "The MD5 hash of read range. If the request is to read a specified range and the \"x-ms-range-get-content-md5\" is set to true, then the request returns an MD5 hash for the range, as long as the range size is less than or equal to 4 MB.",
                "type": "string"
              },
              "x-ms-content-md5": {
                "description": "The MD5 hash of complete file stored in storage. If the file has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the complete file's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range.",
                "type": "string"
              },
              "Date": {
                "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated.",
                "type": "string",
                "format": "date-time-rfc1123"
              },
              "ETag": {
                "description": "An HTTP entity tag associated with the file or directory.",
                "format": "etag",
                "type": "string"
              },
              "Last-Modified": {
                "description": "The data and time the file or directory was last modified.  Write operations on the file or directory update the last modified time.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "x-ms-request-id": {
                "x-ms-client-name": "RequestId",
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.",
                "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
                "type": "string"
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "description": "The version of the REST protocol used to process the request.",
                "type": "string"
              },
              "x-ms-resource-type": {
                "x-ms-client-name": "ResourceType",
                "description": "The type of the resource.  The value may be \"file\" or \"directory\".  If not set, the value is \"file\".",
                "type": "string"
              },
              "x-ms-properties": {
                "x-ms-client-name": "Properties",
                "description": "The user-defined properties associated with the file or directory, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.",
                "type": "string"
              },
              "x-ms-lease-duration": {
                "x-ms-client-name": "LeaseDuration",
                "description": "When a resource is leased, specifies whether the lease is of infinite or fixed duration.",
                "type": "string"
              },
              "x-ms-lease-state": {
                "x-ms-client-name": "LeaseState",
                "description": "Lease state of the resource. ",
                "type": "string"
              },
              "x-ms-lease-status": {
                "x-ms-client-name": "LeaseStatus",
                "description": "The lease status of the resource.",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "format": "file"
            }
          },
          "default": {
            "description": "Failure",
            "headers": {
              "x-ms-error-code": {
                "x-ms-client-name": "ErrorCode",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/StorageError"
            }
          }
        }
      },
      "head": {
        "operationId": "Path_GetProperties",
        "summary": "Get Properties | Get Status | Get Access Control List",
        "description": "Get Properties returns all system and user defined properties for a path. Get Status returns all system defined properties for a path. Get Access Control List returns the access control list for a path. This operation supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).",
        "tags": [
          "File and Directory Operations"
        ],
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "description": "Optional. If the value is \"getStatus\" only the system defined properties for the path are returned. If the value is \"getAccessControl\" the access control list is returned in the response headers (Hierarchical Namespace must be enabled for the account), otherwise the properties are returned.",
            "required": false,
            "type": "string",
            "enum": [
              "getAccessControl",
              "getStatus"
            ],
            "x-ms-enum": {
              "name": "PathGetPropertiesAction",
              "modelAsString": false
            }
          },
          {
            "$ref": "#/parameters/Upn"
          },
          {
            "$ref": "#/parameters/LeaseIdOptional"
          },
          {
            "$ref": "#/parameters/IfMatch"
          },
          {
            "$ref": "#/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/parameters/IfUnmodifiedSince"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all properties for the file or directory.",
            "headers": {
              "Accept-Ranges": {
                "description": "Indicates that the service supports requests for partial file content.",
                "type": "string"
              },
              "Cache-Control": {
                "description": "If the Cache-Control request header has previously been set for the resource, that value is returned in this header.",
                "type": "string"
              },
              "Content-Disposition": {
                "description": "If the Content-Disposition request header has previously been set for the resource, that value is returned in this header.",
                "type": "string"
              },
              "Content-Encoding": {
                "description": "If the Content-Encoding request header has previously been set for the resource, that value is returned in this header.",
                "type": "string"
              },
              "Content-Language": {
                "description": "If the Content-Language request header has previously been set for the resource, that value is returned in this header.",
                "type": "string"
              },
              "Content-Length": {
                "description": "The size of the resource in bytes.",
                "type": "integer",
                "format": "int64"
              },
              "Content-Range": {
                "description": "Indicates the range of bytes returned in the event that the client requested a subset of the file by setting the Range request header.",
                "type": "string"
              },
              "Content-Type": {
                "description": "The content type specified for the resource. If no content type was specified, the default content type is application/octet-stream.",
                "type": "string"
              },
              "Content-MD5": {
                "description": "The MD5 hash of complete file stored in storage. This header is returned only for \"GetProperties\" operation. If the Content-MD5 header has been set for the file, this response header is returned for GetProperties call so that the client can check for message content integrity.",
                "type": "string"
              },
              "Date": {
                "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated.",
                "type": "string",
                "format": "date-time-rfc1123"
              },
              "ETag": {
                "description": "An HTTP entity tag associated with the file or directory.",
                "format": "etag",
                "type": "string"
              },
              "Last-Modified": {
                "description": "The data and time the file or directory was last modified.  Write operations on the file or directory update the last modified time.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "x-ms-request-id": {
                "x-ms-client-name": "RequestId",
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.",
                "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
                "type": "string"
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "description": "The version of the REST protocol used to process the request.",
                "type": "string"
              },
              "x-ms-resource-type": {
                "x-ms-client-name": "ResourceType",
                "description": "The type of the resource.  The value may be \"file\" or \"directory\".  If not set, the value is \"file\".",
                "type": "string"
              },
              "x-ms-properties": {
                "x-ms-client-name": "Properties",
                "description": "The user-defined properties associated with the file or directory, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.",
                "type": "string"
              },
              "x-ms-owner": {
                "x-ms-client-name": "Owner",
                "description": "The owner of the file or directory. Included in the response if Hierarchical Namespace is enabled for the account.",
                "type": "string"
              },
              "x-ms-group": {
                "x-ms-client-name": "Group",
                "description": "The owning group of the file or directory. Included in the response if Hierarchical Namespace is enabled for the account.",
                "type": "string"
              },
              "x-ms-permissions": {
                "x-ms-client-name": "Permissions",
                "description": "The POSIX access permissions for the file owner, the file owning group, and others. Included in the response if Hierarchical Namespace is enabled for the account.",
                "type": "string"
              },
              "x-ms-acl": {
                "x-ms-client-name": "ACL",
                "description": "The POSIX access control list for the file or directory.  Included in the response only if the action is \"getAccessControl\" and Hierarchical Namespace is enabled for the account.",
                "type": "string"
              },
              "x-ms-lease-duration": {
                "x-ms-client-name": "LeaseDuration",
                "description": "When a resource is leased, specifies whether the lease is of infinite or fixed duration.",
                "type": "string"
              },
              "x-ms-lease-state": {
                "x-ms-client-name": "LeaseState",
                "description": "Lease state of the resource.",
                "type": "string"
              },
              "x-ms-lease-status": {
                "x-ms-client-name": "LeaseStatus",
                "description": "The lease status of the resource.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Failure",
            "headers": {
              "x-ms-error-code": {
                "x-ms-client-name": "ErrorCode",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/StorageError"
            }
          }
        }
      },
      "delete": {
        "operationId": "Path_Delete",
        "summary": "Delete File | Delete Directory",
        "description": "Delete the file or directory. This operation supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).",
        "tags": [
          "File and Directory Operations"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/RecursiveOptional"
          },
          {
            "$ref": "#/parameters/Continuation"
          },
          {
            "$ref": "#/parameters/LeaseIdOptional"
          },
          {
            "$ref": "#/parameters/IfMatch"
          },
          {
            "$ref": "#/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/parameters/IfUnmodifiedSince"
          }
        ],
        "responses": {
          "200": {
            "description": "The file was deleted.",
            "headers": {
              "Date": {
                "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated.",
                "type": "string",
                "format": "date-time-rfc1123"
              },
              "x-ms-request-id": {
                "x-ms-client-name": "RequestId", 
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.",
                "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
                "type": "string"
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "description": "The version of the REST protocol used to process the request.",
                "type": "string"
              },
              "x-ms-continuation": {
                "x-ms-client-name": "Continuation",
                "description": "When deleting a directory, the number of paths that are deleted with each invocation is limited.  If the number of paths to be deleted exceeds this limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the delete operation to continue deleting the directory.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Failure",
            "headers": {
              "x-ms-error-code": {
                "x-ms-client-name": "ErrorCode",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/StorageError"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/ClientRequestId"
        },
        {
          "$ref": "#/parameters/Timeout"
        },
        {
          "$ref": "#/parameters/ApiVersionParameter"
        }
      ]
    },
    "/{filesystem}/{path}?action=setAccessControl": {
      "patch": {
        "tags": [
          "directory"
        ],
        "operationId": "Path_SetAccessControl",
        "description": "Set the owner, group, permissions, or access control list for a path.",
        "parameters": [
          {
            "$ref": "#/parameters/Timeout"
          },
          {
            "$ref": "#/parameters/LeaseIdOptional"
          },
          {
            "$ref": "#/parameters/Owner"
          },
          {
            "$ref": "#/parameters/Group"
          },
          {
            "$ref": "#/parameters/Permissions"
          },
          {
            "$ref": "#/parameters/Acl"
          },
          {
            "$ref": "#/parameters/IfMatch"
          },
          {
            "$ref": "#/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/parameters/ClientRequestId"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Set directory access control response.",
            "headers": {
              "Date": {
                "type": "string",
                "format": "date-time-rfc1123",
                "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
              },
              "ETag": {
                "type": "string",
                "format": "etag",
                "description": "An HTTP entity tag associated with the file or directory."
              },
              "Last-Modified": {
                "type": "string",
                "format": "date-time-rfc1123",
                "description": "The data and time the file or directory was last modified. Write operations on the file or directory update the last modified time."
              },
              "x-ms-client-request-id": {
                "x-ms-client-name": "ClientRequestId",
                "type": "string",
                "description": "If a client request id header is sent in the request, this header will be present in the response with the same value."
              },
              "x-ms-request-id": {
                "x-ms-client-name": "RequestId",
                "type": "string",
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "type": "string",
                "description": "The version of the REST protocol used to process the request."
              }
            }
          },
          "default": {
            "description": "Failure",
            "headers": {
              "x-ms-client-request-id": {
                "x-ms-client-name": "ClientRequestId",
                "type": "string",
                "description": "If a client request id header is sent in the request, this header will be present in the response with the same value."
              },
              "x-ms-request-id": {
                "x-ms-client-name": "RequestId",
                "type": "string",
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "type": "string",
                "description": "The version of the REST protocol used to process the request."
              }
            },
            "schema": {
              "$ref": "#/definitions/StorageError"
            }
          }
        }
      },
      "parameters": [
        {
          "name": "action",
          "in": "query",
          "required": true,
          "type": "string",
          "enum": [
            "setAccessControl"
          ]
        }
      ]
    },
    "/{filesystem}/{path}?action=setAccessControlRecursive": {
      "patch": {
        "tags": [
          "directory"
        ],
        "operationId": "Path_SetAccessControlRecursive",
        "description": "Set the access control list for a path and subpaths.",
        "parameters": [
          {
            "$ref": "#/parameters/Timeout"
          },
          {
            "$ref": "#/parameters/Continuation"
          },
          {
            "name": "mode",
             "in": "query",
             "description": "Mode \"set\" sets POSIX access control rights on files and directories, \"modify\" modifies one or more POSIX access control rights  that pre-exist on files and directories, \"remove\" removes one or more POSIX access control rights  that were present earlier on files and directories",
             "required": true,
             "type": "string",
             "enum": [
               "set",
               "modify",
               "remove"
             ]
          },
          {
            "name": "maxRecords",
            "in": "query",
            "description": "Optional. It specifies the maximum number of files or directories on which the acl change will be applied. If omitted or greater than 2,000, the request will process up to 2,000 items",
            "format": "int32",
            "minimum": 1,
            "required": false,
            "type": "integer"
          },
          {
            "$ref": "#/parameters/Acl"
          },
          {
            "$ref": "#/parameters/ClientRequestId"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Set directory access control recursive response.",
            "headers": {
              "Date": {
                "type": "string",
                "format": "date-time-rfc1123",
                "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
              },
              "x-ms-client-request-id": {
                "x-ms-client-name": "ClientRequestId",
                "type": "string",
                "description": "If a client request id header is sent in the request, this header will be present in the response with the same value."
              },
              "x-ms-continuation": {
                "x-ms-client-name": "Continuation",
                "description": "When performing setAccessControlRecursive on a directory, the number of paths that are processed with each invocation is limited.  If the number of paths to be processed exceeds this limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the setAccessControlRecursive operation to continue the setAccessControlRecursive operation on the directory.",
                "type": "string"
              },
              "x-ms-request-id": {
                "x-ms-client-name": "RequestId",
                "type": "string",
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "type": "string",
                "description": "The version of the REST protocol used to process the request."
              }
            },
            "schema": {
              "$ref": "#/definitions/SetAccessControlRecursiveResponse"
            }
          },
          "default": {
            "description": "Failure",
            "headers": {
              "x-ms-client-request-id": {
                "x-ms-client-name": "ClientRequestId",
                "type": "string",
                "description": "If a client request id header is sent in the request, this header will be present in the response with the same value."
              },
              "x-ms-request-id": {
                "x-ms-client-name": "RequestId",
                "type": "string",
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "type": "string",
                "description": "The version of the REST protocol used to process the request."
              }
            },
            "schema": {
              "$ref": "#/definitions/StorageError"
            }
          }
        }
      },
      "parameters": [
        {
          "name": "action",
          "in": "query",
          "required": true,
          "type": "string",
          "enum": [
            "setAccessControlRecursive"
          ]
        }
      ]
    },
    "/{filesystem}/{path}?action=flush": {
      "patch": {
        "tags": [
          "directory"
        ],
        "operationId": "Path_FlushData",
        "description": "Set the owner, group, permissions, or access control list for a path.",
        "parameters": [
          {
            "$ref": "#/parameters/Timeout"
          },
          {
            "$ref": "#/parameters/Position"
          },
          {
            "$ref": "#/parameters/RetainUncommittedData"
          },
          {
            "$ref": "#/parameters/Close"
          },
          {
            "$ref": "#/parameters/ContentLength"
          },
          {
            "$ref": "#/parameters/ContentMD5"
          },
          {
            "$ref": "#/parameters/LeaseIdOptional"
          },
          {
            "$ref": "#/parameters/CacheControl"
          },
          {
            "$ref": "#/parameters/ContentType"
          },
          {
            "$ref": "#/parameters/ContentDisposition"
          },
          {
            "$ref": "#/parameters/ContentEncoding"
          },
          {
            "$ref": "#/parameters/ContentLanguage"
          },
          {
            "$ref": "#/parameters/IfMatch"
          },
          {
            "$ref": "#/parameters/IfNoneMatch"
          },
          {
            "$ref": "#/parameters/IfModifiedSince"
          },
          {
            "$ref": "#/parameters/IfUnmodifiedSince"
          },
          {
            "$ref": "#/parameters/ClientRequestId"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The data was flushed (written) to the file successfully.",
            "headers": {
              "Date": {
                "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated.",
                "type": "string",
                "format": "date-time-rfc1123"
              },
              "ETag": {
                "description": "An HTTP entity tag associated with the file or directory.",
                "format": "etag",
                "type": "string"
              },
              "Last-Modified": {
                "description": "The data and time the file or directory was last modified.  Write operations on the file or directory update the last modified time.",
                "format": "date-time-rfc1123",
                "type": "string"
              },
              "Content-Length": {
                "description": "The size of the resource in bytes.",
                "type": "integer",
                "format": "int64"
              },
              "x-ms-client-request-id": {
                "x-ms-client-name": "ClientRequestId",
                "type": "string",
                "description": "If a client request id header is sent in the request, this header will be present in the response with the same value."
              },
              "x-ms-request-id": {
                "x-ms-client-name": "RequestId",
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.",
                "pattern": "^[{(]?[0-9a-f]{8}[-]?([0-9a-f]{4}[-]?){3}[0-9a-f]{12}[)}]?$",
                "type": "string"
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "description": "The version of the REST protocol used to process the request.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Failure",
            "headers": {
              "x-ms-client-request-id": {
                "x-ms-client-name": "ClientRequestId",
                "type": "string",
                "description": "If a client request id header is sent in the request, this header will be present in the response with the same value."
              },
              "x-ms-request-id": {
                "x-ms-client-name": "RequestId",
                "type": "string",
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "type": "string",
                "description": "The version of the REST protocol used to process the request."
              }
            },
            "schema": {
              "$ref": "#/definitions/StorageError"
            }
          }
        }
      },
      "parameters": [
        {
          "name": "action",
          "in": "query",
          "required": true,
          "type": "string",
          "enum": [
            "flush"
          ]
        }
      ]
    },
    "/{filesystem}/{path}?action=append": {
      "patch": {
        "tags": [
          "directory"
        ],
        "operationId": "Path_AppendData",
        "description": "Append data to the file.",
        "parameters": [
          {
            "$ref": "#/parameters/Position"
          },
          {
            "$ref": "#/parameters/Timeout"
          },
          {
            "$ref": "#/parameters/ContentLength"
          },
          {
            "$ref": "#/parameters/TransactionalContentMD5"
          },
          {
            "$ref": "#/parameters/LeaseIdOptional"
          },
          {
            "$ref": "#/parameters/Body"
          },
          {
            "$ref": "#/parameters/ClientRequestId"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Append data to file control response.",
            "headers": {
              "Date": {
                "type": "string",
                "format": "date-time-rfc1123",
                "description": "A UTC date/time value generated by the service that indicates the time at which the response was initiated."
              },
              "x-ms-request-id": {
                "x-ms-client-name": "RequestId",
                "type": "string",
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
              },
              "x-ms-client-request-id": {
                "x-ms-client-name": "ClientRequestId",
                "type": "string",
                "description": "If a client request id header is sent in the request, this header will be present in the response with the same value."
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "type": "string",
                "description": "The version of the REST protocol used to process the request."
              }
            }
          },
          "default": {
            "description": "Failure",
            "headers": {
              "x-ms-client-request-id": {
                "x-ms-client-name": "ClientRequestId",
                "type": "string",
                "description": "If a client request id header is sent in the request, this header will be present in the response with the same value."
              },
              "x-ms-request-id": {
                "x-ms-client-name": "RequestId",
                "type": "string",
                "description": "A server-generated UUID recorded in the analytics logs for troubleshooting and correlation."
              },
              "x-ms-version": {
                "x-ms-client-name": "Version",
                "type": "string",
                "description": "The version of the REST protocol used to process the request."
              }
            },
            "schema": {
              "$ref": "#/definitions/StorageError"
            }
          }
        }
      },
      "parameters": [
        {
          "name": "action",
          "in": "query",
          "required": true,
          "type": "string",
          "enum": [
            "append"
          ]
        }
      ]
    }
  },
  "parameters": {
    "Url": {
      "name": "url",
      "description": "The URL of the service account, container, or blob that is the targe of the desired operation.",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true
    },
	"FileSystemResource": {
	  "name": "resource",
	  "in": "query",
	  "description": "The value must be \"filesystem\" for all filesystem operations.",
	  "required": true,
	  "type": "string",
	  "enum": [
		"filesystem"
	  ],
	  "x-ms-enum": {
		"name": "FileSystemResourceType",
		"modelAsString": false
	  }
	},
    "ApiVersionParameter": {
      "name": "x-ms-version",
      "x-ms-client-name": "version",
      "in": "header",
      "required": true,
      "type": "string",
      "description": "Specifies the version of the operation to use for this request.",
      "enum": [
        "2019-12-12"
      ]
    },
    "accountName": {
      "description": "The Azure Storage account name.",
      "in": "path",
      "name": "accountName",
      "required": true,
      "type": "string",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "dnsSuffix": {
      "default": "dfs.core.windows.net",
      "description": "The DNS suffix for the Azure Data Lake Storage endpoint.",
      "in": "path",
      "name": "dnsSuffix",
      "required": true,
      "type": "string",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "ClientRequestId": {
      "name": "x-ms-client-request-id",
      "x-ms-client-name": "requestId",
      "in": "header",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    },
    "Timeout": {
      "name": "timeout",
      "in": "query",
      "required": false,
      "type": "integer",
      "minimum": 0,
      "x-ms-parameter-location": "method",
      "description": "The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a>"
    },
    "IfMatch": {
      "name": "If-Match",
      "x-ms-client-name": "ifMatch",
      "in": "header",
      "required": false,
      "type": "string",
      "format": "etag",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "modified-access-conditions"
      },
      "description": "Specify an ETag value to operate only on blobs with a matching value."
    },
    "IfModifiedSince": {
      "name": "If-Modified-Since",
      "x-ms-client-name": "ifModifiedSince",
      "in": "header",
      "required": false,
      "type": "string",
      "format": "date-time-rfc1123",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "modified-access-conditions"
      },
      "description": "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    },
    "IfNoneMatch": {
      "name": "If-None-Match",
      "x-ms-client-name": "ifNoneMatch",
      "in": "header",
      "required": false,
      "type": "string",
      "format": "etag",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "modified-access-conditions"
      },
      "description": "Specify an ETag value to operate only on blobs without a matching value."
    },
    "IfUnmodifiedSince": {
      "name": "If-Unmodified-Since",
      "x-ms-client-name": "ifUnmodifiedSince",
      "in": "header",
      "required": false,
      "type": "string",
      "format": "date-time-rfc1123",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "modified-access-conditions"
      },
      "description": "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    },
    "RecursiveOptional": {
      "name": "recursive",
      "x-ms-client-name": "recursive",
      "x-ms-parameter-location": "method",
      "in": "query",
      "description": "Required",
      "required": false,
      "type": "boolean"
    },
    "RecursiveRequired": {
      "name": "recursive",
      "x-ms-client-name": "recursive",
      "x-ms-parameter-location": "method",
      "in": "query",
      "description": "Required",
      "required": true,
      "type": "boolean"
    },
    "Continuation": {
      "name": "continuation",
      "x-ms-client-name": "continuation",
      "x-ms-parameter-location": "method",
      "in": "query",
      "description": "Optional.  When deleting a directory, the number of paths that are deleted with each invocation is limited.  If the number of paths to be deleted exceeds this limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the delete operation to continue deleting the directory.",
      "required": false,
      "type": "string"
    },
    "Directory": {
      "name": "directory",
      "x-ms-client-name": "Path",
      "x-ms-parameter-location": "method",
      "in": "query",
      "description": "Optional.  Filters results to paths within the specified directory. An error occurs if the directory does not exist.",
      "required": false,
      "type": "string"
    },
    "LeaseIdOptional": {
      "name": "x-ms-lease-id",
      "x-ms-client-name": "leaseId",
      "in": "header",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "lease-access-conditions"
      },
      "description": "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    },
    "LeaseIdRequired": {
      "name": "x-ms-lease-id",
      "x-ms-client-name": "leaseId",
      "in": "header",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Specifies the current lease ID on the resource."
    },
    "ProposedLeaseIdOptional": {
      "name": "x-ms-proposed-lease-id",
      "x-ms-client-name": "proposedLeaseId",
      "in": "header",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats."
    },
    "Prefix": {
      "name": "prefix",
      "in": "query",
      "description": "Filters results to filesystems within the specified prefix.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "MaxResults": {
      "name": "maxResults",
      "in": "query",
      "description": "An optional value that specifies the maximum number of items to return. If omitted or greater than 5,000, the response will include up to 5,000 items.",
      "format": "int32",
      "minimum": 1,
      "required": false,
      "type": "integer",
      "x-ms-parameter-location": "method"
    },
    "Properties": {
      "name": "x-ms-properties",
      "x-ms-client-name": "properties",
      "description": "Optional. User-defined properties to be stored with the filesystem, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.  If the filesystem exists, any properties not included in the list will be removed.  All properties are removed if the header is omitted.  To merge new and existing properties, first get all existing properties and the current E-Tag, then make a conditional request with the E-Tag and include values for all properties.",
      "in": "header",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SourceIfMatch": {
      "name": "x-ms-source-if-match",
      "x-ms-client-name": "sourceIfMatch",
      "in": "header",
      "required": false,
      "type": "string",
      "format": "etag",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "source-modified-access-conditions"
      },
      "description": "Specify an ETag value to operate only on blobs with a matching value."
    },
    "SourceIfModifiedSince": {
      "name": "x-ms-source-if-modified-since",
      "x-ms-client-name": "sourceIfModifiedSince",
      "in": "header",
      "required": false,
      "type": "string",
      "format": "date-time-rfc1123",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "source-modified-access-conditions"
      },
      "description": "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    },
    "SourceIfNoneMatch": {
      "name": "x-ms-source-if-none-match",
      "x-ms-client-name": "sourceIfNoneMatch",
      "in": "header",
      "required": false,
      "type": "string",
      "format": "etag",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "source-modified-access-conditions"
      },
      "description": "Specify an ETag value to operate only on blobs without a matching value."
    },
    "SourceIfUnmodifiedSince": {
      "name": "x-ms-source-if-unmodified-since",
      "x-ms-client-name": "sourceIfUnmodifiedSince",
      "in": "header",
      "required": false,
      "type": "string",
      "format": "date-time-rfc1123",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "source-modified-access-conditions"
      },
      "description": "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    },
    "SourceLeaseId": {
      "name": "x-ms-source-lease-id",
      "x-ms-client-name": "sourceLeaseId",
      "in": "header",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "A lease ID for the source path. If specified, the source path must have an active lease and the leaase ID must match."
    },
    "FileSystem": {
      "name": "filesystem",
      "x-ms-client-name": "fileSystem",
      "in": "path",
      "description": "The filesystem identifier.",
      "pattern": "^[$a-z0-9](?!.*--)[-a-z0-9]{1,61}[a-z0-9]$",
      "minLength": 3,
      "maxLength": 63,
      "required": true,
      "type": "string"
    },
    "Path": {
      "name": "path",
      "in": "path",
      "description": "The file or directory path.",
      "required": true,
      "type": "string"
    },
    "CacheControl": {
      "name": "x-ms-cache-control",
      "x-ms-client-name": "cacheControl",
      "in": "header",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "path-HTTP-headers"
      },
      "description": "Optional. Sets the blob's cache control. If specified, this property is stored with the blob and returned with a read request."
    },
    "ContentDisposition": {
      "name": "x-ms-content-disposition",
      "x-ms-client-name": "contentDisposition",
      "in": "header",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "path-HTTP-headers"
      },
      "description": "Optional. Sets the blob's Content-Disposition header."
    },
    "ContentEncoding": {
      "name": "x-ms-content-encoding",
      "x-ms-client-name": "contentEncoding",
      "in": "header",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "path-HTTP-headers"
      },
      "description": "Optional. Sets the blob's content encoding. If specified, this property is stored with the blob and returned with a read request."
    },
    "ContentLanguage": {
      "name": "x-ms-content-language",
      "x-ms-client-name": "contentLanguage",
      "in": "header",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "path-HTTP-headers"
      },
      "description": "Optional. Set the blob's content language. If specified, this property is stored with the blob and returned with a read request."
    },
    "ContentType": {
      "name": "x-ms-content-type",
      "x-ms-client-name": "contentType",
      "in": "header",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "path-HTTP-headers"
      },
      "description": "Optional. Sets the blob's content type. If specified, this property is stored with the blob and returned with a read request."
    },
    "TransactionalContentMD5": {
      "name": "Content-MD5",
      "x-ms-client-name": "transactionalContentHash",
      "in": "header",
      "required": false,
      "type": "string",
      "format": "byte",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "path-HTTP-headers"
      },
      "description": "Specify the transactional md5 for the body, to be validated by the service."
    },
    "ContentMD5": {
      "name": "x-ms-content-md5",
      "x-ms-client-name": "contentMD5",
      "in": "header",
      "required": false,
      "type": "string",
      "format": "byte",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "name": "path-HTTP-headers"
      },
      "description": "Specify the transactional md5 for the body, to be validated by the service."
    },
    "Umask": {
      "name": "x-ms-umask",
      "x-ms-client-name": "umask",
      "description": "Optional and only valid if Hierarchical Namespace is enabled for the account. When creating a file or directory and the parent folder does not have a default ACL, the umask restricts the permissions of the file or directory to be created.  The resulting permission is given by p bitwise and not u, where p is the permission and u is the umask.  For example, if p is 0777 and u is 0057, then the resulting permission is 0720.  The default permission is 0777 for a directory and 0666 for a file.  The default umask is 0027.  The umask must be specified in 4-digit octal notation (e.g. 0766).",
      "in": "header",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "Permissions": {
      "name": "x-ms-permissions",
      "x-ms-client-name": "permissions",
      "description": "Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX access permissions for the file owner, the file owning group, and others. Each class may be granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported.",
      "in": "header",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "RenameSource": {
      "name": "x-ms-rename-source",
      "x-ms-client-name": "renameSource",
      "in": "header",
      "description": "An optional file or directory to be renamed.  The value must have the following format: \"/{filesystem}/{path}\".  If \"x-ms-properties\" is specified, the properties will overwrite the existing properties; otherwise, the existing properties will be preserved. This value must be a URL percent-encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "Owner": {
      "name": "x-ms-owner",
      "x-ms-client-name": "owner",
      "in": "header",
      "required": false,
      "type": "string",
      "description": "Optional. The owner of the blob or directory.",
      "x-ms-parameter-location": "method"
    },
    "Group": {
      "name": "x-ms-group",
      "x-ms-client-name": "group",
      "in": "header",
      "required": false,
      "type": "string",
      "description": "Optional. The owning group of the blob or directory.",
      "x-ms-parameter-location": "method"
    },
    "Acl": {
      "name": "x-ms-acl",
      "description": "Sets POSIX access control rights on files and directories. The value is a comma-separated list of access control entries. Each access control entry (ACE) consists of a scope, a type, a user or group identifier, and permissions in the format \"[scope:][type]:[id]:[permissions]\".",
      "x-ms-client-name": "acl",
      "in": "header",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "Body": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "format": "file"
      },
      "x-ms-parameter-location": "method",
      "description": "Initial data"
    },
    "Upn": {
      "name": "upn",
      "in": "query",
      "description": "Optional. Valid only when Hierarchical Namespace is enabled for the account. If \"true\", the user identity values returned in the x-ms-owner, x-ms-group, and x-ms-acl response headers will be transformed from Azure Active Directory Object IDs to User Principal Names.  If \"false\", the values will be returned as Azure Active Directory Object IDs. The default value is false. Note that group and application Object IDs are not translated because they do not have unique friendly names.",
      "required": false,
      "type": "boolean",
      "x-ms-parameter-location": "method"
    },
    "Position": {
      "name": "position",
      "in": "query",
      "description": "This parameter allows the caller to upload data in parallel and control the order in which it is appended to the file.  It is required when uploading data to be appended to the file and when flushing previously uploaded data to the file.  The value must be the position where the data is to be appended.  Uploaded data is not immediately flushed, or written, to the file.  To flush, the previously uploaded data must be contiguous, the position parameter must be specified and equal to the length of the file after all data has been written, and there must not be a request entity body included with the request.",
      "format": "int64",
      "required": false,
      "type": "integer",
      "x-ms-parameter-location": "method"
    },
    "RetainUncommittedData": {
      "name": "retainUncommittedData",
      "in": "query",
      "description": "Valid only for flush operations.  If \"true\", uncommitted data is retained after the flush operation completes; otherwise, the uncommitted data is deleted after the flush operation.  The default is false.  Data at offsets less than the specified position are written to the file when flush succeeds, but this optional parameter allows data after the flush position to be retained for a future flush operation.",
      "required": false,
      "type": "boolean",
      "x-ms-parameter-location": "method"
    },
    "Close": {
      "name": "close",
      "in": "query",
      "description": "Azure Storage Events allow applications to receive notifications when files change. When Azure Storage Events are enabled, a file changed event is raised. This event has a property indicating whether this is the final change to distinguish the difference between an intermediate flush to a file stream and the final close of a file stream. The close query parameter is valid only when the action is \"flush\" and change notifications are enabled. If the value of close is \"true\" and the flush operation completes successfully, the service raises a file change notification with a property indicating that this is the final update (the file stream has been closed). If \"false\" a change notification is raised indicating the file has changed. The default is false. This query parameter is set to true by the Hadoop ABFS driver to indicate that the file stream has been closed.\"",
      "required": false,
      "type": "boolean",
      "x-ms-parameter-location": "method"
    },
    "ContentLength": {
      "name": "Content-Length",
      "in": "header",
      "description": "Required for \"Append Data\" and \"Flush Data\".  Must be 0 for \"Flush Data\".  Must be the length of the request content in bytes for \"Append Data\".",
      "minimum": 0,
      "required": false,
      "type": "integer",
      "format": "int64",
      "x-ms-parameter-location": "method"
     }
  },
  "definitions": {
    "AclFailedEntryList": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "SetAccessControlRecursiveResponse": {
      "type": "object",
      "properties": {
        "directoriesSuccessful": {
          "type": "integer",
          "format": "int32"
        },
        "filesSuccessful": {
          "type": "integer",
          "format": "int32"
        },
        "failureCount": {
          "type": "integer",
          "format": "int32"
        },
        "failedEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AclFailedEntryList"
          }
        }
      }
    },
    "Path": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "isDirectory": {
          "default": false,
          "type": "boolean"
        },
        "lastModified": {
          "type": "string"
        },
        "eTag": {
          "type": "string"
        },
        "contentLength": {
          "type": "integer",
          "format": "int64"
        },
        "owner": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "permissions": {
          "type": "string"
        }
      }
    },
    "PathList": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Path"
          }
        }
      }
    },
    "FileSystem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "lastModified": {
          "type": "string"
        },
        "eTag": {
          "type": "string"
        }
      }
    },
    "FileSystemList": {
      "type": "object",
      "properties": {
        "filesystems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileSystem"
          }
        }
      }
    },
    "StorageError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "object",
          "description": "The service error response object.",
          "properties": {
            "Code": {
              "description": "The service error code.",
              "type": "string"
            },
            "Message": {
              "description": "The service error message.",
              "type": "string"
            }
          }
        }
      }
    }
  }
}
