import "@azure-tools/typespec-azure-core";
import "@typespec/rest";
import "./models.tsp";
import "@typespec/openapi";
import "@azure-tools/typespec-client-generator-core";

using Azure.Core;
using Azure.ClientGenerator.Core;
using TypeSpec.Http;

namespace Storage.Queue {
  alias ApiVersionHeader = {
    /** Specifies the version of the operation to use for this request. */
    @apiVersion
    @access(Access.internal)
    @header("x-ms-version")
    version: string;
  };

  alias ClientRequestIdHeader = {
    @access(Access.internal)
    @header("x-ms-client-request-id")
    @doc("An opaque, globally-unique, client-generated string identifier for the request.")
    clientRequestId?: uuid;
  };

  alias RequestIdResponseHeader = {
    @access(Access.internal)
    @visibility(Lifecycle.Read)
    @header("x-ms-request-id")
    @doc("An opaque, globally-unique, server-generated string identifier for the request.")
    requestId?: uuid;
  };

  /** The timeout parameter. */
  alias TimeoutParameter = {
    @doc("The timeout parameter is expressed in seconds. For more information, see <a href=\"https://learn.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-queue-service-operations\">Setting Timeouts for Queue Service Operations.</a>")
    @query
    @minValue(0)
    timeout?: int32;
  };

  alias VisibilityTimeoutParameter = {
    @doc("Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds. A specified value must be larger than or equal to 1 second, and cannot be larger than 7 days, or larger than 2 hours on REST protocol versions prior to version 2011-08-18. The visibility timeout of a message can be set to a value later than the expiry time.")
    @maxValue(604800)
    @query("visibilityTimeout")
    visibilityTimeout?: int32;
  };

  /** The Date response header */
  alias DateResponseHeader = {
    /** UTC date/time value generated by the service that indicates the time at which the response was initiated */
    #suppress "@azure-tools/typespec-azure-core/known-encoding" "Existing API"
    @encode("rfc7231")
    @header("Date")
    date: utcDateTime;
  };

  /** The queue name path parameter */
  alias QueueNamePathParameter = {
    /** The name of the queue. */
    @path
    queueName: string;
  };

  // NOTE: This does not explicitly let emitters know that this is a collection header for metadata. Logic should be handwritten to handle this.
  alias MetadataHeaders = {
    /** The metadata headers. */
    @alternateType(Record<string>, "rust")
    @header("x-ms-meta")
    metadata?: string;
  };

  /** Azure Storage Queue basic operation template */
  #suppress "@azure-tools/typespec-azure-core/operation-missing-api-version" "Existing API. Storage API version parameter pre-dates current guidance."
  op StorageOperation<
    TParams extends TypeSpec.Reflection.Model | void,
    TResponse extends TypeSpec.Reflection.Model | void,
    RequestMediaType extends string = "application/xml",
    ResponseMediaType extends string = "application/xml",
    TError = StorageError
  >(
    /** Content-Type header */
    #suppress "@typespec/http/content-type-ignored" "Template for existing API"
    @header("Content-Type")
    contentType: RequestMediaType,

    ...ApiVersionHeader,
    ...TParams,
    ...ClientRequestIdHeader,
  ): (TResponse & {
    /** Content-Type header */
    #suppress "@typespec/http/content-type-ignored" "Template for existing API"
    @header("Content-Type")
    contentType: ResponseMediaType;

    ...ApiVersionHeader;
    ...RequestIdResponseHeader;
    ...ClientRequestIdHeader;
  }) | TError;

  /** Azure Storage Queue basic operation template */
  #suppress "@azure-tools/typespec-azure-core/operation-missing-api-version" "Existing API. Storage API version parameter pre-dates current guidance."
  op StorageOperationNoBody<
    TParams extends TypeSpec.Reflection.Model | void,
    TResponse extends TypeSpec.Reflection.Model | void,
    TError = StorageError
  >(...ApiVersionHeader, ...TParams, ...ClientRequestIdHeader): (TResponse & {
    ...ApiVersionHeader;
    ...RequestIdResponseHeader;
    ...ClientRequestIdHeader;
  }) | TError;

  interface ServiceOperationGroup {
    /** Sets properties for a storage account's Queue service endpoint, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules */
    #suppress "@azure-tools/typespec-azure-core/use-standard-operations" "Existing API"
    #suppress "@azure-tools/typespec-azure-core/operation-missing-api-version" "Existing API. Storage API version parameter pre-dates current guidance."
    @put
    @route("?restype=service&comp=properties")
    setProperties is StorageOperation<
      {
        ...TimeoutParameter;

        /** The storage service properties to set. */
        @body
        storageServiceProperties: StorageServiceProperties;
      },
      {
        @statusCode statusCode: 202;
      }
    >;

    /** Retrieves properties of a storage account's Queue service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. */
    #suppress "@azure-tools/typespec-azure-core/use-standard-operations" "Existing API"
    #suppress "@azure-tools/typespec-azure-core/operation-missing-api-version" "Existing API. Storage API version parameter pre-dates current guidance."
    @get
    @route("?restype=service&comp=properties")
    getProperties is StorageOperation<
      TimeoutParameter,
      StorageServiceProperties
    >;

    /** Retrieves statistics related to replication for the Queue service. It is only available on the secondary location endpoint when read-access geo-redundant replication is enabled for the storage account. */
    #suppress "@azure-tools/typespec-azure-core/use-standard-operations" "Existing API"
    #suppress "@azure-tools/typespec-azure-core/operation-missing-api-version" "Existing API. Storage API version parameter pre-dates current guidance."
    @get
    @route("?restype=service&comp=stats")
    getStatistics is StorageOperation<
      TimeoutParameter,
      {
        ...DateResponseHeader;

        /** Storage service statistics */
        @body
        storageServiceStats: StorageServiceStats;
      }
    >;

    /** The List Queues Segment operation returns a list of the queues under the specified account */
    #suppress "@azure-tools/typespec-azure-core/use-standard-operations" "Existing API"
    #suppress "@azure-tools/typespec-azure-core/operation-missing-api-version" "Existing API. Storage API version parameter pre-dates current guidance."
    @get
    @route("?comp=list")
    listQueuesSegment is StorageOperation<
      {
        /** Filters the results to return only queues whose name begins with the specified prefix. */
        @query prefix?: string;

        /** A string value that identifies the portion of the list of queues to be returned with the next listing operation. The operation returns the NextMarker value within the response body if the listing operation did not return all queues remaining to be listed with the current page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the next page of list items. The marker value is opaque to the client. */
        @continuationToken
        @query
        marker?: string;

        /** Specifies the maximum number of queues to return. If the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to 5000 items. */
        @query
        @minValue(1)
        maxresults?: int32;

        ...TimeoutParameter;

        /** Include this parameter to specify that the queue's metadata be returned as part of the response body. */
        @query include?: "metadata"[]; // TODO: Double check this type
      },
      ListQueuesSegmentResponse
    >;
  }

  interface QueueOperationGroup {
    /** Creates a new queue under the specified account. If the queue with the same name already exists, the operation fails. */
    #suppress "@azure-tools/typespec-azure-core/use-standard-operations" "Existing API"
    #suppress "@azure-tools/typespec-azure-core/operation-missing-api-version" "Existing API. Storage API version parameter pre-dates current guidance."
    @put
    @route("/{queueName}")
    create is StorageOperationNoBody<
      {
        ...QueueNamePathParameter;
        ...TimeoutParameter;
        ...MetadataHeaders;
      },
      {
        @statusCode statusCode: 201;
      }
    >;

    /** returns all user-defined metadata and system properties for the specified queue. */
    #suppress "@azure-tools/typespec-azure-core/use-standard-operations" "Existing API"
    #suppress "@azure-tools/typespec-azure-core/operation-missing-api-version" "Existing API. Storage API version parameter pre-dates current guidance."
    @get
    @route("/{queueName}?comp=metadata")
    getProperties is StorageOperationNoBody<
      {
        ...QueueNamePathParameter;
        ...TimeoutParameter;
      },
      {
        ...MetadataHeaders;
      }
    >;

    /** operation permanently deletes the specified queue */
    #suppress "@azure-tools/typespec-azure-core/use-standard-operations" "Existing API"
    #suppress "@azure-tools/typespec-azure-core/operation-missing-api-version" "Existing API. Storage API version parameter pre-dates current guidance."
    @delete
    @route("/{queueName}")
    delete is StorageOperationNoBody<
      {
        ...QueueNamePathParameter;
        ...TimeoutParameter;
        ...MetadataHeaders;
      },
      {
        @statusCode statusCode: 202;
      }
    >;

    /** operation sets one or more user-defined name-value pairs for the specified queue. */
    #suppress "@azure-tools/typespec-azure-core/use-standard-operations" "Existing API"
    #suppress "@azure-tools/typespec-azure-core/operation-missing-api-version" "Existing API. Storage API version parameter pre-dates current guidance."
    @put
    @route("/{queueName}?comp=metadata")
    setMetadata is StorageOperationNoBody<
      {
        ...QueueNamePathParameter;
        ...TimeoutParameter;
        ...MetadataHeaders;
      },
      {
        @statusCode statusCode: 204;
      }
    >;

    /** gets the permissions for the specified queue. The permissions indicate whether queue data may be accessed publicly. */
    #suppress "@azure-tools/typespec-azure-core/use-standard-operations" "Existing API"
    #suppress "@azure-tools/typespec-azure-core/operation-missing-api-version" "Existing API. Storage API version parameter pre-dates current guidance."
    @get
    @route("/{queueName}?comp=acl")
    getAccessPolicy is StorageOperation<
      {
        ...QueueNamePathParameter;
        ...TimeoutParameter;
      },
      {
        @body body: ListOfSignedIdentifier;
        ...DateResponseHeader;
      }
    >;

    /** sets the permissions for the specified queue. */
    #suppress "@azure-tools/typespec-azure-core/use-standard-operations" "Existing API"
    #suppress "@azure-tools/typespec-azure-core/operation-missing-api-version" "Existing API. Storage API version parameter pre-dates current guidance."
    #suppress "@azure-tools/typespec-azure-core/use-standard-names" "Existing API"
    @put
    @route("/{queueName}?comp=acl")
    setAccessPolicy is StorageOperation<
      {
        ...QueueNamePathParameter;

        /** The access control list for the queue. */
        #suppress "@azure-tools/typespec-azure-core/request-body-problem" "Existing API"
        @body
        queueAcl: ListOfSignedIdentifier;

        ...TimeoutParameter;
      },
      {
        ...DateResponseHeader;
      }
    >;
  }

  interface MessagesOperationGroup {
    /**
     * The Dequeue operation retrieves one or more messages from the front of the
     * queue.
     */
    #suppress "@azure-tools/typespec-azure-core/use-standard-operations" "Existing API"
    #suppress "@azure-tools/typespec-azure-core/operation-missing-api-version" "Existing API. Storage API version parameter pre-dates current guidance."
    #suppress "@azure-tools/typespec-azure-core/use-standard-names" "Existing API"
    @get
    @route("/{queueName}/messages")
    dequeue is StorageOperation<
      {
        ...QueueNamePathParameter;

        /**
         * Optional. A nonzero integer value that specifies the number of messages to
         * retrieve from the queue, up to a maximum of 32. If fewer are visible, the
         * visible messages are returned. By default, a single message is retrieved from
         * the queue with this operation.
         */
        @minValue(1)
        @query("numofmessages")
        numberOfMessages?: int32;

        ...VisibilityTimeoutParameter;
        ...TimeoutParameter;
      },
      {
        @body body: ListOfDequeuedMessageItem;
      }
    >;

    /**
     * The Clear operation deletes all messages from the specified queue.
     */
    #suppress "@azure-tools/typespec-azure-core/use-standard-operations" "Existing API"
    #suppress "@azure-tools/typespec-azure-core/operation-missing-api-version" "Existing API. Storage API version parameter pre-dates current guidance."
    #suppress "@azure-tools/typespec-azure-core/use-standard-names" "Existing API"
    @delete
    @route("/{queueName}/messages")
    clear is StorageOperationNoBody<
      {
        ...QueueNamePathParameter;
      },
      {
        @statusCode statusCode: 204;
      }
    >;

    /**
     * The Enqueue operation adds a new message to the back of the message queue. A
     * visibility timeout can also be specified to make the message invisible until
     * the visibility timeout expires. A message must be in a format that can be
     * included in an XML request with UTF-8 encoding. The encoded message can be up
     * to 64 KB in size for versions 2011-08-18 and newer, or 8 KB in size for
     * previous versions.
     */
    #suppress "@azure-tools/typespec-azure-core/use-standard-operations" "Existing API"
    #suppress "@azure-tools/typespec-azure-core/operation-missing-api-version" "Existing API. Storage API version parameter pre-dates current guidance."
    @post
    @route("/{queueName}/messages")
    enqueue is StorageOperation<
      {
        ...QueueNamePathParameter;
        ...VisibilityTimeoutParameter;

        /**
         * Optional. Specifies the time-to-live interval for the message, in seconds.
         * Prior to version 2017-07-29, the maximum time-to-live allowed is 7 days. For
         * version 2017-07-29 or later, the maximum time-to-live can be any positive
         * number, as well as -1 indicating that the message does not expire. If this
         * parameter is omitted, the default time-to-live is 7 days.
         */
        @minValue(-1)
        @query("messageTtl")
        messageTimeToLive?: int32;

        /**
         * A Message object which can be stored in a Queue
         */
        @bodyRoot
        queueMessage: QueueMessage;
      },
      ListOfEnqueuedMessage
    >;

    /**
     * The Peek operation retrieves one or more messages from the front of the queue,
     * but does not alter the visibility of the message.
     */
    #suppress "@azure-tools/typespec-azure-core/use-standard-operations" "Existing API"
    #suppress "@azure-tools/typespec-azure-core/operation-missing-api-version" "Existing API. Storage API version parameter pre-dates current guidance."
    #suppress "@azure-tools/typespec-azure-core/use-standard-names" "Existing API"
    @get
    @route("/{queueName}/messages?peekonly=true")
    peek is StorageOperation<
      {
        ...QueueNamePathParameter;

        /**
         * Optional. A nonzero integer value that specifies the number of messages to
         * retrieve from the queue, up to a maximum of 32. If fewer are visible, the
         * visible messages are returned. By default, a single message is retrieved from
         * the queue with this operation.
         */
        @minValue(1)
        @query("numofmessages")
        numberOfMessages?: int32;
      },
      ListOfPeekedMessageItem
    >;
  }

  interface MessageIdOperationGroup {
    /**
     * The Update operation was introduced with version 2011-08-18 of the Queue
     * service API. The Update Message operation updates the visibility timeout of a
     * message. You can also use this operation to update the contents of a message. A
     * message must be in a format that can be included in an XML request with UTF-8
     * encoding, and the encoded message can be up to 64KB in size.
     */
    #suppress "@azure-tools/typespec-azure-core/use-standard-operations" "Existing API"
    #suppress "@azure-tools/typespec-azure-core/operation-missing-api-version" "Existing API. Storage API version parameter pre-dates current guidance."
    #suppress "@azure-tools/typespec-azure-core/use-standard-names" "Existing API"
    @put
    @route("/{queueName}/messages/{messageId}")
    update is StorageOperation<
      {
        ...QueueNamePathParameter;

        /**
         * The id of the queue message.
         */
        @path
        messageId: string;

        /**
         * Required. Specifies the valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.
         */
        @query("popReceipt")
        popReceipt: string;

        @doc("Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds. A specified value must be larger than or equal to 1 second, and cannot be larger than 7 days, or larger than 2 hours on REST protocol versions prior to version 2011-08-18. The visibility timeout of a message can be set to a value later than the expiry time.")
        @maxValue(604800)
        @query("visibilityTimeout")
        visibilityTimeout: int32;

        /**
         * A Message object which can be stored in a Queue
         */
        @bodyRoot
        queueMessage?: QueueMessage;
      },
      {}
    >;

    /**
     * The Delete operation deletes the specified message.
     */
    #suppress "@azure-tools/typespec-azure-core/use-standard-operations" "Existing API"
    #suppress "@azure-tools/typespec-azure-core/operation-missing-api-version" "Existing API. Storage API version parameter pre-dates current guidance."
    @delete
    @route("/{queueName}/messages/{messageId}")
    delete is StorageOperationNoBody<
      {
        ...QueueNamePathParameter;

        /**
         * The id of the queue message.
         */
        @path
        messageId: string;

        /**
         * Required. Specifies the valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.
         */
        @query("popReceipt")
        popReceipt: string;
      },
      {
        @statusCode statusCode: 204;
      }
    >;
  }
}
