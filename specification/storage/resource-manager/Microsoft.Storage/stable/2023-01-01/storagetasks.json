{
  "swagger": "2.0",
  "info": {
    "title": "StorageTaskManagementClient",
    "description": "The Azure Storage Tasks Management API.",
    "version": "2023-01-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageTasks/{storageTaskName}": {
      "put": {
        "tags": [
          "StorageTasks"
        ],
        "description": "Asynchronously creates a new storage task resource with the specified parameters. If a storage task is already created and a subsequent create request is issued with different properties, the storage task properties will be updated. If a storage task is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.",
        "operationId": "StorageTasks_Create",
        "x-ms-examples": {
          "PutStorageTask": {
            "$ref": "./examples/storageTasks/PutStorageTask.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/StorageTaskName"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageTask"
            },
            "description": "The parameters to create a Storage Task."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Update storage task with the same properties specified in the request body.",
            "schema": {
              "$ref": "#/definitions/StorageTask"
            }
          },
          "202": {
            "description": "Accepted -- Create or update request accepted; operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "delete": {
        "tags": [
          "StorageTasks"
        ],
        "description": "Delete the storage task resource.",
        "operationId": "StorageTasks_Delete",
        "x-ms-examples": {
          "PutStorageTask": {
            "$ref": "./examples/storageTasks/DeleteStorageTask.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/StorageTaskName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- storage task deleted successfully."
          },
          "204": {
            "description": "NoContent -- specified storage task does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "StorageTasks"
        ],
        "description": "Get the storage task properties",
        "operationId": "StorageTasks_Get",
        "x-ms-examples": {
          "GetStorageTask": {
            "$ref": "./examples/storageTasks/GetStorageTask.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/StorageTaskName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- properties retrieved successfully for the storage task.",
            "schema": {
              "$ref": "#/definitions/StorageTask"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "StorageTasks"
        ],
        "operationId": "StorageTasks_Update",
        "description": "Update storage task properties",
        "x-ms-examples": {
          "PatchStorageTask": {
            "$ref": "./examples/storageTasks/PatchStorageTask.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/StorageTaskName"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageTaskUpdateParameters"
            },
            "description": "The parameters to provide to update the storage task resource."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- returned when the update request body had no changes.",
            "schema": {
              "$ref": "#/definitions/StorageTask"
            }
          },
          "202": {
            "description": "Accepted -- update request accepted; operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageTasks": {
      "get": {
        "tags": [
          "StorageTasks"
        ],
        "operationId": "StorageTasks_ListBySubscription",
        "description": "Lists all the storage tasks available under the subscription.",
        "x-ms-examples": {
          "ListStorageTasksBySubscription": {
            "$ref": "./examples/storageTasks/ListStorageTasksBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- List of storage tasks was retrieved and returned successfully.",
            "schema": {
              "$ref": "#/definitions/StorageTasksListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageTasks": {
      "get": {
        "tags": [
          "StorageTasks"
        ],
        "operationId": "StorageTasks_ListByResourceGroup",
        "description": "Lists all the storage tasks available under the given resource group.",
        "x-ms-examples": {
          "ListStorageTasksByResourceGroup": {
            "$ref": "./examples/storageTasks/ListStorageTasksByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- List of storage accounts in the given resource group retrieved and returned successfully.",
            "schema": {
              "$ref": "#/definitions/StorageTasksListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "StorageTask": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Gets or sets the location of the resource. location property cannot be changes for successfully provisioned storage tasks."
        },
        "identity": {
          "$ref": "#/definitions/StorageTaskIdentity",
          "description": "The managed service identity of the resource."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/StorageTaskProperties",
          "description": "Properties of the storage task."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Represents Storage Task."
    },
    "StorageTaskUpdateParameters": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/StorageTaskIdentity",
          "description": "The identity of the resource."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/StorageTaskProperties",
          "description": "Properties of the storage task."
        }
      },
      "description": "Parameters of the storage task update request"
    },
    "StorageTaskIdentity": {
      "type": "object",
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal ID of resource identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant ID of resource."
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "None",
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "IdentityType",
            "modelAsString": true
          }
        }
      },
      "required": [
        "type"
      ],
      "description": "Identity for the storage task."
    },
    "StorageTaskProperties": {
      "type": "object",
      "properties": {
        "taskVersion": {
          "readOnly": true,
          "type": "integer",
          "minimum": 1,
          "maximum": 1,
          "format": "int64",
          "description": "Storage task version."
        },
        "enabled": {
          "type": "boolean",
          "description": "Storage Task is enabled when set to true and disabled when set to false"
        },
        "description": {
          "type": "string",
          "description": "Text that describes the purpose of the storage task"
        },
        "action": {
          "$ref": "#/definitions/StorageTaskAction",
          "description": "The storage task action that is executed"
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "Represents the provisioning state of the storage task.",
          "enum": [
            "ValidateSubscriptionQuotaBegin",
            "ValidateSubscriptionQuotaEnd",
            "Creating",
            "Succeeded",
            "Deleting",
            "Canceled",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": false
          }
        },
        "creationTimeInUtc": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The creation date and time of the storage task in UTC."
        }
      },
      "required": [
        "enabled",
        "description",
        "action"
      ],
      "description": "Properties of the storage task."
    },
    "StorageTaskAction": {
      "type": "object",
      "properties": {
        "if": {
          "$ref": "#/definitions/IfCondition",
          "description": "The if block of storage task operation"
        },
        "else": {
          "$ref": "#/definitions/ElseCondition",
          "description": "The else block of storage task operation"
        }
      },
      "required": [
        "if"
      ],
      "description": "The storage task action represents conditional statements and operations to be performed on target objects."
    },
    "IfCondition": {
      "type": "object",
      "properties": {
        "condition": {
          "type": "string",
          "description": "The condition predicate which is composed of object properties, eg: blob and container properties."
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageTaskOperation"
          },
          "x-ms-identifiers": [],
          "description": "List of operations to execute when the condition predicate satisfies."
        }
      },
      "required": [
        "condition",
        "operations"
      ],
      "description": "The if block of storage task operation"
    },
    "ElseCondition": {
      "type": "object",
      "properties": {
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageTaskOperation"
          },
          "x-ms-identifiers": [],
          "description": "List of operations to execute in the else block"
        }
      },
      "required": [
        "operations"
      ],
      "description": "The else block of storage task operation"
    },
    "StorageTaskOperation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The operation to be performed on the object.",
          "enum": [
            "SetBlobTier",
            "SetBlobTags",
            "SetBlobImmutabilityPolicy",
            "SetBlobLegalHold",
            "SetBlobExpiry",
            "DeleteBlob",
            "UndeleteBlob"
          ],
          "x-ms-enum": {
            "name": "StorageTaskOperation",
            "modelAsString": true
          }
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Key-value parameters for the operation."
        },
        "onSuccess": {
          "type": "string",
          "description": "Action to be taken when the operation is successful for a object.",
          "enum": [
            "continue"
          ],
          "x-ms-enum": {
            "name": "onSuccess",
            "modelAsString": false
          }
        },
        "onFailure": {
          "type": "string",
          "description": "Action to be taken when the operation fails for a object.",
          "enum": [
            "break"
          ],
          "x-ms-enum": {
            "name": "onFailure",
            "modelAsString": false
          }
        }
      },
      "required": [
        "name"
      ],
      "description": "Represents an operation to be performed on the object"
    },
    "StorageTasksListResult": {
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageTask"
          },
          "description": "Gets the list of storage tasks and their properties."
        },
        "nextLink": {
          "type": "string",
          "description": "Request URL that can be used to query next page of storage tasks. Returned when total number of requested storage tasks exceed maximum page size.",
          "readOnly": true
        }
      },
      "description": "The response from the List Storage Tasks operation."
    }
  },
  "parameters": {
    "ResourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group within the user's subscription. The name is case insensitive.",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "StorageTaskName": {
      "name": "storageTaskName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the storage task within the specified resource group. Storage task names must be between 3 and 18 characters in length and use numbers and lower-case letters only.",
      "pattern": "^[a-z0-9]{3,18}$",
      "maxLength": 18,
      "minLength": 3,
      "x-ms-parameter-location": "method"
    }
  }
}
