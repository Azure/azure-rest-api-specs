{
    "swagger": "2.0",
    "info": {
      "version": "2019-06-01",
      "title": "StorageManagementClient",
      "description": "The Azure Storage Management API."
    },
    "host": "management.azure.com",
    "schemes": [
      "https"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/{QueueServicesName}": {
        "put": {
          "tags": [
            "QueueServiceProperties"
          ],
          "operationId": "QueueServices_SetServiceProperties",
          "x-ms-examples": {
            "PutQueueServices": {
              "$ref": "./examples/QueueServicesPut.json"
            }
          },
          "description": "Sets the properties of a storage account’s Queue service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. ",
          "parameters": [
            {
              "$ref": "./storage.json#/parameters/ResourceGroupName"
            },
            {
              "$ref": "./storage.json#/parameters/StorageAccountName"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/QueueServicesName"
            },
            {
              "name": "parameters",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/QueueServiceProperties"
              },
              "description": "The properties of a storage account’s Queue service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules."
            }
          ],
          "responses": {
            "200": {
              "description": "OK -- Sets The properties of a storage account’s Queue service successfully.",
              "schema": {
                "$ref": "#/definitions/QueueServiceProperties"
              }
            },
            "default": {
              "description": "Error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "get": {
          "tags": [
            "QueueServiceProperties"
          ],
          "operationId": "QueueServices_GetServiceProperties",
          "x-ms-examples": {
            "GetQueueServices": {
              "$ref": "./examples/QueueServicesGet.json"
            }
          },
          "description": "Gets the properties of a storage account’s Queue service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.",
          "parameters": [
            {
              "$ref": "./storage.json#/parameters/ResourceGroupName"
            },
            {
              "$ref": "./storage.json#/parameters/StorageAccountName"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/QueueServicesName"
            }
          ],
          "responses": {
            "200": {
              "description": "OK -- returned the properties of a storage account’s Queue service.",
              "schema": {
                "$ref": "#/definitions/QueueServiceProperties"
              }
            },
            "default": {
              "description": "Error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}": {
        "put": {
          "tags": [
            "QueueService"
          ],
          "operationId": "PutQueue",
          "x-ms-examples": {
            "PutQueue": {
              "$ref": "./examples/PutQueue.json"
            }
          },
          "description": "Creates a new queue with the specified queue name, under the specified account.",
          "parameters": [
            {
              "$ref": "./storage.json#/parameters/ResourceGroupName"
            },
            {
              "$ref": "./storage.json#/parameters/StorageAccountName"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/QueueName"
            },
            {
              "name": "QueueResource",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Queue"
              },
              "description": "Queue properties and metadata to be created with"
            }
          ],
          "responses": {
            "200": {
              "description": "OK -- Creates a queue with the given queue name successfully.",
              "schema": {
                "$ref": "#/definitions/Queue"
              }
            },
            "default": {
              "description": "Error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "patch": {
          "tags": [
            "QueueService"
          ],
          "operationId": "PatchQueue",
          "x-ms-examples": {
            "PatchQueue": {
              "$ref": "./examples/PatchQueue.json"
            }
          },
          "description": "Creates a new queue with the specified queue name, under the specified account.",
          "parameters": [
            {
              "$ref": "./storage.json#/parameters/ResourceGroupName"
            },
            {
              "$ref": "./storage.json#/parameters/StorageAccountName"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/QueueName"
            },
            {
              "name": "QueueResource",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Queue"
              },
              "description": "Queue properties and metadata to be created with"
            }
          ],
          "responses": {
            "200": {
              "description": "OK -- Creates a queue with the given queue name successfully.",
              "schema": {
                "$ref": "#/definitions/Queue"
              }
            },
            "default": {
              "description": "Error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "get": {
          "tags": [
            "QueueService"
          ],
          "operationId": "GetQueue",
          "x-ms-examples": {
            "GetQueue": {
              "$ref": "./examples/GetQueue.json"
            }
          },
          "description": "Gets the queue with the specified queue name, under the specified account if it exists.",
          "parameters": [
            {
              "$ref": "./storage.json#/parameters/ResourceGroupName"
            },
            {
              "$ref": "./storage.json#/parameters/StorageAccountName"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/QueueName"
            }
          ],
          "responses": {
            "200": {
              "description": "OK -- returned table with the specified table name successfully.",
              "schema": {
                "$ref": "#/definitions/Queue"
              }
            },
            "default": {
              "description": "Error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "delete": {
          "tags": [
            "QueueService"
          ],
          "operationId": "DeleteQueue",
          "x-ms-examples": {
            "DeleteQueue": {
              "$ref": "./examples/DeleteQueue.json"
            }
          },
          "description": "Deletes the queue with the specified queue name, under the specified account if it exists.",
          "parameters": [
            {
              "$ref": "./storage.json#/parameters/ResourceGroupName"
            },
            {
              "$ref": "./storage.json#/parameters/StorageAccountName"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/QueueName"
            }
          ],
          "responses": {
            "202": {
              "description": "No Content - Successfully deleted the queue with the sepcified queue name"
            },
            "default": {
              "description": "Error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues": {
        "get": {
          "tags": [
            "QueueService"
          ],
          "operationId": "ListQueue",
          "x-ms-examples": {
            "ListQueue": {
              "$ref": "./examples/ListQueue.json"
            }
          },
          "description": "Gets a list of all the queues under the specified storage account",
          "parameters": [
            {
              "$ref": "./storage.json#/parameters/ResourceGroupName"
            },
            {
              "$ref": "./storage.json#/parameters/StorageAccountName"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
            },
            {
              "name": "$maxpagesize",
              "in": "query",
              "type": "string",
              "description": "Optional, Specified maximum number of queues that should be included for each list queue response"
            },
            {
              "name": "$filter",
              "in": "query",
              "type": "string",
              "description": "Optional, When specified, only the queues with a name starting with the given filter will be listed."
            }
          ],
          "responses": {
            "200": {
              "description": "OK -- returned a list of queues successfully.",
              "schema": {
                "$ref": "#/definitions/ListQueueResource"
              }
            },
            "default": {
              "description": "Error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "definitions": {
      "QueueServiceProperties": {
        "properties": {
          "properties": {
            "properties": {
              "cors": {
                "$ref": "./common.json#/definitions/CorsRules",
                "description": "Specifies CORS rules for the Queue service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Queue service."
              }
            },
            "x-ms-client-flatten": true,
            "x-ms-client-name": "QueueServiceProperties",
            "description": "The properties of a storage account’s Queue service."
          }
        },
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
          }
        ],
        "description": "The properties of a storage account’s Queue service."
      },
      "Queue": {
        "properties": {
          "properties": {
            "$ref": "#/definitions/QueueProperties"
          }
        }
      },
      "QueueProperties": {
        "properties": {
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A name-value pair that represents queue metadata."
          },
          "approximateMessageCount": {
            "type": "integer",
            "readOnly": true,
            "description": "Integer indicating an approximate number of messages in the queue. This number is not lower than the actual number of messages in the queue, but could be higher."
          }
        }
      },
      "ListQueue": {
        "properties": {
          "properties": {
            "$ref": "#/definitions/ListQueueProperties"
          }
        }
      },
      "ListQueueProperties": {
        "properties": {
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A name-value pair that represents queue metadata."
          }
        }
      },
      "ListQueueResource": {
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ListQueue"
            },
            "description": "List of queues returned.",
            "readOnly": true
          },
          "nextLink": {
            "type": "string",
            "description": "Request URL that can be used to list next page of queues",
            "readOnly": true
          }
        },
        "description": "Response schema. Contains list of queues returned"
      },
      "ErrorResponse": {
        "properties": {
          "code": {
            "type": "string",
            "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
          },
          "message": {
            "type": "string",
            "description": "A message describing the error, intended to be suitable for display in a user interface."
          }
        },
        "description": "An error response from the storage resource provider."
      }
    },
    "parameters": {
      "QueueServicesName": {
        "name": "QueueServicesName",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "The name of the Queue Service within the specified storage account. Queue Service Name must be 'default'",
        "enum": [
          "default"
        ],
        "x-ms-parameter-location": "method"
      },
      "QueueName": {
        "name": "queueName",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase aplanumeric and dash(-) characters only, it should begin and end with an alphanumeric chracter and it cannot have two consecutive dash(-) characters.",
        "maxLength": 63,
        "minLength": 3,
        "pattern": "^[a-z0-9]([a-z0-9]|(-(?!-))){1,61}[a-z0-9]$",
        "x-ms-parameter-location": "method"
      }
    }
  }