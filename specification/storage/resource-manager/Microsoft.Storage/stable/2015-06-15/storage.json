{
  "swagger": "2.0",
  "info": {
    "title": "StorageManagement",
    "description": "The Azure Storage Management API.",
    "version": "2015-06-15",
    "x-ms-code-generation-settings": {
      "name": "StorageManagementClient"
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/json"
  ],
  "produces": [
    "application/json",
    "text/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability": {
      "post": {
        "tags": [
          "StorageAccounts"
        ],
        "operationId": "StorageAccounts_CheckNameAvailability",
        "description": "Checks that the storage account name is valid and is not already in use.",
        "parameters": [
          {
            "name": "accountName",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageAccountCheckNameAvailabilityParameters"
            },
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Operation to check the storage account name availability was successful.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}": {
      "put": {
        "tags": [
          "StorageAccounts"
        ],
        "operationId": "StorageAccounts_Create",
        "description": "Asynchronously creates a new storage account with the specified parameters. If an account is already created and a subsequent create request is issued with different properties, the account properties will be updated. If an account is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "maxLength": 24,
            "minLength": 3
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageAccountCreateParameters"
            },
            "description": "The parameters to provide for the created account."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- returned when the storage account was already created from a previous request with the same properties specified in the request body.",
            "schema": {
              "$ref": "#/definitions/StorageAccount"
            }
          },
          "202": {
            "description": "Accepted -- Create or update request accepted; operation will complete asynchronously."
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "StorageAccounts"
        ],
        "operationId": "StorageAccounts_Delete",
        "description": "Deletes a storage account in Microsoft Azure.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "maxLength": 24,
            "minLength": 3
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- storage account deleted successfully."
          },
          "204": {
            "description": "NoContent -- account does not exist in the subscription."
          }
        }
      },
      "get": {
        "tags": [
          "StorageAccounts"
        ],
        "operationId": "StorageAccounts_GetProperties",
        "description": "Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  ",
            "maxLength": 24,
            "minLength": 3
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- properties retrieved successfully for the storage account.",
            "schema": {
              "$ref": "#/definitions/StorageAccount"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "StorageAccounts"
        ],
        "operationId": "StorageAccounts_Update",
        "description": "The update operation can be used to update the SKU, encryption, access tier, or tags for a storage account. It can also be used to map the account to a custom domain. Only one custom domain is supported per storage account; the replacement/change of custom domain is not supported. In order to replace an old custom domain, the old value must be cleared/unregistered before a new value can be set. The update of multiple properties is supported. This call does not change the storage keys for the account. If you want to change the storage account keys, use the regenerate keys operation. The location and name of the storage account cannot be changed after creation.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "maxLength": 24,
            "minLength": 3
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageAccountUpdateParameters"
            },
            "description": "The parameters to provide for the updated account."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- storage account properties updated successfully.",
            "schema": {
              "$ref": "#/definitions/StorageAccount"
            }
          }
        }
      }
    },
 "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts": {
      "get": {
        "tags": [
          "StorageAccounts"
        ],
        "operationId": "StorageAccounts_List",
        "description": "Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- List of storage accounts was retrieved and returned successfully.",
            "schema": {
              "$ref": "#/definitions/StorageAccountListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts": {
      "get": {
        "tags": [
          "StorageAccounts"
        ],
        "operationId": "StorageAccounts_ListByResourceGroup",
        "description": "Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- List of storage accounts in the given resource group retrieved and returned successfully.",
            "schema": {
              "$ref": "#/definitions/StorageAccountListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys": {
      "post": {
        "tags": [
          "StorageAccounts"
        ],
        "operationId": "StorageAccounts_ListKeys",
        "description": "Lists the access keys for the specified storage account.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "maxLength": 24,
            "minLength": 3
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- list of keys retrieved and returned successfully.",
            "schema": {
              "$ref": "#/definitions/StorageAccountKeys"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey": {
      "post": {
        "tags": [
          "StorageAccounts"
        ],
        "operationId": "StorageAccounts_RegenerateKey",
        "description": "Regenerates one of the access keys for the specified storage account.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
            "maxLength": 24,
            "minLength": 3
          },
          {
            "name": "regenerateKey",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageAccountRegenerateKeyParameters"
            },
            "description": "Specifies name of the key which should be regenerated -- key1 or key2."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- specified key regenerated successfully.",
            "schema": {
              "$ref": "#/definitions/StorageAccountKeys"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/usages": {
      "get": {
        "tags": [
          "Usage"
        ],
        "operationId": "Usage_List",
        "description": "Lists the current usage count and the limit for the resources under the subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- current usage count and limit retrieved and returned successfully.",
            "schema": {
              "$ref": "#/definitions/UsageListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    }
  },
  "definitions": {
    "StorageAccountCheckNameAvailabilityParameters": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "Microsoft.Storage/storageAccounts"
        }
      },
      "required": [
        "name"
      ],
      "description": "The parameters used to check the availability of the storage account name."
    },
    "CheckNameAvailabilityResult": {
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used."
        },
        "reason": {
          "type": "string",
          "description": "The reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.",
          "enum": [
            "AccountNameInvalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "Reason",
            "modelAsString": false
          }
        },
        "message": {
          "type": "string",
          "description": "The error message explaining the Reason value in more detail."
        }
      },
      "description": "The CheckNameAvailability operation response."
    },
    "StorageAccountPropertiesCreateParameters": {
      "properties": {
        "accountType": {
          "type": "string",
          "description": "The sku name. Required for account creation; optional for update. Note that in older versions, sku name was called accountType.",
          "enum": [
            "Standard_LRS",
            "Standard_ZRS",
            "Standard_GRS",
            "Standard_RAGRS",
            "Premium_LRS"
          ],
          "x-ms-enum": {
            "name": "AccountType",
            "modelAsString": false
          }
        }
      },
      "required": [
        "accountType"
      ],
      "description": "The parameters used to create the storage account."
    },
    "StorageAccountCreateParameters": {
      "properties": {
        "location": {
          "type": "string",
          "description": "The location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/StorageAccountPropertiesCreateParameters"
        }
      },
      "required": [
        "location"
      ],
      "x-ms-azure-resource": true,
      "description": "The parameters to provide for the account."
    },
    "Endpoints": {
      "properties": {
        "blob": {
          "type": "string",
          "description": "The blob endpoint."
        },
        "queue": {
          "type": "string",
          "description": "The queue endpoint."
        },
        "table": {
          "type": "string",
          "description": "The table endpoint."
        },
        "file": {
          "type": "string",
          "description": "The file endpoint."
        }
      },
      "description": "The URIs that are used to perform a retrieval of a public blob, queue or table object."
    },
    "CustomDomain": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The custom domain name. Name is the CNAME source."
        },
        "useSubDomainName": {
          "type": "boolean",
          "description": "Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates"
        }
      },
      "required": [
        "name"
      ],
      "description": "The custom domain assigned to this storage account. This can be set via Update."
    },
    "StorageAccountProperties": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The status of the storage account at the time the operation was called.",
          "enum": [
            "Creating",
            "ResolvingDNS",
            "Succeeded"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": false
          }
        },
        "accountType": {
          "type": "string",
          "description": "The type of the storage account.",
          "enum": [
            "Standard_LRS",
            "Standard_ZRS",
            "Standard_GRS",
            "Standard_RAGRS",
            "Premium_LRS"
          ],
          "x-ms-enum": {
            "name": "AccountType",
            "modelAsString": false
          }
        },
        "primaryEndpoints": {
          "$ref": "#/definitions/Endpoints",
          "description": "The URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint."
        },
        "primaryLocation": {
          "type": "string",
          "description": "The location of the primary data center for the storage account."
        },
        "statusOfPrimary": {
          "type": "string",
          "description": "The status indicating whether the primary location of the storage account is available or unavailable.",
          "enum": [
            "Available",
            "Unavailable"
          ],
          "x-ms-enum": {
            "name": "AccountStatus",
            "modelAsString": false
          }
        },
        "lastGeoFailoverTime": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS."
        },
        "secondaryLocation": {
          "type": "string",
          "description": "The location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS."
        },
        "statusOfSecondary": {
          "type": "string",
          "description": "The status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.",
          "enum": [
            "Available",
            "Unavailable"
          ],
          "x-ms-enum": {
            "name": "AccountStatus",
            "modelAsString": false
          }
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date and time of the storage account in UTC."
        },
        "customDomain": {
          "$ref": "#/definitions/CustomDomain",
          "description": "The custom domain the user assigned to this storage account."
        },
        "secondaryEndpoints": {
          "$ref": "#/definitions/Endpoints",
          "description": "The URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS."
        }
      },
      "description": "Properties of the storage account."
    },
    "StorageAccount": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/StorageAccountProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "The storage account."
    },
    "StorageAccountKeys": {
      "properties": {
        "key1": {
          "type": "string",
          "description": "The value of key 1."
        },
        "key2": {
          "type": "string",
          "description": "The value of key 2."
        }
      },
      "description": "The access keys for the storage account."
    },
    "StorageAccountListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccount"
          },
          "description": "The list of storage accounts and their properties."
        }
      },
      "description": "The list storage accounts operation response."
    },
    "StorageAccountPropertiesUpdateParameters": {
      "properties": {
        "accountType": {
          "type": "string",
          "description": "The account type. Note that StandardZRS and PremiumLRS accounts cannot be changed to other account types, and other account types cannot be changed to StandardZRS or PremiumLRS.",
          "enum": [
            "Standard_LRS",
            "Standard_ZRS",
            "Standard_GRS",
            "Standard_RAGRS",
            "Premium_LRS"
          ],
          "x-ms-enum": {
            "name": "AccountType",
            "modelAsString": false
          }
        },
        "customDomain": {
          "$ref": "#/definitions/CustomDomain",
          "description": "User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property."
        }
      },
      "description": "The parameters used when updating a storage account."
    },
    "StorageAccountUpdateParameters": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/StorageAccountPropertiesUpdateParameters"
        }
      },
      "x-ms-azure-resource": true,
      "description": "The parameters to update on the account."
    },
    "StorageAccountRegenerateKeyParameters": {
      "properties": {
        "keyName": {
          "type": "string"
        }
      },
      "required": [
        "keyName"
      ],
      "description": "The parameters used to regenerate the storage account key."
    },
    "UsageName": {
      "properties": {
        "value": {
          "type": "string",
          "description": "A string describing the resource name."
        },
        "localizedValue": {
          "type": "string",
          "description": "A localized string describing the resource name."
        }
      },
      "description": "The Usage Names."
    },
    "Usage": {
      "properties": {
        "unit": {
          "type": "string",
          "description": "The unit of measurement.",
          "enum": [
            "Count",
            "Bytes",
            "Seconds",
            "Percent",
            "CountsPerSecond",
            "BytesPerSecond"
          ],
          "x-ms-enum": {
            "name": "UsageUnit",
            "modelAsString": false
          }
        },
        "currentValue": {
          "type": "integer",
          "format": "int32",
          "description": "The current count of the allocated resources in the subscription."
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum count of the resources that can be allocated in the subscription."
        },
        "name": {
          "$ref": "#/definitions/UsageName",
          "description": "The name of the type of usage."
        }
      },
      "required": [
        "unit",
        "currentValue",
        "limit",
        "name"
      ],
      "description": "Describes Storage Resource Usage."
    },
    "UsageListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Usage"
          },
          "description": "The list Storage Resource Usages."
        }
      },
      "description": "The List Usages operation response."
    },
    "Resource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "x-ms-azure-resource": true,
      "description": "Describes a storage resource."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    },
    "ResourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group within the user's subscription. The name is case insensitive.",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    }
  }
}