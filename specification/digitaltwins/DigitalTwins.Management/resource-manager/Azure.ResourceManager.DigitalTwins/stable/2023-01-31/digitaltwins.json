{
  "swagger": "2.0",
  "info": {
    "title": "AzureDigitalTwinsManagementClient",
    "version": "2023-01-31",
    "description": "Azure Digital Twins Client for managing DigitalTwinsInstance",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "DigitalTwins"
    },
    {
      "name": "DigitalTwinsEndpoint"
    },
    {
      "name": "PrivateLinkResources"
    },
    {
      "name": "PrivateEndpointConnections"
    },
    {
      "name": "TimeSeriesDatabaseConnections"
    }
  ],
  "paths": {
    "/providers/Azure.ResourceManager.DigitalTwins/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Azure.ResourceManager.DigitalTwins/digitalTwinsInstances": {
      "get": {
        "operationId": "DigitalTwins_List",
        "tags": [
          "DigitalTwins"
        ],
        "description": "Get all the DigitalTwinsInstances in a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DigitalTwinsDescriptionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.DigitalTwins/digitalTwinsInstances": {
      "get": {
        "operationId": "DigitalTwins_ListByResourceGroup",
        "tags": [
          "DigitalTwins"
        ],
        "description": "Get all the DigitalTwinsInstances in a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DigitalTwinsDescriptionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.DigitalTwins/digitalTwinsInstances/{resourceName}": {
      "get": {
        "operationId": "DigitalTwins_Get",
        "tags": [
          "DigitalTwins"
        ],
        "description": "Get DigitalTwinsInstances resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the DigitalTwinsInstance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^(?!-)[A-Za-z0-9-]{3,63}(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DigitalTwinsDescription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "DigitalTwins_CreateOrUpdate",
        "tags": [
          "DigitalTwins"
        ],
        "description": "Create or update the metadata of a DigitalTwinsInstance. The usual pattern to modify a property is to retrieve the DigitalTwinsInstance and security metadata, and then combine them with the modified values in a new body to update the DigitalTwinsInstance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the DigitalTwinsInstance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^(?!-)[A-Za-z0-9-]{3,63}(?<!-)$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DigitalTwinsDescription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DigitalTwinsDescription' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DigitalTwinsDescription"
            }
          },
          "201": {
            "description": "Resource 'DigitalTwinsDescription' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DigitalTwinsDescription"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "DigitalTwins_Update",
        "tags": [
          "DigitalTwins"
        ],
        "description": "Update metadata of DigitalTwinsInstance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the DigitalTwinsInstance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^(?!-)[A-Za-z0-9-]{3,63}(?<!-)$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DigitalTwinsPatchDescription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DigitalTwinsDescription"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DigitalTwins_Delete",
        "tags": [
          "DigitalTwins"
        ],
        "description": "Delete a DigitalTwinsInstance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the DigitalTwinsInstance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^(?!-)[A-Za-z0-9-]{3,63}(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.DigitalTwins/digitalTwinsInstances/{resourceName}/endpoints": {
      "get": {
        "operationId": "DigitalTwinsEndpoint_ListByDigitalTwinsDescription",
        "tags": [
          "DigitalTwinsEndpoint"
        ],
        "description": "Get DigitalTwinsInstance Endpoints.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the DigitalTwinsInstance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^(?!-)[A-Za-z0-9-]{3,63}(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DigitalTwinsEndpointResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.DigitalTwins/digitalTwinsInstances/{resourceName}/endpoints/{endpointName}": {
      "get": {
        "operationId": "DigitalTwinsEndpoint_Get",
        "tags": [
          "DigitalTwinsEndpoint"
        ],
        "description": "Get DigitalTwinsInstances Endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the DigitalTwinsInstance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^(?!-)[A-Za-z0-9-]{3,63}(?<!-)$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of Endpoint Resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 49,
            "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DigitalTwinsEndpointResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "DigitalTwinsEndpoint_CreateOrUpdate",
        "tags": [
          "DigitalTwinsEndpoint"
        ],
        "description": "Create or update DigitalTwinsInstance endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the DigitalTwinsInstance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^(?!-)[A-Za-z0-9-]{3,63}(?<!-)$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of Endpoint Resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 49,
            "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DigitalTwinsEndpointResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DigitalTwinsEndpointResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DigitalTwinsEndpointResource"
            }
          },
          "201": {
            "description": "Resource 'DigitalTwinsEndpointResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DigitalTwinsEndpointResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DigitalTwinsEndpoint_Delete",
        "tags": [
          "DigitalTwinsEndpoint"
        ],
        "description": "Delete a DigitalTwinsInstance endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the DigitalTwinsInstance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^(?!-)[A-Za-z0-9-]{3,63}(?<!-)$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of Endpoint Resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 49,
            "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.DigitalTwins/digitalTwinsInstances/{resourceName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_ListByDigitalTwinsDescription",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "List private endpoint connection properties.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the DigitalTwinsInstance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^(?!-)[A-Za-z0-9-]{3,63}(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.DigitalTwins/digitalTwinsInstances/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_Get",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Get private endpoint connection properties for the given private endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the DigitalTwinsInstance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^(?!-)[A-Za-z0-9-]{3,63}(?<!-)$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Update the status of a private endpoint connection with the given name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the DigitalTwinsInstance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^(?!-)[A-Za-z0-9-]{3,63}(?<!-)$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnection' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "201": {
            "description": "Resource 'PrivateEndpointConnection' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_Delete",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Delete private endpoint connection with the specified name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the DigitalTwinsInstance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^(?!-)[A-Za-z0-9-]{3,63}(?<!-)$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.DigitalTwins/digitalTwinsInstances/{resourceName}/privateLinkResources": {
      "get": {
        "operationId": "PrivateLinkResources_ListByDigitalTwinsDescription",
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "List private link resources for given Digital Twin.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the DigitalTwinsInstance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^(?!-)[A-Za-z0-9-]{3,63}(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GroupIdInformationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.DigitalTwins/digitalTwinsInstances/{resourceName}/privateLinkResources/{resourceId}": {
      "get": {
        "operationId": "PrivateLinkResources_Get",
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Get the specified private link resource for the given Digital Twin.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the DigitalTwinsInstance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^(?!-)[A-Za-z0-9-]{3,63}(?<!-)$"
          },
          {
            "name": "resourceId",
            "in": "path",
            "description": "The name of the private link resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GroupIdInformation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.DigitalTwins/digitalTwinsInstances/{resourceName}/timeSeriesDatabaseConnections": {
      "get": {
        "operationId": "TimeSeriesDatabaseConnections_ListByDigitalTwinsDescription",
        "tags": [
          "TimeSeriesDatabaseConnections"
        ],
        "description": "Get all existing time series database connections for this DigitalTwins instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the DigitalTwinsInstance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^(?!-)[A-Za-z0-9-]{3,63}(?<!-)$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TimeSeriesDatabaseConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.DigitalTwins/digitalTwinsInstances/{resourceName}/timeSeriesDatabaseConnections/{timeSeriesDatabaseConnectionName}": {
      "get": {
        "operationId": "TimeSeriesDatabaseConnections_Get",
        "tags": [
          "TimeSeriesDatabaseConnections"
        ],
        "description": "Get the description of an existing time series database connection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the DigitalTwinsInstance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^(?!-)[A-Za-z0-9-]{3,63}(?<!-)$"
          },
          {
            "name": "timeSeriesDatabaseConnectionName",
            "in": "path",
            "description": "Name of time series database connection.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 49,
            "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TimeSeriesDatabaseConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "TimeSeriesDatabaseConnections_CreateOrUpdate",
        "tags": [
          "TimeSeriesDatabaseConnections"
        ],
        "description": "Create or update a time series database connection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the DigitalTwinsInstance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^(?!-)[A-Za-z0-9-]{3,63}(?<!-)$"
          },
          {
            "name": "timeSeriesDatabaseConnectionName",
            "in": "path",
            "description": "Name of time series database connection.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 49,
            "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TimeSeriesDatabaseConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'TimeSeriesDatabaseConnection' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/TimeSeriesDatabaseConnection"
            }
          },
          "201": {
            "description": "Resource 'TimeSeriesDatabaseConnection' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/TimeSeriesDatabaseConnection"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "TimeSeriesDatabaseConnections_Delete",
        "tags": [
          "TimeSeriesDatabaseConnections"
        ],
        "description": "Delete a time series database connection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cleanupConnectionArtifacts",
            "in": "query",
            "description": "Specifies whether or not to attempt to clean up artifacts that were created in order to establish a connection to the time series database. This is a best-effort attempt that will fail if appropriate permissions are not in place. Setting this to 'true' does not delete any recorded data.",
            "required": false,
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "x-ms-enum": {
              "name": "CleanupConnectionArtifacts",
              "modelAsString": true
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the DigitalTwinsInstance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^(?!-)[A-Za-z0-9-]{3,63}(?<!-)$"
          },
          {
            "name": "timeSeriesDatabaseConnectionName",
            "in": "path",
            "description": "Name of time series database connection.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 49,
            "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AuthenticationType": {
      "type": "string",
      "enum": [
        "KeyBased",
        "IdentityBased"
      ],
      "x-ms-enum": {
        "name": "AuthenticationType",
        "modelAsString": true
      }
    },
    "Azure.ResourceManager.Foundations.UserAssignedIdentity": {
      "type": "object",
      "description": "A managed identity assigned by the user.",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The active directory client identifier for this principal."
        },
        "principalId": {
          "type": "string",
          "description": "The active directory identifier for this principal."
        }
      }
    },
    "AzureDataExplorerConnectionProperties": {
      "type": "object",
      "description": "Properties of a time series database connection to Azure Data Explorer with data being sent via an EventHub.",
      "properties": {
        "adxResourceId": {
          "type": "string",
          "description": "The resource ID of the Azure Data Explorer cluster."
        },
        "adxEndpointUri": {
          "type": "string",
          "description": "The URI of the Azure Data Explorer endpoint."
        },
        "adxDatabaseName": {
          "type": "string",
          "description": "The name of the Azure Data Explorer database."
        },
        "adxTableName": {
          "type": "string",
          "description": "The name of the Azure Data Explorer table used for storing updates to properties of twins and relationships. Defaults to AdtPropertyEvents."
        },
        "adxTwinLifecycleEventsTableName": {
          "type": "string",
          "description": "The name of the Azure Data Explorer table used for recording twin lifecycle events. The table will not be created if this property is left unspecified."
        },
        "adxRelationshipLifecycleEventsTableName": {
          "type": "string",
          "description": "The name of the Azure Data Explorer table used for recording relationship lifecycle events. The table will not be created if this property is left unspecified."
        },
        "eventHubEndpointUri": {
          "type": "string",
          "description": "The URL of the EventHub namespace for identity-based authentication. It must include the protocol sb://"
        },
        "eventHubEntityPath": {
          "type": "string",
          "description": "The EventHub name in the EventHub namespace for identity-based authentication."
        },
        "eventHubNamespaceResourceId": {
          "type": "string",
          "description": "The resource ID of the EventHub namespace."
        },
        "eventHubConsumerGroup": {
          "type": "string",
          "description": "The EventHub consumer group to use when ADX reads from EventHub. Defaults to $Default."
        },
        "recordPropertyAndItemRemovals": {
          "$ref": "#/definitions/RecordPropertyAndItemRemovals",
          "description": "Specifies whether or not to record twin / relationship property and item removals, including removals of indexed or keyed values (such as map entries, array elements, etc.). This feature is de-activated unless explicitly set to 'true'. Setting this property to 'true' will generate an additional column in the property events table in ADX."
        }
      },
      "required": [
        "adxResourceId",
        "adxEndpointUri",
        "adxDatabaseName",
        "eventHubEndpointUri",
        "eventHubEntityPath",
        "eventHubNamespaceResourceId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TimeSeriesDatabaseConnectionProperties"
        }
      ],
      "x-ms-discriminator-value": "AzureDataExplorer"
    },
    "CheckNameRequest": {
      "type": "object",
      "description": "The result returned from a database check name availability request.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "type": "string",
          "description": "The type of resource, for instance Microsoft.DigitalTwins/digitalTwinsInstances.",
          "enum": [
            "Microsoft.DigitalTwins/digitalTwinsInstances"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "CheckNameResult": {
      "type": "object",
      "description": "The result returned from a check name availability request.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Specifies a Boolean value that indicates if the name is available."
        },
        "message": {
          "type": "string",
          "description": "Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated."
        },
        "reason": {
          "$ref": "#/definitions/Reason",
          "description": "Message providing the reason why the given name is invalid."
        }
      }
    },
    "CleanupConnectionArtifacts": {
      "type": "string",
      "enum": [
        "true",
        "false"
      ],
      "x-ms-enum": {
        "name": "CleanupConnectionArtifacts",
        "modelAsString": true
      }
    },
    "ConnectionProperties": {
      "type": "object",
      "description": "The properties of a private endpoint connection.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ConnectionPropertiesProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The private endpoint."
        },
        "groupIds": {
          "type": "array",
          "description": "The list of group ids for the private endpoint connection.",
          "items": {
            "type": "string"
          }
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/ConnectionState",
          "description": "The connection state."
        }
      }
    },
    "ConnectionPropertiesProvisioningState": {
      "type": "string",
      "enum": [
        "Pending",
        "Approved",
        "Rejected",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "ConnectionPropertiesProvisioningState",
        "modelAsString": true
      }
    },
    "ConnectionState": {
      "type": "object",
      "description": "The current state of a private endpoint connection.",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionStatus",
          "description": "The status of a private endpoint connection."
        },
        "description": {
          "type": "string",
          "description": "The description for the current state of a private endpoint connection."
        },
        "actionsRequired": {
          "type": "string",
          "description": "Actions required for a private endpoint connection."
        }
      },
      "required": [
        "status",
        "description"
      ]
    },
    "ConnectionType": {
      "type": "string",
      "enum": [
        "AzureDataExplorer"
      ],
      "x-ms-enum": {
        "name": "ConnectionType",
        "modelAsString": true
      }
    },
    "CreatedByType": {
      "type": "string",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "CreatedByType",
        "modelAsString": true
      }
    },
    "DigitalTwinsDescription": {
      "type": "object",
      "description": "The description of the DigitalTwins service.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DigitalTwinsProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the DigitalTwinsInstance.",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^(?!-)[A-Za-z0-9-]{3,63}(?<!-)$",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DigitalTwinsDescriptionListResult": {
      "type": "object",
      "description": "The response of a DigitalTwinsDescription list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DigitalTwinsDescription items on this page",
          "items": {
            "$ref": "#/definitions/DigitalTwinsDescription"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DigitalTwinsEndpointResource": {
      "type": "object",
      "description": "DigitalTwinsInstance endpoint resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DigitalTwinsEndpointResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of Endpoint Resource.",
          "minLength": 2,
          "maxLength": 49,
          "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DigitalTwinsEndpointResourceListResult": {
      "type": "object",
      "description": "The response of a DigitalTwinsEndpointResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DigitalTwinsEndpointResource items on this page",
          "items": {
            "$ref": "#/definitions/DigitalTwinsEndpointResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DigitalTwinsEndpointResourceProperties": {
      "type": "object",
      "description": "Properties related to Digital Twins Endpoint",
      "properties": {
        "endpointType": {
          "type": "string",
          "description": "Discriminator property for DigitalTwinsEndpointResourceProperties."
        },
        "provisioningState": {
          "$ref": "#/definitions/EndpointProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the Endpoint was added to DigitalTwinsInstance.",
          "readOnly": true
        },
        "authenticationType": {
          "$ref": "#/definitions/AuthenticationType",
          "description": "Specifies the authentication type being used for connecting to the endpoint. Defaults to 'KeyBased'. If 'KeyBased' is selected, a connection string must be specified (at least the primary connection string). If 'IdentityBased' is select, the endpointUri and entityPath properties must be specified."
        },
        "deadLetterSecret": {
          "type": "string",
          "description": "Dead letter storage secret for key-based authentication. Will be obfuscated during read."
        },
        "deadLetterUri": {
          "type": "string",
          "description": "Dead letter storage URL for identity-based authentication."
        },
        "identity": {
          "$ref": "#/definitions/ManagedIdentityReference",
          "description": "Managed identity properties for the endpoint."
        }
      },
      "discriminator": "endpointType",
      "required": [
        "endpointType"
      ]
    },
    "DigitalTwinsIdentity": {
      "type": "object",
      "description": "The managed identity for the DigitalTwinsInstance.",
      "properties": {
        "type": {
          "$ref": "#/definitions/DigitalTwinsIdentityType",
          "description": "The type of Managed Identity used by the DigitalTwinsInstance."
        },
        "principalId": {
          "type": "string",
          "description": "The object id of the Managed Identity Resource. This will be sent to the RP from ARM via the x-ms-identity-principal-id header in the PUT request if the resource has a systemAssigned(implicit) identity",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant id of the Managed Identity Resource. This will be sent to the RP from ARM via the x-ms-client-tenant-id header in the PUT request if the resource has a systemAssigned(implicit) identity",
          "readOnly": true
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\n.",
          "additionalProperties": {
            "$ref": "#/definitions/Azure.ResourceManager.Foundations.UserAssignedIdentity"
          }
        }
      }
    },
    "DigitalTwinsIdentityType": {
      "type": "string",
      "enum": [
        "None",
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned,UserAssigned"
      ],
      "x-ms-enum": {
        "name": "DigitalTwinsIdentityType",
        "modelAsString": true
      }
    },
    "DigitalTwinsPatchDescription": {
      "type": "object",
      "description": "The description of the DigitalTwins service.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Instance patch properties",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "$ref": "#/definitions/DigitalTwinsIdentity",
          "description": "The managed identity for the DigitalTwinsInstance."
        },
        "properties": {
          "$ref": "#/definitions/DigitalTwinsPatchProperties",
          "description": "Properties for the DigitalTwinsInstance."
        }
      }
    },
    "DigitalTwinsPatchProperties": {
      "type": "object",
      "description": "The properties of a DigitalTwinsInstance.",
      "properties": {
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Public network access for the DigitalTwinsInstance."
        }
      }
    },
    "DigitalTwinsProperties": {
      "type": "object",
      "description": "The properties of a DigitalTwinsInstance.",
      "properties": {
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time when DigitalTwinsInstance was created.",
          "readOnly": true
        },
        "lastUpdatedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time when DigitalTwinsInstance was updated.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "hostName": {
          "type": "string",
          "description": "Api endpoint to work with DigitalTwinsInstance.",
          "readOnly": true
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "The private endpoint connections.",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Public network access for the DigitalTwinsInstance."
        }
      }
    },
    "DigitalTwinsResource": {
      "type": "object",
      "description": "The common properties of a DigitalTwinsInstance.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "pattern": "^(?!-)[A-Za-z0-9-]{3,63}(?<!-)$",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The resource location.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "The resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "$ref": "#/definitions/DigitalTwinsIdentity",
          "description": "The managed identity for the DigitalTwinsInstance."
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the DigitalTwinsInstance.",
          "readOnly": true
        }
      },
      "required": [
        "location"
      ]
    },
    "EndpointProvisioningState": {
      "type": "string",
      "enum": [
        "Provisioning",
        "Deleting",
        "Updating",
        "Succeeded",
        "Failed",
        "Canceled",
        "Deleted",
        "Warning",
        "Suspending",
        "Restoring",
        "Moving",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "EndpointProvisioningState",
        "modelAsString": true
      }
    },
    "EndpointType": {
      "type": "string",
      "enum": [
        "EventHub",
        "EventGrid",
        "ServiceBus"
      ],
      "x-ms-enum": {
        "name": "EndpointType",
        "modelAsString": true
      }
    },
    "ErrorDefinition": {
      "type": "object",
      "description": "Error definition.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Service specific error code which serves as the substatus for the HTTP error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Description of the error.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "Internal error details.",
          "items": {
            "$ref": "#/definitions/ErrorDefinition"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "EventGrid": {
      "type": "object",
      "description": "Properties related to EventGrid.",
      "properties": {
        "TopicEndpoint": {
          "type": "string",
          "description": "EventGrid Topic Endpoint.",
          "x-ms-client-name": "topicEndpoint"
        },
        "accessKey1": {
          "type": "string",
          "description": "EventGrid secondary accesskey. Will be obfuscated during read."
        },
        "accessKey2": {
          "type": "string",
          "description": "EventGrid secondary accesskey. Will be obfuscated during read."
        }
      },
      "required": [
        "TopicEndpoint",
        "accessKey1"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DigitalTwinsEndpointResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "EventGrid"
    },
    "EventHub": {
      "type": "object",
      "description": "Properties related to EventHub.",
      "properties": {
        "connectionStringPrimaryKey": {
          "type": "string",
          "description": "PrimaryConnectionString of the endpoint for key-based authentication. Will be obfuscated during read."
        },
        "connectionStringSecondaryKey": {
          "type": "string",
          "description": "SecondaryConnectionString of the endpoint for key-based authentication. Will be obfuscated during read."
        },
        "endpointUri": {
          "type": "string",
          "description": "The URL of the EventHub namespace for identity-based authentication. It must include the protocol 'sb://'."
        },
        "entityPath": {
          "type": "string",
          "description": "The EventHub name in the EventHub namespace for identity-based authentication."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DigitalTwinsEndpointResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "EventHub"
    },
    "ExternalResource": {
      "type": "object",
      "description": "Definition of a resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Extension resource name.",
          "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        }
      }
    },
    "GroupIdInformation": {
      "type": "object",
      "description": "The group information for creating a private endpoint on Digital Twin.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GroupIdInformationProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the private link resource.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "GroupIdInformationListResult": {
      "type": "object",
      "description": "The response of a GroupIdInformation list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The GroupIdInformation items on this page",
          "items": {
            "$ref": "#/definitions/GroupIdInformation"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "GroupIdInformationProperties": {
      "type": "object",
      "description": "The properties for a group information object.",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The group id."
        },
        "requiredMembers": {
          "type": "array",
          "description": "The required members for a specific group id.",
          "items": {
            "type": "string"
          }
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "The required DNS zones for a specific group id.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IdentityType": {
      "type": "string",
      "enum": [
        "SystemAssigned",
        "UserAssigned"
      ],
      "x-ms-enum": {
        "name": "IdentityType",
        "modelAsString": true
      }
    },
    "ManagedIdentityReference": {
      "type": "object",
      "description": "The properties of the Managed Identity.",
      "properties": {
        "type": {
          "$ref": "#/definitions/IdentityType",
          "description": "The type of managed identity used."
        },
        "userAssignedIdentity": {
          "type": "string",
          "description": "The user identity ARM resource id if the managed identity type is 'UserAssigned'."
        }
      }
    },
    "PrivateEndpoint": {
      "type": "object",
      "description": "The private endpoint property of a private endpoint connection.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        }
      }
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "description": "The private endpoint connection of a Digital Twin.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConnectionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the private endpoint connection.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "The response of a PrivateEndpointConnection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateEndpointConnection items on this page",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateLinkServiceConnectionStatus": {
      "type": "string",
      "enum": [
        "Pending",
        "Approved",
        "Rejected",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "PrivateLinkServiceConnectionStatus",
        "modelAsString": true
      }
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "Provisioning",
        "Deleting",
        "Updating",
        "Succeeded",
        "Failed",
        "Canceled",
        "Deleted",
        "Warning",
        "Suspending",
        "Restoring",
        "Moving"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "PublicNetworkAccess": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true
      }
    },
    "Reason": {
      "type": "string",
      "enum": [
        "Invalid",
        "AlreadyExists"
      ],
      "x-ms-enum": {
        "name": "Reason",
        "modelAsString": true
      }
    },
    "RecordPropertyAndItemRemovals": {
      "type": "string",
      "enum": [
        "true",
        "false"
      ],
      "x-ms-enum": {
        "name": "RecordPropertyAndItemRemovals",
        "modelAsString": true
      }
    },
    "ServiceBus": {
      "type": "object",
      "description": "Properties related to ServiceBus.",
      "properties": {
        "primaryConnectionString": {
          "type": "string",
          "description": "PrimaryConnectionString of the endpoint for key-based authentication. Will be obfuscated during read."
        },
        "secondaryConnectionString": {
          "type": "string",
          "description": "SecondaryConnectionString of the endpoint for key-based authentication. Will be obfuscated during read."
        },
        "endpointUri": {
          "type": "string",
          "description": "The URL of the ServiceBus namespace for identity-based authentication. It must include the protocol 'sb://'."
        },
        "entityPath": {
          "type": "string",
          "description": "The ServiceBus Topic name for identity-based authentication."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DigitalTwinsEndpointResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "ServiceBus"
    },
    "TimeSeriesDatabaseConnection": {
      "type": "object",
      "description": "Describes a time series database connection resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TimeSeriesDatabaseConnectionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of time series database connection.",
          "minLength": 2,
          "maxLength": 49,
          "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TimeSeriesDatabaseConnectionListResult": {
      "type": "object",
      "description": "The response of a TimeSeriesDatabaseConnection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TimeSeriesDatabaseConnection items on this page",
          "items": {
            "$ref": "#/definitions/TimeSeriesDatabaseConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "TimeSeriesDatabaseConnectionProperties": {
      "type": "object",
      "description": "Properties of a time series database connection resource.",
      "properties": {
        "connectionType": {
          "type": "string",
          "description": "Discriminator property for TimeSeriesDatabaseConnectionProperties."
        },
        "provisioningState": {
          "$ref": "#/definitions/TimeSeriesDatabaseConnectionState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "identity": {
          "$ref": "#/definitions/ManagedIdentityReference",
          "description": "Managed identity properties for the time series database connection resource."
        }
      },
      "discriminator": "connectionType",
      "required": [
        "connectionType"
      ]
    },
    "TimeSeriesDatabaseConnectionState": {
      "type": "string",
      "enum": [
        "Provisioning",
        "Deleting",
        "Updating",
        "Succeeded",
        "Failed",
        "Canceled",
        "Deleted",
        "Warning",
        "Suspending",
        "Restoring",
        "Moving",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "TimeSeriesDatabaseConnectionState",
        "modelAsString": true
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2023-01-31"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_01_31",
            "value": "2023-01-31"
          }
        ]
      }
    }
  },
  "parameters": {}
}
