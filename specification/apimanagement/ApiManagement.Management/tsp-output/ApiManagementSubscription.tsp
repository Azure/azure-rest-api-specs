import "@azure-tools/typespec-azure-core";
import "@azure-tools/typespec-azure-resource-manager";
import "@typespec/rest";
import "./models.tsp";
import "./ApiManagementService.tsp";

using TypeSpec.Rest;
using Azure.ResourceManager;
using Azure.ResourceManager.Foundations;
using TypeSpec.Http;

namespace Azure.ResourceManager.ApiManagement;
@doc("Subscription details.")
@parentResource(ApiManagementService)
model ApiManagementSubscription
  is ProxyResource<SubscriptionContractProperties> {
  @doc("Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")
  @path
  @key("subscriptionId")
  @segment("subscriptions")
  name: string;
}

@armResourceOperations
interface ApiManagementSubscriptions {
  @doc("Gets the specified Subscription entity.")
  get is ArmResourceRead<ApiManagementSubscription>;
  @doc("Gets the entity state (Etag) version of the apimanagement subscription specified by its identifier.")
  @head
  getEntityTag(
    ...ResourceInstanceParameters<
      ApiManagementSubscription,
      BaseParameters<ApiManagementSubscription>
    >,
  ): OkResponse | ErrorResponse;
  @doc("Creates or updates the subscription of specified user to the specified product.")
  createOrUpdate is ArmResourceCreateOrReplaceSync<
    ApiManagementSubscription,
    {
      ...BaseParameters<ApiManagementSubscription>;

      @doc("""
Notify change in Subscription State. 
 - If false, do not send any email notification for change of state of subscription 
 - If true, send email notification of change of state of subscription 
""")
      @query("notify")
      notify?: boolean;

      @doc("ETag of the Entity. Not required when creating an entity, but required when updating an entity.")
      @header
      `If-Match`?: string;

      @doc("Determines the type of application which send the create user request. Default is legacy publisher portal.")
      @query("appType")
      appType?: AppType;
    }
  >;
  @doc("Updates the details of a subscription specified by its identifier.")
  update is ArmResourcePatchSync<
    ApiManagementSubscription,
    SubscriptionContractProperties,
    {
      ...BaseParameters<ApiManagementSubscription>;

      @doc("""
Notify change in Subscription State. 
 - If false, do not send any email notification for change of state of subscription 
 - If true, send email notification of change of state of subscription 
""")
      @query("notify")
      notify?: boolean;

      @doc("ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.")
      @header
      `If-Match`: string;

      @doc("Determines the type of application which send the create user request. Default is legacy publisher portal.")
      @query("appType")
      appType?: AppType;
    }
  >;
  @doc("Deletes the specified subscription.")
  delete is ArmResourceDeleteSync<
    ApiManagementSubscription,
    {
      ...BaseParameters<ApiManagementSubscription>;

      @doc("ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.")
      @header
      `If-Match`: string;
    }
  >;
  @doc("Lists all subscriptions of the API Management service instance.")
  list is ArmResourceListByParent<
    ApiManagementSubscription,
    {
      ...BaseParameters<ApiManagementSubscription>;

      @doc("|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| stateComment | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| ownerId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| scope | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| user | expand |     |     |</br>")
      @query("$filter")
      $filter?: string;

      @doc("Number of records to return.")
      @minValue(1)
      @query("$top")
      $top?: int32;

      @doc("Number of records to skip.")
      @query("$skip")
      $skip?: int32;
    }
  >;
  @doc("Regenerates primary key of existing subscription of the API Management service instance.")
  regeneratePrimaryKey is ArmResourceActionNoContentSync<
    ApiManagementSubscription,
    void
  >;
  @doc("Regenerates secondary key of existing subscription of the API Management service instance.")
  regenerateSecondaryKey is ArmResourceActionNoContentSync<
    ApiManagementSubscription,
    void
  >;
  @doc("Gets the specified Subscription keys.")
  listSecrets is ArmResourceActionSync<
    ApiManagementSubscription,
    void,
    SubscriptionKeysContract
  >;
}
