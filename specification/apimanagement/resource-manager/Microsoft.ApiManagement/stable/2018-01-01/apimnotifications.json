{
  "swagger": "2.0",
  "info": {
    "title": "ApiManagementClient",
    "description": "Use these REST APIs for performing operations on who is going to receive notifications associated with your Azure API Management deployment.",
    "version": "2018-01-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications": {
      "get": {
        "tags": [
          "Notification"
        ],
        "operationId": "Notification_ListByService",
        "description": "Lists a collection of properties defined within a service instance.",
        "x-ms-examples": {
          "ApiManagementListNotification": {
            "$ref": "./examples/ApiManagementListNotifications.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A Collection of the Notification for the specified API Management service instance.",
            "schema": {
              "$ref": "#/definitions/NotificationCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}": {
      "get": {
        "tags": [
          "Notification"
        ],
        "operationId": "Notification_Get",
        "description": "Gets the details of the Notification specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetNotification": {
            "$ref": "./examples/ApiManagementGetNotification.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Notification.",
            "schema": {
              "$ref": "#/definitions/NotificationContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Notification"
        ],
        "operationId": "Notification_CreateOrUpdate",
        "description": "Updates an Notification.",
        "x-ms-examples": {
          "ApiManagementGetNotification": {
            "$ref": "./examples/ApiManagementGetNotification.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification was successfully updated.",
            "schema": {
              "$ref": "#/definitions/NotificationContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientUsers": {
      "get": {
        "tags": [
          "Notification"
        ],
        "operationId": "NotificationRecipientUser_ListByNotification",
        "description": "Gets the list of the Notification Recipient User subscribed to the notification.",
        "x-ms-examples": {
          "ApiManagementListNotificationRecipientUser": {
            "$ref": "./examples/ApiManagementListNotificationRecipientUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the Recipient User collection for the notification.",
            "schema": {
              "$ref": "#/definitions/RecipientUserCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientUsers/{uid}": {
      "head": {
        "tags": [
          "NotificationRecipientUser"
        ],
        "operationId": "NotificationRecipientUser_CheckEntityExists",
        "description": "Determine if the Notification Recipient User is subscribed to the notification.",
        "x-ms-examples": {
          "ApiManagementHeadNotificationRecipientUser": {
            "$ref": "./examples/ApiManagementHeadNotificationRecipientUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "./apimusers.json#/parameters/UserIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The User is subscribed to receive the notification."
          },
          "404": {
            "description": "Entity does not exists."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "NotificationRecipientUser"
        ],
        "operationId": "NotificationRecipientUser_CreateOrUpdate",
        "description": "Adds the API Management User to the list of Recipients for the Notification.",
        "x-ms-examples": {
          "ApiManagementCreateRecipientUser": {
            "$ref": "./examples/ApiManagementCreateRecipientUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "./apimusers.json#/parameters/UserIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Recipient User was successfully added to the notification list.",
            "schema": {
              "$ref": "#/definitions/RecipientUserContract"
            }
          },
          "200": {
            "description": "Recipient User is already part of the notification list.",
            "schema": {
              "$ref": "#/definitions/RecipientUserContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NotificationRecipientUser"
        ],
        "operationId": "NotificationRecipientUser_Delete",
        "description": "Removes the API Management user from the list of Notification.",
        "x-ms-examples": {
          "ApiManagementDeleteNotificationRecipientUser": {
            "$ref": "./examples/ApiManagementDeleteNotificationRecipientUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "./apimusers.json#/parameters/UserIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipient User was successfully removed from the notification list."
          },
          "204": {
            "description": "Recipient User was successfully removed from the notification list."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientEmails": {
      "get": {
        "tags": [
          "NotificationRecipientEmail"
        ],
        "operationId": "NotificationRecipientEmail_ListByNotification",
        "description": "Gets the list of the Notification Recipient Emails subscribed to a notification.",
        "x-ms-examples": {
          "ApiManagementListNotificationRecipientEmail": {
            "$ref": "./examples/ApiManagementListNotificationRecipientEmail.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the Recipient Email collection subscribed to the notification.",
            "schema": {
              "$ref": "#/definitions/RecipientEmailCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientEmails/{email}": {
      "head": {
        "tags": [
          "NotificationRecipientEmail"
        ],
        "operationId": "NotificationRecipientEmail_CheckEntityExists",
        "description": "Determine if Notification Recipient Email subscribed to the notification.",
        "x-ms-examples": {
          "ApiManagementHeadNotificationRecipientEmail": {
            "$ref": "./examples/ApiManagementHeadNotificationRecipientEmail.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/EmailParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The Users is subscribed to receive the notification."
          },
          "404": {
            "description": "The Users is not subscribed to receive the notification."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "NotificationRecipientEmail"
        ],
        "operationId": "NotificationRecipientEmail_CreateOrUpdate",
        "description": "Adds the Email address to the list of Recipients for the Notification.",
        "x-ms-examples": {
          "ApiManagementCreateRecipientEmail": {
            "$ref": "./examples/ApiManagementCreateRecipientEmail.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/EmailParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Recipient Email was successfully added to the notification list.",
            "schema": {
              "$ref": "#/definitions/RecipientEmailContract"
            }
          },
          "200": {
            "description": "Recipient Email is already part of the notification list.",
            "schema": {
              "$ref": "#/definitions/RecipientEmailContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NotificationRecipientEmail"
        ],
        "operationId": "NotificationRecipientEmail_Delete",
        "description": "Removes the email from the list of Notification.",
        "x-ms-examples": {
          "ApiManagementDeleteNotificationRecipientEmail": {
            "$ref": "./examples/ApiManagementDeleteNotificationRecipientEmail.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "#/parameters/EmailParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipient Email was successfully removed to the notification list."
          },
          "204": {
            "description": "Recipient Email was successfully removed to the notification list."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "NotificationCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationContract"
          },
          "description": "Page values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Notification list representation."
    },
    "NotificationContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NotificationContractProperties",
          "description": "Notification entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./apimanagement.json#/definitions/Resource"
        }
      ],
      "description": "Notification details."
    },
    "NotificationContractProperties": {
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the Notification.",
          "minLength": 1,
          "maxLength": 1000
        },
        "description": {
          "type": "string",
          "description": "Description of the Notification."
        },
        "recipients": {
          "$ref": "#/definitions/RecipientsContractProperties",
          "description": "Recipient Parameter values."
        }
      },
      "required": [
        "title"
      ],
      "description": "Notification Contract properties."
    },
    "RecipientsContractProperties": {
      "properties": {
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Emails subscribed for the notification."
        },
        "users": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Users subscribed for the notification."
        }
      },
      "description": "Notification Parameter contract."
    },
    "RecipientUserCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecipientUserContract"
          },
          "description": "Page values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Recipient User list representation."
    },
    "RecipientUserContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RecipientUsersContractProperties",
          "description": "Recipient User entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./apimanagement.json#/definitions/Resource"
        }
      ],
      "description": "Recipient User details."
    },
    "RecipientUsersContractProperties": {
      "properties": {
        "userId": {
          "type": "string",
          "description": "API Management UserId subscribed to notification."
        }
      },
      "description": "Recipient User Contract Properties."
    },
    "RecipientEmailCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecipientEmailContract"
          },
          "description": "Page values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Recipient User list representation."
    },
    "RecipientEmailContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RecipientEmailContractProperties",
          "description": "Recipient Email contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./apimanagement.json#/definitions/Resource"
        }
      ],
      "description": "Recipient Email details."
    },
    "RecipientEmailContractProperties": {
      "properties": {
        "email": {
          "type": "string",
          "description": "User Email subscribed to notification."
        }
      },
      "description": "Recipient Email Contract Properties."
    }
  },
  "parameters": {
    "NotificationNameParameter": {
      "name": "notificationName",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "RequestPublisherNotificationMessage",
        "PurchasePublisherNotificationMessage",
        "NewApplicationNotificationMessage",
        "BCC",
        "NewIssuePublisherNotificationMessage",
        "AccountClosedPublisher",
        "QuotaLimitApproachingPublisherNotificationMessage"
      ],
      "x-ms-enum": {
        "name": "NotificationName",
        "modelAsString": true,
        "values": [
          {
            "value": "RequestPublisherNotificationMessage",
            "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
          },
          {
            "value": "PurchasePublisherNotificationMessage",
            "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
          },
          {
            "value": "NewApplicationNotificationMessage",
            "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
          },
          {
            "value": "BCC",
            "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
          },
          {
            "value": "NewIssuePublisherNotificationMessage",
            "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
          },
          {
            "value": "AccountClosedPublisher",
            "description": "The following email recipients and users will receive email notifications when developer closes his account."
          },
          {
            "value": "QuotaLimitApproachingPublisherNotificationMessage",
            "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
          }
        ]
      },
      "description": "Notification Name Identifier.",
      "x-ms-parameter-location": "method"
    },
    "EmailParameter": {
      "name": "email",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Email identifier.",
      "x-ms-parameter-location": "method"
    }
  }
}
