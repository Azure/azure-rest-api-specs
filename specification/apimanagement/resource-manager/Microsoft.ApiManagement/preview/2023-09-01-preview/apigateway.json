{
  "swagger": "2.0",
  "info": {
    "title": "ApiManagementClient",
    "description": "Use these REST APIs to manage Azure API Management gateway deployments.",
    "version": "2023-09-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/gateways/{gatewayName}/skus": {
      "get": {
        "tags": [
          "ApiManagementGatewaySkus"
        ],
        "summary": "Gets available SKUs for API Management gateway",
        "description": "Gets all available SKU for a given API Management gateway",
        "operationId": "ApiManagementGatewaySkus_ListAvailableGatewaySkus",
        "x-ms-examples": {
          "ApiManagementListSKUs-CloudNative": {
            "$ref": "./examples/ApiManagementListSKUs-CloudNative.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of SKUs.",
            "schema": {
              "$ref": "#/definitions/GatewaySkuResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/gateways/{gatewayName}": {
      "put": {
        "tags": [
          "ApiManagementGateway"
        ],
        "operationId": "ApiManagementGateway_CreateOrUpdate",
        "description": "Creates or updates an API Management gateway. This is long running operation and could take several minutes to complete.",
        "x-ms-examples": {
          "ApiManagementCreateGateway": {
            "$ref": "./examples/ApiManagementCreateGateway.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayResource"
            },
            "description": "Parameters supplied to the CreateOrUpdate API Management gateway operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The gateway was successfully set up.",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "ApiManagementService"
        ],
        "operationId": "ApiManagementService_Update",
        "description": "Updates an existing API Management service.",
        "x-ms-examples": {
          "ApiManagementUpdateServiceDisableTls10": {
            "$ref": "./examples/ApiManagementUpdateServiceDisableTls10.json"
          },
          "ApiManagementUpdateServicePublisherDetails": {
            "$ref": "./examples/ApiManagementUpdateServicePublisherDetails.json"
          },
          "ApiManagementUpdateServiceToNewVnetAndAvailabilityZones": {
            "$ref": "./examples/ApiManagementUpdateServiceToNewVnetAndAZs.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceUpdateParameters"
            },
            "description": "Parameters supplied to the CreateOrUpdate API Management service operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The service was successfully updated.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            }
          },
          "202": {
            "description": "The service update request was Accepted.",
            "headers": {
              "location": {
                "description": "Location header",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "ApiManagementService"
        ],
        "operationId": "ApiManagementService_Get",
        "description": "Gets an API Management service resource description.",
        "x-ms-examples": {
          "ApiManagementServiceGetService": {
            "$ref": "./examples/ApiManagementServiceGetService.json"
          },
          "ApiManagementServiceGetServiceHavingMsi": {
            "$ref": "./examples/ApiManagementServiceGetServiceHavingMsi.json"
          },
          "ApiManagementServiceGetMultiRegionInternalVnet": {
            "$ref": "./examples/ApiManagementServiceGetMultiRegionInternalVnet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully got the API Management Service Resource.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiManagementService"
        ],
        "operationId": "ApiManagementService_Delete",
        "description": "Deletes an existing API Management service.",
        "x-ms-examples": {
          "ApiManagementServiceDeleteService": {
            "$ref": "./examples/ApiManagementServiceDeleteService.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Service was successfully deleted."
          },
          "202": {
            "description": "The service delete request was Accepted.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            },
            "headers": {
              "location": {
                "description": "Location header",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The service does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service": {
      "get": {
        "tags": [
          "ApiManagementGateway"
        ],
        "operationId": "ApiManagementGateway_ListByResourceGroup",
        "description": "List all API Management gateways within a resource group.",
        "x-ms-examples": {
          "ApiManagementListGatewaysBySubscriptionAndResourceGroup": {
            "$ref": "./examples/ApiManagementListGatewaysBySubscriptionAndResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The API Management gateways list.",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/gateways": {
      "get": {
        "tags": [
          "ApiManagementGateway"
        ],
        "operationId": "ApiManagementGateway_List",
        "description": "Lists all API Management gateways within an Azure subscription.",
        "x-ms-examples": {
          "ApiManagementListGatewayBySubscription": {
            "$ref": "./examples/ApiManagementListGatewayBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The API Management gateway list.",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "GatewaySkuResults": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GatewaySkuResult"
          },
          "x-ms-identifiers": [
            "resourceType",
            "sku/name"
          ],
          "description": "The list of skus available for the gateway."
        },
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of API Management gateway Skus."
        }
      },
      "required": [
        "value"
      ],
      "description": "The API Management gateway SKUs operation response."
    },
    "GatewaySkuResult": {
      "type": "object",
      "properties": {
        "resourceType": {
          "readOnly": true,
          "type": "string",
          "description": "The type of resource the SKU applies to."
        },
        "sku": {
          "$ref": "#/definitions/GatewaySku",
          "readOnly": true,
          "description": "Specifies API Management SKU."
        },
        "capacity": {
          "$ref": "#/definitions/GatewaySkuCapacity",
          "readOnly": true,
          "description": "Specifies the number of API Management units."
        }
      },
      "description": "Describes an available API Management gateway SKU."
    },
    "GatewaySkuCapacity": {
      "type": "object",
      "properties": {
        "minimum": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "The minimum capacity."
        },
        "maximum": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "The maximum capacity that can be set."
        },
        "default": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "The default capacity."
        },
        "scaleType": {
          "type": "string",
          "readOnly": true,
          "description": "The scale type applicable to the sku.",
          "enum": [
            "automatic",
            "manual",
            "none"
          ],
          "x-ms-enum": {
            "name": "GatewaySkuCapacityScaleType",
            "modelAsString": true,
            "values": [
              {
                "value": "automatic",
                "description": "Supported scale type automatic."
              },
              {
                "value": "manual",
                "description": "Supported scale type manual."
              },
              {
                "value": "none",
                "description": "Scaling not supported."
              }
            ]
          }
        }
      },
      "description": "Describes scaling information of a SKU."
    },
    "GatewaySku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Sku.",
          "externalDocs": {
            "url": "https://azure.microsoft.com/en-us/pricing/details/api-management/"
          },
          "enum": [
            "CloudNativeBasic"
          ],
          "x-ms-enum": {
            "name": "SkuType",
            "modelAsString": true,
            "values": [
              {
                "value": "CloudNativeBasic",
                "description": "Basic SKU of a cloud-native Api gateway."
              }
            ]
          }
        }
      },
      "description": "Describes an available API Management SKU."
    },
    "ConfigurationApi": {
      "type": "object",
      "properties": {
        "hostname": {
          "readOnly": true,
          "type": "string",
          "description": "Hostname to which the agent connects to propogate configuration to the cloud."
        }
      },
      "description": "Information regarding the Configuration API of the API Management gateway. This is only applicable for cloud-native API gateway."
    },
    "FrontendConfiguration": {
      "type": "object",
      "properties": {
        "defaultHostname": {
          "readOnly": true,
          "type": "string",
          "description": "The default hostname of the data-plane gateway to which requests can be sent."
        }
      },
      "description": "Information regarding how the gateway should be exposed."
    },
    "BackendConfiguration": {
      "type": "object",
      "properties": {
        "subnet": {
          "$ref": "#/definitions/BackendSubnetConfiguration",
          "description": "The default hostname of the data-plane gateway to which requests can be sent."
        }
      },
      "description": "Information regarding how the gateway should integrate with backend systems."
    },
    "BackendSubnetConfiguration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM ID of the subnet in which the backend systems are hosted."
        }
      },
      "description": "Information regarding how the subnet to which the gateway should be injected."
    },
    "ApiManagementGatewayProperties": {
      "type": "object",
      "properties": {
        "publisherEmail": {
          "type": "string",
          "description": "Publisher email.",
          "maxLength": 100
        },
        "publisherName": {
          "type": "string",
          "description": "Publisher name.",
          "maxLength": 100
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApiManagementGatewayBaseProperties"
        }
      ],
      "required": [
      ],
      "description": "Properties of an API Management gateway resource description."
    },
    "ApiManagementGatewayUpdateProperties": {
      "type": "object",
      "properties": {
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApiManagementGatewayBaseProperties"
        }
      ],
      "description": "Properties of an API Management gateway resource description."
    },
    "ApiManagementGatewayBaseProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The current provisioning state of the API Management gateway which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.",
          "readOnly": true
        },
        "targetProvisioningState": {
          "type": "string",
          "description": "The provisioning state of the API Management service, which is targeted by the long running operation started on the service.",
          "readOnly": true
        },
        "createdAtUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Creation UTC date of the API Management service.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.",
          "readOnly": true
        },
        "frontend": {
          "$ref": "#/definitions/FrontendConfiguration",
          "description": "Information regarding how the gateway should be exposed."
        },
        "backend": {
          "$ref": "#/definitions/BackendConfiguration",
          "description": "Information regarding how the gateway should integrate with backend systems."
        },
        "configurationApi": {
          "$ref": "#/definitions/ConfigurationApi",
          "description": "Information regarding the Configuration API of the API Management gateway. This is only applicable for cloud-native API gateway."
        }
      },
      "description": "Base Properties of an API Management gateway resource description."
    },
    "ApiVersionConstraint": {
      "type": "object",
      "properties": {
        "minApiVersion": {
          "type": "string",
          "description": "Limit control plane API calls to API Management service with version equal to or newer than this value.",
          "example": "2019-01-01"
        }
      },
      "description": "Control Plane Apis version constraint for the API Management service."
    },
    "ApiManagementGatewaySkuProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Sku.",
          "externalDocs": {
            "url": "https://azure.microsoft.com/en-us/pricing/details/api-management/"
          },
          "enum": [
            "CloudNativeBasic"
          ],
          "x-ms-enum": {
            "name": "SkuType",
            "modelAsString": true,
            "values": [
              {
                "value": "CloudNativeBasic",
                "description": "Basic SKU of a cloud-native Api gateway."
              }
            ]
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Capacity of the SKU (number of deployed units of the SKU)"
        }
      },
      "required": [
        "name",
        "capacity"
      ],
      "description": "API Management service resource SKU properties."
    },
    "ApiManagementServiceResource": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApiManagementGatewayProperties",
          "description": "Properties of the API Management service."
        },
        "sku": {
          "$ref": "#/definitions/ApiManagementGatewaySkuProperties",
          "description": "SKU properties of the API Management service."
        },
        "identity": {
          "$ref": "#/definitions/ApiManagementServiceIdentity",
          "description": "Managed service identity of the Api Management service."
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Resource location.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "ETag of the resource.",
          "readOnly": true
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of availability zones denoting where the resource needs to come from."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApimResource"
        }
      ],
      "required": [
        "location",
        "sku",
        "properties"
      ],
      "description": "A single API Management service resource in List or Get response."
    },
    "ApimResource": {
      "type": "object",
      "description": "The Resource definition.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type for API Management resource is set to Microsoft.ApiManagement."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "x-ms-azure-resource": true
    },
    "ApiManagementServiceUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApiManagementGatewayUpdateProperties",
          "description": "Properties of the API Management service."
        },
        "sku": {
          "$ref": "#/definitions/ApiManagementGatewaySkuProperties",
          "description": "SKU properties of the API Management service."
        },
        "identity": {
          "$ref": "#/definitions/ApiManagementServiceIdentity",
          "description": "Managed service identity of the Api Management service."
        },
        "etag": {
          "type": "string",
          "description": "ETag of the resource.",
          "readOnly": true
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of availability zones denoting where the resource needs to come from."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApimResource"
        }
      ],
      "description": "Parameter supplied to Update Api Management Service."
    },
    "ApiManagementServiceIdentity": {
      "type": "object",
      "description": "Identity properties of the Api Management service resource.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
          "enum": [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "ApimIdentityType",
            "modelAsString": true
          }
        },
        "principalId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "description": "The principal id of the identity."
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "description": "The client tenant id of the identity."
        },
        "userAssignedIdentities": {
          "description": "The list of user identities associated with the resource. The user identity \r\ndictionary key references will be ARM resource ids in the form: \r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/\r\n    providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UserIdentityProperties"
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "UserIdentityProperties": {
      "type": "object",
      "properties": {
        "principalId": {
          "description": "The principal id of user assigned identity.",
          "type": "string"
        },
        "clientId": {
          "description": "The client id of user assigned identity.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "description": "REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        },
        "display": {
          "description": "The object that describes the operation.",
          "properties": {
            "provider": {
              "description": "Friendly name of the resource provider",
              "type": "string"
            },
            "operation": {
              "description": "Operation type: read, write, delete, listKeys/action, etc.",
              "type": "string"
            },
            "resource": {
              "description": "Resource type on which the operation is performed.",
              "type": "string"
            },
            "description": {
              "description": "Friendly name of the operation",
              "type": "string"
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The operation origin."
        },
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "The operation properties."
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of operations supported by the resource provider."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    }
  },
  "parameters": {}
}
