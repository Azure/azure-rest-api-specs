{
  "swagger": "2.0",
  "info": {
    "title": "ApiManagementClient",
    "description": "Use these REST APIs for performing operations on Workspace entity and its associated entities within your Azure API Management deployment.",
    "version": "2022-09-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces": {
      "get": {
        "tags": [
          "Workspace"
        ],
        "operationId": "Workspace_ListByService",
        "description": "Lists all workspaces of the API Management service instance.",
        "x-ms-examples": {
          "ApiManagementListWorkspaces": {
            "$ref": "./examples/ApiManagementListWorkspaces.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br></br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Paged Result response of workspaces.",
            "schema": {
              "$ref": "./definitions.json#/definitions/WorkspaceCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/WorkspaceContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}": {
      "head": {
        "tags": [
          "Workspace"
        ],
        "operationId": "Workspace_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the workspace specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspace": {
            "$ref": "./examples/ApiManagementHeadWorkspace.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the entity tag of the workspace",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Workspace"
        ],
        "operationId": "Workspace_Get",
        "description": "Gets the details of the workspace specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspace": {
            "$ref": "./examples/ApiManagementGetWorkspace.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified workspace entity.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/WorkspaceContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Workspace"
        ],
        "operationId": "Workspace_CreateOrUpdate",
        "description": "Creates a new workspace or updates an existing one.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspace": {
            "$ref": "./examples/ApiManagementCreateWorkspace.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/WorkspaceContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Workspace was successfully created.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/WorkspaceContract"
            }
          },
          "200": {
            "description": "Workspace successfully updated",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/WorkspaceContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Workspace"
        ],
        "operationId": "Workspace_Update",
        "description": "Updates the details of the workspace specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspace": {
            "$ref": "./examples/ApiManagementUpdateWorkspace.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/WorkspaceContract"
            },
            "description": "Workspace Update parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Workspace successfully updated",
            "schema": {
              "$ref": "./definitions.json#/definitions/WorkspaceContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Workspace"
        ],
        "operationId": "Workspace_Delete",
        "description": "Deletes the specified workspace.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspace": {
            "$ref": "./examples/ApiManagementDeleteWorkspace.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The workspace was successfully deleted."
          },
          "204": {
            "description": "The workspace was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/policies": {
      "get": {
        "tags": [
          "WorkspacePolicy"
        ],
        "operationId": "WorkspacePolicy_ListByApi",
        "description": "Get the policy configuration at the workspace level.",
        "x-ms-examples": {
          "ApiManagementListWorkspacePolicies": {
            "$ref": "./examples/ApiManagementListWorkspacePolicies.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Workspace Policy Collection.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/policies/{policyId}": {
      "head": {
        "tags": [
          "WorkspacePolicy"
        ],
        "operationId": "WorkspacePolicy_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the workspace policy specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspacePolicy": {
            "$ref": "./examples/ApiManagementHeadWorkspacePolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified workspace Policy entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "WorkspacePolicy"
        ],
        "operationId": "WorkspacePolicy_Get",
        "description": "Get the policy configuration at the API level.",
        "x-ms-examples": {
          "ApiManagementGetWorkspacePolicy": {
            "$ref": "./examples/ApiManagementGetWorkspacePolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyExportFormat"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Workspace Policy information.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkspacePolicy"
        ],
        "operationId": "WorkspacePolicy_CreateOrUpdate",
        "description": "Creates or updates policy configuration for the workspace.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspacePolicy": {
            "$ref": "./examples/ApiManagementCreateWorkspacePolicy.json"
          },
          "ApiManagementCreateWorkspacePolicyNonXmlEncoded": {
            "$ref": "./examples/ApiManagementCreateWorkspacePolicyNonXmlEncoded.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "description": "The policy contents to apply."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Workspace policy configuration was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Workspace policy configuration of the tenant was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkspacePolicy"
        ],
        "operationId": "WorkspacePolicy_Delete",
        "description": "Deletes the policy configuration at the workspace.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspacePolicy": {
            "$ref": "./examples/ApiManagementDeleteWorkspacePolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the policy configuration at the workspace level."
          },
          "204": {
            "description": "Successfully deleted the policy configuration at the workspace level."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/namedValues": {
      "get": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "WorkspaceNamedValue_ListByService",
        "description": "Lists a collection of named values defined within a workspace in a service instance.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-properties"
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceNamedValues": {
            "$ref": "./examples/ApiManagementListWorkspaceNamedValues.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| tags | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith, any, all |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "name": "isKeyVaultRefreshFailed",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "x-ms-enum": {
              "name": "KeyVaultRefreshState",
              "modelAsString": true,
              "values": [
                {
                  "value": "true",
                  "description": "Entities for which KeyVault refresh failed."
                },
                {
                  "value": "false",
                  "description": "Entities for which KeyVault refresh succeeded"
                }
              ]
            },
            "description": "Query parameter to fetch named value entities based on refresh status."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A Collection of the named value entities for the specified workspace in an API Management service instance.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/NamedValueContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/namedValues/{namedValueId}": {
      "head": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "WorkspaceNamedValue_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the named value specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceNamedValue": {
            "$ref": "./examples/ApiManagementHeadWorkspaceNamedValue.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/NamedValueIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified named value entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "WorkspaceNamedValue_Get",
        "description": "Gets the details of the named value specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceNamedValue": {
            "$ref": "./examples/ApiManagementGetWorkspaceNamedValue.json"
          },
          "ApiManagementGetWorkspaceNamedValueWithKeyVault": {
            "$ref": "./examples/ApiManagementGetWorkspaceNamedValueWithKeyVault.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/NamedValueIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified named value entity. No secrets included",
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "WorkspaceNamedValue_CreateOrUpdate",
        "description": "Creates or updates named value.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceNamedValue": {
            "$ref": "./examples/ApiManagementCreateWorkspaceNamedValue.json"
          },
          "ApiManagementCreateWorkspaceNamedValueWithKeyVault": {
            "$ref": "./examples/ApiManagementCreateWorkspaceNamedValueWithKeyVault.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/NamedValueIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueCreateContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Request to create or update named value was accepted.",
            "headers": {
              "location": {
                "description": "Location header",
                "type": "string"
              }
            }
          },
          "201": {
            "description": "Named value was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Named value was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "WorkspaceNamedValue_Update",
        "description": "Updates the specific named value.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceNamedValue": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceNamedValue.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/NamedValueIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Request to create or update named value was accepted.",
            "headers": {
              "location": {
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Named value was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "delete": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "WorkspaceNamedValue_Delete",
        "description": "Deletes specific named value from the workspace in an API Management service instance.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceNamedValue": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceNamedValue.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/NamedValueIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Named value was successfully deleted."
          },
          "204": {
            "description": "Named value was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/namedValues/{namedValueId}/listValue": {
      "post": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "WorkspaceNamedValue_ListValue",
        "description": "Gets the secret of the named value specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementWorkspaceNamedValueListValue": {
            "$ref": "./examples/ApiManagementWorkspaceNamedValueListValue.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/NamedValueIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified named value secret.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueSecretContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/namedValues/{namedValueId}/refreshSecret": {
      "post": {
        "tags": [
          "NamedValue"
        ],
        "operationId": "WorkspaceNamedValue_RefreshSecret",
        "description": "Refresh the secret of the named value specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementRefreshWorkspaceNamedValue": {
            "$ref": "./examples/ApiManagementRefreshWorkspaceNamedValue.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/NamedValueIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Request to refresh secret was accepted.",
            "headers": {
              "location": {
                "description": "Location header",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Named value was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NamedValueContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/schemas": {
      "get": {
        "tags": [
          "Schema"
        ],
        "operationId": "WorkspaceGlobalSchema_ListByService",
        "description": "Lists a collection of schemas registered with workspace in a service instance.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceSchemas": {
            "$ref": "./examples/ApiManagementListWorkspaceSchemas.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Schema entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GlobalSchemaCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/GlobalSchemaContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/schemas/{schemaId}": {
      "head": {
        "tags": [
          "Schema"
        ],
        "operationId": "WorkspaceGlobalSchema_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the Schema specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceSchema": {
            "$ref": "./examples/ApiManagementHeadWorkspaceSchema.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SchemaIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified Schema entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Schema"
        ],
        "operationId": "WorkspaceGlobalSchema_Get",
        "description": "Gets the details of the Schema specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceSchema": {
            "$ref": "./examples/ApiManagementGetWorkspaceSchema.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SchemaIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Schema entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GlobalSchemaContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Schema"
        ],
        "operationId": "WorkspaceGlobalSchema_CreateOrUpdate",
        "description": "Creates new or updates existing specified Schema of the workspace in an API Management service instance.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceSchema": {
            "$ref": "./examples/ApiManagementCreateWorkspaceSchema.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SchemaIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/GlobalSchemaContract"
            },
            "description": "Create or update parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The new Schema was successfully added.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/GlobalSchemaContract"
            }
          },
          "200": {
            "description": "The Schema details were successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/GlobalSchemaContract"
            }
          },
          "202": {
            "description": "Accepted the change when updating the service.",
            "headers": {
              "location": {
                "description": "Location header",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "delete": {
        "tags": [
          "Schema"
        ],
        "operationId": "WorkspaceGlobalSchema_Delete",
        "description": "Deletes specific Schema.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceSchema": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceSchema.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SchemaIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Schema was successfully deleted."
          },
          "204": {
            "description": "The Schema was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications": {
      "get": {
        "tags": [
          "Notification"
        ],
        "operationId": "WorkspaceNotification_ListByService",
        "description": "Lists a collection of properties defined within a service instance.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceNotifications": {
            "$ref": "./examples/ApiManagementListWorkspaceNotifications.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A Collection of the Notification for the specified workspace in a API Management service instance.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NotificationCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}": {
      "get": {
        "tags": [
          "Notification"
        ],
        "operationId": "WorkspaceNotification_Get",
        "description": "Gets the details of the Notification specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceNotification": {
            "$ref": "./examples/ApiManagementGetWorkspaceNotification.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Notification.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NotificationContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Notification"
        ],
        "operationId": "WorkspaceNotification_CreateOrUpdate",
        "description": "Create or Update API Management publisher notification for the workspace.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceNotification": {
            "$ref": "./examples/ApiManagementCreateWorkspaceNotification.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NotificationContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientUsers": {
      "get": {
        "tags": [
          "NotificationRecipientUser"
        ],
        "operationId": "WorkspaceNotificationRecipientUser_ListByNotification",
        "description": "Gets the list of the Notification Recipient User subscribed to the notification.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceNotificationRecipientUsers": {
            "$ref": "./examples/ApiManagementListWorkspaceNotificationRecipientUsers.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the Recipient User collection for the notification.",
            "schema": {
              "$ref": "./definitions.json#/definitions/RecipientUserCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientUsers/{userId}": {
      "head": {
        "tags": [
          "NotificationRecipientUser"
        ],
        "operationId": "WorkspaceNotificationRecipientUser_CheckEntityExists",
        "description": "Determine if the Notification Recipient User is subscribed to the notification.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceNotificationRecipientUser": {
            "$ref": "./examples/ApiManagementHeadWorkspaceNotificationRecipientUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/UserIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The User is subscribed to receive the notification."
          },
          "404": {
            "description": "Entity does not exists."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "NotificationRecipientUser"
        ],
        "operationId": "WorkspaceNotificationRecipientUser_CreateOrUpdate",
        "description": "Adds the API Management User to the list of Recipients for the Notification.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceNotificationRecipientUser": {
            "$ref": "./examples/ApiManagementCreateWorkspaceNotificationRecipientUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/UserIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Recipient User was successfully added to the notification list.",
            "schema": {
              "$ref": "./definitions.json#/definitions/RecipientUserContract"
            }
          },
          "200": {
            "description": "Recipient User is already part of the notification list.",
            "schema": {
              "$ref": "./definitions.json#/definitions/RecipientUserContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NotificationRecipientUser"
        ],
        "operationId": "WorkspaceNotificationRecipientUser_Delete",
        "description": "Removes the API Management user from the list of Notification.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceNotificationRecipientUser": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceNotificationRecipientUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/UserIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipient User was successfully removed from the notification list."
          },
          "204": {
            "description": "Recipient User was successfully removed from the notification list."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientEmails": {
      "get": {
        "tags": [
          "NotificationRecipientEmail"
        ],
        "operationId": "WorkspaceNotificationRecipientEmail_ListByNotification",
        "description": "Gets the list of the Notification Recipient Emails subscribed to a notification.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceNotificationRecipientEmails": {
            "$ref": "./examples/ApiManagementListWorkspaceNotificationRecipientEmails.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the Recipient Email collection subscribed to the notification.",
            "schema": {
              "$ref": "./definitions.json#/definitions/RecipientEmailCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientEmails/{email}": {
      "head": {
        "tags": [
          "NotificationRecipientEmail"
        ],
        "operationId": "WorkspaceNotificationRecipientEmail_CheckEntityExists",
        "description": "Determine if Notification Recipient Email subscribed to the notification.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceNotificationRecipientEmail": {
            "$ref": "./examples/ApiManagementHeadWorkspaceNotificationRecipientEmail.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/EmailParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The Users is subscribed to receive the notification."
          },
          "404": {
            "description": "The Users is not subscribed to receive the notification."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "NotificationRecipientEmail"
        ],
        "operationId": "WorkspaceNotificationRecipientEmail_CreateOrUpdate",
        "description": "Adds the Email address to the list of Recipients for the Notification.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceNotificationRecipientEmail": {
            "$ref": "./examples/ApiManagementCreateWorkspaceNotificationRecipientEmail.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/EmailParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Recipient Email was successfully added to the notification list.",
            "schema": {
              "$ref": "./definitions.json#/definitions/RecipientEmailContract"
            }
          },
          "200": {
            "description": "Recipient Email is already part of the notification list.",
            "schema": {
              "$ref": "./definitions.json#/definitions/RecipientEmailContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NotificationRecipientEmail"
        ],
        "operationId": "WorkspaceNotificationRecipientEmail_Delete",
        "description": "Removes the email from the list of Notification.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceNotificationRecipientEmail": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceNotificationRecipientEmail.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/NotificationNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/EmailParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipient Email was successfully removed to the notification list."
          },
          "204": {
            "description": "Recipient Email was successfully removed to the notification list."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/policyFragments": {
      "get": {
        "tags": [
          "PolicyFragment"
        ],
        "operationId": "WorkspacePolicyFragment_ListByService",
        "description": "Gets all policy fragments defined within a workspace.",
        "x-ms-examples": {
          "ApiManagementListWorkspacePolicyFragments": {
            "$ref": "./examples/ApiManagementListWorkspacePolicyFragments.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter, orderBy | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| value | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "OData order by query option."
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an array of policy fragments.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyFragmentCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/policyFragments/{id}": {
      "head": {
        "tags": [
          "PolicyFragment"
        ],
        "operationId": "WorkspacePolicyFragment_GetEntityTag",
        "description": "Gets the entity state (Etag) version of a policy fragment.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspacePolicyFragment": {
            "$ref": "./examples/ApiManagementHeadWorkspacePolicyFragment.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The specified policy fragment exists and the current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "PolicyFragment"
        ],
        "operationId": "WorkspacePolicyFragment_Get",
        "description": "Gets a policy fragment.",
        "x-ms-examples": {
          "ApiManagementGetWorkspacePolicyFragment": {
            "$ref": "./examples/ApiManagementGetWorkspacePolicyFragment.json"
          },
          "ApiManagementGetWorkspacePolicyFragmentFormat": {
            "$ref": "./examples/ApiManagementGetWorkspacePolicyFragmentFormat.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyFragmentContentFormat"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned a policy fragment.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyFragmentContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PolicyFragment"
        ],
        "operationId": "WorkspacePolicyFragment_CreateOrUpdate",
        "description": "Creates or updates a policy fragment.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspacePolicyFragment": {
            "$ref": "./examples/ApiManagementCreateWorkspacePolicyFragment.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyFragmentContract"
            },
            "description": "The policy fragment contents to apply."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The policy fragment was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyFragmentContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version",
                "type": "string"
              }
            }
          },
          "201": {
            "description": "The policy fragment was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyFragmentContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "202": {
            "description": "Request to create or update the policy fragment was accepted. Location header contains the URL where the status of the long running operation can be checked.",
            "headers": {
              "location": {
                "description": "Location header",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "delete": {
        "tags": [
          "PolicyFragment"
        ],
        "operationId": "WorkspacePolicyFragment_Delete",
        "description": "Deletes a policy fragment.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspacePolicyFragment": {
            "$ref": "./examples/ApiManagementDeleteWorkspacePolicyFragment.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The policy fragment was successfully removed."
          },
          "204": {
            "description": "The policy fragment successfully removed by previous request or does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/policyFragments/{id}/listReferences": {
      "post": {
        "tags": [
          "PolicyFragment"
        ],
        "operationId": "WorkspacePolicyFragment_ListReferences",
        "description": "Lists policy resources that reference the policy fragment.",
        "x-ms-examples": {
          "ApiManagementListWorkspacePolicyFragmentReferences": {
            "$ref": "./examples/ApiManagementListWorkspacePolicyFragmentReferences.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully returned an array of references to policy resources that include the policy fragment in their definitions.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ResourceCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/groups": {
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "WorkspaceGroup_ListByService",
        "description": "Lists a collection of groups defined within a workspace in a service instance.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-create-groups"
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceGroups": {
            "$ref": "./examples/ApiManagementListWorkspaceGroups.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| externalId | filter | eq |     |</br>"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Group entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/GroupContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/groups/{groupId}": {
      "head": {
        "tags": [
          "Group"
        ],
        "operationId": "WorkspaceGroup_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the group specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceGroup": {
            "$ref": "./examples/ApiManagementHeadWorkspaceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GroupIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified group entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Group"
        ],
        "operationId": "WorkspaceGroup_Get",
        "description": "Gets the details of the group specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceGroup": {
            "$ref": "./examples/ApiManagementGetWorkspaceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GroupIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Group entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Group"
        ],
        "operationId": "WorkspaceGroup_CreateOrUpdate",
        "description": "Creates or Updates a group.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceGroup": {
            "$ref": "./examples/ApiManagementCreateWorkspaceGroup.json"
          },
          "ApiManagementCreateWorkspaceGroupExternal": {
            "$ref": "./examples/ApiManagementCreateWorkspaceGroupExternal.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GroupIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupCreateParameters"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Group was created successfully.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Group already exists.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Group"
        ],
        "operationId": "WorkspaceGroup_Update",
        "description": "Updates the details of the group specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceGroup": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GroupIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The group details were successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GroupContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Group"
        ],
        "operationId": "WorkspaceGroup_Delete",
        "description": "Deletes specific group of the workspace in an API Management service instance.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceGroup": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GroupIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The group was successfully deleted."
          },
          "204": {
            "description": "The group was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/groups/{groupId}/users": {
      "get": {
        "tags": [
          "GroupUser"
        ],
        "operationId": "WorkspaceGroupUser_List",
        "description": "Lists a collection of user entities associated with the group.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceGroupUsers": {
            "$ref": "./examples/ApiManagementListWorkspaceGroupUsers.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GroupIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| firstName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| lastName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| email | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| registrationDate | filter | ge, le, eq, ne, gt, lt |     |</br>| note | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of user entities associated with the group.",
            "schema": {
              "$ref": "./definitions.json#/definitions/UserCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/UserContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/groups/{groupId}/users/{userId}": {
      "head": {
        "tags": [
          "GroupUser"
        ],
        "operationId": "WorkspaceGroupUser_CheckEntityExists",
        "description": "Checks that user entity specified by identifier is associated with the group entity.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceGroupUser": {
            "$ref": "./examples/ApiManagementHeadWorkspaceGroupUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GroupIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/UserIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Entity exists"
          },
          "404": {
            "description": "Entity does not exists."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "GroupUser"
        ],
        "operationId": "WorkspaceGroupUser_Create",
        "description": "Add existing user to existing group",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceGroupUser": {
            "$ref": "./examples/ApiManagementCreateWorkspaceGroupUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GroupIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/UserIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The user was successfully added to the group.",
            "schema": {
              "$ref": "./definitions.json#/definitions/UserContract"
            }
          },
          "200": {
            "description": "The specified user is already a member of the specified group.",
            "schema": {
              "$ref": "./definitions.json#/definitions/UserContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GroupUser"
        ],
        "operationId": "WorkspaceGroupUser_Delete",
        "description": "Remove existing user from existing group.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceGroupUser": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceGroupUser.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GroupIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/UserIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The user was successfully removed from the group."
          },
          "204": {
            "description": "The user was successfully removed from the group."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/subscriptions": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "operationId": "WorkspaceSubscription_List",
        "description": "Lists all subscriptions of the workspace in an API Management service instance.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceSubscriptions": {
            "$ref": "./examples/ApiManagementListWorkspaceSubscriptions.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| stateComment | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| ownerId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| scope | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| user | expand |     |     |</br>"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of the Subscription entities for the specified workspace in an API Management service instance.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/SubscriptionContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/subscriptions/{sid}": {
      "head": {
        "tags": [
          "Subscription"
        ],
        "operationId": "WorkspaceSubscription_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the apimanagement subscription specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceSubscription": {
            "$ref": "./examples/ApiManagementHeadWorkspaceSubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified apimanagement subscription entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Subscription"
        ],
        "operationId": "WorkspaceSubscription_Get",
        "description": "Gets the specified Subscription entity.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceSubscription": {
            "$ref": "./examples/ApiManagementGetWorkspaceSubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Subscription entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subscription"
        ],
        "operationId": "WorkspaceSubscription_CreateOrUpdate",
        "description": "Creates or updates the subscription of specified user to the specified product.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceSubscription": {
            "$ref": "./examples/ApiManagementCreateWorkspaceSubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionCreateParameters"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/NotifySubscriptionStateChangeParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/AppTypeParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The user was successfully subscribed to the product.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionContract"
            }
          },
          "200": {
            "description": "The user already subscribed to the product.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Subscription"
        ],
        "operationId": "WorkspaceSubscription_Update",
        "description": "Updates the details of a subscription specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceSubscription": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceSubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/NotifySubscriptionStateChangeParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/AppTypeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The subscription details were successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subscription"
        ],
        "operationId": "WorkspaceSubscription_Delete",
        "description": "Deletes the specified subscription.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceSubscription": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceSubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The subscription details were successfully deleted."
          },
          "204": {
            "description": "The subscription details were successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/subscriptions/{sid}/regeneratePrimaryKey": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "operationId": "WorkspaceSubscription_RegeneratePrimaryKey",
        "description": "Regenerates primary key of existing subscription of the workspace in an API Management service instance.",
        "x-ms-examples": {
          "ApiManagementWorkspaceSubscriptionRegeneratePrimaryKey": {
            "$ref": "./examples/ApiManagementWorkspaceSubscriptionRegeneratePrimaryKey.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The primary key was successfully regenerated."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/subscriptions/{sid}/regenerateSecondaryKey": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "operationId": "WorkspaceSubscription_RegenerateSecondaryKey",
        "description": "Regenerates secondary key of existing subscription of the workspace in an API Management service instance.",
        "x-ms-examples": {
          "ApiManagementWorkspaceSubscriptionRegenerateSecondaryKey": {
            "$ref": "./examples/ApiManagementWorkspaceSubscriptionRegenerateSecondaryKey.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The secondary key was successfully regenerated."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/subscriptions/{sid}/listSecrets": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "operationId": "WorkspaceSubscription_ListSecrets",
        "description": "Gets the specified Subscription keys.",
        "x-ms-examples": {
          "ApiManagementWorkspaceSubscriptionListSecrets": {
            "$ref": "./examples/ApiManagementWorkspaceSubscriptionListSecrets.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains subscription keys.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SubscriptionKeysContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apiVersionSets": {
      "get": {
        "tags": [
          "ApiVersionSet"
        ],
        "operationId": "WorkspaceApiVersionSet_ListByService",
        "description": "Lists a collection of API Version Sets in the specified workspace with a service instance.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceApiVersionSets": {
            "$ref": "./examples/ApiManagementListWorkspaceApiVersionSets.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Api Version Set entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiVersionSetCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ApiVersionSetContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apiVersionSets/{versionSetId}": {
      "head": {
        "tags": [
          "ApiVersionSet"
        ],
        "operationId": "WorkspaceApiVersionSet_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the Api Version Set specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceApiVersionSet": {
            "$ref": "./examples/ApiManagementHeadWorkspaceApiVersionSet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionSetIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified Api Version Set entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiVersionSet"
        ],
        "operationId": "WorkspaceApiVersionSet_Get",
        "description": "Gets the details of the Api Version Set specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiVersionSet": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiVersionSet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionSetIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the specified Api Version Set entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiVersionSetContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiVersionSet"
        ],
        "operationId": "WorkspaceApiVersionSet_CreateOrUpdate",
        "description": "Creates or Updates a Api Version Set.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceApiVersionSet": {
            "$ref": "./examples/ApiManagementCreateWorkspaceApiVersionSet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionSetIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiVersionSetContract"
            },
            "description": "Create or update parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Api Version Set was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiVersionSetContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Api Version Set was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiVersionSetContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ApiVersionSet"
        ],
        "operationId": "WorkspaceApiVersionSet_Update",
        "description": "Updates the details of the Api VersionSet specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceApiVersionSet": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceApiVersionSet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionSetIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiVersionSetUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Api Version Set was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiVersionSetContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiVersionSets"
        ],
        "operationId": "WorkspaceApiVersionSet_Delete",
        "description": "Deletes specific Api Version Set.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceApiVersionSet": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceApiVersionSet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionSetIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The ApiVersion Set details were successfully deleted."
          },
          "204": {
            "description": "The ApiVersion Set details were successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis": {
      "get": {
        "tags": [
          "Api"
        ],
        "operationId": "WorkspaceApi_ListByService",
        "description": "Lists all APIs of the workspace in an API Management service instance.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-create-apis"
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceApis": {
            "$ref": "./examples/ApiManagementListWorkspaceApis.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| isCurrent | filter | eq, ne |  |</br>"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Include tags in the response."
          },
          {
            "name": "expandApiVersionSet",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Include full ApiVersionSet resource in response"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Paged Result response of Apis.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ApiContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}": {
      "head": {
        "tags": [
          "Api"
        ],
        "operationId": "WorkspaceApi_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceApi": {
            "$ref": "./examples/ApiManagementHeadWorkspaceApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified API entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Api"
        ],
        "operationId": "WorkspaceApi_Get",
        "description": "Gets the details of the API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiContract": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiContract.json"
          },
          "ApiManagementGetWorkspaceApiRevision": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiRevision.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified API entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Api"
        ],
        "operationId": "WorkspaceApi_CreateOrUpdate",
        "description": "Creates new or updates existing specified API of the workspace in an API Management service instance.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceApi": {
            "$ref": "./examples/ApiManagementCreateWorkspaceApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiCreateOrUpdateParameter"
            },
            "description": "Create or update parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "API was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "202": {
            "description": "Request to create or update API was accepted. Location header contains the URL where the status of the long running operation can be checked.",
            "headers": {
              "location": {
                "type": "string"
              }
            }
          },
          "200": {
            "description": "API was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "Api"
        ],
        "operationId": "WorkspaceApi_Update",
        "description": "Updates the specified API of the workspace in an API Management service instance.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceApi": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiUpdateContract"
            },
            "description": "API Update Contract parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "API was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Api"
        ],
        "operationId": "WorkspaceApi_Delete",
        "description": "Deletes the specified API of the workspace in an API Management service instance.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceApi": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "name": "deleteRevisions",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Delete all revisions of the Api."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The API was successfully deleted."
          },
          "204": {
            "description": "The API was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/revisions": {
      "get": {
        "tags": [
          "ApiRevision"
        ],
        "operationId": "WorkspaceApiRevision_ListByService",
        "description": "Lists all revisions of an API.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceApiRevisions": {
            "$ref": "./examples/ApiManagementListWorkspaceApiRevisions.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation returns a list of revision details.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiRevisionCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ApiRevisionContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/releases": {
      "get": {
        "tags": [
          "ApiRelease"
        ],
        "operationId": "WorkspaceApiRelease_ListByService",
        "description": "Lists all releases of an API. An API release is created when making an API Revision current. Releases are also used to rollback to previous revisions. Results will be paged and can be constrained by the $top and $skip parameters.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceApiReleases": {
            "$ref": "./examples/ApiManagementListWorkspaceApiReleases.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| notes | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation returns a list of API Releases.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiReleaseCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ApiReleaseContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/releases/{releaseId}": {
      "head": {
        "tags": [
          "ApiRelease"
        ],
        "operationId": "WorkspaceApiRelease_GetEntityTag",
        "description": "Returns the etag of an API release.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceApiRelease": {
            "$ref": "./examples/ApiManagementHeadWorkspaceApiRelease.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ReleaseIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the entity state (Etag) version of the api release as specified by its identifier.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiRelease"
        ],
        "operationId": "WorkspaceApiRelease_Get",
        "description": "Returns the details of an API release.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiRelease": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiRelease.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ReleaseIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation returns the details of an API Release.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiReleaseContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiRelease"
        ],
        "operationId": "WorkspaceApiRelease_CreateOrUpdate",
        "description": "Creates a new Release for the API.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceApiRelease": {
            "$ref": "./examples/ApiManagementCreateWorkspaceApiRelease.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ReleaseIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiReleaseContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Release was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiReleaseContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Release was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiReleaseContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ApiRelease"
        ],
        "operationId": "WorkspaceApiRelease_Update",
        "description": "Updates the details of the release of the API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceApiRelease": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceApiRelease.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ReleaseIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiReleaseContract"
            },
            "description": "API Release Update parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Release was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiReleaseContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiRelease"
        ],
        "operationId": "WorkspaceApiRelease_Delete",
        "description": "Deletes the specified release in the API.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceApiRelease": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceApiRelease.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ReleaseIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "API release successfully removed"
          },
          "204": {
            "description": "API release successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/operations": {
      "get": {
        "tags": [
          "ApiOperation"
        ],
        "operationId": "WorkspaceApiOperation_ListByApi",
        "description": "Lists a collection of the operations for the specified API.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceApiOperations": {
            "$ref": "./examples/ApiManagementListWorkspaceApiOperations.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Include tags in the response."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of operation summary entities at the API level.",
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/OperationContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/operations/{operationId}": {
      "head": {
        "tags": [
          "ApiOperation"
        ],
        "operationId": "WorkspaceApiOperation_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the API operation specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceApiOperation": {
            "$ref": "./examples/ApiManagementHeadWorkspaceApiOperation.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/OperationIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified API operation entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiOperation"
        ],
        "operationId": "WorkspaceApiOperation_Get",
        "description": "Gets the details of the API Operation specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiOperation": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiOperation.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/OperationIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Operation entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiOperation"
        ],
        "operationId": "WorkspaceApiOperation_CreateOrUpdate",
        "description": "Creates a new operation in the API or updates an existing one.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceApiOperation": {
            "$ref": "./examples/ApiManagementCreateWorkspaceApiOperation.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/OperationIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationContract"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Operation was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Operation was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ApiOperation"
        ],
        "operationId": "WorkspaceApiOperation_Update",
        "description": "Updates the details of the operation in the API specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceApiOperation": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceApiOperation.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/OperationIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationUpdateContract"
            },
            "description": "API Operation Update parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/OperationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiOperation"
        ],
        "operationId": "WorkspaceApiOperation_Delete",
        "description": "Deletes the specified operation in the API.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceApiOperation": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceApiOperation.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/OperationIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "API operation successfully removed"
          },
          "204": {
            "description": "API operation successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/operations/{operationId}/policies": {
      "get": {
        "tags": [
          "ApiOperationPolicy"
        ],
        "operationId": "WorkspaceApiOperationPolicy_ListByOperation",
        "description": "Get the list of policy configuration at the API Operation level.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceApiOperationPolicies": {
            "$ref": "./examples/ApiManagementListWorkspaceApiOperationPolicies.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/OperationIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Api Operations Policy Collection.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/operations/{operationId}/policies/{policyId}": {
      "head": {
        "tags": [
          "ApiOperationPolicy"
        ],
        "operationId": "WorkspaceApiOperationPolicy_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the API operation policy specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceApiOperationPolicy": {
            "$ref": "./examples/ApiManagementHeadWorkspaceApiOperationPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/OperationIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified API operation policy entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiOperationPolicy"
        ],
        "operationId": "WorkspaceApiOperationPolicy_Get",
        "description": "Get the policy configuration at the API Operation level.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiOperationPolicy": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiOperationPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/OperationIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyExportFormat"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Api Operation Policy information.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiOperationPolicy"
        ],
        "operationId": "WorkspaceApiOperationPolicy_CreateOrUpdate",
        "description": "Creates or updates policy configuration for the API Operation level.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceApiOperationPolicy": {
            "$ref": "./examples/ApiManagementCreateWorkspaceApiOperationPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/OperationIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "description": "The policy contents to apply."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Api Operation policy configuration was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Api Operation policy configuration of the tenant was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiOperationPolicy"
        ],
        "operationId": "WorkspaceApiOperationPolicy_Delete",
        "description": "Deletes the policy configuration at the Api Operation.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceApiOperationPolicy": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceApiOperationPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/OperationIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Policy successfully removed"
          },
          "204": {
            "description": "Policy successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/policies": {
      "get": {
        "tags": [
          "ApiPolicy"
        ],
        "operationId": "WorkspaceApiPolicy_ListByApi",
        "description": "Get the policy configuration at the API level.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceApiPolicies": {
            "$ref": "./examples/ApiManagementListWorkspaceApiPolicies.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Apis Policy Collection.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/policies/{policyId}": {
      "head": {
        "tags": [
          "ApiPolicy"
        ],
        "operationId": "WorkspaceApiPolicy_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the API policy specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceApiPolicy": {
            "$ref": "./examples/ApiManagementHeadWorkspaceApiPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified API Policy entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiPolicy"
        ],
        "operationId": "WorkspaceApiPolicy_Get",
        "description": "Get the policy configuration at the API level.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiPolicy": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyExportFormat"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Api Policy information.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiPolicy"
        ],
        "operationId": "WorkspaceApiPolicy_CreateOrUpdate",
        "description": "Creates or updates policy configuration for the API.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceApiPolicy": {
            "$ref": "./examples/ApiManagementCreateWorkspaceApiPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "description": "The policy contents to apply."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Api policy configuration was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Api policy configuration of the tenant was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiPolicy"
        ],
        "operationId": "WorkspaceApiPolicy_Delete",
        "description": "Deletes the policy configuration at the Api.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceApiPolicy": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceApiPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the policy configuration at the API level."
          },
          "204": {
            "description": "Successfully deleted the policy configuration at the API level."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/schemas": {
      "get": {
        "tags": [
          "ApiSchema"
        ],
        "operationId": "WorkspaceApiSchema_ListByApi",
        "description": "Get the schema configuration at the API level.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceApiSchemas": {
            "$ref": "./examples/ApiManagementListWorkspaceApiSchemas.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| contentType | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Apis Schema Collection.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SchemaCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/SchemaContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/schemas/{schemaId}": {
      "head": {
        "tags": [
          "ApiSchema"
        ],
        "operationId": "WorkspaceApiSchema_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the schema specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceApiSchema": {
            "$ref": "./examples/ApiManagementHeadWorkspaceApiSchema.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SchemaIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified schema entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiSchema"
        ],
        "operationId": "WorkspaceApiSchema_Get",
        "description": "Get the schema configuration at the API level.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiSchema": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiSchema.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SchemaIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Api Schema information.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SchemaContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiSchema"
        ],
        "operationId": "WorkspaceApiSchema_CreateOrUpdate",
        "description": "Creates or updates schema configuration for the API.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceApiSchema": {
            "$ref": "./examples/ApiManagementCreateWorkspaceApiSchema.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SchemaIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/SchemaContract"
            },
            "description": "The schema contents to apply."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Request to create or update Api schema was accepted.",
            "headers": {
              "location": {
                "description": "Location header",
                "type": "string"
              }
            }
          },
          "201": {
            "description": "Api schema configuration was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SchemaContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Api schema configuration of the tenant was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SchemaContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "delete": {
        "tags": [
          "ApiSchema"
        ],
        "operationId": "WorkspaceApiSchema_Delete",
        "description": "Deletes the schema configuration at the Api.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceApiSchema": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceApiSchema.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SchemaIdParameter"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "If true removes all references to the schema before deleting it."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the schema configuration at the API level."
          },
          "204": {
            "description": "Successfully deleted the schema configuration at the API level."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "operationId": "WorkspaceProduct_ListByService",
        "description": "Lists a collection of products in the specified workspace in a service instance.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceProducts": {
            "$ref": "./examples/ApiManagementListWorkspaceProducts.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| groups | expand |     |     |</br>"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "name": "expandGroups",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "When set to true, the response contains an array of groups that have visibility to the product. The default is false."
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Products which are part of a specific tag."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A Collection of the Product entities for the specified workspace in an API Management service instance.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ProductContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products/{productId}": {
      "head": {
        "tags": [
          "Product"
        ],
        "operationId": "WorkspaceProduct_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the product specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceProduct": {
            "$ref": "./examples/ApiManagementHeadWorkspaceProduct.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified Product entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Product"
        ],
        "operationId": "WorkspaceProduct_Get",
        "description": "Gets the details of the product specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceProduct": {
            "$ref": "./examples/ApiManagementGetWorkspaceProduct.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Product entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "operationId": "WorkspaceProduct_CreateOrUpdate",
        "description": "Creates or Updates a product.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceProduct": {
            "$ref": "./examples/ApiManagementCreateWorkspaceProduct.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductContract"
            },
            "description": "Create or update parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Product was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Product was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Product"
        ],
        "operationId": "WorkspaceProduct_Update",
        "description": "Update existing product details.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceProduct": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceProduct.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Product was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "operationId": "WorkspaceProduct_Delete",
        "description": "Delete product.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceProduct": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceProduct.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "name": "deleteSubscriptions",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Delete existing subscriptions associated with the product or not."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Product was successfully removed."
          },
          "204": {
            "description": "Product was successfully removed by previous request or does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products/{productId}/apiLinks": {
      "get": {
        "tags": [
          "ProductApiLink"
        ],
        "operationId": "WorkspaceProductApiLink_ListByProduct",
        "description": "Lists a collection of the API links associated with a product.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceProductApiLinks": {
            "$ref": "./examples/ApiManagementListWorkspaceProductApiLinks.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| apiId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains a collection of API link entities in the product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductApiLinkCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ProductApiLinkContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products/{productId}/apiLinks/{apiLinkId}": {
      "get": {
        "tags": [
          "ProductApiLink"
        ],
        "operationId": "WorkspaceProductApiLink_Get",
        "description": "Gets the API link for the product.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceProductApiLink": {
            "$ref": "./examples/ApiManagementGetWorkspaceProductApiLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductApiLinkIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified API link entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductApiLinkContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductApiLink"
        ],
        "operationId": "WorkspaceProductApiLink_CreateOrUpdate",
        "description": "Adds an API to the specified product via link.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceProductApiLink": {
            "$ref": "./examples/ApiManagementCreateWorkspaceProductApiLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductApiLinkIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductApiLinkContract"
            },
            "description": "Create or update parameters."
          }
        ],
        "responses": {
          "201": {
            "description": "The API was successfully added to the product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductApiLinkContract"
            }
          },
          "200": {
            "description": "The specified API is already added to the product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductApiLinkContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductApiLink"
        ],
        "operationId": "WorkspaceProductApiLink_Delete",
        "description": "Deletes the specified API from the specified product.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceProductApiLink": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceProductApiLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductApiLinkIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "API was successfully removed from product"
          },
          "204": {
            "description": "API successfully removed by previous request or does not exist in product"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products/{productId}/groupLinks": {
      "get": {
        "tags": [
          "ProductGroupLink"
        ],
        "operationId": "WorkspaceProductGroupLink_ListByProduct",
        "description": "Lists a collection of the group links associated with a product.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceProductGroupLinks": {
            "$ref": "./examples/ApiManagementListWorkspaceProductGroupLinks.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| groupId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains a collection of group link entities in the product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductGroupLinkCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/ProductGroupLinkContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products/{productId}/groupLinks/{groupLinkId}": {
      "get": {
        "tags": [
          "ProductGroupLink"
        ],
        "operationId": "WorkspaceProductGroupLink_Get",
        "description": "Gets the group link for the product.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceProductGroupLink": {
            "$ref": "./examples/ApiManagementGetWorkspaceProductGroupLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductGroupLinkIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified group link entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductGroupLinkContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductGroupLink"
        ],
        "operationId": "WorkspaceProductGroupLink_CreateOrUpdate",
        "description": "Adds a group to the specified product via link.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceProductGroupLink": {
            "$ref": "./examples/ApiManagementCreateWorkspaceProductGroupLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductGroupLinkIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductGroupLinkContract"
            },
            "description": "Create or update parameters."
          }
        ],
        "responses": {
          "201": {
            "description": "The group was successfully added to the product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductGroupLinkContract"
            }
          },
          "200": {
            "description": "The specified group is already added to the product.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ProductGroupLinkContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductGroupLink"
        ],
        "operationId": "WorkspaceProductGroupLink_Delete",
        "description": "Deletes the specified group from the specified product.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceProductGroupLink": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceProductGroupLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductGroupLinkIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Group was successfully removed from product"
          },
          "204": {
            "description": "Group successfully removed by previous request or does not exist in product"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products/{productId}/policies": {
      "get": {
        "tags": [
          "ProductPolicy"
        ],
        "operationId": "WorkspaceProductPolicy_ListByProduct",
        "description": "Get the policy configuration at the Product level.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceProductPolicies": {
            "$ref": "./examples/ApiManagementListWorkspaceProductPolicies.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Product Policy information.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products/{productId}/policies/{policyId}": {
      "head": {
        "tags": [
          "ProductPolicy"
        ],
        "operationId": "WorkspaceProductPolicy_GetEntityTag",
        "description": "Get the ETag of the policy configuration at the Product level.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceProductPolicy": {
            "$ref": "./examples/ApiManagementHeadWorkspaceProductPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Product Policy Etag information.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ProductPolicy"
        ],
        "operationId": "WorkspaceProductPolicy_Get",
        "description": "Get the policy configuration at the Product level.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceProductPolicy": {
            "$ref": "./examples/ApiManagementGetWorkspaceProductPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyExportFormat"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Product Policy information.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductPolicy"
        ],
        "operationId": "WorkspaceProductPolicy_CreateOrUpdate",
        "description": "Creates or updates policy configuration for the Product.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceProductPolicy": {
            "$ref": "./examples/ApiManagementCreateWorkspaceProductPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "description": "The policy contents to apply."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Product policy configuration was successfully created.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Product policy configuration of the tenant was successfully updated.",
            "schema": {
              "$ref": "./definitions.json#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductPolicy"
        ],
        "operationId": "WorkspaceProductPolicy_Delete",
        "description": "Deletes the policy configuration at the Product.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceProductPolicy": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceProductPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ProductIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the policy configuration at the Product level."
          },
          "204": {
            "description": "Successfully deleted the policy configuration at the Product level."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags": {
      "get": {
        "tags": [
          "Tag"
        ],
        "operationId": "WorkspaceTag_ListByService",
        "description": "Lists a collection of tags defined within a workspace in a service instance.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceTags": {
            "$ref": "./examples/ApiManagementListWorkspaceTags.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Scope like 'apis', 'products' or 'apis/{apiId}"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Tag entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/TagContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags/{tagId}": {
      "head": {
        "tags": [
          "Tag"
        ],
        "operationId": "WorkspaceTag_GetEntityState",
        "description": "Gets the entity state version of the tag specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceTag": {
            "$ref": "./examples/ApiManagementHeadWorkspaceTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Empty response body, ETag header entity state version.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tag"
        ],
        "operationId": "WorkspaceTag_Get",
        "description": "Gets the details of the tag specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceTag": {
            "$ref": "./examples/ApiManagementGetWorkspaceTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Tag entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tag"
        ],
        "operationId": "WorkspaceTag_CreateOrUpdate",
        "description": "Creates a tag.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceTag": {
            "$ref": "./examples/ApiManagementCreateWorkspaceTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/TagCreateUpdateParameters"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Tag was created successfully.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/TagContract"
            }
          },
          "200": {
            "description": "Tag already exists.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/TagContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tag"
        ],
        "operationId": "WorkspaceTag_Update",
        "description": "Updates the details of the tag specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceTag": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/TagCreateUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The tag details were successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/TagContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tag"
        ],
        "operationId": "WorkspaceTag_Delete",
        "description": "Deletes specific tag of the workspace in an API Management service instance.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceTag": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Tag successfully removed"
          },
          "204": {
            "description": "Tag successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags/{tagId}/apiLinks": {
      "get": {
        "tags": [
          "TagApiLink"
        ],
        "operationId": "WorkspaceTagApiLink_ListByProduct",
        "description": "Lists a collection of the API links associated with a tag.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceTagApiLinks": {
            "$ref": "./examples/ApiManagementListWorkspaceTagApiLinks.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| apiId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains a collection of API link entities associated with a tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagApiLinkCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/TagApiLinkContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags/{tagId}/apiLinks/{apiLinkId}": {
      "get": {
        "tags": [
          "TagApiLink"
        ],
        "operationId": "WorkspaceTagApiLink_Get",
        "description": "Gets the API link for the tag.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceTagApiLink": {
            "$ref": "./examples/ApiManagementGetWorkspaceTagApiLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagApiLinkIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified API link entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagApiLinkContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TagApiLink"
        ],
        "operationId": "WorkspaceTagApiLink_CreateOrUpdate",
        "description": "Adds an API to the specified tag via link.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceTagApiLink": {
            "$ref": "./examples/ApiManagementCreateWorkspaceTagApiLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagApiLinkIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/TagApiLinkContract"
            },
            "description": "Create or update parameters."
          }
        ],
        "responses": {
          "201": {
            "description": "The API was successfully added to the tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagApiLinkContract"
            }
          },
          "200": {
            "description": "The specified API is already added to the tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagApiLinkContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TagApiLink"
        ],
        "operationId": "WorkspaceTagApiLink_Delete",
        "description": "Deletes the specified API from the specified tag.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceTagApiLink": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceTagApiLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagApiLinkIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "API was successfully removed from tag"
          },
          "204": {
            "description": "API successfully removed by previous request or does not exist in tag"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags/{tagId}/operationLinks": {
      "get": {
        "tags": [
          "TagOperationLink"
        ],
        "operationId": "WorkspaceTagOperationLink_ListByProduct",
        "description": "Lists a collection of the operation links associated with a tag.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceTagOperationLinks": {
            "$ref": "./examples/ApiManagementListWorkspaceTagOperationLinks.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| operationId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains a collection of operation link entities associated with a tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagOperationLinkCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/TagOperationLinkContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags/{tagId}/operationLinks/{operationLinkId}": {
      "get": {
        "tags": [
          "TagOperationLink"
        ],
        "operationId": "WorkspaceTagOperationLink_Get",
        "description": "Gets the operation link for the tag.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceTagOperationLink": {
            "$ref": "./examples/ApiManagementGetWorkspaceTagOperationLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagOperationLinkIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified operation link entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagOperationLinkContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TagOperationLink"
        ],
        "operationId": "WorkspaceTagOperationLink_CreateOrUpdate",
        "description": "Adds an operation to the specified tag via link.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceTagOperationLink": {
            "$ref": "./examples/ApiManagementCreateWorkspaceTagOperationLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagOperationLinkIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/TagOperationLinkContract"
            },
            "description": "Create or update parameters."
          }
        ],
        "responses": {
          "201": {
            "description": "The operation was successfully added to the tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagOperationLinkContract"
            }
          },
          "200": {
            "description": "The specified operation is already added to the tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagOperationLinkContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TagOperationLink"
        ],
        "operationId": "WorkspaceTagOperationLink_Delete",
        "description": "Deletes the specified operation from the specified tag.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceTagOperationLink": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceTagOperationLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagOperationLinkIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation was successfully removed from tag"
          },
          "204": {
            "description": "Operation successfully removed by previous request or does not exist in tag"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags/{tagId}/productLinks": {
      "get": {
        "tags": [
          "TagProductLink"
        ],
        "operationId": "WorkspaceTagProductLink_ListByProduct",
        "description": "Lists a collection of the product links associated with a tag.",
        "x-ms-examples": {
          "ApiManagementListWorkspaceTagProductLinks": {
            "$ref": "./examples/ApiManagementListWorkspaceTagProductLinks.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains a collection of product link entities associated with a tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagProductLinkCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./definitions.json#/definitions/TagProductLinkContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags/{tagId}/productLinks/{productLinkId}": {
      "get": {
        "tags": [
          "TagProductLink"
        ],
        "operationId": "WorkspaceTagProductLink_Get",
        "description": "Gets the product link for the tag.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceTagProductLink": {
            "$ref": "./examples/ApiManagementGetWorkspaceTagProductLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagProductLinkIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified product link entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagProductLinkContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TagProductLink"
        ],
        "operationId": "WorkspaceTagProductLink_CreateOrUpdate",
        "description": "Adds a product to the specified tag via link.",
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceTagProductLink": {
            "$ref": "./examples/ApiManagementCreateWorkspaceTagProductLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagProductLinkIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/TagProductLinkContract"
            },
            "description": "Create or update parameters."
          }
        ],
        "responses": {
          "201": {
            "description": "The product was successfully added to the tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagProductLinkContract"
            }
          },
          "200": {
            "description": "The specified product is already added to the tag.",
            "schema": {
              "$ref": "./definitions.json#/definitions/TagProductLinkContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TagProductLink"
        ],
        "operationId": "WorkspaceTagProductLink_Delete",
        "description": "Deletes the specified product from the specified tag.",
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceTagProductLink": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceTagProductLink.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TagProductLinkIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Product was successfully removed from tag"
          },
          "204": {
            "description": "Product successfully removed by previous request or does not exist in tag"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "x-ms-paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}?export=true": {
      "get": {
        "tags": [
          "Apis"
        ],
        "operationId": "WorkspaceApiExport_Get",
        "description": "Gets the details of the API specified by its identifier in the format specified to the Storage Blob with SAS Key valid for 5 minutes.",
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiExportInOpenApi2dot0": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiExportInOpenApi2dot0.json"
          },
          "ApiManagementGetWorkspaceApiExportInOpenApi3dot0": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiExportInOpenApi3dot0.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/WorkspaceIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdRevParameter"
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "swagger-link",
              "wadl-link",
              "wsdl-link",
              "openapi-link",
              "openapi+json-link"
            ],
            "x-ms-enum": {
              "name": "ExportFormat",
              "modelAsString": true,
              "values": [
                {
                  "value": "swagger-link",
                  "description": "Export the Api Definition in OpenAPI 2.0 Specification as JSON document to the Storage Blob.",
                  "name": "Swagger"
                },
                {
                  "value": "wsdl-link",
                  "description": "Export the Api Definition in WSDL Schema to Storage Blob. This is only supported for APIs of Type `soap`",
                  "name": "Wsdl"
                },
                {
                  "value": "wadl-link",
                  "description": "Export the Api Definition in WADL Schema to Storage Blob.",
                  "name": "Wadl"
                },
                {
                  "value": "openapi-link",
                  "description": "Export the Api Definition in OpenAPI 3.0 Specification as YAML document to Storage Blob.",
                  "name": "Openapi"
                },
                {
                  "value": "openapi+json-link",
                  "description": "Export the Api Definition in OpenAPI 3.0 Specification as JSON document to Storage Blob.",
                  "name": "OpenapiJson"
                }
              ]
            },
            "description": "Format in which to export the Api Details to the Storage Blob with Sas Key valid for 5 minutes."
          },
          {
            "name": "export",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "true"
            ],
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ExportApi"
            },
            "description": "Query parameter required to export the API details."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response contains a stream with a full set of API metadata and includes API entity with an embedded array of operation entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiExportResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {},
  "parameters": {}
}
