{
  "swagger": "2.0",
  "info": {
    "title": "ApiManagementClient",
    "description": "Use these REST APIs for performing operations on Gateway entity in Azure API Management deployment.",
    "version": "2019-12-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways": {
      "get": {
        "tags": [
          "Gateway"
        ],
        "operationId": "Gateway_ListByService",
        "description": "Lists a collection of gateways registered with service instance.",
        "x-ms-examples": {
          "ApiManagementListGateways": {
            "$ref": "./examples/ApiManagementListGateways.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Gateway entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}": {
      "head": {
        "tags": [
          "Gateway"
        ],
        "operationId": "Gateway_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the Gateway specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadGateway": {
            "$ref": "./examples/ApiManagementHeadGateway.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified Gateway entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Gateway"
        ],
        "operationId": "Gateway_Get",
        "description": "Gets the details of the Gateway specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetGateway": {
            "$ref": "./examples/ApiManagementGetGateway.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Gateway entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Gateway"
        ],
        "operationId": "Gateway_CreateOrUpdate",
        "description": "Creates or updates a Gateway to be used in Api Management instance.",
        "x-ms-examples": {
          "ApiManagementCreateGateway": {
            "$ref": "./examples/ApiManagementCreateGateway.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayContract"
            }
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The new Gateway was successfully added.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayContract"
            }
          },
          "200": {
            "description": "The Gateway details were successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Gateway"
        ],
        "operationId": "Gateway_Update",
        "description": "Updates the details of the gateway specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateGateway": {
            "$ref": "./examples/ApiManagementUpdateGateway.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayContract"
            }
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The gateway details were successfully updated."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Gateway"
        ],
        "operationId": "Gateway_Delete",
        "description": "Deletes specific Gateway.",
        "x-ms-examples": {
          "ApiManagementDeleteGateway": {
            "$ref": "./examples/ApiManagementDeleteGateway.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Gateway was successfully deleted."
          },
          "204": {
            "description": "The Gateway was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/listKeys": {
      "post": {
        "tags": [
          "GatewayListKeys"
        ],
        "operationId": "Gateway_ListKeys",
        "description": "Retrieves gateway keys.",
        "x-ms-examples": {
          "ApiManagementGatewayKeys": {
            "$ref": "./examples/ApiManagementGatewayListKeys.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Gateway keys.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayKeysContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/regenerateKey": {
      "post": {
        "tags": [
          "GatewayRegenerateKey"
        ],
        "operationId": "Gateway_RegenerateKey",
        "description": "Regenerates specified gateway key invalidating any tokens created with it.",
        "x-ms-examples": {
          "ApiManagementGatewayRegeneratePrimaryKey": {
            "$ref": "./examples/ApiManagementGatewayRegenerateKey.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayKeyRegenerationRequestContract"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Key successfully regenerated"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/generateToken": {
      "post": {
        "tags": [
          "GatewayGenerateToken"
        ],
        "operationId": "Gateway_GenerateToken",
        "description": "Gets the Shared Access Authorization Token for the gateway.",
        "x-ms-examples": {
          "ApiManagementGatewayToken": {
            "$ref": "./examples/ApiManagementGatewayGenerateToken.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayTokenRequestContract"
            }
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the authorization token for the gateway.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayTokenContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/hostnameConfigurations": {
      "get": {
        "tags": [
          "GatewayHostnameConfiguration"
        ],
        "operationId": "GatewayHostnameConfiguration_ListByService",
        "description": "Lists the collection of hostname configurations for the specified gateway.",
        "x-ms-examples": {
          "ApiManagementListGatewayHostnameConfigurations": {
            "$ref": "./examples/ApiManagementListGatewayHostnameConfigurations.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection of hostname configuration entities.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayHostnameConfigurationCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/hostnameConfigurations/{hcId}": {
      "head": {
        "tags": [
          "GatewayHostnameConfiguration"
        ],
        "operationId": "GatewayHostnameConfiguration_GetEntityTag",
        "description": "Checks that hostname configuration entity specified by identifier exists for specified Gateway entity.",
        "x-ms-examples": {
          "ApiManagementHeadGatewayHostnameConfiguration": {
            "$ref": "./examples/ApiManagementHeadGatewayHostnameConfiguration.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayHostnameConfigurationIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified Gateway entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "GatewayHostnameConfiguration"
        ],
        "operationId": "GatewayHostnameConfiguration_Get",
        "description": "Gets the details of the Gateway hostname configuration specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetGateway": {
            "$ref": "./examples/ApiManagementGetGatewayHostnameConfiguration.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayHostnameConfigurationIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Gateway entity.",
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayHostnameConfigurationContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "GatewayHostnameConfiguration"
        ],
        "operationId": "GatewayHostnameConfiguration_CreateOrUpdate",
        "description": "Creates of updates hostname configuration for a Gateway.",
        "x-ms-examples": {
          "ApiManagementCreateGatewayHostnameConfiguration": {
            "$ref": "./examples/ApiManagementCreateGatewayHostnameConfiguration.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayHostnameConfigurationIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayHostnameConfigurationContract"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The new Gateway hostname configuration was successfully created.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayHostnameConfigurationContract"
            }
          },
          "200": {
            "description": "The Gateway hostname configuration details were successfully updated.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions.json#/definitions/GatewayHostnameConfigurationContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GatewayHostnameConfiguration"
        ],
        "operationId": "GatewayHostnameConfiguration_Delete",
        "description": "Deletes the specified hostname configuration from the specified Gateway.",
        "x-ms-examples": {
          "ApiManagementDeleteGatewayHostnameConfiguration": {
            "$ref": "./examples/ApiManagementDeleteGatewayHostnameConfiguration.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayHostnameConfigurationIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Hostname configuration was successfully removed from Gateway"
          },
          "204": {
            "description": "Hostname configuration successfully removed by previous request or does not exist in Gateway"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/apis": {
      "get": {
        "tags": [
          "GatewayApi"
        ],
        "operationId": "GatewayApi_ListByService",
        "description": "Lists a collection of the APIs associated with a gateway.",
        "x-ms-examples": {
          "ApiManagementListGatewayApis": {
            "$ref": "./examples/ApiManagementListGatewayApis.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains a collection of Api entities in the gateway.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/apis/{apiId}": {
      "head": {
        "tags": [
          "GatewayApi"
        ],
        "operationId": "GatewayApi_GetEntityTag",
        "description": "Checks that API entity specified by identifier is associated with the Gateway entity.",
        "x-ms-examples": {
          "ApiManagementHeadGatewayApi": {
            "$ref": "./examples/ApiManagementHeadGatewayApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified Gateway entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "GatewayApi"
        ],
        "operationId": "GatewayApi_CreateOrUpdate",
        "description": "Adds an API to the specified Gateway.",
        "x-ms-examples": {
          "ApiManagementCreateGatewayApi": {
            "$ref": "./examples/ApiManagementCreateGatewayApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "./definitions.json#/definitions/AssociationContract"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The API was successfully added to the Gateway.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiContract"
            }
          },
          "200": {
            "description": "The specified API is already added to the Gateway.",
            "schema": {
              "$ref": "./definitions.json#/definitions/ApiContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GatewayApi"
        ],
        "operationId": "GatewayApi_Delete",
        "description": "Deletes the specified API from the specified Gateway.",
        "x-ms-examples": {
          "ApiManagementDeleteGatewayApi": {
            "$ref": "./examples/ApiManagementDeleteGatewayApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/GatewayIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "API was successfully removed from Gateway"
          },
          "204": {
            "description": "API successfully removed by previous request or does not exist in Gateway"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {},
  "parameters": {}
}
