{
  "swagger": "2.0",
  "info": {
    "title": "ApiManagementClient",
    "description": "Use these REST APIs for performing operations on Global Policies in Azure API Management deployment.",
    "version": "2018-06-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policies": {
      "get": {
        "tags": [
          "Policy"
        ],
        "operationId": "Policy_ListByService",
        "description": "Lists all the Global Policy definitions of the Api Management service.",
        "x-ms-examples": {
          "ApiManagementListPolicies": {
            "$ref": "./examples/ApiManagementListPolicies.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of Policy Contracts.",
            "schema": {
              "$ref": "#/definitions/PolicyCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policies/{policyId}": {
      "head": {
        "tags": [
          "Policy"
        ],
        "operationId": "Policy_GetEntityTag",
        "description": "Gets the entity state (Etag) version of the Global policy definition in the Api Management service.",
        "x-ms-examples": {
          "ApiManagementHeadPolicy": {
            "$ref": "./examples/ApiManagementHeadPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Policy"
        ],
        "operationId": "Policy_Get",
        "description": "Get the Global policy definition of the Api Management service.",
        "x-ms-examples": {
          "ApiManagementGetPolicy": {
            "$ref": "./examples/ApiManagementGetPolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get the Global policy definition of the Api Management service.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Policy"
        ],
        "operationId": "Policy_CreateOrUpdate",
        "description": "Creates or updates the global policy configuration of the Api Management service.",
        "x-ms-examples": {
          "ApiManagementCreatePolicy": {
            "$ref": "./examples/ApiManagementCreatePolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "description": "The policy contents to apply."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Global policy configuration was successfully created.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Global policy configuration of the Api Management service was successfully updated.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Policy"
        ],
        "operationId": "Policy_Delete",
        "description": "Deletes the global policy configuration of the Api Management Service.",
        "x-ms-examples": {
          "ApiManagementDeletePolicy": {
            "$ref": "./examples/ApiManagementDeletePolicy.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/PolicyIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Policy was successfully removed"
          },
          "204": {
            "description": "Policy successfully removed by previous request or does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "PolicyCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyContract"
          },
          "description": "Policy Contract value."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "The response of the list policy operation."
    },
    "PolicyContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PolicyContractProperties",
          "description": "Properties of the Policy."
        }
      },
      "allOf": [
        {
          "$ref": "./apimanagement.json#/definitions/Resource"
        }
      ],
      "description": "Policy Contract details."
    },
    "PolicyContractProperties": {
      "properties": {
        "policyContent": {
          "type": "string",
          "description": "Json escaped Xml Encoded contents of the Policy."
        },
        "contentFormat": {
          "type": "string",
          "description": "Format of the policyContent.",
          "enum": [
            "xml",
            "xml-link",
            "rawxml",
            "rawxml-link"
          ],
          "x-ms-enum": {
            "name": "PolicyContentFormat",
            "modelAsString": true,
            "values": [
              {
                "value": "xml",
                "description": "The contents are inline and Content type is an XML document."
              },
              {
                "value": "xml-link",
                "description": "The policy XML document is hosted on a http endpoint accessible from the API Management service."
              },
              {
                "value": "rawxml",
                "description": "The contents are inline and Content type is a non XML encoded policy document."
              },
              {
                "value": "rawxml-link",
                "description": "The policy document is not Xml encoded and is hosted on a http endpoint accessible from the API Management service."
              }
            ]
          },
          "default": "xml"
        }
      },
      "required": [
        "policyContent"
      ],
      "description": "Policy contract Properties."
    }
  },
  "parameters": { }
}