{
  "swagger": "2.0",
  "info": {
    "title": "ApiManagementClient",
    "description": "Use these REST APIs for performing operations on Tag entity in your Azure API Management deployment. Tags can be assigned to APIs, Operations and Products.",
    "version": "2018-06-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tag_ListByService",
        "description": "Lists a collection of tags defined within a service instance.",
        "x-ms-examples": {
          "ApiManagementListTags": {
            "$ref": "./examples/ApiManagementListTags.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "| Field       | Supported operators    | Supported functions                         |\n|-------------|------------------------|---------------------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of Tag entities.",
            "schema": {
              "$ref": "#/definitions/TagCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/TagContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags/{tagId}": {
      "head": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tag_GetEntityState",
        "description": "Gets the entity state version of the tag specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetTag": {
            "$ref": "./examples/ApiManagementHeadTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Empty response body, ETag header entity state version.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tag_Get",
        "description": "Gets the details of the tag specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetTag": {
            "$ref": "./examples/ApiManagementGetTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Tag entity.",
            "schema": {
              "$ref": "#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tag_CreateOrUpdate",
        "description": "Creates a tag.",
        "x-ms-examples": {
          "ApiManagementCreateTag": {
            "$ref": "./examples/ApiManagementCreateTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagCreateUpdateParameters"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Tag was created succesfully.",
            "schema": {
              "$ref": "#/definitions/TagContract"
            }
          },
          "200": {
            "description": "Tag already exists.",
            "schema": {
              "$ref": "#/definitions/TagContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tag_Update",
        "description": "Updates the details of the tag specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementUpdateTag": {
            "$ref": "./examples/ApiManagementUpdateTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagCreateUpdateParameters"
            },
            "description": "Update parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The tag details were successfully updated."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tag_Delete",
        "description": "Deletes specific tag of the API Management service instance.",
        "x-ms-examples": {
          "ApiManagementDeleteTag": {
            "$ref": "./examples/ApiManagementDeleteTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The tag was successfully deleted."
          },
          "204": {
            "description": "The tag was successfully deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tags": {
      "get": {
        "tags": [
          "ApiTags"
        ],
        "operationId": "Tag_ListByApi",
        "description": "Lists all Tags associated with the API.",
        "x-ms-examples": {
          "ApiManagementGetTagsForApi": {
            "$ref": "./examples/ApiManagementGetTagsForApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimapis.json#/parameters/ApiIdRevParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "| Field       | Supported operators    | Supported functions                         |\n|-------------|------------------------|---------------------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation returns a collection of tags associated with the Api entity.",
            "schema": {
              "$ref": "#/definitions/TagCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/TagContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tags/{tagId}": {
      "head": {
        "tags": [
          "ApiTags"
        ],
        "operationId": "Tag_GetEntityStateByApi",
        "description": "Gets the entity state version of the tag specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadApiTag": {
            "$ref": "./examples/ApiManagementHeadApiTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimapis.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Empty response body, ETag header entity state version.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiTags"
        ],
        "operationId": "Tag_GetByApi",
        "description": "Get tag associated with the API.",
        "x-ms-examples": {
          "ApiManagementGetApiTag": {
            "$ref": "./examples/ApiManagementGetApiTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimapis.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of the tag specified by its identifier.",
            "schema": {
              "$ref": "#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiTags"
        ],
        "operationId": "Tag_AssignToApi",
        "description": "Assign tag to the Api.",
        "x-ms-examples": {
          "ApiManagementCreateApiTag": {
            "$ref": "./examples/ApiManagementCreateApiTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimapis.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Tag was assigned to the Api.",
            "schema": {
              "$ref": "#/definitions/TagContract"
            }
          },
          "200": {
            "description": "Tag is already assigned to the Api.",
            "schema": {
              "$ref": "#/definitions/TagContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiTags"
        ],
        "operationId": "Tag_DetachFromApi",
        "description": "Detach the tag from the Api.",
        "x-ms-examples": {
          "ApiManagementDeleteApiTag": {
            "$ref": "./examples/ApiManagementDeleteApiTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimapis.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully detached the tag from the Api."
          },
          "204": {
            "description": "Successfully detached the tag from the Api."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tagDescriptions": {
      "get": {
        "tags": [
          "ApiTagDescriptions"
        ],
        "operationId": "TagDescription_ListByApi",
        "description": "Lists all Tags descriptions in scope of API. Model similar to swagger - tagDescription is defined on API level but tag may be assigned to the Operations",
        "x-ms-examples": {
          "ApiManagementGetTagDescriptionsForApi": {
            "$ref": "./examples/ApiManagementGetTagDescriptionsForApi.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimapis.json#/parameters/ApiIdRevParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "| Field       | Supported operators    | Supported functions                         |\n|-------------|------------------------|---------------------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation returns a collection of tagDescriptions associated with the Api entity.",
            "schema": {
              "$ref": "#/definitions/TagDescriptionCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/TagDescriptionContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tagDescriptions/{tagId}": {
      "head": {
        "tags": [
          "ApiTagDescriptions"
        ],
        "operationId": "TagDescription_GetEntityState",
        "description": "Gets the entity state version of the tag specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadApiTagDescription": {
            "$ref": "./examples/ApiManagementHeadApiTagDescription.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimapis.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Empty response body, ETag header entity state version.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiTagDescriptions"
        ],
        "operationId": "TagDescription_Get",
        "description": "Get tag associated with the API.",
        "x-ms-examples": {
          "ApiManagementGetApiTagDescription": {
            "$ref": "./examples/ApiManagementGetApiTagDescription.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimapis.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the description of the tag specified by its identifier in scope if the Api.",
            "schema": {
              "$ref": "#/definitions/TagDescriptionContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiTagDescriptions"
        ],
        "operationId": "TagDescription_CreateOrUpdate",
        "description": "Create/Update tag fescription in scope of the Api.",
        "x-ms-examples": {
          "ApiManagementCreateApiTagDescription": {
            "$ref": "./examples/ApiManagementCreateApiTagDescription.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimapis.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagDescriptionCreateParameters"
            },
            "description": "Create parameters."
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Tag Description was created for the Api.",
            "schema": {
              "$ref": "#/definitions/TagDescriptionContract"
            }
          },
          "200": {
            "description": "Tag Description was updated for the Api.",
            "schema": {
              "$ref": "#/definitions/TagDescriptionContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiTagDescriptions"
        ],
        "operationId": "TagDescription_Delete",
        "description": "Delete tag description for the Api.",
        "x-ms-examples": {
          "ApiManagementDeleteApiTagDescription": {
            "$ref": "./examples/ApiManagementDeleteApiTagDescription.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimapis.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted tag description for the Api."
          },
          "204": {
            "description": "Successfully deleted tag description for the Api."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/tags": {
      "get": {
        "tags": [
          "OperationTags"
        ],
        "operationId": "Tag_ListByOperation",
        "description": "Lists all Tags associated with the Operation.",
        "x-ms-examples": {
          "ApiManagementGetTagsForOperation": {
            "$ref": "./examples/ApiManagementGetTagsForOperation.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimapis.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "./apimapis.json#/parameters/OperationIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "| Field       | Supported operators    | Supported functions                         |\n|-------------|------------------------|---------------------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| method     | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| urlTemplate | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation returns a collection of tags associated with the Operation entity.",
            "schema": {
              "$ref": "#/definitions/TagCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/TagContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/tags/{tagId}": {
      "head": {
        "tags": [
          "OperationTags"
        ],
        "operationId": "Tag_GetEntityStateByOperation",
        "description": "Gets the entity state version of the tag specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadOperationTag": {
            "$ref": "./examples/ApiManagementHeadOperationTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimapis.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "./apimapis.json#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Empty response body, ETag header entity state version.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "OperationTags"
        ],
        "operationId": "Tag_GetByOperation",
        "description": "Get tag associated with the Operation.",
        "x-ms-examples": {
          "ApiManagementGetOperationTag": {
            "$ref": "./examples/ApiManagementGetOperationTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimapis.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "./apimapis.json#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of the tag specified by its identifier.",
            "schema": {
              "$ref": "#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "OperationTags"
        ],
        "operationId": "Tag_AssignToOperation",
        "description": "Assign tag to the Operation.",
        "x-ms-examples": {
          "ApiManagementCreateOperationTag": {
            "$ref": "./examples/ApiManagementCreateOperationTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimapis.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "./apimapis.json#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Tag was assigned to the Operation.",
            "schema": {
              "$ref": "#/definitions/TagContract"
            }
          },
          "200": {
            "description": "Tag is already assigned to the Operation.",
            "schema": {
              "$ref": "#/definitions/TagContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OperationTags"
        ],
        "operationId": "Tag_DetachFromOperation",
        "description": "Detach the tag from the Operation.",
        "x-ms-examples": {
          "ApiManagementDeleteOperationTag": {
            "$ref": "./examples/ApiManagementDeleteOperationTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimapis.json#/parameters/ApiIdRevParameter"
          },
          {
            "$ref": "./apimapis.json#/parameters/OperationIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully detached the tag from the Operation."
          },
          "204": {
            "description": "Successfully detached the tag from the Operation."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operationsByTags": {
      "get": {
        "tags": [
          "OperationsByTags"
        ],
        "operationId": "Operation_ListByTags",
        "description": "Lists a collection of operations associated with tags.",
        "x-ms-examples": {
          "ApiManagementListOperationsByTags": {
            "$ref": "./examples/ApiManagementListOperationsByTags.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimapis.json#/parameters/ApiIdRevParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "| Field       | Supported operators    | Supported functions                         |\n|-------------|------------------------|---------------------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| apiName     | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| method      | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| urlTemplate | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists a collection of TagResource entities.",
            "schema": {
              "$ref": "./apimtagresources.json#/definitions/TagResourceCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./apimtagresources.json#/definitions/TagResourceContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/tags": {
      "get": {
        "tags": [
          "ProductTags"
        ],
        "operationId": "Tag_ListByProduct",
        "description": "Lists all Tags associated with the Product.",
        "x-ms-examples": {
          "ApiManagementGetTagsForProduct": {
            "$ref": "./examples/ApiManagementGetTagsForProduct.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimproducts.json#/parameters/ProductIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "| Field       | Supported operators    | Supported functions                         |\n|-------------|------------------------|---------------------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation returns a collection of tags associated with the Product entity.",
            "schema": {
              "$ref": "./apimtags.json#/definitions/TagCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "./apimtags.json#/definitions/TagContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/tags/{tagId}": {
      "head": {
        "tags": [
          "ProductTags"
        ],
        "operationId": "Tag_GetEntityStateByProduct",
        "description": "Gets the entity state version of the tag specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementHeadProductTag": {
            "$ref": "./examples/ApiManagementHeadProductTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimproducts.json#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Empty response body, ETag header entity state version.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ProductTags"
        ],
        "operationId": "Tag_GetByProduct",
        "description": "Get tag associated with the Product.",
        "x-ms-examples": {
          "ApiManagementGetProductTag": {
            "$ref": "./examples/ApiManagementGetProductTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimproducts.json#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Gets the details of the tag specified by its identifier.",
            "schema": {
              "$ref": "./apimtags.json#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductTags"
        ],
        "operationId": "Tag_AssignToProduct",
        "description": "Assign tag to the Product.",
        "x-ms-examples": {
          "ApiManagementCreateProductTag": {
            "$ref": "./examples/ApiManagementCreateProductTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimproducts.json#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Tag was assigned to the Product.",
            "schema": {
              "$ref": "./apimtags.json#/definitions/TagContract"
            }
          },
          "200": {
            "description": "Tag is already assigned to the Product.",
            "schema": {
              "$ref": "./apimtags.json#/definitions/TagContract"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductTags"
        ],
        "operationId": "Tag_DetachFromProduct",
        "description": "Detach the tag from the Product.",
        "x-ms-examples": {
          "ApiManagementDeleteProductTag": {
            "$ref": "./examples/ApiManagementDeleteProductTag.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "./apimproducts.json#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/TagIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully detached the tag from the Product."
          },
          "204": {
            "description": "Successfully detached the tag from the Product."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "TagCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagContract"
          },
          "description": "Page values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Tag list representation."
    },
    "TagContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TagContractProperties",
          "description": "Tag entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./apimanagement.json#/definitions/Resource"
        }
      ],
      "description": "Tag Contract details."
    },
    "TagContractProperties": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Tag name.",
          "maxLength": 160,
          "minLength": 1
        }
      },
      "required": [
        "displayName"
      ],
      "description": "Tag contract Properties."
    },
    "TagCreateUpdateParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TagContractProperties",
          "description": "Properties supplied to Create Tag operation."
        }
      },
      "description": "Parameters supplied to Create/Update Tag operations."
    },
    "TagDescriptionCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagDescriptionContract"
          },
          "description": "Page values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged TagDescription list representation."
    },
    "TagDescriptionContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TagDescriptionContractProperties",
          "description": "TagDescription entity contract properties."
        }
      },
      "allOf": [
        {
          "$ref": "./apimanagement.json#/definitions/Resource"
        }
      ],
      "description": "Contract details."
    },
    "TagDescriptionContractProperties": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Tag name.",
          "maxLength": 160,
          "minLength": 1
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TagDescriptionBaseProperties"
        }
      ],
      "description": "TagDescription contract Properties."
    },
    "TagDescriptionCreateParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TagDescriptionBaseProperties",
          "description": "Properties supplied to Create TagDescription operation."
        }
      },
      "description": "Parameters supplied to the Create TagDescription operation."
    },
    "TagDescriptionBaseProperties": {
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the Tag."
        },
        "externalDocsUrl": {
          "type": "string",
          "description": "Absolute URL of external resources describing the tag.",
          "maxLength": 2000
        },
        "externalDocsDescription": {
          "type": "string",
          "description": "Description of the external resources describing the tag."
        }
      },
      "description": "Parameters supplied to the Create TagDescription operation."
    }
  },
  "parameters": {
    "TagIdParameter": {
      "name": "tagId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Tag identifier. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 80,
      "pattern": "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)",
      "x-ms-parameter-location": "method"
    }
  }
}