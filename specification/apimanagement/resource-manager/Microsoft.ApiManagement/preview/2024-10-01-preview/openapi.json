{
  "swagger": "2.0",
  "info": {
    "title": "ApiManagementClient",
    "version": "2024-10-01-preview",
    "description": "Resource provider operation status.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "ApiManagementOperations"
    },
    {
      "name": "Operations"
    },
    {
      "name": "ApiManagementGatewayResources"
    },
    {
      "name": "ApiContracts"
    },
    {
      "name": "WorkspaceApi"
    },
    {
      "name": "ApiManagementServiceResources"
    },
    {
      "name": "ApiReleaseContracts"
    },
    {
      "name": "WorkspaceApiRelease"
    },
    {
      "name": "OperationContracts"
    },
    {
      "name": "WorkspaceApiOperation"
    },
    {
      "name": "PolicyContracts"
    },
    {
      "name": "GraphQLApiResolverPolicy"
    },
    {
      "name": "ApiPolicy"
    },
    {
      "name": "Policy"
    },
    {
      "name": "ProductPolicy"
    },
    {
      "name": "WorkspacePolicy"
    },
    {
      "name": "WorkspaceApiOperationPolicy"
    },
    {
      "name": "WorkspaceApiPolicy"
    },
    {
      "name": "WorkspaceProductPolicy"
    },
    {
      "name": "Tag"
    },
    {
      "name": "TagContracts"
    },
    {
      "name": "TagContractOperation"
    },
    {
      "name": "TagContractOperationGroup"
    },
    {
      "name": "WorkspaceTag"
    },
    {
      "name": "ResolverContracts"
    },
    {
      "name": "SchemaContracts"
    },
    {
      "name": "WorkspaceApiSchema"
    },
    {
      "name": "DiagnosticContracts"
    },
    {
      "name": "Diagnostic"
    },
    {
      "name": "WorkspaceDiagnostic"
    },
    {
      "name": "WorkspaceApiDiagnostic"
    },
    {
      "name": "IssueContracts"
    },
    {
      "name": "Issue"
    },
    {
      "name": "IssueCommentContracts"
    },
    {
      "name": "IssueAttachmentContracts"
    },
    {
      "name": "TagDescriptionContracts"
    },
    {
      "name": "WikiContracts"
    },
    {
      "name": "ProductWiki"
    },
    {
      "name": "ApiVersionSetContracts"
    },
    {
      "name": "WorkspaceApiVersionSet"
    },
    {
      "name": "AuthorizationProviderContracts"
    },
    {
      "name": "AuthorizationContracts"
    },
    {
      "name": "AuthorizationAccessPolicyContracts"
    },
    {
      "name": "AuthorizationServerContracts"
    },
    {
      "name": "BackendContracts"
    },
    {
      "name": "WorkspaceBackend"
    },
    {
      "name": "CacheContracts"
    },
    {
      "name": "CertificateContracts"
    },
    {
      "name": "WorkspaceCertificate"
    },
    {
      "name": "ContentTypeContracts"
    },
    {
      "name": "ContentItemContracts"
    },
    {
      "name": "DeletedServiceContracts"
    },
    {
      "name": "DocumentationContracts"
    },
    {
      "name": "EmailTemplateContracts"
    },
    {
      "name": "ApiManagementGatewayConfigConnectionResources"
    },
    {
      "name": "GatewayContracts"
    },
    {
      "name": "GatewayHostnameConfigurationContracts"
    },
    {
      "name": "GatewayCertificateAuthorityContracts"
    },
    {
      "name": "GroupContracts"
    },
    {
      "name": "WorkspaceGroup"
    },
    {
      "name": "IdentityProviderContracts"
    },
    {
      "name": "LoggerContracts"
    },
    {
      "name": "WorkspaceLogger"
    },
    {
      "name": "NamedValueContracts"
    },
    {
      "name": "WorkspaceNamedValue"
    },
    {
      "name": "NotificationContracts"
    },
    {
      "name": "WorkspaceNotification"
    },
    {
      "name": "OpenidConnectProviderContracts"
    },
    {
      "name": "PolicyFragmentContracts"
    },
    {
      "name": "WorkspacePolicyFragment"
    },
    {
      "name": "PolicyRestrictionContracts"
    },
    {
      "name": "PortalConfigContracts"
    },
    {
      "name": "ClientApplicationContracts"
    },
    {
      "name": "ClientApplicationProductLinkContracts"
    },
    {
      "name": "PortalRevisionContracts"
    },
    {
      "name": "SignInSettings"
    },
    {
      "name": "SignUpSettings"
    },
    {
      "name": "DelegationSettings"
    },
    {
      "name": "PrivateEndpointConnections"
    },
    {
      "name": "PrivateLinkResources"
    },
    {
      "name": "ProductContracts"
    },
    {
      "name": "WorkspaceProduct"
    },
    {
      "name": "ProductApiLinkContracts"
    },
    {
      "name": "WorkspaceProductApiLink"
    },
    {
      "name": "ProductGroupLinkContracts"
    },
    {
      "name": "WorkspaceProductGroupLink"
    },
    {
      "name": "GlobalSchemaContracts"
    },
    {
      "name": "WorkspaceGlobalSchema"
    },
    {
      "name": "TenantSettingsContracts"
    },
    {
      "name": "SubscriptionContracts"
    },
    {
      "name": "UserSubscription"
    },
    {
      "name": "WorkspaceSubscription"
    },
    {
      "name": "TagApiLinkContracts"
    },
    {
      "name": "WorkspaceTagApiLink"
    },
    {
      "name": "TagOperationLinkContracts"
    },
    {
      "name": "WorkspaceTagOperationLink"
    },
    {
      "name": "TagProductLinkContracts"
    },
    {
      "name": "WorkspaceTagProductLink"
    },
    {
      "name": "AccessInformationContracts"
    },
    {
      "name": "UserContracts"
    },
    {
      "name": "ApiManagementWorkspaceLinksResources"
    },
    {
      "name": "WorkspaceContracts"
    }
  ],
  "paths": {
    "/providers/Microsoft.ApiManagement/operations": {
      "get": {
        "operationId": "ApiManagementOperations_List",
        "tags": [
          "ApiManagementOperations",
          "Operations"
        ],
        "description": "Lists all of the available REST API operations of the Microsoft.ApiManagement provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListOperations": {
            "$ref": "./examples/ApiManagementListOperations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/checkNameAvailability": {
      "post": {
        "operationId": "ApiManagementService_CheckNameAvailability",
        "description": "Checks availability and correctness of a name for an API Management service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceCheckNameAvailabilityParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceNameAvailabilityResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementServiceCheckNameAvailability": {
            "$ref": "./examples/ApiManagementServiceCheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/deletedservices": {
      "get": {
        "operationId": "DeletedServices_ListBySubscription",
        "description": "Lists all soft-deleted services available for undelete for the given subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DeletedServicesCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeletedServicesListBySubscription": {
            "$ref": "./examples/ApiManagementDeletedServicesListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/gateways": {
      "get": {
        "operationId": "ApiGateway_List",
        "tags": [
          "ApiManagementGatewayResources"
        ],
        "description": "List all API Management gateways within a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListGatewaysBySubscription": {
            "$ref": "./examples/ApiManagementListGatewaysBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/getDomainOwnershipIdentifier": {
      "post": {
        "operationId": "ApiManagementService_GetDomainOwnershipIdentifier",
        "description": "Get the custom domain ownership identifier for an API Management service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceGetDomainOwnershipIdentifierResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementServiceGetDomainOwnershipIdentifier": {
            "$ref": "./examples/ApiManagementServiceGetDomainOwnershipIdentifier.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/locations/{location}/deletedservices/{serviceName}": {
      "get": {
        "operationId": "DeletedServices_GetByName",
        "tags": [
          "DeletedServiceContracts"
        ],
        "description": "Get soft-deleted Api Management Service by name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeletedServiceContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetDeletedServiceByName": {
            "$ref": "./examples/ApiManagementGetDeletedServiceByName.json"
          }
        }
      },
      "delete": {
        "operationId": "DeletedServices_Purge",
        "tags": [
          "DeletedServiceContracts"
        ],
        "description": "Purges Api Management Service (deletes it with no option to undelete).",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/DeletedServiceContract"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeletedServicesPurge": {
            "$ref": "./examples/ApiManagementDeletedServicesPurge.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/locations/{location}/operationResults/{operationId}": {
      "get": {
        "operationId": "OperationsResults_Get",
        "description": "Returns operation results for long running operations executing DELETE or PATCH on the resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The ID of an ongoing async operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URL for determining when an operation has completed."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetOperationResult": {
            "$ref": "./examples/ApiManagementGetOperationResult.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/locations/{location}/operationStatuses/{operationId}": {
      "get": {
        "operationId": "OperationStatus_Get",
        "description": "Returns the current status of an async operation.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The ID of an ongoing async operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationStatusResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get operation status": {
            "$ref": "./examples/ApiManagementGetOperationStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/service": {
      "get": {
        "operationId": "ApiManagementService_List",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Lists all API Management services within an Azure subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListServiceBySubscription": {
            "$ref": "./examples/ApiManagementListServiceBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/skus": {
      "get": {
        "operationId": "ApiManagementSkus_List",
        "description": "Gets the list of Microsoft.ApiManagement SKUs available for your Subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiManagementSkusResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Lists all available Resource SKUs": {
            "$ref": "./examples/ApiManagementListSku.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/gateways": {
      "get": {
        "operationId": "ApiGateway_ListByResourceGroup",
        "tags": [
          "ApiManagementGatewayResources"
        ],
        "description": "List all API Management gateways within a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListGatewaysBySubscriptionAndResourceGroup": {
            "$ref": "./examples/ApiManagementListGatewaysBySubscriptionAndResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/gateways/{gatewayName}": {
      "get": {
        "operationId": "ApiGateway_Get",
        "tags": [
          "ApiManagementGatewayResources"
        ],
        "description": "Gets an API Management gateway resource description.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of the API Management gateway.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 45,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGatewayGetGateway": {
            "$ref": "./examples/ApiManagementGatewayGetGateway.json"
          }
        }
      },
      "put": {
        "operationId": "ApiGateway_CreateOrUpdate",
        "tags": [
          "ApiManagementGatewayResources"
        ],
        "description": "Creates or updates an API Management gateway. This is long running operation and could take several minutes to complete.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of the API Management gateway.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 45,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate API Management gateway operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ApiManagementGatewayResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayResource"
            }
          },
          "201": {
            "description": "Resource 'ApiManagementGatewayResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateStandardGateway": {
            "$ref": "./examples/ApiManagementCreateStandardGateway.json"
          },
          "ApiManagementCreateWorkspacePremiumGateway": {
            "$ref": "./examples/ApiManagementCreateWorkspacePremiumGateway.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ApiManagementGatewayResource"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ApiGateway_Update",
        "tags": [
          "ApiManagementGatewayResources"
        ],
        "description": "Updates an existing API Management gateway.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of the API Management gateway.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 45,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate API Management gateway operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateStandardGateway": {
            "$ref": "./examples/ApiManagementUpdateStandardGateway.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ApiManagementGatewayResource"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ApiGateway_Delete",
        "tags": [
          "ApiManagementGatewayResources"
        ],
        "description": "Deletes an existing API Management gateway.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of the API Management gateway.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 45,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGatewayDeleteGateway": {
            "$ref": "./examples/ApiManagementGatewayDeleteGateway.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/gateways/{gatewayName}/configConnections": {
      "get": {
        "operationId": "ApiGatewayConfigConnection_ListByGateway",
        "tags": [
          "ApiManagementGatewayConfigConnectionResources"
        ],
        "description": "List all API Management gateway config connections within a gateway.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of the API Management gateway.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 45,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayConfigConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListGatewayConfigConnection": {
            "$ref": "./examples/ApiManagementListGatewayConfigConnection.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/gateways/{gatewayName}/configConnections/{configConnectionName}": {
      "get": {
        "operationId": "ApiGatewayConfigConnection_Get",
        "tags": [
          "ApiManagementGatewayConfigConnectionResources"
        ],
        "description": "Gets an API Management gateway config connection resource description.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of the API Management gateway.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 45,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "configConnectionName",
            "in": "path",
            "description": "The name of the API Management gateway config connection.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 30,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayConfigConnectionResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetGatewayConfigConnection": {
            "$ref": "./examples/ApiManagementGetGatewayConfigConnection.json"
          }
        }
      },
      "put": {
        "operationId": "ApiGatewayConfigConnection_CreateOrUpdate",
        "tags": [
          "ApiManagementGatewayConfigConnectionResources"
        ],
        "description": "Creates or updates an API Management gateway config connection. This is long running operation and could take several minutes to complete.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of the API Management gateway.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 45,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "configConnectionName",
            "in": "path",
            "description": "The name of the API Management gateway config connection.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 30,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate API Management gateway config connection operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayConfigConnectionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ApiManagementGatewayConfigConnectionResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayConfigConnectionResource"
            }
          },
          "201": {
            "description": "Resource 'ApiManagementGatewayConfigConnectionResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApiManagementGatewayConfigConnectionResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateGatewayConfigConnection": {
            "$ref": "./examples/ApiManagementCreateGatewayConfigConnection.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/ApiManagementGatewayConfigConnectionResource"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ApiGatewayConfigConnection_Delete",
        "tags": [
          "ApiManagementGatewayConfigConnectionResources"
        ],
        "description": "Deletes an existing API Management gateway config connection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of the API Management gateway.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 45,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "configConnectionName",
            "in": "path",
            "description": "The name of the API Management gateway config connection.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 30,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGatewayDeleteGateway": {
            "$ref": "./examples/ApiManagementDeleteGatewayConfigConnection.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/gateways/{gatewayName}/skus": {
      "get": {
        "operationId": "ApiManagementGatewaySkus_ListAvailableSkus",
        "tags": [
          "ApiManagementGatewayResources"
        ],
        "summary": "Gets available SKUs for API Management gateway",
        "description": "Gets all available SKU for a given API Management gateway",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of the API Management gateway.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 45,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GatewayResourceSkuResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListSKUs-Gateways": {
            "$ref": "./examples/ApiManagementListSKUs-Gateways.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service": {
      "get": {
        "operationId": "ApiManagementService_ListByResourceGroup",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "List all API Management services within a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListServiceBySubscriptionAndResourceGroup": {
            "$ref": "./examples/ApiManagementListServiceBySubscriptionAndResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}": {
      "get": {
        "operationId": "ApiManagementService_Get",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Gets an API Management service resource description.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementServiceGetMultiRegionInternalVnet": {
            "$ref": "./examples/ApiManagementServiceGetMultiRegionInternalVnet.json"
          },
          "ApiManagementServiceGetService": {
            "$ref": "./examples/ApiManagementServiceGetService.json"
          },
          "ApiManagementServiceGetServiceHavingMsi": {
            "$ref": "./examples/ApiManagementServiceGetServiceHavingMsi.json"
          }
        }
      },
      "put": {
        "operationId": "ApiManagementService_CreateOrUpdate",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Creates or updates an API Management service. This is long running operation and could take several minutes to complete.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate API Management service operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ApiManagementServiceResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            }
          },
          "201": {
            "description": "Resource 'ApiManagementServiceResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateMultiRegionServiceWithCustomHostname": {
            "$ref": "./examples/ApiManagementCreateMultiRegionServiceWithCustomHostname.json"
          },
          "ApiManagementCreateService": {
            "$ref": "./examples/ApiManagementCreateService.json"
          },
          "ApiManagementCreateServiceHavingMsi": {
            "$ref": "./examples/ApiManagementCreateServiceHavingMsi.json"
          },
          "ApiManagementCreateServiceInVnetWithPublicIP": {
            "$ref": "./examples/ApiManagementCreateServiceInVnetWithPublicIP.json"
          },
          "ApiManagementCreateServiceInZones": {
            "$ref": "./examples/ApiManagementCreateServiceInZones.json"
          },
          "ApiManagementCreateServiceSkuv2Service": {
            "$ref": "./examples/ApiManagementCreateServiceSkuv2Service.json"
          },
          "ApiManagementCreateServiceWithCustomHostnameKeyVault": {
            "$ref": "./examples/ApiManagementCreateServiceWithCustomHostnameKeyVault.json"
          },
          "ApiManagementCreateServiceWithDeveloperPortal": {
            "$ref": "./examples/ApiManagementCreateServiceWithDeveloperPortal.json"
          },
          "ApiManagementCreateServiceWithNatGatewayEnabled": {
            "$ref": "./examples/ApiManagementCreateServiceWithNatGatewayEnabled.json"
          },
          "ApiManagementCreateServiceWithSystemCertificates": {
            "$ref": "./examples/ApiManagementCreateServiceWithSystemCertificates.json"
          },
          "ApiManagementCreateServiceWithUserAssignedIdentity": {
            "$ref": "./examples/ApiManagementCreateServiceWithUserAssignedIdentity.json"
          },
          "ApiManagementCreateServiceWithoutLegacyConfigurationApi": {
            "$ref": "./examples/ApiManagementCreateServiceWithoutLegacyConfigurationApi.json"
          },
          "ApiManagementUndelete": {
            "$ref": "./examples/ApiManagementUndelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ApiManagementServiceResource"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ApiManagementService_Update",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Updates an existing API Management service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate API Management service operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateServiceDisableTls10": {
            "$ref": "./examples/ApiManagementUpdateServiceDisableTls10.json"
          },
          "ApiManagementUpdateServicePublisherDetails": {
            "$ref": "./examples/ApiManagementUpdateServicePublisherDetails.json"
          },
          "ApiManagementUpdateServiceToNewVnetAndAvailabilityZones": {
            "$ref": "./examples/ApiManagementUpdateServiceToNewVnetAndAZs.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ApiManagementServiceResource"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ApiManagementService_Delete",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Deletes an existing API Management service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementServiceDeleteService": {
            "$ref": "./examples/ApiManagementServiceDeleteService.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/allPolicies": {
      "get": {
        "operationId": "AllPolicies_ListByService",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Status of all policies of API Management services.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AllPoliciesCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListPolicyRestrictions": {
            "$ref": "./examples/ApiManagementAllPolicies.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apiVersionSets": {
      "get": {
        "operationId": "ApiVersionSet_ListByService",
        "tags": [
          "ApiVersionSetContracts"
        ],
        "description": "Lists a collection of API Version Sets in the specified service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiVersionSetCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListApiVersionSets": {
            "$ref": "./examples/ApiManagementListApiVersionSets.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apiVersionSets/{versionSetId}": {
      "get": {
        "operationId": "ApiVersionSet_Get",
        "tags": [
          "ApiVersionSetContracts"
        ],
        "description": "Gets the details of the Api Version Set specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "versionSetId",
            "in": "path",
            "description": "Api Version Set identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ApiVersionSetContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetApiVersionSet": {
            "$ref": "./examples/ApiManagementGetApiVersionSet.json"
          }
        }
      },
      "put": {
        "operationId": "ApiVersionSet_CreateOrUpdate",
        "tags": [
          "ApiVersionSetContracts"
        ],
        "description": "Creates or Updates a Api Version Set.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "versionSetId",
            "in": "path",
            "description": "Api Version Set identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiVersionSetContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ApiVersionSetContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/ApiVersionSetContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateApiVersionSet": {
            "$ref": "./examples/ApiManagementCreateApiVersionSet.json"
          }
        }
      },
      "patch": {
        "operationId": "ApiVersionSet_Update",
        "tags": [
          "ApiVersionSetContracts"
        ],
        "description": "Updates the details of the Api VersionSet specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "versionSetId",
            "in": "path",
            "description": "Api Version Set identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiVersionSetUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ApiVersionSetContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateApiVersionSet": {
            "$ref": "./examples/ApiManagementUpdateApiVersionSet.json"
          }
        }
      },
      "delete": {
        "operationId": "ApiVersionSet_Delete",
        "tags": [
          "ApiVersionSetContracts"
        ],
        "description": "Deletes specific Api Version Set.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "versionSetId",
            "in": "path",
            "description": "Api Version Set identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteApiVersionSet": {
            "$ref": "./examples/ApiManagementDeleteApiVersionSet.json"
          }
        }
      },
      "head": {
        "operationId": "ApiVersionSet_GetEntityTag",
        "tags": [
          "ApiVersionSetContracts"
        ],
        "description": "Gets the entity state (Etag) version of the Api Version Set specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "versionSetId",
            "in": "path",
            "description": "Api Version Set identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadApiVersionSet": {
            "$ref": "./examples/ApiManagementHeadApiVersionSet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis": {
      "get": {
        "operationId": "Api_ListByService",
        "tags": [
          "ApiContracts"
        ],
        "description": "Lists all APIs of the API Management service instance.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-create-apis"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| isCurrent | filter | eq, ne |  |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Include tags in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expandApiVersionSet",
            "in": "query",
            "description": "Include full ApiVersionSet resource in response",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListApis": {
            "$ref": "./examples/ApiManagementListApis.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}": {
      "get": {
        "operationId": "Api_Get",
        "tags": [
          "ApiContracts"
        ],
        "description": "Gets the details of the API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ApiContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetApiContract": {
            "$ref": "./examples/ApiManagementGetApiContract.json"
          },
          "ApiManagementGetApiRevisionContract": {
            "$ref": "./examples/ApiManagementGetApiRevision.json"
          }
        }
      },
      "put": {
        "operationId": "Api_CreateOrUpdate",
        "tags": [
          "ApiContracts"
        ],
        "description": "Creates new or updates existing specified API of the API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiCreateOrUpdateParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ApiContract"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/ApiContract"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateApi": {
            "$ref": "./examples/ApiManagementCreateApi.json"
          },
          "ApiManagementCreateApiClone": {
            "$ref": "./examples/ApiManagementCreateApiClone.json"
          },
          "ApiManagementCreateApiNewVersionUsingExistingApi": {
            "$ref": "./examples/ApiManagementCreateApiNewVersionUsingExistingApi.json"
          },
          "ApiManagementCreateApiRevisionFromExistingApi": {
            "$ref": "./examples/ApiManagementCreateApiRevisionFromExistingApi.json"
          },
          "ApiManagementCreateApiUsingImportOverrideServiceUrl": {
            "$ref": "./examples/ApiManagementCreateApiUsingImportOverrideServiceUrl.json"
          },
          "ApiManagementCreateApiUsingOai3Import": {
            "$ref": "./examples/ApiManagementCreateApiUsingOai3Import.json"
          },
          "ApiManagementCreateApiUsingOai3ImportWithTranslateRequiredQueryParametersConduct": {
            "$ref": "./examples/ApiManagementCreateApiUsingOai3ImportWithTranslateRequiredQueryParametersConduct.json"
          },
          "ApiManagementCreateApiUsingSwaggerImport": {
            "$ref": "./examples/ApiManagementCreateApiUsingSwaggerImport.json"
          },
          "ApiManagementCreateApiUsingWadlImport": {
            "$ref": "./examples/ApiManagementCreateApiUsingWadlImport.json"
          },
          "ApiManagementCreateApiWithMultipleAuthServers": {
            "$ref": "./examples/ApiManagementCreateApiWithMultipleAuthServers.json"
          },
          "ApiManagementCreateApiWithMultipleOpenIdConnectProviders": {
            "$ref": "./examples/ApiManagementCreateApiWithMultipleOpenIdConnectProviders.json"
          },
          "ApiManagementCreateApiWithOpenIdConnect": {
            "$ref": "./examples/ApiManagementCreateApiWithOpenIdConnect.json"
          },
          "ApiManagementCreateGraphQLApi": {
            "$ref": "./examples/ApiManagementCreateGraphQLApi.json"
          },
          "ApiManagementCreateGrpcApi": {
            "$ref": "./examples/ApiManagementCreateGrpcApi.json"
          },
          "ApiManagementCreateODataApi": {
            "$ref": "./examples/ApiManagementCreateODataApi.json"
          },
          "ApiManagementCreateSoapPassThroughApiUsingWsdlImport": {
            "$ref": "./examples/ApiManagementCreateSoapPassThroughApiUsingWsdlImport.json"
          },
          "ApiManagementCreateSoapToRestApiUsingWsdlImport": {
            "$ref": "./examples/ApiManagementCreateSoapToRestApiUsingWsdlImport.json"
          },
          "ApiManagementCreateWebSocketApi": {
            "$ref": "./examples/ApiManagementCreateWebsocketApi.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ApiContract"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Api_Update",
        "tags": [
          "ApiContracts"
        ],
        "description": "Updates the specified API of the API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "API Update Contract parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiUpdateContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ApiContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateApi": {
            "$ref": "./examples/ApiManagementUpdateApi.json"
          }
        }
      },
      "delete": {
        "operationId": "Api_Delete",
        "tags": [
          "ApiContracts"
        ],
        "description": "Deletes the specified API of the API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "deleteRevisions",
            "in": "query",
            "description": "Delete all revisions of the Api.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "204": {
            "description": "Operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteApi": {
            "$ref": "./examples/ApiManagementDeleteApi.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "head": {
        "operationId": "Api_GetEntityTag",
        "tags": [
          "ApiContracts"
        ],
        "description": "Gets the entity state (Etag) version of the API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadApi": {
            "$ref": "./examples/ApiManagementHeadApi.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/diagnostics": {
      "get": {
        "operationId": "ApiDiagnostic_ListByService",
        "tags": [
          "DiagnosticContracts"
        ],
        "description": "Lists all diagnostics of an API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DiagnosticCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListApiDiagnostics": {
            "$ref": "./examples/ApiManagementListApiDiagnostics.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/diagnostics/{diagnosticId}": {
      "get": {
        "operationId": "ApiDiagnostic_Get",
        "tags": [
          "DiagnosticContracts"
        ],
        "description": "Gets the details of the Diagnostic for an API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "diagnosticId",
            "in": "path",
            "description": "Diagnostic identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetApiDiagnostic": {
            "$ref": "./examples/ApiManagementGetApiDiagnostic.json"
          }
        }
      },
      "put": {
        "operationId": "ApiDiagnostic_CreateOrUpdate",
        "tags": [
          "DiagnosticContracts"
        ],
        "description": "Creates a new Diagnostic for an API or updates an existing one.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "diagnosticId",
            "in": "path",
            "description": "Diagnostic identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiagnosticContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateApiDiagnostic": {
            "$ref": "./examples/ApiManagementCreateApiDiagnostic.json"
          }
        }
      },
      "patch": {
        "operationId": "ApiDiagnostic_Update",
        "tags": [
          "DiagnosticContracts"
        ],
        "description": "Updates the details of the Diagnostic for an API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "diagnosticId",
            "in": "path",
            "description": "Diagnostic identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Diagnostic Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiagnosticContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateApiDiagnostic": {
            "$ref": "./examples/ApiManagementUpdateApiDiagnostic.json"
          }
        }
      },
      "delete": {
        "operationId": "ApiDiagnostic_Delete",
        "tags": [
          "DiagnosticContracts"
        ],
        "description": "Deletes the specified Diagnostic from an API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "diagnosticId",
            "in": "path",
            "description": "Diagnostic identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteApiDiagnostic": {
            "$ref": "./examples/ApiManagementDeleteApiDiagnostic.json"
          }
        }
      },
      "head": {
        "operationId": "ApiDiagnostic_GetEntityTag",
        "tags": [
          "DiagnosticContracts"
        ],
        "description": "Gets the entity state (Etag) version of the Diagnostic for an API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "diagnosticId",
            "in": "path",
            "description": "Diagnostic identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadApiDiagnostic": {
            "$ref": "./examples/ApiManagementHeadApiDiagnostic.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues": {
      "get": {
        "operationId": "ApiIssue_ListByService",
        "tags": [
          "IssueContracts"
        ],
        "description": "Lists all issues associated with the specified API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "expandCommentsAttachments",
            "in": "query",
            "description": "Expand the comment attachments.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IssueCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListApiIssues": {
            "$ref": "./examples/ApiManagementListApiIssues.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}": {
      "get": {
        "operationId": "ApiIssue_Get",
        "tags": [
          "IssueContracts"
        ],
        "description": "Gets the details of the Issue for an API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "issueId",
            "in": "path",
            "description": "Issue identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "expandCommentsAttachments",
            "in": "query",
            "description": "Expand the comment attachments.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/IssueContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetApiIssue": {
            "$ref": "./examples/ApiManagementGetApiIssue.json"
          }
        }
      },
      "put": {
        "operationId": "ApiIssue_CreateOrUpdate",
        "tags": [
          "IssueContracts"
        ],
        "description": "Creates a new Issue for an API or updates an existing one.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "issueId",
            "in": "path",
            "description": "Issue identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/IssueContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/IssueContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateApiIssue": {
            "$ref": "./examples/ApiManagementCreateApiIssue.json"
          }
        }
      },
      "patch": {
        "operationId": "ApiIssue_Update",
        "tags": [
          "IssueContracts"
        ],
        "description": "Updates an existing issue for an API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "issueId",
            "in": "path",
            "description": "Issue identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueUpdateContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/IssueContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateApiIssue": {
            "$ref": "./examples/ApiManagementUpdateApiIssue.json"
          }
        }
      },
      "delete": {
        "operationId": "ApiIssue_Delete",
        "tags": [
          "IssueContracts"
        ],
        "description": "Deletes the specified Issue from an API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "issueId",
            "in": "path",
            "description": "Issue identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteApiIssue": {
            "$ref": "./examples/ApiManagementDeleteApiIssue.json"
          }
        }
      },
      "head": {
        "operationId": "ApiIssue_GetEntityTag",
        "tags": [
          "IssueContracts"
        ],
        "description": "Gets the entity state (Etag) version of the Issue for an API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "issueId",
            "in": "path",
            "description": "Issue identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadApiIssue": {
            "$ref": "./examples/ApiManagementHeadApiIssue.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/attachments": {
      "get": {
        "operationId": "ApiIssueAttachment_ListByService",
        "tags": [
          "IssueAttachmentContracts"
        ],
        "description": "Lists all attachments for the Issue associated with the specified API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "issueId",
            "in": "path",
            "description": "Issue identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IssueAttachmentCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListApiIssueAttachments": {
            "$ref": "./examples/ApiManagementListApiIssueAttachments.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/attachments/{attachmentId}": {
      "get": {
        "operationId": "ApiIssueAttachment_Get",
        "tags": [
          "IssueAttachmentContracts"
        ],
        "description": "Gets the details of the issue Attachment for an API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "issueId",
            "in": "path",
            "description": "Issue identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "Attachment identifier within an Issue. Must be unique in the current Issue.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/IssueAttachmentContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetApiIssueAttachment": {
            "$ref": "./examples/ApiManagementGetApiIssueAttachment.json"
          }
        }
      },
      "put": {
        "operationId": "ApiIssueAttachment_CreateOrUpdate",
        "tags": [
          "IssueAttachmentContracts"
        ],
        "description": "Creates a new Attachment for the Issue in an API or updates an existing one.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "issueId",
            "in": "path",
            "description": "Issue identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "Attachment identifier within an Issue. Must be unique in the current Issue.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueAttachmentContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/IssueAttachmentContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/IssueAttachmentContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateApiIssueAttachment": {
            "$ref": "./examples/ApiManagementCreateApiIssueAttachment.json"
          }
        }
      },
      "delete": {
        "operationId": "ApiIssueAttachment_Delete",
        "tags": [
          "IssueAttachmentContracts"
        ],
        "description": "Deletes the specified comment from an Issue.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "issueId",
            "in": "path",
            "description": "Issue identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "Attachment identifier within an Issue. Must be unique in the current Issue.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteApiIssueAttachment": {
            "$ref": "./examples/ApiManagementDeleteApiIssueAttachment.json"
          }
        }
      },
      "head": {
        "operationId": "ApiIssueAttachment_GetEntityTag",
        "tags": [
          "IssueAttachmentContracts"
        ],
        "description": "Gets the entity state (Etag) version of the issue Attachment for an API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "issueId",
            "in": "path",
            "description": "Issue identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "Attachment identifier within an Issue. Must be unique in the current Issue.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadApiIssueAttachment": {
            "$ref": "./examples/ApiManagementHeadApiIssueAttachment.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/comments": {
      "get": {
        "operationId": "ApiIssueComment_ListByService",
        "tags": [
          "IssueCommentContracts"
        ],
        "description": "Lists all comments for the Issue associated with the specified API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "issueId",
            "in": "path",
            "description": "Issue identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IssueCommentCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListApiIssueComments": {
            "$ref": "./examples/ApiManagementListApiIssueComments.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/issues/{issueId}/comments/{commentId}": {
      "get": {
        "operationId": "ApiIssueComment_Get",
        "tags": [
          "IssueCommentContracts"
        ],
        "description": "Gets the details of the issue Comment for an API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "issueId",
            "in": "path",
            "description": "Issue identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "Comment identifier within an Issue. Must be unique in the current Issue.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/IssueCommentContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetApiIssueComment": {
            "$ref": "./examples/ApiManagementGetApiIssueComment.json"
          }
        }
      },
      "put": {
        "operationId": "ApiIssueComment_CreateOrUpdate",
        "tags": [
          "IssueCommentContracts"
        ],
        "description": "Creates a new Comment for the Issue in an API or updates an existing one.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "issueId",
            "in": "path",
            "description": "Issue identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "Comment identifier within an Issue. Must be unique in the current Issue.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueCommentContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/IssueCommentContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/IssueCommentContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateApiIssueComment": {
            "$ref": "./examples/ApiManagementCreateApiIssueComment.json"
          }
        }
      },
      "delete": {
        "operationId": "ApiIssueComment_Delete",
        "tags": [
          "IssueCommentContracts"
        ],
        "description": "Deletes the specified comment from an Issue.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "issueId",
            "in": "path",
            "description": "Issue identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "Comment identifier within an Issue. Must be unique in the current Issue.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteApiIssueComment": {
            "$ref": "./examples/ApiManagementDeleteApiIssueComment.json"
          }
        }
      },
      "head": {
        "operationId": "ApiIssueComment_GetEntityTag",
        "tags": [
          "IssueCommentContracts"
        ],
        "description": "Gets the entity state (Etag) version of the issue Comment for an API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "issueId",
            "in": "path",
            "description": "Issue identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "Comment identifier within an Issue. Must be unique in the current Issue.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadApiIssueComment": {
            "$ref": "./examples/ApiManagementHeadApiIssueComment.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations": {
      "get": {
        "operationId": "ApiOperation_ListByApi",
        "tags": [
          "OperationContracts"
        ],
        "description": "Lists a collection of the operations for the specified API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Include tags in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListApiOperations": {
            "$ref": "./examples/ApiManagementListApiOperations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}": {
      "get": {
        "operationId": "ApiOperation_Get",
        "tags": [
          "OperationContracts"
        ],
        "description": "Gets the details of the API Operation specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetApiOperation": {
            "$ref": "./examples/ApiManagementGetApiOperation.json"
          },
          "ApiManagementGetApiOperationPetStore": {
            "$ref": "./examples/ApiManagementGetApiOperationPetStore.json"
          }
        }
      },
      "put": {
        "operationId": "ApiOperation_CreateOrUpdate",
        "tags": [
          "OperationContracts"
        ],
        "description": "Creates a new operation in the API or updates an existing one.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OperationContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/OperationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateApiOperation": {
            "$ref": "./examples/ApiManagementCreateApiOperation.json"
          }
        }
      },
      "patch": {
        "operationId": "ApiOperation_Update",
        "tags": [
          "OperationContracts"
        ],
        "description": "Updates the details of the operation in the API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "API Operation Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OperationUpdateContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateApiOperation": {
            "$ref": "./examples/ApiManagementUpdateApiOperation.json"
          }
        }
      },
      "delete": {
        "operationId": "ApiOperation_Delete",
        "tags": [
          "OperationContracts"
        ],
        "description": "Deletes the specified operation in the API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteApiOperation": {
            "$ref": "./examples/ApiManagementDeleteApiOperation.json"
          }
        }
      },
      "head": {
        "operationId": "ApiOperation_GetEntityTag",
        "tags": [
          "OperationContracts"
        ],
        "description": "Gets the entity state (Etag) version of the API operation specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadApiOperation": {
            "$ref": "./examples/ApiManagementHeadApiOperation.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/policies": {
      "get": {
        "operationId": "ApiOperationPolicy_ListByOperation",
        "tags": [
          "PolicyContracts"
        ],
        "description": "Get the list of policy configuration at the API Operation level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListApiOperationPolicies": {
            "$ref": "./examples/ApiManagementListApiOperationPolicies.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/policies/{policyId}": {
      "get": {
        "operationId": "ApiOperationPolicy_Get",
        "tags": [
          "PolicyContracts"
        ],
        "description": "Get the policy configuration at the API Operation level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Policy Export Format.",
            "required": false,
            "type": "string",
            "default": "xml",
            "enum": [
              "xml",
              "rawxml"
            ],
            "x-ms-enum": {
              "name": "PolicyExportFormat",
              "modelAsString": true,
              "values": [
                {
                  "name": "xml",
                  "value": "xml",
                  "description": "The contents are inline and Content type is an XML document."
                },
                {
                  "name": "rawxml",
                  "value": "rawxml",
                  "description": "The contents are inline and Content type is a non XML encoded policy document."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetApiOperationPolicy": {
            "$ref": "./examples/ApiManagementGetApiOperationPolicy.json"
          }
        }
      },
      "put": {
        "operationId": "ApiOperationPolicy_CreateOrUpdate",
        "tags": [
          "PolicyContracts"
        ],
        "description": "Creates or updates policy configuration for the API Operation level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The policy contents to apply.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateApiOperationPolicy": {
            "$ref": "./examples/ApiManagementCreateApiOperationPolicy.json"
          }
        }
      },
      "delete": {
        "operationId": "ApiOperationPolicy_Delete",
        "tags": [
          "PolicyContracts"
        ],
        "description": "Deletes the policy configuration at the Api Operation.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteApiOperationPolicy": {
            "$ref": "./examples/ApiManagementDeleteApiOperationPolicy.json"
          }
        }
      },
      "head": {
        "operationId": "ApiOperationPolicy_GetEntityTag",
        "tags": [
          "PolicyContracts"
        ],
        "description": "Gets the entity state (Etag) version of the API operation policy specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadApiOperationPolicy": {
            "$ref": "./examples/ApiManagementHeadApiOperationPolicy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/tags": {
      "get": {
        "operationId": "Tag_ListByOperation",
        "tags": [
          "TagContracts"
        ],
        "description": "Lists all Tags associated with the Operation.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListApiOperationTags": {
            "$ref": "./examples/ApiManagementListApiOperationTags.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operations/{operationId}/tags/{tagId}": {
      "get": {
        "operationId": "Tag_GetByOperation",
        "tags": [
          "TagContracts"
        ],
        "description": "Get tag associated with the Operation.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetApiOperationTag": {
            "$ref": "./examples/ApiManagementGetApiOperationTag.json"
          }
        }
      },
      "put": {
        "operationId": "Tag_AssignToOperation",
        "tags": [
          "TagContracts"
        ],
        "description": "Assign tag to the Operation.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'TagContract' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/TagContract"
            }
          },
          "201": {
            "description": "Resource 'TagContract' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/TagContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateApiOperationTag": {
            "$ref": "./examples/ApiManagementCreateApiOperationTag.json"
          }
        }
      },
      "delete": {
        "operationId": "Tag_DetachFromOperation",
        "tags": [
          "TagContracts"
        ],
        "description": "Detach the tag from the Operation.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteApiOperationTag": {
            "$ref": "./examples/ApiManagementDeleteApiOperationTag.json"
          }
        }
      },
      "head": {
        "operationId": "Tag_GetEntityStateByOperation",
        "tags": [
          "TagContracts"
        ],
        "description": "Gets the entity state version of the tag specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadApiOperationTag": {
            "$ref": "./examples/ApiManagementHeadApiOperationTag.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/operationsByTags": {
      "get": {
        "operationId": "Operation_ListByTags",
        "tags": [
          "ApiContracts"
        ],
        "description": "Lists a collection of operations associated with tags.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "includeNotTaggedOperations",
            "in": "query",
            "description": "Include not tagged Operations.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagResourceCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListApiOperationsByTags": {
            "$ref": "./examples/ApiManagementListApiOperationsByTags.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policies": {
      "get": {
        "operationId": "ApiPolicy_ListByApi",
        "tags": [
          "ApiPolicy"
        ],
        "description": "Get the policy configuration at the API level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListApiPolicies": {
            "$ref": "./examples/ApiManagementListApiPolicies.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/policies/{policyId}": {
      "get": {
        "operationId": "ApiPolicy_Get",
        "tags": [
          "ApiPolicy"
        ],
        "description": "Get the policy configuration at the API level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Policy Export Format.",
            "required": false,
            "type": "string",
            "default": "xml",
            "enum": [
              "xml",
              "rawxml"
            ],
            "x-ms-enum": {
              "name": "PolicyExportFormat",
              "modelAsString": true,
              "values": [
                {
                  "name": "xml",
                  "value": "xml",
                  "description": "The contents are inline and Content type is an XML document."
                },
                {
                  "name": "rawxml",
                  "value": "rawxml",
                  "description": "The contents are inline and Content type is a non XML encoded policy document."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetApiPolicy": {
            "$ref": "./examples/ApiManagementGetApiPolicy.json"
          }
        }
      },
      "put": {
        "operationId": "ApiPolicy_CreateOrUpdate",
        "tags": [
          "ApiPolicy"
        ],
        "description": "Creates or updates policy configuration for the API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The policy contents to apply.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateApiPolicy": {
            "$ref": "./examples/ApiManagementCreateApiPolicy.json"
          },
          "ApiManagementCreateApiPolicyNonXmlEncoded": {
            "$ref": "./examples/ApiManagementCreateApiPolicyNonXmlEncoded.json"
          }
        }
      },
      "delete": {
        "operationId": "ApiPolicy_Delete",
        "tags": [
          "ApiPolicy"
        ],
        "description": "Deletes the policy configuration at the Api.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteApiPolicy": {
            "$ref": "./examples/ApiManagementDeleteApiPolicy.json"
          }
        }
      },
      "head": {
        "operationId": "ApiPolicy_GetEntityTag",
        "tags": [
          "ApiPolicy"
        ],
        "description": "Gets the entity state (Etag) version of the API policy specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadApiPolicy": {
            "$ref": "./examples/ApiManagementHeadApiPolicy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/products": {
      "get": {
        "operationId": "ApiProduct_ListByApis",
        "tags": [
          "ApiContracts"
        ],
        "description": "Lists all Products, which the API is part of.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProductCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListApiProducts": {
            "$ref": "./examples/ApiManagementListApiProducts.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/releases": {
      "get": {
        "operationId": "ApiRelease_ListByService",
        "tags": [
          "ApiReleaseContracts"
        ],
        "description": "Lists all releases of an API. An API release is created when making an API Revision current. Releases are also used to rollback to previous revisions. Results will be paged and can be constrained by the $top and $skip parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| notes | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiReleaseCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListApiReleases": {
            "$ref": "./examples/ApiManagementListApiReleases.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/releases/{releaseId}": {
      "get": {
        "operationId": "ApiRelease_Get",
        "tags": [
          "ApiReleaseContracts"
        ],
        "description": "Returns the details of an API release.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "releaseId",
            "in": "path",
            "description": "Release identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ApiReleaseContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetApiRelease": {
            "$ref": "./examples/ApiManagementGetApiRelease.json"
          }
        }
      },
      "put": {
        "operationId": "ApiRelease_CreateOrUpdate",
        "tags": [
          "ApiReleaseContracts"
        ],
        "description": "Creates a new Release for the API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "releaseId",
            "in": "path",
            "description": "Release identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiReleaseContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ApiReleaseContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/ApiReleaseContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateApiRelease": {
            "$ref": "./examples/ApiManagementCreateApiRelease.json"
          }
        }
      },
      "patch": {
        "operationId": "ApiRelease_Update",
        "tags": [
          "ApiReleaseContracts"
        ],
        "description": "Updates the details of the release of the API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "releaseId",
            "in": "path",
            "description": "Release identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "API Release Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiReleaseContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ApiReleaseContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateApiRelease": {
            "$ref": "./examples/ApiManagementUpdateApiRelease.json"
          }
        }
      },
      "delete": {
        "operationId": "ApiRelease_Delete",
        "tags": [
          "ApiReleaseContracts"
        ],
        "description": "Deletes the specified release in the API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "releaseId",
            "in": "path",
            "description": "Release identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteApiRelease": {
            "$ref": "./examples/ApiManagementDeleteApiRelease.json"
          }
        }
      },
      "head": {
        "operationId": "ApiRelease_GetEntityTag",
        "tags": [
          "ApiReleaseContracts"
        ],
        "description": "Returns the etag of an API release.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "releaseId",
            "in": "path",
            "description": "Release identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadApiRelease": {
            "$ref": "./examples/ApiManagementHeadApiRelease.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/resolvers": {
      "get": {
        "operationId": "GraphQLApiResolver_ListByApi",
        "tags": [
          "ResolverContracts"
        ],
        "description": "Lists a collection of the resolvers for the specified GraphQL API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResolverCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListGraphQLApiResolvers": {
            "$ref": "./examples/ApiManagementListGraphQLApiResolvers.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/resolvers/{resolverId}": {
      "get": {
        "operationId": "GraphQLApiResolver_Get",
        "tags": [
          "ResolverContracts"
        ],
        "description": "Gets the details of the GraphQL API Resolver specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "resolverId",
            "in": "path",
            "description": "Resolver identifier within a GraphQL API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ResolverContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetGraphQLApiResolver": {
            "$ref": "./examples/ApiManagementGetGraphQLApiResolver.json"
          }
        }
      },
      "put": {
        "operationId": "GraphQLApiResolver_CreateOrUpdate",
        "tags": [
          "ResolverContracts"
        ],
        "description": "Creates a new resolver in the GraphQL API or updates an existing one.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "resolverId",
            "in": "path",
            "description": "Resolver identifier within a GraphQL API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResolverContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ResolverContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/ResolverContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateGraphQLApiResolver": {
            "$ref": "./examples/ApiManagementCreateGraphQLApiResolver.json"
          }
        }
      },
      "patch": {
        "operationId": "GraphQLApiResolver_Update",
        "tags": [
          "ResolverContracts"
        ],
        "description": "Updates the details of the resolver in the GraphQL API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "resolverId",
            "in": "path",
            "description": "Resolver identifier within a GraphQL API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "GraphQL API Resolver Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResolverUpdateContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ResolverContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateGraphQLApiResolver": {
            "$ref": "./examples/ApiManagementUpdateGraphQLApiResolver.json"
          }
        }
      },
      "delete": {
        "operationId": "GraphQLApiResolver_Delete",
        "tags": [
          "ResolverContracts"
        ],
        "description": "Deletes the specified resolver in the GraphQL API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "resolverId",
            "in": "path",
            "description": "Resolver identifier within a GraphQL API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteGraphQLApiResolver": {
            "$ref": "./examples/ApiManagementDeleteGraphQLApiResolver.json"
          }
        }
      },
      "head": {
        "operationId": "GraphQLApiResolver_GetEntityTag",
        "tags": [
          "ResolverContracts"
        ],
        "description": "Gets the entity state (Etag) version of the GraphQL API resolver specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "resolverId",
            "in": "path",
            "description": "Resolver identifier within a GraphQL API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadGraphQLApiResolver": {
            "$ref": "./examples/ApiManagementHeadGraphQLApiResolver.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/resolvers/{resolverId}/policies": {
      "get": {
        "operationId": "GraphQLApiResolverPolicy_ListByResolver",
        "tags": [
          "GraphQLApiResolverPolicy"
        ],
        "description": "Get the list of policy configuration at the GraphQL API Resolver level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "resolverId",
            "in": "path",
            "description": "Resolver identifier within a GraphQL API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListGraphQLApiResolverPolicies": {
            "$ref": "./examples/ApiManagementListGraphQLApiResolverPolicies.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/resolvers/{resolverId}/policies/{policyId}": {
      "get": {
        "operationId": "GraphQLApiResolverPolicy_Get",
        "tags": [
          "GraphQLApiResolverPolicy"
        ],
        "description": "Get the policy configuration at the GraphQL API Resolver level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "resolverId",
            "in": "path",
            "description": "Resolver identifier within a GraphQL API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Policy Export Format.",
            "required": false,
            "type": "string",
            "default": "xml",
            "enum": [
              "xml",
              "rawxml"
            ],
            "x-ms-enum": {
              "name": "PolicyExportFormat",
              "modelAsString": true,
              "values": [
                {
                  "name": "xml",
                  "value": "xml",
                  "description": "The contents are inline and Content type is an XML document."
                },
                {
                  "name": "rawxml",
                  "value": "rawxml",
                  "description": "The contents are inline and Content type is a non XML encoded policy document."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetGraphQLApiResolverPolicy": {
            "$ref": "./examples/ApiManagementGetGraphQLApiResolverPolicy.json"
          }
        }
      },
      "put": {
        "operationId": "GraphQLApiResolverPolicy_CreateOrUpdate",
        "tags": [
          "GraphQLApiResolverPolicy"
        ],
        "description": "Creates or updates policy configuration for the GraphQL API Resolver level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "resolverId",
            "in": "path",
            "description": "Resolver identifier within a GraphQL API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The policy contents to apply.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateGraphQLApiResolverPolicy": {
            "$ref": "./examples/ApiManagementCreateGraphQLApiResolverPolicy.json"
          }
        }
      },
      "delete": {
        "operationId": "GraphQLApiResolverPolicy_Delete",
        "tags": [
          "GraphQLApiResolverPolicy"
        ],
        "description": "Deletes the policy configuration at the GraphQL Api Resolver.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "resolverId",
            "in": "path",
            "description": "Resolver identifier within a GraphQL API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteGraphQLApiResolverPolicy": {
            "$ref": "./examples/ApiManagementDeleteGraphQLApiResolverPolicy.json"
          }
        }
      },
      "head": {
        "operationId": "GraphQLApiResolverPolicy_GetEntityTag",
        "tags": [
          "GraphQLApiResolverPolicy"
        ],
        "description": "Gets the entity state (Etag) version of the GraphQL API resolver policy specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "resolverId",
            "in": "path",
            "description": "Resolver identifier within a GraphQL API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadGraphQLApiResolverPolicy": {
            "$ref": "./examples/ApiManagementHeadGraphQLApiResolverPolicy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/revisions": {
      "get": {
        "operationId": "ApiRevision_ListByService",
        "tags": [
          "ApiContracts"
        ],
        "description": "Lists all revisions of an API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiRevisionCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListApiRevisions": {
            "$ref": "./examples/ApiManagementListApiRevisions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/schemas": {
      "get": {
        "operationId": "ApiSchema_ListByApi",
        "tags": [
          "SchemaContracts"
        ],
        "description": "Get the schema configuration at the API level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| contentType | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SchemaCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListApiSchemas": {
            "$ref": "./examples/ApiManagementListApiSchemas.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/schemas/{schemaId}": {
      "get": {
        "operationId": "ApiSchema_Get",
        "tags": [
          "SchemaContracts"
        ],
        "description": "Get the schema configuration at the API level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "schemaId",
            "in": "path",
            "description": "Schema id identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SchemaContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetApiSchema": {
            "$ref": "./examples/ApiManagementGetApiSchema.json"
          }
        }
      },
      "put": {
        "operationId": "ApiSchema_CreateOrUpdate",
        "tags": [
          "SchemaContracts"
        ],
        "description": "Creates or updates schema configuration for the API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "schemaId",
            "in": "path",
            "description": "Schema id identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The schema contents to apply.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchemaContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SchemaContract"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/SchemaContract"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateApiSchema": {
            "$ref": "./examples/ApiManagementCreateApiSchema.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/SchemaContract"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ApiSchema_Delete",
        "tags": [
          "SchemaContracts"
        ],
        "description": "Deletes the schema configuration at the Api.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "schemaId",
            "in": "path",
            "description": "Schema id identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "force",
            "in": "query",
            "description": "If true removes all references to the schema before deleting it.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteApiSchema": {
            "$ref": "./examples/ApiManagementDeleteApiSchema.json"
          }
        }
      },
      "head": {
        "operationId": "ApiSchema_GetEntityTag",
        "tags": [
          "SchemaContracts"
        ],
        "description": "Gets the entity state (Etag) version of the schema specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "schemaId",
            "in": "path",
            "description": "Schema id identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadApiSchema": {
            "$ref": "./examples/ApiManagementHeadApiSchema.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tagDescriptions": {
      "get": {
        "operationId": "ApiTagDescription_ListByService",
        "tags": [
          "TagDescriptionContracts"
        ],
        "description": "Lists all Tags descriptions in scope of API. Model similar to swagger - tagDescription is defined on API level but tag may be assigned to the Operations",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagDescriptionCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListApiTagDescriptions": {
            "$ref": "./examples/ApiManagementListApiTagDescriptions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tagDescriptions/{tagDescriptionId}": {
      "get": {
        "operationId": "ApiTagDescription_Get",
        "tags": [
          "TagDescriptionContracts"
        ],
        "description": "Get Tag description in scope of API",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagDescriptionId",
            "in": "path",
            "description": "Tag description identifier. Used when creating tagDescription for API/Tag association. Based on API and Tag names.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TagDescriptionContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetApiTagDescription": {
            "$ref": "./examples/ApiManagementGetApiTagDescription.json"
          }
        }
      },
      "put": {
        "operationId": "ApiTagDescription_CreateOrUpdate",
        "tags": [
          "TagDescriptionContracts"
        ],
        "description": "Create/Update tag description in scope of the Api.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagDescriptionId",
            "in": "path",
            "description": "Tag description identifier. Used when creating tagDescription for API/Tag association. Based on API and Tag names.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagDescriptionCreateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TagDescriptionContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/TagDescriptionContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateApiTagDescription": {
            "$ref": "./examples/ApiManagementCreateApiTagDescription.json"
          }
        }
      },
      "delete": {
        "operationId": "ApiTagDescription_Delete",
        "tags": [
          "TagDescriptionContracts"
        ],
        "description": "Delete tag description for the Api.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagDescriptionId",
            "in": "path",
            "description": "Tag description identifier. Used when creating tagDescription for API/Tag association. Based on API and Tag names.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteApiTagDescription": {
            "$ref": "./examples/ApiManagementDeleteApiTagDescription.json"
          }
        }
      },
      "head": {
        "operationId": "ApiTagDescription_GetEntityTag",
        "tags": [
          "TagDescriptionContracts"
        ],
        "description": "Gets the entity state version of the tag specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagDescriptionId",
            "in": "path",
            "description": "Tag description identifier. Used when creating tagDescription for API/Tag association. Based on API and Tag names.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadApiTagDescription": {
            "$ref": "./examples/ApiManagementHeadApiTagDescription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tags": {
      "get": {
        "operationId": "Tag_ListByApi",
        "tags": [
          "Tag"
        ],
        "description": "Lists all Tags associated with the API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListApiTags": {
            "$ref": "./examples/ApiManagementListApiTags.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/tags/{tagId}": {
      "get": {
        "operationId": "Tag_GetByApi",
        "tags": [
          "Tag"
        ],
        "description": "Get tag associated with the API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetApiTag": {
            "$ref": "./examples/ApiManagementGetApiTag.json"
          }
        }
      },
      "put": {
        "operationId": "Tag_AssignToApi",
        "tags": [
          "Tag"
        ],
        "description": "Assign tag to the Api.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateApiTag": {
            "$ref": "./examples/ApiManagementCreateApiTag.json"
          }
        }
      },
      "delete": {
        "operationId": "Tag_DetachFromApi",
        "tags": [
          "Tag"
        ],
        "description": "Detach the tag from the Api.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteApiTag": {
            "$ref": "./examples/ApiManagementDeleteApiTag.json"
          }
        }
      },
      "head": {
        "operationId": "Tag_GetEntityStateByApi",
        "tags": [
          "Tag"
        ],
        "description": "Gets the entity state version of the tag specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadApiTag": {
            "$ref": "./examples/ApiManagementHeadApiTag.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/wikis": {
      "get": {
        "operationId": "ApiWikis_List",
        "tags": [
          "WikiContracts"
        ],
        "description": "Gets the wikis for an API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | eq |  contains |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WikiCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListApiWikis": {
            "$ref": "./examples/ApiManagementListApiWikis.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}/wikis/default": {
      "get": {
        "operationId": "ApiWiki_Get",
        "tags": [
          "WikiContracts"
        ],
        "description": "Gets the details of the Wiki for an API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/WikiContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetApiWiki": {
            "$ref": "./examples/ApiManagementGetApiWiki.json"
          }
        }
      },
      "put": {
        "operationId": "ApiWiki_CreateOrUpdate",
        "tags": [
          "WikiContracts"
        ],
        "description": "Creates a new Wiki for an API or updates an existing one.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WikiContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/WikiContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/WikiContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateApiWiki": {
            "$ref": "./examples/ApiManagementCreateApiWiki.json"
          }
        }
      },
      "patch": {
        "operationId": "ApiWiki_Update",
        "tags": [
          "WikiContracts"
        ],
        "description": "Updates the details of the Wiki for an API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Wiki Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WikiUpdateContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/WikiContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateApiWiki": {
            "$ref": "./examples/ApiManagementUpdateApiWiki.json"
          }
        }
      },
      "delete": {
        "operationId": "ApiWiki_Delete",
        "tags": [
          "WikiContracts"
        ],
        "description": "Deletes the specified Wiki from an API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteApiWiki": {
            "$ref": "./examples/ApiManagementDeleteApiWiki.json"
          }
        }
      },
      "head": {
        "operationId": "ApiWiki_GetEntityTag",
        "tags": [
          "WikiContracts"
        ],
        "description": "Gets the entity state (Etag) version of the Wiki for an API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadApiWiki": {
            "$ref": "./examples/ApiManagementHeadApiWiki.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apisByTags": {
      "get": {
        "operationId": "Api_ListByTags",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Lists a collection of apis associated with tags.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| isCurrent | filter | eq |     |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "includeNotTaggedApis",
            "in": "query",
            "description": "Include not tagged APIs.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagResourceCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListApisByTags": {
            "$ref": "./examples/ApiManagementListApisByTags.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/applynetworkconfigurationupdates": {
      "post": {
        "operationId": "ApiManagementService_ApplyNetworkConfigurationUpdates",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Updates the Microsoft.ApiManagement resource running in the Virtual network to pick the updated DNS changes.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the Apply Network Configuration operation. If the parameters are empty, all the regions in which the Api Management service is deployed will be updated sequentially without incurring downtime in the region.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceApplyNetworkConfigurationParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementApplyNetworkConfigurationUpdates": {
            "$ref": "./examples/ApiManagementApplyNetworkConfigurationUpdates.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ApiManagementServiceResource"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationProviders": {
      "get": {
        "operationId": "AuthorizationProvider_ListByService",
        "tags": [
          "AuthorizationProviderContracts"
        ],
        "description": "Lists a collection of authorization providers defined within a service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AuthorizationProviderCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListAuthorizationProviders": {
            "$ref": "./examples/ApiManagementListAuthorizationProviders.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationProviders/{authorizationProviderId}": {
      "get": {
        "operationId": "AuthorizationProvider_Get",
        "tags": [
          "AuthorizationProviderContracts"
        ],
        "description": "Gets the details of the authorization provider specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "authorizationProviderId",
            "in": "path",
            "description": "Identifier of the authorization provider.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AuthorizationProviderContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetAuthorizationProvider": {
            "$ref": "./examples/ApiManagementGetAuthorizationProvider.json"
          }
        }
      },
      "put": {
        "operationId": "AuthorizationProvider_CreateOrUpdate",
        "tags": [
          "AuthorizationProviderContracts"
        ],
        "description": "Creates or updates authorization provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "authorizationProviderId",
            "in": "path",
            "description": "Identifier of the authorization provider.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizationProviderContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AuthorizationProviderContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/AuthorizationProviderContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateAuthorizationProviderAADAuthCode": {
            "$ref": "./examples/ApiManagementCreateAuthorizationProviderAADAuthCode.json"
          },
          "ApiManagementCreateAuthorizationProviderAADClientCred": {
            "$ref": "./examples/ApiManagementCreateAuthorizationProviderAADClientCred.json"
          },
          "ApiManagementCreateAuthorizationProviderGenericOAuth2": {
            "$ref": "./examples/ApiManagementCreateAuthorizationProviderGenericOAuth2.json"
          },
          "ApiManagementCreateAuthorizationProviderOOBGoogle": {
            "$ref": "./examples/ApiManagementCreateAuthorizationProviderOOBGoogle.json"
          }
        }
      },
      "delete": {
        "operationId": "AuthorizationProvider_Delete",
        "tags": [
          "AuthorizationProviderContracts"
        ],
        "description": "Deletes specific authorization provider from the API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "authorizationProviderId",
            "in": "path",
            "description": "Identifier of the authorization provider.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteAuthorizationProvider": {
            "$ref": "./examples/ApiManagementDeleteAuthorizationProvider.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationProviders/{authorizationProviderId}/authorizations": {
      "get": {
        "operationId": "Authorization_ListByAuthorizationProvider",
        "tags": [
          "AuthorizationContracts"
        ],
        "description": "Lists a collection of authorization providers defined within a authorization provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "authorizationProviderId",
            "in": "path",
            "description": "Identifier of the authorization provider.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AuthorizationCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListAuthorizationsAuthCode": {
            "$ref": "./examples/ApiManagementListAuthorizationsAuthCode.json"
          },
          "ApiManagementListAuthorizationsClientCred": {
            "$ref": "./examples/ApiManagementListAuthorizationsClientCred.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationProviders/{authorizationProviderId}/authorizations/{authorizationId}": {
      "get": {
        "operationId": "Authorization_Get",
        "tags": [
          "AuthorizationContracts"
        ],
        "description": "Gets the details of the authorization specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "authorizationProviderId",
            "in": "path",
            "description": "Identifier of the authorization provider.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "authorizationId",
            "in": "path",
            "description": "Identifier of the authorization.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AuthorizationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetAuthorization": {
            "$ref": "./examples/ApiManagementGetAuthorization.json"
          }
        }
      },
      "put": {
        "operationId": "Authorization_CreateOrUpdate",
        "tags": [
          "AuthorizationContracts"
        ],
        "description": "Creates or updates authorization.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "authorizationProviderId",
            "in": "path",
            "description": "Identifier of the authorization provider.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "authorizationId",
            "in": "path",
            "description": "Identifier of the authorization.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizationContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AuthorizationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/AuthorizationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateAuthorizationAADAuthCode": {
            "$ref": "./examples/ApiManagementCreateAuthorizationAADAuthCode.json"
          },
          "ApiManagementCreateAuthorizationAADClientCred": {
            "$ref": "./examples/ApiManagementCreateAuthorizationAADClientCred.json"
          }
        }
      },
      "delete": {
        "operationId": "Authorization_Delete",
        "tags": [
          "AuthorizationContracts"
        ],
        "description": "Deletes specific Authorization from the Authorization provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "authorizationProviderId",
            "in": "path",
            "description": "Identifier of the authorization provider.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "authorizationId",
            "in": "path",
            "description": "Identifier of the authorization.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteAuthorization": {
            "$ref": "./examples/ApiManagementDeleteAuthorization.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationProviders/{authorizationProviderId}/authorizations/{authorizationId}/accessPolicies": {
      "get": {
        "operationId": "AuthorizationAccessPolicy_ListByAuthorization",
        "tags": [
          "AuthorizationAccessPolicyContracts"
        ],
        "description": "Lists a collection of authorization access policy defined within a authorization.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "authorizationProviderId",
            "in": "path",
            "description": "Identifier of the authorization provider.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "authorizationId",
            "in": "path",
            "description": "Identifier of the authorization.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AuthorizationAccessPolicyCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListAuthorizationAccessPolicies": {
            "$ref": "./examples/ApiManagementListAuthorizationAccessPolicies.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationProviders/{authorizationProviderId}/authorizations/{authorizationId}/accessPolicies/{authorizationAccessPolicyId}": {
      "get": {
        "operationId": "AuthorizationAccessPolicy_Get",
        "tags": [
          "AuthorizationAccessPolicyContracts"
        ],
        "description": "Gets the details of the authorization access policy specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "authorizationProviderId",
            "in": "path",
            "description": "Identifier of the authorization provider.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "authorizationId",
            "in": "path",
            "description": "Identifier of the authorization.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "authorizationAccessPolicyId",
            "in": "path",
            "description": "Identifier of the authorization access policy.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AuthorizationAccessPolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetAuthorizationAccessPolicy": {
            "$ref": "./examples/ApiManagementGetAuthorizationAccessPolicy.json"
          }
        }
      },
      "put": {
        "operationId": "AuthorizationAccessPolicy_CreateOrUpdate",
        "tags": [
          "AuthorizationAccessPolicyContracts"
        ],
        "description": "Creates or updates Authorization Access Policy.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "authorizationProviderId",
            "in": "path",
            "description": "Identifier of the authorization provider.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "authorizationId",
            "in": "path",
            "description": "Identifier of the authorization.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "authorizationAccessPolicyId",
            "in": "path",
            "description": "Identifier of the authorization access policy.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizationAccessPolicyContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AuthorizationAccessPolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/AuthorizationAccessPolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateAuthorizationAccessPolicy": {
            "$ref": "./examples/ApiManagementCreateAuthorizationAccessPolicy.json"
          }
        }
      },
      "delete": {
        "operationId": "AuthorizationAccessPolicy_Delete",
        "tags": [
          "AuthorizationAccessPolicyContracts"
        ],
        "description": "Deletes specific access policy from the Authorization.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "authorizationProviderId",
            "in": "path",
            "description": "Identifier of the authorization provider.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "authorizationId",
            "in": "path",
            "description": "Identifier of the authorization.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "authorizationAccessPolicyId",
            "in": "path",
            "description": "Identifier of the authorization access policy.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteAuthorizationAccessPolicy": {
            "$ref": "./examples/ApiManagementDeleteAuthorizationAccessPolicy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationProviders/{authorizationProviderId}/authorizations/{authorizationId}/confirmConsentCode": {
      "post": {
        "operationId": "Authorization_ConfirmConsentCode",
        "tags": [
          "AuthorizationContracts"
        ],
        "description": "Confirm valid consent code to suppress Authorizations anti-phishing page.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "authorizationProviderId",
            "in": "path",
            "description": "Identifier of the authorization provider.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "authorizationId",
            "in": "path",
            "description": "Identifier of the authorization.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizationConfirmConsentCodeRequestContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementPostAuthorizationConfirmConsentCodeRequest": {
            "$ref": "./examples/ApiManagementPostAuthorizationConfirmConsentCodeRequest.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationProviders/{authorizationProviderId}/authorizations/{authorizationId}/getLoginLinks": {
      "post": {
        "operationId": "AuthorizationLoginLinks_Post",
        "tags": [
          "AuthorizationContracts"
        ],
        "description": "Gets authorization login links.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "authorizationProviderId",
            "in": "path",
            "description": "Identifier of the authorization provider.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "authorizationId",
            "in": "path",
            "description": "Identifier of the authorization.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizationLoginRequestContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AuthorizationLoginResponseContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetAuthorizationLoginRequest": {
            "$ref": "./examples/ApiManagementGetAuthorizationLoginRequest.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers": {
      "get": {
        "operationId": "AuthorizationServer_ListByService",
        "tags": [
          "AuthorizationServerContracts"
        ],
        "description": "Lists a collection of authorization servers defined within a service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AuthorizationServerCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListAuthorizationServers": {
            "$ref": "./examples/ApiManagementListAuthorizationServers.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}": {
      "get": {
        "operationId": "AuthorizationServer_Get",
        "tags": [
          "AuthorizationServerContracts"
        ],
        "description": "Gets the details of the authorization server specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "authsid",
            "in": "path",
            "description": "Identifier of the authorization server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AuthorizationServerContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetAuthorizationServer": {
            "$ref": "./examples/ApiManagementGetAuthorizationServer.json"
          }
        }
      },
      "put": {
        "operationId": "AuthorizationServer_CreateOrUpdate",
        "tags": [
          "AuthorizationServerContracts"
        ],
        "description": "Creates new authorization server or updates an existing authorization server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "authsid",
            "in": "path",
            "description": "Identifier of the authorization server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizationServerContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AuthorizationServerContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/AuthorizationServerContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateAuthorizationServer": {
            "$ref": "./examples/ApiManagementCreateAuthorizationServer.json"
          }
        }
      },
      "patch": {
        "operationId": "AuthorizationServer_Update",
        "tags": [
          "AuthorizationServerContracts"
        ],
        "description": "Updates the details of the authorization server specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "authsid",
            "in": "path",
            "description": "Identifier of the authorization server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "OAuth2 Server settings Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizationServerUpdateContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AuthorizationServerContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateAuthorizationServer": {
            "$ref": "./examples/ApiManagementUpdateAuthorizationServer.json"
          }
        }
      },
      "delete": {
        "operationId": "AuthorizationServer_Delete",
        "tags": [
          "AuthorizationServerContracts"
        ],
        "description": "Deletes specific authorization server instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "authsid",
            "in": "path",
            "description": "Identifier of the authorization server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteAuthorizationServer": {
            "$ref": "./examples/ApiManagementDeleteAuthorizationServer.json"
          }
        }
      },
      "head": {
        "operationId": "AuthorizationServer_GetEntityTag",
        "tags": [
          "AuthorizationServerContracts"
        ],
        "description": "Gets the entity state (Etag) version of the authorizationServer specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "authsid",
            "in": "path",
            "description": "Identifier of the authorization server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadAuthorizationServer": {
            "$ref": "./examples/ApiManagementHeadAuthorizationServer.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}/listSecrets": {
      "post": {
        "operationId": "AuthorizationServer_ListSecrets",
        "tags": [
          "AuthorizationServerContracts"
        ],
        "description": "Gets the client secret details of the authorization server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "authsid",
            "in": "path",
            "description": "Identifier of the authorization server.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AuthorizationServerSecretsContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementAuthorizationServerListSecrets": {
            "$ref": "./examples/ApiManagementAuthorizationServerListSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends": {
      "get": {
        "operationId": "Backend_ListByService",
        "tags": [
          "BackendContracts"
        ],
        "description": "Lists a collection of backends in the specified service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| title | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| url | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackendCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListBackends": {
            "$ref": "./examples/ApiManagementListBackends.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendId}": {
      "get": {
        "operationId": "Backend_Get",
        "tags": [
          "BackendContracts"
        ],
        "description": "Gets the details of the backend specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "backendId",
            "in": "path",
            "description": "Identifier of the Backend entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BackendContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetBackend": {
            "$ref": "./examples/ApiManagementGetBackend.json"
          }
        }
      },
      "put": {
        "operationId": "Backend_CreateOrUpdate",
        "tags": [
          "BackendContracts"
        ],
        "description": "Creates or Updates a backend.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "backendId",
            "in": "path",
            "description": "Identifier of the Backend entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackendContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BackendContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/BackendContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateBackendProxyBackend": {
            "$ref": "./examples/ApiManagementCreateBackendProxyBackend.json"
          },
          "ApiManagementCreateBackendServiceFabric": {
            "$ref": "./examples/ApiManagementCreateBackendServiceFabric.json"
          },
          "ApiManagementCreateBackendWithPriorityBasedLoadBalancer": {
            "$ref": "./examples/ApiManagementCreateBackendWithPriorityBasedLoadBalancer.json"
          },
          "ApiManagementCreateBackendWithSimpleLoadBalancer": {
            "$ref": "./examples/ApiManagementCreateBackendWithSimpleLoadBalancer.json"
          },
          "ApiManagementCreateBackendWithWeightedLoadBalancer": {
            "$ref": "./examples/ApiManagementCreateBackendWithWeightedLoadBalancer.json"
          }
        }
      },
      "patch": {
        "operationId": "Backend_Update",
        "tags": [
          "BackendContracts"
        ],
        "description": "Updates an existing backend.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "backendId",
            "in": "path",
            "description": "Identifier of the Backend entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackendUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BackendContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateBackend": {
            "$ref": "./examples/ApiManagementUpdateBackend.json"
          }
        }
      },
      "delete": {
        "operationId": "Backend_Delete",
        "tags": [
          "BackendContracts"
        ],
        "description": "Deletes the specified backend.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "backendId",
            "in": "path",
            "description": "Identifier of the Backend entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteBackend": {
            "$ref": "./examples/ApiManagementDeleteBackend.json"
          }
        }
      },
      "head": {
        "operationId": "Backend_GetEntityTag",
        "tags": [
          "BackendContracts"
        ],
        "description": "Gets the entity state (Etag) version of the backend specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "backendId",
            "in": "path",
            "description": "Identifier of the Backend entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadBackend": {
            "$ref": "./examples/ApiManagementHeadBackend.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendId}/reconnect": {
      "post": {
        "operationId": "Backend_Reconnect",
        "tags": [
          "BackendContracts"
        ],
        "description": "Notifies the API Management gateway to create a new connection to the backend after the specified timeout. If no timeout was specified, timeout of 2 minutes is used.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "backendId",
            "in": "path",
            "description": "Identifier of the Backend entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Reconnect request parameters.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BackendReconnectContract"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementBackendReconnect": {
            "$ref": "./examples/ApiManagementBackendReconnect.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backup": {
      "post": {
        "operationId": "ApiManagementService_Backup",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Creates a backup of the API Management service to the given Azure Storage Account. This is long running operation and could take several minutes to complete.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the ApiManagementService_Backup operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceBackupRestoreParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementBackupWithAccessKey": {
            "$ref": "./examples/ApiManagementBackupWithAccessKey.json"
          },
          "ApiManagementBackupWithSystemManagedIdentity": {
            "$ref": "./examples/ApiManagementBackupWithSystemManagedIdentity.json"
          },
          "ApiManagementBackupWithUserAssignedManagedIdentity": {
            "$ref": "./examples/ApiManagementBackupWithUserAssignedManagedIdentity.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ApiManagementServiceResource"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/caches": {
      "get": {
        "operationId": "Cache_ListByService",
        "tags": [
          "CacheContracts"
        ],
        "description": "Lists a collection of all external Caches in the specified service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CacheCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListCaches": {
            "$ref": "./examples/ApiManagementListCaches.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/caches/{cacheId}": {
      "get": {
        "operationId": "Cache_Get",
        "tags": [
          "CacheContracts"
        ],
        "description": "Gets the details of the Cache specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "cacheId",
            "in": "path",
            "description": "Identifier of the Cache entity. Cache identifier (should be either 'default' or valid Azure region identifier).",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CacheContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetCache": {
            "$ref": "./examples/ApiManagementGetCache.json"
          }
        }
      },
      "put": {
        "operationId": "Cache_CreateOrUpdate",
        "tags": [
          "CacheContracts"
        ],
        "description": "Creates or updates an External Cache to be used in Api Management instance.",
        "externalDocs": {
          "description": "Use an external cache in Azure API Management",
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-cache-external"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "cacheId",
            "in": "path",
            "description": "Identifier of the Cache entity. Cache identifier (should be either 'default' or valid Azure region identifier).",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CacheContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CacheContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/CacheContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateCache": {
            "$ref": "./examples/ApiManagementCreateCache.json"
          }
        }
      },
      "patch": {
        "operationId": "Cache_Update",
        "tags": [
          "CacheContracts"
        ],
        "description": "Updates the details of the cache specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "cacheId",
            "in": "path",
            "description": "Identifier of the Cache entity. Cache identifier (should be either 'default' or valid Azure region identifier).",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CacheUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CacheContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateCache": {
            "$ref": "./examples/ApiManagementUpdateCache.json"
          }
        }
      },
      "delete": {
        "operationId": "Cache_Delete",
        "tags": [
          "CacheContracts"
        ],
        "description": "Deletes specific Cache.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "cacheId",
            "in": "path",
            "description": "Identifier of the Cache entity. Cache identifier (should be either 'default' or valid Azure region identifier).",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteCache": {
            "$ref": "./examples/ApiManagementDeleteCache.json"
          }
        }
      },
      "head": {
        "operationId": "Cache_GetEntityTag",
        "tags": [
          "CacheContracts"
        ],
        "description": "Gets the entity state (Etag) version of the Cache specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "cacheId",
            "in": "path",
            "description": "Identifier of the Cache entity. Cache identifier (should be either 'default' or valid Azure region identifier).",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadCache": {
            "$ref": "./examples/ApiManagementHeadCache.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates": {
      "get": {
        "operationId": "Certificate_ListByService",
        "tags": [
          "CertificateContracts"
        ],
        "description": "Lists a collection of all certificates in the specified service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| subject | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| thumbprint | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| expirationDate | filter | ge, le, eq, ne, gt, lt |     |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "isKeyVaultRefreshFailed",
            "in": "query",
            "description": "When set to true, the response contains only certificates entities which failed refresh.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CertificateCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListCertificates": {
            "$ref": "./examples/ApiManagementListCertificates.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}": {
      "get": {
        "operationId": "Certificate_Get",
        "tags": [
          "CertificateContracts"
        ],
        "description": "Gets the details of the certificate specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "certificateId",
            "in": "path",
            "description": "Identifier of the certificate entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CertificateContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetCertificate": {
            "$ref": "./examples/ApiManagementGetCertificate.json"
          },
          "ApiManagementGetCertificateWithKeyVault": {
            "$ref": "./examples/ApiManagementGetCertificateWithKeyVault.json"
          }
        }
      },
      "put": {
        "operationId": "Certificate_CreateOrUpdate",
        "tags": [
          "CertificateContracts"
        ],
        "description": "Creates or updates the certificate being used for authentication with the backend.",
        "externalDocs": {
          "description": "How to secure back-end services using client certificate authentication in Azure API Management",
          "url": "https://azure.microsoft.com/en-us/documentation/articles/api-management-howto-mutual-certificates/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "certificateId",
            "in": "path",
            "description": "Identifier of the certificate entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CertificateCreateOrUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CertificateContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/CertificateContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateCertificate": {
            "$ref": "./examples/ApiManagementCreateCertificate.json"
          },
          "ApiManagementCreateCertificateWithKeyVault": {
            "$ref": "./examples/ApiManagementCreateCertificateWithKeyVault.json"
          }
        }
      },
      "delete": {
        "operationId": "Certificate_Delete",
        "tags": [
          "CertificateContracts"
        ],
        "description": "Deletes specific certificate.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "certificateId",
            "in": "path",
            "description": "Identifier of the certificate entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteCertificate": {
            "$ref": "./examples/ApiManagementDeleteCertificate.json"
          }
        }
      },
      "head": {
        "operationId": "Certificate_GetEntityTag",
        "tags": [
          "CertificateContracts"
        ],
        "description": "Gets the entity state (Etag) version of the certificate specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "certificateId",
            "in": "path",
            "description": "Identifier of the certificate entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadCertificate": {
            "$ref": "./examples/ApiManagementHeadCertificate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}/refreshSecret": {
      "post": {
        "operationId": "Certificate_RefreshSecret",
        "tags": [
          "CertificateContracts"
        ],
        "description": "From KeyVault, Refresh the certificate being used for authentication with the backend.",
        "externalDocs": {
          "description": "How to secure back-end services using client certificate authentication in Azure API Management",
          "url": "https://azure.microsoft.com/en-us/documentation/articles/api-management-howto-mutual-certificates/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "certificateId",
            "in": "path",
            "description": "Identifier of the certificate entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CertificateContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementRefreshCertificate": {
            "$ref": "./examples/ApiManagementRefreshCertificate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/clientApplications": {
      "get": {
        "operationId": "ClientApplication_ListByService",
        "tags": [
          "ClientApplicationContracts"
        ],
        "description": "Lists a collection of client applications in the specified service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br> state | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ClientApplicationCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListProducts": {
            "$ref": "./examples/ApiManagementListClientApplications.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/clientApplications/{clientApplicationId}": {
      "get": {
        "operationId": "ClientApplication_Get",
        "tags": [
          "ClientApplicationContracts"
        ],
        "description": "Gets the details of the client application specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "clientApplicationId",
            "in": "path",
            "description": "Client Application identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ClientApplicationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetClientApplication": {
            "$ref": "./examples/ApiManagementGetClientApplication.json"
          }
        }
      },
      "put": {
        "operationId": "ClientApplication_CreateOrUpdate",
        "tags": [
          "ClientApplicationContracts"
        ],
        "description": "Creates or Updates a client application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "clientApplicationId",
            "in": "path",
            "description": "Client Application identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientApplicationContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ClientApplicationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/ClientApplicationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateProduct": {
            "$ref": "./examples/ApiManagementCreateClientApplication.json"
          }
        }
      },
      "delete": {
        "operationId": "ClientApplication_Delete",
        "tags": [
          "ClientApplicationContracts"
        ],
        "description": "Delete client application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "clientApplicationId",
            "in": "path",
            "description": "Client Application identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteProduct": {
            "$ref": "./examples/ApiManagementDeleteClientApplication.json"
          }
        }
      },
      "head": {
        "operationId": "ClientApplication_GetEntityTag",
        "tags": [
          "ClientApplicationContracts"
        ],
        "description": "Gets the entity state (Etag) version of the product specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "clientApplicationId",
            "in": "path",
            "description": "Client Application identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadProduct": {
            "$ref": "./examples/ApiManagementHeadClientApplication.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/clientApplications/{clientApplicationId}/listSecrets": {
      "post": {
        "operationId": "ClientApplication_ListSecrets",
        "tags": [
          "ClientApplicationContracts"
        ],
        "description": "Retrived client application secrets.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "clientApplicationId",
            "in": "path",
            "description": "Client Application identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ClientApplicationSecretsContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListProducts": {
            "$ref": "./examples/ApiManagementListClientApplicationSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/clientApplications/{clientApplicationId}/productLinks": {
      "get": {
        "operationId": "ClientApplicationProductLink_ListByClientApplications",
        "tags": [
          "ClientApplicationProductLinkContracts"
        ],
        "description": "Lists a collection of product links associated with the specified client application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "clientApplicationId",
            "in": "path",
            "description": "Client Application identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ClientApplicationProductLinkCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListProducts": {
            "$ref": "./examples/ApiManagementListClientApplicationProductLinks.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/clientApplications/{clientApplicationId}/productLinks/{clientApplicationProductLinkId}": {
      "get": {
        "operationId": "ClientApplicationProductLink_Get",
        "tags": [
          "ClientApplicationProductLinkContracts"
        ],
        "description": "Gets the product link for the client application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "clientApplicationId",
            "in": "path",
            "description": "Client Application identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "clientApplicationProductLinkId",
            "in": "path",
            "description": "Client Application Product Link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ClientApplicationProductLinkContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetProductApiLink": {
            "$ref": "./examples/ApiManagementGetClientApplicationProductLink.json"
          }
        }
      },
      "put": {
        "operationId": "ClientApplicationProductLink_Create",
        "tags": [
          "ClientApplicationProductLinkContracts"
        ],
        "description": "Adds an Product to the specified Client Application via link.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "clientApplicationId",
            "in": "path",
            "description": "Client Application identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "clientApplicationProductLinkId",
            "in": "path",
            "description": "Client Application Product Link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientApplicationProductLinkContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ClientApplicationProductLinkContract' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ClientApplicationProductLinkContract"
            }
          },
          "201": {
            "description": "Resource 'ClientApplicationProductLinkContract' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ClientApplicationProductLinkContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateClientApplicationProductLink": {
            "$ref": "./examples/ApiManagementCreateClientApplicationProductLink.json"
          }
        }
      },
      "delete": {
        "operationId": "ClientApplicationProductLink_Delete",
        "tags": [
          "ClientApplicationProductLinkContracts"
        ],
        "description": "Deletes the specified Product from the specified client application.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "clientApplicationId",
            "in": "path",
            "description": "Client Application identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "clientApplicationProductLinkId",
            "in": "path",
            "description": "Client Application Product Link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteClientApplicationProductLink": {
            "$ref": "./examples/ApiManagementDeleteClientApplicationProductLink.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/connectivityCheck": {
      "post": {
        "operationId": "PerformConnectivityCheckAsync",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Performs a connectivity check between the API Management service and a given destination, and returns metrics for the connection, as well as errors encountered while trying to establish it.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "connectivityCheckRequestParams",
            "in": "body",
            "description": "Connectivity Check request parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectivityCheckRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConnectivityCheckResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "HTTP Connectivity Check": {
            "$ref": "./examples/ApiManagementPerformConnectivityCheckHttpConnect.json"
          },
          "TCP Connectivity Check": {
            "$ref": "./examples/ApiManagementPerformConnectivityCheck.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ConnectivityCheckResponse"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes": {
      "get": {
        "operationId": "ContentType_ListByService",
        "tags": [
          "ContentTypeContracts"
        ],
        "description": "Lists the developer portal's content types. Content types describe content items' properties, validation rules, and constraints.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ContentTypeCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListContentTypes": {
            "$ref": "./examples/ApiManagementListContentTypes.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}": {
      "get": {
        "operationId": "ContentType_Get",
        "tags": [
          "ContentTypeContracts"
        ],
        "description": "Gets the details of the developer portal's content type. Content types describe content items' properties, validation rules, and constraints.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "contentTypeId",
            "in": "path",
            "description": "Content type identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ContentTypeContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetContentType": {
            "$ref": "./examples/ApiManagementGetContentType.json"
          }
        }
      },
      "put": {
        "operationId": "ContentType_CreateOrUpdate",
        "tags": [
          "ContentTypeContracts"
        ],
        "description": "Creates or updates the developer portal's content type. Content types describe content items' properties, validation rules, and constraints. Custom content types' identifiers need to start with the `c-` prefix. Built-in content types can't be modified.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "contentTypeId",
            "in": "path",
            "description": "Content type identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContentTypeContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ContentTypeContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/ContentTypeContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateContentType": {
            "$ref": "./examples/ApiManagementCreateContentType.json"
          }
        }
      },
      "delete": {
        "operationId": "ContentType_Delete",
        "tags": [
          "ContentTypeContracts"
        ],
        "description": "Removes the specified developer portal's content type. Content types describe content items' properties, validation rules, and constraints. Built-in content types (with identifiers starting with the `c-` prefix) can't be removed.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "contentTypeId",
            "in": "path",
            "description": "Content type identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteContentType": {
            "$ref": "./examples/ApiManagementDeleteContentType.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}/contentItems": {
      "get": {
        "operationId": "ContentItem_ListByService",
        "tags": [
          "ContentItemContracts"
        ],
        "description": "Lists developer portal's content items specified by the provided content type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "contentTypeId",
            "in": "path",
            "description": "Content type identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ContentItemCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListContentTypeContentItems": {
            "$ref": "./examples/ApiManagementListContentTypeContentItems.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes/{contentTypeId}/contentItems/{contentItemId}": {
      "get": {
        "operationId": "ContentItem_Get",
        "tags": [
          "ContentItemContracts"
        ],
        "description": "Returns the developer portal's content item specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "contentTypeId",
            "in": "path",
            "description": "Content type identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "contentItemId",
            "in": "path",
            "description": "Content item identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ContentItemContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetContentTypeContentItem": {
            "$ref": "./examples/ApiManagementGetContentTypeContentItem.json"
          }
        }
      },
      "put": {
        "operationId": "ContentItem_CreateOrUpdate",
        "tags": [
          "ContentItemContracts"
        ],
        "description": "Creates a new developer portal's content item specified by the provided content type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "contentTypeId",
            "in": "path",
            "description": "Content type identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "contentItemId",
            "in": "path",
            "description": "Content item identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContentItemContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ContentItemContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/ContentItemContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateContentTypeContentItem": {
            "$ref": "./examples/ApiManagementCreateContentTypeContentItem.json"
          }
        }
      },
      "delete": {
        "operationId": "ContentItem_Delete",
        "tags": [
          "ContentItemContracts"
        ],
        "description": "Removes the specified developer portal's content item.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "contentTypeId",
            "in": "path",
            "description": "Content type identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "contentItemId",
            "in": "path",
            "description": "Content item identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteContentTypeContentItem": {
            "$ref": "./examples/ApiManagementDeleteContentTypeContentItem.json"
          }
        }
      },
      "head": {
        "operationId": "ContentItem_GetEntityTag",
        "tags": [
          "ContentItemContracts"
        ],
        "description": "Returns the entity state (ETag) version of the developer portal's content item specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "contentTypeId",
            "in": "path",
            "description": "Content type identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "contentItemId",
            "in": "path",
            "description": "Content item identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadContentTypeContentItem": {
            "$ref": "./examples/ApiManagementHeadContentTypeContentItem.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/diagnostics": {
      "get": {
        "operationId": "Diagnostic_ListByService",
        "tags": [
          "Diagnostic"
        ],
        "description": "Lists all diagnostics of the API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DiagnosticCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListDiagnostics": {
            "$ref": "./examples/ApiManagementListDiagnostics.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/diagnostics/{diagnosticId}": {
      "get": {
        "operationId": "Diagnostic_Get",
        "tags": [
          "Diagnostic"
        ],
        "description": "Gets the details of the Diagnostic specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "diagnosticId",
            "in": "path",
            "description": "Diagnostic identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetDiagnostic": {
            "$ref": "./examples/ApiManagementGetDiagnostic.json"
          }
        }
      },
      "put": {
        "operationId": "Diagnostic_CreateOrUpdate",
        "tags": [
          "Diagnostic"
        ],
        "description": "Creates a new Diagnostic or updates an existing one.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "diagnosticId",
            "in": "path",
            "description": "Diagnostic identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiagnosticContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateDiagnostic": {
            "$ref": "./examples/ApiManagementCreateDiagnostic.json"
          }
        }
      },
      "patch": {
        "operationId": "Diagnostic_Update",
        "tags": [
          "Diagnostic"
        ],
        "description": "Updates the details of the Diagnostic specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "diagnosticId",
            "in": "path",
            "description": "Diagnostic identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Diagnostic Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiagnosticContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateDiagnostic": {
            "$ref": "./examples/ApiManagementUpdateDiagnostic.json"
          }
        }
      },
      "delete": {
        "operationId": "Diagnostic_Delete",
        "tags": [
          "Diagnostic"
        ],
        "description": "Deletes the specified Diagnostic.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "diagnosticId",
            "in": "path",
            "description": "Diagnostic identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteDiagnostic": {
            "$ref": "./examples/ApiManagementDeleteDiagnostic.json"
          }
        }
      },
      "head": {
        "operationId": "Diagnostic_GetEntityTag",
        "tags": [
          "Diagnostic"
        ],
        "description": "Gets the entity state (Etag) version of the Diagnostic specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "diagnosticId",
            "in": "path",
            "description": "Diagnostic identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadDiagnostic": {
            "$ref": "./examples/ApiManagementHeadDiagnostic.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/documentations": {
      "get": {
        "operationId": "Documentation_ListByService",
        "tags": [
          "DocumentationContracts"
        ],
        "description": "Lists all Documentations of the API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | eq |  contains |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DocumentationCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListApis": {
            "$ref": "./examples/ApiManagementListDocumentations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/documentations/{documentationId}": {
      "get": {
        "operationId": "Documentation_Get",
        "tags": [
          "DocumentationContracts"
        ],
        "description": "Gets the details of the Documentation specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "documentationId",
            "in": "path",
            "description": "Documentation identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DocumentationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetDocumentation": {
            "$ref": "./examples/ApiManagementGetDocumentation.json"
          }
        }
      },
      "put": {
        "operationId": "Documentation_CreateOrUpdate",
        "tags": [
          "DocumentationContracts"
        ],
        "description": "Creates a new Documentation or updates an existing one.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "documentationId",
            "in": "path",
            "description": "Documentation identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentationContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DocumentationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/DocumentationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateDocumentation": {
            "$ref": "./examples/ApiManagementCreateDocumentation.json"
          }
        }
      },
      "patch": {
        "operationId": "Documentation_Update",
        "tags": [
          "DocumentationContracts"
        ],
        "description": "Updates the details of the Documentation for an API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "documentationId",
            "in": "path",
            "description": "Documentation identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Documentation Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentationUpdateContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DocumentationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateDocumentation": {
            "$ref": "./examples/ApiManagementUpdateDocumentation.json"
          }
        }
      },
      "delete": {
        "operationId": "Documentation_Delete",
        "tags": [
          "DocumentationContracts"
        ],
        "description": "Deletes the specified Documentation from an API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "documentationId",
            "in": "path",
            "description": "Documentation identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteDocumentation": {
            "$ref": "./examples/ApiManagementDeleteDocumentation.json"
          }
        }
      },
      "head": {
        "operationId": "Documentation_GetEntityTag",
        "tags": [
          "DocumentationContracts"
        ],
        "description": "Gets the entity state (Etag) version of the Documentation by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "documentationId",
            "in": "path",
            "description": "Documentation identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadDocumentation": {
            "$ref": "./examples/ApiManagementHeadDocumentation.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways": {
      "get": {
        "operationId": "Gateway_ListByService",
        "tags": [
          "GatewayContracts"
        ],
        "description": "Lists a collection of gateways registered with service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| region | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GatewayCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListGateways": {
            "$ref": "./examples/ApiManagementListGateways.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}": {
      "get": {
        "operationId": "Gateway_Get",
        "tags": [
          "GatewayContracts"
        ],
        "description": "Gets the details of the Gateway specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GatewayContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetGateway": {
            "$ref": "./examples/ApiManagementGetGateway.json"
          }
        }
      },
      "put": {
        "operationId": "Gateway_CreateOrUpdate",
        "tags": [
          "GatewayContracts"
        ],
        "description": "Creates or updates a Gateway to be used in Api Management instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GatewayContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GatewayContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/GatewayContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateGateway": {
            "$ref": "./examples/ApiManagementCreateGateway.json"
          }
        }
      },
      "patch": {
        "operationId": "Gateway_Update",
        "tags": [
          "GatewayContracts"
        ],
        "description": "Updates the details of the gateway specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GatewayContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GatewayContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateGateway": {
            "$ref": "./examples/ApiManagementUpdateGateway.json"
          }
        }
      },
      "delete": {
        "operationId": "Gateway_Delete",
        "tags": [
          "GatewayContracts"
        ],
        "description": "Deletes specific Gateway.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteGateway": {
            "$ref": "./examples/ApiManagementDeleteGateway.json"
          }
        }
      },
      "head": {
        "operationId": "Gateway_GetEntityTag",
        "tags": [
          "GatewayContracts"
        ],
        "description": "Gets the entity state (Etag) version of the Gateway specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadGateway": {
            "$ref": "./examples/ApiManagementHeadGateway.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/apis": {
      "get": {
        "operationId": "GatewayApi_ListByService",
        "tags": [
          "GatewayContracts"
        ],
        "description": "Lists a collection of the APIs associated with a gateway.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListGatewayApis": {
            "$ref": "./examples/ApiManagementListGatewayApis.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/apis/{apiId}": {
      "put": {
        "operationId": "GatewayApi_CreateOrUpdate",
        "tags": [
          "GatewayContracts"
        ],
        "description": "Adds an API to the specified Gateway.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AssociationContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiContract"
            }
          },
          "201": {
            "description": "Resource 'ApiContract' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApiContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateGatewayApi": {
            "$ref": "./examples/ApiManagementCreateGatewayApi.json"
          }
        }
      },
      "delete": {
        "operationId": "GatewayApi_Delete",
        "tags": [
          "GatewayContracts"
        ],
        "description": "Deletes the specified API from the specified Gateway.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteGatewayApi": {
            "$ref": "./examples/ApiManagementDeleteGatewayApi.json"
          }
        }
      },
      "head": {
        "operationId": "GatewayApi_GetEntityTag",
        "tags": [
          "GatewayContracts"
        ],
        "description": "Checks that API entity specified by identifier is associated with the Gateway entity.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadGatewayApi": {
            "$ref": "./examples/ApiManagementHeadGatewayApi.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/certificateAuthorities": {
      "get": {
        "operationId": "GatewayCertificateAuthority_ListByService",
        "tags": [
          "GatewayCertificateAuthorityContracts"
        ],
        "description": "Lists the collection of Certificate Authorities for the specified Gateway entity.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | eq, ne |  |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GatewayCertificateAuthorityCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListGatewaycertificateAuthorities": {
            "$ref": "./examples/ApiManagementListGatewayCertificateAuthorities.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/certificateAuthorities/{certificateId}": {
      "get": {
        "operationId": "GatewayCertificateAuthority_Get",
        "tags": [
          "GatewayCertificateAuthorityContracts"
        ],
        "description": "Get assigned Gateway Certificate Authority details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "certificateId",
            "in": "path",
            "description": "Identifier of the certificate entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GatewayCertificateAuthorityContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetGatewayCertificateAuthority": {
            "$ref": "./examples/ApiManagementGetGatewayCertificateAuthority.json"
          }
        }
      },
      "put": {
        "operationId": "GatewayCertificateAuthority_CreateOrUpdate",
        "tags": [
          "GatewayCertificateAuthorityContracts"
        ],
        "description": "Assign Certificate entity to Gateway entity as Certificate Authority.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "certificateId",
            "in": "path",
            "description": "Identifier of the certificate entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GatewayCertificateAuthorityContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GatewayCertificateAuthorityContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/GatewayCertificateAuthorityContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateGatewayCertificateAuthority": {
            "$ref": "./examples/ApiManagementCreateGatewayCertificateAuthority.json"
          }
        }
      },
      "delete": {
        "operationId": "GatewayCertificateAuthority_Delete",
        "tags": [
          "GatewayCertificateAuthorityContracts"
        ],
        "description": "Remove relationship between Certificate Authority and Gateway entity.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "certificateId",
            "in": "path",
            "description": "Identifier of the certificate entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteGatewayCertificateAuthority": {
            "$ref": "./examples/ApiManagementDeleteGatewayCertificateAuthority.json"
          }
        }
      },
      "head": {
        "operationId": "GatewayCertificateAuthority_GetEntityTag",
        "tags": [
          "GatewayCertificateAuthorityContracts"
        ],
        "description": "Checks if Certificate entity is assigned to Gateway entity as Certificate Authority.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "certificateId",
            "in": "path",
            "description": "Identifier of the certificate entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadGatewayCertificateAuthority": {
            "$ref": "./examples/ApiManagementHeadGatewayCertificateAuthority.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/generateToken": {
      "post": {
        "operationId": "Gateway_GenerateToken",
        "tags": [
          "GatewayContracts"
        ],
        "description": "Gets the Shared Access Authorization Token for the gateway.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GatewayTokenRequestContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GatewayTokenContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGatewayGenerateToken": {
            "$ref": "./examples/ApiManagementGatewayGenerateToken.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/hostnameConfigurations": {
      "get": {
        "operationId": "GatewayHostnameConfiguration_ListByService",
        "tags": [
          "GatewayHostnameConfigurationContracts"
        ],
        "description": "Lists the collection of hostname configurations for the specified gateway.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| hostname | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GatewayHostnameConfigurationCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListGatewayHostnameConfigurations": {
            "$ref": "./examples/ApiManagementListGatewayHostnameConfigurations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/hostnameConfigurations/{hcId}": {
      "get": {
        "operationId": "GatewayHostnameConfiguration_Get",
        "tags": [
          "GatewayHostnameConfigurationContracts"
        ],
        "description": "Get details of a hostname configuration",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "hcId",
            "in": "path",
            "description": "Gateway hostname configuration identifier. Must be unique in the scope of parent Gateway entity.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GatewayHostnameConfigurationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetGatewayHostnameConfiguration": {
            "$ref": "./examples/ApiManagementGetGatewayHostnameConfiguration.json"
          }
        }
      },
      "put": {
        "operationId": "GatewayHostnameConfiguration_CreateOrUpdate",
        "tags": [
          "GatewayHostnameConfigurationContracts"
        ],
        "description": "Creates of updates hostname configuration for a Gateway.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "hcId",
            "in": "path",
            "description": "Gateway hostname configuration identifier. Must be unique in the scope of parent Gateway entity.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GatewayHostnameConfigurationContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GatewayHostnameConfigurationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/GatewayHostnameConfigurationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateGatewayHostnameConfiguration": {
            "$ref": "./examples/ApiManagementCreateGatewayHostnameConfiguration.json"
          }
        }
      },
      "delete": {
        "operationId": "GatewayHostnameConfiguration_Delete",
        "tags": [
          "GatewayHostnameConfigurationContracts"
        ],
        "description": "Deletes the specified hostname configuration from the specified Gateway.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "hcId",
            "in": "path",
            "description": "Gateway hostname configuration identifier. Must be unique in the scope of parent Gateway entity.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteGatewayHostnameConfiguration": {
            "$ref": "./examples/ApiManagementDeleteGatewayHostnameConfiguration.json"
          }
        }
      },
      "head": {
        "operationId": "GatewayHostnameConfiguration_GetEntityTag",
        "tags": [
          "GatewayHostnameConfigurationContracts"
        ],
        "description": "Checks that hostname configuration entity specified by identifier exists for specified Gateway entity.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "hcId",
            "in": "path",
            "description": "Gateway hostname configuration identifier. Must be unique in the scope of parent Gateway entity.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadGatewayHostnameConfiguration": {
            "$ref": "./examples/ApiManagementHeadGatewayHostnameConfiguration.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/invalidateDebugCredentials": {
      "post": {
        "operationId": "Gateway_InvalidateDebugCredentials",
        "tags": [
          "GatewayContracts"
        ],
        "description": "Action is invalidating all debug credentials issued for gateway.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGatewayInvalidateDebugCredentials": {
            "$ref": "./examples/ApiManagementGatewayInvalidateDebugCredentials.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/listDebugCredentials": {
      "post": {
        "operationId": "Gateway_ListDebugCredentials",
        "tags": [
          "GatewayContracts"
        ],
        "description": "Create new debug credentials for gateway.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "List debug credentials properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GatewayListDebugCredentialsContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GatewayDebugCredentialsContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGatewayListDebugCredentials": {
            "$ref": "./examples/ApiManagementGatewayListDebugCredentials.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/listKeys": {
      "post": {
        "operationId": "Gateway_ListKeys",
        "tags": [
          "GatewayContracts"
        ],
        "description": "Retrieves gateway keys.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GatewayKeysContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGatewayListKeys": {
            "$ref": "./examples/ApiManagementGatewayListKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/listTrace": {
      "post": {
        "operationId": "Gateway_ListTrace",
        "tags": [
          "GatewayContracts"
        ],
        "description": "Fetches trace collected by gateway.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "List trace properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GatewayListTraceContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GatewayTraceContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGatewayListTrace": {
            "$ref": "./examples/ApiManagementGatewayListTrace.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/gateways/{gatewayId}/regenerateKey": {
      "post": {
        "operationId": "Gateway_RegenerateKey",
        "tags": [
          "GatewayContracts"
        ],
        "description": "Regenerates specified gateway key invalidating any tokens created with it.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "Gateway entity identifier. Must be unique in the current API Management service instance. Must not have value 'managed'",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GatewayKeyRegenerationRequestContract"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGatewayRegenerateKey": {
            "$ref": "./examples/ApiManagementGatewayRegenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/getssotoken": {
      "post": {
        "operationId": "ApiManagementService_GetSsoToken",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Gets the Single-Sign-On token for the API Management Service which is valid for 5 Minutes.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceGetSsoTokenResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementServiceGetSsoToken": {
            "$ref": "./examples/ApiManagementServiceGetSsoToken.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups": {
      "get": {
        "operationId": "Group_ListByService",
        "tags": [
          "GroupContracts"
        ],
        "description": "Lists a collection of groups defined within a service instance.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-create-groups"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| externalId | filter | eq |     |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GroupCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListGroups": {
            "$ref": "./examples/ApiManagementListGroups.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}": {
      "get": {
        "operationId": "Group_Get",
        "tags": [
          "GroupContracts"
        ],
        "description": "Gets the details of the group specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Group identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GroupContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetGroup": {
            "$ref": "./examples/ApiManagementGetGroup.json"
          }
        }
      },
      "put": {
        "operationId": "Group_CreateOrUpdate",
        "tags": [
          "GroupContracts"
        ],
        "description": "Creates or Updates a group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Group identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupCreateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GroupContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/GroupContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateGroup": {
            "$ref": "./examples/ApiManagementCreateGroup.json"
          },
          "ApiManagementCreateGroupExternal": {
            "$ref": "./examples/ApiManagementCreateGroupExternal.json"
          }
        }
      },
      "patch": {
        "operationId": "Group_Update",
        "tags": [
          "GroupContracts"
        ],
        "description": "Updates the details of the group specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Group identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GroupContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateGroup": {
            "$ref": "./examples/ApiManagementUpdateGroup.json"
          }
        }
      },
      "delete": {
        "operationId": "Group_Delete",
        "tags": [
          "GroupContracts"
        ],
        "description": "Deletes specific group of the API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Group identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteGroup": {
            "$ref": "./examples/ApiManagementDeleteGroup.json"
          }
        }
      },
      "head": {
        "operationId": "Group_GetEntityTag",
        "tags": [
          "GroupContracts"
        ],
        "description": "Gets the entity state (Etag) version of the group specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Group identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadGroup": {
            "$ref": "./examples/ApiManagementHeadGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users": {
      "get": {
        "operationId": "GroupUser_List",
        "tags": [
          "GroupContracts"
        ],
        "description": "Lists a collection of user entities associated with the group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Group identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| firstName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| lastName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| email | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| registrationDate | filter | ge, le, eq, ne, gt, lt |     |</br>| note | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UserCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListGroupUsers": {
            "$ref": "./examples/ApiManagementListGroupUsers.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/groups/{groupId}/users/{userId}": {
      "put": {
        "operationId": "GroupUser_Create",
        "tags": [
          "GroupContracts"
        ],
        "description": "Add existing user to existing group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Group identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UserContract"
            }
          },
          "201": {
            "description": "Resource 'UserContract' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/UserContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateGroupUser": {
            "$ref": "./examples/ApiManagementCreateGroupUser.json"
          }
        }
      },
      "delete": {
        "operationId": "GroupUser_Delete",
        "tags": [
          "GroupContracts"
        ],
        "description": "Remove existing user from existing group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Group identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteGroupUser": {
            "$ref": "./examples/ApiManagementDeleteGroupUser.json"
          }
        }
      },
      "head": {
        "operationId": "GroupUser_CheckEntityExists",
        "tags": [
          "GroupContracts"
        ],
        "description": "Checks that user entity specified by identifier is associated with the group entity.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Group identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "404": {
            "description": "The server cannot find the requested resource."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadGroupUser": {
            "$ref": "./examples/ApiManagementHeadGroupUser.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders": {
      "get": {
        "operationId": "IdentityProvider_ListByService",
        "tags": [
          "IdentityProviderContracts"
        ],
        "description": "Lists a collection of Identity Provider configured in the specified service instance.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-aad#how-to-authorize-developer-accounts-using-azure-active-directory"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IdentityProviderList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListIdentityProviders": {
            "$ref": "./examples/ApiManagementListIdentityProviders.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}": {
      "get": {
        "operationId": "IdentityProvider_Get",
        "tags": [
          "IdentityProviderContracts"
        ],
        "description": "Gets the configuration details of the identity Provider configured in specified service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "identityProviderName",
            "in": "path",
            "description": "Identity Provider Type identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "facebook",
              "google",
              "microsoft",
              "twitter",
              "aad",
              "aadB2C"
            ],
            "x-ms-enum": {
              "name": "IdentityProviderType",
              "modelAsString": true,
              "values": [
                {
                  "name": "facebook",
                  "value": "facebook",
                  "description": "Facebook as Identity provider."
                },
                {
                  "name": "google",
                  "value": "google",
                  "description": "Google as Identity provider."
                },
                {
                  "name": "microsoft",
                  "value": "microsoft",
                  "description": "Microsoft Live as Identity provider."
                },
                {
                  "name": "twitter",
                  "value": "twitter",
                  "description": "Twitter as Identity provider."
                },
                {
                  "name": "aad",
                  "value": "aad",
                  "description": "Azure Active Directory as Identity provider."
                },
                {
                  "name": "aadB2C",
                  "value": "aadB2C",
                  "description": "Azure Active Directory B2C as Identity provider."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/IdentityProviderContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetIdentityProvider": {
            "$ref": "./examples/ApiManagementGetIdentityProvider.json"
          }
        }
      },
      "put": {
        "operationId": "IdentityProvider_CreateOrUpdate",
        "tags": [
          "IdentityProviderContracts"
        ],
        "description": "Creates or Updates the IdentityProvider configuration.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "identityProviderName",
            "in": "path",
            "description": "Identity Provider Type identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "facebook",
              "google",
              "microsoft",
              "twitter",
              "aad",
              "aadB2C"
            ],
            "x-ms-enum": {
              "name": "IdentityProviderType",
              "modelAsString": true,
              "values": [
                {
                  "name": "facebook",
                  "value": "facebook",
                  "description": "Facebook as Identity provider."
                },
                {
                  "name": "google",
                  "value": "google",
                  "description": "Google as Identity provider."
                },
                {
                  "name": "microsoft",
                  "value": "microsoft",
                  "description": "Microsoft Live as Identity provider."
                },
                {
                  "name": "twitter",
                  "value": "twitter",
                  "description": "Twitter as Identity provider."
                },
                {
                  "name": "aad",
                  "value": "aad",
                  "description": "Azure Active Directory as Identity provider."
                },
                {
                  "name": "aadB2C",
                  "value": "aadB2C",
                  "description": "Azure Active Directory B2C as Identity provider."
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentityProviderCreateContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/IdentityProviderContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/IdentityProviderContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateIdentityProvider": {
            "$ref": "./examples/ApiManagementCreateIdentityProvider.json"
          }
        }
      },
      "patch": {
        "operationId": "IdentityProvider_Update",
        "tags": [
          "IdentityProviderContracts"
        ],
        "description": "Updates an existing IdentityProvider configuration.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "identityProviderName",
            "in": "path",
            "description": "Identity Provider Type identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "facebook",
              "google",
              "microsoft",
              "twitter",
              "aad",
              "aadB2C"
            ],
            "x-ms-enum": {
              "name": "IdentityProviderType",
              "modelAsString": true,
              "values": [
                {
                  "name": "facebook",
                  "value": "facebook",
                  "description": "Facebook as Identity provider."
                },
                {
                  "name": "google",
                  "value": "google",
                  "description": "Google as Identity provider."
                },
                {
                  "name": "microsoft",
                  "value": "microsoft",
                  "description": "Microsoft Live as Identity provider."
                },
                {
                  "name": "twitter",
                  "value": "twitter",
                  "description": "Twitter as Identity provider."
                },
                {
                  "name": "aad",
                  "value": "aad",
                  "description": "Azure Active Directory as Identity provider."
                },
                {
                  "name": "aadB2C",
                  "value": "aadB2C",
                  "description": "Azure Active Directory B2C as Identity provider."
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentityProviderUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/IdentityProviderContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateIdentityProvider": {
            "$ref": "./examples/ApiManagementUpdateIdentityProvider.json"
          }
        }
      },
      "delete": {
        "operationId": "IdentityProvider_Delete",
        "tags": [
          "IdentityProviderContracts"
        ],
        "description": "Deletes the specified identity provider configuration.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "identityProviderName",
            "in": "path",
            "description": "Identity Provider Type identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "facebook",
              "google",
              "microsoft",
              "twitter",
              "aad",
              "aadB2C"
            ],
            "x-ms-enum": {
              "name": "IdentityProviderType",
              "modelAsString": true,
              "values": [
                {
                  "name": "facebook",
                  "value": "facebook",
                  "description": "Facebook as Identity provider."
                },
                {
                  "name": "google",
                  "value": "google",
                  "description": "Google as Identity provider."
                },
                {
                  "name": "microsoft",
                  "value": "microsoft",
                  "description": "Microsoft Live as Identity provider."
                },
                {
                  "name": "twitter",
                  "value": "twitter",
                  "description": "Twitter as Identity provider."
                },
                {
                  "name": "aad",
                  "value": "aad",
                  "description": "Azure Active Directory as Identity provider."
                },
                {
                  "name": "aadB2C",
                  "value": "aadB2C",
                  "description": "Azure Active Directory B2C as Identity provider."
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteIdentityProvider": {
            "$ref": "./examples/ApiManagementDeleteIdentityProvider.json"
          }
        }
      },
      "head": {
        "operationId": "IdentityProvider_GetEntityTag",
        "tags": [
          "IdentityProviderContracts"
        ],
        "description": "Gets the entity state (Etag) version of the identityProvider specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "identityProviderName",
            "in": "path",
            "description": "Identity Provider Type identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "facebook",
              "google",
              "microsoft",
              "twitter",
              "aad",
              "aadB2C"
            ],
            "x-ms-enum": {
              "name": "IdentityProviderType",
              "modelAsString": true,
              "values": [
                {
                  "name": "facebook",
                  "value": "facebook",
                  "description": "Facebook as Identity provider."
                },
                {
                  "name": "google",
                  "value": "google",
                  "description": "Google as Identity provider."
                },
                {
                  "name": "microsoft",
                  "value": "microsoft",
                  "description": "Microsoft Live as Identity provider."
                },
                {
                  "name": "twitter",
                  "value": "twitter",
                  "description": "Twitter as Identity provider."
                },
                {
                  "name": "aad",
                  "value": "aad",
                  "description": "Azure Active Directory as Identity provider."
                },
                {
                  "name": "aadB2C",
                  "value": "aadB2C",
                  "description": "Azure Active Directory B2C as Identity provider."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadIdentityProvider": {
            "$ref": "./examples/ApiManagementHeadIdentityProvider.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/identityProviders/{identityProviderName}/listSecrets": {
      "post": {
        "operationId": "IdentityProvider_ListSecrets",
        "tags": [
          "IdentityProviderContracts"
        ],
        "description": "Gets the client secret details of the Identity Provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "identityProviderName",
            "in": "path",
            "description": "Identity Provider Type identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "facebook",
              "google",
              "microsoft",
              "twitter",
              "aad",
              "aadB2C"
            ],
            "x-ms-enum": {
              "name": "IdentityProviderType",
              "modelAsString": true,
              "values": [
                {
                  "name": "facebook",
                  "value": "facebook",
                  "description": "Facebook as Identity provider."
                },
                {
                  "name": "google",
                  "value": "google",
                  "description": "Google as Identity provider."
                },
                {
                  "name": "microsoft",
                  "value": "microsoft",
                  "description": "Microsoft Live as Identity provider."
                },
                {
                  "name": "twitter",
                  "value": "twitter",
                  "description": "Twitter as Identity provider."
                },
                {
                  "name": "aad",
                  "value": "aad",
                  "description": "Azure Active Directory as Identity provider."
                },
                {
                  "name": "aadB2C",
                  "value": "aadB2C",
                  "description": "Azure Active Directory B2C as Identity provider."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ClientSecretContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementIdentityProviderListSecrets": {
            "$ref": "./examples/ApiManagementIdentityProviderListSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/issues": {
      "get": {
        "operationId": "Issue_ListByService",
        "tags": [
          "Issue"
        ],
        "description": "Lists a collection of issues in the specified service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| title | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| authorName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IssueCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListIssues": {
            "$ref": "./examples/ApiManagementListIssues.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/issues/{issueId}": {
      "get": {
        "operationId": "Issue_Get",
        "tags": [
          "Issue"
        ],
        "description": "Gets API Management issue details",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "issueId",
            "in": "path",
            "description": "Issue identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/IssueContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetIssue": {
            "$ref": "./examples/ApiManagementGetIssue.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/locations/{locationName}/networkstatus": {
      "get": {
        "operationId": "NetworkStatus_ListByLocation",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Gets the Connectivity Status to the external resources on which the Api Management service depends from inside the Cloud Service. This also returns the DNS Servers as visible to the CloudService.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "locationName",
            "in": "path",
            "description": "Location in which the API Management service is deployed. This is one of the Azure Regions like West US, East US, South Central US.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkStatusContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementServiceGetNetworkStatusByLocation": {
            "$ref": "./examples/ApiManagementServiceGetNetworkStatusByLocation.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers": {
      "get": {
        "operationId": "Logger_ListByService",
        "tags": [
          "LoggerContracts"
        ],
        "description": "Lists a collection of loggers in the specified service instance.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-log-event-hubs"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| loggerType | filter | eq |     |</br>| resourceId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LoggerCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListLoggers": {
            "$ref": "./examples/ApiManagementListLoggers.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerId}": {
      "get": {
        "operationId": "Logger_Get",
        "tags": [
          "LoggerContracts"
        ],
        "description": "Gets the details of the logger specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "loggerId",
            "in": "path",
            "description": "Logger identifier. Must be unique in the API Management service instance.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/LoggerContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetLogger": {
            "$ref": "./examples/ApiManagementGetLogger.json"
          }
        }
      },
      "put": {
        "operationId": "Logger_CreateOrUpdate",
        "tags": [
          "LoggerContracts"
        ],
        "description": "Creates or Updates a logger.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "loggerId",
            "in": "path",
            "description": "Logger identifier. Must be unique in the API Management service instance.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoggerContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/LoggerContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/LoggerContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateAILogger": {
            "$ref": "./examples/ApiManagementCreateAILogger.json"
          },
          "ApiManagementCreateEHLogger": {
            "$ref": "./examples/ApiManagementCreateEHLogger.json"
          }
        }
      },
      "patch": {
        "operationId": "Logger_Update",
        "tags": [
          "LoggerContracts"
        ],
        "description": "Updates an existing logger.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "loggerId",
            "in": "path",
            "description": "Logger identifier. Must be unique in the API Management service instance.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoggerUpdateContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/LoggerContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateLogger": {
            "$ref": "./examples/ApiManagementUpdateLogger.json"
          }
        }
      },
      "delete": {
        "operationId": "Logger_Delete",
        "tags": [
          "LoggerContracts"
        ],
        "description": "Deletes the specified logger.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "loggerId",
            "in": "path",
            "description": "Logger identifier. Must be unique in the API Management service instance.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteLogger": {
            "$ref": "./examples/ApiManagementDeleteLogger.json"
          }
        }
      },
      "head": {
        "operationId": "Logger_GetEntityTag",
        "tags": [
          "LoggerContracts"
        ],
        "description": "Gets the entity state (Etag) version of the logger specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "loggerId",
            "in": "path",
            "description": "Logger identifier. Must be unique in the API Management service instance.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadLogger": {
            "$ref": "./examples/ApiManagementHeadLogger.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/migrateToStv2": {
      "post": {
        "operationId": "ApiManagementService_MigrateToStv2",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Upgrades an API Management service to the Stv2 platform. For details refer to https://aka.ms/apim-migrate-stv2. This change is not reversible. This is long running operation and could take several minutes to complete.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Optional parameters supplied to migrate service.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MigrateToStv2Contract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementMigrateService": {
            "$ref": "./examples/ApiManagementServiceMigrateToStv2.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ApiManagementServiceResource"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/namedValues": {
      "get": {
        "operationId": "NamedValue_ListByService",
        "tags": [
          "NamedValueContracts"
        ],
        "description": "Lists a collection of named values defined within a service instance.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-properties"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| tags | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith, any, all |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "isKeyVaultRefreshFailed",
            "in": "query",
            "description": "When set to true, the response contains only named value entities which failed refresh.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NamedValueCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListNamedValues": {
            "$ref": "./examples/ApiManagementListNamedValues.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/namedValues/{namedValueId}": {
      "get": {
        "operationId": "NamedValue_Get",
        "tags": [
          "NamedValueContracts"
        ],
        "description": "Gets the details of the named value specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "namedValueId",
            "in": "path",
            "description": "Identifier of the NamedValue.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NamedValueContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetNamedValue": {
            "$ref": "./examples/ApiManagementGetNamedValue.json"
          },
          "ApiManagementGetNamedValueWithKeyVault": {
            "$ref": "./examples/ApiManagementGetNamedValueWithKeyVault.json"
          }
        }
      },
      "put": {
        "operationId": "NamedValue_CreateOrUpdate",
        "tags": [
          "NamedValueContracts"
        ],
        "description": "Creates or updates named value.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "namedValueId",
            "in": "path",
            "description": "Identifier of the NamedValue.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamedValueCreateContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NamedValueContract"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/NamedValueContract"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateNamedValue": {
            "$ref": "./examples/ApiManagementCreateNamedValue.json"
          },
          "ApiManagementCreateNamedValueWithKeyVault": {
            "$ref": "./examples/ApiManagementCreateNamedValueWithKeyVault.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/NamedValueContract"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "NamedValue_Update",
        "tags": [
          "NamedValueContracts"
        ],
        "description": "Updates the specific named value.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "namedValueId",
            "in": "path",
            "description": "Identifier of the NamedValue.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamedValueUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NamedValueContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateNamedValue": {
            "$ref": "./examples/ApiManagementUpdateNamedValue.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/NamedValueContract"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "NamedValue_Delete",
        "tags": [
          "NamedValueContracts"
        ],
        "description": "Deletes specific named value from the API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "namedValueId",
            "in": "path",
            "description": "Identifier of the NamedValue.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteNamedValue": {
            "$ref": "./examples/ApiManagementDeleteNamedValue.json"
          }
        }
      },
      "head": {
        "operationId": "NamedValue_GetEntityTag",
        "tags": [
          "NamedValueContracts"
        ],
        "description": "Gets the entity state (Etag) version of the named value specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "namedValueId",
            "in": "path",
            "description": "Identifier of the NamedValue.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadNamedValue": {
            "$ref": "./examples/ApiManagementHeadNamedValue.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/namedValues/{namedValueId}/listValue": {
      "post": {
        "operationId": "NamedValue_ListValue",
        "tags": [
          "NamedValueContracts"
        ],
        "description": "Gets the secret of the named value specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "namedValueId",
            "in": "path",
            "description": "Identifier of the NamedValue.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NamedValueSecretContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementNamedValueListValue": {
            "$ref": "./examples/ApiManagementNamedValueListValue.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/namedValues/{namedValueId}/refreshSecret": {
      "post": {
        "operationId": "NamedValue_RefreshSecret",
        "tags": [
          "NamedValueContracts"
        ],
        "description": "Refresh the secret of the named value specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "namedValueId",
            "in": "path",
            "description": "Identifier of the NamedValue.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NamedValueContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementRefreshNamedValue": {
            "$ref": "./examples/ApiManagementRefreshNamedValue.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/NamedValueContract"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/networkstatus": {
      "get": {
        "operationId": "NetworkStatus_ListByService",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Gets the Connectivity Status to the external resources on which the Api Management service depends from inside the Cloud Service. This also returns the DNS Servers as visible to the CloudService.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkStatusContractByLocation"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementServiceGetNetworkStatus": {
            "$ref": "./examples/ApiManagementServiceGetNetworkStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications": {
      "get": {
        "operationId": "Notification_ListByService",
        "tags": [
          "NotificationContracts"
        ],
        "description": "Lists a collection of properties defined within a service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NotificationCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListNotifications": {
            "$ref": "./examples/ApiManagementListNotifications.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}": {
      "get": {
        "operationId": "Notification_Get",
        "tags": [
          "NotificationContracts"
        ],
        "description": "Gets the details of the Notification specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "notificationName",
            "in": "path",
            "description": "Notification Name Identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "RequestPublisherNotificationMessage",
              "PurchasePublisherNotificationMessage",
              "NewApplicationNotificationMessage",
              "BCC",
              "NewIssuePublisherNotificationMessage",
              "AccountClosedPublisher",
              "QuotaLimitApproachingPublisherNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "NotificationName",
              "modelAsString": true,
              "values": [
                {
                  "name": "RequestPublisherNotificationMessage",
                  "value": "RequestPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
                },
                {
                  "name": "PurchasePublisherNotificationMessage",
                  "value": "PurchasePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
                },
                {
                  "name": "NewApplicationNotificationMessage",
                  "value": "NewApplicationNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
                },
                {
                  "name": "BCC",
                  "value": "BCC",
                  "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
                },
                {
                  "name": "NewIssuePublisherNotificationMessage",
                  "value": "NewIssuePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
                },
                {
                  "name": "AccountClosedPublisher",
                  "value": "AccountClosedPublisher",
                  "description": "The following email recipients and users will receive email notifications when developer closes his account."
                },
                {
                  "name": "QuotaLimitApproachingPublisherNotificationMessage",
                  "value": "QuotaLimitApproachingPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NotificationContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetNotification": {
            "$ref": "./examples/ApiManagementGetNotification.json"
          }
        }
      },
      "put": {
        "operationId": "Notification_CreateOrUpdate",
        "tags": [
          "NotificationContracts"
        ],
        "description": "Create or Update API Management publisher notification.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "notificationName",
            "in": "path",
            "description": "Notification Name Identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "RequestPublisherNotificationMessage",
              "PurchasePublisherNotificationMessage",
              "NewApplicationNotificationMessage",
              "BCC",
              "NewIssuePublisherNotificationMessage",
              "AccountClosedPublisher",
              "QuotaLimitApproachingPublisherNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "NotificationName",
              "modelAsString": true,
              "values": [
                {
                  "name": "RequestPublisherNotificationMessage",
                  "value": "RequestPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
                },
                {
                  "name": "PurchasePublisherNotificationMessage",
                  "value": "PurchasePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
                },
                {
                  "name": "NewApplicationNotificationMessage",
                  "value": "NewApplicationNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
                },
                {
                  "name": "BCC",
                  "value": "BCC",
                  "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
                },
                {
                  "name": "NewIssuePublisherNotificationMessage",
                  "value": "NewIssuePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
                },
                {
                  "name": "AccountClosedPublisher",
                  "value": "AccountClosedPublisher",
                  "description": "The following email recipients and users will receive email notifications when developer closes his account."
                },
                {
                  "name": "QuotaLimitApproachingPublisherNotificationMessage",
                  "value": "QuotaLimitApproachingPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NotificationContract' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NotificationContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateNotification": {
            "$ref": "./examples/ApiManagementCreateNotification.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientEmails": {
      "get": {
        "operationId": "NotificationRecipientEmail_ListByNotification",
        "tags": [
          "NotificationContracts"
        ],
        "description": "Gets the list of the Notification Recipient Emails subscribed to a notification.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "notificationName",
            "in": "path",
            "description": "Notification Name Identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "RequestPublisherNotificationMessage",
              "PurchasePublisherNotificationMessage",
              "NewApplicationNotificationMessage",
              "BCC",
              "NewIssuePublisherNotificationMessage",
              "AccountClosedPublisher",
              "QuotaLimitApproachingPublisherNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "NotificationName",
              "modelAsString": true,
              "values": [
                {
                  "name": "RequestPublisherNotificationMessage",
                  "value": "RequestPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
                },
                {
                  "name": "PurchasePublisherNotificationMessage",
                  "value": "PurchasePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
                },
                {
                  "name": "NewApplicationNotificationMessage",
                  "value": "NewApplicationNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
                },
                {
                  "name": "BCC",
                  "value": "BCC",
                  "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
                },
                {
                  "name": "NewIssuePublisherNotificationMessage",
                  "value": "NewIssuePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
                },
                {
                  "name": "AccountClosedPublisher",
                  "value": "AccountClosedPublisher",
                  "description": "The following email recipients and users will receive email notifications when developer closes his account."
                },
                {
                  "name": "QuotaLimitApproachingPublisherNotificationMessage",
                  "value": "QuotaLimitApproachingPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RecipientEmailCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListNotificationRecipientEmails": {
            "$ref": "./examples/ApiManagementListNotificationRecipientEmails.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientEmails/{email}": {
      "put": {
        "operationId": "NotificationRecipientEmail_CreateOrUpdate",
        "tags": [
          "NotificationContracts"
        ],
        "description": "Adds the Email address to the list of Recipients for the Notification.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "notificationName",
            "in": "path",
            "description": "Notification Name Identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "RequestPublisherNotificationMessage",
              "PurchasePublisherNotificationMessage",
              "NewApplicationNotificationMessage",
              "BCC",
              "NewIssuePublisherNotificationMessage",
              "AccountClosedPublisher",
              "QuotaLimitApproachingPublisherNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "NotificationName",
              "modelAsString": true,
              "values": [
                {
                  "name": "RequestPublisherNotificationMessage",
                  "value": "RequestPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
                },
                {
                  "name": "PurchasePublisherNotificationMessage",
                  "value": "PurchasePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
                },
                {
                  "name": "NewApplicationNotificationMessage",
                  "value": "NewApplicationNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
                },
                {
                  "name": "BCC",
                  "value": "BCC",
                  "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
                },
                {
                  "name": "NewIssuePublisherNotificationMessage",
                  "value": "NewIssuePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
                },
                {
                  "name": "AccountClosedPublisher",
                  "value": "AccountClosedPublisher",
                  "description": "The following email recipients and users will receive email notifications when developer closes his account."
                },
                {
                  "name": "QuotaLimitApproachingPublisherNotificationMessage",
                  "value": "QuotaLimitApproachingPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
                }
              ]
            }
          },
          {
            "name": "email",
            "in": "path",
            "description": "Email identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RecipientEmailContract"
            }
          },
          "201": {
            "description": "Resource 'RecipientEmailContract' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/RecipientEmailContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateNotificationRecipientEmail": {
            "$ref": "./examples/ApiManagementCreateNotificationRecipientEmail.json"
          }
        }
      },
      "delete": {
        "operationId": "NotificationRecipientEmail_Delete",
        "tags": [
          "NotificationContracts"
        ],
        "description": "Removes the email from the list of Notification.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "notificationName",
            "in": "path",
            "description": "Notification Name Identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "RequestPublisherNotificationMessage",
              "PurchasePublisherNotificationMessage",
              "NewApplicationNotificationMessage",
              "BCC",
              "NewIssuePublisherNotificationMessage",
              "AccountClosedPublisher",
              "QuotaLimitApproachingPublisherNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "NotificationName",
              "modelAsString": true,
              "values": [
                {
                  "name": "RequestPublisherNotificationMessage",
                  "value": "RequestPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
                },
                {
                  "name": "PurchasePublisherNotificationMessage",
                  "value": "PurchasePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
                },
                {
                  "name": "NewApplicationNotificationMessage",
                  "value": "NewApplicationNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
                },
                {
                  "name": "BCC",
                  "value": "BCC",
                  "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
                },
                {
                  "name": "NewIssuePublisherNotificationMessage",
                  "value": "NewIssuePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
                },
                {
                  "name": "AccountClosedPublisher",
                  "value": "AccountClosedPublisher",
                  "description": "The following email recipients and users will receive email notifications when developer closes his account."
                },
                {
                  "name": "QuotaLimitApproachingPublisherNotificationMessage",
                  "value": "QuotaLimitApproachingPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
                }
              ]
            }
          },
          {
            "name": "email",
            "in": "path",
            "description": "Email identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteNotificationRecipientEmail": {
            "$ref": "./examples/ApiManagementDeleteNotificationRecipientEmail.json"
          }
        }
      },
      "head": {
        "operationId": "NotificationRecipientEmail_CheckEntityExists",
        "tags": [
          "NotificationContracts"
        ],
        "description": "Determine if Notification Recipient Email subscribed to the notification.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "notificationName",
            "in": "path",
            "description": "Notification Name Identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "RequestPublisherNotificationMessage",
              "PurchasePublisherNotificationMessage",
              "NewApplicationNotificationMessage",
              "BCC",
              "NewIssuePublisherNotificationMessage",
              "AccountClosedPublisher",
              "QuotaLimitApproachingPublisherNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "NotificationName",
              "modelAsString": true,
              "values": [
                {
                  "name": "RequestPublisherNotificationMessage",
                  "value": "RequestPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
                },
                {
                  "name": "PurchasePublisherNotificationMessage",
                  "value": "PurchasePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
                },
                {
                  "name": "NewApplicationNotificationMessage",
                  "value": "NewApplicationNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
                },
                {
                  "name": "BCC",
                  "value": "BCC",
                  "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
                },
                {
                  "name": "NewIssuePublisherNotificationMessage",
                  "value": "NewIssuePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
                },
                {
                  "name": "AccountClosedPublisher",
                  "value": "AccountClosedPublisher",
                  "description": "The following email recipients and users will receive email notifications when developer closes his account."
                },
                {
                  "name": "QuotaLimitApproachingPublisherNotificationMessage",
                  "value": "QuotaLimitApproachingPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
                }
              ]
            }
          },
          {
            "name": "email",
            "in": "path",
            "description": "Email identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "404": {
            "description": "The server cannot find the requested resource."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadNotificationRecipientEmail": {
            "$ref": "./examples/ApiManagementHeadNotificationRecipientEmail.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientUsers": {
      "get": {
        "operationId": "NotificationRecipientUser_ListByNotification",
        "tags": [
          "NotificationContracts"
        ],
        "description": "Gets the list of the Notification Recipient User subscribed to the notification.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "notificationName",
            "in": "path",
            "description": "Notification Name Identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "RequestPublisherNotificationMessage",
              "PurchasePublisherNotificationMessage",
              "NewApplicationNotificationMessage",
              "BCC",
              "NewIssuePublisherNotificationMessage",
              "AccountClosedPublisher",
              "QuotaLimitApproachingPublisherNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "NotificationName",
              "modelAsString": true,
              "values": [
                {
                  "name": "RequestPublisherNotificationMessage",
                  "value": "RequestPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
                },
                {
                  "name": "PurchasePublisherNotificationMessage",
                  "value": "PurchasePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
                },
                {
                  "name": "NewApplicationNotificationMessage",
                  "value": "NewApplicationNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
                },
                {
                  "name": "BCC",
                  "value": "BCC",
                  "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
                },
                {
                  "name": "NewIssuePublisherNotificationMessage",
                  "value": "NewIssuePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
                },
                {
                  "name": "AccountClosedPublisher",
                  "value": "AccountClosedPublisher",
                  "description": "The following email recipients and users will receive email notifications when developer closes his account."
                },
                {
                  "name": "QuotaLimitApproachingPublisherNotificationMessage",
                  "value": "QuotaLimitApproachingPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RecipientUserCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListNotificationRecipientUsers": {
            "$ref": "./examples/ApiManagementListNotificationRecipientUsers.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/notifications/{notificationName}/recipientUsers/{userId}": {
      "put": {
        "operationId": "NotificationRecipientUser_CreateOrUpdate",
        "tags": [
          "NotificationContracts"
        ],
        "description": "Adds the API Management User to the list of Recipients for the Notification.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "notificationName",
            "in": "path",
            "description": "Notification Name Identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "RequestPublisherNotificationMessage",
              "PurchasePublisherNotificationMessage",
              "NewApplicationNotificationMessage",
              "BCC",
              "NewIssuePublisherNotificationMessage",
              "AccountClosedPublisher",
              "QuotaLimitApproachingPublisherNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "NotificationName",
              "modelAsString": true,
              "values": [
                {
                  "name": "RequestPublisherNotificationMessage",
                  "value": "RequestPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
                },
                {
                  "name": "PurchasePublisherNotificationMessage",
                  "value": "PurchasePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
                },
                {
                  "name": "NewApplicationNotificationMessage",
                  "value": "NewApplicationNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
                },
                {
                  "name": "BCC",
                  "value": "BCC",
                  "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
                },
                {
                  "name": "NewIssuePublisherNotificationMessage",
                  "value": "NewIssuePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
                },
                {
                  "name": "AccountClosedPublisher",
                  "value": "AccountClosedPublisher",
                  "description": "The following email recipients and users will receive email notifications when developer closes his account."
                },
                {
                  "name": "QuotaLimitApproachingPublisherNotificationMessage",
                  "value": "QuotaLimitApproachingPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
                }
              ]
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RecipientUserContract"
            }
          },
          "201": {
            "description": "Resource 'RecipientUserContract' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/RecipientUserContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateNotificationRecipientUser": {
            "$ref": "./examples/ApiManagementCreateNotificationRecipientUser.json"
          }
        }
      },
      "delete": {
        "operationId": "NotificationRecipientUser_Delete",
        "tags": [
          "NotificationContracts"
        ],
        "description": "Removes the API Management user from the list of Notification.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "notificationName",
            "in": "path",
            "description": "Notification Name Identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "RequestPublisherNotificationMessage",
              "PurchasePublisherNotificationMessage",
              "NewApplicationNotificationMessage",
              "BCC",
              "NewIssuePublisherNotificationMessage",
              "AccountClosedPublisher",
              "QuotaLimitApproachingPublisherNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "NotificationName",
              "modelAsString": true,
              "values": [
                {
                  "name": "RequestPublisherNotificationMessage",
                  "value": "RequestPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
                },
                {
                  "name": "PurchasePublisherNotificationMessage",
                  "value": "PurchasePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
                },
                {
                  "name": "NewApplicationNotificationMessage",
                  "value": "NewApplicationNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
                },
                {
                  "name": "BCC",
                  "value": "BCC",
                  "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
                },
                {
                  "name": "NewIssuePublisherNotificationMessage",
                  "value": "NewIssuePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
                },
                {
                  "name": "AccountClosedPublisher",
                  "value": "AccountClosedPublisher",
                  "description": "The following email recipients and users will receive email notifications when developer closes his account."
                },
                {
                  "name": "QuotaLimitApproachingPublisherNotificationMessage",
                  "value": "QuotaLimitApproachingPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
                }
              ]
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteNotificationRecipientUser": {
            "$ref": "./examples/ApiManagementDeleteNotificationRecipientUser.json"
          }
        }
      },
      "head": {
        "operationId": "NotificationRecipientUser_CheckEntityExists",
        "tags": [
          "NotificationContracts"
        ],
        "description": "Determine if the Notification Recipient User is subscribed to the notification.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "notificationName",
            "in": "path",
            "description": "Notification Name Identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "RequestPublisherNotificationMessage",
              "PurchasePublisherNotificationMessage",
              "NewApplicationNotificationMessage",
              "BCC",
              "NewIssuePublisherNotificationMessage",
              "AccountClosedPublisher",
              "QuotaLimitApproachingPublisherNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "NotificationName",
              "modelAsString": true,
              "values": [
                {
                  "name": "RequestPublisherNotificationMessage",
                  "value": "RequestPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
                },
                {
                  "name": "PurchasePublisherNotificationMessage",
                  "value": "PurchasePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
                },
                {
                  "name": "NewApplicationNotificationMessage",
                  "value": "NewApplicationNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
                },
                {
                  "name": "BCC",
                  "value": "BCC",
                  "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
                },
                {
                  "name": "NewIssuePublisherNotificationMessage",
                  "value": "NewIssuePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
                },
                {
                  "name": "AccountClosedPublisher",
                  "value": "AccountClosedPublisher",
                  "description": "The following email recipients and users will receive email notifications when developer closes his account."
                },
                {
                  "name": "QuotaLimitApproachingPublisherNotificationMessage",
                  "value": "QuotaLimitApproachingPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
                }
              ]
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "404": {
            "description": "The server cannot find the requested resource."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadNotificationRecipientUser": {
            "$ref": "./examples/ApiManagementHeadNotificationRecipientUser.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders": {
      "get": {
        "operationId": "OpenIdConnectProvider_ListByService",
        "tags": [
          "OpenidConnectProviderContracts"
        ],
        "description": "Lists of all the OpenId Connect Providers.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OpenIdConnectProviderCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListOpenIdConnectProviders": {
            "$ref": "./examples/ApiManagementListOpenIdConnectProviders.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}": {
      "get": {
        "operationId": "OpenIdConnectProvider_Get",
        "tags": [
          "OpenidConnectProviderContracts"
        ],
        "description": "Gets specific OpenID Connect Provider without secrets.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "opid",
            "in": "path",
            "description": "Identifier of the OpenID Connect Provider.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OpenidConnectProviderContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetOpenIdConnectProvider": {
            "$ref": "./examples/ApiManagementGetOpenIdConnectProvider.json"
          }
        }
      },
      "put": {
        "operationId": "OpenIdConnectProvider_CreateOrUpdate",
        "tags": [
          "OpenidConnectProviderContracts"
        ],
        "description": "Creates or updates the OpenID Connect Provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "opid",
            "in": "path",
            "description": "Identifier of the OpenID Connect Provider.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OpenidConnectProviderContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OpenidConnectProviderContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/OpenidConnectProviderContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateOpenIdConnectProvider": {
            "$ref": "./examples/ApiManagementCreateOpenIdConnectProvider.json"
          }
        }
      },
      "patch": {
        "operationId": "OpenIdConnectProvider_Update",
        "tags": [
          "OpenidConnectProviderContracts"
        ],
        "description": "Updates the specific OpenID Connect Provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "opid",
            "in": "path",
            "description": "Identifier of the OpenID Connect Provider.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OpenidConnectProviderUpdateContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OpenidConnectProviderContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateOpenIdConnectProvider": {
            "$ref": "./examples/ApiManagementUpdateOpenIdConnectProvider.json"
          }
        }
      },
      "delete": {
        "operationId": "OpenIdConnectProvider_Delete",
        "tags": [
          "OpenidConnectProviderContracts"
        ],
        "description": "Deletes specific OpenID Connect Provider of the API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "opid",
            "in": "path",
            "description": "Identifier of the OpenID Connect Provider.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteOpenIdConnectProvider": {
            "$ref": "./examples/ApiManagementDeleteOpenIdConnectProvider.json"
          }
        }
      },
      "head": {
        "operationId": "OpenIdConnectProvider_GetEntityTag",
        "tags": [
          "OpenidConnectProviderContracts"
        ],
        "description": "Gets the entity state (Etag) version of the openIdConnectProvider specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "opid",
            "in": "path",
            "description": "Identifier of the OpenID Connect Provider.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadOpenIdConnectProvider": {
            "$ref": "./examples/ApiManagementHeadOpenIdConnectProvider.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/openidConnectProviders/{opid}/listSecrets": {
      "post": {
        "operationId": "OpenIdConnectProvider_ListSecrets",
        "tags": [
          "OpenidConnectProviderContracts"
        ],
        "description": "Gets the client secret details of the OpenID Connect Provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "opid",
            "in": "path",
            "description": "Identifier of the OpenID Connect Provider.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ClientSecretContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementOpenidConnectProviderListSecrets": {
            "$ref": "./examples/ApiManagementOpenidConnectProviderListSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/outboundNetworkDependenciesEndpoints": {
      "get": {
        "operationId": "OutboundNetworkDependenciesEndpoints_ListByService",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Gets the network endpoints of all outbound dependencies of a ApiManagement service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OutboundEnvironmentEndpointList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementServiceGetOutboundNetworkDependenciesEndpoints": {
            "$ref": "./examples/ApiManagementServiceGetOutboundNetworkDependenciesEndpoints.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policies": {
      "get": {
        "operationId": "Policy_ListByService",
        "tags": [
          "Policy"
        ],
        "description": "Lists all the Global Policy definitions of the Api Management service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListPolicies": {
            "$ref": "./examples/ApiManagementListPolicies.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policies/{policyId}": {
      "get": {
        "operationId": "Policy_Get",
        "tags": [
          "Policy"
        ],
        "description": "Get the Global policy definition of the Api Management service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Policy Export Format.",
            "required": false,
            "type": "string",
            "default": "xml",
            "enum": [
              "xml",
              "rawxml"
            ],
            "x-ms-enum": {
              "name": "PolicyExportFormat",
              "modelAsString": true,
              "values": [
                {
                  "name": "xml",
                  "value": "xml",
                  "description": "The contents are inline and Content type is an XML document."
                },
                {
                  "name": "rawxml",
                  "value": "rawxml",
                  "description": "The contents are inline and Content type is a non XML encoded policy document."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetPolicy": {
            "$ref": "./examples/ApiManagementGetPolicy.json"
          },
          "ApiManagementGetPolicyFormat": {
            "$ref": "./examples/ApiManagementGetPolicyFormat.json"
          }
        }
      },
      "put": {
        "operationId": "Policy_CreateOrUpdate",
        "tags": [
          "Policy"
        ],
        "description": "Creates or updates the global policy configuration of the Api Management service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The policy contents to apply.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreatePolicy": {
            "$ref": "./examples/ApiManagementCreatePolicy.json"
          }
        }
      },
      "delete": {
        "operationId": "Policy_Delete",
        "tags": [
          "Policy"
        ],
        "description": "Deletes the global policy configuration of the Api Management Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeletePolicy": {
            "$ref": "./examples/ApiManagementDeletePolicy.json"
          }
        }
      },
      "head": {
        "operationId": "Policy_GetEntityTag",
        "tags": [
          "Policy"
        ],
        "description": "Gets the entity state (Etag) version of the Global policy definition in the Api Management service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadPolicy": {
            "$ref": "./examples/ApiManagementHeadPolicy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policyDescriptions": {
      "get": {
        "operationId": "PolicyDescription_ListByService",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Lists all policy descriptions.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Policy scope.",
            "required": false,
            "type": "string",
            "enum": [
              "Tenant",
              "Product",
              "Api",
              "Operation",
              "All"
            ],
            "x-ms-enum": {
              "name": "PolicyScopeContract",
              "modelAsString": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyDescriptionCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListPolicyDescriptions": {
            "$ref": "./examples/ApiManagementListPolicyDescriptions.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policyFragments": {
      "get": {
        "operationId": "PolicyFragment_ListByService",
        "tags": [
          "PolicyFragmentContracts"
        ],
        "description": "Gets all policy fragments.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter, orderBy | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| value | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by query option.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyFragmentCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListPolicyFragments": {
            "$ref": "./examples/ApiManagementListPolicyFragments.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policyFragments/{id}": {
      "get": {
        "operationId": "PolicyFragment_Get",
        "tags": [
          "PolicyFragmentContracts"
        ],
        "description": "Gets a policy fragment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)"
          },
          {
            "name": "format",
            "in": "query",
            "description": "Policy fragment content format.",
            "required": false,
            "type": "string",
            "enum": [
              "xml",
              "rawxml"
            ],
            "x-ms-enum": {
              "name": "PolicyFragmentContentFormat",
              "modelAsString": true,
              "values": [
                {
                  "name": "xml",
                  "value": "xml",
                  "description": "The contents are inline and Content type is an XML document."
                },
                {
                  "name": "rawxml",
                  "value": "rawxml",
                  "description": "The contents are inline and Content type is a non XML encoded policy document."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyFragmentContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetPolicyFragment": {
            "$ref": "./examples/ApiManagementGetPolicyFragment.json"
          },
          "ApiManagementGetPolicyFragmentFormat": {
            "$ref": "./examples/ApiManagementGetPolicyFragmentFormat.json"
          }
        }
      },
      "put": {
        "operationId": "PolicyFragment_CreateOrUpdate",
        "tags": [
          "PolicyFragmentContracts"
        ],
        "description": "Creates or updates a policy fragment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The policy fragment contents to apply.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyFragmentContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyFragmentContract"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/PolicyFragmentContract"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreatePolicy": {
            "$ref": "./examples/ApiManagementCreatePolicyFragment.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/PolicyFragmentContract"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "PolicyFragment_Delete",
        "tags": [
          "PolicyFragmentContracts"
        ],
        "description": "Deletes a policy fragment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeletePolicy": {
            "$ref": "./examples/ApiManagementDeletePolicyFragment.json"
          }
        }
      },
      "head": {
        "operationId": "PolicyFragment_GetEntityTag",
        "tags": [
          "PolicyFragmentContracts"
        ],
        "description": "Gets the entity state (Etag) version of a policy fragment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadPolicyFragment": {
            "$ref": "./examples/ApiManagementHeadPolicyFragment.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policyFragments/{id}/listReferences": {
      "post": {
        "operationId": "PolicyFragment_ListReferences",
        "tags": [
          "PolicyFragmentContracts"
        ],
        "description": "Lists policy resources that reference the policy fragment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListPolicyFragmentReferences": {
            "$ref": "./examples/ApiManagementListPolicyFragmentReferences.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policyRestrictions": {
      "get": {
        "operationId": "PolicyRestriction_ListByService",
        "tags": [
          "PolicyRestrictionContracts"
        ],
        "description": "Gets all policy restrictions of API Management services.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyRestrictionCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListPolicyRestrictions": {
            "$ref": "./examples/ApiManagementListPolicyRestrictions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policyRestrictions/{policyRestrictionId}": {
      "get": {
        "operationId": "PolicyRestriction_Get",
        "tags": [
          "PolicyRestrictionContracts"
        ],
        "description": "Get the policy restriction of the Api Management service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "policyRestrictionId",
            "in": "path",
            "description": "Policy restrictions after an entity level",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyRestrictionContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetPolicyRestriction": {
            "$ref": "./examples/ApiManagementGetPolicyRestriction.json"
          }
        }
      },
      "put": {
        "operationId": "PolicyRestriction_CreateOrUpdate",
        "tags": [
          "PolicyRestrictionContracts"
        ],
        "description": "Creates or updates the policy restriction configuration of the Api Management service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "policyRestrictionId",
            "in": "path",
            "description": "Policy restrictions after an entity level",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The policy restriction to apply.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyRestrictionContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyRestrictionContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version"
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/PolicyRestrictionContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreatePolicyRestriction": {
            "$ref": "./examples/ApiManagementCreatePolicyRestriction.json"
          }
        }
      },
      "patch": {
        "operationId": "PolicyRestriction_Update",
        "tags": [
          "PolicyRestrictionContracts"
        ],
        "description": "Updates the policy restriction configuration of the Api Management service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "policyRestrictionId",
            "in": "path",
            "description": "Policy restrictions after an entity level",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The policy restriction to apply.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyRestrictionUpdateContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyRestrictionContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdatePolicyRestriction": {
            "$ref": "./examples/ApiManagementUpdatePolicyRestriction.json"
          }
        }
      },
      "delete": {
        "operationId": "PolicyRestriction_Delete",
        "tags": [
          "PolicyRestrictionContracts"
        ],
        "description": "Deletes the policy restriction configuration of the Api Management Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "policyRestrictionId",
            "in": "path",
            "description": "Policy restrictions after an entity level",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeletePolicyRestriction": {
            "$ref": "./examples/ApiManagementDeletePolicyRestriction.json"
          }
        }
      },
      "head": {
        "operationId": "PolicyRestriction_GetEntityTag",
        "tags": [
          "PolicyRestrictionContracts"
        ],
        "description": "Gets the entity state (Etag) version of the policy restriction in the Api Management service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "policyRestrictionId",
            "in": "path",
            "description": "Policy restrictions after an entity level",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadPolicyRestriction": {
            "$ref": "./examples/ApiManagementHeadPolicyRestriction.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalRevisions": {
      "get": {
        "operationId": "PortalRevision_ListByService",
        "tags": [
          "PortalRevisionContracts"
        ],
        "description": "Lists developer portal's revisions.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "| Field       | Supported operators    | Supported functions               |\n|-------------|------------------------|-----------------------------------|\n\n|name | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|\n|description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith|\n|isCurrent | eq, ne |    |",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PortalRevisionCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListPortalRevisions": {
            "$ref": "./examples/ApiManagementListPortalRevisions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalRevisions/{portalRevisionId}": {
      "get": {
        "operationId": "PortalRevision_Get",
        "tags": [
          "PortalRevisionContracts"
        ],
        "description": "Gets the developer portal's revision specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "portalRevisionId",
            "in": "path",
            "description": "Portal revision identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PortalRevisionContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetPortalRevision": {
            "$ref": "./examples/ApiManagementGetPortalRevision.json"
          }
        }
      },
      "put": {
        "operationId": "PortalRevision_CreateOrUpdate",
        "tags": [
          "PortalRevisionContracts"
        ],
        "description": "Creates a new developer portal's revision by running the portal's publishing. The `isCurrent` property indicates if the revision is publicly accessible.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "portalRevisionId",
            "in": "path",
            "description": "Portal revision identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PortalRevisionContract"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/PortalRevisionContract"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreatePortalRevision": {
            "$ref": "./examples/ApiManagementCreatePortalRevision.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "PortalRevision_Update",
        "tags": [
          "PortalRevisionContracts"
        ],
        "description": "Updates the description of specified portal revision or makes it current.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "portalRevisionId",
            "in": "path",
            "description": "Portal revision identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PortalRevisionContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PortalRevisionContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdatePortalRevision": {
            "$ref": "./examples/ApiManagementUpdatePortalRevision.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/PortalRevisionContract"
        },
        "x-ms-long-running-operation": true
      },
      "head": {
        "operationId": "PortalRevision_GetEntityTag",
        "tags": [
          "PortalRevisionContracts"
        ],
        "description": "Gets the developer portal revision specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "portalRevisionId",
            "in": "path",
            "description": "Portal revision identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadPortalRevision": {
            "$ref": "./examples/ApiManagementHeadPortalRevision.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalconfigs": {
      "get": {
        "operationId": "PortalConfig_ListByService",
        "tags": [
          "PortalConfigContracts"
        ],
        "description": "Lists the developer portal configurations.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PortalConfigCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListPortalConfig": {
            "$ref": "./examples/ApiManagementListPortalConfig.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalconfigs/{portalConfigId}": {
      "get": {
        "operationId": "PortalConfig_Get",
        "tags": [
          "PortalConfigContracts"
        ],
        "description": "Get the developer portal configuration.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "portalConfigId",
            "in": "path",
            "description": "Portal configuration identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PortalConfigContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementPortalConfig": {
            "$ref": "./examples/ApiManagementPortalConfig.json"
          }
        }
      },
      "put": {
        "operationId": "PortalConfig_CreateOrUpdate",
        "tags": [
          "PortalConfigContracts"
        ],
        "description": "Create or update the developer portal configuration.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "portalConfigId",
            "in": "path",
            "description": "Portal configuration identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update the developer portal configuration.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PortalConfigContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PortalConfigContract' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PortalConfigContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreatePortalConfig": {
            "$ref": "./examples/ApiManagementCreatePortalConfig.json"
          }
        }
      },
      "patch": {
        "operationId": "PortalConfig_Update",
        "tags": [
          "PortalConfigContracts"
        ],
        "description": "Update the developer portal configuration.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "portalConfigId",
            "in": "path",
            "description": "Portal configuration identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update the developer portal configuration.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PortalConfigContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PortalConfigContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdatePortalConfig": {
            "$ref": "./examples/ApiManagementUpdatePortalConfig.json"
          }
        }
      },
      "head": {
        "operationId": "PortalConfig_GetEntityTag",
        "tags": [
          "PortalConfigContracts"
        ],
        "description": "Gets the entity state (Etag) version of the developer portal configuration.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "portalConfigId",
            "in": "path",
            "description": "Portal configuration identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadPortalConfig": {
            "$ref": "./examples/ApiManagementHeadPortalConfig.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings": {
      "get": {
        "operationId": "PortalSettings_ListByService",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Lists a collection of portalsettings defined within a service instance..",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PortalSettingsCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-examples": {
          "ApiManagementListPortalSettings": {
            "$ref": "./examples/ApiManagementListPortalSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/delegation": {
      "get": {
        "operationId": "DelegationSettings_Get",
        "tags": [
          "DelegationSettings"
        ],
        "description": "Get Delegation Settings for the Portal.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PortalDelegationSettings"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-examples": {
          "ApiManagementPortalSettingsGetDelegation": {
            "$ref": "./examples/ApiManagementPortalSettingsGetDelegation.json"
          }
        }
      },
      "put": {
        "operationId": "DelegationSettings_CreateOrUpdate",
        "tags": [
          "DelegationSettings"
        ],
        "description": "Create or Update Delegation settings.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PortalDelegationSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PortalDelegationSettings' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PortalDelegationSettings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-examples": {
          "ApiManagementPortalSettingsUpdateDelegation": {
            "$ref": "./examples/ApiManagementPortalSettingsPutDelegation.json"
          }
        }
      },
      "patch": {
        "operationId": "DelegationSettings_Update",
        "tags": [
          "DelegationSettings"
        ],
        "description": "Update Delegation settings.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update Delegation settings.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PortalDelegationSettings"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-examples": {
          "ApiManagementPortalSettingsUpdateDelegation": {
            "$ref": "./examples/ApiManagementPortalSettingsUpdateDelegation.json"
          }
        }
      },
      "head": {
        "operationId": "DelegationSettings_GetEntityTag",
        "tags": [
          "DelegationSettings"
        ],
        "description": "Gets the entity state (Etag) version of the DelegationSettings.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-examples": {
          "ApiManagementHeadDelegationSettings": {
            "$ref": "./examples/ApiManagementHeadDelegationSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/delegation/listSecrets": {
      "post": {
        "operationId": "DelegationSettings_ListSecrets",
        "tags": [
          "DelegationSettings"
        ],
        "description": "Gets the secret validation key of the DelegationSettings.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PortalSettingValidationKeyContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-examples": {
          "ApiManagementListSecretsPortalSettings": {
            "$ref": "./examples/ApiManagementListSecretsPortalSettingsValidationKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/signin": {
      "get": {
        "operationId": "SignInSettings_Get",
        "tags": [
          "SignInSettings"
        ],
        "description": "Get Sign In Settings for the Portal",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PortalSigninSettings"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-examples": {
          "ApiManagementPortalSettingsGetSignIn": {
            "$ref": "./examples/ApiManagementPortalSettingsGetSignIn.json"
          }
        }
      },
      "put": {
        "operationId": "SignInSettings_CreateOrUpdate",
        "tags": [
          "SignInSettings"
        ],
        "description": "Create or Update Sign-In settings.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PortalSigninSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PortalSigninSettings' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PortalSigninSettings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-examples": {
          "ApiManagementPortalSettingsUpdateSignIn": {
            "$ref": "./examples/ApiManagementPortalSettingsPutSignIn.json"
          }
        }
      },
      "patch": {
        "operationId": "SignInSettings_Update",
        "tags": [
          "SignInSettings"
        ],
        "description": "Update Sign-In settings.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update Sign-In settings.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PortalSigninSettings"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-examples": {
          "ApiManagementPortalSettingsUpdateSignIn": {
            "$ref": "./examples/ApiManagementPortalSettingsUpdateSignIn.json"
          }
        }
      },
      "head": {
        "operationId": "SignInSettings_GetEntityTag",
        "tags": [
          "SignInSettings"
        ],
        "description": "Gets the entity state (Etag) version of the SignInSettings.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-examples": {
          "ApiManagementHeadSignInSettings": {
            "$ref": "./examples/ApiManagementHeadSignInSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/portalsettings/signup": {
      "get": {
        "operationId": "SignUpSettings_Get",
        "tags": [
          "SignUpSettings"
        ],
        "description": "Get Sign Up Settings for the Portal",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PortalSignupSettings"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-examples": {
          "ApiManagementPortalSettingsGetSignUp": {
            "$ref": "./examples/ApiManagementPortalSettingsGetSignUp.json"
          }
        }
      },
      "put": {
        "operationId": "SignUpSettings_CreateOrUpdate",
        "tags": [
          "SignUpSettings"
        ],
        "description": "Create or Update Sign-Up settings.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PortalSignupSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PortalSignupSettings' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PortalSignupSettings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-examples": {
          "ApiManagementPortalSettingsUpdateSignUp": {
            "$ref": "./examples/ApiManagementPortalSettingsPutSignUp.json"
          }
        }
      },
      "patch": {
        "operationId": "SignUpSettings_Update",
        "tags": [
          "SignUpSettings"
        ],
        "description": "Update Sign-Up settings.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update Sign-Up settings.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PortalSignupSettings"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-examples": {
          "ApiManagementPortalSettingsUpdateSignUp": {
            "$ref": "./examples/ApiManagementPortalSettingsUpdateSignUp.json"
          }
        }
      },
      "head": {
        "operationId": "SignUpSettings_GetEntityTag",
        "tags": [
          "SignUpSettings"
        ],
        "description": "Gets the entity state (Etag) version of the SignUpSettings.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-examples": {
          "ApiManagementHeadSignUpSettings": {
            "$ref": "./examples/ApiManagementHeadSignUpSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnection_ListByService",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Lists all private endpoint connections of the API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListPrivateEndpointConnections": {
            "$ref": "./examples/ApiManagementListPrivateEndpointConnections.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnection_GetByName",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets the details of the Private Endpoint Connection specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/parameters/PrivateEndpointConnectionName"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetPrivateEndpointConnection": {
            "$ref": "./examples/ApiManagementGetPrivateEndpointConnection.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnection_CreateOrUpdate",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Creates a new Private Endpoint Connection or updates an existing one.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionRequest",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnection' update operation succeeded",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateEndpointConnection"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementApproveOrRejectPrivateEndpointConnection": {
            "$ref": "./examples/ApiManagementApproveOrRejectPrivateEndpointConnection.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateEndpointConnection"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "PrivateEndpointConnection_Delete",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Deletes the specified Private Endpoint Connection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/parameters/PrivateEndpointConnectionName"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeletePrivateEndpointConnection": {
            "$ref": "./examples/ApiManagementDeletePrivateEndpointConnection.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/privateLinkResources": {
      "get": {
        "operationId": "PrivateEndpointConnection_ListPrivateLinkResources",
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Gets the private link resources",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListPrivateLinkGroupResources": {
            "$ref": "./examples/ApiManagementListPrivateLinkGroupResources.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/privateLinkResources/{privateLinkSubResourceName}": {
      "get": {
        "operationId": "PrivateEndpointConnection_GetPrivateLinkResource",
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Gets the private link resources",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "privateLinkSubResourceName",
            "in": "path",
            "description": "The name of the private link associated with the Azure resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateLinkResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetPrivateLinkGroupResource": {
            "$ref": "./examples/ApiManagementGetPrivateLinkGroupResource.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products": {
      "get": {
        "operationId": "Product_ListByService",
        "tags": [
          "ProductContracts"
        ],
        "description": "Lists a collection of products in the specified service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| groups | expand |     |     |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "expandGroups",
            "in": "query",
            "description": "When set to true, the response contains an array of groups that have visibility to the product. The default is false.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Products which are part of a specific tag.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProductCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListProducts": {
            "$ref": "./examples/ApiManagementListProducts.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}": {
      "get": {
        "operationId": "Product_Get",
        "tags": [
          "ProductContracts"
        ],
        "description": "Gets the details of the product specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ProductContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetProduct": {
            "$ref": "./examples/ApiManagementGetProduct.json"
          }
        }
      },
      "put": {
        "operationId": "Product_CreateOrUpdate",
        "tags": [
          "ProductContracts"
        ],
        "description": "Creates or Updates a product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ProductContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/ProductContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateProduct": {
            "$ref": "./examples/ApiManagementCreateProduct.json"
          }
        }
      },
      "patch": {
        "operationId": "Product_Update",
        "tags": [
          "ProductContracts"
        ],
        "description": "Update existing product details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ProductContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateProduct": {
            "$ref": "./examples/ApiManagementUpdateProduct.json"
          }
        }
      },
      "delete": {
        "operationId": "Product_Delete",
        "tags": [
          "ProductContracts"
        ],
        "description": "Delete product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deleteSubscriptions",
            "in": "query",
            "description": "Delete existing subscriptions associated with the product or not.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteProduct": {
            "$ref": "./examples/ApiManagementDeleteProduct.json"
          }
        }
      },
      "head": {
        "operationId": "Product_GetEntityTag",
        "tags": [
          "ProductContracts"
        ],
        "description": "Gets the entity state (Etag) version of the product specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadProduct": {
            "$ref": "./examples/ApiManagementHeadProduct.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apiLinks": {
      "get": {
        "operationId": "ProductApiLink_ListByProduct",
        "tags": [
          "ProductApiLinkContracts"
        ],
        "description": "Lists a collection of the API links associated with a product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| apiId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProductApiLinkCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListProductApiLinks": {
            "$ref": "./examples/ApiManagementListProductApiLinks.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apiLinks/{apiLinkId}": {
      "get": {
        "operationId": "ProductApiLink_Get",
        "tags": [
          "ProductApiLinkContracts"
        ],
        "description": "Gets the API link for the product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "apiLinkId",
            "in": "path",
            "description": "Product-API link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ProductApiLinkContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetProductApiLink": {
            "$ref": "./examples/ApiManagementGetProductApiLink.json"
          }
        }
      },
      "put": {
        "operationId": "ProductApiLink_CreateOrUpdate",
        "tags": [
          "ProductApiLinkContracts"
        ],
        "description": "Adds an API to the specified product via link.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "apiLinkId",
            "in": "path",
            "description": "Product-API link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductApiLinkContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ProductApiLinkContract' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ProductApiLinkContract"
            }
          },
          "201": {
            "description": "Resource 'ProductApiLinkContract' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ProductApiLinkContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateProductApiLink": {
            "$ref": "./examples/ApiManagementCreateProductApiLink.json"
          }
        }
      },
      "delete": {
        "operationId": "ProductApiLink_Delete",
        "tags": [
          "ProductApiLinkContracts"
        ],
        "description": "Deletes the specified API from the specified product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "apiLinkId",
            "in": "path",
            "description": "Product-API link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteProductApiLink": {
            "$ref": "./examples/ApiManagementDeleteProductApiLink.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis": {
      "get": {
        "operationId": "ProductApi_ListByProduct",
        "tags": [
          "ProductContracts"
        ],
        "description": "Lists a collection of the APIs associated with a product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListProductApis": {
            "$ref": "./examples/ApiManagementListProductApis.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}": {
      "put": {
        "operationId": "ProductApi_CreateOrUpdate",
        "tags": [
          "ProductContracts"
        ],
        "description": "Adds an API to the specified product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiContract"
            }
          },
          "201": {
            "description": "Resource 'ApiContract' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApiContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateProductApi": {
            "$ref": "./examples/ApiManagementCreateProductApi.json"
          }
        }
      },
      "delete": {
        "operationId": "ProductApi_Delete",
        "tags": [
          "ProductContracts"
        ],
        "description": "Deletes the specified API from the specified product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteProductApi": {
            "$ref": "./examples/ApiManagementDeleteProductApi.json"
          }
        }
      },
      "head": {
        "operationId": "ProductApi_CheckEntityExists",
        "tags": [
          "ProductContracts"
        ],
        "description": "Checks that API entity specified by identifier is associated with the Product entity.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadProductApi": {
            "$ref": "./examples/ApiManagementHeadProductApi.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groupLinks": {
      "get": {
        "operationId": "ProductGroupLink_ListByProduct",
        "tags": [
          "ProductGroupLinkContracts"
        ],
        "description": "Lists a collection of the group links associated with a product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| groupId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProductGroupLinkCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListProductGroupLinks": {
            "$ref": "./examples/ApiManagementListProductGroupLinks.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groupLinks/{groupLinkId}": {
      "get": {
        "operationId": "ProductGroupLink_Get",
        "tags": [
          "ProductGroupLinkContracts"
        ],
        "description": "Gets the group link for the product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "groupLinkId",
            "in": "path",
            "description": "Product-Group link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ProductGroupLinkContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetProductGroupLink": {
            "$ref": "./examples/ApiManagementGetProductGroupLink.json"
          }
        }
      },
      "put": {
        "operationId": "ProductGroupLink_CreateOrUpdate",
        "tags": [
          "ProductGroupLinkContracts"
        ],
        "description": "Adds a group to the specified product via link.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "groupLinkId",
            "in": "path",
            "description": "Product-Group link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductGroupLinkContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ProductGroupLinkContract' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ProductGroupLinkContract"
            }
          },
          "201": {
            "description": "Resource 'ProductGroupLinkContract' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ProductGroupLinkContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateProductGroupLink": {
            "$ref": "./examples/ApiManagementCreateProductGroupLink.json"
          }
        }
      },
      "delete": {
        "operationId": "ProductGroupLink_Delete",
        "tags": [
          "ProductGroupLinkContracts"
        ],
        "description": "Deletes the specified group from the specified product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "groupLinkId",
            "in": "path",
            "description": "Product-Group link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteProductGroupLink": {
            "$ref": "./examples/ApiManagementDeleteProductGroupLink.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups": {
      "get": {
        "operationId": "ProductGroup_ListByProduct",
        "tags": [
          "ProductContracts"
        ],
        "description": "Lists the collection of developer groups associated with the specified product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt |     |</br>| displayName | filter | eq, ne |     |</br>| description | filter | eq, ne |     |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GroupCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListProductGroups": {
            "$ref": "./examples/ApiManagementListProductGroups.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}": {
      "put": {
        "operationId": "ProductGroup_CreateOrUpdate",
        "tags": [
          "ProductContracts"
        ],
        "description": "Adds the association between the specified developer group with the specified product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Group identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GroupContract"
            }
          },
          "201": {
            "description": "Resource 'GroupContract' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/GroupContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateProductGroup": {
            "$ref": "./examples/ApiManagementCreateProductGroup.json"
          }
        }
      },
      "delete": {
        "operationId": "ProductGroup_Delete",
        "tags": [
          "ProductContracts"
        ],
        "description": "Deletes the association between the specified group and product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Group identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteProductGroup": {
            "$ref": "./examples/ApiManagementDeleteProductGroup.json"
          }
        }
      },
      "head": {
        "operationId": "ProductGroup_CheckEntityExists",
        "tags": [
          "ProductContracts"
        ],
        "description": "Checks that Group entity specified by identifier is associated with the Product entity.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Group identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadProductGroup": {
            "$ref": "./examples/ApiManagementHeadProductGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/policies": {
      "get": {
        "operationId": "ProductPolicy_ListByProduct",
        "tags": [
          "ProductPolicy"
        ],
        "description": "Get the policy configuration at the Product level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListProductPolicies": {
            "$ref": "./examples/ApiManagementListProductPolicies.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/policies/{policyId}": {
      "get": {
        "operationId": "ProductPolicy_Get",
        "tags": [
          "ProductPolicy"
        ],
        "description": "Get the policy configuration at the Product level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Policy Export Format.",
            "required": false,
            "type": "string",
            "default": "xml",
            "enum": [
              "xml",
              "rawxml"
            ],
            "x-ms-enum": {
              "name": "PolicyExportFormat",
              "modelAsString": true,
              "values": [
                {
                  "name": "xml",
                  "value": "xml",
                  "description": "The contents are inline and Content type is an XML document."
                },
                {
                  "name": "rawxml",
                  "value": "rawxml",
                  "description": "The contents are inline and Content type is a non XML encoded policy document."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetProductPolicy": {
            "$ref": "./examples/ApiManagementGetProductPolicy.json"
          }
        }
      },
      "put": {
        "operationId": "ProductPolicy_CreateOrUpdate",
        "tags": [
          "ProductPolicy"
        ],
        "description": "Creates or updates policy configuration for the Product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The policy contents to apply.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateProductPolicy": {
            "$ref": "./examples/ApiManagementCreateProductPolicy.json"
          }
        }
      },
      "delete": {
        "operationId": "ProductPolicy_Delete",
        "tags": [
          "ProductPolicy"
        ],
        "description": "Deletes the policy configuration at the Product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteProductPolicy": {
            "$ref": "./examples/ApiManagementDeleteProductPolicy.json"
          }
        }
      },
      "head": {
        "operationId": "ProductPolicy_GetEntityTag",
        "tags": [
          "ProductPolicy"
        ],
        "description": "Get the ETag of the policy configuration at the Product level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadProductPolicy": {
            "$ref": "./examples/ApiManagementHeadProductPolicy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions": {
      "get": {
        "operationId": "ProductSubscriptions_List",
        "tags": [
          "ProductContracts"
        ],
        "description": "Lists the collection of subscriptions to the specified product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| stateComment | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| ownerId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| scope | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| user | expand |     |     |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubscriptionCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListProductSubscriptions": {
            "$ref": "./examples/ApiManagementListProductSubscriptions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/tags": {
      "get": {
        "operationId": "Tag_ListByProduct",
        "tags": [
          "TagContractOperation"
        ],
        "description": "Lists all Tags associated with the Product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListProductTags": {
            "$ref": "./examples/ApiManagementListProductTags.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/tags/{tagId}": {
      "get": {
        "operationId": "Tag_GetByProduct",
        "tags": [
          "TagContractOperation"
        ],
        "description": "Get tag associated with the Product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetProductTag": {
            "$ref": "./examples/ApiManagementGetProductTag.json"
          }
        }
      },
      "put": {
        "operationId": "Tag_AssignToProduct",
        "tags": [
          "TagContractOperation"
        ],
        "description": "Assign tag to the Product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'TagContract' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/TagContract"
            }
          },
          "201": {
            "description": "Resource 'TagContract' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/TagContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateProductTag": {
            "$ref": "./examples/ApiManagementCreateProductTag.json"
          }
        }
      },
      "delete": {
        "operationId": "Tag_DetachFromProduct",
        "tags": [
          "TagContractOperation"
        ],
        "description": "Detach the tag from the Product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteProductTag": {
            "$ref": "./examples/ApiManagementDeleteProductTag.json"
          }
        }
      },
      "head": {
        "operationId": "Tag_GetEntityStateByProduct",
        "tags": [
          "TagContractOperation"
        ],
        "description": "Gets the entity state version of the tag specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadProductTag": {
            "$ref": "./examples/ApiManagementHeadProductTag.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/wikis": {
      "get": {
        "operationId": "ProductWikis_list",
        "tags": [
          "ProductWiki"
        ],
        "description": "Gets the details of the Wiki for a Product specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | eq |  contains |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/WikiCollection"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetApiWiki": {
            "$ref": "./examples/ApiManagementListProductWikis.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/wikis/default": {
      "get": {
        "operationId": "ProductWiki_Get",
        "tags": [
          "ProductWiki"
        ],
        "description": "Gets the details of the Wiki for a Product specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/WikiContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetProductWiki": {
            "$ref": "./examples/ApiManagementGetProductWiki.json"
          }
        }
      },
      "put": {
        "operationId": "ProductWiki_CreateOrUpdate",
        "tags": [
          "ProductWiki"
        ],
        "description": "Creates a new Wiki for a Product or updates an existing one.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WikiContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/WikiContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/WikiContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateProductWiki": {
            "$ref": "./examples/ApiManagementCreateProductWiki.json"
          }
        }
      },
      "patch": {
        "operationId": "ProductWiki_Update",
        "tags": [
          "ProductWiki"
        ],
        "description": "Updates the details of the Wiki for a Product specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Wiki Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WikiUpdateContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/WikiContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateProductWiki": {
            "$ref": "./examples/ApiManagementUpdateProductWiki.json"
          }
        }
      },
      "delete": {
        "operationId": "ProductWiki_Delete",
        "tags": [
          "ProductWiki"
        ],
        "description": "Deletes the specified Wiki from a Product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteProductWiki": {
            "$ref": "./examples/ApiManagementDeleteProductWiki.json"
          }
        }
      },
      "head": {
        "operationId": "ProductWiki_GetEntityTag",
        "tags": [
          "ProductWiki"
        ],
        "description": "Gets the entity state (Etag) version of the Wiki for a Product specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadProductWiki": {
            "$ref": "./examples/ApiManagementHeadProductWiki.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/productsByTags": {
      "get": {
        "operationId": "Product_ListByTags",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Lists a collection of products associated with tags.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "includeNotTaggedProducts",
            "in": "query",
            "description": "Include not tagged Products.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagResourceCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListProductsByTags": {
            "$ref": "./examples/ApiManagementListProductsByTags.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}": {
      "get": {
        "operationId": "QuotaByCounterKeys_ListByService",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Lists a collection of current quota counter periods associated with the counter-key configured in the policy on the specified service instance. The api does not support paging yet.",
        "externalDocs": {
          "description": "Document describing how to configure the quota policies.",
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-product-with-rules#a-namepolicies-ato-configure-call-rate-limit-and-quota-policies"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "quotaCounterKey",
            "in": "path",
            "description": "Quota counter key identifier. This is the result of expression defined in `counter-key` attribute of the quota-by-key policy. For example, if you specify `counter-key=\"boo\"` in the policy, then it’s accessible by `\"boo\"` counter key. But if it’s defined as `counter-key=\"@(\"b\"+\"a\")\"` then it will be accessible by `\"ba\"` key.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/QuotaCounterCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetQuotaCounterKeys": {
            "$ref": "./examples/ApiManagementGetQuotaCounterKeys.json"
          }
        }
      },
      "patch": {
        "operationId": "QuotaByCounterKeys_Update",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Updates all the quota counter values specified with the existing quota counter key to a value in the specified service instance. This should be used for reset of the quota counter values.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "quotaCounterKey",
            "in": "path",
            "description": "Quota counter key identifier. This is the result of expression defined in `counter-key` attribute of the quota-by-key policy. For example, if you specify `counter-key=\"boo\"` in the policy, then it’s accessible by `\"boo\"` counter key. But if it’s defined as `counter-key=\"@(\"b\"+\"a\")\"` then it will be accessible by `\"ba\"` key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The value of the quota counter to be applied to all quota counter periods.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuotaCounterValueUpdateContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/QuotaCounterCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateQuotaCounterKey": {
            "$ref": "./examples/ApiManagementUpdateQuotaCounterKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/periods/{quotaPeriodKey}": {
      "get": {
        "operationId": "QuotaByPeriodKeys_Get",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Gets the value of the quota counter associated with the counter-key in the policy for the specific period in service instance.",
        "externalDocs": {
          "description": "Document describing how to configure the quota policies.",
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-product-with-rules#a-namepolicies-ato-configure-call-rate-limit-and-quota-policies"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "quotaCounterKey",
            "in": "path",
            "description": "Quota counter key identifier. This is the result of expression defined in `counter-key` attribute of the quota-by-key policy. For example, if you specify `counter-key=\"boo\"` in the policy, then it’s accessible by `\"boo\"` counter key. But if it’s defined as `counter-key=\"@(\"b\"+\"a\")\"` then it will be accessible by `\"ba\"` key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "quotaPeriodKey",
            "in": "path",
            "description": "Quota period key identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/QuotaCounterContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetQuotaCounterKeysByQuotaPeriod": {
            "$ref": "./examples/ApiManagementGetQuotaCounterKeysByQuotaPeriod.json"
          }
        }
      },
      "patch": {
        "operationId": "QuotaByPeriodKeys_Update",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Updates an existing quota counter value in the specified service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "quotaCounterKey",
            "in": "path",
            "description": "Quota counter key identifier. This is the result of expression defined in `counter-key` attribute of the quota-by-key policy. For example, if you specify `counter-key=\"boo\"` in the policy, then it’s accessible by `\"boo\"` counter key. But if it’s defined as `counter-key=\"@(\"b\"+\"a\")\"` then it will be accessible by `\"ba\"` key.",
            "required": true,
            "type": "string"
          },
          {
            "name": "quotaPeriodKey",
            "in": "path",
            "description": "Quota period key identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The value of the Quota counter to be applied on the specified period.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuotaCounterValueUpdateContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/QuotaCounterContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateQuotaCounterKeyByQuotaPeriod": {
            "$ref": "./examples/ApiManagementUpdateQuotaCounterKeyByQuotaPeriod.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/regions": {
      "get": {
        "operationId": "Region_ListByService",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Lists all azure regions in which the service exists.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RegionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListRegions": {
            "$ref": "./examples/ApiManagementListRegions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byApi": {
      "get": {
        "operationId": "Reports_ListByApi",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Lists report records by API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by query option.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ReportCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetReportsByApi": {
            "$ref": "./examples/ApiManagementGetReportsByApi.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byGeo": {
      "get": {
        "operationId": "Reports_ListByGeo",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Lists report records by geography.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp | filter | ge, le |     | </br>| country | select |     |     | </br>| region | select |     |     | </br>| zip | select |     |     | </br>| apiRegion | filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |     | </br>| callCountSuccess | select |     |     | </br>| callCountBlocked | select |     |     | </br>| callCountFailed | select |     |     | </br>| callCountOther | select |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ReportCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetReportsByGeo": {
            "$ref": "./examples/ApiManagementGetReportsByGeo.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byOperation": {
      "get": {
        "operationId": "Reports_ListByOperation",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Lists report records by API Operations.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp | filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion | filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>| operationId | select, filter | eq |     | </br>| callCountSuccess | select, orderBy |     |     | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select, orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>| callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by query option.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ReportCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetReportsByOperation": {
            "$ref": "./examples/ApiManagementGetReportsByOperation.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byProduct": {
      "get": {
        "operationId": "Reports_ListByProduct",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Lists report records by Product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp | filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion | filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | select, filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>| callCountSuccess | select, orderBy |     |     | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select, orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>| callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by query option.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ReportCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetReportsByProduct": {
            "$ref": "./examples/ApiManagementGetReportsByProduct.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byRequest": {
      "get": {
        "operationId": "Reports_ListByRequest",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Lists report records by Request.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp | filter | ge, le |     | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |     | </br>| productId | filter | eq |     | </br>| userId | filter | eq |     | </br>| apiRegion | filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RequestReportCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetReportsByRequest": {
            "$ref": "./examples/ApiManagementGetReportsByRequest.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/bySubscription": {
      "get": {
        "operationId": "Reports_ListBySubscription",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Lists report records by subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp | filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| apiRegion | filter | eq |     | </br>| userId | select, filter | eq |     | </br>| productId | select, filter | eq |     | </br>| subscriptionId | select, filter | eq |     | </br>| callCountSuccess | select, orderBy |     |     | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select, orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>| callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by query option.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ReportCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetReportsBySubscription": {
            "$ref": "./examples/ApiManagementGetReportsBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byTime": {
      "get": {
        "operationId": "Reports_ListByTime",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Lists report records by Time.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp | filter, select | ge, le |     | </br>| interval | select |     |     | </br>| apiRegion | filter | eq |     | </br>| userId | filter | eq |     | </br>| productId | filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |     | </br>| callCountSuccess | select |     |     | </br>| callCountBlocked | select |     |     | </br>| callCountFailed | select |     |     | </br>| callCountOther | select |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by query option.",
            "required": false,
            "type": "string"
          },
          {
            "name": "interval",
            "in": "query",
            "description": "By time interval. Interval must be multiple of 15 minutes and may not be zero. The value should be in ISO  8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).This code can be used to convert TimeSpan to a valid interval string: XmlConvert.ToString(new TimeSpan(hours, minutes, seconds)).",
            "required": true,
            "type": "string",
            "format": "duration"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ReportCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetReportsByTime": {
            "$ref": "./examples/ApiManagementGetReportsByTime.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/reports/byUser": {
      "get": {
        "operationId": "Reports_ListByUser",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Lists report records by User.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| timestamp | filter | ge, le |     | </br>| displayName | select, orderBy |     |     | </br>| userId | select, filter | eq |     | </br>| apiRegion | filter | eq |     | </br>| productId | filter | eq |     | </br>| subscriptionId | filter | eq |     | </br>| apiId | filter | eq |     | </br>| operationId | filter | eq |     | </br>| callCountSuccess | select, orderBy |     |     | </br>| callCountBlocked | select, orderBy |     |     | </br>| callCountFailed | select, orderBy |     |     | </br>| callCountOther | select, orderBy |     |     | </br>| callCountTotal | select, orderBy |     |     | </br>| bandwidth | select, orderBy |     |     | </br>| cacheHitsCount | select |     |     | </br>| cacheMissCount | select |     |     | </br>| apiTimeAvg | select, orderBy |     |     | </br>| apiTimeMin | select |     |     | </br>| apiTimeMax | select |     |     | </br>| serviceTimeAvg | select |     |     | </br>| serviceTimeMin | select |     |     | </br>| serviceTimeMax | select |     |     | </br>",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by query option.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ReportCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetReportsByUser": {
            "$ref": "./examples/ApiManagementGetReportsByUser.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/restore": {
      "post": {
        "operationId": "ApiManagementService_Restore",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Restores a backup of an API Management service created using the ApiManagementService_Backup operation on the current service. This is a long running operation and could take several minutes to complete.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the Restore API Management service from backup operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceBackupRestoreParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiManagementServiceResource"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementRestoreService": {
            "$ref": "./examples/ApiManagementRestoreWithAccessKey.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ApiManagementServiceResource"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/schemas": {
      "get": {
        "operationId": "GlobalSchema_ListByService",
        "tags": [
          "GlobalSchemaContracts"
        ],
        "description": "Lists a collection of schemas registered with service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GlobalSchemaCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListSchemas": {
            "$ref": "./examples/ApiManagementListGlobalSchemas.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/schemas/{schemaId}": {
      "get": {
        "operationId": "GlobalSchema_Get",
        "tags": [
          "GlobalSchemaContracts"
        ],
        "description": "Gets the details of the Schema specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "schemaId",
            "in": "path",
            "description": "Schema id identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GlobalSchemaContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetSchema1": {
            "$ref": "./examples/ApiManagementGetGlobalSchema1.json"
          },
          "ApiManagementGetSchema2": {
            "$ref": "./examples/ApiManagementGetGlobalSchema2.json"
          }
        }
      },
      "put": {
        "operationId": "GlobalSchema_CreateOrUpdate",
        "tags": [
          "GlobalSchemaContracts"
        ],
        "description": "Creates new or updates existing specified Schema of the API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "schemaId",
            "in": "path",
            "description": "Schema id identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GlobalSchemaContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GlobalSchemaContract"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/GlobalSchemaContract"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateSchema1": {
            "$ref": "./examples/ApiManagementCreateGlobalSchema1.json"
          },
          "ApiManagementCreateSchema2": {
            "$ref": "./examples/ApiManagementCreateGlobalSchema2.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/GlobalSchemaContract"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "GlobalSchema_Delete",
        "tags": [
          "GlobalSchemaContracts"
        ],
        "description": "Deletes specific Schema.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "schemaId",
            "in": "path",
            "description": "Schema id identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteSchema": {
            "$ref": "./examples/ApiManagementDeleteGlobalSchema.json"
          }
        }
      },
      "head": {
        "operationId": "GlobalSchema_GetEntityTag",
        "tags": [
          "GlobalSchemaContracts"
        ],
        "description": "Gets the entity state (Etag) version of the Schema specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "schemaId",
            "in": "path",
            "description": "Schema id identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadApi": {
            "$ref": "./examples/ApiManagementHeadGlobalSchema.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/settings": {
      "get": {
        "operationId": "TenantSettings_ListByService",
        "tags": [
          "TenantSettingsContracts"
        ],
        "description": "Public settings.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Not used",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TenantSettingsCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-examples": {
          "ApiManagementListTenantSettings": {
            "$ref": "./examples/ApiManagementListTenantSettings.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/settings/{settingsType}": {
      "get": {
        "operationId": "TenantSettings_Get",
        "tags": [
          "TenantSettingsContracts"
        ],
        "description": "Get tenant settings.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "settingsType",
            "in": "path",
            "description": "The identifier of the settings.",
            "required": true,
            "type": "string",
            "enum": [
              "public"
            ],
            "x-ms-enum": {
              "name": "SettingsTypeName",
              "modelAsString": true,
              "values": [
                {
                  "name": "public",
                  "value": "public"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TenantSettingsContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": true,
        "x-ms-examples": {
          "ApiManagementGetTenantSettings": {
            "$ref": "./examples/ApiManagementGetTenantSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/skus": {
      "get": {
        "operationId": "ApiManagementServiceSkus_ListAvailableServiceSkus",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Gets all available SKU for a given API Management service",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceSkuResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListSKUs-Consumption": {
            "$ref": "./examples/ApiManagementListSKUs-Consumption.json"
          },
          "ApiManagementListSKUs-Dedicated": {
            "$ref": "./examples/ApiManagementListSKUs-Dedicated.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions": {
      "get": {
        "operationId": "Subscription_List",
        "tags": [
          "SubscriptionContracts"
        ],
        "description": "Lists all subscriptions of the API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| stateComment | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| ownerId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| scope | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| user | expand |     |     |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubscriptionCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListSubscriptions": {
            "$ref": "./examples/ApiManagementListSubscriptions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}": {
      "get": {
        "operationId": "Subscription_Get",
        "tags": [
          "SubscriptionContracts"
        ],
        "description": "Gets the specified Subscription entity.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "sid",
            "in": "path",
            "description": "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SubscriptionContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetSubscription": {
            "$ref": "./examples/ApiManagementGetSubscription.json"
          }
        }
      },
      "put": {
        "operationId": "Subscription_CreateOrUpdate",
        "tags": [
          "SubscriptionContracts"
        ],
        "description": "Creates or updates the subscription of specified user to the specified product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "sid",
            "in": "path",
            "description": "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "notify",
            "in": "query",
            "description": "Notify change in Subscription State.\n- If false, do not send any email notification for change of state of subscription\n- If true, send email notification of change of state of subscription",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "appType",
            "in": "query",
            "description": "Determines the type of application which send the create user request. Default is legacy publisher portal.",
            "required": false,
            "type": "string",
            "enum": [
              "portal",
              "developerPortal"
            ],
            "x-ms-enum": {
              "name": "AppType",
              "modelAsString": true,
              "values": [
                {
                  "name": "portal",
                  "value": "portal",
                  "description": "User create request was sent by legacy developer portal."
                },
                {
                  "name": "developerPortal",
                  "value": "developerPortal",
                  "description": "User create request was sent by new developer portal."
                }
              ]
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionCreateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SubscriptionContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/SubscriptionContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateSubscription": {
            "$ref": "./examples/ApiManagementCreateSubscription.json"
          }
        }
      },
      "patch": {
        "operationId": "Subscription_Update",
        "tags": [
          "SubscriptionContracts"
        ],
        "description": "Updates the details of a subscription specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "sid",
            "in": "path",
            "description": "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "notify",
            "in": "query",
            "description": "Notify change in Subscription State.\n- If false, do not send any email notification for change of state of subscription\n- If true, send email notification of change of state of subscription",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appType",
            "in": "query",
            "description": "Determines the type of application which send the create user request. Default is legacy publisher portal.",
            "required": false,
            "type": "string",
            "enum": [
              "portal",
              "developerPortal"
            ],
            "x-ms-enum": {
              "name": "AppType",
              "modelAsString": true,
              "values": [
                {
                  "name": "portal",
                  "value": "portal",
                  "description": "User create request was sent by legacy developer portal."
                },
                {
                  "name": "developerPortal",
                  "value": "developerPortal",
                  "description": "User create request was sent by new developer portal."
                }
              ]
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SubscriptionContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateSubscription": {
            "$ref": "./examples/ApiManagementUpdateSubscription.json"
          }
        }
      },
      "delete": {
        "operationId": "Subscription_Delete",
        "tags": [
          "SubscriptionContracts"
        ],
        "description": "Deletes the specified subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "sid",
            "in": "path",
            "description": "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteSubscription": {
            "$ref": "./examples/ApiManagementDeleteSubscription.json"
          }
        }
      },
      "head": {
        "operationId": "Subscription_GetEntityTag",
        "tags": [
          "SubscriptionContracts"
        ],
        "description": "Gets the entity state (Etag) version of the apimanagement subscription specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "sid",
            "in": "path",
            "description": "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadSubscription": {
            "$ref": "./examples/ApiManagementHeadSubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/listSecrets": {
      "post": {
        "operationId": "Subscription_ListSecrets",
        "tags": [
          "SubscriptionContracts"
        ],
        "description": "Gets the specified Subscription keys.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "sid",
            "in": "path",
            "description": "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubscriptionKeysContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementSubscriptionListSecrets": {
            "$ref": "./examples/ApiManagementSubscriptionListSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey": {
      "post": {
        "operationId": "Subscription_RegeneratePrimaryKey",
        "tags": [
          "SubscriptionContracts"
        ],
        "description": "Regenerates primary key of existing subscription of the API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "sid",
            "in": "path",
            "description": "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementSubscriptionRegeneratePrimaryKey": {
            "$ref": "./examples/ApiManagementSubscriptionRegeneratePrimaryKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey": {
      "post": {
        "operationId": "Subscription_RegenerateSecondaryKey",
        "tags": [
          "SubscriptionContracts"
        ],
        "description": "Regenerates secondary key of existing subscription of the API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "sid",
            "in": "path",
            "description": "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementSubscriptionRegenerateSecondaryKey": {
            "$ref": "./examples/ApiManagementSubscriptionRegenerateSecondaryKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tagResources": {
      "get": {
        "operationId": "TagResource_ListByService",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Lists a collection of resources associated with tags.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| aid | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| isCurrent | filter | eq |     |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagResourceCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListTagResources": {
            "$ref": "./examples/ApiManagementListTagResources.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags": {
      "get": {
        "operationId": "Tag_ListByService",
        "tags": [
          "TagContractOperationGroup"
        ],
        "description": "Lists a collection of tags defined within a service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Scope like 'apis', 'products' or 'apis/{apiId}",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListTags": {
            "$ref": "./examples/ApiManagementListTags.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags/{tagId}": {
      "get": {
        "operationId": "Tag_Get",
        "tags": [
          "TagContractOperationGroup"
        ],
        "description": "Gets the details of the tag specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetTag": {
            "$ref": "./examples/ApiManagementGetTag.json"
          }
        }
      },
      "put": {
        "operationId": "Tag_CreateOrUpdate",
        "tags": [
          "TagContractOperationGroup"
        ],
        "description": "Creates a tag.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateTag": {
            "$ref": "./examples/ApiManagementCreateTag.json"
          }
        }
      },
      "patch": {
        "operationId": "Tag_Update",
        "tags": [
          "TagContractOperationGroup"
        ],
        "description": "Updates the details of the tag specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateTag": {
            "$ref": "./examples/ApiManagementUpdateTag.json"
          }
        }
      },
      "delete": {
        "operationId": "Tag_Delete",
        "tags": [
          "TagContractOperationGroup"
        ],
        "description": "Deletes specific tag of the API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteTag": {
            "$ref": "./examples/ApiManagementDeleteTag.json"
          }
        }
      },
      "head": {
        "operationId": "Tag_GetEntityState",
        "tags": [
          "TagContractOperationGroup"
        ],
        "description": "Gets the entity state version of the tag specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadTag": {
            "$ref": "./examples/ApiManagementHeadTag.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags/{tagId}/apiLinks": {
      "get": {
        "operationId": "TagApiLink_ListByProduct",
        "tags": [
          "TagApiLinkContracts"
        ],
        "description": "Lists a collection of the API links associated with a tag.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| apiId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagApiLinkCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListTagApiLinks": {
            "$ref": "./examples/ApiManagementListTagApiLinks.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags/{tagId}/apiLinks/{apiLinkId}": {
      "get": {
        "operationId": "TagApiLink_Get",
        "tags": [
          "TagApiLinkContracts"
        ],
        "description": "Gets the API link for the tag.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiLinkId",
            "in": "path",
            "description": "Tag-API link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TagApiLinkContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetTagApiLink": {
            "$ref": "./examples/ApiManagementGetTagApiLink.json"
          }
        }
      },
      "put": {
        "operationId": "TagApiLink_CreateOrUpdate",
        "tags": [
          "TagApiLinkContracts"
        ],
        "description": "Adds an API to the specified tag via link.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiLinkId",
            "in": "path",
            "description": "Tag-API link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagApiLinkContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'TagApiLinkContract' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/TagApiLinkContract"
            }
          },
          "201": {
            "description": "Resource 'TagApiLinkContract' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/TagApiLinkContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateTagApiLink": {
            "$ref": "./examples/ApiManagementCreateTagApiLink.json"
          }
        }
      },
      "delete": {
        "operationId": "TagApiLink_Delete",
        "tags": [
          "TagApiLinkContracts"
        ],
        "description": "Deletes the specified API from the specified tag.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiLinkId",
            "in": "path",
            "description": "Tag-API link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteTagApiLink": {
            "$ref": "./examples/ApiManagementDeleteTagApiLink.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags/{tagId}/operationLinks": {
      "get": {
        "operationId": "TagOperationLink_ListByProduct",
        "tags": [
          "TagOperationLinkContracts"
        ],
        "description": "Lists a collection of the operation links associated with a tag.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| operationId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagOperationLinkCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListTagOperationLinks": {
            "$ref": "./examples/ApiManagementListTagOperationLinks.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags/{tagId}/operationLinks/{operationLinkId}": {
      "get": {
        "operationId": "TagOperationLink_Get",
        "tags": [
          "TagOperationLinkContracts"
        ],
        "description": "Gets the operation link for the tag.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationLinkId",
            "in": "path",
            "description": "Tag-operation link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TagOperationLinkContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetTagOperationLink": {
            "$ref": "./examples/ApiManagementGetTagOperationLink.json"
          }
        }
      },
      "put": {
        "operationId": "TagOperationLink_CreateOrUpdate",
        "tags": [
          "TagOperationLinkContracts"
        ],
        "description": "Adds an operation to the specified tag via link.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationLinkId",
            "in": "path",
            "description": "Tag-operation link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagOperationLinkContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'TagOperationLinkContract' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/TagOperationLinkContract"
            }
          },
          "201": {
            "description": "Resource 'TagOperationLinkContract' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/TagOperationLinkContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateTagOperationLink": {
            "$ref": "./examples/ApiManagementCreateTagOperationLink.json"
          }
        }
      },
      "delete": {
        "operationId": "TagOperationLink_Delete",
        "tags": [
          "TagOperationLinkContracts"
        ],
        "description": "Deletes the specified operation from the specified tag.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationLinkId",
            "in": "path",
            "description": "Tag-operation link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteTagOperationLink": {
            "$ref": "./examples/ApiManagementDeleteTagOperationLink.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags/{tagId}/productLinks": {
      "get": {
        "operationId": "TagProductLink_ListByProduct",
        "tags": [
          "TagProductLinkContracts"
        ],
        "description": "Lists a collection of the product links associated with a tag.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagProductLinkCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListTagProductLinks": {
            "$ref": "./examples/ApiManagementListTagProductLinks.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tags/{tagId}/productLinks/{productLinkId}": {
      "get": {
        "operationId": "TagProductLink_Get",
        "tags": [
          "TagProductLinkContracts"
        ],
        "description": "Gets the product link for the tag.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productLinkId",
            "in": "path",
            "description": "Tag-product link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TagProductLinkContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetTagProductLink": {
            "$ref": "./examples/ApiManagementGetTagProductLink.json"
          }
        }
      },
      "put": {
        "operationId": "TagProductLink_CreateOrUpdate",
        "tags": [
          "TagProductLinkContracts"
        ],
        "description": "Adds a product to the specified tag via link.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productLinkId",
            "in": "path",
            "description": "Tag-product link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagProductLinkContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'TagProductLinkContract' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/TagProductLinkContract"
            }
          },
          "201": {
            "description": "Resource 'TagProductLinkContract' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/TagProductLinkContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateTagProductLink": {
            "$ref": "./examples/ApiManagementCreateTagProductLink.json"
          }
        }
      },
      "delete": {
        "operationId": "TagProductLink_Delete",
        "tags": [
          "TagProductLinkContracts"
        ],
        "description": "Deletes the specified product from the specified tag.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productLinkId",
            "in": "path",
            "description": "Tag-product link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteTagProductLink": {
            "$ref": "./examples/ApiManagementDeleteTagProductLink.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/templates": {
      "get": {
        "operationId": "EmailTemplate_ListByService",
        "tags": [
          "EmailTemplateContracts"
        ],
        "description": "Gets all email templates",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EmailTemplateCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListTemplates": {
            "$ref": "./examples/ApiManagementListTemplates.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/templates/{templateName}": {
      "get": {
        "operationId": "EmailTemplate_Get",
        "tags": [
          "EmailTemplateContracts"
        ],
        "description": "Gets the details of the email template specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "templateName",
            "in": "path",
            "description": "Email Template Name Identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "applicationApprovedNotificationMessage",
              "accountClosedDeveloper",
              "quotaLimitApproachingDeveloperNotificationMessage",
              "newDeveloperNotificationMessage",
              "emailChangeIdentityDefault",
              "inviteUserNotificationMessage",
              "newCommentNotificationMessage",
              "confirmSignUpIdentityDefault",
              "newIssueNotificationMessage",
              "purchaseDeveloperNotificationMessage",
              "passwordResetIdentityDefault",
              "passwordResetByAdminNotificationMessage",
              "rejectDeveloperNotificationMessage",
              "requestDeveloperNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "TemplateName",
              "modelAsString": true,
              "values": [
                {
                  "name": "applicationApprovedNotificationMessage",
                  "value": "applicationApprovedNotificationMessage"
                },
                {
                  "name": "accountClosedDeveloper",
                  "value": "accountClosedDeveloper"
                },
                {
                  "name": "quotaLimitApproachingDeveloperNotificationMessage",
                  "value": "quotaLimitApproachingDeveloperNotificationMessage"
                },
                {
                  "name": "newDeveloperNotificationMessage",
                  "value": "newDeveloperNotificationMessage"
                },
                {
                  "name": "emailChangeIdentityDefault",
                  "value": "emailChangeIdentityDefault"
                },
                {
                  "name": "inviteUserNotificationMessage",
                  "value": "inviteUserNotificationMessage"
                },
                {
                  "name": "newCommentNotificationMessage",
                  "value": "newCommentNotificationMessage"
                },
                {
                  "name": "confirmSignUpIdentityDefault",
                  "value": "confirmSignUpIdentityDefault"
                },
                {
                  "name": "newIssueNotificationMessage",
                  "value": "newIssueNotificationMessage"
                },
                {
                  "name": "purchaseDeveloperNotificationMessage",
                  "value": "purchaseDeveloperNotificationMessage"
                },
                {
                  "name": "passwordResetIdentityDefault",
                  "value": "passwordResetIdentityDefault"
                },
                {
                  "name": "passwordResetByAdminNotificationMessage",
                  "value": "passwordResetByAdminNotificationMessage"
                },
                {
                  "name": "rejectDeveloperNotificationMessage",
                  "value": "rejectDeveloperNotificationMessage"
                },
                {
                  "name": "requestDeveloperNotificationMessage",
                  "value": "requestDeveloperNotificationMessage"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EmailTemplateContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetTemplate": {
            "$ref": "./examples/ApiManagementGetTemplate.json"
          }
        }
      },
      "put": {
        "operationId": "EmailTemplate_CreateOrUpdate",
        "tags": [
          "EmailTemplateContracts"
        ],
        "description": "Updates an Email Template.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "templateName",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "enum": [
              "applicationApprovedNotificationMessage",
              "accountClosedDeveloper",
              "quotaLimitApproachingDeveloperNotificationMessage",
              "newDeveloperNotificationMessage",
              "emailChangeIdentityDefault",
              "inviteUserNotificationMessage",
              "newCommentNotificationMessage",
              "confirmSignUpIdentityDefault",
              "newIssueNotificationMessage",
              "purchaseDeveloperNotificationMessage",
              "passwordResetIdentityDefault",
              "passwordResetByAdminNotificationMessage",
              "rejectDeveloperNotificationMessage",
              "requestDeveloperNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "TemplateName",
              "modelAsString": true,
              "values": [
                {
                  "name": "applicationApprovedNotificationMessage",
                  "value": "applicationApprovedNotificationMessage"
                },
                {
                  "name": "accountClosedDeveloper",
                  "value": "accountClosedDeveloper"
                },
                {
                  "name": "quotaLimitApproachingDeveloperNotificationMessage",
                  "value": "quotaLimitApproachingDeveloperNotificationMessage"
                },
                {
                  "name": "newDeveloperNotificationMessage",
                  "value": "newDeveloperNotificationMessage"
                },
                {
                  "name": "emailChangeIdentityDefault",
                  "value": "emailChangeIdentityDefault"
                },
                {
                  "name": "inviteUserNotificationMessage",
                  "value": "inviteUserNotificationMessage"
                },
                {
                  "name": "newCommentNotificationMessage",
                  "value": "newCommentNotificationMessage"
                },
                {
                  "name": "confirmSignUpIdentityDefault",
                  "value": "confirmSignUpIdentityDefault"
                },
                {
                  "name": "newIssueNotificationMessage",
                  "value": "newIssueNotificationMessage"
                },
                {
                  "name": "purchaseDeveloperNotificationMessage",
                  "value": "purchaseDeveloperNotificationMessage"
                },
                {
                  "name": "passwordResetIdentityDefault",
                  "value": "passwordResetIdentityDefault"
                },
                {
                  "name": "passwordResetByAdminNotificationMessage",
                  "value": "passwordResetByAdminNotificationMessage"
                },
                {
                  "name": "rejectDeveloperNotificationMessage",
                  "value": "rejectDeveloperNotificationMessage"
                },
                {
                  "name": "requestDeveloperNotificationMessage",
                  "value": "requestDeveloperNotificationMessage"
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Email Template update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailTemplateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EmailTemplateContract' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EmailTemplateContract"
            }
          },
          "201": {
            "description": "Resource 'EmailTemplateContract' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EmailTemplateContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateTemplate": {
            "$ref": "./examples/ApiManagementCreateTemplate.json"
          }
        }
      },
      "patch": {
        "operationId": "EmailTemplate_Update",
        "tags": [
          "EmailTemplateContracts"
        ],
        "description": "Updates API Management email template",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "templateName",
            "in": "path",
            "description": "Email Template Name Identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "applicationApprovedNotificationMessage",
              "accountClosedDeveloper",
              "quotaLimitApproachingDeveloperNotificationMessage",
              "newDeveloperNotificationMessage",
              "emailChangeIdentityDefault",
              "inviteUserNotificationMessage",
              "newCommentNotificationMessage",
              "confirmSignUpIdentityDefault",
              "newIssueNotificationMessage",
              "purchaseDeveloperNotificationMessage",
              "passwordResetIdentityDefault",
              "passwordResetByAdminNotificationMessage",
              "rejectDeveloperNotificationMessage",
              "requestDeveloperNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "TemplateName",
              "modelAsString": true,
              "values": [
                {
                  "name": "applicationApprovedNotificationMessage",
                  "value": "applicationApprovedNotificationMessage"
                },
                {
                  "name": "accountClosedDeveloper",
                  "value": "accountClosedDeveloper"
                },
                {
                  "name": "quotaLimitApproachingDeveloperNotificationMessage",
                  "value": "quotaLimitApproachingDeveloperNotificationMessage"
                },
                {
                  "name": "newDeveloperNotificationMessage",
                  "value": "newDeveloperNotificationMessage"
                },
                {
                  "name": "emailChangeIdentityDefault",
                  "value": "emailChangeIdentityDefault"
                },
                {
                  "name": "inviteUserNotificationMessage",
                  "value": "inviteUserNotificationMessage"
                },
                {
                  "name": "newCommentNotificationMessage",
                  "value": "newCommentNotificationMessage"
                },
                {
                  "name": "confirmSignUpIdentityDefault",
                  "value": "confirmSignUpIdentityDefault"
                },
                {
                  "name": "newIssueNotificationMessage",
                  "value": "newIssueNotificationMessage"
                },
                {
                  "name": "purchaseDeveloperNotificationMessage",
                  "value": "purchaseDeveloperNotificationMessage"
                },
                {
                  "name": "passwordResetIdentityDefault",
                  "value": "passwordResetIdentityDefault"
                },
                {
                  "name": "passwordResetByAdminNotificationMessage",
                  "value": "passwordResetByAdminNotificationMessage"
                },
                {
                  "name": "rejectDeveloperNotificationMessage",
                  "value": "rejectDeveloperNotificationMessage"
                },
                {
                  "name": "requestDeveloperNotificationMessage",
                  "value": "requestDeveloperNotificationMessage"
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailTemplateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EmailTemplateContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateTemplate": {
            "$ref": "./examples/ApiManagementUpdateTemplate.json"
          }
        }
      },
      "delete": {
        "operationId": "EmailTemplate_Delete",
        "tags": [
          "EmailTemplateContracts"
        ],
        "description": "Reset the Email Template to default template provided by the API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "templateName",
            "in": "path",
            "description": "Email Template Name Identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "applicationApprovedNotificationMessage",
              "accountClosedDeveloper",
              "quotaLimitApproachingDeveloperNotificationMessage",
              "newDeveloperNotificationMessage",
              "emailChangeIdentityDefault",
              "inviteUserNotificationMessage",
              "newCommentNotificationMessage",
              "confirmSignUpIdentityDefault",
              "newIssueNotificationMessage",
              "purchaseDeveloperNotificationMessage",
              "passwordResetIdentityDefault",
              "passwordResetByAdminNotificationMessage",
              "rejectDeveloperNotificationMessage",
              "requestDeveloperNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "TemplateName",
              "modelAsString": true,
              "values": [
                {
                  "name": "applicationApprovedNotificationMessage",
                  "value": "applicationApprovedNotificationMessage"
                },
                {
                  "name": "accountClosedDeveloper",
                  "value": "accountClosedDeveloper"
                },
                {
                  "name": "quotaLimitApproachingDeveloperNotificationMessage",
                  "value": "quotaLimitApproachingDeveloperNotificationMessage"
                },
                {
                  "name": "newDeveloperNotificationMessage",
                  "value": "newDeveloperNotificationMessage"
                },
                {
                  "name": "emailChangeIdentityDefault",
                  "value": "emailChangeIdentityDefault"
                },
                {
                  "name": "inviteUserNotificationMessage",
                  "value": "inviteUserNotificationMessage"
                },
                {
                  "name": "newCommentNotificationMessage",
                  "value": "newCommentNotificationMessage"
                },
                {
                  "name": "confirmSignUpIdentityDefault",
                  "value": "confirmSignUpIdentityDefault"
                },
                {
                  "name": "newIssueNotificationMessage",
                  "value": "newIssueNotificationMessage"
                },
                {
                  "name": "purchaseDeveloperNotificationMessage",
                  "value": "purchaseDeveloperNotificationMessage"
                },
                {
                  "name": "passwordResetIdentityDefault",
                  "value": "passwordResetIdentityDefault"
                },
                {
                  "name": "passwordResetByAdminNotificationMessage",
                  "value": "passwordResetByAdminNotificationMessage"
                },
                {
                  "name": "rejectDeveloperNotificationMessage",
                  "value": "rejectDeveloperNotificationMessage"
                },
                {
                  "name": "requestDeveloperNotificationMessage",
                  "value": "requestDeveloperNotificationMessage"
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteTemplate": {
            "$ref": "./examples/ApiManagementDeleteTemplate.json"
          }
        }
      },
      "head": {
        "operationId": "EmailTemplate_GetEntityTag",
        "tags": [
          "EmailTemplateContracts"
        ],
        "description": "Gets the entity state (Etag) version of the email template specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "templateName",
            "in": "path",
            "description": "Email Template Name Identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "applicationApprovedNotificationMessage",
              "accountClosedDeveloper",
              "quotaLimitApproachingDeveloperNotificationMessage",
              "newDeveloperNotificationMessage",
              "emailChangeIdentityDefault",
              "inviteUserNotificationMessage",
              "newCommentNotificationMessage",
              "confirmSignUpIdentityDefault",
              "newIssueNotificationMessage",
              "purchaseDeveloperNotificationMessage",
              "passwordResetIdentityDefault",
              "passwordResetByAdminNotificationMessage",
              "rejectDeveloperNotificationMessage",
              "requestDeveloperNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "TemplateName",
              "modelAsString": true,
              "values": [
                {
                  "name": "applicationApprovedNotificationMessage",
                  "value": "applicationApprovedNotificationMessage"
                },
                {
                  "name": "accountClosedDeveloper",
                  "value": "accountClosedDeveloper"
                },
                {
                  "name": "quotaLimitApproachingDeveloperNotificationMessage",
                  "value": "quotaLimitApproachingDeveloperNotificationMessage"
                },
                {
                  "name": "newDeveloperNotificationMessage",
                  "value": "newDeveloperNotificationMessage"
                },
                {
                  "name": "emailChangeIdentityDefault",
                  "value": "emailChangeIdentityDefault"
                },
                {
                  "name": "inviteUserNotificationMessage",
                  "value": "inviteUserNotificationMessage"
                },
                {
                  "name": "newCommentNotificationMessage",
                  "value": "newCommentNotificationMessage"
                },
                {
                  "name": "confirmSignUpIdentityDefault",
                  "value": "confirmSignUpIdentityDefault"
                },
                {
                  "name": "newIssueNotificationMessage",
                  "value": "newIssueNotificationMessage"
                },
                {
                  "name": "purchaseDeveloperNotificationMessage",
                  "value": "purchaseDeveloperNotificationMessage"
                },
                {
                  "name": "passwordResetIdentityDefault",
                  "value": "passwordResetIdentityDefault"
                },
                {
                  "name": "passwordResetByAdminNotificationMessage",
                  "value": "passwordResetByAdminNotificationMessage"
                },
                {
                  "name": "rejectDeveloperNotificationMessage",
                  "value": "rejectDeveloperNotificationMessage"
                },
                {
                  "name": "requestDeveloperNotificationMessage",
                  "value": "requestDeveloperNotificationMessage"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadEmailTemplate": {
            "$ref": "./examples/ApiManagementHeadEmailTemplate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant": {
      "get": {
        "operationId": "TenantAccess_ListByService",
        "tags": [
          "AccessInformationContracts"
        ],
        "description": "Returns list of access infos - for Git and Management endpoints.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Not used",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AccessInformationCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListTenantAccess": {
            "$ref": "./examples/ApiManagementListTenantAccess.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}": {
      "get": {
        "operationId": "TenantAccess_Get",
        "tags": [
          "AccessInformationContracts"
        ],
        "description": "Get tenant access information details without secrets.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "accessName",
            "in": "path",
            "description": "The identifier of the Access configuration.",
            "required": true,
            "type": "string",
            "enum": [
              "access",
              "gitAccess"
            ],
            "x-ms-enum": {
              "name": "AccessIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "access",
                  "value": "access"
                },
                {
                  "name": "gitAccess",
                  "value": "gitAccess"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AccessInformationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetTenantAccess": {
            "$ref": "./examples/ApiManagementGetTenantAccess.json"
          },
          "ApiManagementGetTenantGitAccess": {
            "$ref": "./examples/ApiManagementGetTenantGitAccess.json"
          }
        }
      },
      "put": {
        "operationId": "TenantAccess_Create",
        "tags": [
          "AccessInformationContracts"
        ],
        "description": "Update tenant access information details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "accessName",
            "in": "path",
            "description": "The identifier of the Access configuration.",
            "required": true,
            "type": "string",
            "enum": [
              "access",
              "gitAccess"
            ],
            "x-ms-enum": {
              "name": "AccessIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "access",
                  "value": "access"
                },
                {
                  "name": "gitAccess",
                  "value": "gitAccess"
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to retrieve the Tenant Access Information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccessInformationCreateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AccessInformationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateTenantAccess": {
            "$ref": "./examples/ApiManagementCreateTenantAccess.json"
          }
        }
      },
      "patch": {
        "operationId": "TenantAccess_Update",
        "tags": [
          "AccessInformationContracts"
        ],
        "description": "Update tenant access information details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "accessName",
            "in": "path",
            "description": "The identifier of the Access configuration.",
            "required": true,
            "type": "string",
            "enum": [
              "access",
              "gitAccess"
            ],
            "x-ms-enum": {
              "name": "AccessIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "access",
                  "value": "access"
                },
                {
                  "name": "gitAccess",
                  "value": "gitAccess"
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to retrieve the Tenant Access Information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccessInformationUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AccessInformationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateTenantAccess": {
            "$ref": "./examples/ApiManagementUpdateTenantAccess.json"
          }
        }
      },
      "head": {
        "operationId": "TenantAccess_GetEntityTag",
        "tags": [
          "AccessInformationContracts"
        ],
        "description": "Tenant access metadata",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "accessName",
            "in": "path",
            "description": "The identifier of the Access configuration.",
            "required": true,
            "type": "string",
            "enum": [
              "access",
              "gitAccess"
            ],
            "x-ms-enum": {
              "name": "AccessIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "access",
                  "value": "access"
                },
                {
                  "name": "gitAccess",
                  "value": "gitAccess"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadTenantAccess": {
            "$ref": "./examples/ApiManagementHeadTenantAccess.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/deploy": {
      "post": {
        "operationId": "TenantConfiguration_Deploy",
        "tags": [
          "AccessInformationContracts"
        ],
        "description": "This operation applies changes from the specified Git branch to the configuration database. This is a long running operation and could take several minutes to complete.",
        "externalDocs": {
          "description": "To deploy any service configuration changes to the API Management service instance",
          "url": "https://azure.microsoft.com/en-us/documentation/articles/api-management-configuration-repository-git/#to-deploy-any-service-configuration-changes-to-the-api-management-service-instance"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "enum": [
              "configuration"
            ],
            "x-ms-enum": {
              "name": "ConfigurationIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "configuration",
                  "value": "configuration"
                }
              ]
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Deploy Configuration parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeployConfigurationParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationResultContract"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementTenantConfigurationDeploy": {
            "$ref": "./examples/ApiManagementTenantConfigurationDeploy.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/OperationResultContract"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/git/regeneratePrimaryKey": {
      "post": {
        "operationId": "TenantAccessGit_RegeneratePrimaryKey",
        "tags": [
          "AccessInformationContracts"
        ],
        "description": "Regenerate primary access key for GIT.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "accessName",
            "in": "path",
            "description": "The identifier of the Access configuration.",
            "required": true,
            "type": "string",
            "enum": [
              "access",
              "gitAccess"
            ],
            "x-ms-enum": {
              "name": "AccessIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "access",
                  "value": "access"
                },
                {
                  "name": "gitAccess",
                  "value": "gitAccess"
                }
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementTenantAccessRegenerateKey": {
            "$ref": "./examples/ApiManagementTenantAccessRegenerateSecondaryKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/git/regenerateSecondaryKey": {
      "post": {
        "operationId": "TenantAccessGit_RegenerateSecondaryKey",
        "tags": [
          "AccessInformationContracts"
        ],
        "description": "Regenerate secondary access key for GIT.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "accessName",
            "in": "path",
            "description": "The identifier of the Access configuration.",
            "required": true,
            "type": "string",
            "enum": [
              "access",
              "gitAccess"
            ],
            "x-ms-enum": {
              "name": "AccessIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "access",
                  "value": "access"
                },
                {
                  "name": "gitAccess",
                  "value": "gitAccess"
                }
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementTenantAccessRegenerateKey": {
            "$ref": "./examples/ApiManagementTenantAccessGitRegenerateSecondaryKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/listSecrets": {
      "post": {
        "operationId": "TenantAccess_ListSecrets",
        "tags": [
          "AccessInformationContracts"
        ],
        "description": "Get tenant access information details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "accessName",
            "in": "path",
            "description": "The identifier of the Access configuration.",
            "required": true,
            "type": "string",
            "enum": [
              "access",
              "gitAccess"
            ],
            "x-ms-enum": {
              "name": "AccessIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "access",
                  "value": "access"
                },
                {
                  "name": "gitAccess",
                  "value": "gitAccess"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AccessInformationSecretsContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListSecretsTenantAccess": {
            "$ref": "./examples/ApiManagementListSecretsTenantAccess.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/regeneratePrimaryKey": {
      "post": {
        "operationId": "TenantAccess_RegeneratePrimaryKey",
        "tags": [
          "AccessInformationContracts"
        ],
        "description": "Regenerate primary access key",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "accessName",
            "in": "path",
            "description": "The identifier of the Access configuration.",
            "required": true,
            "type": "string",
            "enum": [
              "access",
              "gitAccess"
            ],
            "x-ms-enum": {
              "name": "AccessIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "access",
                  "value": "access"
                },
                {
                  "name": "gitAccess",
                  "value": "gitAccess"
                }
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementTenantAccessRegenerateKey": {
            "$ref": "./examples/ApiManagementTenantAccessRegeneratePrimaryKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{accessName}/regenerateSecondaryKey": {
      "post": {
        "operationId": "TenantAccess_RegenerateSecondaryKey",
        "tags": [
          "AccessInformationContracts"
        ],
        "description": "Regenerate secondary access key",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "accessName",
            "in": "path",
            "description": "The identifier of the Access configuration.",
            "required": true,
            "type": "string",
            "enum": [
              "access",
              "gitAccess"
            ],
            "x-ms-enum": {
              "name": "AccessIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "access",
                  "value": "access"
                },
                {
                  "name": "gitAccess",
                  "value": "gitAccess"
                }
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementTenantAccessRegenerateKey": {
            "$ref": "./examples/ApiManagementTenantAccessRegenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/save": {
      "post": {
        "operationId": "TenantConfiguration_Save",
        "tags": [
          "AccessInformationContracts"
        ],
        "description": "This operation creates a commit with the current configuration snapshot to the specified branch in the repository. This is a long running operation and could take several minutes to complete.",
        "externalDocs": {
          "description": "To save the service configuration to the Git repository",
          "url": "https://azure.microsoft.com/en-us/documentation/articles/api-management-configuration-repository-git/#to-save-the-service-configuration-to-the-git-repository"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "enum": [
              "configuration"
            ],
            "x-ms-enum": {
              "name": "ConfigurationIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "configuration",
                  "value": "configuration"
                }
              ]
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Save Configuration parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveConfigurationParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationResultContract"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementTenantConfigurationSave": {
            "$ref": "./examples/ApiManagementTenantConfigurationSave.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/OperationResultContract"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/syncState": {
      "get": {
        "operationId": "TenantConfiguration_GetSyncState",
        "tags": [
          "AccessInformationContracts"
        ],
        "description": "Gets the status of the most recent synchronization between the configuration database and the Git repository.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "enum": [
              "configuration"
            ],
            "x-ms-enum": {
              "name": "ConfigurationIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "configuration",
                  "value": "configuration"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TenantConfigurationSyncStateContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementTenantAccessSyncState": {
            "$ref": "./examples/ApiManagementTenantAccessSyncState.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tenant/{configurationName}/validate": {
      "post": {
        "operationId": "TenantConfiguration_Validate",
        "tags": [
          "AccessInformationContracts"
        ],
        "description": "This operation validates the changes in the specified Git branch. This is a long running operation and could take several minutes to complete.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "enum": [
              "configuration"
            ],
            "x-ms-enum": {
              "name": "ConfigurationIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "configuration",
                  "value": "configuration"
                }
              ]
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Validate Configuration parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeployConfigurationParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationResultContract"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementTenantConfigurationValidate": {
            "$ref": "./examples/ApiManagementTenantConfigurationValidate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/OperationResultContract"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users": {
      "get": {
        "operationId": "User_ListByService",
        "tags": [
          "UserContracts"
        ],
        "description": "Lists a collection of registered users in the specified service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| firstName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| lastName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| email | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| registrationDate | filter | ge, le, eq, ne, gt, lt |     |</br>| note | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| groups | expand |     |     |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "expandGroups",
            "in": "query",
            "description": "Detailed Group in response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UserCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListUsers": {
            "$ref": "./examples/ApiManagementListUsers.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}": {
      "get": {
        "operationId": "User_Get",
        "tags": [
          "UserContracts"
        ],
        "description": "Gets the details of the user specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/UserContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetUser": {
            "$ref": "./examples/ApiManagementGetUser.json"
          }
        }
      },
      "put": {
        "operationId": "User_CreateOrUpdate",
        "tags": [
          "UserContracts"
        ],
        "description": "Creates or Updates a user.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "notify",
            "in": "query",
            "description": "Send an Email notification to the User.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCreateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/UserContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/UserContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateUser": {
            "$ref": "./examples/ApiManagementCreateUser.json"
          }
        }
      },
      "patch": {
        "operationId": "User_Update",
        "tags": [
          "UserContracts"
        ],
        "description": "Updates the details of the user specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/UserContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateUser": {
            "$ref": "./examples/ApiManagementUpdateUser.json"
          }
        }
      },
      "delete": {
        "operationId": "User_Delete",
        "tags": [
          "UserContracts"
        ],
        "description": "Deletes specific user.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "deleteSubscriptions",
            "in": "query",
            "description": "Whether to delete user's subscription or not.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "notify",
            "in": "query",
            "description": "Send an Account Closed Email notification to the User.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appType",
            "in": "query",
            "description": "Determines the type of application which send the create user request. Default is legacy publisher portal.",
            "required": false,
            "type": "string",
            "enum": [
              "portal",
              "developerPortal"
            ],
            "x-ms-enum": {
              "name": "AppType",
              "modelAsString": true,
              "values": [
                {
                  "name": "portal",
                  "value": "portal",
                  "description": "User create request was sent by legacy developer portal."
                },
                {
                  "name": "developerPortal",
                  "value": "developerPortal",
                  "description": "User create request was sent by new developer portal."
                }
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteUser": {
            "$ref": "./examples/ApiManagementDeleteUser.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "head": {
        "operationId": "User_GetEntityTag",
        "tags": [
          "UserContracts"
        ],
        "description": "Gets the entity state (Etag) version of the user specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadUser": {
            "$ref": "./examples/ApiManagementHeadUser.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/confirmations/password/send": {
      "post": {
        "operationId": "UserConfirmationPassword_Send",
        "tags": [
          "UserContracts"
        ],
        "description": "Sends confirmation",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "appType",
            "in": "query",
            "description": "Determines the type of application which send the create user request. Default is legacy publisher portal.",
            "required": false,
            "type": "string",
            "enum": [
              "portal",
              "developerPortal"
            ],
            "x-ms-enum": {
              "name": "AppType",
              "modelAsString": true,
              "values": [
                {
                  "name": "portal",
                  "value": "portal",
                  "description": "User create request was sent by legacy developer portal."
                },
                {
                  "name": "developerPortal",
                  "value": "developerPortal",
                  "description": "User create request was sent by new developer portal."
                }
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUserConfirmationPasswordSend": {
            "$ref": "./examples/ApiManagementUserConfirmationPasswordSend.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/generateSsoUrl": {
      "post": {
        "operationId": "User_GenerateSsoUrl",
        "tags": [
          "UserContracts"
        ],
        "description": "Retrieves a redirection URL containing an authentication token for signing a given user into the developer portal.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GenerateSsoUrlResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUserGenerateSsoUrl": {
            "$ref": "./examples/ApiManagementUserGenerateSsoUrl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/groups": {
      "get": {
        "operationId": "UserGroup_List",
        "tags": [
          "UserContracts"
        ],
        "description": "Lists all user groups.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|------------------------|-----------------------------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GroupCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListUserGroups": {
            "$ref": "./examples/ApiManagementListUserGroups.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/identities": {
      "get": {
        "operationId": "UserIdentities_List",
        "tags": [
          "UserContracts"
        ],
        "description": "List of all user identities.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UserIdentityCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListUserIdentities": {
            "$ref": "./examples/ApiManagementListUserIdentities.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/subscriptions": {
      "get": {
        "operationId": "UserSubscription_List",
        "tags": [
          "UserSubscription"
        ],
        "description": "Lists the collection of subscriptions of the specified user.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "| Field     |     Usage     |     Supported operators    | Supported functions               |</br>|-------------|------------------------|-----------------------------------|</br>|name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|stateComment | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|ownerId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|scope | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>|productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubscriptionCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListUserSubscriptions": {
            "$ref": "./examples/ApiManagementListUserSubscriptions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/subscriptions/{sid}": {
      "get": {
        "operationId": "UserSubscription_Get",
        "tags": [
          "UserSubscription"
        ],
        "description": "Gets the specified Subscription entity associated with a particular user.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "sid",
            "in": "path",
            "description": "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SubscriptionContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetUserSubscription": {
            "$ref": "./examples/ApiManagementGetUserSubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/users/{userId}/token": {
      "post": {
        "operationId": "User_GetSharedAccessToken",
        "tags": [
          "UserContracts"
        ],
        "description": "Gets the Shared Access Authorization Token for the User.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create Authorization Token parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserTokenParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UserTokenResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUserToken": {
            "$ref": "./examples/ApiManagementUserToken.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/validatePolicies": {
      "post": {
        "operationId": "PolicyRestrictionValidations_ByService",
        "tags": [
          "ApiManagementServiceResources"
        ],
        "description": "Validate all policies of API Management services.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationResultContract"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListPolicyRestrictions": {
            "$ref": "./examples/ApiManagementValidatePolicies.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/OperationResultContract"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaceLinks": {
      "get": {
        "operationId": "ApiManagementWorkspaceLinks_ListByService",
        "tags": [
          "ApiManagementWorkspaceLinksResources"
        ],
        "description": "List all API Management workspaceLinks for a service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiManagementWorkspaceLinksListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListGatewayConfigConnection": {
            "$ref": "./examples/ApiManagementListWorkspaceLinks.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaceLinks/{workspaceId}": {
      "get": {
        "operationId": "ApiManagementWorkspaceLink_Get",
        "tags": [
          "ApiManagementWorkspaceLinksResources"
        ],
        "description": "Gets an API Management WorkspaceLink resource description.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiManagementWorkspaceLinksResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceLinks": {
            "$ref": "./examples/ApiManagementGetWorkspaceLink.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces": {
      "get": {
        "operationId": "Workspace_ListByService",
        "tags": [
          "WorkspaceContracts"
        ],
        "description": "Lists all workspaces of the API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br></br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkspaceCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaces": {
            "$ref": "./examples/ApiManagementListWorkspaces.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}": {
      "get": {
        "operationId": "Workspace_Get",
        "tags": [
          "WorkspaceContracts"
        ],
        "description": "Gets the details of the workspace specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/WorkspaceContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspace": {
            "$ref": "./examples/ApiManagementGetWorkspace.json"
          }
        }
      },
      "put": {
        "operationId": "Workspace_CreateOrUpdate",
        "tags": [
          "WorkspaceContracts"
        ],
        "description": "Creates a new workspace or updates an existing one.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkspaceContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/WorkspaceContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/WorkspaceContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspace": {
            "$ref": "./examples/ApiManagementCreateWorkspace.json"
          }
        }
      },
      "patch": {
        "operationId": "Workspace_Update",
        "tags": [
          "WorkspaceContracts"
        ],
        "description": "Updates the details of the workspace specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Workspace Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkspaceContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/WorkspaceContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateWorkspace": {
            "$ref": "./examples/ApiManagementUpdateWorkspace.json"
          }
        }
      },
      "delete": {
        "operationId": "Workspace_Delete",
        "tags": [
          "WorkspaceContracts"
        ],
        "description": "Deletes the specified workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspace": {
            "$ref": "./examples/ApiManagementDeleteWorkspace.json"
          }
        }
      },
      "head": {
        "operationId": "Workspace_GetEntityTag",
        "tags": [
          "WorkspaceContracts"
        ],
        "description": "Gets the entity state (Etag) version of the workspace specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspace": {
            "$ref": "./examples/ApiManagementHeadWorkspace.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apiVersionSets": {
      "get": {
        "operationId": "WorkspaceApiVersionSet_ListByService",
        "tags": [
          "WorkspaceApiVersionSet"
        ],
        "description": "Lists a collection of API Version Sets in the specified workspace with a service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiVersionSetCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceApiVersionSets": {
            "$ref": "./examples/ApiManagementListWorkspaceApiVersionSets.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apiVersionSets/{versionSetId}": {
      "get": {
        "operationId": "WorkspaceApiVersionSet_Get",
        "tags": [
          "WorkspaceApiVersionSet"
        ],
        "description": "Gets the details of the Api Version Set specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "versionSetId",
            "in": "path",
            "description": "Api Version Set identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ApiVersionSetContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiVersionSet": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiVersionSet.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceApiVersionSet_CreateOrUpdate",
        "tags": [
          "WorkspaceApiVersionSet"
        ],
        "description": "Creates or Updates a Api Version Set.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "versionSetId",
            "in": "path",
            "description": "Api Version Set identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiVersionSetContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ApiVersionSetContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/ApiVersionSetContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceApiVersionSet": {
            "$ref": "./examples/ApiManagementCreateWorkspaceApiVersionSet.json"
          }
        }
      },
      "patch": {
        "operationId": "WorkspaceApiVersionSet_Update",
        "tags": [
          "WorkspaceApiVersionSet"
        ],
        "description": "Updates the details of the Api VersionSet specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "versionSetId",
            "in": "path",
            "description": "Api Version Set identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiVersionSetUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ApiVersionSetContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceApiVersionSet": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceApiVersionSet.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceApiVersionSet_Delete",
        "tags": [
          "WorkspaceApiVersionSet"
        ],
        "description": "Deletes specific Api Version Set.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "versionSetId",
            "in": "path",
            "description": "Api Version Set identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceApiVersionSet": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceApiVersionSet.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspaceApiVersionSet_GetEntityTag",
        "tags": [
          "WorkspaceApiVersionSet"
        ],
        "description": "Gets the entity state (Etag) version of the Api Version Set specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "versionSetId",
            "in": "path",
            "description": "Api Version Set identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceApiVersionSet": {
            "$ref": "./examples/ApiManagementHeadWorkspaceApiVersionSet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis": {
      "get": {
        "operationId": "WorkspaceApi_ListByService",
        "tags": [
          "WorkspaceApi"
        ],
        "description": "Lists all APIs of the workspace in an API Management service instance.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-create-apis"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| isCurrent | filter | eq, ne |  |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Include tags in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expandApiVersionSet",
            "in": "query",
            "description": "Include full ApiVersionSet resource in response",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceApis": {
            "$ref": "./examples/ApiManagementListWorkspaceApis.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}": {
      "get": {
        "operationId": "WorkspaceApi_Get",
        "tags": [
          "WorkspaceApi"
        ],
        "description": "Gets the details of the API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ApiContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiContract": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiContract.json"
          },
          "ApiManagementGetWorkspaceApiRevision": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiRevision.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceApi_CreateOrUpdate",
        "tags": [
          "WorkspaceApi"
        ],
        "description": "Creates new or updates existing specified API of the workspace in an API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiCreateOrUpdateParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ApiContract"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/ApiContract"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceApi": {
            "$ref": "./examples/ApiManagementCreateWorkspaceApi.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ApiContract"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "WorkspaceApi_Update",
        "tags": [
          "WorkspaceApi"
        ],
        "description": "Updates the specified API of the workspace in an API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "API Update Contract parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiUpdateContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ApiContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceApi": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceApi.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceApi_Delete",
        "tags": [
          "WorkspaceApi"
        ],
        "description": "Deletes the specified API of the workspace in an API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "deleteRevisions",
            "in": "query",
            "description": "Delete all revisions of the Api.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceApi": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceApi.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspaceApi_GetEntityTag",
        "tags": [
          "WorkspaceApi"
        ],
        "description": "Gets the entity state (Etag) version of the API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceApi": {
            "$ref": "./examples/ApiManagementHeadWorkspaceApi.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/diagnostics": {
      "get": {
        "operationId": "WorkspaceApiDiagnostic_ListByWorkspace",
        "tags": [
          "WorkspaceApiDiagnostic"
        ],
        "description": "Lists all diagnostics of an API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DiagnosticCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceApiDiagnostics": {
            "$ref": "./examples/ApiManagementListWorkspaceApiDiagnostics.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/diagnostics/{diagnosticId}": {
      "get": {
        "operationId": "WorkspaceApiDiagnostic_Get",
        "tags": [
          "WorkspaceApiDiagnostic"
        ],
        "description": "Gets the details of the Diagnostic for an API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "diagnosticId",
            "in": "path",
            "description": "Diagnostic identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiDiagnostic": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiDiagnostic.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceApiDiagnostic_CreateOrUpdate",
        "tags": [
          "WorkspaceApiDiagnostic"
        ],
        "description": "Creates a new Diagnostic for an API or updates an existing one.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "diagnosticId",
            "in": "path",
            "description": "Diagnostic identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiagnosticContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceApiDiagnostic": {
            "$ref": "./examples/ApiManagementCreateWorkspaceApiDiagnostic.json"
          }
        }
      },
      "patch": {
        "operationId": "WorkspaceApiDiagnostic_Update",
        "tags": [
          "WorkspaceApiDiagnostic"
        ],
        "description": "Updates the details of the Diagnostic for an API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "diagnosticId",
            "in": "path",
            "description": "Diagnostic identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Diagnostic Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiagnosticUpdateContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceApiDiagnostic": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceApiDiagnostic.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceApiDiagnostic_Delete",
        "tags": [
          "WorkspaceApiDiagnostic"
        ],
        "description": "Deletes the specified Diagnostic from an API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "diagnosticId",
            "in": "path",
            "description": "Diagnostic identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceApiDiagnostic": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceApiDiagnostic.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspaceApiDiagnostic_GetEntityTag",
        "tags": [
          "WorkspaceApiDiagnostic"
        ],
        "description": "Gets the entity state (Etag) version of the Diagnostic for an API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "diagnosticId",
            "in": "path",
            "description": "Diagnostic identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceApiDiagnostic": {
            "$ref": "./examples/ApiManagementHeadWorkspaceApiDiagnostic.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/operations": {
      "get": {
        "operationId": "WorkspaceApiOperation_ListByApi",
        "tags": [
          "WorkspaceApiOperation"
        ],
        "description": "Lists a collection of the operations for the specified API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| method | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| urlTemplate | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Include tags in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceApiOperations": {
            "$ref": "./examples/ApiManagementListWorkspaceApiOperations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/operations/{operationId}": {
      "get": {
        "operationId": "WorkspaceApiOperation_Get",
        "tags": [
          "WorkspaceApiOperation"
        ],
        "description": "Gets the details of the API Operation specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiOperation": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiOperation.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceApiOperation_CreateOrUpdate",
        "tags": [
          "WorkspaceApiOperation"
        ],
        "description": "Creates a new operation in the API or updates an existing one.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OperationContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/OperationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceApiOperation": {
            "$ref": "./examples/ApiManagementCreateWorkspaceApiOperation.json"
          }
        }
      },
      "patch": {
        "operationId": "WorkspaceApiOperation_Update",
        "tags": [
          "WorkspaceApiOperation"
        ],
        "description": "Updates the details of the operation in the API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "API Operation Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OperationUpdateContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceApiOperation": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceApiOperation.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceApiOperation_Delete",
        "tags": [
          "WorkspaceApiOperation"
        ],
        "description": "Deletes the specified operation in the API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceApiOperation": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceApiOperation.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspaceApiOperation_GetEntityTag",
        "tags": [
          "WorkspaceApiOperation"
        ],
        "description": "Gets the entity state (Etag) version of the API operation specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceApiOperation": {
            "$ref": "./examples/ApiManagementHeadWorkspaceApiOperation.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/operations/{operationId}/policies": {
      "get": {
        "operationId": "WorkspaceApiOperationPolicy_ListByOperation",
        "tags": [
          "WorkspaceApiOperationPolicy"
        ],
        "description": "Get the list of policy configuration at the API Operation level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceApiOperationPolicies": {
            "$ref": "./examples/ApiManagementListWorkspaceApiOperationPolicies.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/operations/{operationId}/policies/{policyId}": {
      "get": {
        "operationId": "WorkspaceApiOperationPolicy_Get",
        "tags": [
          "WorkspaceApiOperationPolicy"
        ],
        "description": "Get the policy configuration at the API Operation level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Policy Export Format.",
            "required": false,
            "type": "string",
            "default": "xml",
            "enum": [
              "xml",
              "rawxml"
            ],
            "x-ms-enum": {
              "name": "PolicyExportFormat",
              "modelAsString": true,
              "values": [
                {
                  "name": "xml",
                  "value": "xml",
                  "description": "The contents are inline and Content type is an XML document."
                },
                {
                  "name": "rawxml",
                  "value": "rawxml",
                  "description": "The contents are inline and Content type is a non XML encoded policy document."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiOperationPolicy": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiOperationPolicy.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceApiOperationPolicy_CreateOrUpdate",
        "tags": [
          "WorkspaceApiOperationPolicy"
        ],
        "description": "Creates or updates policy configuration for the API Operation level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The policy contents to apply.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceApiOperationPolicy": {
            "$ref": "./examples/ApiManagementCreateWorkspaceApiOperationPolicy.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceApiOperationPolicy_Delete",
        "tags": [
          "WorkspaceApiOperationPolicy"
        ],
        "description": "Deletes the policy configuration at the Api Operation.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceApiOperationPolicy": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceApiOperationPolicy.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspaceApiOperationPolicy_GetEntityTag",
        "tags": [
          "WorkspaceApiOperationPolicy"
        ],
        "description": "Gets the entity state (Etag) version of the API operation policy specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceApiOperationPolicy": {
            "$ref": "./examples/ApiManagementHeadWorkspaceApiOperationPolicy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/policies": {
      "get": {
        "operationId": "WorkspaceApiPolicy_ListByApi",
        "tags": [
          "WorkspaceApiPolicy"
        ],
        "description": "Get the policy configuration at the API level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceApiPolicies": {
            "$ref": "./examples/ApiManagementListWorkspaceApiPolicies.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/policies/{policyId}": {
      "get": {
        "operationId": "WorkspaceApiPolicy_Get",
        "tags": [
          "WorkspaceApiPolicy"
        ],
        "description": "Get the policy configuration at the API level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Policy Export Format.",
            "required": false,
            "type": "string",
            "default": "xml",
            "enum": [
              "xml",
              "rawxml"
            ],
            "x-ms-enum": {
              "name": "PolicyExportFormat",
              "modelAsString": true,
              "values": [
                {
                  "name": "xml",
                  "value": "xml",
                  "description": "The contents are inline and Content type is an XML document."
                },
                {
                  "name": "rawxml",
                  "value": "rawxml",
                  "description": "The contents are inline and Content type is a non XML encoded policy document."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiPolicy": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiPolicy.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceApiPolicy_CreateOrUpdate",
        "tags": [
          "WorkspaceApiPolicy"
        ],
        "description": "Creates or updates policy configuration for the API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The policy contents to apply.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceApiPolicy": {
            "$ref": "./examples/ApiManagementCreateWorkspaceApiPolicy.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceApiPolicy_Delete",
        "tags": [
          "WorkspaceApiPolicy"
        ],
        "description": "Deletes the policy configuration at the Api.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceApiPolicy": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceApiPolicy.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspaceApiPolicy_GetEntityTag",
        "tags": [
          "WorkspaceApiPolicy"
        ],
        "description": "Gets the entity state (Etag) version of the API policy specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceApiPolicy": {
            "$ref": "./examples/ApiManagementHeadWorkspaceApiPolicy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/releases": {
      "get": {
        "operationId": "WorkspaceApiRelease_ListByService",
        "tags": [
          "WorkspaceApiRelease"
        ],
        "description": "Lists all releases of an API. An API release is created when making an API Revision current. Releases are also used to rollback to previous revisions. Results will be paged and can be constrained by the $top and $skip parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| notes | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiReleaseCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceApiReleases": {
            "$ref": "./examples/ApiManagementListWorkspaceApiReleases.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/releases/{releaseId}": {
      "get": {
        "operationId": "WorkspaceApiRelease_Get",
        "tags": [
          "WorkspaceApiRelease"
        ],
        "description": "Returns the details of an API release.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "releaseId",
            "in": "path",
            "description": "Release identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ApiReleaseContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiRelease": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiRelease.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceApiRelease_CreateOrUpdate",
        "tags": [
          "WorkspaceApiRelease"
        ],
        "description": "Creates a new Release for the API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "releaseId",
            "in": "path",
            "description": "Release identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiReleaseContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ApiReleaseContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/ApiReleaseContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceApiRelease": {
            "$ref": "./examples/ApiManagementCreateWorkspaceApiRelease.json"
          }
        }
      },
      "patch": {
        "operationId": "WorkspaceApiRelease_Update",
        "tags": [
          "WorkspaceApiRelease"
        ],
        "description": "Updates the details of the release of the API specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "releaseId",
            "in": "path",
            "description": "Release identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "API Release Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiReleaseContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ApiReleaseContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceApiRelease": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceApiRelease.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceApiRelease_Delete",
        "tags": [
          "WorkspaceApiRelease"
        ],
        "description": "Deletes the specified release in the API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "releaseId",
            "in": "path",
            "description": "Release identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceApiRelease": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceApiRelease.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspaceApiRelease_GetEntityTag",
        "tags": [
          "WorkspaceApiRelease"
        ],
        "description": "Returns the etag of an API release.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "releaseId",
            "in": "path",
            "description": "Release identifier within an API. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceApiRelease": {
            "$ref": "./examples/ApiManagementHeadWorkspaceApiRelease.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/revisions": {
      "get": {
        "operationId": "WorkspaceApiRevision_ListByService",
        "tags": [
          "WorkspaceApi"
        ],
        "description": "Lists all revisions of an API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| apiRevision | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiRevisionCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceApiRevisions": {
            "$ref": "./examples/ApiManagementListWorkspaceApiRevisions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/schemas": {
      "get": {
        "operationId": "WorkspaceApiSchema_ListByApi",
        "tags": [
          "WorkspaceApiSchema"
        ],
        "description": "Get the schema configuration at the API level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| contentType | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SchemaCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceApiSchemas": {
            "$ref": "./examples/ApiManagementListWorkspaceApiSchemas.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}/schemas/{schemaId}": {
      "get": {
        "operationId": "WorkspaceApiSchema_Get",
        "tags": [
          "WorkspaceApiSchema"
        ],
        "description": "Get the schema configuration at the API level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "schemaId",
            "in": "path",
            "description": "Schema id identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SchemaContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiSchema": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiSchema.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceApiSchema_CreateOrUpdate",
        "tags": [
          "WorkspaceApiSchema"
        ],
        "description": "Creates or updates schema configuration for the API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "schemaId",
            "in": "path",
            "description": "Schema id identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The schema contents to apply.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchemaContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SchemaContract"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/SchemaContract"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceApiSchema": {
            "$ref": "./examples/ApiManagementCreateWorkspaceApiSchema.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/SchemaContract"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "WorkspaceApiSchema_Delete",
        "tags": [
          "WorkspaceApiSchema"
        ],
        "description": "Deletes the schema configuration at the Api.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "schemaId",
            "in": "path",
            "description": "Schema id identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "force",
            "in": "query",
            "description": "If true removes all references to the schema before deleting it.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceApiSchema": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceApiSchema.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspaceApiSchema_GetEntityTag",
        "tags": [
          "WorkspaceApiSchema"
        ],
        "description": "Gets the entity state (Etag) version of the schema specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "schemaId",
            "in": "path",
            "description": "Schema id identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceApiSchema": {
            "$ref": "./examples/ApiManagementHeadWorkspaceApiSchema.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/backends": {
      "get": {
        "operationId": "WorkspaceBackend_ListByWorkspace",
        "tags": [
          "WorkspaceBackend"
        ],
        "description": "Lists a collection of backends in the specified workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| title | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| url | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackendCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceBackends": {
            "$ref": "./examples/ApiManagementListWorkspaceBackends.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/backends/{backendId}": {
      "get": {
        "operationId": "WorkspaceBackend_Get",
        "tags": [
          "WorkspaceBackend"
        ],
        "description": "Gets the details of the backend specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "backendId",
            "in": "path",
            "description": "Identifier of the Backend entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BackendContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceBackend": {
            "$ref": "./examples/ApiManagementGetWorkspaceBackend.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceBackend_CreateOrUpdate",
        "tags": [
          "WorkspaceBackend"
        ],
        "description": "Creates or Updates a backend.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "backendId",
            "in": "path",
            "description": "Identifier of the Backend entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackendContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BackendContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/BackendContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceBackendProxyBackend": {
            "$ref": "./examples/ApiManagementCreateWorkspaceBackendProxyBackend.json"
          },
          "ApiManagementCreateWorkspaceBackendServiceFabric": {
            "$ref": "./examples/ApiManagementCreateWorkspaceBackendServiceFabric.json"
          }
        }
      },
      "patch": {
        "operationId": "WorkspaceBackend_Update",
        "tags": [
          "WorkspaceBackend"
        ],
        "description": "Updates an existing backend.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "backendId",
            "in": "path",
            "description": "Identifier of the Backend entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackendUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BackendContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceBackend": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceBackend.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceBackend_Delete",
        "tags": [
          "WorkspaceBackend"
        ],
        "description": "Deletes the specified backend.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "backendId",
            "in": "path",
            "description": "Identifier of the Backend entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceBackend": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceBackend.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspaceBackend_GetEntityTag",
        "tags": [
          "WorkspaceBackend"
        ],
        "description": "Gets the entity state (Etag) version of the backend specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "backendId",
            "in": "path",
            "description": "Identifier of the Backend entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceBackend": {
            "$ref": "./examples/ApiManagementHeadWorkspaceBackend.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/certificates": {
      "get": {
        "operationId": "WorkspaceCertificate_ListByWorkspace",
        "tags": [
          "WorkspaceCertificate"
        ],
        "description": "Lists a collection of all certificates in the specified workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| subject | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| thumbprint | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| expirationDate | filter | ge, le, eq, ne, gt, lt |     |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "isKeyVaultRefreshFailed",
            "in": "query",
            "description": "When set to true, the response contains only certificates entities which failed refresh.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CertificateCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceCertificates": {
            "$ref": "./examples/ApiManagementListWorkspaceCertificates.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/certificates/{certificateId}": {
      "get": {
        "operationId": "WorkspaceCertificate_Get",
        "tags": [
          "WorkspaceCertificate"
        ],
        "description": "Gets the details of the certificate specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "certificateId",
            "in": "path",
            "description": "Identifier of the certificate entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CertificateContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceCertificate": {
            "$ref": "./examples/ApiManagementGetWorkspaceCertificate.json"
          },
          "ApiManagementGetWorkspaceCertificateWithKeyVault": {
            "$ref": "./examples/ApiManagementGetWorkspaceCertificateWithKeyVault.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceCertificate_CreateOrUpdate",
        "tags": [
          "WorkspaceCertificate"
        ],
        "description": "Creates or updates the certificate being used for authentication with the backend.",
        "externalDocs": {
          "description": "How to secure back-end services using client certificate authentication in Azure API Management",
          "url": "https://azure.microsoft.com/en-us/documentation/articles/api-management-howto-mutual-certificates/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "certificateId",
            "in": "path",
            "description": "Identifier of the certificate entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CertificateCreateOrUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CertificateContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/CertificateContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceCertificate": {
            "$ref": "./examples/ApiManagementCreateWorkspaceCertificate.json"
          },
          "ApiManagementCreateWorkspaceCertificateWithKeyVault": {
            "$ref": "./examples/ApiManagementCreateWorkspaceCertificateWithKeyVault.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceCertificate_Delete",
        "tags": [
          "WorkspaceCertificate"
        ],
        "description": "Deletes specific certificate.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "certificateId",
            "in": "path",
            "description": "Identifier of the certificate entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceCertificate": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceCertificate.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspaceCertificate_GetEntityTag",
        "tags": [
          "WorkspaceCertificate"
        ],
        "description": "Gets the entity state (Etag) version of the certificate specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "certificateId",
            "in": "path",
            "description": "Identifier of the certificate entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementWorkspaceHeadCertificate": {
            "$ref": "./examples/ApiManagementHeadWorkspaceCertificate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/certificates/{certificateId}/refreshSecret": {
      "post": {
        "operationId": "WorkspaceCertificate_RefreshSecret",
        "tags": [
          "WorkspaceCertificate"
        ],
        "description": "From KeyVault, Refresh the certificate being used for authentication with the backend.",
        "externalDocs": {
          "description": "How to secure back-end services using client certificate authentication in Azure API Management",
          "url": "https://azure.microsoft.com/en-us/documentation/articles/api-management-howto-mutual-certificates/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "certificateId",
            "in": "path",
            "description": "Identifier of the certificate entity. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CertificateContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementRefreshWorkspaceCertificate": {
            "$ref": "./examples/ApiManagementRefreshWorkspaceCertificate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/diagnostics": {
      "get": {
        "operationId": "WorkspaceDiagnostic_ListByWorkspace",
        "tags": [
          "WorkspaceDiagnostic"
        ],
        "description": "Lists all diagnostics in the specified workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DiagnosticCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceDiagnostics": {
            "$ref": "./examples/ApiManagementListWorkspaceDiagnostics.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/diagnostics/{diagnosticId}": {
      "get": {
        "operationId": "WorkspaceDiagnostic_Get",
        "tags": [
          "WorkspaceDiagnostic"
        ],
        "description": "Gets the details of the Diagnostic specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "diagnosticId",
            "in": "path",
            "description": "Diagnostic identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceDiagnostic": {
            "$ref": "./examples/ApiManagementGetWorkspaceDiagnostic.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceDiagnostic_CreateOrUpdate",
        "tags": [
          "WorkspaceDiagnostic"
        ],
        "description": "Creates a new Diagnostic or updates an existing one.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "diagnosticId",
            "in": "path",
            "description": "Diagnostic identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiagnosticContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceDiagnostic": {
            "$ref": "./examples/ApiManagementCreateWorkspaceDiagnostic.json"
          }
        }
      },
      "patch": {
        "operationId": "WorkspaceDiagnostic_Update",
        "tags": [
          "WorkspaceDiagnostic"
        ],
        "description": "Updates the details of the Diagnostic specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "diagnosticId",
            "in": "path",
            "description": "Diagnostic identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Diagnostic Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiagnosticUpdateContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DiagnosticContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceDiagnostic": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceDiagnostic.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceDiagnostic_Delete",
        "tags": [
          "WorkspaceDiagnostic"
        ],
        "description": "Deletes the specified Diagnostic.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "diagnosticId",
            "in": "path",
            "description": "Diagnostic identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceDiagnostic": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceDiagnostic.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspaceDiagnostic_GetEntityTag",
        "tags": [
          "WorkspaceDiagnostic"
        ],
        "description": "Gets the entity state (Etag) version of the Diagnostic specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "diagnosticId",
            "in": "path",
            "description": "Diagnostic identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceDiagnostic": {
            "$ref": "./examples/ApiManagementHeadWorkspaceDiagnostic.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/groups": {
      "get": {
        "operationId": "WorkspaceGroup_ListByService",
        "tags": [
          "WorkspaceGroup"
        ],
        "description": "Lists a collection of groups defined within a workspace in a service instance.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-create-groups"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| externalId | filter | eq |     |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GroupCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceGroups": {
            "$ref": "./examples/ApiManagementListWorkspaceGroups.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/groups/{groupId}": {
      "get": {
        "operationId": "WorkspaceGroup_Get",
        "tags": [
          "WorkspaceGroup"
        ],
        "description": "Gets the details of the group specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Group identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GroupContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceGroup": {
            "$ref": "./examples/ApiManagementGetWorkspaceGroup.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceGroup_CreateOrUpdate",
        "tags": [
          "WorkspaceGroup"
        ],
        "description": "Creates or Updates a group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Group identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupCreateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GroupContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/GroupContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceGroup": {
            "$ref": "./examples/ApiManagementCreateWorkspaceGroup.json"
          },
          "ApiManagementCreateWorkspaceGroupExternal": {
            "$ref": "./examples/ApiManagementCreateWorkspaceGroupExternal.json"
          }
        }
      },
      "patch": {
        "operationId": "WorkspaceGroup_Update",
        "tags": [
          "WorkspaceGroup"
        ],
        "description": "Updates the details of the group specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Group identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GroupContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceGroup": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceGroup.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceGroup_Delete",
        "tags": [
          "WorkspaceGroup"
        ],
        "description": "Deletes specific group of the workspace in an API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Group identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceGroup": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceGroup.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspaceGroup_GetEntityTag",
        "tags": [
          "WorkspaceGroup"
        ],
        "description": "Gets the entity state (Etag) version of the group specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Group identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceGroup": {
            "$ref": "./examples/ApiManagementHeadWorkspaceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/groups/{groupId}/users": {
      "get": {
        "operationId": "WorkspaceGroupUser_List",
        "tags": [
          "WorkspaceGroup"
        ],
        "description": "Lists a collection of user entities associated with the group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Group identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| firstName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| lastName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| email | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| registrationDate | filter | ge, le, eq, ne, gt, lt |     |</br>| note | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UserCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceGroupUsers": {
            "$ref": "./examples/ApiManagementListWorkspaceGroupUsers.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/groups/{groupId}/users/{userId}": {
      "put": {
        "operationId": "WorkspaceGroupUser_Create",
        "tags": [
          "WorkspaceGroup"
        ],
        "description": "Add existing user to existing group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Group identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UserContract"
            }
          },
          "201": {
            "description": "Resource 'UserContract' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/UserContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceGroupUser": {
            "$ref": "./examples/ApiManagementCreateWorkspaceGroupUser.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceGroupUser_Delete",
        "tags": [
          "WorkspaceGroup"
        ],
        "description": "Remove existing user from existing group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Group identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceGroupUser": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceGroupUser.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspaceGroupUser_CheckEntityExists",
        "tags": [
          "WorkspaceGroup"
        ],
        "description": "Checks that user entity specified by identifier is associated with the group entity.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Group identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "404": {
            "description": "The server cannot find the requested resource."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceGroupUser": {
            "$ref": "./examples/ApiManagementHeadWorkspaceGroupUser.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/loggers": {
      "get": {
        "operationId": "WorkspaceLogger_ListByWorkspace",
        "tags": [
          "WorkspaceLogger"
        ],
        "description": "Lists a collection of loggers in the specified workspace.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-log-event-hubs"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| loggerType | filter | eq |     |</br>| resourceId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LoggerCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceLoggers": {
            "$ref": "./examples/ApiManagementListWorkspaceLoggers.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/loggers/{loggerId}": {
      "get": {
        "operationId": "WorkspaceLogger_Get",
        "tags": [
          "WorkspaceLogger"
        ],
        "description": "Gets the details of the logger specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "loggerId",
            "in": "path",
            "description": "Logger identifier. Must be unique in the API Management service instance.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/LoggerContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceLogger": {
            "$ref": "./examples/ApiManagementGetWorkspaceLogger.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceLogger_CreateOrUpdate",
        "tags": [
          "WorkspaceLogger"
        ],
        "description": "Creates or Updates a logger.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "loggerId",
            "in": "path",
            "description": "Logger identifier. Must be unique in the API Management service instance.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoggerContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/LoggerContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/LoggerContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceAILogger": {
            "$ref": "./examples/ApiManagementCreateWorkspaceAILogger.json"
          },
          "ApiManagementCreateWorkspaceEHLogger": {
            "$ref": "./examples/ApiManagementCreateWorkspaceEHLogger.json"
          }
        }
      },
      "patch": {
        "operationId": "WorkspaceLogger_Update",
        "tags": [
          "WorkspaceLogger"
        ],
        "description": "Updates an existing logger.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "loggerId",
            "in": "path",
            "description": "Logger identifier. Must be unique in the API Management service instance.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoggerUpdateContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/LoggerContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceLogger": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceLogger.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceLogger_Delete",
        "tags": [
          "WorkspaceLogger"
        ],
        "description": "Deletes the specified logger.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "loggerId",
            "in": "path",
            "description": "Logger identifier. Must be unique in the API Management service instance.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceLogger": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceLogger.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspaceLogger_GetEntityTag",
        "tags": [
          "WorkspaceLogger"
        ],
        "description": "Gets the entity state (Etag) version of the logger specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "loggerId",
            "in": "path",
            "description": "Logger identifier. Must be unique in the API Management service instance.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceLogger": {
            "$ref": "./examples/ApiManagementHeadWorkspaceLogger.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/namedValues": {
      "get": {
        "operationId": "WorkspaceNamedValue_ListByService",
        "tags": [
          "WorkspaceNamedValue"
        ],
        "description": "Lists a collection of named values defined within a workspace in a service instance.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-properties"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| tags | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith, any, all |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "isKeyVaultRefreshFailed",
            "in": "query",
            "description": "Query parameter to fetch named value entities based on refresh status.",
            "required": false,
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "x-ms-enum": {
              "name": "KeyVaultRefreshState",
              "modelAsString": true,
              "values": [
                {
                  "name": "true",
                  "value": "true",
                  "description": "Entities for which KeyVault refresh failed."
                },
                {
                  "name": "false",
                  "value": "false",
                  "description": "Entities for which KeyVault refresh succeeded"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NamedValueCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceNamedValues": {
            "$ref": "./examples/ApiManagementListWorkspaceNamedValues.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/namedValues/{namedValueId}": {
      "get": {
        "operationId": "WorkspaceNamedValue_Get",
        "tags": [
          "WorkspaceNamedValue"
        ],
        "description": "Gets the details of the named value specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "namedValueId",
            "in": "path",
            "description": "Identifier of the NamedValue.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NamedValueContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceNamedValue": {
            "$ref": "./examples/ApiManagementGetWorkspaceNamedValue.json"
          },
          "ApiManagementGetWorkspaceNamedValueWithKeyVault": {
            "$ref": "./examples/ApiManagementGetWorkspaceNamedValueWithKeyVault.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceNamedValue_CreateOrUpdate",
        "tags": [
          "WorkspaceNamedValue"
        ],
        "description": "Creates or updates named value.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "namedValueId",
            "in": "path",
            "description": "Identifier of the NamedValue.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamedValueCreateContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NamedValueContract"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/NamedValueContract"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceNamedValue": {
            "$ref": "./examples/ApiManagementCreateWorkspaceNamedValue.json"
          },
          "ApiManagementCreateWorkspaceNamedValueWithKeyVault": {
            "$ref": "./examples/ApiManagementCreateWorkspaceNamedValueWithKeyVault.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/NamedValueContract"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "WorkspaceNamedValue_Update",
        "tags": [
          "WorkspaceNamedValue"
        ],
        "description": "Updates the specific named value.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "namedValueId",
            "in": "path",
            "description": "Identifier of the NamedValue.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamedValueUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NamedValueContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceNamedValue": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceNamedValue.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/NamedValueContract"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "WorkspaceNamedValue_Delete",
        "tags": [
          "WorkspaceNamedValue"
        ],
        "description": "Deletes specific named value from the workspace in an API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "namedValueId",
            "in": "path",
            "description": "Identifier of the NamedValue.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceNamedValue": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceNamedValue.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspaceNamedValue_GetEntityTag",
        "tags": [
          "WorkspaceNamedValue"
        ],
        "description": "Gets the entity state (Etag) version of the named value specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "namedValueId",
            "in": "path",
            "description": "Identifier of the NamedValue.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceNamedValue": {
            "$ref": "./examples/ApiManagementHeadWorkspaceNamedValue.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/namedValues/{namedValueId}/listValue": {
      "post": {
        "operationId": "WorkspaceNamedValue_ListValue",
        "tags": [
          "WorkspaceNamedValue"
        ],
        "description": "Gets the secret of the named value specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "namedValueId",
            "in": "path",
            "description": "Identifier of the NamedValue.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NamedValueSecretContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementWorkspaceNamedValueListValue": {
            "$ref": "./examples/ApiManagementWorkspaceNamedValueListValue.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/namedValues/{namedValueId}/refreshSecret": {
      "post": {
        "operationId": "WorkspaceNamedValue_RefreshSecret",
        "tags": [
          "WorkspaceNamedValue"
        ],
        "description": "Refresh the secret of the named value specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "namedValueId",
            "in": "path",
            "description": "Identifier of the NamedValue.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NamedValueContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementRefreshWorkspaceNamedValue": {
            "$ref": "./examples/ApiManagementRefreshWorkspaceNamedValue.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/NamedValueContract"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications": {
      "get": {
        "operationId": "WorkspaceNotification_ListByService",
        "tags": [
          "WorkspaceNotification"
        ],
        "description": "Lists a collection of properties defined within a service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NotificationCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceNotifications": {
            "$ref": "./examples/ApiManagementListWorkspaceNotifications.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}": {
      "get": {
        "operationId": "WorkspaceNotification_Get",
        "tags": [
          "WorkspaceNotification"
        ],
        "description": "Gets the details of the Notification specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "notificationName",
            "in": "path",
            "description": "Notification Name Identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "RequestPublisherNotificationMessage",
              "PurchasePublisherNotificationMessage",
              "NewApplicationNotificationMessage",
              "BCC",
              "NewIssuePublisherNotificationMessage",
              "AccountClosedPublisher",
              "QuotaLimitApproachingPublisherNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "NotificationName",
              "modelAsString": true,
              "values": [
                {
                  "name": "RequestPublisherNotificationMessage",
                  "value": "RequestPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
                },
                {
                  "name": "PurchasePublisherNotificationMessage",
                  "value": "PurchasePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
                },
                {
                  "name": "NewApplicationNotificationMessage",
                  "value": "NewApplicationNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
                },
                {
                  "name": "BCC",
                  "value": "BCC",
                  "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
                },
                {
                  "name": "NewIssuePublisherNotificationMessage",
                  "value": "NewIssuePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
                },
                {
                  "name": "AccountClosedPublisher",
                  "value": "AccountClosedPublisher",
                  "description": "The following email recipients and users will receive email notifications when developer closes his account."
                },
                {
                  "name": "QuotaLimitApproachingPublisherNotificationMessage",
                  "value": "QuotaLimitApproachingPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NotificationContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceNotification": {
            "$ref": "./examples/ApiManagementGetWorkspaceNotification.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceNotification_CreateOrUpdate",
        "tags": [
          "WorkspaceNotification"
        ],
        "description": "Create or Update API Management publisher notification for the workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "notificationName",
            "in": "path",
            "description": "Notification Name Identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "RequestPublisherNotificationMessage",
              "PurchasePublisherNotificationMessage",
              "NewApplicationNotificationMessage",
              "BCC",
              "NewIssuePublisherNotificationMessage",
              "AccountClosedPublisher",
              "QuotaLimitApproachingPublisherNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "NotificationName",
              "modelAsString": true,
              "values": [
                {
                  "name": "RequestPublisherNotificationMessage",
                  "value": "RequestPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
                },
                {
                  "name": "PurchasePublisherNotificationMessage",
                  "value": "PurchasePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
                },
                {
                  "name": "NewApplicationNotificationMessage",
                  "value": "NewApplicationNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
                },
                {
                  "name": "BCC",
                  "value": "BCC",
                  "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
                },
                {
                  "name": "NewIssuePublisherNotificationMessage",
                  "value": "NewIssuePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
                },
                {
                  "name": "AccountClosedPublisher",
                  "value": "AccountClosedPublisher",
                  "description": "The following email recipients and users will receive email notifications when developer closes his account."
                },
                {
                  "name": "QuotaLimitApproachingPublisherNotificationMessage",
                  "value": "QuotaLimitApproachingPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NotificationContract' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NotificationContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceNotification": {
            "$ref": "./examples/ApiManagementCreateWorkspaceNotification.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientEmails": {
      "get": {
        "operationId": "WorkspaceNotificationRecipientEmail_ListByNotification",
        "tags": [
          "WorkspaceNotification"
        ],
        "description": "Gets the list of the Notification Recipient Emails subscribed to a notification.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "notificationName",
            "in": "path",
            "description": "Notification Name Identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "RequestPublisherNotificationMessage",
              "PurchasePublisherNotificationMessage",
              "NewApplicationNotificationMessage",
              "BCC",
              "NewIssuePublisherNotificationMessage",
              "AccountClosedPublisher",
              "QuotaLimitApproachingPublisherNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "NotificationName",
              "modelAsString": true,
              "values": [
                {
                  "name": "RequestPublisherNotificationMessage",
                  "value": "RequestPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
                },
                {
                  "name": "PurchasePublisherNotificationMessage",
                  "value": "PurchasePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
                },
                {
                  "name": "NewApplicationNotificationMessage",
                  "value": "NewApplicationNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
                },
                {
                  "name": "BCC",
                  "value": "BCC",
                  "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
                },
                {
                  "name": "NewIssuePublisherNotificationMessage",
                  "value": "NewIssuePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
                },
                {
                  "name": "AccountClosedPublisher",
                  "value": "AccountClosedPublisher",
                  "description": "The following email recipients and users will receive email notifications when developer closes his account."
                },
                {
                  "name": "QuotaLimitApproachingPublisherNotificationMessage",
                  "value": "QuotaLimitApproachingPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RecipientEmailCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceNotificationRecipientEmails": {
            "$ref": "./examples/ApiManagementListWorkspaceNotificationRecipientEmails.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientEmails/{email}": {
      "put": {
        "operationId": "WorkspaceNotificationRecipientEmail_CreateOrUpdate",
        "tags": [
          "WorkspaceNotification"
        ],
        "description": "Adds the Email address to the list of Recipients for the Notification.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "notificationName",
            "in": "path",
            "description": "Notification Name Identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "RequestPublisherNotificationMessage",
              "PurchasePublisherNotificationMessage",
              "NewApplicationNotificationMessage",
              "BCC",
              "NewIssuePublisherNotificationMessage",
              "AccountClosedPublisher",
              "QuotaLimitApproachingPublisherNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "NotificationName",
              "modelAsString": true,
              "values": [
                {
                  "name": "RequestPublisherNotificationMessage",
                  "value": "RequestPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
                },
                {
                  "name": "PurchasePublisherNotificationMessage",
                  "value": "PurchasePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
                },
                {
                  "name": "NewApplicationNotificationMessage",
                  "value": "NewApplicationNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
                },
                {
                  "name": "BCC",
                  "value": "BCC",
                  "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
                },
                {
                  "name": "NewIssuePublisherNotificationMessage",
                  "value": "NewIssuePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
                },
                {
                  "name": "AccountClosedPublisher",
                  "value": "AccountClosedPublisher",
                  "description": "The following email recipients and users will receive email notifications when developer closes his account."
                },
                {
                  "name": "QuotaLimitApproachingPublisherNotificationMessage",
                  "value": "QuotaLimitApproachingPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
                }
              ]
            }
          },
          {
            "name": "email",
            "in": "path",
            "description": "Email identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RecipientEmailContract"
            }
          },
          "201": {
            "description": "Resource 'RecipientEmailContract' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/RecipientEmailContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceNotificationRecipientEmail": {
            "$ref": "./examples/ApiManagementCreateWorkspaceNotificationRecipientEmail.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceNotificationRecipientEmail_Delete",
        "tags": [
          "WorkspaceNotification"
        ],
        "description": "Removes the email from the list of Notification.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "notificationName",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "enum": [
              "RequestPublisherNotificationMessage",
              "PurchasePublisherNotificationMessage",
              "NewApplicationNotificationMessage",
              "BCC",
              "NewIssuePublisherNotificationMessage",
              "AccountClosedPublisher",
              "QuotaLimitApproachingPublisherNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "NotificationName",
              "modelAsString": true,
              "values": [
                {
                  "name": "RequestPublisherNotificationMessage",
                  "value": "RequestPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
                },
                {
                  "name": "PurchasePublisherNotificationMessage",
                  "value": "PurchasePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
                },
                {
                  "name": "NewApplicationNotificationMessage",
                  "value": "NewApplicationNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
                },
                {
                  "name": "BCC",
                  "value": "BCC",
                  "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
                },
                {
                  "name": "NewIssuePublisherNotificationMessage",
                  "value": "NewIssuePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
                },
                {
                  "name": "AccountClosedPublisher",
                  "value": "AccountClosedPublisher",
                  "description": "The following email recipients and users will receive email notifications when developer closes his account."
                },
                {
                  "name": "QuotaLimitApproachingPublisherNotificationMessage",
                  "value": "QuotaLimitApproachingPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
                }
              ]
            }
          },
          {
            "name": "email",
            "in": "path",
            "description": "Email identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceNotificationRecipientEmail": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceNotificationRecipientEmail.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspaceNotificationRecipientEmail_CheckEntityExists",
        "tags": [
          "WorkspaceNotification"
        ],
        "description": "Determine if Notification Recipient Email subscribed to the notification.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "notificationName",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "enum": [
              "RequestPublisherNotificationMessage",
              "PurchasePublisherNotificationMessage",
              "NewApplicationNotificationMessage",
              "BCC",
              "NewIssuePublisherNotificationMessage",
              "AccountClosedPublisher",
              "QuotaLimitApproachingPublisherNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "NotificationName",
              "modelAsString": true,
              "values": [
                {
                  "name": "RequestPublisherNotificationMessage",
                  "value": "RequestPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
                },
                {
                  "name": "PurchasePublisherNotificationMessage",
                  "value": "PurchasePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
                },
                {
                  "name": "NewApplicationNotificationMessage",
                  "value": "NewApplicationNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
                },
                {
                  "name": "BCC",
                  "value": "BCC",
                  "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
                },
                {
                  "name": "NewIssuePublisherNotificationMessage",
                  "value": "NewIssuePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
                },
                {
                  "name": "AccountClosedPublisher",
                  "value": "AccountClosedPublisher",
                  "description": "The following email recipients and users will receive email notifications when developer closes his account."
                },
                {
                  "name": "QuotaLimitApproachingPublisherNotificationMessage",
                  "value": "QuotaLimitApproachingPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
                }
              ]
            }
          },
          {
            "name": "email",
            "in": "path",
            "description": "Email identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "404": {
            "description": "The server cannot find the requested resource."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceNotificationRecipientEmail": {
            "$ref": "./examples/ApiManagementHeadWorkspaceNotificationRecipientEmail.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientUsers": {
      "get": {
        "operationId": "WorkspaceNotificationRecipientUser_ListByNotification",
        "tags": [
          "WorkspaceNotification"
        ],
        "description": "Gets the list of the Notification Recipient User subscribed to the notification.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "notificationName",
            "in": "path",
            "description": "Notification Name Identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "RequestPublisherNotificationMessage",
              "PurchasePublisherNotificationMessage",
              "NewApplicationNotificationMessage",
              "BCC",
              "NewIssuePublisherNotificationMessage",
              "AccountClosedPublisher",
              "QuotaLimitApproachingPublisherNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "NotificationName",
              "modelAsString": true,
              "values": [
                {
                  "name": "RequestPublisherNotificationMessage",
                  "value": "RequestPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
                },
                {
                  "name": "PurchasePublisherNotificationMessage",
                  "value": "PurchasePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
                },
                {
                  "name": "NewApplicationNotificationMessage",
                  "value": "NewApplicationNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
                },
                {
                  "name": "BCC",
                  "value": "BCC",
                  "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
                },
                {
                  "name": "NewIssuePublisherNotificationMessage",
                  "value": "NewIssuePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
                },
                {
                  "name": "AccountClosedPublisher",
                  "value": "AccountClosedPublisher",
                  "description": "The following email recipients and users will receive email notifications when developer closes his account."
                },
                {
                  "name": "QuotaLimitApproachingPublisherNotificationMessage",
                  "value": "QuotaLimitApproachingPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RecipientUserCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceNotificationRecipientUsers": {
            "$ref": "./examples/ApiManagementListWorkspaceNotificationRecipientUsers.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/notifications/{notificationName}/recipientUsers/{userId}": {
      "put": {
        "operationId": "WorkspaceNotificationRecipientUser_CreateOrUpdate",
        "tags": [
          "WorkspaceNotification"
        ],
        "description": "Adds the API Management User to the list of Recipients for the Notification.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "notificationName",
            "in": "path",
            "description": "Notification Name Identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "RequestPublisherNotificationMessage",
              "PurchasePublisherNotificationMessage",
              "NewApplicationNotificationMessage",
              "BCC",
              "NewIssuePublisherNotificationMessage",
              "AccountClosedPublisher",
              "QuotaLimitApproachingPublisherNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "NotificationName",
              "modelAsString": true,
              "values": [
                {
                  "name": "RequestPublisherNotificationMessage",
                  "value": "RequestPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
                },
                {
                  "name": "PurchasePublisherNotificationMessage",
                  "value": "PurchasePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
                },
                {
                  "name": "NewApplicationNotificationMessage",
                  "value": "NewApplicationNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
                },
                {
                  "name": "BCC",
                  "value": "BCC",
                  "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
                },
                {
                  "name": "NewIssuePublisherNotificationMessage",
                  "value": "NewIssuePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
                },
                {
                  "name": "AccountClosedPublisher",
                  "value": "AccountClosedPublisher",
                  "description": "The following email recipients and users will receive email notifications when developer closes his account."
                },
                {
                  "name": "QuotaLimitApproachingPublisherNotificationMessage",
                  "value": "QuotaLimitApproachingPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
                }
              ]
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RecipientUserContract"
            }
          },
          "201": {
            "description": "Resource 'RecipientUserContract' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/RecipientUserContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceNotificationRecipientUser": {
            "$ref": "./examples/ApiManagementCreateWorkspaceNotificationRecipientUser.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceNotificationRecipientUser_Delete",
        "tags": [
          "WorkspaceNotification"
        ],
        "description": "Removes the API Management user from the list of Notification.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "notificationName",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "enum": [
              "RequestPublisherNotificationMessage",
              "PurchasePublisherNotificationMessage",
              "NewApplicationNotificationMessage",
              "BCC",
              "NewIssuePublisherNotificationMessage",
              "AccountClosedPublisher",
              "QuotaLimitApproachingPublisherNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "NotificationName",
              "modelAsString": true,
              "values": [
                {
                  "name": "RequestPublisherNotificationMessage",
                  "value": "RequestPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
                },
                {
                  "name": "PurchasePublisherNotificationMessage",
                  "value": "PurchasePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
                },
                {
                  "name": "NewApplicationNotificationMessage",
                  "value": "NewApplicationNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
                },
                {
                  "name": "BCC",
                  "value": "BCC",
                  "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
                },
                {
                  "name": "NewIssuePublisherNotificationMessage",
                  "value": "NewIssuePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
                },
                {
                  "name": "AccountClosedPublisher",
                  "value": "AccountClosedPublisher",
                  "description": "The following email recipients and users will receive email notifications when developer closes his account."
                },
                {
                  "name": "QuotaLimitApproachingPublisherNotificationMessage",
                  "value": "QuotaLimitApproachingPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
                }
              ]
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceNotificationRecipientUser": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceNotificationRecipientUser.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspaceNotificationRecipientUser_CheckEntityExists",
        "tags": [
          "WorkspaceNotification"
        ],
        "description": "Determine if the Notification Recipient User is subscribed to the notification.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "notificationName",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "enum": [
              "RequestPublisherNotificationMessage",
              "PurchasePublisherNotificationMessage",
              "NewApplicationNotificationMessage",
              "BCC",
              "NewIssuePublisherNotificationMessage",
              "AccountClosedPublisher",
              "QuotaLimitApproachingPublisherNotificationMessage"
            ],
            "x-ms-enum": {
              "name": "NotificationName",
              "modelAsString": true,
              "values": [
                {
                  "name": "RequestPublisherNotificationMessage",
                  "value": "RequestPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
                },
                {
                  "name": "PurchasePublisherNotificationMessage",
                  "value": "PurchasePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
                },
                {
                  "name": "NewApplicationNotificationMessage",
                  "value": "NewApplicationNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
                },
                {
                  "name": "BCC",
                  "value": "BCC",
                  "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
                },
                {
                  "name": "NewIssuePublisherNotificationMessage",
                  "value": "NewIssuePublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
                },
                {
                  "name": "AccountClosedPublisher",
                  "value": "AccountClosedPublisher",
                  "description": "The following email recipients and users will receive email notifications when developer closes his account."
                },
                {
                  "name": "QuotaLimitApproachingPublisherNotificationMessage",
                  "value": "QuotaLimitApproachingPublisherNotificationMessage",
                  "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
                }
              ]
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "404": {
            "description": "The server cannot find the requested resource."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceNotificationRecipientUser": {
            "$ref": "./examples/ApiManagementHeadWorkspaceNotificationRecipientUser.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/policies": {
      "get": {
        "operationId": "WorkspacePolicy_ListByApi",
        "tags": [
          "WorkspacePolicy"
        ],
        "description": "Get the policy configuration at the workspace level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspacePolicies": {
            "$ref": "./examples/ApiManagementListWorkspacePolicies.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/policies/{policyId}": {
      "get": {
        "operationId": "WorkspacePolicy_Get",
        "tags": [
          "WorkspacePolicy"
        ],
        "description": "Get the policy configuration at the API level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Policy Export Format.",
            "required": false,
            "type": "string",
            "default": "xml",
            "enum": [
              "xml",
              "rawxml"
            ],
            "x-ms-enum": {
              "name": "PolicyExportFormat",
              "modelAsString": true,
              "values": [
                {
                  "name": "xml",
                  "value": "xml",
                  "description": "The contents are inline and Content type is an XML document."
                },
                {
                  "name": "rawxml",
                  "value": "rawxml",
                  "description": "The contents are inline and Content type is a non XML encoded policy document."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspacePolicy": {
            "$ref": "./examples/ApiManagementGetWorkspacePolicy.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspacePolicy_CreateOrUpdate",
        "tags": [
          "WorkspacePolicy"
        ],
        "description": "Creates or updates policy configuration for the workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The policy contents to apply.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspacePolicy": {
            "$ref": "./examples/ApiManagementCreateWorkspacePolicy.json"
          },
          "ApiManagementCreateWorkspacePolicyNonXmlEncoded": {
            "$ref": "./examples/ApiManagementCreateWorkspacePolicyNonXmlEncoded.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspacePolicy_Delete",
        "tags": [
          "WorkspacePolicy"
        ],
        "description": "Deletes the policy configuration at the workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspacePolicy": {
            "$ref": "./examples/ApiManagementDeleteWorkspacePolicy.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspacePolicy_GetEntityTag",
        "tags": [
          "WorkspacePolicy"
        ],
        "description": "Gets the entity state (Etag) version of the workspace policy specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspacePolicy": {
            "$ref": "./examples/ApiManagementHeadWorkspacePolicy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/policyFragments": {
      "get": {
        "operationId": "WorkspacePolicyFragment_ListByService",
        "tags": [
          "WorkspacePolicyFragment"
        ],
        "description": "Gets all policy fragments defined within a workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter, orderBy | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| value | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "OData order by query option.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyFragmentCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspacePolicyFragments": {
            "$ref": "./examples/ApiManagementListWorkspacePolicyFragments.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/policyFragments/{id}": {
      "get": {
        "operationId": "WorkspacePolicyFragment_Get",
        "tags": [
          "WorkspacePolicyFragment"
        ],
        "description": "Gets a policy fragment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)"
          },
          {
            "name": "format",
            "in": "query",
            "description": "Policy fragment content format.",
            "required": false,
            "type": "string",
            "enum": [
              "xml",
              "rawxml"
            ],
            "x-ms-enum": {
              "name": "PolicyFragmentContentFormat",
              "modelAsString": true,
              "values": [
                {
                  "name": "xml",
                  "value": "xml",
                  "description": "The contents are inline and Content type is an XML document."
                },
                {
                  "name": "rawxml",
                  "value": "rawxml",
                  "description": "The contents are inline and Content type is a non XML encoded policy document."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyFragmentContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspacePolicyFragment": {
            "$ref": "./examples/ApiManagementGetWorkspacePolicyFragment.json"
          },
          "ApiManagementGetWorkspacePolicyFragmentFormat": {
            "$ref": "./examples/ApiManagementGetWorkspacePolicyFragmentFormat.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspacePolicyFragment_CreateOrUpdate",
        "tags": [
          "WorkspacePolicyFragment"
        ],
        "description": "Creates or updates a policy fragment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The policy fragment contents to apply.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyFragmentContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyFragmentContract"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "ETag": {
                "type": "string",
                "description": "Current entity state version"
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/PolicyFragmentContract"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspacePolicyFragment": {
            "$ref": "./examples/ApiManagementCreateWorkspacePolicyFragment.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/PolicyFragmentContract"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "WorkspacePolicyFragment_Delete",
        "tags": [
          "WorkspacePolicyFragment"
        ],
        "description": "Deletes a policy fragment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspacePolicyFragment": {
            "$ref": "./examples/ApiManagementDeleteWorkspacePolicyFragment.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspacePolicyFragment_GetEntityTag",
        "tags": [
          "WorkspacePolicyFragment"
        ],
        "description": "Gets the entity state (Etag) version of a policy fragment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspacePolicyFragment": {
            "$ref": "./examples/ApiManagementHeadWorkspacePolicyFragment.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/policyFragments/{id}/listReferences": {
      "post": {
        "operationId": "WorkspacePolicyFragment_ListReferences",
        "tags": [
          "WorkspacePolicyFragment"
        ],
        "description": "Lists policy resources that reference the policy fragment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "id",
            "in": "path",
            "description": "A resource identifier.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspacePolicyFragmentReferences": {
            "$ref": "./examples/ApiManagementListWorkspacePolicyFragmentReferences.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products": {
      "get": {
        "operationId": "WorkspaceProduct_ListByService",
        "tags": [
          "WorkspaceProduct"
        ],
        "description": "Lists a collection of products in the specified workspace in a service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| groups | expand |     |     |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "expandGroups",
            "in": "query",
            "description": "When set to true, the response contains an array of groups that have visibility to the product. The default is false.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Products which are part of a specific tag.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProductCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceProducts": {
            "$ref": "./examples/ApiManagementListWorkspaceProducts.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products/{productId}": {
      "get": {
        "operationId": "WorkspaceProduct_Get",
        "tags": [
          "WorkspaceProduct"
        ],
        "description": "Gets the details of the product specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ProductContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceProduct": {
            "$ref": "./examples/ApiManagementGetWorkspaceProduct.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceProduct_CreateOrUpdate",
        "tags": [
          "WorkspaceProduct"
        ],
        "description": "Creates or Updates a product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ProductContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/ProductContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceProduct": {
            "$ref": "./examples/ApiManagementCreateWorkspaceProduct.json"
          }
        }
      },
      "patch": {
        "operationId": "WorkspaceProduct_Update",
        "tags": [
          "WorkspaceProduct"
        ],
        "description": "Update existing product details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ProductContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceProduct": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceProduct.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceProduct_Delete",
        "tags": [
          "WorkspaceProduct"
        ],
        "description": "Delete product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "deleteSubscriptions",
            "in": "query",
            "description": "Delete existing subscriptions associated with the product or not.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceProduct": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceProduct.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspaceProduct_GetEntityTag",
        "tags": [
          "WorkspaceProduct"
        ],
        "description": "Gets the entity state (Etag) version of the product specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceProduct": {
            "$ref": "./examples/ApiManagementHeadWorkspaceProduct.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products/{productId}/apiLinks": {
      "get": {
        "operationId": "WorkspaceProductApiLink_ListByProduct",
        "tags": [
          "WorkspaceProductApiLink"
        ],
        "description": "Lists a collection of the API links associated with a product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| apiId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProductApiLinkCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceProductApiLinks": {
            "$ref": "./examples/ApiManagementListWorkspaceProductApiLinks.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products/{productId}/apiLinks/{apiLinkId}": {
      "get": {
        "operationId": "WorkspaceProductApiLink_Get",
        "tags": [
          "WorkspaceProductApiLink"
        ],
        "description": "Gets the API link for the product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "apiLinkId",
            "in": "path",
            "description": "Product-API link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ProductApiLinkContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceProductApiLink": {
            "$ref": "./examples/ApiManagementGetWorkspaceProductApiLink.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceProductApiLink_CreateOrUpdate",
        "tags": [
          "WorkspaceProductApiLink"
        ],
        "description": "Adds an API to the specified product via link.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "apiLinkId",
            "in": "path",
            "description": "Product-API link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductApiLinkContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ProductApiLinkContract' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ProductApiLinkContract"
            }
          },
          "201": {
            "description": "Resource 'ProductApiLinkContract' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ProductApiLinkContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceProductApiLink": {
            "$ref": "./examples/ApiManagementCreateWorkspaceProductApiLink.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceProductApiLink_Delete",
        "tags": [
          "WorkspaceProductApiLink"
        ],
        "description": "Deletes the specified API from the specified product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "apiLinkId",
            "in": "path",
            "description": "Product-API link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceProductApiLink": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceProductApiLink.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products/{productId}/groupLinks": {
      "get": {
        "operationId": "WorkspaceProductGroupLink_ListByProduct",
        "tags": [
          "WorkspaceProductGroupLink"
        ],
        "description": "Lists a collection of the group links associated with a product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| groupId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProductGroupLinkCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceProductGroupLinks": {
            "$ref": "./examples/ApiManagementListWorkspaceProductGroupLinks.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products/{productId}/groupLinks/{groupLinkId}": {
      "get": {
        "operationId": "WorkspaceProductGroupLink_Get",
        "tags": [
          "WorkspaceProductGroupLink"
        ],
        "description": "Gets the group link for the product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "groupLinkId",
            "in": "path",
            "description": "Product-Group link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ProductGroupLinkContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceProductGroupLink": {
            "$ref": "./examples/ApiManagementGetWorkspaceProductGroupLink.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceProductGroupLink_CreateOrUpdate",
        "tags": [
          "WorkspaceProductGroupLink"
        ],
        "description": "Adds a group to the specified product via link.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "groupLinkId",
            "in": "path",
            "description": "Product-Group link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductGroupLinkContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ProductGroupLinkContract' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ProductGroupLinkContract"
            }
          },
          "201": {
            "description": "Resource 'ProductGroupLinkContract' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ProductGroupLinkContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceProductGroupLink": {
            "$ref": "./examples/ApiManagementCreateWorkspaceProductGroupLink.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceProductGroupLink_Delete",
        "tags": [
          "WorkspaceProductGroupLink"
        ],
        "description": "Deletes the specified group from the specified product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "groupLinkId",
            "in": "path",
            "description": "Product-Group link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceProductGroupLink": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceProductGroupLink.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products/{productId}/policies": {
      "get": {
        "operationId": "WorkspaceProductPolicy_ListByProduct",
        "tags": [
          "WorkspaceProductPolicy"
        ],
        "description": "Get the policy configuration at the Product level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceProductPolicies": {
            "$ref": "./examples/ApiManagementListWorkspaceProductPolicies.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/products/{productId}/policies/{policyId}": {
      "get": {
        "operationId": "WorkspaceProductPolicy_Get",
        "tags": [
          "WorkspaceProductPolicy"
        ],
        "description": "Get the policy configuration at the Product level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Policy Export Format.",
            "required": false,
            "type": "string",
            "default": "xml",
            "enum": [
              "xml",
              "rawxml"
            ],
            "x-ms-enum": {
              "name": "PolicyExportFormat",
              "modelAsString": true,
              "values": [
                {
                  "name": "xml",
                  "value": "xml",
                  "description": "The contents are inline and Content type is an XML document."
                },
                {
                  "name": "rawxml",
                  "value": "rawxml",
                  "description": "The contents are inline and Content type is a non XML encoded policy document."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceProductPolicy": {
            "$ref": "./examples/ApiManagementGetWorkspaceProductPolicy.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceProductPolicy_CreateOrUpdate",
        "tags": [
          "WorkspaceProductPolicy"
        ],
        "description": "Creates or updates policy configuration for the Product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The policy contents to apply.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/PolicyContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceProductPolicy": {
            "$ref": "./examples/ApiManagementCreateWorkspaceProductPolicy.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceProductPolicy_Delete",
        "tags": [
          "WorkspaceProductPolicy"
        ],
        "description": "Deletes the policy configuration at the Product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceProductPolicy": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceProductPolicy.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspaceProductPolicy_GetEntityTag",
        "tags": [
          "WorkspaceProductPolicy"
        ],
        "description": "Get the ETag of the policy configuration at the Product level.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Product identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "policyId",
            "in": "path",
            "description": "The identifier of the Policy.",
            "required": true,
            "type": "string",
            "enum": [
              "policy"
            ],
            "x-ms-enum": {
              "name": "PolicyIdName",
              "modelAsString": true,
              "values": [
                {
                  "name": "policy",
                  "value": "policy"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceProductPolicy": {
            "$ref": "./examples/ApiManagementHeadWorkspaceProductPolicy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/schemas": {
      "get": {
        "operationId": "WorkspaceGlobalSchema_ListByService",
        "tags": [
          "WorkspaceGlobalSchema"
        ],
        "description": "Lists a collection of schemas registered with workspace in a service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GlobalSchemaCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceSchemas": {
            "$ref": "./examples/ApiManagementListWorkspaceSchemas.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/schemas/{schemaId}": {
      "get": {
        "operationId": "WorkspaceGlobalSchema_Get",
        "tags": [
          "WorkspaceGlobalSchema"
        ],
        "description": "Gets the details of the Schema specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "schemaId",
            "in": "path",
            "description": "Schema id identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GlobalSchemaContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceSchema": {
            "$ref": "./examples/ApiManagementGetWorkspaceSchema.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceGlobalSchema_CreateOrUpdate",
        "tags": [
          "WorkspaceGlobalSchema"
        ],
        "description": "Creates new or updates existing specified Schema of the workspace in an API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "schemaId",
            "in": "path",
            "description": "Schema id identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GlobalSchemaContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GlobalSchemaContract"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/GlobalSchemaContract"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked"
              },
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "location": {
                "type": "string",
                "description": "Location header"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceSchema": {
            "$ref": "./examples/ApiManagementCreateWorkspaceSchema.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/GlobalSchemaContract"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "WorkspaceGlobalSchema_Delete",
        "tags": [
          "WorkspaceGlobalSchema"
        ],
        "description": "Deletes specific Schema.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "schemaId",
            "in": "path",
            "description": "Schema id identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceSchema": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceSchema.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspaceGlobalSchema_GetEntityTag",
        "tags": [
          "WorkspaceGlobalSchema"
        ],
        "description": "Gets the entity state (Etag) version of the Schema specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "schemaId",
            "in": "path",
            "description": "Schema id identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceSchema": {
            "$ref": "./examples/ApiManagementHeadWorkspaceSchema.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/subscriptions": {
      "get": {
        "operationId": "WorkspaceSubscription_List",
        "tags": [
          "WorkspaceSubscription"
        ],
        "description": "Lists all subscriptions of the workspace in an API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| stateComment | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| ownerId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| scope | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| state | filter | eq |     |</br>| user | expand |     |     |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubscriptionCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceSubscriptions": {
            "$ref": "./examples/ApiManagementListWorkspaceSubscriptions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/subscriptions/{sid}": {
      "get": {
        "operationId": "WorkspaceSubscription_Get",
        "tags": [
          "WorkspaceSubscription"
        ],
        "description": "Gets the specified Subscription entity.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "sid",
            "in": "path",
            "description": "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SubscriptionContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceSubscription": {
            "$ref": "./examples/ApiManagementGetWorkspaceSubscription.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceSubscription_CreateOrUpdate",
        "tags": [
          "WorkspaceSubscription"
        ],
        "description": "Creates or updates the subscription of specified user to the specified product.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "sid",
            "in": "path",
            "description": "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "notify",
            "in": "query",
            "description": "Notify change in Subscription State.\n- If false, do not send any email notification for change of state of subscription\n- If true, send email notification of change of state of subscription",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "appType",
            "in": "query",
            "description": "Determines the type of application which send the create user request. Default is legacy publisher portal.",
            "required": false,
            "type": "string",
            "enum": [
              "portal",
              "developerPortal"
            ],
            "x-ms-enum": {
              "name": "AppType",
              "modelAsString": true,
              "values": [
                {
                  "name": "portal",
                  "value": "portal",
                  "description": "User create request was sent by legacy developer portal."
                },
                {
                  "name": "developerPortal",
                  "value": "developerPortal",
                  "description": "User create request was sent by new developer portal."
                }
              ]
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionCreateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SubscriptionContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/SubscriptionContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceSubscription": {
            "$ref": "./examples/ApiManagementCreateWorkspaceSubscription.json"
          }
        }
      },
      "patch": {
        "operationId": "WorkspaceSubscription_Update",
        "tags": [
          "WorkspaceSubscription"
        ],
        "description": "Updates the details of a subscription specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "sid",
            "in": "path",
            "description": "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "notify",
            "in": "query",
            "description": "Notify change in Subscription State.\n- If false, do not send any email notification for change of state of subscription\n- If true, send email notification of change of state of subscription",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "appType",
            "in": "query",
            "description": "Determines the type of application which send the create user request. Default is legacy publisher portal.",
            "required": false,
            "type": "string",
            "enum": [
              "portal",
              "developerPortal"
            ],
            "x-ms-enum": {
              "name": "AppType",
              "modelAsString": true,
              "values": [
                {
                  "name": "portal",
                  "value": "portal",
                  "description": "User create request was sent by legacy developer portal."
                },
                {
                  "name": "developerPortal",
                  "value": "developerPortal",
                  "description": "User create request was sent by new developer portal."
                }
              ]
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SubscriptionContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceSubscription": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceSubscription.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceSubscription_Delete",
        "tags": [
          "WorkspaceSubscription"
        ],
        "description": "Deletes the specified subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "sid",
            "in": "path",
            "description": "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceSubscription": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceSubscription.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspaceSubscription_GetEntityTag",
        "tags": [
          "WorkspaceSubscription"
        ],
        "description": "Gets the entity state (Etag) version of the apimanagement subscription specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "sid",
            "in": "path",
            "description": "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceSubscription": {
            "$ref": "./examples/ApiManagementHeadWorkspaceSubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/subscriptions/{sid}/listSecrets": {
      "post": {
        "operationId": "WorkspaceSubscription_ListSecrets",
        "tags": [
          "WorkspaceSubscription"
        ],
        "description": "Gets the specified Subscription keys.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "sid",
            "in": "path",
            "description": "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubscriptionKeysContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementWorkspaceSubscriptionListSecrets": {
            "$ref": "./examples/ApiManagementWorkspaceSubscriptionListSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/subscriptions/{sid}/regeneratePrimaryKey": {
      "post": {
        "operationId": "WorkspaceSubscription_RegeneratePrimaryKey",
        "tags": [
          "WorkspaceSubscription"
        ],
        "description": "Regenerates primary key of existing subscription of the workspace in an API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "sid",
            "in": "path",
            "description": "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementWorkspaceSubscriptionRegeneratePrimaryKey": {
            "$ref": "./examples/ApiManagementWorkspaceSubscriptionRegeneratePrimaryKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/subscriptions/{sid}/regenerateSecondaryKey": {
      "post": {
        "operationId": "WorkspaceSubscription_RegenerateSecondaryKey",
        "tags": [
          "WorkspaceSubscription"
        ],
        "description": "Regenerates secondary key of existing subscription of the workspace in an API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "sid",
            "in": "path",
            "description": "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
            "required": true,
            "type": "string",
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementWorkspaceSubscriptionRegenerateSecondaryKey": {
            "$ref": "./examples/ApiManagementWorkspaceSubscriptionRegenerateSecondaryKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags": {
      "get": {
        "operationId": "WorkspaceTag_ListByService",
        "tags": [
          "WorkspaceTag"
        ],
        "description": "Lists a collection of tags defined within a workspace in a service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Scope like 'apis', 'products' or 'apis/{apiId}",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceTags": {
            "$ref": "./examples/ApiManagementListWorkspaceTags.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags/{tagId}": {
      "get": {
        "operationId": "WorkspaceTag_Get",
        "tags": [
          "WorkspaceTag"
        ],
        "description": "Gets the details of the tag specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceTag": {
            "$ref": "./examples/ApiManagementGetWorkspaceTag.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceTag_CreateOrUpdate",
        "tags": [
          "WorkspaceTag"
        ],
        "description": "Creates a tag.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceTag": {
            "$ref": "./examples/ApiManagementCreateWorkspaceTag.json"
          }
        }
      },
      "patch": {
        "operationId": "WorkspaceTag_Update",
        "tags": [
          "WorkspaceTag"
        ],
        "description": "Updates the details of the tag specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TagContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementUpdateWorkspaceTag": {
            "$ref": "./examples/ApiManagementUpdateWorkspaceTag.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceTag_Delete",
        "tags": [
          "WorkspaceTag"
        ],
        "description": "Deletes specific tag of the workspace in an API Management service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceTag": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceTag.json"
          }
        }
      },
      "head": {
        "operationId": "WorkspaceTag_GetEntityState",
        "tags": [
          "WorkspaceTag"
        ],
        "description": "Gets the entity state version of the tag specified by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementHeadWorkspaceTag": {
            "$ref": "./examples/ApiManagementHeadWorkspaceTag.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags/{tagId}/apiLinks": {
      "get": {
        "operationId": "WorkspaceTagApiLink_ListByProduct",
        "tags": [
          "WorkspaceTagApiLink"
        ],
        "description": "Lists a collection of the API links associated with a tag.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| apiId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagApiLinkCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceTagApiLinks": {
            "$ref": "./examples/ApiManagementListWorkspaceTagApiLinks.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags/{tagId}/apiLinks/{apiLinkId}": {
      "get": {
        "operationId": "WorkspaceTagApiLink_Get",
        "tags": [
          "WorkspaceTagApiLink"
        ],
        "description": "Gets the API link for the tag.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiLinkId",
            "in": "path",
            "description": "Tag-API link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TagApiLinkContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceTagApiLink": {
            "$ref": "./examples/ApiManagementGetWorkspaceTagApiLink.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceTagApiLink_CreateOrUpdate",
        "tags": [
          "WorkspaceTagApiLink"
        ],
        "description": "Adds an API to the specified tag via link.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiLinkId",
            "in": "path",
            "description": "Tag-API link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagApiLinkContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'TagApiLinkContract' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/TagApiLinkContract"
            }
          },
          "201": {
            "description": "Resource 'TagApiLinkContract' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/TagApiLinkContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceTagApiLink": {
            "$ref": "./examples/ApiManagementCreateWorkspaceTagApiLink.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceTagApiLink_Delete",
        "tags": [
          "WorkspaceTagApiLink"
        ],
        "description": "Deletes the specified API from the specified tag.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiLinkId",
            "in": "path",
            "description": "Tag-API link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceTagApiLink": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceTagApiLink.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags/{tagId}/operationLinks": {
      "get": {
        "operationId": "WorkspaceTagOperationLink_ListByProduct",
        "tags": [
          "WorkspaceTagOperationLink"
        ],
        "description": "Lists a collection of the operation links associated with a tag.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| operationId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagOperationLinkCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceTagOperationLinks": {
            "$ref": "./examples/ApiManagementListWorkspaceTagOperationLinks.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags/{tagId}/operationLinks/{operationLinkId}": {
      "get": {
        "operationId": "WorkspaceTagOperationLink_Get",
        "tags": [
          "WorkspaceTagOperationLink"
        ],
        "description": "Gets the operation link for the tag.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationLinkId",
            "in": "path",
            "description": "Tag-operation link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TagOperationLinkContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceTagOperationLink": {
            "$ref": "./examples/ApiManagementGetWorkspaceTagOperationLink.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceTagOperationLink_CreateOrUpdate",
        "tags": [
          "WorkspaceTagOperationLink"
        ],
        "description": "Adds an operation to the specified tag via link.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationLinkId",
            "in": "path",
            "description": "Tag-operation link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagOperationLinkContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'TagOperationLinkContract' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/TagOperationLinkContract"
            }
          },
          "201": {
            "description": "Resource 'TagOperationLinkContract' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/TagOperationLinkContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceTagOperationLink": {
            "$ref": "./examples/ApiManagementCreateWorkspaceTagOperationLink.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceTagOperationLink_Delete",
        "tags": [
          "WorkspaceTagOperationLink"
        ],
        "description": "Deletes the specified operation from the specified tag.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "operationLinkId",
            "in": "path",
            "description": "Tag-operation link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceTagOperationLink": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceTagOperationLink.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags/{tagId}/productLinks": {
      "get": {
        "operationId": "WorkspaceTagProductLink_ListByProduct",
        "tags": [
          "WorkspaceTagProductLink"
        ],
        "description": "Lists a collection of the product links associated with a tag.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "|     Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |</br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of records to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of records to skip.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagProductLinkCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementListWorkspaceTagProductLinks": {
            "$ref": "./examples/ApiManagementListWorkspaceTagProductLinks.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/tags/{tagId}/productLinks/{productLinkId}": {
      "get": {
        "operationId": "WorkspaceTagProductLink_Get",
        "tags": [
          "WorkspaceTagProductLink"
        ],
        "description": "Gets the product link for the tag.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productLinkId",
            "in": "path",
            "description": "Tag-product link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TagProductLinkContract"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceTagProductLink": {
            "$ref": "./examples/ApiManagementGetWorkspaceTagProductLink.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceTagProductLink_CreateOrUpdate",
        "tags": [
          "WorkspaceTagProductLink"
        ],
        "description": "Adds a product to the specified tag via link.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productLinkId",
            "in": "path",
            "description": "Tag-product link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Create or update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagProductLinkContract"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'TagProductLinkContract' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/TagProductLinkContract"
            }
          },
          "201": {
            "description": "Resource 'TagProductLinkContract' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/TagProductLinkContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementCreateWorkspaceTagProductLink": {
            "$ref": "./examples/ApiManagementCreateWorkspaceTagProductLink.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceTagProductLink_Delete",
        "tags": [
          "WorkspaceTagProductLink"
        ],
        "description": "Deletes the specified product from the specified tag.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "tagId",
            "in": "path",
            "description": "Tag identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "productLinkId",
            "in": "path",
            "description": "Tag-product link identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementDeleteWorkspaceTagProductLink": {
            "$ref": "./examples/ApiManagementDeleteWorkspaceTagProductLink.json"
          }
        }
      }
    }
  },
  "x-ms-paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/apis/{apiId}?export=true": {
      "get": {
        "operationId": "ApiExport_Get",
        "description": "Gets the details of the API specified by its identifier in the format specified to the Storage Blob with SAS Key valid for 5 minutes.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "format",
            "in": "query",
            "description": "Format in which to export the Api Details to the Storage Blob with Sas Key valid for 5 minutes. New formats can be added in the future.",
            "required": true,
            "type": "string",
            "enum": [
              "swagger-link",
              "wsdl-link",
              "wadl-link",
              "openapi-link",
              "openapi+json-link"
            ],
            "x-ms-enum": {
              "name": "ExportFormat",
              "modelAsString": true,
              "values": [
                {
                  "name": "Swagger",
                  "value": "swagger-link",
                  "description": "Export the Api Definition in OpenAPI 2.0 Specification as JSON document to the Storage Blob."
                },
                {
                  "name": "Wsdl",
                  "value": "wsdl-link",
                  "description": "Export the Api Definition in WSDL Schema to Storage Blob. This is only supported for APIs of Type `soap`"
                },
                {
                  "name": "Wadl",
                  "value": "wadl-link",
                  "description": "Export the Api Definition in WADL Schema to Storage Blob."
                },
                {
                  "name": "Openapi",
                  "value": "openapi-link",
                  "description": "Export the Api Definition in OpenAPI 3.0 Specification as YAML document to Storage Blob."
                },
                {
                  "name": "OpenapiJson",
                  "value": "openapi+json-link",
                  "description": "Export the Api Definition in OpenAPI 3.0 Specification as JSON document to Storage Blob."
                }
              ]
            }
          },
          {
            "name": "export",
            "in": "query",
            "description": "Query parameter required to export the API details.",
            "required": true,
            "type": "string",
            "enum": [
              "true"
            ],
            "x-ms-enum": {
              "name": "ExportApi",
              "modelAsString": true,
              "values": [
                {
                  "name": "true",
                  "value": "true"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiExportResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetApiExportInOpenApi2dot0": {
            "$ref": "./examples/ApiManagementGetApiExportInOpenApi2dot0.json"
          },
          "ApiManagementGetApiExportInOpenApi3dot0": {
            "$ref": "./examples/ApiManagementGetApiExportInOpenApi3dot0.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/workspaces/{workspaceId}/apis/{apiId}?export=true": {
      "get": {
        "operationId": "WorkspaceApiExport_Get",
        "description": "Gets the details of the API specified by its identifier in the format specified to the Storage Blob with SAS Key valid for 5 minutes.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the API Management service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "workspaceId",
            "in": "path",
            "description": "Workspace identifier. Must be unique in the current API Management service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "apiId",
            "in": "path",
            "description": "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "pattern": "^[^*#&+:<>?]+$"
          },
          {
            "name": "format",
            "in": "query",
            "description": "Format in which to export the Api Details to the Storage Blob with Sas Key valid for 5 minutes.",
            "required": true,
            "type": "string",
            "enum": [
              "swagger-link",
              "wsdl-link",
              "wadl-link",
              "openapi-link",
              "openapi+json-link"
            ],
            "x-ms-enum": {
              "name": "ExportFormat",
              "modelAsString": true,
              "values": [
                {
                  "name": "Swagger",
                  "value": "swagger-link",
                  "description": "Export the Api Definition in OpenAPI 2.0 Specification as JSON document to the Storage Blob."
                },
                {
                  "name": "Wsdl",
                  "value": "wsdl-link",
                  "description": "Export the Api Definition in WSDL Schema to Storage Blob. This is only supported for APIs of Type `soap`"
                },
                {
                  "name": "Wadl",
                  "value": "wadl-link",
                  "description": "Export the Api Definition in WADL Schema to Storage Blob."
                },
                {
                  "name": "Openapi",
                  "value": "openapi-link",
                  "description": "Export the Api Definition in OpenAPI 3.0 Specification as YAML document to Storage Blob."
                },
                {
                  "name": "OpenapiJson",
                  "value": "openapi+json-link",
                  "description": "Export the Api Definition in OpenAPI 3.0 Specification as JSON document to Storage Blob."
                }
              ]
            }
          },
          {
            "name": "export",
            "in": "query",
            "description": "Query parameter required to export the API details.",
            "required": true,
            "type": "string",
            "enum": [
              "true"
            ],
            "x-ms-enum": {
              "name": "ExportApi",
              "modelAsString": true,
              "values": [
                {
                  "name": "true",
                  "value": "true"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiExportResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApiManagementGetWorkspaceApiExportInOpenApi2dot0": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiExportInOpenApi2dot0.json"
          },
          "ApiManagementGetWorkspaceApiExportInOpenApi3dot0": {
            "$ref": "./examples/ApiManagementGetWorkspaceApiExportInOpenApi3dot0.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AccessIdName": {
      "type": "string",
      "enum": [
        "access",
        "gitAccess"
      ],
      "x-ms-enum": {
        "name": "AccessIdName",
        "modelAsString": true,
        "values": [
          {
            "name": "access",
            "value": "access"
          },
          {
            "name": "gitAccess",
            "value": "gitAccess"
          }
        ]
      }
    },
    "AccessInformationCollection": {
      "type": "object",
      "description": "Paged AccessInformation list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/AccessInformationContract"
          },
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      }
    },
    "AccessInformationContract": {
      "type": "object",
      "description": "Tenant Settings.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AccessInformationContractProperties",
          "description": "AccessInformation entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AccessInformationContractProperties": {
      "type": "object",
      "description": "Tenant access information contract of the API Management service.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Access Information type ('access' or 'gitAccess')"
        },
        "principalId": {
          "type": "string",
          "description": "Principal (User) Identifier."
        },
        "enabled": {
          "type": "boolean",
          "description": "Determines whether direct access is enabled."
        }
      }
    },
    "AccessInformationCreateParameterProperties": {
      "type": "object",
      "description": "Tenant access information update parameters of the API Management service",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "Principal (User) Identifier."
        },
        "primaryKey": {
          "type": "string",
          "format": "password",
          "description": "Primary access key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
          "x-ms-secret": true
        },
        "secondaryKey": {
          "type": "string",
          "format": "password",
          "description": "Secondary access key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
          "x-ms-secret": true
        },
        "enabled": {
          "type": "boolean",
          "description": "Determines whether direct access is enabled."
        }
      }
    },
    "AccessInformationCreateParameters": {
      "type": "object",
      "description": "Tenant access information update parameters.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AccessInformationCreateParameterProperties",
          "description": "Tenant access information update parameter properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "AccessInformationSecretsContract": {
      "type": "object",
      "description": "Tenant access information contract of the API Management service.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Access Information type ('access' or 'gitAccess')"
        },
        "principalId": {
          "type": "string",
          "description": "Principal (User) Identifier."
        },
        "primaryKey": {
          "type": "string",
          "format": "password",
          "description": "Primary access key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
          "x-ms-secret": true
        },
        "secondaryKey": {
          "type": "string",
          "format": "password",
          "description": "Secondary access key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
          "x-ms-secret": true
        },
        "enabled": {
          "type": "boolean",
          "description": "Determines whether direct access is enabled."
        }
      }
    },
    "AccessInformationUpdateParameterProperties": {
      "type": "object",
      "description": "Tenant access information update parameters of the API Management service",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Determines whether direct access is enabled."
        }
      }
    },
    "AccessInformationUpdateParameters": {
      "type": "object",
      "description": "Tenant access information update parameters.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AccessInformationUpdateParameterProperties",
          "description": "Tenant access information update parameter properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "AccessType": {
      "type": "string",
      "description": "The type of access to be used for the storage account.",
      "enum": [
        "AccessKey",
        "SystemAssignedManagedIdentity",
        "UserAssignedManagedIdentity"
      ],
      "x-ms-enum": {
        "name": "AccessType",
        "modelAsString": true,
        "values": [
          {
            "name": "AccessKey",
            "value": "AccessKey",
            "description": "Use access key."
          },
          {
            "name": "SystemAssignedManagedIdentity",
            "value": "SystemAssignedManagedIdentity",
            "description": "Use system assigned managed identity."
          },
          {
            "name": "UserAssignedManagedIdentity",
            "value": "UserAssignedManagedIdentity",
            "description": "Use user assigned managed identity."
          }
        ]
      }
    },
    "AdditionalLocation": {
      "type": "object",
      "description": "Description of an additional API Management resource location.",
      "properties": {
        "location": {
          "type": "string",
          "description": "The location name of the additional region among Azure Data center regions."
        },
        "sku": {
          "$ref": "#/definitions/ApiManagementServiceSkuProperties",
          "description": "SKU properties of the API Management service."
        },
        "zones": {
          "type": "array",
          "description": "A list of availability zones denoting where the resource needs to come from.",
          "items": {
            "type": "string"
          }
        },
        "publicIPAddresses": {
          "type": "array",
          "description": "Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard, Premium and Isolated SKU.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "privateIPAddresses": {
          "type": "array",
          "description": "Private Static Load Balanced IP addresses of the API Management service which is deployed in an Internal Virtual Network in a particular additional location. Available only for Basic, Standard, Premium and Isolated SKU.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "publicIpAddressId": {
          "type": "string",
          "description": "Public Standard SKU IP V4 based IP address to be associated with Virtual Network deployed service in the location. Supported only for Premium SKU being deployed in Virtual Network."
        },
        "virtualNetworkConfiguration": {
          "$ref": "#/definitions/VirtualNetworkConfiguration",
          "description": "Virtual network configuration for the location."
        },
        "gatewayRegionalUrl": {
          "type": "string",
          "description": "Gateway URL of the API Management service in the Region.",
          "readOnly": true
        },
        "natGatewayState": {
          "type": "string",
          "description": "Property can be used to enable NAT Gateway for this API Management service.",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "NatGatewayState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Nat Gateway is enabled for the service."
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Nat Gateway is disabled for the service."
              }
            ]
          }
        },
        "outboundPublicIPAddresses": {
          "type": "array",
          "description": "Outbound public IPV4 address prefixes associated with NAT Gateway deployed service. Available only for Premium SKU on stv2 platform.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "disableGateway": {
          "type": "boolean",
          "description": "Property only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in this additional location.",
          "default": false
        },
        "platformVersion": {
          "$ref": "#/definitions/PlatformVersion",
          "description": "Compute Platform Version running the service.",
          "readOnly": true
        }
      },
      "required": [
        "location",
        "sku"
      ]
    },
    "AllPoliciesCollection": {
      "type": "object",
      "description": "The response of All Policies.",
      "properties": {
        "value": {
          "type": "array",
          "description": "AllPolicies Contract value.",
          "items": {
            "$ref": "#/definitions/AllPoliciesContract"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "AllPoliciesContract": {
      "type": "object",
      "description": "AllPolicies Contract details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AllPoliciesContractProperties",
          "description": "Properties of the All Policies.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AllPoliciesContractProperties": {
      "type": "object",
      "description": "AllPolicies Properties.",
      "properties": {
        "referencePolicyId": {
          "type": "string",
          "description": "Policy Identifier"
        },
        "complianceState": {
          "type": "string",
          "description": "Policy Restriction Compliance State",
          "default": "Pending",
          "enum": [
            "Pending",
            "NonCompliant",
            "Compliant"
          ],
          "x-ms-enum": {
            "name": "PolicyComplianceState",
            "modelAsString": true,
            "values": [
              {
                "name": "Pending",
                "value": "Pending",
                "description": "The policy restriction compliance state has not yet been determined."
              },
              {
                "name": "NonCompliant",
                "value": "NonCompliant",
                "description": "The scope in restriction is out of compliance."
              },
              {
                "name": "Compliant",
                "value": "Compliant",
                "description": "The scope in restriction is in compliance."
              }
            ]
          }
        }
      }
    },
    "AlwaysLog": {
      "type": "string",
      "description": "Specifies for what type of messages sampling settings should not apply.",
      "enum": [
        "allErrors"
      ],
      "x-ms-enum": {
        "name": "AlwaysLog",
        "modelAsString": true,
        "values": [
          {
            "name": "allErrors",
            "value": "allErrors",
            "description": "Always log all erroneous request regardless of sampling settings."
          }
        ]
      }
    },
    "ApiCollection": {
      "type": "object",
      "description": "Paged API list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/ApiContract"
          },
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      }
    },
    "ApiContactInformation": {
      "type": "object",
      "description": "API contact information",
      "properties": {
        "name": {
          "type": "string",
          "description": "The identifying name of the contact person/organization"
        },
        "url": {
          "type": "string",
          "description": "The URL pointing to the contact information. MUST be in the format of a URL"
        },
        "email": {
          "type": "string",
          "description": "The email address of the contact person/organization. MUST be in the format of an email address"
        }
      }
    },
    "ApiContract": {
      "type": "object",
      "description": "API details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApiContractProperties",
          "description": "API entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ApiContractProperties": {
      "type": "object",
      "description": "API Entity Properties",
      "properties": {
        "sourceApiId": {
          "type": "string",
          "description": "API identifier of the source API."
        },
        "displayName": {
          "type": "string",
          "description": "API name. Must be 1 to 300 characters long.",
          "minLength": 1,
          "maxLength": 300
        },
        "serviceUrl": {
          "type": "string",
          "description": "Absolute URL of the backend service implementing this API. Cannot be more than 2000 characters long.",
          "minLength": 0,
          "maxLength": 2000
        },
        "path": {
          "type": "string",
          "description": "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.",
          "minLength": 0,
          "maxLength": 400
        },
        "protocols": {
          "type": "array",
          "description": "Describes on which protocols the operations in this API can be invoked.",
          "items": {
            "$ref": "#/definitions/Protocol"
          }
        },
        "apiVersionSet": {
          "$ref": "#/definitions/ApiVersionSetContractDetails",
          "description": "Version set details"
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state",
          "readOnly": true
        }
      },
      "required": [
        "path"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ApiEntityBaseContract"
        }
      ]
    },
    "ApiContractUpdateProperties": {
      "type": "object",
      "description": "API update contract properties.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "API name.",
          "minLength": 1,
          "maxLength": 300
        },
        "serviceUrl": {
          "type": "string",
          "description": "Absolute URL of the backend service implementing this API.",
          "minLength": 1,
          "maxLength": 2000
        },
        "path": {
          "type": "string",
          "description": "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.",
          "minLength": 0,
          "maxLength": 400
        },
        "protocols": {
          "type": "array",
          "description": "Describes on which protocols the operations in this API can be invoked.",
          "items": {
            "$ref": "#/definitions/Protocol"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApiEntityBaseContract"
        }
      ]
    },
    "ApiCreateOrUpdateParameter": {
      "type": "object",
      "description": "API Create or Update Parameters.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApiCreateOrUpdateProperties",
          "description": "API entity create of update properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ApiCreateOrUpdateProperties": {
      "type": "object",
      "description": "API Create or Update Properties.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Content value when Importing an API."
        },
        "format": {
          "$ref": "#/definitions/ContentFormat",
          "description": "Format of the Content in which the API is getting imported. New formats can be added in the future"
        },
        "wsdlSelector": {
          "$ref": "#/definitions/ApiCreateOrUpdatePropertiesWsdlSelector",
          "description": "Criteria to limit import of WSDL to a subset of the document."
        },
        "apiType": {
          "$ref": "#/definitions/SoapApiType",
          "description": "Type of API to create.\n* `http` creates a REST API\n* `soap` creates a SOAP pass-through API\n* `websocket` creates websocket API\n* `graphql` creates GraphQL API.\nNew types can be added in the future.",
          "x-ms-client-name": "SoapApiType"
        },
        "translateRequiredQueryParameters": {
          "$ref": "#/definitions/TranslateRequiredQueryParametersConduct",
          "description": "Strategy of translating required query parameters to template ones. By default has value 'template'. Possible values: 'template', 'query'",
          "x-ms-client-name": "TranslateRequiredQueryParametersConduct"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApiContractProperties"
        }
      ]
    },
    "ApiCreateOrUpdatePropertiesWsdlSelector": {
      "type": "object",
      "description": "Criteria to limit import of WSDL to a subset of the document.",
      "properties": {
        "wsdlServiceName": {
          "type": "string",
          "description": "Name of service to import from WSDL"
        },
        "wsdlEndpointName": {
          "type": "string",
          "description": "Name of endpoint(port) to import from WSDL"
        }
      }
    },
    "ApiEntityBaseContract": {
      "type": "object",
      "description": "API base contract details.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the API. May include HTML formatting tags."
        },
        "authenticationSettings": {
          "$ref": "#/definitions/AuthenticationSettingsContract",
          "description": "Collection of authentication settings included into this API."
        },
        "subscriptionKeyParameterNames": {
          "$ref": "#/definitions/SubscriptionKeyParameterNamesContract",
          "description": "Protocols over which API is made available."
        },
        "type": {
          "$ref": "#/definitions/ApiType",
          "description": "Type of API.",
          "x-ms-client-name": "ApiType"
        },
        "apiRevision": {
          "type": "string",
          "description": "Describes the revision of the API. If no value is provided, default revision 1 is created",
          "minLength": 1,
          "maxLength": 100
        },
        "apiVersion": {
          "type": "string",
          "description": "Indicates the version identifier of the API if the API is versioned",
          "maxLength": 100
        },
        "isCurrent": {
          "type": "boolean",
          "description": "Indicates if API revision is current api revision."
        },
        "isOnline": {
          "type": "boolean",
          "description": "Indicates if API revision is accessible via the gateway.",
          "readOnly": true
        },
        "apiRevisionDescription": {
          "type": "string",
          "description": "Description of the API Revision.",
          "maxLength": 256
        },
        "apiVersionDescription": {
          "type": "string",
          "description": "Description of the API Version.",
          "maxLength": 256
        },
        "apiVersionSetId": {
          "type": "string",
          "description": "A resource identifier for the related ApiVersionSet."
        },
        "subscriptionRequired": {
          "type": "boolean",
          "description": "Specifies whether an API or Product subscription is required for accessing the API."
        },
        "termsOfServiceUrl": {
          "type": "string",
          "description": "A URL to the Terms of Service for the API. MUST be in the format of a URL."
        },
        "contact": {
          "$ref": "#/definitions/ApiContactInformation",
          "description": "Contact information for the API."
        },
        "license": {
          "$ref": "#/definitions/ApiLicenseInformation",
          "description": "License information for the API."
        }
      }
    },
    "ApiExportResult": {
      "type": "object",
      "description": "API Export result.",
      "properties": {
        "id": {
          "type": "string",
          "description": "ResourceId of the API which was exported."
        },
        "format": {
          "$ref": "#/definitions/ExportResultFormat",
          "description": "Format in which the API Details are exported to the Storage Blob with Sas Key valid for 5 minutes.",
          "x-ms-client-name": "ExportResultFormat"
        },
        "value": {
          "$ref": "#/definitions/ApiExportResultValue",
          "description": "The object defining the schema of the exported API Detail"
        }
      }
    },
    "ApiExportResultValue": {
      "type": "object",
      "description": "The object defining the schema of the exported API Detail",
      "properties": {
        "link": {
          "type": "string",
          "description": "Link to the Storage Blob containing the result of the export operation. The Blob Uri is only valid for 5 minutes."
        }
      }
    },
    "ApiGatewaySkuType": {
      "type": "string",
      "description": "Name of the Sku.",
      "enum": [
        "Standard",
        "WorkspaceGatewayStandard",
        "WorkspaceGatewayPremium"
      ],
      "x-ms-enum": {
        "name": "ApiGatewaySkuType",
        "modelAsString": true,
        "values": [
          {
            "name": "Standard",
            "value": "Standard",
            "description": "Standard SKU of the API gateway."
          },
          {
            "name": "WorkspaceGatewayStandard",
            "value": "WorkspaceGatewayStandard",
            "description": "Standard SKU of the API gateway to be used in Workspaces."
          },
          {
            "name": "WorkspaceGatewayPremium",
            "value": "WorkspaceGatewayPremium",
            "description": "Premium SKU of the API gateway to be used in Workspaces."
          }
        ]
      }
    },
    "ApiLicenseInformation": {
      "type": "object",
      "description": "API license information",
      "properties": {
        "name": {
          "type": "string",
          "description": "The license name used for the API"
        },
        "url": {
          "type": "string",
          "description": "A URL to the license used for the API. MUST be in the format of a URL"
        }
      }
    },
    "ApiManagementGatewayBaseProperties": {
      "type": "object",
      "description": "Base Properties of an API Management gateway resource description.",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The current provisioning state of the API Management gateway which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.",
          "readOnly": true
        },
        "targetProvisioningState": {
          "type": "string",
          "description": "The provisioning state of the API Management gateway, which is targeted by the long running operation started on the gateway.",
          "readOnly": true
        },
        "createdAtUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Creation UTC date of the API Management gateway.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.",
          "readOnly": true
        },
        "frontend": {
          "$ref": "#/definitions/FrontendConfiguration",
          "description": "Information regarding how the gateway should be exposed."
        },
        "backend": {
          "$ref": "#/definitions/BackendConfiguration",
          "description": "Information regarding how the gateway should integrate with backend systems."
        },
        "configurationApi": {
          "$ref": "#/definitions/GatewayConfigurationApi",
          "description": "Information regarding the Configuration API of the API Management gateway. This is only applicable for API gateway with Standard SKU."
        },
        "virtualNetworkType": {
          "$ref": "#/definitions/VirtualNetworkType",
          "description": "The type of VPN in which API Management gateway needs to be configured in."
        }
      }
    },
    "ApiManagementGatewayConfigConnectionListResult": {
      "type": "object",
      "description": "The response of the List API Management gateway operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Result of the List API Management gateway config connection operation.",
          "items": {
            "$ref": "#/definitions/ApiManagementGatewayConfigConnectionResource"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of API Management services."
        }
      },
      "required": [
        "value"
      ]
    },
    "ApiManagementGatewayConfigConnectionResource": {
      "type": "object",
      "description": "A single API Management gateway resource in List or Get response.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GatewayConfigConnectionBaseProperties",
          "description": "Properties of the API Management gateway config connection.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "$ref": "#/definitions/Azure.Core.eTag",
          "description": "ETag of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ApiManagementGatewayListResult": {
      "type": "object",
      "description": "The response of the List API Management gateway operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Result of the List API Management gateway operation.",
          "items": {
            "$ref": "#/definitions/ApiManagementGatewayResource"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of API Management services."
        }
      },
      "required": [
        "value"
      ]
    },
    "ApiManagementGatewayProperties": {
      "type": "object",
      "description": "Properties of an API Management gateway resource description.",
      "allOf": [
        {
          "$ref": "#/definitions/ApiManagementGatewayBaseProperties"
        }
      ]
    },
    "ApiManagementGatewayResource": {
      "type": "object",
      "description": "A single API Management gateway resource in List or Get response.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApiManagementGatewayProperties",
          "description": "Properties of the API Management gateway.",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/ApiManagementGatewaySkuProperties",
          "description": "SKU properties of the API Management gateway."
        },
        "etag": {
          "$ref": "#/definitions/Azure.Core.eTag",
          "description": "ETag of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "properties",
        "sku"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ApiManagementGatewaySkuProperties": {
      "type": "object",
      "description": "API Management gateway resource SKU properties.",
      "properties": {
        "name": {
          "$ref": "#/definitions/ApiGatewaySkuType",
          "description": "Name of the Sku."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Capacity of the SKU (number of deployed units of the SKU)"
        }
      },
      "required": [
        "name"
      ]
    },
    "ApiManagementGatewaySkuPropertiesForPatch": {
      "type": "object",
      "description": "API Management gateway resource SKU properties for PATCH operations given nothing should be required.",
      "properties": {
        "name": {
          "$ref": "#/definitions/ApiGatewaySkuType",
          "description": "Name of the Sku."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Capacity of the SKU (number of deployed units of the SKU)"
        }
      }
    },
    "ApiManagementGatewayUpdateParameters": {
      "type": "object",
      "description": "Parameter supplied to Update API Management gateway.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApiManagementGatewayUpdateProperties",
          "description": "Properties of the API Management gateway.",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/ApiManagementGatewaySkuPropertiesForPatch",
          "description": "SKU properties of the API Management gateway."
        },
        "etag": {
          "type": "string",
          "description": "ETag of the resource.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApimResource"
        }
      ]
    },
    "ApiManagementGatewayUpdateProperties": {
      "type": "object",
      "description": "Properties of an API Management gateway resource description.",
      "allOf": [
        {
          "$ref": "#/definitions/ApiManagementGatewayBaseProperties"
        }
      ]
    },
    "ApiManagementServiceApplyNetworkConfigurationParameters": {
      "type": "object",
      "description": "Parameter supplied to the Apply Network configuration operation.",
      "properties": {
        "location": {
          "type": "string",
          "description": "Location of the Api Management service to update for a multi-region service. For a service deployed in a single region, this parameter is not required."
        }
      }
    },
    "ApiManagementServiceBackupRestoreParameters": {
      "type": "object",
      "description": "Parameters supplied to the Backup/Restore of an API Management service operation.",
      "properties": {
        "storageAccount": {
          "type": "string",
          "description": "The name of the Azure storage account (used to place/retrieve the backup)."
        },
        "containerName": {
          "type": "string",
          "description": "The name of the blob container (used to place/retrieve the backup)."
        },
        "backupName": {
          "type": "string",
          "description": "The name of the backup file to create/retrieve."
        },
        "accessType": {
          "type": "string",
          "description": "The type of access to be used for the storage account.",
          "default": "AccessKey",
          "enum": [
            "AccessKey",
            "SystemAssignedManagedIdentity",
            "UserAssignedManagedIdentity"
          ],
          "x-ms-enum": {
            "name": "AccessType",
            "modelAsString": true,
            "values": [
              {
                "name": "AccessKey",
                "value": "AccessKey",
                "description": "Use access key."
              },
              {
                "name": "SystemAssignedManagedIdentity",
                "value": "SystemAssignedManagedIdentity",
                "description": "Use system assigned managed identity."
              },
              {
                "name": "UserAssignedManagedIdentity",
                "value": "UserAssignedManagedIdentity",
                "description": "Use user assigned managed identity."
              }
            ]
          }
        },
        "accessKey": {
          "type": "string",
          "description": "Storage account access key. Required only if `accessType` is set to `AccessKey`."
        },
        "clientId": {
          "type": "string",
          "description": "The Client ID of user assigned managed identity. Required only if `accessType` is set to `UserAssignedManagedIdentity`."
        }
      },
      "required": [
        "storageAccount",
        "containerName",
        "backupName"
      ]
    },
    "ApiManagementServiceBaseProperties": {
      "type": "object",
      "description": "Base Properties of an API Management service resource description.",
      "properties": {
        "notificationSenderEmail": {
          "type": "string",
          "description": "Email address from which the notification will be sent.",
          "maxLength": 100
        },
        "provisioningState": {
          "type": "string",
          "description": "The current provisioning state of the API Management service which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.",
          "readOnly": true
        },
        "targetProvisioningState": {
          "type": "string",
          "description": "The provisioning state of the API Management service, which is targeted by the long running operation started on the service.",
          "readOnly": true
        },
        "createdAtUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Creation UTC date of the API Management service.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.",
          "readOnly": true
        },
        "gatewayUrl": {
          "type": "string",
          "description": "Gateway URL of the API Management service.",
          "readOnly": true
        },
        "gatewayRegionalUrl": {
          "type": "string",
          "description": "Gateway URL of the API Management service in the Default Region.",
          "readOnly": true
        },
        "portalUrl": {
          "type": "string",
          "description": "Publisher portal endpoint Url of the API Management service.",
          "readOnly": true
        },
        "managementApiUrl": {
          "type": "string",
          "description": "Management API endpoint URL of the API Management service.",
          "readOnly": true
        },
        "scmUrl": {
          "type": "string",
          "description": "SCM endpoint URL of the API Management service.",
          "readOnly": true
        },
        "developerPortalUrl": {
          "type": "string",
          "description": "DEveloper Portal endpoint URL of the API Management service.",
          "readOnly": true
        },
        "hostnameConfigurations": {
          "type": "array",
          "description": "Custom hostname configuration of the API Management service.",
          "items": {
            "$ref": "#/definitions/HostnameConfiguration"
          },
          "x-ms-identifiers": [
            "hostName",
            "type"
          ]
        },
        "publicIPAddresses": {
          "type": "array",
          "description": "Public Static Load Balanced IP addresses of the API Management service in Primary region. Available only for Basic, Standard, Premium and Isolated SKU.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "privateIPAddresses": {
          "type": "array",
          "description": "Private Static Load Balanced IP addresses of the API Management service in Primary region which is deployed in an Internal Virtual Network. Available only for Basic, Standard, Premium and Isolated SKU.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "publicIpAddressId": {
          "type": "string",
          "description": "Public Standard SKU IP V4 based IP address to be associated with Virtual Network deployed service in the region. Supported only for Developer and Premium SKU being deployed in Virtual Network."
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Whether or not public endpoint access is allowed for this API Management service.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled'"
        },
        "configurationApi": {
          "$ref": "#/definitions/ConfigurationApi",
          "description": "Configuration API configuration of the API Management service."
        },
        "virtualNetworkConfiguration": {
          "$ref": "#/definitions/VirtualNetworkConfiguration",
          "description": "Virtual network configuration of the API Management service."
        },
        "additionalLocations": {
          "type": "array",
          "description": "Additional datacenter locations of the API Management service.",
          "items": {
            "$ref": "#/definitions/AdditionalLocation"
          },
          "x-ms-identifiers": [
            "location",
            "sku"
          ]
        },
        "customProperties": {
          "type": "object",
          "description": "Custom properties of the API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` will disable the cipher TLS_RSA_WITH_3DES_EDE_CBC_SHA for all TLS(1.0, 1.1 and 1.2).</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` can be used to disable just TLS 1.1.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` can be used to disable TLS 1.0 on an API Management service.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11` can be used to disable just TLS 1.1 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10` can be used to disable TLS 1.0 for communications with backends.</br>Setting `Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2` can be used to enable HTTP2 protocol on an API Management service.</br>Not specifying any of these properties on PATCH operation will reset omitted properties' values to their defaults. For all the settings except Http2 the default value is `True` if the service was created on or before April 1, 2018 and `False` otherwise. Http2 setting's default value is `False`.</br></br>You can disable any of the following ciphers by using settings `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.[cipher_name]`: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA256, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_CBC_SHA. For example, `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256`:`false`. The default value is `true` for them.</br> Note: The following ciphers can't be disabled since they are required by internal platform components: TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
          "additionalProperties": {
            "type": "string"
          }
        },
        "certificates": {
          "type": "array",
          "description": "List of Certificates that need to be installed in the API Management service. Max supported certificates that can be installed is 10.",
          "items": {
            "$ref": "#/definitions/CertificateConfiguration"
          },
          "x-ms-identifiers": [
            "certificate/thumbprint"
          ]
        },
        "enableClientCertificate": {
          "type": "boolean",
          "description": "Property only meant to be used for Consumption SKU Service. This enforces a client certificate to be presented on each request to the gateway. This also enables the ability to authenticate the certificate in the policy on the gateway.",
          "default": false
        },
        "natGatewayState": {
          "type": "string",
          "description": "Property can be used to enable NAT Gateway for this API Management service.",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "NatGatewayState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Nat Gateway is enabled for the service."
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Nat Gateway is disabled for the service."
              }
            ]
          }
        },
        "outboundPublicIPAddresses": {
          "type": "array",
          "description": "Outbound public IPV4 address prefixes associated with NAT Gateway deployed service. Available only for Premium SKU on stv2 platform.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "disableGateway": {
          "type": "boolean",
          "description": "Property only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in master region.",
          "default": false
        },
        "virtualNetworkType": {
          "type": "string",
          "description": "The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.",
          "default": "None",
          "enum": [
            "None",
            "External",
            "Internal"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkType",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "The API Management gateway is not part of any Virtual Network."
              },
              {
                "name": "External",
                "value": "External",
                "description": "The API Management gateway is part of Virtual Network and it is accessible from Internet."
              },
              {
                "name": "Internal",
                "value": "Internal",
                "description": "The API Management gateway is part of Virtual Network and it is only accessible from within the virtual network."
              }
            ]
          }
        },
        "apiVersionConstraint": {
          "$ref": "#/definitions/ApiVersionConstraint",
          "description": "Control Plane Apis version constraint for the API Management service."
        },
        "restore": {
          "type": "boolean",
          "description": "Undelete Api Management Service if it was previously soft-deleted. If this flag is specified and set to True all other properties will be ignored.",
          "default": false
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "List of Private Endpoint Connections of this service.",
          "items": {
            "$ref": "#/definitions/RemotePrivateEndpointConnectionWrapper"
          }
        },
        "platformVersion": {
          "$ref": "#/definitions/PlatformVersion",
          "description": "Compute Platform Version running the service in this location.",
          "readOnly": true
        },
        "legacyPortalStatus": {
          "type": "string",
          "description": "Status of legacy portal in the API Management service.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "LegacyPortalStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Legacy Portal is enabled for the service."
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Legacy Portal is disabled for the service."
              }
            ]
          }
        },
        "developerPortalStatus": {
          "type": "string",
          "description": "Status of developer portal in this API Management service.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "DeveloperPortalStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Developer Portal is enabled for the service."
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Developer Portal is disabled for the service."
              }
            ]
          }
        },
        "releaseChannel": {
          "$ref": "#/definitions/ReleaseChannel",
          "description": "Release Channel of this API Management service."
        }
      }
    },
    "ApiManagementServiceCheckNameAvailabilityParameters": {
      "type": "object",
      "description": "Parameters supplied to the CheckNameAvailability operation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name to check for availability."
        }
      },
      "required": [
        "name"
      ]
    },
    "ApiManagementServiceGetDomainOwnershipIdentifierResult": {
      "type": "object",
      "description": "Response of the GetDomainOwnershipIdentifier operation.",
      "properties": {
        "domainOwnershipIdentifier": {
          "type": "string",
          "description": "The domain ownership identifier value.",
          "readOnly": true
        }
      }
    },
    "ApiManagementServiceGetSsoTokenResult": {
      "type": "object",
      "description": "The response of the GetSsoToken operation.",
      "properties": {
        "redirectUri": {
          "type": "string",
          "description": "Redirect URL to the Publisher Portal containing the SSO token."
        }
      }
    },
    "ApiManagementServiceIdentity": {
      "type": "object",
      "description": "Identity properties of the Api Management service resource.",
      "properties": {
        "type": {
          "$ref": "#/definitions/ApimIdentityType",
          "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service."
        },
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal id of the identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The client tenant id of the identity.",
          "readOnly": true
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "The list of user identities associated with the resource. The user identity\ndictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/\nproviders/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
          "additionalProperties": {
            "$ref": "#/definitions/UserIdentityProperties"
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "ApiManagementServiceListResult": {
      "type": "object",
      "description": "The response of the List API Management services operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Result of the List API Management services operation.",
          "items": {
            "$ref": "#/definitions/ApiManagementServiceResource"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of API Management services."
        }
      },
      "required": [
        "value"
      ]
    },
    "ApiManagementServiceNameAvailabilityResult": {
      "type": "object",
      "description": "Response of the CheckNameAvailability operation.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "True if the name is available and can be used to create a new API Management service; otherwise false.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name. If reason == AlreadyExists, explain that <resourceName> is already in use, and direct them to select a different name.",
          "readOnly": true
        },
        "reason": {
          "$ref": "#/definitions/NameAvailabilityReason",
          "description": "Invalid indicates the name provided does not match the resource provider’s naming requirements (incorrect length, unsupported characters, etc.)  AlreadyExists indicates that the name is already in use and is therefore unavailable."
        }
      }
    },
    "ApiManagementServiceProperties": {
      "type": "object",
      "description": "Properties of an API Management service resource description.",
      "properties": {
        "publisherEmail": {
          "type": "string",
          "description": "Publisher email.",
          "maxLength": 100
        },
        "publisherName": {
          "type": "string",
          "description": "Publisher name.",
          "maxLength": 100
        }
      },
      "required": [
        "publisherEmail",
        "publisherName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ApiManagementServiceBaseProperties"
        }
      ]
    },
    "ApiManagementServiceResource": {
      "type": "object",
      "description": "A single API Management service resource in List or Get response.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApiManagementServiceProperties",
          "description": "Properties of the API Management service.",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/ApiManagementServiceSkuProperties",
          "description": "SKU properties of the API Management service."
        },
        "identity": {
          "$ref": "#/definitions/ApiManagementServiceIdentity",
          "description": "Managed service identity of the Api Management service."
        },
        "etag": {
          "$ref": "#/definitions/Azure.Core.eTag",
          "description": "ETag of the resource.",
          "readOnly": true
        },
        "zones": {
          "type": "array",
          "description": "The availability zones.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "properties",
        "sku"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ApiManagementServiceSkuProperties": {
      "type": "object",
      "description": "API Management service resource SKU properties.",
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuType",
          "description": "Name of the Sku."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Capacity of the SKU (number of deployed units of the SKU). For Consumption SKU capacity must be specified as 0."
        }
      },
      "required": [
        "name",
        "capacity"
      ]
    },
    "ApiManagementServiceUpdateParameters": {
      "type": "object",
      "description": "Parameter supplied to Update Api Management Service.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApiManagementServiceUpdateProperties",
          "description": "Properties of the API Management service.",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/ApiManagementServiceSkuProperties",
          "description": "SKU properties of the API Management service."
        },
        "identity": {
          "$ref": "#/definitions/ApiManagementServiceIdentity",
          "description": "Managed service identity of the Api Management service."
        },
        "etag": {
          "type": "string",
          "description": "ETag of the resource.",
          "readOnly": true
        },
        "zones": {
          "type": "array",
          "description": "A list of availability zones denoting where the resource needs to come from.",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApimResource"
        }
      ]
    },
    "ApiManagementServiceUpdateProperties": {
      "type": "object",
      "description": "Properties of an API Management service resource description.",
      "properties": {
        "publisherEmail": {
          "type": "string",
          "description": "Publisher email.",
          "maxLength": 100
        },
        "publisherName": {
          "type": "string",
          "description": "Publisher name.",
          "maxLength": 100
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApiManagementServiceBaseProperties"
        }
      ]
    },
    "ApiManagementSku": {
      "type": "object",
      "description": "Describes an available ApiManagement SKU.",
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "The type of resource the SKU applies to.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of SKU.",
          "readOnly": true
        },
        "tier": {
          "type": "string",
          "description": "Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**",
          "readOnly": true
        },
        "size": {
          "type": "string",
          "description": "The Size of the SKU.",
          "readOnly": true
        },
        "family": {
          "type": "string",
          "description": "The Family of this particular SKU.",
          "readOnly": true
        },
        "kind": {
          "type": "string",
          "description": "The Kind of resources that are supported in this SKU.",
          "readOnly": true
        },
        "capacity": {
          "$ref": "#/definitions/ApiManagementSkuCapacity",
          "description": "Specifies the number of virtual machines in the scale set.",
          "readOnly": true
        },
        "locations": {
          "type": "array",
          "description": "The set of locations that the SKU is available.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "locationInfo": {
          "type": "array",
          "description": "A list of locations and availability zones in those locations where the SKU is available.",
          "items": {
            "$ref": "#/definitions/ApiManagementSkuLocationInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "location"
          ]
        },
        "apiVersions": {
          "type": "array",
          "description": "The api versions that support this SKU.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "costs": {
          "type": "array",
          "description": "Metadata for retrieving price info.",
          "items": {
            "$ref": "#/definitions/ApiManagementSkuCosts"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "meterID"
          ]
        },
        "capabilities": {
          "type": "array",
          "description": "A name value pair to describe the capability.",
          "items": {
            "$ref": "#/definitions/ApiManagementSkuCapabilities"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "restrictions": {
          "type": "array",
          "description": "The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.",
          "items": {
            "$ref": "#/definitions/ApiManagementSkuRestrictions"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ApiManagementSkuCapabilities": {
      "type": "object",
      "description": "Describes The SKU capabilities object.",
      "properties": {
        "name": {
          "type": "string",
          "description": "An invariant to describe the feature.",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "description": "An invariant if the feature is measured by quantity.",
          "readOnly": true
        }
      }
    },
    "ApiManagementSkuCapacity": {
      "type": "object",
      "description": "Describes scaling information of a SKU.",
      "properties": {
        "minimum": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum capacity.",
          "readOnly": true
        },
        "maximum": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum capacity that can be set.",
          "readOnly": true
        },
        "default": {
          "type": "integer",
          "format": "int32",
          "description": "The default capacity.",
          "readOnly": true
        },
        "scaleType": {
          "$ref": "#/definitions/ApiManagementSkuCapacityScaleType",
          "description": "The scale type applicable to the sku.",
          "readOnly": true
        }
      }
    },
    "ApiManagementSkuCapacityScaleType": {
      "type": "string",
      "description": "The scale type applicable to the sku.",
      "enum": [
        "Automatic",
        "Manual",
        "None"
      ],
      "x-ms-enum": {
        "name": "ApiManagementSkuCapacityScaleType",
        "modelAsString": false
      }
    },
    "ApiManagementSkuCosts": {
      "type": "object",
      "description": "Describes metadata for retrieving price info.",
      "properties": {
        "meterID": {
          "type": "string",
          "description": "Used for querying price from commerce.",
          "readOnly": true
        },
        "quantity": {
          "type": "integer",
          "format": "int64",
          "description": "The multiplier is needed to extend the base metered cost.",
          "readOnly": true
        },
        "extendedUnit": {
          "type": "string",
          "description": "An invariant to show the extended unit.",
          "readOnly": true
        }
      }
    },
    "ApiManagementSkuLocationInfo": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Location of the SKU",
          "readOnly": true
        },
        "zones": {
          "type": "array",
          "description": "List of availability zones where the SKU is supported.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "zoneDetails": {
          "type": "array",
          "description": "Details of capabilities available to a SKU in specific zones.",
          "items": {
            "$ref": "#/definitions/ApiManagementSkuZoneDetails"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "ApiManagementSkuRestrictionInfo": {
      "type": "object",
      "properties": {
        "locations": {
          "type": "array",
          "description": "Locations where the SKU is restricted",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "zones": {
          "type": "array",
          "description": "List of availability zones where the SKU is restricted.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "ApiManagementSkuRestrictions": {
      "type": "object",
      "description": "Describes scaling information of a SKU.",
      "properties": {
        "type": {
          "$ref": "#/definitions/ApiManagementSkuRestrictionsType",
          "description": "The type of restrictions.",
          "readOnly": true
        },
        "values": {
          "type": "array",
          "description": "The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "restrictionInfo": {
          "$ref": "#/definitions/ApiManagementSkuRestrictionInfo",
          "description": "The information about the restriction where the SKU cannot be used.",
          "readOnly": true
        },
        "reasonCode": {
          "$ref": "#/definitions/ApiManagementSkuRestrictionsReasonCode",
          "description": "The reason for restriction.",
          "readOnly": true
        }
      }
    },
    "ApiManagementSkuRestrictionsReasonCode": {
      "type": "string",
      "description": "The reason for restriction.",
      "enum": [
        "QuotaId",
        "NotAvailableForSubscription"
      ],
      "x-ms-enum": {
        "name": "ApiManagementSkuRestrictionsReasonCode",
        "modelAsString": false
      }
    },
    "ApiManagementSkuRestrictionsType": {
      "type": "string",
      "description": "The type of restrictions.",
      "enum": [
        "Location",
        "Zone"
      ],
      "x-ms-enum": {
        "name": "ApiManagementSkuRestrictionsType",
        "modelAsString": false
      }
    },
    "ApiManagementSkuZoneDetails": {
      "type": "object",
      "description": "Describes The zonal capabilities of a SKU.",
      "properties": {
        "name": {
          "type": "array",
          "description": "The set of zones that the SKU is available in with the specified capabilities.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "capabilities": {
          "type": "array",
          "description": "A list of capabilities that are available for the SKU in the specified list of zones.",
          "items": {
            "$ref": "#/definitions/ApiManagementSkuCapabilities"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "ApiManagementSkusResult": {
      "type": "object",
      "description": "The List Resource Skus operation response.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of skus available for the subscription.",
          "items": {
            "$ref": "#/definitions/ApiManagementSku"
          },
          "x-ms-identifiers": [
            "name",
            "resourceType"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of Resource Skus. Call ListNext() with this URI to fetch the next page of Resource Skus",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "ApiManagementWorkspaceLinksListResult": {
      "type": "object",
      "description": "The response of the List API Management WorkspaceLink operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Result of the List API Management WorkspaceLinks operation.",
          "items": {
            "$ref": "#/definitions/ApiManagementWorkspaceLinksResource"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of API Management services."
        }
      },
      "required": [
        "value"
      ]
    },
    "ApiManagementWorkspaceLinksProperties": {
      "type": "object",
      "description": "Properties of an API Management workspaceLinks resource.",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceLinksBaseProperties"
        }
      ]
    },
    "ApiManagementWorkspaceLinksResource": {
      "type": "object",
      "description": "A single API Management WorkspaceLinks in List or Get response.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApiManagementWorkspaceLinksProperties",
          "description": "Properties of the API Management WorkspaceLinks.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "$ref": "#/definitions/Azure.Core.eTag",
          "description": "ETag of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ApiReleaseCollection": {
      "type": "object",
      "description": "Paged ApiRelease list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/ApiReleaseContract"
          },
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      }
    },
    "ApiReleaseContract": {
      "type": "object",
      "description": "ApiRelease details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApiReleaseContractProperties",
          "description": "ApiRelease entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ApiReleaseContractProperties": {
      "type": "object",
      "description": "API Release details",
      "properties": {
        "apiId": {
          "type": "string",
          "description": "Identifier of the API the release belongs to."
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the API was released. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.",
          "readOnly": true
        },
        "updatedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the API release was updated.",
          "readOnly": true
        },
        "notes": {
          "type": "string",
          "description": "Release Notes"
        }
      }
    },
    "ApiRevisionCollection": {
      "type": "object",
      "description": "Paged API Revision list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/ApiRevisionContract"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "apiId"
          ]
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      }
    },
    "ApiRevisionContract": {
      "type": "object",
      "description": "Summary of revision metadata.",
      "properties": {
        "apiId": {
          "type": "string",
          "description": "Identifier of the API Revision.",
          "readOnly": true
        },
        "apiRevision": {
          "type": "string",
          "description": "Revision number of API.",
          "minLength": 1,
          "maxLength": 100,
          "readOnly": true
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the API Revision was created. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.",
          "readOnly": true
        },
        "updatedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the API Revision were updated. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of the API Revision.",
          "maxLength": 256,
          "readOnly": true
        },
        "privateUrl": {
          "type": "string",
          "description": "Gateway URL for accessing the non-current API Revision.",
          "readOnly": true
        },
        "isOnline": {
          "type": "boolean",
          "description": "Indicates if API revision is the current api revision.",
          "readOnly": true
        },
        "isCurrent": {
          "type": "boolean",
          "description": "Indicates if API revision is accessible via the gateway.",
          "readOnly": true
        }
      }
    },
    "ApiRevisionInfoContract": {
      "type": "object",
      "description": "Object used to create an API Revision or Version based on an existing API Revision",
      "properties": {
        "sourceApiId": {
          "type": "string",
          "description": "Resource identifier of API to be used to create the revision from."
        },
        "apiVersionName": {
          "type": "string",
          "description": "Version identifier for the new API Version.",
          "maxLength": 100
        },
        "apiRevisionDescription": {
          "type": "string",
          "description": "Description of new API Revision.",
          "maxLength": 256
        },
        "apiVersionSet": {
          "$ref": "#/definitions/ApiVersionSetContractDetails",
          "description": "Version set details"
        }
      }
    },
    "ApiTagResourceContractProperties": {
      "type": "object",
      "description": "API contract properties for the Tag Resources.",
      "properties": {
        "id": {
          "type": "string",
          "description": "API identifier in the form /apis/{apiId}."
        },
        "name": {
          "type": "string",
          "description": "API name.",
          "minLength": 1,
          "maxLength": 300
        },
        "serviceUrl": {
          "type": "string",
          "description": "Absolute URL of the backend service implementing this API.",
          "minLength": 1,
          "maxLength": 2000
        },
        "path": {
          "type": "string",
          "description": "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.",
          "minLength": 0,
          "maxLength": 400
        },
        "protocols": {
          "type": "array",
          "description": "Describes on which protocols the operations in this API can be invoked.",
          "items": {
            "$ref": "#/definitions/Protocol"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApiEntityBaseContract"
        }
      ]
    },
    "ApiType": {
      "type": "string",
      "description": "Type of API.",
      "enum": [
        "http",
        "soap",
        "websocket",
        "graphql",
        "odata",
        "grpc"
      ],
      "x-ms-enum": {
        "name": "ApiType",
        "modelAsString": true,
        "values": [
          {
            "name": "http",
            "value": "http"
          },
          {
            "name": "soap",
            "value": "soap"
          },
          {
            "name": "websocket",
            "value": "websocket"
          },
          {
            "name": "graphql",
            "value": "graphql"
          },
          {
            "name": "odata",
            "value": "odata"
          },
          {
            "name": "grpc",
            "value": "grpc"
          }
        ]
      }
    },
    "ApiUpdateContract": {
      "type": "object",
      "description": "API update contract details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApiContractUpdateProperties",
          "description": "Properties of the API entity that can be updated.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ApiVersionConstraint": {
      "type": "object",
      "description": "Control Plane Apis version constraint for the API Management service.",
      "properties": {
        "minApiVersion": {
          "type": "string",
          "description": "Limit control plane API calls to API Management service with version equal to or newer than this value."
        }
      }
    },
    "ApiVersionSetCollection": {
      "type": "object",
      "description": "Paged API Version Set list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/ApiVersionSetContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "ApiVersionSetContract": {
      "type": "object",
      "description": "API Version Set Contract details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApiVersionSetContractProperties",
          "description": "API VersionSet contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ApiVersionSetContractDetails": {
      "type": "object",
      "description": "An API Version Set contains the common configuration for a set of API Versions relating",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier for existing API Version Set. Omit this value to create a new Version Set."
        },
        "name": {
          "type": "string",
          "description": "The display Name of the API Version Set."
        },
        "description": {
          "type": "string",
          "description": "Description of API Version Set."
        },
        "versioningScheme": {
          "$ref": "#/definitions/VersioningScheme",
          "description": "An value that determines where the API Version identifier will be located in a HTTP request."
        },
        "versionQueryName": {
          "type": "string",
          "description": "Name of query parameter that indicates the API Version if versioningScheme is set to `query`."
        },
        "versionHeaderName": {
          "type": "string",
          "description": "Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`."
        }
      }
    },
    "ApiVersionSetContractProperties": {
      "type": "object",
      "description": "Properties of an API Version Set.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Name of API Version Set",
          "minLength": 1,
          "maxLength": 100
        },
        "versioningScheme": {
          "$ref": "#/definitions/VersioningScheme",
          "description": "An value that determines where the API Version identifier will be located in a HTTP request."
        }
      },
      "required": [
        "displayName",
        "versioningScheme"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ApiVersionSetEntityBase"
        }
      ]
    },
    "ApiVersionSetEntityBase": {
      "type": "object",
      "description": "API Version set base parameters",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of API Version Set."
        },
        "versionQueryName": {
          "type": "string",
          "description": "Name of query parameter that indicates the API Version if versioningScheme is set to `query`.",
          "minLength": 1,
          "maxLength": 100
        },
        "versionHeaderName": {
          "type": "string",
          "description": "Name of HTTP header parameter that indicates the API Version if versioningScheme is set to `header`.",
          "minLength": 1,
          "maxLength": 100
        }
      }
    },
    "ApiVersionSetUpdateParameters": {
      "type": "object",
      "description": "Parameters to update or create an API Version Set Contract.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApiVersionSetUpdateParametersProperties",
          "description": "Parameters to update or create an API Version Set Contract.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ApiVersionSetUpdateParametersProperties": {
      "type": "object",
      "description": "Properties used to create or update an API Version Set.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Name of API Version Set",
          "minLength": 1,
          "maxLength": 100
        },
        "versioningScheme": {
          "$ref": "#/definitions/VersioningScheme",
          "description": "An value that determines where the API Version identifier will be located in a HTTP request."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApiVersionSetEntityBase"
        }
      ]
    },
    "ApimIdentityType": {
      "type": "string",
      "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
      "enum": [
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned, UserAssigned",
        "None"
      ],
      "x-ms-enum": {
        "name": "ApimIdentityType",
        "modelAsString": true,
        "values": [
          {
            "name": "SystemAssigned",
            "value": "SystemAssigned"
          },
          {
            "name": "UserAssigned",
            "value": "UserAssigned"
          },
          {
            "name": "SystemAssigned, UserAssigned",
            "value": "SystemAssigned, UserAssigned"
          },
          {
            "name": "None",
            "value": "None"
          }
        ]
      }
    },
    "ApimResource": {
      "type": "object",
      "description": "The Resource definition.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type for API Management resource is set to Microsoft.ApiManagement.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "AppType": {
      "type": "string",
      "enum": [
        "portal",
        "developerPortal"
      ],
      "x-ms-enum": {
        "name": "AppType",
        "modelAsString": true,
        "values": [
          {
            "name": "portal",
            "value": "portal",
            "description": "User create request was sent by legacy developer portal."
          },
          {
            "name": "developerPortal",
            "value": "developerPortal",
            "description": "User create request was sent by new developer portal."
          }
        ]
      }
    },
    "ArmIdWrapper": {
      "type": "object",
      "description": "A wrapper for an ARM resource id",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AssociationContract": {
      "type": "object",
      "description": "Association entity details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AssociationContractProperties",
          "description": "Association entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AssociationContractProperties": {
      "type": "object",
      "description": "Association entity contract properties.",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state.",
          "enum": [
            "created"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      }
    },
    "AsyncOperationStatus": {
      "type": "string",
      "description": "Status of an async operation.",
      "enum": [
        "Started",
        "InProgress",
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "AsyncOperationStatus",
        "modelAsString": false
      }
    },
    "AsyncResolverStatus": {
      "type": "string",
      "description": "Status of an async resolver.",
      "enum": [
        "Started",
        "InProgress",
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "AsyncResolverStatus",
        "modelAsString": false
      }
    },
    "AuthenticationSettingsContract": {
      "type": "object",
      "description": "API Authentication Settings.",
      "properties": {
        "oAuth2": {
          "$ref": "#/definitions/OAuth2AuthenticationSettingsContract",
          "description": "OAuth2 Authentication settings"
        },
        "openid": {
          "$ref": "#/definitions/OpenIdAuthenticationSettingsContract",
          "description": "OpenID Connect Authentication Settings"
        },
        "oAuth2AuthenticationSettings": {
          "type": "array",
          "description": "Collection of OAuth2 authentication settings included into this API.",
          "items": {
            "$ref": "#/definitions/OAuth2AuthenticationSettingsContract"
          },
          "x-ms-identifiers": [
            "authorizationServerId"
          ]
        },
        "openidAuthenticationSettings": {
          "type": "array",
          "description": "Collection of Open ID Connect authentication settings included into this API.",
          "items": {
            "$ref": "#/definitions/OpenIdAuthenticationSettingsContract"
          },
          "x-ms-identifiers": [
            "openidProviderId"
          ]
        }
      }
    },
    "AuthorizationAccessPolicyCollection": {
      "type": "object",
      "description": "Paged Authorization Access Policy list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/AuthorizationAccessPolicyContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Paged Authorization Access Policy list representation."
        }
      }
    },
    "AuthorizationAccessPolicyContract": {
      "type": "object",
      "description": "Authorization access policy contract.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AuthorizationAccessPolicyContractProperties",
          "description": "Properties of the Authorization Contract.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AuthorizationAccessPolicyContractProperties": {
      "type": "object",
      "description": "Authorization Access Policy details.",
      "properties": {
        "appIds": {
          "type": "array",
          "description": "The allowed Azure Active Directory Application IDs",
          "items": {
            "type": "string"
          }
        },
        "tenantId": {
          "type": "string",
          "description": "The Tenant Id"
        },
        "objectId": {
          "type": "string",
          "description": "The Object Id"
        }
      }
    },
    "AuthorizationCollection": {
      "type": "object",
      "description": "Paged Authorization list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/AuthorizationContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "AuthorizationConfirmConsentCodeRequestContract": {
      "type": "object",
      "description": "Authorization confirm consent code request contract.",
      "properties": {
        "consentCode": {
          "type": "string",
          "description": "The consent code from the authorization server after authorizing and consenting."
        }
      }
    },
    "AuthorizationContract": {
      "type": "object",
      "description": "Authorization contract.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AuthorizationContractProperties",
          "description": "Properties of the Authorization Contract.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AuthorizationContractProperties": {
      "type": "object",
      "description": "Authorization details.",
      "properties": {
        "authorizationType": {
          "$ref": "#/definitions/AuthorizationType",
          "description": "Authorization type options",
          "x-ms-client-name": "AuthorizationType"
        },
        "oauth2grantType": {
          "$ref": "#/definitions/OAuth2GrantType",
          "description": "OAuth2 grant type options",
          "x-ms-client-name": "OAuth2GrantType"
        },
        "parameters": {
          "type": "object",
          "description": "Authorization parameters",
          "additionalProperties": {
            "type": "string"
          }
        },
        "error": {
          "$ref": "#/definitions/AuthorizationError",
          "description": "Authorization error details."
        },
        "status": {
          "type": "string",
          "description": "Status of the Authorization"
        }
      }
    },
    "AuthorizationError": {
      "type": "object",
      "description": "Authorization error details.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code"
        },
        "message": {
          "type": "string",
          "description": "Error message"
        }
      }
    },
    "AuthorizationLoginRequestContract": {
      "type": "object",
      "description": "Authorization login request contract.",
      "properties": {
        "postLoginRedirectUrl": {
          "type": "string",
          "description": "The redirect URL after login has completed."
        }
      }
    },
    "AuthorizationLoginResponseContract": {
      "type": "object",
      "description": "Authorization login response contract.",
      "properties": {
        "loginLink": {
          "type": "string",
          "description": "The login link"
        }
      }
    },
    "AuthorizationMethod": {
      "type": "string",
      "enum": [
        "HEAD",
        "OPTIONS",
        "TRACE",
        "GET",
        "POST",
        "PUT",
        "PATCH",
        "DELETE"
      ],
      "x-ms-enum": {
        "name": "AuthorizationMethod",
        "modelAsString": false
      }
    },
    "AuthorizationProviderCollection": {
      "type": "object",
      "description": "Paged Authorization Provider list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/AuthorizationProviderContract"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "AuthorizationProviderContract": {
      "type": "object",
      "description": "Authorization Provider contract.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AuthorizationProviderContractProperties",
          "description": "Properties of the Authorization Provider Contract.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AuthorizationProviderContractProperties": {
      "type": "object",
      "description": "Authorization Provider details.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Authorization Provider name. Must be 1 to 300 characters long.",
          "minLength": 1,
          "maxLength": 300
        },
        "identityProvider": {
          "type": "string",
          "description": "Identity provider name. Must be 1 to 300 characters long."
        },
        "oauth2": {
          "$ref": "#/definitions/AuthorizationProviderOAuth2Settings",
          "description": "OAuth2 settings"
        }
      }
    },
    "AuthorizationProviderOAuth2GrantTypes": {
      "type": "object",
      "description": "Authorization Provider oauth2 grant types settings",
      "properties": {
        "authorizationCode": {
          "type": "object",
          "description": "OAuth2 authorization code grant parameters",
          "additionalProperties": {
            "type": "string"
          }
        },
        "clientCredentials": {
          "type": "object",
          "description": "OAuth2 client credential grant parameters",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "AuthorizationProviderOAuth2Settings": {
      "type": "object",
      "description": "OAuth2 settings details",
      "properties": {
        "redirectUrl": {
          "type": "string",
          "description": "Redirect URL to be set in the OAuth application."
        },
        "grantTypes": {
          "$ref": "#/definitions/AuthorizationProviderOAuth2GrantTypes",
          "description": "OAuth2 settings"
        }
      }
    },
    "AuthorizationServerCollection": {
      "type": "object",
      "description": "Paged OAuth2 Authorization Servers list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/AuthorizationServerContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "AuthorizationServerContract": {
      "type": "object",
      "description": "External OAuth authorization server settings.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AuthorizationServerContractProperties",
          "description": "Properties of the External OAuth authorization server Contract.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AuthorizationServerContractBaseProperties": {
      "type": "object",
      "description": "External OAuth authorization server Update settings contract.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the authorization server. Can contain HTML formatting tags."
        },
        "authorizationMethods": {
          "type": "array",
          "description": "HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional.",
          "items": {
            "$ref": "#/definitions/AuthorizationMethod"
          }
        },
        "clientAuthenticationMethod": {
          "type": "array",
          "description": "Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format.",
          "items": {
            "$ref": "#/definitions/ClientAuthenticationMethod"
          }
        },
        "tokenBodyParameters": {
          "type": "array",
          "description": "Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {\"name\" : \"name value\", \"value\": \"a value\"}.",
          "items": {
            "$ref": "#/definitions/TokenBodyParameterContract"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "tokenEndpoint": {
          "type": "string",
          "description": "OAuth token endpoint. Contains absolute URI to entity being referenced."
        },
        "supportState": {
          "type": "boolean",
          "description": "If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security."
        },
        "defaultScope": {
          "type": "string",
          "description": "Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values."
        },
        "bearerTokenSendingMethods": {
          "type": "array",
          "description": "Specifies the mechanism by which access token is passed to the API.",
          "items": {
            "$ref": "#/definitions/BearerTokenSendingMethod"
          }
        },
        "resourceOwnerUsername": {
          "type": "string",
          "description": "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username."
        },
        "resourceOwnerPassword": {
          "type": "string",
          "description": "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password."
        }
      }
    },
    "AuthorizationServerContractProperties": {
      "type": "object",
      "description": "External OAuth authorization server settings Properties.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User-friendly authorization server name.",
          "minLength": 1,
          "maxLength": 50
        },
        "useInTestConsole": {
          "type": "boolean",
          "description": "If true, the authorization server may be used in the developer portal test console. True by default if no value is provided."
        },
        "useInApiDocumentation": {
          "type": "boolean",
          "description": "If true, the authorization server will be used in the API documentation in the developer portal. False by default if no value is provided."
        },
        "clientRegistrationEndpoint": {
          "type": "string",
          "description": "Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced."
        },
        "authorizationEndpoint": {
          "type": "string",
          "description": "OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2."
        },
        "grantTypes": {
          "type": "array",
          "description": "Form of an authorization grant, which the client uses to request the access token.",
          "items": {
            "$ref": "#/definitions/GrantType"
          }
        },
        "clientId": {
          "type": "string",
          "description": "Client or app id registered with this authorization server."
        },
        "clientSecret": {
          "type": "string",
          "format": "password",
          "description": "Client or app secret registered with this authorization server. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
          "x-ms-secret": true
        }
      },
      "required": [
        "displayName",
        "clientRegistrationEndpoint",
        "authorizationEndpoint",
        "grantTypes",
        "clientId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AuthorizationServerContractBaseProperties"
        }
      ]
    },
    "AuthorizationServerSecretsContract": {
      "type": "object",
      "description": "OAuth Server Secrets Contract.",
      "properties": {
        "clientSecret": {
          "type": "string",
          "format": "password",
          "description": "oAuth Authorization Server Secrets.",
          "x-ms-secret": true
        },
        "resourceOwnerUsername": {
          "type": "string",
          "description": "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username."
        },
        "resourceOwnerPassword": {
          "type": "string",
          "description": "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password."
        }
      }
    },
    "AuthorizationServerUpdateContract": {
      "type": "object",
      "description": "External OAuth authorization server settings.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AuthorizationServerUpdateContractProperties",
          "description": "Properties of the External OAuth authorization server update Contract.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AuthorizationServerUpdateContractProperties": {
      "type": "object",
      "description": "External OAuth authorization server Update settings contract.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User-friendly authorization server name.",
          "minLength": 1,
          "maxLength": 50
        },
        "useInTestConsole": {
          "type": "boolean",
          "description": "If true, the authorization server may be used in the developer portal test console. True by default if no value is provided."
        },
        "useInApiDocumentation": {
          "type": "boolean",
          "description": "If true, the authorization server will be used in the API documentation in the developer portal. False by default if no value is provided."
        },
        "clientRegistrationEndpoint": {
          "type": "string",
          "description": "Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced."
        },
        "authorizationEndpoint": {
          "type": "string",
          "description": "OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2."
        },
        "grantTypes": {
          "type": "array",
          "description": "Form of an authorization grant, which the client uses to request the access token.",
          "items": {
            "$ref": "#/definitions/GrantType"
          }
        },
        "clientId": {
          "type": "string",
          "description": "Client or app id registered with this authorization server."
        },
        "clientSecret": {
          "type": "string",
          "format": "password",
          "description": "Client or app secret registered with this authorization server. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
          "x-ms-secret": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AuthorizationServerContractBaseProperties"
        }
      ]
    },
    "AuthorizationType": {
      "type": "string",
      "description": "Authorization type options",
      "enum": [
        "OAuth2"
      ],
      "x-ms-enum": {
        "name": "AuthorizationType",
        "modelAsString": true,
        "values": [
          {
            "name": "OAuth2",
            "value": "OAuth2",
            "description": "OAuth2 authorization type"
          }
        ]
      }
    },
    "Azure.Core.eTag": {
      "type": "string",
      "description": "The ETag (or entity tag) HTTP response header is an identifier for a specific version of a resource.\nIt lets caches be more efficient and save bandwidth, as a web server does not need to resend a full response if the content was not changed.\n\nIt is a string of ASCII characters placed between double quotes, like \"675af34563dc-tr34\"."
    },
    "Backend-sessionId-source": {
      "type": "string",
      "description": "Source from where the session id is extracted.",
      "enum": [
        "cookie"
      ],
      "x-ms-enum": {
        "name": "Backend-sessionId-source",
        "modelAsString": true,
        "values": [
          {
            "name": "cookie",
            "value": "cookie",
            "description": "The session id is set by APIM gateway in a cookie and is extracted from the cookies in client requests."
          }
        ]
      }
    },
    "BackendAuthorizationHeaderCredentials": {
      "type": "object",
      "description": "Authorization header information.",
      "properties": {
        "scheme": {
          "type": "string",
          "description": "Authentication Scheme name.",
          "minLength": 1,
          "maxLength": 100
        },
        "parameter": {
          "type": "string",
          "description": "Authentication Parameter value.",
          "minLength": 1,
          "maxLength": 300
        }
      },
      "required": [
        "scheme",
        "parameter"
      ]
    },
    "BackendBaseParameters": {
      "type": "object",
      "description": "Backend entity base Parameter set.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Backend Title.",
          "minLength": 1,
          "maxLength": 300
        },
        "description": {
          "type": "string",
          "description": "Backend Description.",
          "minLength": 1,
          "maxLength": 2000
        },
        "resourceId": {
          "type": "string",
          "description": "Management Uri of the Resource in External System. This URL can be the Arm Resource Id of Logic Apps, Function Apps or API Apps.",
          "minLength": 1,
          "maxLength": 2000
        },
        "properties": {
          "$ref": "#/definitions/BackendProperties",
          "description": "Backend Properties contract"
        },
        "credentials": {
          "$ref": "#/definitions/BackendCredentialsContract",
          "description": "Backend Credentials Contract Properties"
        },
        "proxy": {
          "$ref": "#/definitions/BackendProxyContract",
          "description": "Backend gateway Contract Properties"
        },
        "tls": {
          "$ref": "#/definitions/BackendTlsProperties",
          "description": "Backend TLS Properties"
        },
        "circuitBreaker": {
          "$ref": "#/definitions/BackendCircuitBreaker",
          "description": "Backend Circuit Breaker Configuration"
        },
        "pool": {
          "$ref": "#/definitions/BackendBaseParametersPool",
          "description": "Backend Pool Properties"
        },
        "type": {
          "$ref": "#/definitions/BackendType",
          "description": "Type of the backend. A backend can be either Single or Pool."
        }
      }
    },
    "BackendBaseParametersPool": {
      "type": "object",
      "description": "Backend Pool Properties",
      "allOf": [
        {
          "$ref": "#/definitions/BackendPool"
        }
      ]
    },
    "BackendCircuitBreaker": {
      "type": "object",
      "description": "The configuration of the backend circuit breaker",
      "properties": {
        "rules": {
          "type": "array",
          "description": "The rules for tripping the backend.",
          "items": {
            "$ref": "#/definitions/CircuitBreakerRule"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "BackendCollection": {
      "type": "object",
      "description": "Paged Backend list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Backend values.",
          "items": {
            "$ref": "#/definitions/BackendContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "BackendConfiguration": {
      "type": "object",
      "description": "Information regarding how the gateway should integrate with backend systems.",
      "properties": {
        "subnet": {
          "$ref": "#/definitions/BackendSubnetConfiguration",
          "description": "The default hostname of the data-plane gateway to which requests can be sent."
        }
      }
    },
    "BackendContract": {
      "type": "object",
      "description": "Backend details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackendContractProperties",
          "description": "Backend entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BackendContractProperties": {
      "type": "object",
      "description": "Parameters supplied to the Create Backend operation.",
      "properties": {
        "url": {
          "type": "string",
          "description": "Runtime Url of the Backend. Required when backend type is 'Single'.",
          "minLength": 1,
          "maxLength": 2000
        },
        "protocol": {
          "$ref": "#/definitions/BackendProtocol",
          "description": "Backend communication protocol. Required when backend type is 'Single'."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BackendBaseParameters"
        }
      ]
    },
    "BackendCredentialsContract": {
      "type": "object",
      "description": "Details of the Credentials used to connect to Backend.",
      "properties": {
        "certificateIds": {
          "type": "array",
          "description": "List of Client Certificate Ids.",
          "maxItems": 32,
          "items": {
            "type": "string"
          }
        },
        "certificate": {
          "type": "array",
          "description": "List of Client Certificate Thumbprints. Will be ignored if certificatesIds are provided.",
          "maxItems": 32,
          "items": {
            "type": "string"
          }
        },
        "query": {
          "type": "object",
          "description": "Query Parameter description.",
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "header": {
          "type": "object",
          "description": "Header Parameter description.",
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "authorization": {
          "$ref": "#/definitions/BackendAuthorizationHeaderCredentials",
          "description": "Authorization header authentication"
        }
      }
    },
    "BackendFailureResponse": {
      "type": "object",
      "description": "The response to be returned when a backend fails to respond",
      "properties": {
        "statusCode": {
          "type": "integer",
          "format": "int32",
          "description": "The status code of the response.",
          "minimum": 100,
          "maximum": 599
        }
      }
    },
    "BackendPool": {
      "type": "object",
      "description": "Backend pool information",
      "properties": {
        "services": {
          "type": "array",
          "description": "The list of backend entities belonging to a pool.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/BackendPoolItem"
          },
          "x-ms-identifiers": []
        },
        "failureResponse": {
          "$ref": "#/definitions/BackendFailureResponse",
          "description": "The response to be returned when all the backends in the pool are inactive."
        },
        "sessionAffinity": {
          "$ref": "#/definitions/BackendSessionAffinity",
          "description": "The session stickiness properties of the backend pool."
        }
      }
    },
    "BackendPoolItem": {
      "type": "object",
      "description": "Backend pool service information",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "The unique ARM id of the backend entity. The ARM id should refer to an already existing backend entity."
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "The weight of the backend entity in the backend pool. Must be between 0 and 100. It can be also null if the value not specified.",
          "minimum": 0,
          "maximum": 100
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the backend entity in the backend pool. Must be between 0 and 100. It can be also null if the value not specified.",
          "minimum": 0,
          "maximum": 100
        }
      },
      "required": [
        "id"
      ]
    },
    "BackendProperties": {
      "type": "object",
      "description": "Properties specific to the Backend Type.",
      "properties": {
        "serviceFabricCluster": {
          "$ref": "#/definitions/BackendServiceFabricClusterProperties",
          "description": "Backend Service Fabric Cluster Properties"
        }
      }
    },
    "BackendProtocol": {
      "type": "string",
      "description": "Backend communication protocol. Required when backend type is 'Single'.",
      "enum": [
        "http",
        "soap"
      ],
      "x-ms-enum": {
        "name": "BackendProtocol",
        "modelAsString": true,
        "values": [
          {
            "name": "http",
            "value": "http",
            "description": "The Backend is a RESTful service."
          },
          {
            "name": "soap",
            "value": "soap",
            "description": "The Backend is a SOAP service."
          }
        ]
      }
    },
    "BackendProxyContract": {
      "type": "object",
      "description": "Details of the Backend WebProxy Server to use in the Request to Backend.",
      "properties": {
        "url": {
          "type": "string",
          "description": "WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings.",
          "minLength": 1,
          "maxLength": 2000
        },
        "username": {
          "type": "string",
          "description": "Username to connect to the WebProxy server"
        },
        "password": {
          "type": "string",
          "description": "Password to connect to the WebProxy Server"
        }
      },
      "required": [
        "url"
      ],
      "externalDocs": {
        "description": "Backend entity uses these details to connect to a WebProxy.",
        "url": "https://msdn.microsoft.com/en-us/library/system.net.webproxy(v=vs.110).aspx"
      }
    },
    "BackendReconnectContract": {
      "type": "object",
      "description": "Reconnect request parameters.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackendReconnectProperties",
          "description": "Reconnect request properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BackendReconnectProperties": {
      "type": "object",
      "description": "Properties to control reconnect requests.",
      "properties": {
        "after": {
          "type": "string",
          "format": "duration",
          "description": "Duration in ISO8601 format after which reconnect will be initiated. Minimum duration of the Reconnect is PT2M."
        }
      }
    },
    "BackendServiceFabricClusterProperties": {
      "type": "object",
      "description": "Properties of the Service Fabric Type Backend.",
      "properties": {
        "clientCertificateId": {
          "type": "string",
          "description": "The client certificate id for the management endpoint."
        },
        "clientCertificatethumbprint": {
          "type": "string",
          "description": "The client certificate thumbprint for the management endpoint. Will be ignored if certificatesIds are provided"
        },
        "maxPartitionResolutionRetries": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of retries while attempting resolve the partition."
        },
        "managementEndpoints": {
          "type": "array",
          "description": "The cluster management endpoint.",
          "items": {
            "type": "string"
          }
        },
        "serverCertificateThumbprints": {
          "type": "array",
          "description": "Thumbprints of certificates cluster management service uses for tls communication",
          "items": {
            "type": "string"
          }
        },
        "serverX509Names": {
          "type": "array",
          "description": "Server X509 Certificate Names Collection",
          "items": {
            "$ref": "#/definitions/X509CertificateName"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "required": [
        "managementEndpoints"
      ]
    },
    "BackendSessionAffinity": {
      "type": "object",
      "description": "The session stickiness properties of the backend pool.",
      "properties": {
        "sessionId": {
          "$ref": "#/definitions/BackendSessionId",
          "description": "The id that identifies the requests belonging to the same session."
        }
      }
    },
    "BackendSessionId": {
      "type": "object",
      "description": "The properties of the id that identifies the requests belonging to the same session.",
      "properties": {
        "source": {
          "$ref": "#/definitions/Backend-sessionId-source",
          "description": "Source from where the session id is extracted."
        },
        "name": {
          "type": "string",
          "description": "Name of the variable that refers to the session id."
        }
      }
    },
    "BackendSubnetConfiguration": {
      "type": "object",
      "description": "Information regarding how the subnet to which the gateway should be injected.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM ID of the subnet in which the backend systems are hosted."
        }
      }
    },
    "BackendTlsProperties": {
      "type": "object",
      "description": "Properties controlling TLS Certificate Validation.",
      "properties": {
        "validateCertificateChain": {
          "type": "boolean",
          "description": "Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for this backend host.",
          "default": true
        },
        "validateCertificateName": {
          "type": "boolean",
          "description": "Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for this backend host.",
          "default": true
        }
      }
    },
    "BackendType": {
      "type": "string",
      "description": "Type of the backend. A backend can be either Single or Pool.",
      "enum": [
        "Single",
        "Pool"
      ],
      "x-ms-enum": {
        "name": "BackendType",
        "modelAsString": true,
        "values": [
          {
            "name": "Single",
            "value": "Single",
            "description": "supports single backend"
          },
          {
            "name": "Pool",
            "value": "Pool",
            "description": "supports pool backend"
          }
        ]
      }
    },
    "BackendUpdateParameterProperties": {
      "type": "object",
      "description": "Parameters supplied to the Update Backend operation.",
      "properties": {
        "url": {
          "type": "string",
          "description": "Runtime Url of the Backend. Required when backend type is 'Single'.",
          "minLength": 1,
          "maxLength": 2000
        },
        "protocol": {
          "$ref": "#/definitions/BackendProtocol",
          "description": "Backend communication protocol. Required when backend type is 'Single'."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BackendBaseParameters"
        }
      ]
    },
    "BackendUpdateParameters": {
      "type": "object",
      "description": "Backend update parameters.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackendUpdateParameterProperties",
          "description": "Backend entity update contract properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "BearerTokenSendingMethod": {
      "type": "string",
      "enum": [
        "authorizationHeader",
        "query"
      ],
      "x-ms-enum": {
        "name": "BearerTokenSendingMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "authorizationHeader",
            "value": "authorizationHeader"
          },
          {
            "name": "query",
            "value": "query"
          }
        ]
      }
    },
    "BearerTokenSendingMethods": {
      "type": "string",
      "description": "Form of an authorization grant, which the client uses to request the access token.",
      "enum": [
        "authorizationHeader",
        "query"
      ],
      "x-ms-enum": {
        "name": "BearerTokenSendingMethods",
        "modelAsString": true,
        "values": [
          {
            "name": "authorizationHeader",
            "value": "authorizationHeader",
            "description": "Access token will be transmitted in the Authorization header using Bearer schema"
          },
          {
            "name": "query",
            "value": "query",
            "description": "Access token will be transmitted as query parameters."
          }
        ]
      }
    },
    "BodyDiagnosticSettings": {
      "type": "object",
      "description": "Body logging settings.",
      "properties": {
        "bytes": {
          "type": "integer",
          "format": "int32",
          "description": "Number of request body bytes to log.",
          "maximum": 8192
        }
      }
    },
    "CacheCollection": {
      "type": "object",
      "description": "Paged Caches list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/CacheContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "CacheContract": {
      "type": "object",
      "description": "Cache details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CacheContractProperties",
          "description": "Cache properties details.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CacheContractProperties": {
      "type": "object",
      "description": "Properties of the Cache contract.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Cache description",
          "maxLength": 2000
        },
        "connectionString": {
          "type": "string",
          "description": "Runtime connection string to cache",
          "maxLength": 300
        },
        "useFromLocation": {
          "type": "string",
          "description": "Location identifier to use cache from (should be either 'default' or valid Azure region identifier)",
          "maxLength": 256
        },
        "resourceId": {
          "type": "string",
          "description": "Original uri of entity in external system cache points to",
          "maxLength": 2000
        }
      },
      "required": [
        "connectionString",
        "useFromLocation"
      ]
    },
    "CacheUpdateParameters": {
      "type": "object",
      "description": "Cache update details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CacheUpdateProperties",
          "description": "Cache update properties details.",
          "x-ms-client-flatten": true
        }
      }
    },
    "CacheUpdateProperties": {
      "type": "object",
      "description": "Parameters supplied to the Update Cache operation.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Cache description",
          "maxLength": 2000
        },
        "connectionString": {
          "type": "string",
          "description": "Runtime connection string to cache",
          "maxLength": 300
        },
        "useFromLocation": {
          "type": "string",
          "description": "Location identifier to use cache from (should be either 'default' or valid Azure region identifier)",
          "maxLength": 256
        },
        "resourceId": {
          "type": "string",
          "description": "Original uri of entity in external system cache points to",
          "maxLength": 2000
        }
      }
    },
    "CertificateCollection": {
      "type": "object",
      "description": "Paged Certificates list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/CertificateContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "CertificateConfiguration": {
      "type": "object",
      "description": "Certificate configuration which consist of non-trusted intermediates and root certificates.",
      "properties": {
        "encodedCertificate": {
          "type": "string",
          "description": "Base64 Encoded certificate."
        },
        "certificatePassword": {
          "type": "string",
          "description": "Certificate Password."
        },
        "storeName": {
          "$ref": "#/definitions/CertificateConfigurationStoreName",
          "description": "The System.Security.Cryptography.x509certificates.StoreName certificate store location. Only Root and CertificateAuthority are valid locations."
        },
        "certificate": {
          "$ref": "#/definitions/CertificateInformation",
          "description": "Certificate information."
        }
      },
      "required": [
        "storeName"
      ]
    },
    "CertificateConfigurationStoreName": {
      "type": "string",
      "description": "The System.Security.Cryptography.x509certificates.StoreName certificate store location. Only Root and CertificateAuthority are valid locations.",
      "enum": [
        "CertificateAuthority",
        "Root"
      ],
      "x-ms-enum": {
        "name": "CertificateConfigurationStoreName",
        "modelAsString": true,
        "values": [
          {
            "name": "CertificateAuthority",
            "value": "CertificateAuthority"
          },
          {
            "name": "Root",
            "value": "Root"
          }
        ]
      }
    },
    "CertificateContract": {
      "type": "object",
      "description": "Certificate details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CertificateContractProperties",
          "description": "Certificate properties details.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CertificateContractProperties": {
      "type": "object",
      "description": "Properties of the Certificate contract.",
      "properties": {
        "subject": {
          "type": "string",
          "description": "Subject attribute of the certificate."
        },
        "thumbprint": {
          "type": "string",
          "description": "Thumbprint of the certificate."
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        },
        "keyVault": {
          "$ref": "#/definitions/KeyVaultContractProperties",
          "description": "KeyVault location details of the certificate."
        }
      },
      "required": [
        "subject",
        "thumbprint",
        "expirationDate"
      ]
    },
    "CertificateCreateOrUpdateParameters": {
      "type": "object",
      "description": "Certificate create or update details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CertificateCreateOrUpdateProperties",
          "description": "Certificate create or update properties details.",
          "x-ms-client-flatten": true
        }
      }
    },
    "CertificateCreateOrUpdateProperties": {
      "type": "object",
      "description": "Parameters supplied to the CreateOrUpdate certificate operation.",
      "properties": {
        "data": {
          "type": "string",
          "description": "Base 64 encoded certificate using the application/x-pkcs12 representation."
        },
        "password": {
          "type": "string",
          "description": "Password for the Certificate"
        },
        "keyVault": {
          "$ref": "#/definitions/KeyVaultContractCreateProperties",
          "description": "KeyVault location details of the certificate."
        }
      }
    },
    "CertificateInformation": {
      "type": "object",
      "description": "SSL certificate information.",
      "properties": {
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        },
        "thumbprint": {
          "type": "string",
          "description": "Thumbprint of the certificate."
        },
        "subject": {
          "type": "string",
          "description": "Subject of the certificate."
        }
      },
      "required": [
        "expiry",
        "thumbprint",
        "subject"
      ]
    },
    "CertificateSource": {
      "type": "string",
      "description": "Certificate Source.",
      "enum": [
        "Managed",
        "KeyVault",
        "Custom",
        "BuiltIn"
      ],
      "x-ms-enum": {
        "name": "CertificateSource",
        "modelAsString": true,
        "values": [
          {
            "name": "Managed",
            "value": "Managed"
          },
          {
            "name": "KeyVault",
            "value": "KeyVault"
          },
          {
            "name": "Custom",
            "value": "Custom"
          },
          {
            "name": "BuiltIn",
            "value": "BuiltIn"
          }
        ]
      }
    },
    "CertificateStatus": {
      "type": "string",
      "description": "Certificate Status.",
      "enum": [
        "Completed",
        "Failed",
        "InProgress"
      ],
      "x-ms-enum": {
        "name": "CertificateStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Completed",
            "value": "Completed"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "InProgress",
            "value": "InProgress"
          }
        ]
      }
    },
    "CircuitBreakerFailureCondition": {
      "type": "object",
      "description": "The trip conditions of the circuit breaker",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "The threshold for opening the circuit."
        },
        "percentage": {
          "type": "integer",
          "format": "int64",
          "description": "The threshold for opening the circuit."
        },
        "interval": {
          "type": "string",
          "format": "duration",
          "description": "The interval during which the failures are counted."
        },
        "statusCodeRanges": {
          "type": "array",
          "description": "The status code ranges which are considered as failure.",
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/FailureStatusCodeRange"
          },
          "x-ms-identifiers": []
        },
        "errorReasons": {
          "type": "array",
          "description": "The error reasons which are considered as failure.",
          "maxItems": 10,
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "CircuitBreakerRule": {
      "type": "object",
      "description": "Rule configuration to trip the backend.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The rule name."
        },
        "failureCondition": {
          "$ref": "#/definitions/CircuitBreakerFailureCondition",
          "description": "The conditions for tripping the circuit breaker."
        },
        "tripDuration": {
          "type": "string",
          "format": "duration",
          "description": "The duration for which the circuit will be tripped."
        },
        "acceptRetryAfter": {
          "type": "boolean",
          "description": "flag to accept Retry-After header from the backend."
        },
        "failureResponse": {
          "$ref": "#/definitions/BackendFailureResponse",
          "description": "The response of the backend when the circuit breaker gets open."
        }
      }
    },
    "ClientApplicationCollection": {
      "type": "object",
      "description": "Paged ClientApplication list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/ClientApplicationContract"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "ClientApplicationContract": {
      "type": "object",
      "description": "Client application details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ClientApplicationContractProperties",
          "description": "Client application entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ClientApplicationContractProperties": {
      "type": "object",
      "description": "Client Application Entity Properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Client application name.",
          "minLength": 0,
          "maxLength": 300
        },
        "description": {
          "type": "string",
          "description": "Client application description.",
          "minLength": 0,
          "maxLength": 1000
        },
        "ownerId": {
          "type": "string",
          "description": "A resource identifier for the user who owns the application."
        },
        "entraApplicationId": {
          "type": "string",
          "description": "Microsoft EntraID Application ID (Client ID). This is the value that is used to identify the application when it is requesting access tokens from Microsoft EntraID. This property is read-only and will be set by the system when the application is created.",
          "readOnly": true
        },
        "entraTenantId": {
          "type": "string",
          "description": "Tenant ID is a unique identifier (a GUID) for an organization directory in Microsoft’s cloud. It’s used to identify tenants across Microsoft services.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/ClientApplicationState",
          "description": "Client application state. The value derives the state of an application based on the statuses of its associated ClientApplicationProductLinks.",
          "readOnly": true
        }
      },
      "required": [
        "displayName",
        "ownerId"
      ]
    },
    "ClientApplicationProductLinkCollection": {
      "type": "object",
      "description": "Paged ClientApplicationProductLinkContract list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/ClientApplicationProductLinkContract"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "ClientApplicationProductLinkContract": {
      "type": "object",
      "description": "Specifies Client Application - Product link assignment",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ClientApplicationProductLinkContractProperties",
          "description": "Client application - product link entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ClientApplicationProductLinkContractProperties": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "description": "The unique resource identifier of the Product."
        }
      },
      "required": [
        "productId"
      ]
    },
    "ClientApplicationSecretsContract": {
      "type": "object",
      "description": "Specifies client application secrets needed to authorize applications API calls",
      "properties": {
        "entra": {
          "$ref": "#/definitions/ClientApplicationSecretsContractEntra",
          "description": "Microsoft EntraID client application secrets"
        }
      }
    },
    "ClientApplicationSecretsContractEntra": {
      "type": "object",
      "description": "Microsoft EntraID client application secrets",
      "properties": {
        "clientSecret": {
          "type": "string",
          "format": "password",
          "description": "EntraID client application secret",
          "x-ms-secret": true
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time",
          "description": "EntraID client application secret expiration date.",
          "readOnly": true
        }
      }
    },
    "ClientApplicationState": {
      "type": "string",
      "description": "Client application state. The value derives the state of an application based on the statuses of its associated ClientApplicationProductLinks.",
      "enum": [
        "pending",
        "active",
        "rejected",
        "approved"
      ],
      "x-ms-enum": {
        "name": "ClientApplicationState",
        "modelAsString": true,
        "values": [
          {
            "name": "pending",
            "value": "pending",
            "description": "If there are no associated ClientApplicationLinks or all ClientApplicationLinks are in a state that doesn't meet the criteria for the states: active, rejected, approved (e.g., a mix of active and rejected without any approved)."
          },
          {
            "name": "active",
            "value": "active",
            "description": "If there are no approved ClientApplicationLink, but at least one ClientApplicationLink is active, the Application is considered active"
          },
          {
            "name": "rejected",
            "value": "rejected",
            "description": "If all ClientApplicationLinks are rejected, the Application is considered rejected"
          },
          {
            "name": "approved",
            "value": "approved",
            "description": "If at least one ClientApplicationLink is approved, the Application is considered approved"
          }
        ]
      }
    },
    "ClientAuthenticationMethod": {
      "type": "string",
      "enum": [
        "Basic",
        "Body"
      ],
      "x-ms-enum": {
        "name": "ClientAuthenticationMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "Basic",
            "value": "Basic",
            "description": "Basic Client Authentication method."
          },
          {
            "name": "Body",
            "value": "Body",
            "description": "Body based Authentication method."
          }
        ]
      }
    },
    "ClientSecretContract": {
      "type": "object",
      "description": "Client or app secret used in IdentityProviders, Aad, OpenID or OAuth.",
      "properties": {
        "clientSecret": {
          "type": "string",
          "format": "password",
          "description": "Client or app secret used in IdentityProviders, Aad, OpenID or OAuth.",
          "x-ms-secret": true
        }
      }
    },
    "ConfigurationApi": {
      "type": "object",
      "description": "Information regarding the Configuration API of the API Management service.",
      "properties": {
        "legacyApi": {
          "type": "string",
          "description": "Indication whether or not the legacy Configuration API (v1) should be exposed on the API Management service. Value is optional but must be 'Enabled' or 'Disabled'. If 'Disabled', legacy Configuration API (v1) will not be available for self-hosted gateways. Default value is 'Enabled'",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "LegacyApiState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Legacy Configuration API (v1) is enabled for the service and self-hosted gateways can connect to it."
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Legacy Configuration API (v1) is disabled for the service and self-hosted gateways can not connect to it."
              }
            ]
          }
        }
      }
    },
    "ConfigurationIdName": {
      "type": "string",
      "enum": [
        "configuration"
      ],
      "x-ms-enum": {
        "name": "ConfigurationIdName",
        "modelAsString": true,
        "values": [
          {
            "name": "configuration",
            "value": "configuration"
          }
        ]
      }
    },
    "Confirmation": {
      "type": "string",
      "description": "Determines the type of confirmation e-mail that will be sent to the newly created user.",
      "enum": [
        "signup",
        "invite"
      ],
      "x-ms-enum": {
        "name": "Confirmation",
        "modelAsString": true,
        "values": [
          {
            "name": "signup",
            "value": "signup",
            "description": "Send an e-mail to the user confirming they have successfully signed up."
          },
          {
            "name": "invite",
            "value": "invite",
            "description": "Send an e-mail inviting the user to sign-up and complete registration."
          }
        ]
      }
    },
    "ConnectionStatus": {
      "type": "string",
      "description": "The connection status.",
      "enum": [
        "Unknown",
        "Connected",
        "Disconnected",
        "Degraded"
      ],
      "x-ms-enum": {
        "name": "ConnectionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "Connected",
            "value": "Connected"
          },
          {
            "name": "Disconnected",
            "value": "Disconnected"
          },
          {
            "name": "Degraded",
            "value": "Degraded"
          }
        ]
      }
    },
    "ConnectivityCheckProtocol": {
      "type": "string",
      "description": "The request's protocol. Specific protocol configuration can be available based on this selection. The specified destination address must be coherent with this value.",
      "enum": [
        "TCP",
        "HTTP",
        "HTTPS"
      ],
      "x-ms-enum": {
        "name": "ConnectivityCheckProtocol",
        "modelAsString": true,
        "values": [
          {
            "name": "TCP",
            "value": "TCP"
          },
          {
            "name": "HTTP",
            "value": "HTTP"
          },
          {
            "name": "HTTPS",
            "value": "HTTPS"
          }
        ]
      }
    },
    "ConnectivityCheckRequest": {
      "type": "object",
      "description": "A request to perform the connectivity check operation on a API Management service.",
      "properties": {
        "source": {
          "$ref": "#/definitions/ConnectivityCheckRequestSource",
          "description": "Definitions about the connectivity check origin."
        },
        "destination": {
          "$ref": "#/definitions/ConnectivityCheckRequestDestination",
          "description": "The connectivity check operation destination."
        },
        "preferredIPVersion": {
          "$ref": "#/definitions/PreferredIPVersion",
          "description": "The IP version to be used. Only IPv4 is supported for now."
        },
        "protocol": {
          "$ref": "#/definitions/ConnectivityCheckProtocol",
          "description": "The request's protocol. Specific protocol configuration can be available based on this selection. The specified destination address must be coherent with this value."
        },
        "protocolConfiguration": {
          "$ref": "#/definitions/ConnectivityCheckRequestProtocolConfiguration",
          "description": "Protocol-specific configuration."
        }
      },
      "required": [
        "source",
        "destination"
      ]
    },
    "ConnectivityCheckRequestDestination": {
      "type": "object",
      "description": "The connectivity check operation destination.",
      "properties": {
        "address": {
          "type": "string",
          "description": "Destination address. Can either be an IP address or a FQDN."
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "description": "Destination port."
        }
      },
      "required": [
        "address",
        "port"
      ]
    },
    "ConnectivityCheckRequestProtocolConfiguration": {
      "type": "object",
      "description": "Protocol-specific configuration.",
      "properties": {
        "HTTPConfiguration": {
          "$ref": "#/definitions/ConnectivityCheckRequestProtocolConfigurationHttpConfiguration",
          "description": "Configuration for HTTP or HTTPS requests."
        }
      }
    },
    "ConnectivityCheckRequestProtocolConfigurationHttpConfiguration": {
      "type": "object",
      "description": "Configuration for HTTP or HTTPS requests.",
      "properties": {
        "method": {
          "$ref": "#/definitions/Method",
          "description": "The HTTP method to be used."
        },
        "validStatusCodes": {
          "type": "array",
          "description": "List of HTTP status codes considered valid for the request response.",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "headers": {
          "type": "array",
          "description": "List of headers to be included in the request.",
          "items": {
            "$ref": "#/definitions/HTTPHeader"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "ConnectivityCheckRequestSource": {
      "type": "object",
      "description": "Definitions about the connectivity check origin.",
      "properties": {
        "region": {
          "type": "string",
          "description": "The API Management service region from where to start the connectivity check operation."
        },
        "instance": {
          "type": "integer",
          "format": "int64",
          "description": "The particular VMSS instance from which to fire the request."
        }
      },
      "required": [
        "region"
      ]
    },
    "ConnectivityCheckResponse": {
      "type": "object",
      "description": "Information on the connectivity status.",
      "properties": {
        "hops": {
          "type": "array",
          "description": "List of hops between the source and the destination.",
          "items": {
            "$ref": "#/definitions/ConnectivityHop"
          },
          "readOnly": true
        },
        "connectionStatus": {
          "$ref": "#/definitions/ConnectionStatus",
          "description": "The connection status.",
          "readOnly": true
        },
        "avgLatencyInMs": {
          "type": "integer",
          "format": "int64",
          "description": "Average latency in milliseconds.",
          "readOnly": true
        },
        "minLatencyInMs": {
          "type": "integer",
          "format": "int64",
          "description": "Minimum latency in milliseconds.",
          "readOnly": true
        },
        "maxLatencyInMs": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum latency in milliseconds.",
          "readOnly": true
        },
        "probesSent": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of probes sent.",
          "readOnly": true
        },
        "probesFailed": {
          "type": "integer",
          "format": "int64",
          "description": "Number of failed probes.",
          "readOnly": true
        }
      }
    },
    "ConnectivityHop": {
      "type": "object",
      "description": "Information about a hop between the source and the destination.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of the hop.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "The ID of the hop.",
          "readOnly": true
        },
        "address": {
          "type": "string",
          "description": "The IP address of the hop.",
          "readOnly": true
        },
        "resourceId": {
          "type": "string",
          "description": "The ID of the resource corresponding to this hop.",
          "readOnly": true
        },
        "nextHopIds": {
          "type": "array",
          "description": "List of next hop identifiers.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "issues": {
          "type": "array",
          "description": "List of issues.",
          "items": {
            "$ref": "#/definitions/ConnectivityIssue"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ConnectivityIssue": {
      "type": "object",
      "description": "Information about an issue encountered in the process of checking for connectivity.",
      "properties": {
        "origin": {
          "$ref": "#/definitions/Origin",
          "description": "The origin of the issue.",
          "readOnly": true
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "The severity of the issue.",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/IssueType",
          "description": "The type of issue.",
          "readOnly": true
        },
        "context": {
          "type": "array",
          "description": "Provides additional context on the issue.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ConnectivityStatusContract": {
      "type": "object",
      "description": "Details about connectivity to a resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The hostname of the resource which the service depends on. This can be the database, storage or any other azure resource on which the service depends upon.",
          "minLength": 1
        },
        "status": {
          "$ref": "#/definitions/ConnectivityStatusType",
          "description": "Resource Connectivity Status Type identifier."
        },
        "error": {
          "type": "string",
          "description": "Error details of the connectivity to the resource."
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the resource connectivity status was last updated. This status should be updated every 15 minutes. If this status has not been updated, then it means that the service has lost network connectivity to the resource, from inside the Virtual Network.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        },
        "lastStatusChange": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the resource connectivity status last Changed from success to failure or vice-versa. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        },
        "resourceType": {
          "type": "string",
          "description": "Resource Type."
        },
        "isOptional": {
          "type": "boolean",
          "description": "Whether this is optional."
        }
      },
      "required": [
        "name",
        "status",
        "lastUpdated",
        "lastStatusChange",
        "resourceType",
        "isOptional"
      ]
    },
    "ConnectivityStatusType": {
      "type": "string",
      "description": "Resource Connectivity Status Type identifier.",
      "enum": [
        "initializing",
        "success",
        "failure"
      ],
      "x-ms-enum": {
        "name": "ConnectivityStatusType",
        "modelAsString": true,
        "values": [
          {
            "name": "initializing",
            "value": "initializing"
          },
          {
            "name": "success",
            "value": "success"
          },
          {
            "name": "failure",
            "value": "failure"
          }
        ]
      }
    },
    "ContentFormat": {
      "type": "string",
      "description": "Format of the Content in which the API is getting imported. New formats can be added in the future",
      "enum": [
        "wadl-xml",
        "wadl-link-json",
        "swagger-json",
        "swagger-link-json",
        "wsdl",
        "wsdl-link",
        "openapi",
        "openapi+json",
        "openapi-link",
        "openapi+json-link",
        "graphql-link",
        "odata",
        "odata-link",
        "grpc",
        "grpc-link"
      ],
      "x-ms-enum": {
        "name": "ContentFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "wadl-xml",
            "value": "wadl-xml",
            "description": "The contents are inline and Content type is a WADL document."
          },
          {
            "name": "wadl-link-json",
            "value": "wadl-link-json",
            "description": "The WADL document is hosted on a publicly accessible internet address."
          },
          {
            "name": "swagger-json",
            "value": "swagger-json",
            "description": "The contents are inline and Content Type is a OpenAPI 2.0 JSON Document."
          },
          {
            "name": "swagger-link-json",
            "value": "swagger-link-json",
            "description": "The OpenAPI 2.0 JSON document is hosted on a publicly accessible internet address."
          },
          {
            "name": "wsdl",
            "value": "wsdl",
            "description": "The contents are inline and the document is a WSDL/Soap document."
          },
          {
            "name": "wsdl-link",
            "value": "wsdl-link",
            "description": "The WSDL document is hosted on a publicly accessible internet address."
          },
          {
            "name": "openapi",
            "value": "openapi",
            "description": "The contents are inline and Content Type is a OpenAPI 3.0 YAML Document."
          },
          {
            "name": "openapi+json",
            "value": "openapi+json",
            "description": "The contents are inline and Content Type is a OpenAPI 3.0 JSON Document."
          },
          {
            "name": "openapi-link",
            "value": "openapi-link",
            "description": "The OpenAPI 3.0 YAML document is hosted on a publicly accessible internet address."
          },
          {
            "name": "openapi+json-link",
            "value": "openapi+json-link",
            "description": "The OpenAPI 3.0 JSON document is hosted on a publicly accessible internet address."
          },
          {
            "name": "graphql-link",
            "value": "graphql-link",
            "description": "The GraphQL API endpoint hosted on a publicly accessible internet address."
          },
          {
            "name": "odata",
            "value": "odata",
            "description": "The contents are inline and Content Type is a OData XML Document."
          },
          {
            "name": "odata-link",
            "value": "odata-link",
            "description": "The OData metadata document hosted on a publicly accessible internet address."
          },
          {
            "name": "grpc",
            "value": "grpc",
            "description": "The contents are inline and Content Type is a gRPC protobuf file."
          },
          {
            "name": "grpc-link",
            "value": "grpc-link",
            "description": "The gRPC protobuf file is hosted on a publicly accessible internet address."
          }
        ]
      }
    },
    "ContentItemCollection": {
      "type": "object",
      "description": "Paged list of content items.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Collection of content items.",
          "items": {
            "$ref": "#/definitions/ContentItemContract"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      }
    },
    "ContentItemContract": {
      "type": "object",
      "description": "Content type contract details.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "Properties of the content item.",
          "additionalProperties": {},
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ContentTypeCollection": {
      "type": "object",
      "description": "Paged list of content types.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Collection of content items.",
          "items": {
            "$ref": "#/definitions/ContentTypeContract"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link, if any.",
          "readOnly": true
        }
      }
    },
    "ContentTypeContract": {
      "type": "object",
      "description": "Content type contract details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ContentTypeContractProperties",
          "description": "Properties of the content type.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ContentTypeContractProperties": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Content type identifier"
        },
        "name": {
          "type": "string",
          "description": "Content type name. Must be 1 to 250 characters long."
        },
        "description": {
          "type": "string",
          "description": "Content type description."
        },
        "schema": {
          "description": "Content type schema."
        },
        "version": {
          "type": "string",
          "description": "Content type version."
        }
      }
    },
    "CreatedByType": {
      "type": "string",
      "description": "The type of identity that created the resource.",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "CreatedByType",
        "modelAsString": true,
        "values": [
          {
            "name": "User",
            "value": "User"
          },
          {
            "name": "Application",
            "value": "Application"
          },
          {
            "name": "ManagedIdentity",
            "value": "ManagedIdentity"
          },
          {
            "name": "Key",
            "value": "Key"
          }
        ]
      }
    },
    "DataMasking": {
      "type": "object",
      "properties": {
        "queryParams": {
          "type": "array",
          "description": "Masking settings for Url query parameters",
          "items": {
            "$ref": "#/definitions/DataMaskingEntity"
          },
          "x-ms-identifiers": []
        },
        "headers": {
          "type": "array",
          "description": "Masking settings for headers",
          "items": {
            "$ref": "#/definitions/DataMaskingEntity"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "DataMaskingEntity": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "The name of an entity to mask (e.g. a name of a header or a query parameter)."
        },
        "mode": {
          "$ref": "#/definitions/DataMaskingMode",
          "description": "Data masking mode."
        }
      }
    },
    "DataMaskingMode": {
      "type": "string",
      "description": "Data masking mode.",
      "enum": [
        "Mask",
        "Hide"
      ],
      "x-ms-enum": {
        "name": "DataMaskingMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Mask",
            "value": "Mask",
            "description": "Mask the value of an entity."
          },
          {
            "name": "Hide",
            "value": "Hide",
            "description": "Hide the presence of an entity."
          }
        ]
      }
    },
    "DeletedServiceContract": {
      "type": "object",
      "description": "Deleted API Management Service information.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeletedServiceContractProperties",
          "description": "Deleted API Management Service details.",
          "x-ms-client-flatten": true
        },
        "location": {
          "type": "string",
          "description": "API Management Service Master Location.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DeletedServiceContractProperties": {
      "type": "object",
      "properties": {
        "serviceId": {
          "type": "string",
          "description": "Fully-qualified API Management Service Resource ID"
        },
        "scheduledPurgeDate": {
          "type": "string",
          "format": "date-time",
          "description": "UTC Date and Time when the service will be automatically purged. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard."
        },
        "deletionDate": {
          "type": "string",
          "format": "date-time",
          "description": "UTC Timestamp when the service was soft-deleted. The date conforms to the following format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard."
        }
      }
    },
    "DeletedServicesCollection": {
      "type": "object",
      "description": "Paged deleted API Management Services List Representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/DeletedServiceContract"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      }
    },
    "DeployConfigurationParameterProperties": {
      "type": "object",
      "description": "Parameters supplied to the Deploy Configuration operation.",
      "properties": {
        "branch": {
          "type": "string",
          "description": "The name of the Git branch from which the configuration is to be deployed to the configuration database."
        },
        "force": {
          "type": "boolean",
          "description": "The value enforcing deleting subscriptions to products that are deleted in this update."
        }
      },
      "required": [
        "branch"
      ]
    },
    "DeployConfigurationParameters": {
      "type": "object",
      "description": "Deploy Tenant Configuration Contract.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeployConfigurationParameterProperties",
          "description": "Deploy Configuration Parameter contract properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "DeveloperPortalStatus": {
      "type": "string",
      "description": "Status of developer portal in this API Management service.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "DeveloperPortalStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Developer Portal is enabled for the service."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Developer Portal is disabled for the service."
          }
        ]
      }
    },
    "DiagnosticCollection": {
      "type": "object",
      "description": "Paged Diagnostic list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/DiagnosticContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "DiagnosticContract": {
      "type": "object",
      "description": "Diagnostic details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DiagnosticContractProperties",
          "description": "Diagnostic entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DiagnosticContractProperties": {
      "type": "object",
      "description": "Diagnostic Entity Properties",
      "properties": {
        "alwaysLog": {
          "$ref": "#/definitions/AlwaysLog",
          "description": "Specifies for what type of messages sampling settings should not apply."
        },
        "loggerId": {
          "type": "string",
          "description": "Resource Id of a target logger."
        },
        "sampling": {
          "$ref": "#/definitions/SamplingSettings",
          "description": "Sampling settings for Diagnostic."
        },
        "frontend": {
          "$ref": "#/definitions/PipelineDiagnosticSettings",
          "description": "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway."
        },
        "backend": {
          "$ref": "#/definitions/PipelineDiagnosticSettings",
          "description": "Diagnostic settings for incoming/outgoing HTTP messages to the Backend"
        },
        "largeLanguageModel": {
          "$ref": "#/definitions/LLMDiagnosticSettings",
          "description": "Large Language Models diagnostic settings"
        },
        "logClientIp": {
          "type": "boolean",
          "description": "Log the ClientIP. Default is false."
        },
        "httpCorrelationProtocol": {
          "$ref": "#/definitions/HttpCorrelationProtocol",
          "description": "Sets correlation protocol to use for Application Insights diagnostics."
        },
        "verbosity": {
          "$ref": "#/definitions/Verbosity",
          "description": "The verbosity level applied to traces emitted by trace policies."
        },
        "operationNameFormat": {
          "$ref": "#/definitions/OperationNameFormat",
          "description": "The format of the Operation Name for Application Insights telemetries. Default is Name."
        },
        "metrics": {
          "type": "boolean",
          "description": "Emit custom metrics via emit-metric policy. Applicable only to Application Insights diagnostic settings."
        }
      },
      "required": [
        "loggerId"
      ]
    },
    "DiagnosticContractUpdateProperties": {
      "type": "object",
      "description": "Diagnostic Entity Properties",
      "properties": {
        "alwaysLog": {
          "$ref": "#/definitions/AlwaysLog",
          "description": "Specifies for what type of messages sampling settings should not apply."
        },
        "loggerId": {
          "type": "string",
          "description": "Resource Id of a target logger."
        },
        "sampling": {
          "$ref": "#/definitions/SamplingSettings",
          "description": "Sampling settings for Diagnostic."
        },
        "frontend": {
          "$ref": "#/definitions/PipelineDiagnosticSettings",
          "description": "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway."
        },
        "backend": {
          "$ref": "#/definitions/PipelineDiagnosticSettings",
          "description": "Diagnostic settings for incoming/outgoing HTTP messages to the Backend"
        },
        "logClientIp": {
          "type": "boolean",
          "description": "Log the ClientIP. Default is false."
        },
        "httpCorrelationProtocol": {
          "$ref": "#/definitions/HttpCorrelationProtocol",
          "description": "Sets correlation protocol to use for Application Insights diagnostics."
        },
        "verbosity": {
          "$ref": "#/definitions/Verbosity",
          "description": "The verbosity level applied to traces emitted by trace policies."
        },
        "operationNameFormat": {
          "$ref": "#/definitions/OperationNameFormat",
          "description": "The format of the Operation Name for Application Insights telemetries. Default is Name."
        },
        "metrics": {
          "type": "boolean",
          "description": "Emit custom metrics via emit-metric policy. Applicable only to Application Insights diagnostic settings."
        }
      }
    },
    "DiagnosticUpdateContract": {
      "type": "object",
      "description": "Diagnostic details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DiagnosticContractUpdateProperties",
          "description": "Diagnostic entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DocumentationCollection": {
      "type": "object",
      "description": "Paged Documentation list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/DocumentationContract"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      }
    },
    "DocumentationContract": {
      "type": "object",
      "description": "Markdown documentation details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DocumentationContractProperties",
          "description": "Markdown Documentation details.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DocumentationContractProperties": {
      "type": "object",
      "description": "Markdown documentation details.",
      "properties": {
        "title": {
          "type": "string",
          "description": "documentation title."
        },
        "content": {
          "type": "string",
          "description": "Markdown documentation content."
        }
      }
    },
    "DocumentationUpdateContract": {
      "type": "object",
      "description": "Documentation update contract details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DocumentationContractProperties",
          "description": "Markdown Documentation details.",
          "x-ms-client-flatten": true
        }
      }
    },
    "EmailTemplateCollection": {
      "type": "object",
      "description": "Paged email template list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/EmailTemplateContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "EmailTemplateContract": {
      "type": "object",
      "description": "Email Template details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EmailTemplateContractProperties",
          "description": "Email Template entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "EmailTemplateContractProperties": {
      "type": "object",
      "description": "Email Template Contract properties.",
      "properties": {
        "subject": {
          "type": "string",
          "description": "Subject of the Template.",
          "minLength": 1,
          "maxLength": 1000
        },
        "body": {
          "type": "string",
          "description": "Email Template Body. This should be a valid XDocument",
          "minLength": 1
        },
        "title": {
          "type": "string",
          "description": "Title of the Template."
        },
        "description": {
          "type": "string",
          "description": "Description of the Email Template."
        },
        "isDefault": {
          "type": "boolean",
          "description": "Whether the template is the default template provided by API Management or has been edited.",
          "readOnly": true
        },
        "parameters": {
          "type": "array",
          "description": "Email Template Parameter values.",
          "items": {
            "$ref": "#/definitions/EmailTemplateParametersContractProperties"
          },
          "x-ms-identifiers": [
            "title"
          ]
        }
      },
      "required": [
        "subject",
        "body"
      ]
    },
    "EmailTemplateParametersContractProperties": {
      "type": "object",
      "description": "Email Template Parameter contract.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Template parameter name.",
          "minLength": 1,
          "maxLength": 256,
          "pattern": "^[A-Za-z0-9-._]+$"
        },
        "title": {
          "type": "string",
          "description": "Template parameter title.",
          "minLength": 1,
          "maxLength": 4096
        },
        "description": {
          "type": "string",
          "description": "Template parameter description.",
          "minLength": 1,
          "maxLength": 256,
          "pattern": "^[A-Za-z0-9-._]+$"
        }
      }
    },
    "EmailTemplateUpdateParameterProperties": {
      "type": "object",
      "description": "Email Template Update Contract properties.",
      "properties": {
        "subject": {
          "type": "string",
          "description": "Subject of the Template.",
          "minLength": 1,
          "maxLength": 1000
        },
        "title": {
          "type": "string",
          "description": "Title of the Template."
        },
        "description": {
          "type": "string",
          "description": "Description of the Email Template."
        },
        "body": {
          "type": "string",
          "description": "Email Template Body. This should be a valid XDocument",
          "minLength": 1
        },
        "parameters": {
          "type": "array",
          "description": "Email Template Parameter values.",
          "items": {
            "$ref": "#/definitions/EmailTemplateParametersContractProperties"
          },
          "x-ms-identifiers": [
            "title"
          ]
        }
      }
    },
    "EmailTemplateUpdateParameters": {
      "type": "object",
      "description": "Email Template update Parameters.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EmailTemplateUpdateParameterProperties",
          "description": "Email Template Update contract properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "EndpointDependency": {
      "type": "object",
      "description": "A domain name that a service is reached at.",
      "properties": {
        "domainName": {
          "type": "string",
          "description": "The domain name of the dependency."
        },
        "endpointDetails": {
          "type": "array",
          "description": "The Ports used when connecting to DomainName.",
          "items": {
            "$ref": "#/definitions/EndpointDetail"
          },
          "x-ms-identifiers": [
            "region",
            "port"
          ]
        }
      }
    },
    "EndpointDetail": {
      "type": "object",
      "description": "Current TCP connectivity information from the Api Management Service to a single endpoint.",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "The port an endpoint is connected to."
        },
        "region": {
          "type": "string",
          "description": "The region of the dependency."
        }
      }
    },
    "ErrorFieldContract": {
      "type": "object",
      "description": "Error Field contract.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Property level error code."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of property-level error."
        },
        "target": {
          "type": "string",
          "description": "Property name."
        }
      }
    },
    "ErrorResponseBody": {
      "type": "object",
      "description": "Error Body contract.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of the error."
        },
        "details": {
          "type": "array",
          "description": "The list of invalid fields send in request, in case of validation error.",
          "items": {
            "$ref": "#/definitions/ErrorFieldContract"
          },
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        }
      }
    },
    "ExportApi": {
      "type": "string",
      "enum": [
        "true"
      ],
      "x-ms-enum": {
        "name": "ExportApi",
        "modelAsString": true,
        "values": [
          {
            "name": "true",
            "value": "true"
          }
        ]
      }
    },
    "ExportFormat": {
      "type": "string",
      "enum": [
        "swagger-link",
        "wsdl-link",
        "wadl-link",
        "openapi-link",
        "openapi+json-link"
      ],
      "x-ms-enum": {
        "name": "ExportFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "Swagger",
            "value": "swagger-link",
            "description": "Export the Api Definition in OpenAPI 2.0 Specification as JSON document to the Storage Blob."
          },
          {
            "name": "Wsdl",
            "value": "wsdl-link",
            "description": "Export the Api Definition in WSDL Schema to Storage Blob. This is only supported for APIs of Type `soap`"
          },
          {
            "name": "Wadl",
            "value": "wadl-link",
            "description": "Export the Api Definition in WADL Schema to Storage Blob."
          },
          {
            "name": "Openapi",
            "value": "openapi-link",
            "description": "Export the Api Definition in OpenAPI 3.0 Specification as YAML document to Storage Blob."
          },
          {
            "name": "OpenapiJson",
            "value": "openapi+json-link",
            "description": "Export the Api Definition in OpenAPI 3.0 Specification as JSON document to Storage Blob."
          }
        ]
      }
    },
    "ExportResultFormat": {
      "type": "string",
      "description": "Format in which the API Details are exported to the Storage Blob with Sas Key valid for 5 minutes.",
      "enum": [
        "swagger-link-json",
        "wadl-link-json",
        "wsdl-link+xml",
        "openapi-link"
      ],
      "x-ms-enum": {
        "name": "ExportResultFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "Swagger",
            "value": "swagger-link-json",
            "description": "The API Definition is exported in OpenAPI Specification 2.0 format to the Storage Blob."
          },
          {
            "name": "Wadl",
            "value": "wadl-link-json",
            "description": "Export the API Definition in WADL Schema to Storage Blob."
          },
          {
            "name": "Wsdl",
            "value": "wsdl-link+xml",
            "description": "The API Definition is exported in WSDL Schema to Storage Blob. This is only supported for APIs of Type `soap`"
          },
          {
            "name": "OpenApi",
            "value": "openapi-link",
            "description": "Export the API Definition in OpenAPI Specification 3.0 to Storage Blob."
          }
        ]
      }
    },
    "FailureStatusCodeRange": {
      "type": "object",
      "description": "The failure http status code range",
      "properties": {
        "min": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum http status code.",
          "minimum": 200,
          "maximum": 599
        },
        "max": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum http status code.",
          "minimum": 200,
          "maximum": 599
        }
      }
    },
    "FrontendConfiguration": {
      "type": "object",
      "description": "Information regarding how the gateway should be exposed.",
      "properties": {
        "defaultHostname": {
          "type": "string",
          "description": "The default hostname of the data-plane gateway to which requests can be sent. This is only applicable for API gateway with Standard SKU.",
          "readOnly": true
        }
      }
    },
    "GatewayCertificateAuthorityCollection": {
      "type": "object",
      "description": "Paged Gateway certificate authority list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/GatewayCertificateAuthorityContract"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      }
    },
    "GatewayCertificateAuthorityContract": {
      "type": "object",
      "description": "Gateway certificate authority details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GatewayCertificateAuthorityContractProperties",
          "description": "Gateway certificate authority details.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "GatewayCertificateAuthorityContractProperties": {
      "type": "object",
      "description": "Gateway certificate authority details.",
      "properties": {
        "isTrusted": {
          "type": "boolean",
          "description": "Determines whether certificate authority is trusted."
        }
      }
    },
    "GatewayCollection": {
      "type": "object",
      "description": "Paged Gateway list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/GatewayContract"
          },
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      }
    },
    "GatewayConfigConnectionBaseProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The current provisioning state of the API Management gateway config connection",
          "readOnly": true
        },
        "sourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The link to the API Management service workspace.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ApiManagement/service/workspaces"
              }
            ]
          }
        },
        "defaultHostname": {
          "type": "string",
          "description": "The default hostname of the data-plane gateway.",
          "readOnly": true
        },
        "hostnames": {
          "type": "array",
          "description": "The hostnames of the data-plane gateway to which requests can be sent.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GatewayConfigurationApi": {
      "type": "object",
      "description": "Information regarding the Configuration API of the API Management gateway. This is only applicable for API gateway with Standard SKU.",
      "properties": {
        "hostname": {
          "type": "string",
          "description": "Hostname to which the agent connects to propagate configuration to the cloud.",
          "readOnly": true
        }
      }
    },
    "GatewayContract": {
      "type": "object",
      "description": "Gateway details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GatewayContractProperties",
          "description": "Gateway details.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "GatewayContractProperties": {
      "type": "object",
      "description": "Properties of the Gateway contract.",
      "properties": {
        "locationData": {
          "$ref": "#/definitions/ResourceLocationDataContract",
          "description": "Gateway location."
        },
        "description": {
          "type": "string",
          "description": "Gateway description",
          "maxLength": 1000
        }
      }
    },
    "GatewayDebugCredentialsContract": {
      "type": "object",
      "description": "Gateway debug credentials.",
      "properties": {
        "token": {
          "type": "string",
          "format": "password",
          "description": "Gateway debug token.",
          "x-ms-secret": true
        }
      }
    },
    "GatewayHostnameConfigurationCollection": {
      "type": "object",
      "description": "Paged Gateway hostname configuration list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/GatewayHostnameConfigurationContract"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      }
    },
    "GatewayHostnameConfigurationContract": {
      "type": "object",
      "description": "Gateway hostname configuration details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GatewayHostnameConfigurationContractProperties",
          "description": "Gateway hostname configuration details.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "GatewayHostnameConfigurationContractProperties": {
      "type": "object",
      "description": "Gateway hostname configuration details.",
      "properties": {
        "hostname": {
          "type": "string",
          "description": "Hostname value. Supports valid domain name, partial or full wildcard"
        },
        "certificateId": {
          "type": "string",
          "description": "Identifier of Certificate entity that will be used for TLS connection establishment"
        },
        "negotiateClientCertificate": {
          "type": "boolean",
          "description": "Determines whether gateway requests client certificate"
        },
        "tls10Enabled": {
          "type": "boolean",
          "description": "Specifies if TLS 1.0 is supported"
        },
        "tls11Enabled": {
          "type": "boolean",
          "description": "Specifies if TLS 1.1 is supported"
        },
        "http2Enabled": {
          "type": "boolean",
          "description": "Specifies if HTTP/2.0 is supported"
        }
      }
    },
    "GatewayKeyRegenerationRequestContract": {
      "type": "object",
      "description": "Gateway key regeneration request contract properties.",
      "properties": {
        "keyType": {
          "$ref": "#/definitions/KeyType",
          "description": "The Key being regenerated."
        }
      },
      "required": [
        "keyType"
      ]
    },
    "GatewayKeysContract": {
      "type": "object",
      "description": "Gateway authentication keys.",
      "properties": {
        "primary": {
          "type": "string",
          "description": "Primary gateway key."
        },
        "secondary": {
          "type": "string",
          "description": "Secondary gateway key."
        }
      }
    },
    "GatewayListDebugCredentialsContract": {
      "type": "object",
      "description": "List debug credentials properties.",
      "properties": {
        "credentialsExpireAfter": {
          "type": "string",
          "format": "duration",
          "description": "Credentials expiration in ISO8601 format. Maximum duration of the credentials is PT1H. When property is not specified, them value PT1H is used."
        },
        "purposes": {
          "type": "array",
          "description": "Purposes of debug credential.",
          "items": {
            "$ref": "#/definitions/GatewayListDebugCredentialsContractPurpose"
          }
        },
        "apiId": {
          "type": "string",
          "format": "arm-id",
          "description": "Full resource Id of an API.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ApiManagement/service/apis"
              },
              {
                "type": "Microsoft.ApiManagement/service/workspaces/apis"
              }
            ]
          }
        }
      },
      "required": [
        "purposes",
        "apiId"
      ]
    },
    "GatewayListDebugCredentialsContractPurpose": {
      "type": "string",
      "description": "Purpose of debug credential.",
      "enum": [
        "tracing"
      ],
      "x-ms-enum": {
        "name": "GatewayListDebugCredentialsContractPurpose",
        "modelAsString": true,
        "values": [
          {
            "name": "tracing",
            "value": "tracing",
            "description": "The tracing purpose."
          }
        ]
      }
    },
    "GatewayListTraceContract": {
      "type": "object",
      "description": "List trace properties.",
      "properties": {
        "traceId": {
          "type": "string",
          "description": "Trace id."
        }
      }
    },
    "GatewayResourceSkuResult": {
      "type": "object",
      "description": "Describes an available API Management gateway SKU.",
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "The type of resource the SKU applies to.",
          "readOnly": true
        },
        "sku": {
          "$ref": "#/definitions/GatewaySku",
          "description": "Specifies API Management gateway SKU.",
          "readOnly": true
        },
        "capacity": {
          "$ref": "#/definitions/GatewaySkuCapacity",
          "description": "Specifies the number of API Management gateway units.",
          "readOnly": true
        }
      }
    },
    "GatewayResourceSkuResults": {
      "type": "object",
      "description": "The API Management gateway SKUs operation response.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of skus available for the gateway.",
          "items": {
            "$ref": "#/definitions/GatewayResourceSkuResult"
          },
          "x-ms-identifiers": [
            "resourceType",
            "sku/name"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of API Management gateway Skus."
        }
      },
      "required": [
        "value"
      ]
    },
    "GatewaySku": {
      "type": "object",
      "description": "Describes an available API Management SKU for gateways.",
      "properties": {
        "name": {
          "$ref": "#/definitions/ApiGatewaySkuType",
          "description": "Name of the Sku."
        }
      }
    },
    "GatewaySkuCapacity": {
      "type": "object",
      "description": "Describes scaling information of a SKU.",
      "properties": {
        "minimum": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum capacity.",
          "readOnly": true
        },
        "maximum": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum capacity that can be set.",
          "readOnly": true
        },
        "default": {
          "type": "integer",
          "format": "int32",
          "description": "The default capacity.",
          "readOnly": true
        },
        "scaleType": {
          "$ref": "#/definitions/GatewaySkuCapacityScaleType",
          "description": "The scale type applicable to the sku.",
          "readOnly": true
        }
      }
    },
    "GatewaySkuCapacityScaleType": {
      "type": "string",
      "description": "The scale type applicable to the sku.",
      "enum": [
        "Automatic",
        "Manual",
        "None"
      ],
      "x-ms-enum": {
        "name": "GatewaySkuCapacityScaleType",
        "modelAsString": true,
        "values": [
          {
            "name": "Automatic",
            "value": "Automatic",
            "description": "Supported scale type automatic."
          },
          {
            "name": "Manual",
            "value": "Manual",
            "description": "Supported scale type manual."
          },
          {
            "name": "None",
            "value": "None",
            "description": "Scaling not supported."
          }
        ]
      }
    },
    "GatewayTokenContract": {
      "type": "object",
      "description": "Gateway access token.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Shared Access Authentication token value for the Gateway."
        }
      }
    },
    "GatewayTokenRequestContract": {
      "type": "object",
      "description": "Gateway token request contract properties.",
      "properties": {
        "keyType": {
          "type": "string",
          "description": "The Key to be used to generate gateway token.",
          "default": "primary",
          "enum": [
            "primary",
            "secondary"
          ],
          "x-ms-enum": {
            "name": "KeyType",
            "modelAsString": false
          }
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "The Expiry time of the Token. Maximum token expiry time is set to 30 days. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        }
      },
      "required": [
        "keyType",
        "expiry"
      ]
    },
    "GatewayTraceContract": {
      "type": "object",
      "description": "Trace collected in gateway.",
      "additionalProperties": {}
    },
    "GenerateSsoUrlResult": {
      "type": "object",
      "description": "Generate SSO Url operations response details.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Redirect Url containing the SSO URL value."
        }
      }
    },
    "GlobalSchemaCollection": {
      "type": "object",
      "description": "The response of the list schema operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Global Schema Contract value.",
          "items": {
            "$ref": "#/definitions/GlobalSchemaContract"
          },
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      }
    },
    "GlobalSchemaContract": {
      "type": "object",
      "description": "Global Schema Contract details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GlobalSchemaContractProperties",
          "description": "Properties of the Global Schema.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "GlobalSchemaContractProperties": {
      "type": "object",
      "description": "Schema create or update contract Properties.",
      "properties": {
        "schemaType": {
          "$ref": "#/definitions/SchemaType",
          "description": "Schema Type. Immutable.",
          "x-ms-client-name": "SchemaType"
        },
        "description": {
          "type": "string",
          "description": "Free-form schema entity description."
        },
        "value": {
          "description": "Json-encoded string for non json-based schema."
        },
        "document": {
          "description": "Global Schema document object for json-based schema formats(e.g. json schema).",
          "x-ms-client-flatten": true
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state",
          "readOnly": true
        }
      },
      "required": [
        "schemaType"
      ]
    },
    "GrantType": {
      "type": "string",
      "enum": [
        "authorizationCode",
        "implicit",
        "resourceOwnerPassword",
        "clientCredentials"
      ],
      "x-ms-enum": {
        "name": "GrantType",
        "modelAsString": true,
        "values": [
          {
            "name": "authorizationCode",
            "value": "authorizationCode",
            "description": "Authorization Code Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.1."
          },
          {
            "name": "implicit",
            "value": "implicit",
            "description": "Implicit Code Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.2."
          },
          {
            "name": "resourceOwnerPassword",
            "value": "resourceOwnerPassword",
            "description": "Resource Owner Password Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.3."
          },
          {
            "name": "clientCredentials",
            "value": "clientCredentials",
            "description": "Client Credentials Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.4."
          }
        ]
      }
    },
    "GroupCollection": {
      "type": "object",
      "description": "Paged Group list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/GroupContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "GroupContract": {
      "type": "object",
      "description": "Contract details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GroupContractProperties",
          "description": "Group entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "GroupContractProperties": {
      "type": "object",
      "description": "Group contract Properties.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Group name.",
          "minLength": 1,
          "maxLength": 300
        },
        "description": {
          "type": "string",
          "description": "Group description. Can contain HTML formatting tags.",
          "maxLength": 1000
        },
        "builtIn": {
          "type": "boolean",
          "description": "true if the group is one of the three system groups (Administrators, Developers, or Guests); otherwise false.",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/GroupType",
          "description": "Group type."
        },
        "externalId": {
          "type": "string",
          "description": "For external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null."
        }
      },
      "required": [
        "displayName"
      ]
    },
    "GroupCreateParameters": {
      "type": "object",
      "description": "Parameters supplied to the Create Group operation.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GroupCreateParametersProperties",
          "description": "Properties supplied to Create Group operation.",
          "x-ms-client-flatten": true
        }
      }
    },
    "GroupCreateParametersProperties": {
      "type": "object",
      "description": "Parameters supplied to the Create Group operation.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Group name.",
          "minLength": 1,
          "maxLength": 300
        },
        "description": {
          "type": "string",
          "description": "Group description."
        },
        "type": {
          "$ref": "#/definitions/GroupType",
          "description": "Group type."
        },
        "externalId": {
          "type": "string",
          "description": "Identifier of the external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null."
        }
      },
      "required": [
        "displayName"
      ]
    },
    "GroupType": {
      "type": "string",
      "description": "Group type.",
      "enum": [
        "custom",
        "system",
        "external"
      ],
      "x-ms-enum": {
        "name": "GroupType",
        "modelAsString": false
      }
    },
    "GroupUpdateParameters": {
      "type": "object",
      "description": "Parameters supplied to the Update Group operation.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GroupUpdateParametersProperties",
          "description": "Group entity update contract properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "GroupUpdateParametersProperties": {
      "type": "object",
      "description": "Parameters supplied to the Update Group operation.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Group name.",
          "minLength": 1,
          "maxLength": 300
        },
        "description": {
          "type": "string",
          "description": "Group description."
        },
        "type": {
          "$ref": "#/definitions/GroupType",
          "description": "Group type."
        },
        "externalId": {
          "type": "string",
          "description": "Identifier of the external groups, this property contains the id of the group from the external identity provider, e.g. for Azure Active Directory `aad://<tenant>.onmicrosoft.com/groups/<group object id>`; otherwise the value is null."
        }
      }
    },
    "HTTPHeader": {
      "type": "object",
      "description": "HTTP header and it's value.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Header name."
        },
        "value": {
          "type": "string",
          "description": "Header value."
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "HostnameConfiguration": {
      "type": "object",
      "description": "Custom hostname configuration.",
      "properties": {
        "type": {
          "$ref": "#/definitions/HostnameType",
          "description": "Hostname type."
        },
        "hostName": {
          "type": "string",
          "description": "Hostname to configure on the Api Management service."
        },
        "keyVaultId": {
          "type": "string",
          "description": "Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update of ssl certificate will not work. This requires Api Management service to be configured with aka.ms/apimmsi. The secret should be of type *application/x-pkcs12*"
        },
        "identityClientId": {
          "type": "string",
          "description": "System or User Assigned Managed identity clientId as generated by Azure AD, which has GET access to the keyVault containing the SSL certificate."
        },
        "encodedCertificate": {
          "type": "string",
          "description": "Base64 Encoded certificate."
        },
        "certificatePassword": {
          "type": "string",
          "description": "Certificate Password."
        },
        "defaultSslBinding": {
          "type": "boolean",
          "description": "Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to gateway Hostname Type.",
          "default": false
        },
        "negotiateClientCertificate": {
          "type": "boolean",
          "description": "Specify true to always negotiate client certificate on the hostname. Default Value is false.",
          "default": false
        },
        "certificate": {
          "$ref": "#/definitions/CertificateInformation",
          "description": "Certificate information."
        },
        "certificateSource": {
          "$ref": "#/definitions/CertificateSource",
          "description": "Certificate Source."
        },
        "certificateStatus": {
          "$ref": "#/definitions/CertificateStatus",
          "description": "Certificate Status."
        }
      },
      "required": [
        "type",
        "hostName"
      ]
    },
    "HostnameType": {
      "type": "string",
      "description": "Hostname type.",
      "enum": [
        "Proxy",
        "Portal",
        "Management",
        "Scm",
        "DeveloperPortal",
        "ConfigurationApi"
      ],
      "x-ms-enum": {
        "name": "HostnameType",
        "modelAsString": true,
        "values": [
          {
            "name": "Proxy",
            "value": "Proxy"
          },
          {
            "name": "Portal",
            "value": "Portal"
          },
          {
            "name": "Management",
            "value": "Management"
          },
          {
            "name": "Scm",
            "value": "Scm"
          },
          {
            "name": "DeveloperPortal",
            "value": "DeveloperPortal"
          },
          {
            "name": "ConfigurationApi",
            "value": "ConfigurationApi"
          }
        ]
      }
    },
    "HttpCorrelationProtocol": {
      "type": "string",
      "description": "Sets correlation protocol to use for Application Insights diagnostics.",
      "enum": [
        "None",
        "Legacy",
        "W3C"
      ],
      "x-ms-enum": {
        "name": "HttpCorrelationProtocol",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "Do not read and inject correlation headers."
          },
          {
            "name": "Legacy",
            "value": "Legacy",
            "description": "Inject Request-Id and Request-Context headers with request correlation data. See https://github.com/dotnet/corefx/blob/master/src/System.Diagnostics.DiagnosticSource/src/HttpCorrelationProtocol.md."
          },
          {
            "name": "W3C",
            "value": "W3C",
            "description": "Inject Trace Context headers. See https://w3c.github.io/trace-context."
          }
        ]
      }
    },
    "HttpMessageDiagnostic": {
      "type": "object",
      "description": "Http message diagnostic settings.",
      "properties": {
        "headers": {
          "type": "array",
          "description": "Array of HTTP Headers to log.",
          "items": {
            "type": "string"
          }
        },
        "body": {
          "$ref": "#/definitions/BodyDiagnosticSettings",
          "description": "Body logging settings."
        },
        "dataMasking": {
          "$ref": "#/definitions/DataMasking",
          "description": "Data masking settings."
        }
      }
    },
    "IdentityProviderBaseParameters": {
      "type": "object",
      "description": "Identity Provider Base Parameter Properties.",
      "properties": {
        "type": {
          "$ref": "#/definitions/IdentityProviderType",
          "description": "Identity Provider Type identifier."
        },
        "signinTenant": {
          "type": "string",
          "description": "The TenantId to use instead of Common when logging into Active Directory"
        },
        "allowedTenants": {
          "type": "array",
          "description": "List of Allowed Tenants when configuring Azure Active Directory login.",
          "maxItems": 32,
          "items": {
            "type": "string"
          }
        },
        "authority": {
          "type": "string",
          "description": "OpenID Connect discovery endpoint hostname for AAD or AAD B2C."
        },
        "signupPolicyName": {
          "type": "string",
          "description": "Signup Policy Name. Only applies to AAD B2C Identity Provider.",
          "minLength": 1
        },
        "signinPolicyName": {
          "type": "string",
          "description": "Signin Policy Name. Only applies to AAD B2C Identity Provider.",
          "minLength": 1
        },
        "profileEditingPolicyName": {
          "type": "string",
          "description": "Profile Editing Policy Name. Only applies to AAD B2C Identity Provider.",
          "minLength": 1
        },
        "passwordResetPolicyName": {
          "type": "string",
          "description": "Password Reset Policy Name. Only applies to AAD B2C Identity Provider.",
          "minLength": 1
        },
        "clientLibrary": {
          "type": "string",
          "description": "The client library to be used in the developer portal. Only applies to AAD and AAD B2C Identity Provider.",
          "minLength": 0,
          "maxLength": 16
        }
      }
    },
    "IdentityProviderContract": {
      "type": "object",
      "description": "Identity Provider details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IdentityProviderContractProperties",
          "description": "Identity Provider contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "IdentityProviderContractProperties": {
      "type": "object",
      "description": "The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure Active Directory which can be used to enable access to the API Management service developer portal for all users.",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.",
          "minLength": 1
        },
        "clientSecret": {
          "type": "string",
          "format": "password",
          "description": "Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
          "minLength": 1,
          "x-ms-secret": true
        },
        "certificateId": {
          "type": "string",
          "format": "arm-id",
          "description": "Certificate full resource ID used in external Identity Provider",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ApiManagement/service/certificates"
              }
            ]
          }
        }
      },
      "required": [
        "clientId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/IdentityProviderBaseParameters"
        }
      ]
    },
    "IdentityProviderCreateContract": {
      "type": "object",
      "description": "Identity Provider details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IdentityProviderCreateContractProperties",
          "description": "Identity Provider contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "IdentityProviderCreateContractProperties": {
      "type": "object",
      "description": "The external Identity Providers like Facebook, Google, Microsoft, Twitter or Azure Active Directory which can be used to enable access to the API Management service developer portal for all users.",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.",
          "minLength": 1
        },
        "clientSecret": {
          "type": "string",
          "format": "password",
          "description": "Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
          "minLength": 1,
          "x-ms-secret": true
        },
        "certificateId": {
          "type": "string",
          "format": "arm-id",
          "description": "Certificate full resource ID used in external Identity Provider",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ApiManagement/service/certificates"
              }
            ]
          }
        }
      },
      "required": [
        "clientId",
        "clientSecret"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/IdentityProviderBaseParameters"
        }
      ]
    },
    "IdentityProviderList": {
      "type": "object",
      "description": "List of all the Identity Providers configured on the service instance.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Identity Provider configuration values.",
          "items": {
            "$ref": "#/definitions/IdentityProviderContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "IdentityProviderType": {
      "type": "string",
      "enum": [
        "facebook",
        "google",
        "microsoft",
        "twitter",
        "aad",
        "aadB2C"
      ],
      "x-ms-enum": {
        "name": "IdentityProviderType",
        "modelAsString": true,
        "values": [
          {
            "name": "facebook",
            "value": "facebook",
            "description": "Facebook as Identity provider."
          },
          {
            "name": "google",
            "value": "google",
            "description": "Google as Identity provider."
          },
          {
            "name": "microsoft",
            "value": "microsoft",
            "description": "Microsoft Live as Identity provider."
          },
          {
            "name": "twitter",
            "value": "twitter",
            "description": "Twitter as Identity provider."
          },
          {
            "name": "aad",
            "value": "aad",
            "description": "Azure Active Directory as Identity provider."
          },
          {
            "name": "aadB2C",
            "value": "aadB2C",
            "description": "Azure Active Directory B2C as Identity provider."
          }
        ]
      }
    },
    "IdentityProviderUpdateParameters": {
      "type": "object",
      "description": "Parameters supplied to update Identity Provider",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IdentityProviderUpdateProperties",
          "description": "Identity Provider update properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "IdentityProviderUpdateProperties": {
      "type": "object",
      "description": "Parameters supplied to the Update Identity Provider operation.",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "Client Id of the Application in the external Identity Provider. It is App ID for Facebook login, Client ID for Google login, App ID for Microsoft.",
          "minLength": 1
        },
        "clientSecret": {
          "type": "string",
          "format": "password",
          "description": "Client secret of the Application in external Identity Provider, used to authenticate login request. For example, it is App Secret for Facebook login, API Key for Google login, Public Key for Microsoft.",
          "minLength": 1,
          "x-ms-secret": true
        },
        "certificateId": {
          "type": "string",
          "format": "arm-id",
          "description": "Certificate full resource ID used in external Identity Provider",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ApiManagement/service/certificates"
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/IdentityProviderBaseParameters"
        }
      ]
    },
    "IssueAttachmentCollection": {
      "type": "object",
      "description": "Paged Issue Attachment list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Issue Attachment values.",
          "items": {
            "$ref": "#/definitions/IssueAttachmentContract"
          },
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      }
    },
    "IssueAttachmentContract": {
      "type": "object",
      "description": "Issue Attachment Contract details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IssueAttachmentContractProperties",
          "description": "Properties of the Issue Attachment.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "IssueAttachmentContractProperties": {
      "type": "object",
      "description": "Issue Attachment contract Properties.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Filename by which the binary data will be saved."
        },
        "contentFormat": {
          "type": "string",
          "description": "Either 'link' if content is provided via an HTTP link or the MIME type of the Base64-encoded binary data provided in the 'content' property."
        },
        "content": {
          "type": "string",
          "description": "An HTTP link or Base64-encoded binary data."
        }
      },
      "required": [
        "title",
        "contentFormat",
        "content"
      ]
    },
    "IssueCollection": {
      "type": "object",
      "description": "Paged Issue list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Issue values.",
          "items": {
            "$ref": "#/definitions/IssueContract"
          },
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      }
    },
    "IssueCommentCollection": {
      "type": "object",
      "description": "Paged Issue Comment list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Issue Comment values.",
          "items": {
            "$ref": "#/definitions/IssueCommentContract"
          },
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      }
    },
    "IssueCommentContract": {
      "type": "object",
      "description": "Issue Comment Contract details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IssueCommentContractProperties",
          "description": "Properties of the Issue Comment.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "IssueCommentContractProperties": {
      "type": "object",
      "description": "Issue Comment contract Properties.",
      "properties": {
        "text": {
          "type": "string",
          "description": "Comment text."
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the comment was created."
        },
        "userId": {
          "type": "string",
          "description": "A resource identifier for the user who left the comment."
        }
      },
      "required": [
        "text",
        "userId"
      ]
    },
    "IssueContract": {
      "type": "object",
      "description": "Issue Contract details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IssueContractProperties",
          "description": "Properties of the Issue.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "IssueContractBaseProperties": {
      "type": "object",
      "description": "Issue contract Base Properties.",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the issue was created."
        },
        "state": {
          "$ref": "#/definitions/State",
          "description": "Status of the issue."
        },
        "apiId": {
          "type": "string",
          "description": "A resource identifier for the API the issue was created for."
        }
      }
    },
    "IssueContractProperties": {
      "type": "object",
      "description": "Issue contract Properties.",
      "properties": {
        "title": {
          "type": "string",
          "description": "The issue title."
        },
        "description": {
          "type": "string",
          "description": "Text describing the issue."
        },
        "userId": {
          "type": "string",
          "description": "A resource identifier for the user created the issue."
        }
      },
      "required": [
        "title",
        "description",
        "userId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/IssueContractBaseProperties"
        }
      ]
    },
    "IssueType": {
      "type": "string",
      "description": "The type of issue.",
      "enum": [
        "Unknown",
        "AgentStopped",
        "GuestFirewall",
        "DnsResolution",
        "SocketBind",
        "NetworkSecurityRule",
        "UserDefinedRoute",
        "PortThrottled",
        "Platform"
      ],
      "x-ms-enum": {
        "name": "IssueType",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "AgentStopped",
            "value": "AgentStopped"
          },
          {
            "name": "GuestFirewall",
            "value": "GuestFirewall"
          },
          {
            "name": "DnsResolution",
            "value": "DnsResolution"
          },
          {
            "name": "SocketBind",
            "value": "SocketBind"
          },
          {
            "name": "NetworkSecurityRule",
            "value": "NetworkSecurityRule"
          },
          {
            "name": "UserDefinedRoute",
            "value": "UserDefinedRoute"
          },
          {
            "name": "PortThrottled",
            "value": "PortThrottled"
          },
          {
            "name": "Platform",
            "value": "Platform"
          }
        ]
      }
    },
    "IssueUpdateContract": {
      "type": "object",
      "description": "Issue update Parameters.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IssueUpdateContractProperties",
          "description": "Issue entity Update contract properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "IssueUpdateContractProperties": {
      "type": "object",
      "description": "Issue contract Update Properties.",
      "properties": {
        "title": {
          "type": "string",
          "description": "The issue title."
        },
        "description": {
          "type": "string",
          "description": "Text describing the issue."
        },
        "userId": {
          "type": "string",
          "description": "A resource identifier for the user created the issue."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/IssueContractBaseProperties"
        }
      ]
    },
    "KeyType": {
      "type": "string",
      "description": "The Key to be used to generate token for user.",
      "enum": [
        "primary",
        "secondary"
      ],
      "x-ms-enum": {
        "name": "KeyType",
        "modelAsString": false
      }
    },
    "KeyVaultContractCreateProperties": {
      "type": "object",
      "description": "Create keyVault contract details.",
      "properties": {
        "secretIdentifier": {
          "type": "string",
          "description": "Key vault secret identifier for fetching secret. Providing a versioned secret will prevent auto-refresh. This requires API Management service to be configured with aka.ms/apimmsi"
        },
        "identityClientId": {
          "type": "string",
          "description": "Null for SystemAssignedIdentity or Client Id for UserAssignedIdentity , which will be used to access key vault secret."
        }
      }
    },
    "KeyVaultContractProperties": {
      "type": "object",
      "description": "KeyVault contract details.",
      "properties": {
        "lastStatus": {
          "$ref": "#/definitions/KeyVaultLastAccessStatusContractProperties",
          "description": "Last time sync and refresh status of secret from key vault."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/KeyVaultContractCreateProperties"
        }
      ]
    },
    "KeyVaultLastAccessStatusContractProperties": {
      "type": "object",
      "description": "Issue contract Update Properties.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Last status code for sync and refresh of secret from key vault."
        },
        "message": {
          "type": "string",
          "description": "Details of the error else empty."
        },
        "timeStampUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Last time secret was accessed. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        }
      }
    },
    "KeyVaultRefreshState": {
      "type": "string",
      "enum": [
        "true",
        "false"
      ],
      "x-ms-enum": {
        "name": "KeyVaultRefreshState",
        "modelAsString": true,
        "values": [
          {
            "name": "true",
            "value": "true",
            "description": "Entities for which KeyVault refresh failed."
          },
          {
            "name": "false",
            "value": "false",
            "description": "Entities for which KeyVault refresh succeeded"
          }
        ]
      }
    },
    "LLMDiagnosticSettings": {
      "type": "object",
      "description": "Diagnostic settings for Large Language Models",
      "properties": {
        "logs": {
          "$ref": "#/definitions/Llm-diagnostic-settings",
          "description": "Specifies whether default diagnostic should be enabled for Large Language Models or not."
        },
        "requests": {
          "$ref": "#/definitions/LLMMessageDiagnosticSettings",
          "description": "Diagnostic settings for Large Language Models requests."
        },
        "responses": {
          "$ref": "#/definitions/LLMMessageDiagnosticSettings",
          "description": "Diagnostic settings for Large Language Models responses."
        }
      }
    },
    "LLMMessageDiagnosticSettings": {
      "type": "object",
      "description": "Diagnostic settings for Large Language Models Messages",
      "properties": {
        "messages": {
          "$ref": "#/definitions/Llm-message-log-types",
          "description": "Specifies which message should be logged. Currently there is only 'all' option."
        },
        "maxSizeInBytes": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum size of message to logs in bytes. The default size is 32KB.",
          "minimum": 1,
          "maximum": 262144
        }
      }
    },
    "LegacyApiState": {
      "type": "string",
      "description": "Indication whether or not the legacy Configuration API (v1) should be exposed on the API Management service. Value is optional but must be 'Enabled' or 'Disabled'. If 'Disabled', legacy Configuration API (v1) will not be available for self-hosted gateways. Default value is 'Enabled'",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "LegacyApiState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Legacy Configuration API (v1) is enabled for the service and self-hosted gateways can connect to it."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Legacy Configuration API (v1) is disabled for the service and self-hosted gateways can not connect to it."
          }
        ]
      }
    },
    "LegacyPortalStatus": {
      "type": "string",
      "description": "Status of legacy portal in the API Management service.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "LegacyPortalStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Legacy Portal is enabled for the service."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Legacy Portal is disabled for the service."
          }
        ]
      }
    },
    "Llm-diagnostic-settings": {
      "type": "string",
      "enum": [
        "enabled",
        "disabled"
      ],
      "x-ms-enum": {
        "name": "Llm-diagnostic-settings",
        "modelAsString": true,
        "values": [
          {
            "name": "enabled",
            "value": "enabled",
            "description": "Default LLM logs are enabled."
          },
          {
            "name": "disabled",
            "value": "disabled",
            "description": "Default LLM logs are disabled."
          }
        ]
      }
    },
    "Llm-message-log-types": {
      "type": "string",
      "enum": [
        "all"
      ],
      "x-ms-enum": {
        "name": "Llm-message-log-types",
        "modelAsString": true,
        "values": [
          {
            "name": "all",
            "value": "all",
            "description": "Log all messages."
          }
        ]
      }
    },
    "LoggerCollection": {
      "type": "object",
      "description": "Paged Logger list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Logger values.",
          "items": {
            "$ref": "#/definitions/LoggerContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "LoggerContract": {
      "type": "object",
      "description": "Logger details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LoggerContractProperties",
          "description": "Logger entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "LoggerContractProperties": {
      "type": "object",
      "description": "The Logger entity in API Management represents an event sink that you can use to log API Management events. Currently the Logger entity supports logging API Management events to Azure Event Hubs.",
      "properties": {
        "loggerType": {
          "$ref": "#/definitions/LoggerType",
          "description": "Logger type."
        },
        "description": {
          "type": "string",
          "description": "Logger description.",
          "maxLength": 256
        },
        "credentials": {
          "type": "object",
          "description": "The name and SendRule connection string of the event hub for azureEventHub logger.\nInstrumentation key for applicationInsights logger.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "isBuffered": {
          "type": "boolean",
          "description": "Whether records are buffered in the logger before publishing. Default is assumed to be true."
        },
        "resourceId": {
          "type": "string",
          "description": "Azure Resource Id of a log target (either Azure Event Hub resource or Azure Application Insights resource)."
        }
      },
      "required": [
        "loggerType"
      ]
    },
    "LoggerType": {
      "type": "string",
      "description": "Logger type.",
      "enum": [
        "azureEventHub",
        "applicationInsights",
        "azureMonitor"
      ],
      "x-ms-enum": {
        "name": "LoggerType",
        "modelAsString": true,
        "values": [
          {
            "name": "azureEventHub",
            "value": "azureEventHub",
            "description": "Azure Event Hub as log destination."
          },
          {
            "name": "applicationInsights",
            "value": "applicationInsights",
            "description": "Azure Application Insights as log destination."
          },
          {
            "name": "azureMonitor",
            "value": "azureMonitor",
            "description": "Azure Monitor"
          }
        ]
      }
    },
    "LoggerUpdateContract": {
      "type": "object",
      "description": "Logger update contract.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LoggerUpdateParameters",
          "description": "Logger entity update contract properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "LoggerUpdateParameters": {
      "type": "object",
      "description": "Parameters supplied to the Update Logger operation.",
      "properties": {
        "loggerType": {
          "$ref": "#/definitions/LoggerType",
          "description": "Logger type."
        },
        "description": {
          "type": "string",
          "description": "Logger description."
        },
        "credentials": {
          "type": "object",
          "description": "Logger credentials.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "isBuffered": {
          "type": "boolean",
          "description": "Whether records are buffered in the logger before publishing. Default is assumed to be true."
        }
      }
    },
    "Method": {
      "type": "string",
      "description": "The HTTP method to be used.",
      "enum": [
        "GET",
        "POST"
      ],
      "x-ms-enum": {
        "name": "Method",
        "modelAsString": true,
        "values": [
          {
            "name": "GET",
            "value": "GET"
          },
          {
            "name": "POST",
            "value": "POST"
          }
        ]
      }
    },
    "MigrateToStv2Contract": {
      "type": "object",
      "description": "Describes an available API Management SKU.",
      "properties": {
        "mode": {
          "$ref": "#/definitions/MigrateToStv2Mode",
          "description": "Mode of Migration to stv2. Default is PreserveIp."
        }
      }
    },
    "MigrateToStv2Mode": {
      "type": "string",
      "description": "Mode of Migration to stv2. Default is PreserveIp.",
      "enum": [
        "PreserveIp",
        "NewIP"
      ],
      "x-ms-enum": {
        "name": "MigrateToStv2Mode",
        "modelAsString": true,
        "values": [
          {
            "name": "PreserveIp",
            "value": "PreserveIp",
            "description": "Migrate API Management service to stv2 from stv1, by reserving the IP Address of the service. This will have a downtime of upto 15 minutes, while the IP address is getting migrate to new infrastructure."
          },
          {
            "name": "NewIP",
            "value": "NewIP",
            "description": "Migrate API Management service to stv2 from stv1. This will have no downtime as the service configuration will be migrated to new infrastructure, but the IP address will changed."
          }
        ]
      }
    },
    "NameAvailabilityReason": {
      "type": "string",
      "description": "Invalid indicates the name provided does not match the resource provider’s naming requirements (incorrect length, unsupported characters, etc.)  AlreadyExists indicates that the name is already in use and is therefore unavailable.",
      "enum": [
        "Valid",
        "Invalid",
        "AlreadyExists"
      ],
      "x-ms-enum": {
        "name": "NameAvailabilityReason",
        "modelAsString": false
      }
    },
    "NamedValueCollection": {
      "type": "object",
      "description": "Paged NamedValue list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/NamedValueContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "NamedValueContract": {
      "type": "object",
      "description": "NamedValue details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NamedValueContractProperties",
          "description": "NamedValue entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "NamedValueContractProperties": {
      "type": "object",
      "description": "NamedValue Contract properties.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters.",
          "minLength": 1,
          "maxLength": 256,
          "pattern": "^[A-Za-z0-9-._]+$"
        },
        "value": {
          "type": "string",
          "description": "Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
          "maxLength": 4096
        },
        "keyVault": {
          "$ref": "#/definitions/KeyVaultContractProperties",
          "description": "KeyVault location details of the namedValue."
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state",
          "readOnly": true
        }
      },
      "required": [
        "displayName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/NamedValueEntityBaseParameters"
        }
      ]
    },
    "NamedValueCreateContract": {
      "type": "object",
      "description": "NamedValue details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NamedValueCreateContractProperties",
          "description": "NamedValue entity contract properties for PUT operation.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "NamedValueCreateContractProperties": {
      "type": "object",
      "description": "NamedValue Contract properties.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters.",
          "minLength": 1,
          "maxLength": 256,
          "pattern": "^[A-Za-z0-9-._]+$"
        },
        "value": {
          "type": "string",
          "description": "Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
          "maxLength": 4096
        },
        "keyVault": {
          "$ref": "#/definitions/KeyVaultContractCreateProperties",
          "description": "KeyVault location details of the namedValue."
        }
      },
      "required": [
        "displayName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/NamedValueEntityBaseParameters"
        }
      ]
    },
    "NamedValueEntityBaseParameters": {
      "type": "object",
      "description": "NamedValue Entity Base Parameters set.",
      "properties": {
        "tags": {
          "type": "array",
          "description": "Optional tags that when provided can be used to filter the NamedValue list.",
          "maxItems": 32,
          "items": {
            "type": "string"
          }
        },
        "secret": {
          "type": "boolean",
          "description": "Determines whether the value is a secret and should be encrypted or not. Default value is false."
        }
      }
    },
    "NamedValueSecretContract": {
      "type": "object",
      "description": "Client or app secret used in IdentityProviders, Aad, OpenID or OAuth.",
      "properties": {
        "value": {
          "type": "string",
          "description": "This is secret value of the NamedValue entity."
        }
      }
    },
    "NamedValueUpdateParameterProperties": {
      "type": "object",
      "description": "NamedValue Contract properties.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters.",
          "minLength": 1,
          "maxLength": 256,
          "pattern": "^[A-Za-z0-9-._]+$"
        },
        "value": {
          "type": "string",
          "description": "Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace.",
          "minLength": 1,
          "maxLength": 4096
        },
        "keyVault": {
          "$ref": "#/definitions/KeyVaultContractCreateProperties",
          "description": "KeyVault location details of the namedValue."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/NamedValueEntityBaseParameters"
        }
      ]
    },
    "NamedValueUpdateParameters": {
      "type": "object",
      "description": "NamedValue update Parameters.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NamedValueUpdateParameterProperties",
          "description": "NamedValue entity Update contract properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "NatGatewayState": {
      "type": "string",
      "description": "Property can be used to enable NAT Gateway for this API Management service.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "NatGatewayState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Nat Gateway is enabled for the service."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Nat Gateway is disabled for the service."
          }
        ]
      }
    },
    "NetworkStatusContract": {
      "type": "object",
      "description": "Network Status details.",
      "properties": {
        "dnsServers": {
          "type": "array",
          "description": "Gets the list of DNS servers IPV4 addresses.",
          "items": {
            "type": "string"
          }
        },
        "connectivityStatus": {
          "type": "array",
          "description": "Gets the list of Connectivity Status to the Resources on which the service depends upon.",
          "items": {
            "$ref": "#/definitions/ConnectivityStatusContract"
          },
          "x-ms-identifiers": [
            "name",
            "resourceType"
          ]
        }
      },
      "required": [
        "dnsServers",
        "connectivityStatus"
      ]
    },
    "NetworkStatusContractByLocation": {
      "type": "object",
      "description": "Network Status in the Location",
      "properties": {
        "location": {
          "type": "string",
          "description": "Location of service",
          "minLength": 1
        },
        "networkStatus": {
          "$ref": "#/definitions/NetworkStatusContract",
          "description": "Network status in Location"
        }
      }
    },
    "NotificationCollection": {
      "type": "object",
      "description": "Paged Notification list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/NotificationContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "NotificationContract": {
      "type": "object",
      "description": "Notification details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NotificationContractProperties",
          "description": "Notification entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "NotificationContractProperties": {
      "type": "object",
      "description": "Notification Contract properties.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the Notification.",
          "minLength": 1,
          "maxLength": 1000
        },
        "description": {
          "type": "string",
          "description": "Description of the Notification."
        },
        "recipients": {
          "$ref": "#/definitions/RecipientsContractProperties",
          "description": "Recipient Parameter values."
        }
      },
      "required": [
        "title"
      ]
    },
    "NotificationName": {
      "type": "string",
      "enum": [
        "RequestPublisherNotificationMessage",
        "PurchasePublisherNotificationMessage",
        "NewApplicationNotificationMessage",
        "BCC",
        "NewIssuePublisherNotificationMessage",
        "AccountClosedPublisher",
        "QuotaLimitApproachingPublisherNotificationMessage"
      ],
      "x-ms-enum": {
        "name": "NotificationName",
        "modelAsString": true,
        "values": [
          {
            "name": "RequestPublisherNotificationMessage",
            "value": "RequestPublisherNotificationMessage",
            "description": "The following email recipients and users will receive email notifications about subscription requests for API products requiring approval."
          },
          {
            "name": "PurchasePublisherNotificationMessage",
            "value": "PurchasePublisherNotificationMessage",
            "description": "The following email recipients and users will receive email notifications about new API product subscriptions."
          },
          {
            "name": "NewApplicationNotificationMessage",
            "value": "NewApplicationNotificationMessage",
            "description": "The following email recipients and users will receive email notifications when new applications are submitted to the application gallery."
          },
          {
            "name": "BCC",
            "value": "BCC",
            "description": "The following recipients will receive blind carbon copies of all emails sent to developers."
          },
          {
            "name": "NewIssuePublisherNotificationMessage",
            "value": "NewIssuePublisherNotificationMessage",
            "description": "The following email recipients and users will receive email notifications when a new issue or comment is submitted on the developer portal."
          },
          {
            "name": "AccountClosedPublisher",
            "value": "AccountClosedPublisher",
            "description": "The following email recipients and users will receive email notifications when developer closes his account."
          },
          {
            "name": "QuotaLimitApproachingPublisherNotificationMessage",
            "value": "QuotaLimitApproachingPublisherNotificationMessage",
            "description": "The following email recipients and users will receive email notifications when subscription usage gets close to usage quota."
          }
        ]
      }
    },
    "OAuth2AuthenticationSettingsContract": {
      "type": "object",
      "description": "API OAuth2 Authentication settings details.",
      "properties": {
        "authorizationServerId": {
          "type": "string",
          "description": "OAuth authorization server identifier."
        },
        "scope": {
          "type": "string",
          "description": "operations scope."
        }
      }
    },
    "OAuth2GrantType": {
      "type": "string",
      "description": "OAuth2 grant type options",
      "enum": [
        "AuthorizationCode",
        "ClientCredentials"
      ],
      "x-ms-enum": {
        "name": "OAuth2GrantType",
        "modelAsString": true,
        "values": [
          {
            "name": "AuthorizationCode",
            "value": "AuthorizationCode",
            "description": "Authorization Code grant"
          },
          {
            "name": "ClientCredentials",
            "value": "ClientCredentials",
            "description": "Client Credential grant"
          }
        ]
      }
    },
    "OpenIdAuthenticationSettingsContract": {
      "type": "object",
      "description": "API OAuth2 Authentication settings details.",
      "properties": {
        "openidProviderId": {
          "type": "string",
          "description": "OAuth authorization server identifier."
        },
        "bearerTokenSendingMethods": {
          "type": "array",
          "description": "How to send token to the server.",
          "items": {
            "$ref": "#/definitions/BearerTokenSendingMethods"
          }
        }
      }
    },
    "OpenIdConnectProviderCollection": {
      "type": "object",
      "description": "Paged OpenIdProviders list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/OpenidConnectProviderContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "OpenidConnectProviderContract": {
      "type": "object",
      "description": "OpenId Connect Provider details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OpenidConnectProviderContractProperties",
          "description": "OpenId Connect Provider contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "OpenidConnectProviderContractProperties": {
      "type": "object",
      "description": "OpenID Connect Providers Contract.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User-friendly OpenID Connect Provider name.",
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "description": "User-friendly description of OpenID Connect Provider."
        },
        "metadataEndpoint": {
          "type": "string",
          "description": "Metadata endpoint URI."
        },
        "clientId": {
          "type": "string",
          "description": "Client ID of developer console which is the client application."
        },
        "clientSecret": {
          "type": "string",
          "format": "password",
          "description": "Client Secret of developer console which is the client application.",
          "x-ms-secret": true
        },
        "useInTestConsole": {
          "type": "boolean",
          "description": "If true, the Open ID Connect provider may be used in the developer portal test console. True by default if no value is provided."
        },
        "useInApiDocumentation": {
          "type": "boolean",
          "description": "If true, the Open ID Connect provider will be used in the API documentation in the developer portal. False by default if no value is provided."
        }
      },
      "required": [
        "displayName",
        "metadataEndpoint",
        "clientId"
      ]
    },
    "OpenidConnectProviderUpdateContract": {
      "type": "object",
      "description": "Parameters supplied to the Update OpenID Connect Provider operation.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OpenidConnectProviderUpdateContractProperties",
          "description": "OpenId Connect Provider Update contract properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "OpenidConnectProviderUpdateContractProperties": {
      "type": "object",
      "description": "Parameters supplied to the Update OpenID Connect Provider operation.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User-friendly OpenID Connect Provider name.",
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "description": "User-friendly description of OpenID Connect Provider."
        },
        "metadataEndpoint": {
          "type": "string",
          "description": "Metadata endpoint URI."
        },
        "clientId": {
          "type": "string",
          "description": "Client ID of developer console which is the client application."
        },
        "clientSecret": {
          "type": "string",
          "format": "password",
          "description": "Client Secret of developer console which is the client application.",
          "x-ms-secret": true
        },
        "useInTestConsole": {
          "type": "boolean",
          "description": "If true, the Open ID Connect provider may be used in the developer portal test console. True by default if no value is provided."
        },
        "useInApiDocumentation": {
          "type": "boolean",
          "description": "If true, the Open ID Connect provider will be used in the API documentation in the developer portal. False by default if no value is provided."
        }
      }
    },
    "Operation": {
      "type": "object",
      "description": "REST API operation",
      "properties": {
        "name": {
          "type": "string",
          "description": "Operation name: {provider}/{resource}/{operation}"
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay",
          "description": "The object that describes the operation."
        },
        "origin": {
          "type": "string",
          "description": "The operation origin."
        },
        "properties": {
          "description": "The operation properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "OperationCollection": {
      "type": "object",
      "description": "Paged Operation list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/OperationContract"
          },
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      }
    },
    "OperationContract": {
      "type": "object",
      "description": "API Operation details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OperationContractProperties",
          "description": "Properties of the Operation Contract.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "OperationContractProperties": {
      "type": "object",
      "description": "Operation Contract Properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Operation Name.",
          "minLength": 1,
          "maxLength": 300
        },
        "method": {
          "type": "string",
          "description": "A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them."
        },
        "urlTemplate": {
          "type": "string",
          "description": "Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}",
          "minLength": 1,
          "maxLength": 1000
        }
      },
      "required": [
        "displayName",
        "method",
        "urlTemplate"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OperationEntityBaseContract"
        }
      ]
    },
    "OperationDisplay": {
      "type": "object",
      "description": "The object that describes the operation.",
      "properties": {
        "provider": {
          "type": "string",
          "description": "Friendly name of the resource provider"
        },
        "operation": {
          "type": "string",
          "description": "Operation type: read, write, delete, listKeys/action, etc."
        },
        "resource": {
          "type": "string",
          "description": "Resource type on which the operation is performed."
        },
        "description": {
          "type": "string",
          "description": "Friendly name of the operation"
        }
      }
    },
    "OperationEntityBaseContract": {
      "type": "object",
      "description": "API Operation Entity Base Contract details.",
      "properties": {
        "templateParameters": {
          "type": "array",
          "description": "Collection of URL template parameters.",
          "items": {
            "$ref": "#/definitions/ParameterContract"
          },
          "x-ms-identifiers": [
            "name",
            "type"
          ]
        },
        "description": {
          "type": "string",
          "description": "Description of the operation. May include HTML formatting tags.",
          "maxLength": 1000
        },
        "request": {
          "$ref": "#/definitions/RequestContract",
          "description": "An entity containing request details."
        },
        "responses": {
          "type": "array",
          "description": "Array of Operation responses.",
          "items": {
            "$ref": "#/definitions/ResponseContract"
          },
          "x-ms-identifiers": []
        },
        "policies": {
          "type": "string",
          "description": "Operation Policies"
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the resource provider.",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "OperationNameFormat": {
      "type": "string",
      "description": "The format of the Operation Name for Application Insights telemetries. Default is Name.",
      "enum": [
        "Name",
        "Url"
      ],
      "x-ms-enum": {
        "name": "OperationNameFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "Name",
            "value": "Name",
            "description": "API_NAME;rev=API_REVISION - OPERATION_NAME"
          },
          {
            "name": "Url",
            "value": "Url",
            "description": "HTTP_VERB URL"
          }
        ]
      }
    },
    "OperationResultContract": {
      "type": "object",
      "description": "Long Running Git Operation Results.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OperationResultContractProperties",
          "description": "Properties of the Operation Contract.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "OperationResultContractProperties": {
      "type": "object",
      "description": "Operation Result.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Operation result identifier."
        },
        "status": {
          "$ref": "#/definitions/AsyncOperationStatus",
          "description": "Status of an async operation."
        },
        "started": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of an async operation. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last update time of an async operation. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        },
        "resultInfo": {
          "type": "string",
          "description": "Optional result info."
        },
        "error": {
          "$ref": "#/definitions/ErrorResponseBody",
          "description": "Error Body Contract"
        },
        "actionLog": {
          "type": "array",
          "description": "This property if only provided as part of the TenantConfiguration_Validate operation. It contains the log the entities which will be updated/created/deleted as part of the TenantConfiguration_Deploy operation.",
          "items": {
            "$ref": "#/definitions/OperationResultLogItemContract"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "objectKey"
          ]
        }
      }
    },
    "OperationResultLogItemContract": {
      "type": "object",
      "description": "Log of the entity being created, updated or deleted.",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "The type of entity contract."
        },
        "action": {
          "type": "string",
          "description": "Action like create/update/delete."
        },
        "objectKey": {
          "type": "string",
          "description": "Identifier of the entity being created/updated/deleted."
        }
      }
    },
    "OperationTagResourceContractProperties": {
      "type": "object",
      "description": "Operation Entity contract Properties.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the operation in form /operations/{operationId}."
        },
        "name": {
          "type": "string",
          "description": "Operation name.",
          "readOnly": true
        },
        "apiName": {
          "type": "string",
          "description": "API Name.",
          "readOnly": true
        },
        "apiRevision": {
          "type": "string",
          "description": "API Revision.",
          "readOnly": true
        },
        "apiVersion": {
          "type": "string",
          "description": "API Version.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Operation Description.",
          "readOnly": true
        },
        "method": {
          "type": "string",
          "description": "A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.",
          "readOnly": true
        },
        "urlTemplate": {
          "type": "string",
          "description": "Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}",
          "readOnly": true
        }
      }
    },
    "OperationUpdateContract": {
      "type": "object",
      "description": "API Operation Update Contract details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OperationUpdateContractProperties",
          "description": "Properties of the API Operation entity that can be updated.",
          "x-ms-client-flatten": true
        }
      }
    },
    "OperationUpdateContractProperties": {
      "type": "object",
      "description": "Operation Update Contract Properties.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Operation Name.",
          "minLength": 1,
          "maxLength": 300
        },
        "method": {
          "type": "string",
          "description": "A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them."
        },
        "urlTemplate": {
          "type": "string",
          "description": "Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}",
          "minLength": 1,
          "maxLength": 1000
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OperationEntityBaseContract"
        }
      ]
    },
    "Origin": {
      "type": "string",
      "description": "The origin of the issue.",
      "enum": [
        "Local",
        "Inbound",
        "Outbound"
      ],
      "x-ms-enum": {
        "name": "Origin",
        "modelAsString": true,
        "values": [
          {
            "name": "Local",
            "value": "Local"
          },
          {
            "name": "Inbound",
            "value": "Inbound"
          },
          {
            "name": "Outbound",
            "value": "Outbound"
          }
        ]
      }
    },
    "OutboundEnvironmentEndpoint": {
      "type": "object",
      "description": "Endpoints accessed for a common purpose that the Api Management Service requires outbound network access to.",
      "properties": {
        "category": {
          "type": "string",
          "description": "The type of service accessed by the Api Management Service, e.g., Azure Storage, Azure SQL Database, and Azure Active Directory."
        },
        "endpoints": {
          "type": "array",
          "description": "The endpoints that the Api Management Service reaches the service at.",
          "items": {
            "$ref": "#/definitions/EndpointDependency"
          },
          "x-ms-identifiers": [
            "domainName"
          ]
        }
      }
    },
    "OutboundEnvironmentEndpointList": {
      "type": "object",
      "description": "Collection of Outbound Environment Endpoints",
      "properties": {
        "value": {
          "type": "array",
          "description": "Collection of resources.",
          "items": {
            "$ref": "#/definitions/OutboundEnvironmentEndpoint"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "description": "Link to next page of resources.",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "ParameterContract": {
      "type": "object",
      "description": "Operation parameters details.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Parameter name."
        },
        "description": {
          "type": "string",
          "description": "Parameter description."
        },
        "type": {
          "type": "string",
          "description": "Parameter type."
        },
        "defaultValue": {
          "type": "string",
          "description": "Default parameter value."
        },
        "required": {
          "type": "boolean",
          "description": "Specifies whether parameter is required or not."
        },
        "values": {
          "type": "array",
          "description": "Parameter values.",
          "items": {
            "type": "string"
          }
        },
        "schemaId": {
          "type": "string",
          "description": "Schema identifier."
        },
        "typeName": {
          "type": "string",
          "description": "Type name defined by the schema."
        },
        "examples": {
          "type": "object",
          "description": "Exampled defined for the parameter.",
          "additionalProperties": {
            "$ref": "#/definitions/ParameterExampleContract"
          }
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "ParameterExampleContract": {
      "type": "object",
      "description": "Parameter example.",
      "properties": {
        "summary": {
          "type": "string",
          "description": "Short description for the example"
        },
        "description": {
          "type": "string",
          "description": "Long description for the example"
        },
        "value": {
          "description": "Example value. May be a primitive value, or an object."
        },
        "externalValue": {
          "type": "string",
          "description": "A URL that points to the literal example"
        }
      }
    },
    "PipelineDiagnosticSettings": {
      "type": "object",
      "description": "Diagnostic settings for incoming/outgoing HTTP messages to the Gateway.",
      "properties": {
        "request": {
          "$ref": "#/definitions/HttpMessageDiagnostic",
          "description": "Diagnostic settings for request."
        },
        "response": {
          "$ref": "#/definitions/HttpMessageDiagnostic",
          "description": "Diagnostic settings for response."
        }
      }
    },
    "PlatformVersion": {
      "type": "string",
      "description": "Compute Platform Version running the service.",
      "enum": [
        "undetermined",
        "stv1",
        "stv2",
        "mtv1",
        "stv2.1"
      ],
      "x-ms-enum": {
        "name": "PlatformVersion",
        "modelAsString": true,
        "values": [
          {
            "name": "undetermined",
            "value": "undetermined",
            "description": "Platform version cannot be determined, as compute platform is not deployed."
          },
          {
            "name": "stv1",
            "value": "stv1",
            "description": "Platform running the service on Single Tenant V1 platform."
          },
          {
            "name": "stv2",
            "value": "stv2",
            "description": "Platform running the service on Single Tenant V2 platform."
          },
          {
            "name": "mtv1",
            "value": "mtv1",
            "description": "Platform running the service on Multi Tenant V1 platform."
          },
          {
            "name": "stv2.1",
            "value": "stv2.1",
            "description": "Platform running the service on Single Tenant V2 platform on newer Hardware."
          }
        ]
      }
    },
    "PolicyCollection": {
      "type": "object",
      "description": "The response of the list policy operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Policy Contract value.",
          "items": {
            "$ref": "#/definitions/PolicyContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "PolicyComplianceState": {
      "type": "string",
      "description": "Policy Restriction Compliance State",
      "enum": [
        "Pending",
        "NonCompliant",
        "Compliant"
      ],
      "x-ms-enum": {
        "name": "PolicyComplianceState",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending",
            "description": "The policy restriction compliance state has not yet been determined."
          },
          {
            "name": "NonCompliant",
            "value": "NonCompliant",
            "description": "The scope in restriction is out of compliance."
          },
          {
            "name": "Compliant",
            "value": "Compliant",
            "description": "The scope in restriction is in compliance."
          }
        ]
      }
    },
    "PolicyContentFormat": {
      "type": "string",
      "description": "Format of the policyContent.",
      "enum": [
        "xml",
        "xml-link",
        "rawxml",
        "rawxml-link"
      ],
      "x-ms-enum": {
        "name": "PolicyContentFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "xml",
            "value": "xml",
            "description": "The contents are inline and Content type is an XML document."
          },
          {
            "name": "xml-link",
            "value": "xml-link",
            "description": "The policy XML document is hosted on a HTTP endpoint accessible from the API Management service."
          },
          {
            "name": "rawxml",
            "value": "rawxml",
            "description": "The contents are inline and Content type is a non XML encoded policy document."
          },
          {
            "name": "rawxml-link",
            "value": "rawxml-link",
            "description": "The policy document is not XML encoded and is hosted on a HTTP endpoint accessible from the API Management service."
          }
        ]
      }
    },
    "PolicyContract": {
      "type": "object",
      "description": "Policy Contract details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PolicyContractProperties",
          "description": "Properties of the Policy.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PolicyContractProperties": {
      "type": "object",
      "description": "Policy contract Properties.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Contents of the Policy as defined by the format."
        },
        "format": {
          "type": "string",
          "description": "Format of the policyContent.",
          "default": "xml",
          "enum": [
            "xml",
            "xml-link",
            "rawxml",
            "rawxml-link"
          ],
          "x-ms-enum": {
            "name": "PolicyContentFormat",
            "modelAsString": true,
            "values": [
              {
                "name": "xml",
                "value": "xml",
                "description": "The contents are inline and Content type is an XML document."
              },
              {
                "name": "xml-link",
                "value": "xml-link",
                "description": "The policy XML document is hosted on a HTTP endpoint accessible from the API Management service."
              },
              {
                "name": "rawxml",
                "value": "rawxml",
                "description": "The contents are inline and Content type is a non XML encoded policy document."
              },
              {
                "name": "rawxml-link",
                "value": "rawxml-link",
                "description": "The policy document is not XML encoded and is hosted on a HTTP endpoint accessible from the API Management service."
              }
            ]
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "PolicyDescriptionCollection": {
      "type": "object",
      "description": "Descriptions of API Management policies.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Descriptions of API Management policies.",
          "items": {
            "$ref": "#/definitions/PolicyDescriptionContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number."
        }
      }
    },
    "PolicyDescriptionContract": {
      "type": "object",
      "description": "Policy description details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PolicyDescriptionContractProperties",
          "description": "Policy description contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PolicyDescriptionContractProperties": {
      "type": "object",
      "description": "Policy description properties.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Policy description.",
          "readOnly": true
        },
        "scope": {
          "type": "integer",
          "format": "int64",
          "description": "Binary OR value of the Snippet scope.",
          "readOnly": true
        }
      }
    },
    "PolicyExportFormat": {
      "type": "string",
      "enum": [
        "xml",
        "rawxml"
      ],
      "x-ms-enum": {
        "name": "PolicyExportFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "xml",
            "value": "xml",
            "description": "The contents are inline and Content type is an XML document."
          },
          {
            "name": "rawxml",
            "value": "rawxml",
            "description": "The contents are inline and Content type is a non XML encoded policy document."
          }
        ]
      }
    },
    "PolicyFragmentCollection": {
      "type": "object",
      "description": "The response of the get policy fragments operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Policy fragment contract value.",
          "items": {
            "$ref": "#/definitions/PolicyFragmentContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "PolicyFragmentContentFormat": {
      "type": "string",
      "enum": [
        "xml",
        "rawxml"
      ],
      "x-ms-enum": {
        "name": "PolicyFragmentContentFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "xml",
            "value": "xml",
            "description": "The contents are inline and Content type is an XML document."
          },
          {
            "name": "rawxml",
            "value": "rawxml",
            "description": "The contents are inline and Content type is a non XML encoded policy document."
          }
        ]
      }
    },
    "PolicyFragmentContract": {
      "type": "object",
      "description": "Policy fragment contract details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PolicyFragmentContractProperties",
          "description": "Properties of the Policy Fragment.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PolicyFragmentContractProperties": {
      "type": "object",
      "description": "Policy fragment contract properties.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Contents of the policy fragment."
        },
        "description": {
          "type": "string",
          "description": "Policy fragment description.",
          "minLength": 0,
          "maxLength": 1000
        },
        "format": {
          "type": "string",
          "description": "Format of the policy fragment content.",
          "default": "xml",
          "enum": [
            "xml",
            "rawxml"
          ],
          "x-ms-enum": {
            "name": "PolicyFragmentContentFormat",
            "modelAsString": true,
            "values": [
              {
                "name": "xml",
                "value": "xml",
                "description": "The contents are inline and Content type is an XML document."
              },
              {
                "name": "rawxml",
                "value": "rawxml",
                "description": "The contents are inline and Content type is a non XML encoded policy document."
              }
            ]
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "PolicyIdName": {
      "type": "string",
      "enum": [
        "policy"
      ],
      "x-ms-enum": {
        "name": "PolicyIdName",
        "modelAsString": true,
        "values": [
          {
            "name": "policy",
            "value": "policy"
          }
        ]
      }
    },
    "PolicyRestrictionCollection": {
      "type": "object",
      "description": "The response of the get policy restrictions operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/PolicyRestrictionContract"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "PolicyRestrictionContract": {
      "type": "object",
      "description": "Policy restriction contract details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PolicyRestrictionContractProperties",
          "description": "Properties of the Policy Restriction.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PolicyRestrictionContractProperties": {
      "type": "object",
      "description": "Policy restrictions contract properties.",
      "properties": {
        "scope": {
          "type": "string",
          "description": "Path to the policy document."
        },
        "requireBase": {
          "type": "string",
          "description": "Indicates if base policy should be enforced for the policy document.",
          "default": "false",
          "enum": [
            "true",
            "false"
          ],
          "x-ms-enum": {
            "name": "PolicyRestrictionRequireBase",
            "modelAsString": true,
            "values": [
              {
                "name": "true",
                "value": "true",
                "description": "The policy is required to have base policy"
              },
              {
                "name": "false",
                "value": "false",
                "description": "The policy does not require to have base policy"
              }
            ]
          }
        }
      }
    },
    "PolicyRestrictionRequireBase": {
      "type": "string",
      "description": "Indicates if base policy should be enforced for the policy document.",
      "enum": [
        "true",
        "false"
      ],
      "x-ms-enum": {
        "name": "PolicyRestrictionRequireBase",
        "modelAsString": true,
        "values": [
          {
            "name": "true",
            "value": "true",
            "description": "The policy is required to have base policy"
          },
          {
            "name": "false",
            "value": "false",
            "description": "The policy does not require to have base policy"
          }
        ]
      }
    },
    "PolicyRestrictionUpdateContract": {
      "type": "object",
      "description": "Policy restriction contract details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PolicyRestrictionContractProperties",
          "description": "Properties of the Policy Restriction.",
          "x-ms-client-flatten": true
        }
      }
    },
    "PolicyScopeContract": {
      "type": "string",
      "enum": [
        "Tenant",
        "Product",
        "Api",
        "Operation",
        "All"
      ],
      "x-ms-enum": {
        "name": "PolicyScopeContract",
        "modelAsString": false
      }
    },
    "PolicyWithComplianceCollection": {
      "type": "object",
      "description": "The response of the list policy operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Policy Contract value.",
          "items": {
            "$ref": "#/definitions/PolicyWithComplianceContract"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "PolicyWithComplianceContract": {
      "type": "object",
      "description": "Policy Contract details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PolicyWithComplianceContractProperties",
          "description": "Properties of the Policy.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PolicyWithComplianceContractProperties": {
      "type": "object",
      "description": "Policy contract Properties.",
      "properties": {
        "referencePolicyId": {
          "type": "string",
          "description": "Policy Identifier"
        },
        "complianceState": {
          "type": "string",
          "description": "Policy Restriction Compliance State",
          "default": "Pending",
          "enum": [
            "Pending",
            "NonCompliant",
            "Compliant"
          ],
          "x-ms-enum": {
            "name": "PolicyComplianceState",
            "modelAsString": true,
            "values": [
              {
                "name": "Pending",
                "value": "Pending",
                "description": "The policy restriction compliance state has not yet been determined."
              },
              {
                "name": "NonCompliant",
                "value": "NonCompliant",
                "description": "The scope in restriction is out of compliance."
              },
              {
                "name": "Compliant",
                "value": "Compliant",
                "description": "The scope in restriction is in compliance."
              }
            ]
          }
        }
      }
    },
    "PortalConfigCollection": {
      "type": "object",
      "description": "The collection of the developer portal configurations.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The developer portal configurations.",
          "items": {
            "$ref": "#/definitions/PortalConfigContract"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      }
    },
    "PortalConfigContract": {
      "type": "object",
      "description": "The developer portal configuration contract.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PortalConfigProperties",
          "description": "The developer portal configuration contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PortalConfigCorsProperties": {
      "type": "object",
      "description": "The developer portal Cross-Origin Resource Sharing (CORS) settings.",
      "properties": {
        "allowedOrigins": {
          "type": "array",
          "description": "Allowed origins, e.g. `https://trusted.com`.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PortalConfigCspProperties": {
      "type": "object",
      "description": "The developer portal Content Security Policy (CSP) settings.",
      "properties": {
        "mode": {
          "type": "string",
          "description": "The mode of the developer portal Content Security Policy (CSP).",
          "default": "disabled",
          "enum": [
            "enabled",
            "disabled",
            "reportOnly"
          ],
          "x-ms-enum": {
            "name": "PortalSettingsCspMode",
            "modelAsString": true,
            "values": [
              {
                "name": "enabled",
                "value": "enabled",
                "description": "The browser will block requests not matching allowed origins."
              },
              {
                "name": "disabled",
                "value": "disabled",
                "description": "The browser will not apply the origin restrictions."
              },
              {
                "name": "reportOnly",
                "value": "reportOnly",
                "description": "The browser will report requests not matching allowed origins without blocking them."
              }
            ]
          }
        },
        "reportUri": {
          "type": "array",
          "description": "The URLs used by the browser to report CSP violations.",
          "items": {
            "type": "string"
          }
        },
        "allowedSources": {
          "type": "array",
          "description": "Allowed sources, e.g. `*.trusted.com`, `trusted.com`, `https://`.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PortalConfigDelegationProperties": {
      "type": "object",
      "properties": {
        "delegateRegistration": {
          "type": "boolean",
          "description": "Enable or disable delegation for user registration.",
          "default": false
        },
        "delegateSubscription": {
          "type": "boolean",
          "description": "Enable or disable delegation for product subscriptions.",
          "default": false
        },
        "delegationUrl": {
          "type": "string",
          "description": "A delegation endpoint URL."
        },
        "validationKey": {
          "type": "string",
          "format": "password",
          "description": "A base64-encoded validation key to ensure requests originate from Azure API Management service.",
          "x-ms-secret": true
        }
      }
    },
    "PortalConfigProperties": {
      "type": "object",
      "description": "The developer portal configuration contract properties.",
      "properties": {
        "enableBasicAuth": {
          "type": "boolean",
          "description": "Enable or disable Basic authentication method.",
          "default": true
        },
        "signin": {
          "$ref": "#/definitions/PortalConfigPropertiesSignin"
        },
        "signup": {
          "$ref": "#/definitions/PortalConfigPropertiesSignup"
        },
        "delegation": {
          "$ref": "#/definitions/PortalConfigDelegationProperties",
          "description": "The developer portal delegation settings."
        },
        "cors": {
          "$ref": "#/definitions/PortalConfigCorsProperties",
          "description": "The developer portal Cross-Origin Resource Sharing (CORS) settings."
        },
        "csp": {
          "$ref": "#/definitions/PortalConfigCspProperties",
          "description": "The developer portal Content Security Policy (CSP) settings."
        }
      }
    },
    "PortalConfigPropertiesSignin": {
      "type": "object",
      "properties": {
        "require": {
          "type": "boolean",
          "description": "Redirect anonymous users to the sign-in page.",
          "default": false
        }
      }
    },
    "PortalConfigPropertiesSignup": {
      "type": "object",
      "properties": {
        "termsOfService": {
          "$ref": "#/definitions/PortalConfigTermsOfServiceProperties",
          "description": "Terms of service settings."
        }
      }
    },
    "PortalConfigTermsOfServiceProperties": {
      "type": "object",
      "description": "Terms of service contract properties.",
      "properties": {
        "text": {
          "type": "string",
          "description": "A terms of service text."
        },
        "requireConsent": {
          "type": "boolean",
          "description": "Ask user for consent to the terms of service.",
          "default": false
        }
      }
    },
    "PortalDelegationSettings": {
      "type": "object",
      "description": "Delegation settings for a developer portal.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PortalDelegationSettingsProperties",
          "description": "Delegation settings contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PortalDelegationSettingsProperties": {
      "type": "object",
      "description": "Delegation settings contract properties.",
      "properties": {
        "url": {
          "type": "string",
          "description": "A delegation Url."
        },
        "validationKey": {
          "type": "string",
          "format": "password",
          "description": "A base64-encoded validation key to validate, that a request is coming from Azure API Management.",
          "x-ms-secret": true
        },
        "subscriptions": {
          "$ref": "#/definitions/SubscriptionsDelegationSettingsProperties",
          "description": "Subscriptions delegation settings."
        },
        "userRegistration": {
          "$ref": "#/definitions/RegistrationDelegationSettingsProperties",
          "description": "User registration delegation settings."
        }
      }
    },
    "PortalRevisionCollection": {
      "type": "object",
      "description": "Paged list of portal revisions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Collection of portal revisions.",
          "items": {
            "$ref": "#/definitions/PortalRevisionContract"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link, if any.",
          "readOnly": true
        }
      }
    },
    "PortalRevisionContract": {
      "type": "object",
      "description": "Portal Revision's contract details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PortalRevisionContractProperties",
          "description": "Properties of the portal revisions.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PortalRevisionContractProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Portal revision description.",
          "maxLength": 2000
        },
        "statusDetails": {
          "type": "string",
          "description": "Portal revision publishing status details.",
          "maxLength": 2000,
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/PortalRevisionStatus",
          "description": "Status of the portal's revision.",
          "readOnly": true
        },
        "isCurrent": {
          "type": "boolean",
          "description": "Indicates if the portal's revision is public."
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Portal's revision creation date and time.",
          "readOnly": true
        },
        "updatedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Last updated date and time.",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state",
          "readOnly": true
        }
      }
    },
    "PortalRevisionStatus": {
      "type": "string",
      "description": "Status of the portal's revision.",
      "enum": [
        "pending",
        "publishing",
        "completed",
        "failed"
      ],
      "x-ms-enum": {
        "name": "PortalRevisionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "pending",
            "value": "pending",
            "description": "Portal's revision has been queued."
          },
          {
            "name": "publishing",
            "value": "publishing",
            "description": "Portal's revision is being published."
          },
          {
            "name": "completed",
            "value": "completed",
            "description": "Portal's revision publishing completed."
          },
          {
            "name": "failed",
            "value": "failed",
            "description": "Portal's revision publishing failed."
          }
        ]
      }
    },
    "PortalSettingValidationKeyContract": {
      "type": "object",
      "description": "Client or app secret used in IdentityProviders, Aad, OpenID or OAuth.",
      "properties": {
        "validationKey": {
          "type": "string",
          "format": "password",
          "description": "This is secret value of the validation key in portal settings.",
          "x-ms-secret": true
        }
      }
    },
    "PortalSettingsCollection": {
      "type": "object",
      "description": "Descriptions of API Management policies.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Descriptions of API Management policies.",
          "items": {
            "$ref": "#/definitions/PortalSettingsContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number."
        }
      }
    },
    "PortalSettingsContract": {
      "type": "object",
      "description": "Portal Settings for the Developer Portal.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PortalSettingsContractProperties",
          "description": "Portal Settings contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PortalSettingsContractProperties": {
      "type": "object",
      "description": "Sign-in settings contract properties.",
      "properties": {
        "url": {
          "type": "string",
          "description": "A delegation Url."
        },
        "validationKey": {
          "type": "string",
          "format": "password",
          "description": "A base64-encoded validation key to validate, that a request is coming from Azure API Management.",
          "x-ms-secret": true
        },
        "subscriptions": {
          "$ref": "#/definitions/SubscriptionsDelegationSettingsProperties",
          "description": "Subscriptions delegation settings."
        },
        "userRegistration": {
          "$ref": "#/definitions/RegistrationDelegationSettingsProperties",
          "description": "User registration delegation settings."
        },
        "enabled": {
          "type": "boolean",
          "description": "Redirect Anonymous users to the Sign-In page."
        },
        "termsOfService": {
          "$ref": "#/definitions/TermsOfServiceProperties",
          "description": "Terms of service contract properties."
        }
      }
    },
    "PortalSettingsCspMode": {
      "type": "string",
      "description": "The mode of the developer portal Content Security Policy (CSP).",
      "enum": [
        "enabled",
        "disabled",
        "reportOnly"
      ],
      "x-ms-enum": {
        "name": "PortalSettingsCspMode",
        "modelAsString": true,
        "values": [
          {
            "name": "enabled",
            "value": "enabled",
            "description": "The browser will block requests not matching allowed origins."
          },
          {
            "name": "disabled",
            "value": "disabled",
            "description": "The browser will not apply the origin restrictions."
          },
          {
            "name": "reportOnly",
            "value": "reportOnly",
            "description": "The browser will report requests not matching allowed origins without blocking them."
          }
        ]
      }
    },
    "PortalSigninSettingProperties": {
      "type": "object",
      "description": "Sign-in settings contract properties.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Redirect Anonymous users to the Sign-In page."
        }
      }
    },
    "PortalSigninSettings": {
      "type": "object",
      "description": "Sign-In settings for the Developer Portal.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PortalSigninSettingProperties",
          "description": "Sign-in settings contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PortalSignupSettings": {
      "type": "object",
      "description": "Sign-Up settings for a developer portal.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PortalSignupSettingsProperties",
          "description": "Sign-up settings contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PortalSignupSettingsProperties": {
      "type": "object",
      "description": "Sign-up settings contract properties.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Allow users to sign up on a developer portal."
        },
        "termsOfService": {
          "$ref": "#/definitions/TermsOfServiceProperties",
          "description": "Terms of service contract properties."
        }
      }
    },
    "PreferredIPVersion": {
      "type": "string",
      "description": "The IP version to be used. Only IPv4 is supported for now.",
      "enum": [
        "IPv4"
      ],
      "x-ms-enum": {
        "name": "PreferredIPVersion",
        "modelAsString": true,
        "values": [
          {
            "name": "IPv4",
            "value": "IPv4"
          }
        ]
      }
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "The response of a PrivateEndpointConnection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateEndpointConnection items on this page",
          "items": {
            "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateEndpointConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateEndpointConnectionRequest": {
      "type": "object",
      "description": "A request to approve or reject a private endpoint connection",
      "properties": {
        "id": {
          "type": "string",
          "description": "Private Endpoint Connection Resource Id."
        },
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionRequestProperties",
          "description": "The connection state of the private endpoint connection."
        }
      }
    },
    "PrivateEndpointConnectionRequestProperties": {
      "type": "object",
      "description": "The connection state of the private endpoint connection.",
      "properties": {
        "privateLinkServiceConnectionState": {
          "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        }
      }
    },
    "PrivateEndpointConnectionWrapperProperties": {
      "type": "object",
      "description": "Properties of the PrivateEndpointConnectProperties.",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/ArmIdWrapper",
          "description": "The resource of private end point."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the private endpoint connection resource.",
          "readOnly": true
        },
        "groupIds": {
          "type": "array",
          "description": "All the Group ids.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ]
    },
    "PrivateLinkResourceListResult": {
      "type": "object",
      "description": "The response of a PrivateLinkResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateLinkResource items on this page",
          "items": {
            "$ref": "../../../../../common-types/resource-management/v5/privatelinks.json#/definitions/PrivateLinkResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProductApiLinkCollection": {
      "type": "object",
      "description": "Paged Product-API link list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/ProductApiLinkContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "ProductApiLinkContract": {
      "type": "object",
      "description": "Product-API link details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProductApiLinkContractProperties",
          "description": "Product-API link entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ProductApiLinkContractProperties": {
      "type": "object",
      "description": "Product-API link entity properties.",
      "properties": {
        "apiId": {
          "type": "string",
          "description": "Full resource Id of an API."
        }
      },
      "required": [
        "apiId"
      ]
    },
    "ProductApplicationContract": {
      "type": "object",
      "description": "Specifies Microsoft Entra settings needed to authorize product API calls using client applications.",
      "properties": {
        "entra": {
          "$ref": "#/definitions/ProductApplicationContractEntra",
          "description": "Specifies Microsoft Entra settings needed to authorize product API calls using client application with Microsoft Entra OAuth token."
        }
      }
    },
    "ProductApplicationContractEntra": {
      "type": "object",
      "description": "Specifies Microsoft Entra settings needed to authorize product API calls using client application with Microsoft Entra OAuth token.",
      "properties": {
        "applicationId": {
          "type": "string",
          "description": "Product facing EntraID application client ID."
        },
        "audience": {
          "type": "string",
          "description": "The EntraID application audience claim. The audience claim is used to validate the token."
        }
      }
    },
    "ProductAuthType": {
      "type": "string",
      "enum": [
        "subscription-key",
        "application-token"
      ],
      "x-ms-enum": {
        "name": "ProductAuthType",
        "modelAsString": true,
        "values": [
          {
            "name": "subscription-key",
            "value": "subscription-key"
          },
          {
            "name": "application-token",
            "value": "application-token"
          }
        ]
      }
    },
    "ProductCollection": {
      "type": "object",
      "description": "Paged Products list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/ProductContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "ProductContract": {
      "type": "object",
      "description": "Product details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProductContractProperties",
          "description": "Product entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ProductContractProperties": {
      "type": "object",
      "description": "Product profile.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Product name.",
          "minLength": 1,
          "maxLength": 300
        }
      },
      "required": [
        "displayName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ProductEntityBaseParameters"
        }
      ]
    },
    "ProductEntityBaseParameters": {
      "type": "object",
      "description": "Product Entity Base Parameters",
      "properties": {
        "description": {
          "type": "string",
          "description": "Product description. May include HTML formatting tags.",
          "minLength": 0,
          "maxLength": 1000
        },
        "terms": {
          "type": "string",
          "description": "Product terms of use. Developers trying to subscribe to the product will be presented and required to accept these terms before they can complete the subscription process."
        },
        "subscriptionRequired": {
          "type": "boolean",
          "description": "Whether a product subscription is required for accessing APIs included in this product. If true, the product is referred to as \"protected\" and a valid subscription key is required for a request to an API included in the product to succeed. If false, the product is referred to as \"open\" and requests to an API included in the product can be made without a subscription key. If property is omitted when creating a new product it's value is assumed to be true."
        },
        "approvalRequired": {
          "type": "boolean",
          "description": "whether subscription approval is required. If false, new subscriptions will be approved automatically enabling developers to call the product’s APIs immediately after subscribing. If true, administrators must manually approve the subscription before the developer can any of the product’s APIs. Can be present only if subscriptionRequired property is present and has a value of false."
        },
        "subscriptionsLimit": {
          "type": "integer",
          "format": "int32",
          "description": "Whether the number of subscriptions a user can have to this product at the same time. Set to null or omit to allow unlimited per user subscriptions. Can be present only if subscriptionRequired property is present and has a value of false."
        },
        "authenticationType": {
          "type": "array",
          "description": "Type of supported authentication for the product. The application configuration is required for application-token authentication type. The subscription-key authentication type is used by default. If the property is omitted, the subscription-key authentication type is used.",
          "items": {
            "$ref": "#/definitions/ProductAuthType"
          }
        },
        "application": {
          "$ref": "#/definitions/ProductEntityBaseParametersApplication",
          "description": "Specifies identity provider settings needed to authorize applications API calls."
        },
        "state": {
          "$ref": "#/definitions/ProductState",
          "description": "whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished."
        }
      }
    },
    "ProductEntityBaseParametersApplication": {
      "type": "object",
      "description": "Specifies identity provider settings needed to authorize applications API calls.",
      "allOf": [
        {
          "$ref": "#/definitions/ProductApplicationContract"
        }
      ]
    },
    "ProductGroupLinkCollection": {
      "type": "object",
      "description": "Paged Product-group link list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/ProductGroupLinkContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "ProductGroupLinkContract": {
      "type": "object",
      "description": "Product-group link details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProductGroupLinkContractProperties",
          "description": "Product-group link entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ProductGroupLinkContractProperties": {
      "type": "object",
      "description": "Product-group link entity properties.",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "Full resource Id of a group."
        }
      },
      "required": [
        "groupId"
      ]
    },
    "ProductState": {
      "type": "string",
      "description": "whether product is published or not. Published products are discoverable by users of developer portal. Non published products are visible only to administrators. Default state of Product is notPublished.",
      "enum": [
        "notPublished",
        "published"
      ],
      "x-ms-enum": {
        "name": "ProductState",
        "modelAsString": false
      }
    },
    "ProductTagResourceContractProperties": {
      "type": "object",
      "description": "Product profile.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the product in the form of /products/{productId}"
        },
        "name": {
          "type": "string",
          "description": "Product name.",
          "minLength": 1,
          "maxLength": 300
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ProductEntityBaseParameters"
        }
      ]
    },
    "ProductUpdateParameters": {
      "type": "object",
      "description": "Product Update parameters.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProductUpdateProperties",
          "description": "Product entity Update contract properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ProductUpdateProperties": {
      "type": "object",
      "description": "Parameters supplied to the Update Product operation.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Product name.",
          "minLength": 1,
          "maxLength": 300
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProductEntityBaseParameters"
        }
      ]
    },
    "Protocol": {
      "type": "string",
      "enum": [
        "http",
        "https",
        "ws",
        "wss"
      ],
      "x-ms-enum": {
        "name": "Protocol",
        "modelAsString": true,
        "values": [
          {
            "name": "http",
            "value": "http"
          },
          {
            "name": "https",
            "value": "https"
          },
          {
            "name": "ws",
            "value": "ws"
          },
          {
            "name": "wss",
            "value": "wss"
          }
        ]
      }
    },
    "PublicNetworkAccess": {
      "type": "string",
      "description": "Whether or not public endpoint access is allowed for this API Management service.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled'",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "QuotaCounterCollection": {
      "type": "object",
      "description": "Paged Quota Counter list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Quota counter values.",
          "items": {
            "$ref": "#/definitions/QuotaCounterContract"
          },
          "x-ms-identifiers": [
            "counterKey",
            "periodKey"
          ]
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "QuotaCounterContract": {
      "type": "object",
      "description": "Quota counter details.",
      "properties": {
        "counterKey": {
          "type": "string",
          "description": "The Key value of the Counter. Must not be empty.",
          "minLength": 1
        },
        "periodKey": {
          "type": "string",
          "description": "Identifier of the Period for which the counter was collected. Must not be empty.",
          "minLength": 1
        },
        "periodStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the start of Counter Period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        },
        "periodEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the end of Counter Period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        },
        "value": {
          "$ref": "#/definitions/QuotaCounterValueContractProperties",
          "description": "Quota Value Properties"
        }
      },
      "required": [
        "counterKey",
        "periodKey",
        "periodStartTime",
        "periodEndTime"
      ]
    },
    "QuotaCounterValueContract": {
      "type": "object",
      "description": "Quota counter value details.",
      "properties": {
        "value": {
          "$ref": "#/definitions/QuotaCounterValueContractProperties",
          "description": "Quota counter Value Properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "QuotaCounterValueContractProperties": {
      "type": "object",
      "description": "Quota counter value details.",
      "properties": {
        "callsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of times Counter was called."
        },
        "kbTransferred": {
          "type": "number",
          "format": "double",
          "description": "Data Transferred in KiloBytes."
        }
      }
    },
    "QuotaCounterValueUpdateContract": {
      "type": "object",
      "description": "Quota counter value details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/QuotaCounterValueContractProperties",
          "description": "Quota counter value details.",
          "x-ms-client-flatten": true
        }
      }
    },
    "RecipientEmailCollection": {
      "type": "object",
      "description": "Paged Recipient User list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/RecipientEmailContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "RecipientEmailContract": {
      "type": "object",
      "description": "Recipient Email details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecipientEmailContractProperties",
          "description": "Recipient Email contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RecipientEmailContractProperties": {
      "type": "object",
      "description": "Recipient Email Contract Properties.",
      "properties": {
        "email": {
          "type": "string",
          "description": "User Email subscribed to notification."
        }
      }
    },
    "RecipientUserCollection": {
      "type": "object",
      "description": "Paged Recipient User list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/RecipientUserContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "RecipientUserContract": {
      "type": "object",
      "description": "Recipient User details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecipientUsersContractProperties",
          "description": "Recipient User entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RecipientUsersContractProperties": {
      "type": "object",
      "description": "Recipient User Contract Properties.",
      "properties": {
        "userId": {
          "type": "string",
          "description": "API Management UserId subscribed to notification."
        }
      }
    },
    "RecipientsContractProperties": {
      "type": "object",
      "description": "Notification Parameter contract.",
      "properties": {
        "emails": {
          "type": "array",
          "description": "List of Emails subscribed for the notification.",
          "items": {
            "type": "string"
          }
        },
        "users": {
          "type": "array",
          "description": "List of Users subscribed for the notification.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RegionContract": {
      "type": "object",
      "description": "Region profile.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Region name.",
          "readOnly": true
        },
        "isMasterRegion": {
          "type": "boolean",
          "description": "whether Region is the master region."
        },
        "isDeleted": {
          "type": "boolean",
          "description": "whether Region is deleted."
        }
      }
    },
    "RegionListResult": {
      "type": "object",
      "description": "Lists Regions operation response details.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Lists of Regions.",
          "items": {
            "$ref": "#/definitions/RegionContract"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "RegistrationDelegationSettingsProperties": {
      "type": "object",
      "description": "User registration delegation settings properties.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable or disable delegation for user registration."
        }
      }
    },
    "ReleaseChannel": {
      "type": "string",
      "description": "Release Channel of this API Management service.",
      "enum": [
        "Preview",
        "Default",
        "Stable"
      ],
      "x-ms-enum": {
        "name": "ReleaseChannel",
        "modelAsString": true,
        "values": [
          {
            "name": "Preview",
            "value": "Preview",
            "description": "Preview Channel of the service."
          },
          {
            "name": "Default",
            "value": "Default",
            "description": "Default Channel of the service."
          },
          {
            "name": "Stable",
            "value": "Stable",
            "description": "Stable Channel of the service."
          }
        ]
      }
    },
    "RemotePrivateEndpointConnectionWrapper": {
      "type": "object",
      "description": "Remote Private Endpoint Connection resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Private Endpoint connection resource id"
        },
        "name": {
          "type": "string",
          "description": "Private Endpoint Connection Name"
        },
        "type": {
          "type": "string",
          "description": "Private Endpoint Connection Resource Type"
        },
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionWrapperProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ReportCollection": {
      "type": "object",
      "description": "Paged Report records list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/ReportRecordContract"
          },
          "x-ms-identifiers": [
            "name",
            "userId"
          ]
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "ReportRecordContract": {
      "type": "object",
      "description": "Report data.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name depending on report endpoint specifies product, API, operation or developer name."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Start of aggregation period. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        },
        "interval": {
          "type": "string",
          "description": "Length of aggregation period.  Interval must be multiple of 15 minutes and may not be zero. The value should be in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations)."
        },
        "country": {
          "type": "string",
          "description": "Country to which this record data is related."
        },
        "region": {
          "type": "string",
          "description": "Country region to which this record data is related."
        },
        "zip": {
          "type": "string",
          "description": "Zip code to which this record data is related."
        },
        "userId": {
          "type": "string",
          "description": "User identifier path. /users/{userId}",
          "readOnly": true
        },
        "productId": {
          "type": "string",
          "description": "Product identifier path. /products/{productId}",
          "readOnly": true
        },
        "apiId": {
          "type": "string",
          "description": "API identifier path. /apis/{apiId}"
        },
        "operationId": {
          "type": "string",
          "description": "Operation identifier path. /apis/{apiId}/operations/{operationId}"
        },
        "apiRegion": {
          "type": "string",
          "description": "API region identifier."
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription identifier path. /subscriptions/{subscriptionId}"
        },
        "callCountSuccess": {
          "type": "integer",
          "format": "int32",
          "description": "Number of successful calls. This includes calls returning HttpStatusCode <= 301 and HttpStatusCode.NotModified and HttpStatusCode.TemporaryRedirect"
        },
        "callCountBlocked": {
          "type": "integer",
          "format": "int32",
          "description": "Number of calls blocked due to invalid credentials. This includes calls returning HttpStatusCode.Unauthorized and HttpStatusCode.Forbidden and HttpStatusCode.TooManyRequests"
        },
        "callCountFailed": {
          "type": "integer",
          "format": "int32",
          "description": "Number of calls failed due to gateway or backend errors. This includes calls returning HttpStatusCode.BadRequest(400) and any Code between HttpStatusCode.InternalServerError (500) and 600"
        },
        "callCountOther": {
          "type": "integer",
          "format": "int32",
          "description": "Number of other calls."
        },
        "callCountTotal": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of calls."
        },
        "bandwidth": {
          "type": "integer",
          "format": "int64",
          "description": "Bandwidth consumed."
        },
        "cacheHitCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of times when content was served from cache policy."
        },
        "cacheMissCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of times content was fetched from backend."
        },
        "apiTimeAvg": {
          "type": "number",
          "format": "double",
          "description": "Average time it took to process request."
        },
        "apiTimeMin": {
          "type": "number",
          "format": "double",
          "description": "Minimum time it took to process request."
        },
        "apiTimeMax": {
          "type": "number",
          "format": "double",
          "description": "Maximum time it took to process request."
        },
        "serviceTimeAvg": {
          "type": "number",
          "format": "double",
          "description": "Average time it took to process request on backend."
        },
        "serviceTimeMin": {
          "type": "number",
          "format": "double",
          "description": "Minimum time it took to process request on backend."
        },
        "serviceTimeMax": {
          "type": "number",
          "format": "double",
          "description": "Maximum time it took to process request on backend."
        }
      }
    },
    "RepresentationContract": {
      "type": "object",
      "description": "Operation request/response representation details.",
      "properties": {
        "contentType": {
          "type": "string",
          "description": "Specifies a registered or custom content type for this representation, e.g. application/xml."
        },
        "schemaId": {
          "type": "string",
          "description": "Schema identifier. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'."
        },
        "typeName": {
          "type": "string",
          "description": "Type name defined by the schema. Applicable only if 'contentType' value is neither 'application/x-www-form-urlencoded' nor 'multipart/form-data'."
        },
        "formParameters": {
          "type": "array",
          "description": "Collection of form parameters. Required if 'contentType' value is either 'application/x-www-form-urlencoded' or 'multipart/form-data'..",
          "items": {
            "$ref": "#/definitions/ParameterContract"
          },
          "x-ms-identifiers": [
            "name",
            "type"
          ]
        },
        "examples": {
          "type": "object",
          "description": "Exampled defined for the representation.",
          "additionalProperties": {
            "$ref": "#/definitions/ParameterExampleContract"
          }
        }
      },
      "required": [
        "contentType"
      ]
    },
    "RequestContract": {
      "type": "object",
      "description": "Operation request details.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Operation request description."
        },
        "queryParameters": {
          "type": "array",
          "description": "Collection of operation request query parameters.",
          "items": {
            "$ref": "#/definitions/ParameterContract"
          },
          "x-ms-identifiers": [
            "name",
            "type"
          ]
        },
        "headers": {
          "type": "array",
          "description": "Collection of operation request headers.",
          "items": {
            "$ref": "#/definitions/ParameterContract"
          },
          "x-ms-identifiers": [
            "name",
            "type"
          ]
        },
        "representations": {
          "type": "array",
          "description": "Collection of operation request representations.",
          "items": {
            "$ref": "#/definitions/RepresentationContract"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "RequestReportCollection": {
      "type": "object",
      "description": "Paged Report records list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/RequestReportRecordContract"
          },
          "x-ms-identifiers": [
            "url"
          ]
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "RequestReportRecordContract": {
      "type": "object",
      "description": "Request Report data.",
      "properties": {
        "apiId": {
          "type": "string",
          "description": "API identifier path. /apis/{apiId}"
        },
        "operationId": {
          "type": "string",
          "description": "Operation identifier path. /apis/{apiId}/operations/{operationId}"
        },
        "productId": {
          "type": "string",
          "description": "Product identifier path. /products/{productId}",
          "readOnly": true
        },
        "userId": {
          "type": "string",
          "description": "User identifier path. /users/{userId}",
          "readOnly": true
        },
        "method": {
          "type": "string",
          "description": "The HTTP method associated with this request.."
        },
        "url": {
          "type": "string",
          "description": "The full URL associated with this request."
        },
        "ipAddress": {
          "type": "string",
          "description": "The client IP address associated with this request."
        },
        "backendResponseCode": {
          "type": "string",
          "description": "The HTTP status code received by the gateway as a result of forwarding this request to the backend."
        },
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "The HTTP status code returned by the gateway."
        },
        "responseSize": {
          "type": "integer",
          "format": "int32",
          "description": "The size of the response returned by the gateway."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when this request was received by the gateway in ISO 8601 format."
        },
        "cache": {
          "type": "string",
          "description": "Specifies if response cache was involved in generating the response. If the value is none, the cache was not used. If the value is hit, cached response was returned. If the value is miss, the cache was used but lookup resulted in a miss and request was fulfilled by the backend."
        },
        "apiTime": {
          "type": "number",
          "format": "double",
          "description": "The total time it took to process this request."
        },
        "serviceTime": {
          "type": "number",
          "format": "double",
          "description": "he time it took to forward this request to the backend and get the response back."
        },
        "apiRegion": {
          "type": "string",
          "description": "Azure region where the gateway that processed this request is located."
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription identifier path. /subscriptions/{subscriptionId}"
        },
        "requestId": {
          "type": "string",
          "description": "Request Identifier."
        },
        "requestSize": {
          "type": "integer",
          "format": "int32",
          "description": "The size of this request.."
        }
      }
    },
    "ResolverCollection": {
      "type": "object",
      "description": "Paged Resolver list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/ResolverContract"
          },
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      }
    },
    "ResolverContract": {
      "type": "object",
      "description": "GraphQL API Resolver details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ResolverEntityBaseContract",
          "description": "Properties of the Resolver Contract.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ResolverEntityBaseContract": {
      "type": "object",
      "description": "GraphQL API Resolver Entity Base Contract details.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Resolver Name.",
          "minLength": 1,
          "maxLength": 300
        },
        "path": {
          "type": "string",
          "description": "Path is type/field being resolved.",
          "minLength": 1,
          "maxLength": 300
        },
        "description": {
          "type": "string",
          "description": "Description of the resolver. May include HTML formatting tags.",
          "maxLength": 1000
        }
      }
    },
    "ResolverResultContract": {
      "type": "object",
      "description": "Long Running Git Resolver Results.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ResolverResultContractProperties",
          "description": "Properties of the Resolver Contract.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ResolverResultContractProperties": {
      "type": "object",
      "description": "Resolver Result.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resolver result identifier."
        },
        "status": {
          "$ref": "#/definitions/AsyncResolverStatus",
          "description": "Status of an async resolver."
        },
        "started": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of an async resolver. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last update time of an async resolver. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        },
        "resultInfo": {
          "type": "string",
          "description": "Optional result info."
        },
        "error": {
          "$ref": "#/definitions/ErrorResponseBody",
          "description": "Error Body Contract"
        },
        "actionLog": {
          "type": "array",
          "description": "This property if only provided as part of the TenantConfiguration_Validate resolver. It contains the log the entities which will be updated/created/deleted as part of the TenantConfiguration_Deploy resolver.",
          "items": {
            "$ref": "#/definitions/ResolverResultLogItemContract"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "objectKey"
          ]
        }
      }
    },
    "ResolverResultLogItemContract": {
      "type": "object",
      "description": "Log of the entity being created, updated or deleted.",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "The type of entity contract."
        },
        "action": {
          "type": "string",
          "description": "Action like create/update/delete."
        },
        "objectKey": {
          "type": "string",
          "description": "Identifier of the entity being created/updated/deleted."
        }
      }
    },
    "ResolverUpdateContract": {
      "type": "object",
      "description": "GraphQL API Resolver Update Contract details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ResolverUpdateContractProperties",
          "description": "Properties of the GraphQL API Resolver entity that can be updated.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ResolverUpdateContractProperties": {
      "type": "object",
      "description": "Resolver Update Contract Properties.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Resolver Name.",
          "minLength": 1,
          "maxLength": 300
        },
        "path": {
          "type": "string",
          "description": "Path is type/field being resolved.",
          "minLength": 1,
          "maxLength": 300
        },
        "description": {
          "type": "string",
          "description": "Description of the resolver. May include HTML formatting tags.",
          "maxLength": 1000
        }
      }
    },
    "ResourceCollection": {
      "type": "object",
      "description": "A collection of resources.",
      "properties": {
        "value": {
          "type": "array",
          "description": "A collection of resources.",
          "items": {
            "$ref": "#/definitions/ResourceCollectionValueItem"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "ResourceCollectionValueItem": {
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ResourceLocationDataContract": {
      "type": "object",
      "description": "Resource location data properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "A canonical name for the geographic or physical location.",
          "maxLength": 256
        },
        "city": {
          "type": "string",
          "description": "The city or locality where the resource is located.",
          "maxLength": 256
        },
        "district": {
          "type": "string",
          "description": "The district, state, or province where the resource is located.",
          "maxLength": 256
        },
        "countryOrRegion": {
          "type": "string",
          "description": "The country or region where the resource is located.",
          "maxLength": 256
        }
      },
      "required": [
        "name"
      ]
    },
    "ResourceSku": {
      "type": "object",
      "description": "Describes an available API Management SKU.",
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuType",
          "description": "Name of the Sku."
        }
      }
    },
    "ResourceSkuCapacity": {
      "type": "object",
      "description": "Describes scaling information of a SKU.",
      "properties": {
        "minimum": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum capacity.",
          "readOnly": true
        },
        "maximum": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum capacity that can be set.",
          "readOnly": true
        },
        "default": {
          "type": "integer",
          "format": "int32",
          "description": "The default capacity.",
          "readOnly": true
        },
        "scaleType": {
          "$ref": "#/definitions/ResourceSkuCapacityScaleType",
          "description": "The scale type applicable to the sku.",
          "readOnly": true
        }
      }
    },
    "ResourceSkuCapacityScaleType": {
      "type": "string",
      "description": "The scale type applicable to the sku.",
      "enum": [
        "automatic",
        "manual",
        "none"
      ],
      "x-ms-enum": {
        "name": "ResourceSkuCapacityScaleType",
        "modelAsString": true,
        "values": [
          {
            "name": "automatic",
            "value": "automatic",
            "description": "Supported scale type automatic."
          },
          {
            "name": "manual",
            "value": "manual",
            "description": "Supported scale type manual."
          },
          {
            "name": "none",
            "value": "none",
            "description": "Scaling not supported."
          }
        ]
      }
    },
    "ResourceSkuResult": {
      "type": "object",
      "description": "Describes an available API Management service SKU.",
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "The type of resource the SKU applies to.",
          "readOnly": true
        },
        "sku": {
          "$ref": "#/definitions/ResourceSku",
          "description": "Specifies API Management SKU.",
          "readOnly": true
        },
        "capacity": {
          "$ref": "#/definitions/ResourceSkuCapacity",
          "description": "Specifies the number of API Management units.",
          "readOnly": true
        }
      }
    },
    "ResourceSkuResults": {
      "type": "object",
      "description": "The API Management service SKUs operation response.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of skus available for the service.",
          "items": {
            "$ref": "#/definitions/ResourceSkuResult"
          },
          "x-ms-identifiers": [
            "resourceType",
            "sku/name"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of API Management service Skus."
        }
      },
      "required": [
        "value"
      ]
    },
    "ResponseContract": {
      "type": "object",
      "description": "Operation response details.",
      "properties": {
        "statusCode": {
          "type": "integer",
          "format": "int32",
          "description": "Operation response HTTP status code."
        },
        "description": {
          "type": "string",
          "description": "Operation response description."
        },
        "representations": {
          "type": "array",
          "description": "Collection of operation response representations.",
          "items": {
            "$ref": "#/definitions/RepresentationContract"
          },
          "x-ms-identifiers": []
        },
        "headers": {
          "type": "array",
          "description": "Collection of operation response headers.",
          "items": {
            "$ref": "#/definitions/ParameterContract"
          },
          "x-ms-identifiers": [
            "name",
            "type"
          ]
        }
      },
      "required": [
        "statusCode"
      ]
    },
    "SamplingSettings": {
      "type": "object",
      "description": "Sampling settings for Diagnostic.",
      "properties": {
        "samplingType": {
          "$ref": "#/definitions/SamplingType",
          "description": "Sampling type."
        },
        "percentage": {
          "type": "number",
          "format": "double",
          "description": "Rate of sampling for fixed-rate sampling.",
          "minimum": 0,
          "maximum": 100
        }
      }
    },
    "SamplingType": {
      "type": "string",
      "description": "Sampling type.",
      "enum": [
        "fixed"
      ],
      "x-ms-enum": {
        "name": "SamplingType",
        "modelAsString": true,
        "values": [
          {
            "name": "fixed",
            "value": "fixed",
            "description": "Fixed-rate sampling."
          }
        ]
      }
    },
    "SaveConfigurationParameter": {
      "type": "object",
      "description": "Save Tenant Configuration Contract details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SaveConfigurationParameterProperties",
          "description": "Properties of the Save Configuration Parameters.",
          "x-ms-client-flatten": true
        }
      }
    },
    "SaveConfigurationParameterProperties": {
      "type": "object",
      "description": "Parameters supplied to the Save Tenant Configuration operation.",
      "properties": {
        "branch": {
          "type": "string",
          "description": "The name of the Git branch in which to commit the current configuration snapshot."
        },
        "force": {
          "type": "boolean",
          "description": "The value if true, the current configuration database is committed to the Git repository, even if the Git repository has newer changes that would be overwritten."
        }
      },
      "required": [
        "branch"
      ]
    },
    "SchemaCollection": {
      "type": "object",
      "description": "The response of the list schema operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "API Schema Contract value.",
          "items": {
            "$ref": "#/definitions/SchemaContract"
          },
          "readOnly": true
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      }
    },
    "SchemaContract": {
      "type": "object",
      "description": "API Schema Contract details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SchemaContractProperties",
          "description": "Properties of the API Schema.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SchemaContractProperties": {
      "type": "object",
      "description": "API Schema create or update contract Properties.",
      "properties": {
        "contentType": {
          "type": "string",
          "description": "Must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml). </br> - `Swagger` Schema use `application/vnd.ms-azure-apim.swagger.definitions+json` </br> - `WSDL` Schema use `application/vnd.ms-azure-apim.xsd+xml` </br> - `OpenApi` Schema use `application/vnd.oai.openapi.components+json` </br> - `WADL Schema` use `application/vnd.ms-azure-apim.wadl.grammars+xml` </br> - `OData Schema` use `application/vnd.ms-azure-apim.odata.schema` </br> - `gRPC Schema` use `text/protobuf`."
        },
        "document": {
          "$ref": "#/definitions/SchemaDocumentProperties",
          "description": "Create or update Properties of the API Schema Document.",
          "x-ms-client-flatten": true
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state",
          "readOnly": true
        }
      },
      "required": [
        "contentType",
        "document"
      ]
    },
    "SchemaDocumentProperties": {
      "type": "object",
      "description": "Api Schema Document Properties.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Json escaped string defining the document representing the Schema. Used for schemas other than Swagger/OpenAPI."
        },
        "definitions": {
          "description": "Types definitions. Used for Swagger/OpenAPI v1 schemas only, null otherwise."
        },
        "components": {
          "description": "Types definitions. Used for Swagger/OpenAPI v2/v3 schemas only, null otherwise."
        }
      }
    },
    "SchemaType": {
      "type": "string",
      "description": "Schema Type. Immutable.",
      "enum": [
        "xml",
        "json"
      ],
      "x-ms-enum": {
        "name": "SchemaType",
        "modelAsString": true,
        "values": [
          {
            "name": "Xml",
            "value": "xml",
            "description": "XML schema type."
          },
          {
            "name": "Json",
            "value": "json",
            "description": "Json schema type."
          }
        ]
      }
    },
    "SettingsTypeName": {
      "type": "string",
      "enum": [
        "public"
      ],
      "x-ms-enum": {
        "name": "SettingsTypeName",
        "modelAsString": true,
        "values": [
          {
            "name": "public",
            "value": "public"
          }
        ]
      }
    },
    "Severity": {
      "type": "string",
      "description": "The severity of the issue.",
      "enum": [
        "Error",
        "Warning"
      ],
      "x-ms-enum": {
        "name": "Severity",
        "modelAsString": true,
        "values": [
          {
            "name": "Error",
            "value": "Error"
          },
          {
            "name": "Warning",
            "value": "Warning"
          }
        ]
      }
    },
    "SkuType": {
      "type": "string",
      "description": "Name of the Sku.",
      "enum": [
        "Developer",
        "Standard",
        "Premium",
        "Basic",
        "Consumption",
        "Isolated",
        "BasicV2",
        "StandardV2"
      ],
      "x-ms-enum": {
        "name": "SkuType",
        "modelAsString": true,
        "values": [
          {
            "name": "Developer",
            "value": "Developer",
            "description": "Developer SKU of Api Management."
          },
          {
            "name": "Standard",
            "value": "Standard",
            "description": "Standard SKU of Api Management."
          },
          {
            "name": "Premium",
            "value": "Premium",
            "description": "Premium SKU of Api Management."
          },
          {
            "name": "Basic",
            "value": "Basic",
            "description": "Basic SKU of Api Management."
          },
          {
            "name": "Consumption",
            "value": "Consumption",
            "description": "Consumption SKU of Api Management."
          },
          {
            "name": "Isolated",
            "value": "Isolated",
            "description": "Isolated SKU of Api Management."
          },
          {
            "name": "BasicV2",
            "value": "BasicV2",
            "description": "BasicV2 SKU of Api Management."
          },
          {
            "name": "StandardV2",
            "value": "StandardV2",
            "description": "StandardV2 SKU of Api Management."
          }
        ]
      }
    },
    "SoapApiType": {
      "type": "string",
      "description": "Type of API to create.\n* `http` creates a REST API\n* `soap` creates a SOAP pass-through API\n* `websocket` creates websocket API\n* `graphql` creates GraphQL API.\nNew types can be added in the future.",
      "enum": [
        "http",
        "soap",
        "websocket",
        "graphql",
        "odata",
        "grpc"
      ],
      "x-ms-enum": {
        "name": "SoapApiType",
        "modelAsString": true,
        "values": [
          {
            "name": "SoapToRest",
            "value": "http",
            "description": "Imports a SOAP API having a RESTful front end."
          },
          {
            "name": "SoapPassThrough",
            "value": "soap",
            "description": "Imports the SOAP API having a SOAP front end."
          },
          {
            "name": "WebSocket",
            "value": "websocket",
            "description": "Imports the API having a Websocket front end."
          },
          {
            "name": "GraphQL",
            "value": "graphql",
            "description": "Imports the API having a GraphQL front end."
          },
          {
            "name": "OData",
            "value": "odata",
            "description": "Imports the API having a OData front end."
          },
          {
            "name": "gRPC",
            "value": "grpc",
            "description": "Imports the API having a gRPC front end."
          }
        ]
      }
    },
    "State": {
      "type": "string",
      "description": "Status of the issue.",
      "enum": [
        "proposed",
        "open",
        "removed",
        "resolved",
        "closed"
      ],
      "x-ms-enum": {
        "name": "State",
        "modelAsString": true,
        "values": [
          {
            "name": "proposed",
            "value": "proposed",
            "description": "The issue is proposed."
          },
          {
            "name": "open",
            "value": "open",
            "description": "The issue is opened."
          },
          {
            "name": "removed",
            "value": "removed",
            "description": "The issue was removed."
          },
          {
            "name": "resolved",
            "value": "resolved",
            "description": "The issue is now resolved."
          },
          {
            "name": "closed",
            "value": "closed",
            "description": "The issue was closed."
          }
        ]
      }
    },
    "SubscriptionCollection": {
      "type": "object",
      "description": "Paged Subscriptions list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/SubscriptionContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "SubscriptionContract": {
      "type": "object",
      "description": "Subscription details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SubscriptionContractProperties",
          "description": "Subscription contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SubscriptionContractProperties": {
      "type": "object",
      "description": "Subscription details.",
      "properties": {
        "ownerId": {
          "type": "string",
          "description": "The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/{userId} where {userId} is a user identifier."
        },
        "scope": {
          "type": "string",
          "description": "Scope like /products/{productId} or /apis or /apis/{apiId}."
        },
        "displayName": {
          "type": "string",
          "description": "The name of the subscription, or null if the subscription has no name.",
          "minLength": 0,
          "maxLength": 100
        },
        "state": {
          "$ref": "#/definitions/SubscriptionState",
          "description": "Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated."
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.",
          "readOnly": true
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "Subscription activation date. The setting is for audit purposes only and the subscription is not automatically activated. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date when subscription was cancelled or expired. The setting is for audit purposes only and the subscription is not automatically cancelled. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        },
        "notificationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Upcoming subscription expiration notification date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        },
        "primaryKey": {
          "type": "string",
          "format": "password",
          "description": "Subscription primary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
          "minLength": 1,
          "maxLength": 256,
          "x-ms-secret": true
        },
        "secondaryKey": {
          "type": "string",
          "format": "password",
          "description": "Subscription secondary key. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value.",
          "minLength": 1,
          "maxLength": 256,
          "x-ms-secret": true
        },
        "stateComment": {
          "type": "string",
          "description": "Optional subscription comment added by an administrator when the state is changed to the 'rejected'."
        },
        "allowTracing": {
          "type": "boolean",
          "description": "Determines whether tracing is enabled"
        }
      },
      "required": [
        "scope",
        "state"
      ]
    },
    "SubscriptionCreateParameterProperties": {
      "type": "object",
      "description": "Parameters supplied to the Create subscription operation.",
      "properties": {
        "ownerId": {
          "type": "string",
          "description": "User (user id path) for whom subscription is being created in form /users/{userId}"
        },
        "scope": {
          "type": "string",
          "description": "Scope like /products/{productId} or /apis or /apis/{apiId}."
        },
        "displayName": {
          "type": "string",
          "description": "Subscription name.",
          "minLength": 1,
          "maxLength": 100
        },
        "primaryKey": {
          "type": "string",
          "description": "Primary subscription key. If not specified during request key will be generated automatically.",
          "minLength": 1,
          "maxLength": 256
        },
        "secondaryKey": {
          "type": "string",
          "description": "Secondary subscription key. If not specified during request key will be generated automatically.",
          "minLength": 1,
          "maxLength": 256
        },
        "state": {
          "$ref": "#/definitions/SubscriptionState",
          "description": "Initial subscription state. If no value is specified, subscription is created with Submitted state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated."
        },
        "allowTracing": {
          "type": "boolean",
          "description": "Determines whether tracing can be enabled"
        }
      },
      "required": [
        "scope",
        "displayName"
      ]
    },
    "SubscriptionCreateParameters": {
      "type": "object",
      "description": "Subscription create details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SubscriptionCreateParameterProperties",
          "description": "Subscription contract properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "SubscriptionKeyParameterNamesContract": {
      "type": "object",
      "description": "Subscription key parameter names details.",
      "properties": {
        "header": {
          "type": "string",
          "description": "Subscription key header name."
        },
        "query": {
          "type": "string",
          "description": "Subscription key query string parameter name."
        }
      }
    },
    "SubscriptionKeysContract": {
      "type": "object",
      "description": "Subscription keys.",
      "properties": {
        "primaryKey": {
          "type": "string",
          "description": "Subscription primary key.",
          "minLength": 1,
          "maxLength": 256
        },
        "secondaryKey": {
          "type": "string",
          "description": "Subscription secondary key.",
          "minLength": 1,
          "maxLength": 256
        }
      }
    },
    "SubscriptionState": {
      "type": "string",
      "description": "Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated.",
      "enum": [
        "suspended",
        "active",
        "expired",
        "submitted",
        "rejected",
        "cancelled"
      ],
      "x-ms-enum": {
        "name": "SubscriptionState",
        "modelAsString": false
      }
    },
    "SubscriptionUpdateParameterProperties": {
      "type": "object",
      "description": "Parameters supplied to the Update subscription operation.",
      "properties": {
        "ownerId": {
          "type": "string",
          "description": "User identifier path: /users/{userId}"
        },
        "scope": {
          "type": "string",
          "description": "Scope like /products/{productId} or /apis or /apis/{apiId}"
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        },
        "displayName": {
          "type": "string",
          "description": "Subscription name."
        },
        "primaryKey": {
          "type": "string",
          "description": "Primary subscription key.",
          "minLength": 1,
          "maxLength": 256
        },
        "secondaryKey": {
          "type": "string",
          "description": "Secondary subscription key.",
          "minLength": 1,
          "maxLength": 256
        },
        "state": {
          "$ref": "#/definitions/SubscriptionState",
          "description": "Subscription state. Possible states are * active – the subscription is active, * suspended – the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted – the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected – the subscription request has been denied by an administrator, * cancelled – the subscription has been cancelled by the developer or administrator, * expired – the subscription reached its expiration date and was deactivated."
        },
        "stateComment": {
          "type": "string",
          "description": "Comments describing subscription state change by the administrator when the state is changed to the 'rejected'."
        },
        "allowTracing": {
          "type": "boolean",
          "description": "Determines whether tracing can be enabled"
        }
      }
    },
    "SubscriptionUpdateParameters": {
      "type": "object",
      "description": "Subscription update details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SubscriptionUpdateParameterProperties",
          "description": "Subscription Update contract properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "SubscriptionsDelegationSettingsProperties": {
      "type": "object",
      "description": "Subscriptions delegation settings properties.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable or disable delegation for subscriptions."
        }
      }
    },
    "TagApiLinkCollection": {
      "type": "object",
      "description": "Paged Tag-API link list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/TagApiLinkContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "TagApiLinkContract": {
      "type": "object",
      "description": "Tag-API link details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TagApiLinkContractProperties",
          "description": "Tag-API link entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TagApiLinkContractProperties": {
      "type": "object",
      "description": "Tag-API link entity properties.",
      "properties": {
        "apiId": {
          "type": "string",
          "description": "Full resource Id of an API."
        }
      },
      "required": [
        "apiId"
      ]
    },
    "TagCollection": {
      "type": "object",
      "description": "Paged Tag list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/TagContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "TagContract": {
      "type": "object",
      "description": "Tag Contract details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TagContractProperties",
          "description": "Tag entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TagContractProperties": {
      "type": "object",
      "description": "Tag contract Properties.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Tag name.",
          "minLength": 1,
          "maxLength": 160
        }
      },
      "required": [
        "displayName"
      ]
    },
    "TagCreateUpdateParameters": {
      "type": "object",
      "description": "Parameters supplied to Create/Update Tag operations.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TagContractProperties",
          "description": "Properties supplied to Create Tag operation.",
          "x-ms-client-flatten": true
        }
      }
    },
    "TagDescriptionBaseProperties": {
      "type": "object",
      "description": "Parameters supplied to the Create TagDescription operation.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the Tag."
        },
        "externalDocsUrl": {
          "type": "string",
          "description": "Absolute URL of external resources describing the tag.",
          "maxLength": 2000
        },
        "externalDocsDescription": {
          "type": "string",
          "description": "Description of the external resources describing the tag."
        }
      }
    },
    "TagDescriptionCollection": {
      "type": "object",
      "description": "Paged TagDescription list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/TagDescriptionContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "TagDescriptionContract": {
      "type": "object",
      "description": "Contract details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TagDescriptionContractProperties",
          "description": "TagDescription entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TagDescriptionContractProperties": {
      "type": "object",
      "description": "TagDescription contract Properties.",
      "properties": {
        "tagId": {
          "type": "string",
          "description": "Identifier of the tag in the form of /tags/{tagId}"
        },
        "displayName": {
          "type": "string",
          "description": "Tag name.",
          "minLength": 1,
          "maxLength": 160
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TagDescriptionBaseProperties"
        }
      ]
    },
    "TagDescriptionCreateParameters": {
      "type": "object",
      "description": "Parameters supplied to the Create TagDescription operation.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TagDescriptionBaseProperties",
          "description": "Properties supplied to Create TagDescription operation.",
          "x-ms-client-flatten": true
        }
      }
    },
    "TagOperationLinkCollection": {
      "type": "object",
      "description": "Paged Tag-operation link list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/TagOperationLinkContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "TagOperationLinkContract": {
      "type": "object",
      "description": "Tag-operation link details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TagOperationLinkContractProperties",
          "description": "Tag-API link entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TagOperationLinkContractProperties": {
      "type": "object",
      "description": "Tag-operation link entity properties.",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "Full resource Id of an API operation."
        }
      },
      "required": [
        "operationId"
      ]
    },
    "TagProductLinkCollection": {
      "type": "object",
      "description": "Paged Tag-product link list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/TagProductLinkContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "TagProductLinkContract": {
      "type": "object",
      "description": "Tag-product link details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TagProductLinkContractProperties",
          "description": "Tag-API link entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TagProductLinkContractProperties": {
      "type": "object",
      "description": "Tag-product link entity properties.",
      "properties": {
        "productId": {
          "type": "string",
          "description": "Full resource Id of a product."
        }
      },
      "required": [
        "productId"
      ]
    },
    "TagResourceCollection": {
      "type": "object",
      "description": "Paged Tag list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/TagResourceContract"
          },
          "x-ms-identifiers": [
            "tag/id"
          ]
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "TagResourceContract": {
      "type": "object",
      "description": "TagResource contract properties.",
      "properties": {
        "tag": {
          "$ref": "#/definitions/TagTagResourceContractProperties",
          "description": "Tag associated with the resource."
        },
        "api": {
          "$ref": "#/definitions/ApiTagResourceContractProperties",
          "description": "API associated with the tag."
        },
        "operation": {
          "$ref": "#/definitions/OperationTagResourceContractProperties",
          "description": "Operation associated with the tag."
        },
        "product": {
          "$ref": "#/definitions/ProductTagResourceContractProperties",
          "description": "Product associated with the tag."
        }
      },
      "required": [
        "tag"
      ]
    },
    "TagTagResourceContractProperties": {
      "type": "object",
      "description": "Contract defining the Tag property in the Tag Resource Contract",
      "properties": {
        "id": {
          "type": "string",
          "description": "Tag identifier"
        },
        "name": {
          "type": "string",
          "description": "Tag Name",
          "minLength": 1,
          "maxLength": 160
        }
      }
    },
    "TemplateName": {
      "type": "string",
      "enum": [
        "applicationApprovedNotificationMessage",
        "accountClosedDeveloper",
        "quotaLimitApproachingDeveloperNotificationMessage",
        "newDeveloperNotificationMessage",
        "emailChangeIdentityDefault",
        "inviteUserNotificationMessage",
        "newCommentNotificationMessage",
        "confirmSignUpIdentityDefault",
        "newIssueNotificationMessage",
        "purchaseDeveloperNotificationMessage",
        "passwordResetIdentityDefault",
        "passwordResetByAdminNotificationMessage",
        "rejectDeveloperNotificationMessage",
        "requestDeveloperNotificationMessage"
      ],
      "x-ms-enum": {
        "name": "TemplateName",
        "modelAsString": true,
        "values": [
          {
            "name": "applicationApprovedNotificationMessage",
            "value": "applicationApprovedNotificationMessage"
          },
          {
            "name": "accountClosedDeveloper",
            "value": "accountClosedDeveloper"
          },
          {
            "name": "quotaLimitApproachingDeveloperNotificationMessage",
            "value": "quotaLimitApproachingDeveloperNotificationMessage"
          },
          {
            "name": "newDeveloperNotificationMessage",
            "value": "newDeveloperNotificationMessage"
          },
          {
            "name": "emailChangeIdentityDefault",
            "value": "emailChangeIdentityDefault"
          },
          {
            "name": "inviteUserNotificationMessage",
            "value": "inviteUserNotificationMessage"
          },
          {
            "name": "newCommentNotificationMessage",
            "value": "newCommentNotificationMessage"
          },
          {
            "name": "confirmSignUpIdentityDefault",
            "value": "confirmSignUpIdentityDefault"
          },
          {
            "name": "newIssueNotificationMessage",
            "value": "newIssueNotificationMessage"
          },
          {
            "name": "purchaseDeveloperNotificationMessage",
            "value": "purchaseDeveloperNotificationMessage"
          },
          {
            "name": "passwordResetIdentityDefault",
            "value": "passwordResetIdentityDefault"
          },
          {
            "name": "passwordResetByAdminNotificationMessage",
            "value": "passwordResetByAdminNotificationMessage"
          },
          {
            "name": "rejectDeveloperNotificationMessage",
            "value": "rejectDeveloperNotificationMessage"
          },
          {
            "name": "requestDeveloperNotificationMessage",
            "value": "requestDeveloperNotificationMessage"
          }
        ]
      }
    },
    "TenantConfigurationSyncStateContract": {
      "type": "object",
      "description": "Result of Tenant Configuration Sync State.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TenantConfigurationSyncStateContractProperties",
          "description": "Properties returned Tenant Configuration Sync State check.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TenantConfigurationSyncStateContractProperties": {
      "type": "object",
      "description": "Tenant Configuration Synchronization State.",
      "properties": {
        "branch": {
          "type": "string",
          "description": "The name of Git branch."
        },
        "commitId": {
          "type": "string",
          "description": "The latest commit Id."
        },
        "isExport": {
          "type": "boolean",
          "description": "value indicating if last sync was save (true) or deploy (false) operation."
        },
        "isSynced": {
          "type": "boolean",
          "description": "value indicating if last synchronization was later than the configuration change."
        },
        "isGitEnabled": {
          "type": "boolean",
          "description": "value indicating whether Git configuration access is enabled."
        },
        "syncDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the latest synchronization. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        },
        "configurationChangeDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the latest configuration change. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        },
        "lastOperationId": {
          "type": "string",
          "description": "Most recent tenant configuration operation identifier"
        }
      }
    },
    "TenantSettingsCollection": {
      "type": "object",
      "description": "Paged AccessInformation list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/TenantSettingsContract"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      }
    },
    "TenantSettingsContract": {
      "type": "object",
      "description": "Tenant Settings.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TenantSettingsContractProperties",
          "description": "TenantSettings entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TenantSettingsContractProperties": {
      "type": "object",
      "description": "Tenant access information contract of the API Management service.",
      "properties": {
        "settings": {
          "type": "object",
          "description": "Tenant settings",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TermsOfServiceProperties": {
      "type": "object",
      "description": "Terms of service contract properties.",
      "properties": {
        "text": {
          "type": "string",
          "description": "A terms of service text."
        },
        "enabled": {
          "type": "boolean",
          "description": "Display terms of service during a sign-up process."
        },
        "consentRequired": {
          "type": "boolean",
          "description": "Ask user for consent to the terms of service."
        }
      }
    },
    "TokenBodyParameterContract": {
      "type": "object",
      "description": "OAuth acquire token request body parameter (www-url-form-encoded).",
      "properties": {
        "name": {
          "type": "string",
          "description": "body parameter name."
        },
        "value": {
          "type": "string",
          "description": "body parameter value."
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "TranslateRequiredQueryParametersConduct": {
      "type": "string",
      "description": "Strategy of translating required query parameters to template ones. By default has value 'template'. Possible values: 'template', 'query'",
      "enum": [
        "template",
        "query"
      ],
      "x-ms-enum": {
        "name": "TranslateRequiredQueryParametersConduct",
        "modelAsString": true,
        "values": [
          {
            "name": "Template",
            "value": "template",
            "description": "Translates required query parameters to template ones. Is a default value"
          },
          {
            "name": "Query",
            "value": "query",
            "description": "Leaves required query parameters as they are (no translation done)."
          }
        ]
      }
    },
    "UserCollection": {
      "type": "object",
      "description": "Paged Users list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/UserContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "UserContract": {
      "type": "object",
      "description": "User details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UserContractProperties",
          "description": "User entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "UserContractProperties": {
      "type": "object",
      "description": "User profile.",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "First name."
        },
        "lastName": {
          "type": "string",
          "description": "Last name."
        },
        "email": {
          "type": "string",
          "description": "Email address."
        },
        "registrationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date of user registration. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        },
        "groups": {
          "type": "array",
          "description": "Collection of groups user is part of.",
          "items": {
            "$ref": "#/definitions/GroupContractProperties"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "displayName"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/UserEntityBaseParameters"
        }
      ]
    },
    "UserCreateParameterProperties": {
      "type": "object",
      "description": "Parameters supplied to the Create User operation.",
      "properties": {
        "email": {
          "type": "string",
          "description": "Email address. Must not be empty and must be unique within the service instance.",
          "minLength": 1,
          "maxLength": 254
        },
        "firstName": {
          "type": "string",
          "description": "First name.",
          "minLength": 1,
          "maxLength": 100
        },
        "lastName": {
          "type": "string",
          "description": "Last name.",
          "minLength": 1,
          "maxLength": 100
        },
        "password": {
          "type": "string",
          "description": "User Password. If no value is provided, a default password is generated."
        },
        "appType": {
          "$ref": "#/definitions/AppType",
          "description": "Determines the type of application which send the create user request. Default is legacy portal."
        },
        "confirmation": {
          "$ref": "#/definitions/Confirmation",
          "description": "Determines the type of confirmation e-mail that will be sent to the newly created user."
        }
      },
      "required": [
        "email",
        "firstName",
        "lastName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/UserEntityBaseParameters"
        }
      ]
    },
    "UserCreateParameters": {
      "type": "object",
      "description": "User create details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UserCreateParameterProperties",
          "description": "User entity create contract properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "UserEntityBaseParameters": {
      "type": "object",
      "description": "User Entity Base Parameters set.",
      "properties": {
        "state": {
          "type": "string",
          "description": "Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active.",
          "default": "active",
          "enum": [
            "active",
            "blocked",
            "pending",
            "deleted"
          ],
          "x-ms-enum": {
            "name": "UserState",
            "modelAsString": true,
            "values": [
              {
                "name": "active",
                "value": "active",
                "description": "User state is active."
              },
              {
                "name": "blocked",
                "value": "blocked",
                "description": "User is blocked. Blocked users cannot authenticate at developer portal or call API."
              },
              {
                "name": "pending",
                "value": "pending",
                "description": "User account is pending. Requires identity confirmation before it can be made active."
              },
              {
                "name": "deleted",
                "value": "deleted",
                "description": "User account is closed. All identities and related entities are removed."
              }
            ]
          }
        },
        "note": {
          "type": "string",
          "description": "Optional note about a user set by the administrator."
        },
        "identities": {
          "type": "array",
          "description": "Collection of user identities.",
          "items": {
            "$ref": "#/definitions/UserIdentityContract"
          }
        }
      }
    },
    "UserIdentityCollection": {
      "type": "object",
      "description": "List of Users Identity list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "User Identity values.",
          "items": {
            "$ref": "#/definitions/UserIdentityContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "UserIdentityContract": {
      "type": "object",
      "description": "User identity details.",
      "properties": {
        "provider": {
          "type": "string",
          "description": "Identity provider name."
        },
        "id": {
          "type": "string",
          "description": "Identifier value within provider."
        }
      }
    },
    "UserIdentityProperties": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal id of user assigned identity."
        },
        "clientId": {
          "type": "string",
          "description": "The client id of user assigned identity."
        }
      }
    },
    "UserState": {
      "type": "string",
      "description": "Account state. Specifies whether the user is active or not. Blocked users are unable to sign into the developer portal or call any APIs of subscribed products. Default state is Active.",
      "enum": [
        "active",
        "blocked",
        "pending",
        "deleted"
      ],
      "x-ms-enum": {
        "name": "UserState",
        "modelAsString": true,
        "values": [
          {
            "name": "active",
            "value": "active",
            "description": "User state is active."
          },
          {
            "name": "blocked",
            "value": "blocked",
            "description": "User is blocked. Blocked users cannot authenticate at developer portal or call API."
          },
          {
            "name": "pending",
            "value": "pending",
            "description": "User account is pending. Requires identity confirmation before it can be made active."
          },
          {
            "name": "deleted",
            "value": "deleted",
            "description": "User account is closed. All identities and related entities are removed."
          }
        ]
      }
    },
    "UserTokenParameterProperties": {
      "type": "object",
      "description": "Parameters supplied to the Get User Token operation.",
      "properties": {
        "keyType": {
          "type": "string",
          "description": "The Key to be used to generate token for user.",
          "default": "primary",
          "enum": [
            "primary",
            "secondary"
          ],
          "x-ms-enum": {
            "name": "KeyType",
            "modelAsString": false
          }
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "The Expiry time of the Token. Maximum token expiry time is set to 30 days. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard."
        }
      },
      "required": [
        "keyType",
        "expiry"
      ]
    },
    "UserTokenParameters": {
      "type": "object",
      "description": "Get User Token parameters.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UserTokenParameterProperties",
          "description": "User Token Parameter contract properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "UserTokenResult": {
      "type": "object",
      "description": "Get User Token response details.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Shared Access Authorization token for the User."
        }
      }
    },
    "UserUpdateParameters": {
      "type": "object",
      "description": "User update parameters.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UserUpdateParametersProperties",
          "description": "User entity update contract properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "UserUpdateParametersProperties": {
      "type": "object",
      "description": "Parameters supplied to the Update User operation.",
      "properties": {
        "email": {
          "type": "string",
          "description": "Email address. Must not be empty and must be unique within the service instance.",
          "minLength": 1,
          "maxLength": 254
        },
        "password": {
          "type": "string",
          "description": "User Password."
        },
        "firstName": {
          "type": "string",
          "description": "First name.",
          "minLength": 1,
          "maxLength": 100
        },
        "lastName": {
          "type": "string",
          "description": "Last name.",
          "minLength": 1,
          "maxLength": 100
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/UserEntityBaseParameters"
        }
      ]
    },
    "Verbosity": {
      "type": "string",
      "description": "The verbosity level applied to traces emitted by trace policies.",
      "enum": [
        "verbose",
        "information",
        "error"
      ],
      "x-ms-enum": {
        "name": "Verbosity",
        "modelAsString": true,
        "values": [
          {
            "name": "verbose",
            "value": "verbose",
            "description": "All the traces emitted by trace policies will be sent to the logger attached to this diagnostic instance."
          },
          {
            "name": "information",
            "value": "information",
            "description": "Traces with 'severity' set to 'information' and 'error' will be sent to the logger attached to this diagnostic instance."
          },
          {
            "name": "error",
            "value": "error",
            "description": "Only traces with 'severity' set to 'error' will be sent to the logger attached to this diagnostic instance."
          }
        ]
      }
    },
    "VersioningScheme": {
      "type": "string",
      "description": "An value that determines where the API Version identifier will be located in a HTTP request.",
      "enum": [
        "Segment",
        "Query",
        "Header"
      ],
      "x-ms-enum": {
        "name": "VersioningScheme",
        "modelAsString": true,
        "values": [
          {
            "name": "Segment",
            "value": "Segment",
            "description": "The API Version is passed in a path segment."
          },
          {
            "name": "Query",
            "value": "Query",
            "description": "The API Version is passed in a query parameter."
          },
          {
            "name": "Header",
            "value": "Header",
            "description": "The API Version is passed in a HTTP header."
          }
        ]
      }
    },
    "VirtualNetworkConfiguration": {
      "type": "object",
      "description": "Configuration of a virtual network to which API Management service is deployed.",
      "properties": {
        "vnetid": {
          "type": "string",
          "description": "The virtual network ID. This is typically a GUID. Expect a null GUID by default.",
          "readOnly": true
        },
        "subnetname": {
          "type": "string",
          "description": "The name of the subnet.",
          "readOnly": true
        },
        "subnetResourceId": {
          "type": "string",
          "description": "The full resource ID of a subnet in a virtual network to deploy the API Management service in.",
          "pattern": "^/subscriptions/[^/]*/resourceGroups/[^/]*/providers/Microsoft.(ClassicNetwork|Network)/virtualNetworks/[^/]*/subnets/[^/]*$"
        }
      }
    },
    "VirtualNetworkType": {
      "type": "string",
      "description": "The type of VPN in which API Management gateway needs to be configured in.",
      "enum": [
        "None",
        "External",
        "Internal"
      ],
      "x-ms-enum": {
        "name": "VirtualNetworkType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "The API Management gateway is not part of any Virtual Network."
          },
          {
            "name": "External",
            "value": "External",
            "description": "The API Management gateway is part of Virtual Network and it is accessible from Internet."
          },
          {
            "name": "Internal",
            "value": "Internal",
            "description": "The API Management gateway is part of Virtual Network and it is only accessible from within the virtual network."
          }
        ]
      }
    },
    "WikiCollection": {
      "type": "object",
      "description": "Paged Wiki list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/WikiContract"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any.",
          "readOnly": true
        }
      }
    },
    "WikiContract": {
      "type": "object",
      "description": "Wiki properties",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WikiContractProperties",
          "description": "Wiki details.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WikiContractProperties": {
      "type": "object",
      "description": "Wiki contract details",
      "properties": {
        "documents": {
          "type": "array",
          "description": "Collection wiki documents included into this wiki.",
          "items": {
            "$ref": "#/definitions/WikiDocumentationContract"
          },
          "x-ms-identifiers": [
            "documentationId"
          ]
        }
      }
    },
    "WikiDocumentationContract": {
      "type": "object",
      "description": "Wiki documentation details.",
      "properties": {
        "documentationId": {
          "type": "string",
          "description": "Documentation Identifier"
        }
      }
    },
    "WikiUpdateContract": {
      "type": "object",
      "description": "Wiki update contract details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WikiContractProperties",
          "description": "Wiki details.",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkspaceCollection": {
      "type": "object",
      "description": "Paged workspace list representation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Page values.",
          "items": {
            "$ref": "#/definitions/WorkspaceContract"
          }
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Total record count number across all pages."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      }
    },
    "WorkspaceContract": {
      "type": "object",
      "description": "Workspace details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkspaceContractProperties",
          "description": "Workspace entity contract properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkspaceContractProperties": {
      "type": "object",
      "description": "Workspace entity properties.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Name of the workspace."
        },
        "description": {
          "type": "string",
          "description": "Description of the workspace."
        }
      },
      "required": [
        "displayName"
      ]
    },
    "WorkspaceLinksBaseProperties": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The link to the API Management service workspace.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ApiManagement/service/workspaces"
              }
            ]
          }
        },
        "gateways": {
          "type": "array",
          "description": "The array of linked gateways.",
          "items": {
            "$ref": "#/definitions/WorkspaceLinksGateway"
          }
        }
      }
    },
    "WorkspaceLinksGateway": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "The link to the API Management gateway.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ApiManagement/gateways"
              }
            ]
          }
        }
      }
    },
    "X509CertificateName": {
      "type": "object",
      "description": "Properties of server X509Names.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Common Name of the Certificate."
        },
        "issuerCertificateThumbprint": {
          "type": "string",
          "description": "Thumbprint for the Issuer of the Certificate."
        }
      },
      "externalDocs": {
        "url": "https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-windows-cluster-x509-security"
      }
    }
  },
  "parameters": {}
}
