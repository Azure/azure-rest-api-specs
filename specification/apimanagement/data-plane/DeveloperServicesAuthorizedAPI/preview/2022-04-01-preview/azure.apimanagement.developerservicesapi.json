{
  "swagger": "2.0",
  "info": {
    "title": "Developer Services API - Authorized",
    "version": "2022-04-01-preview",
    "description": "Developer Services API - Everything you need to display your APIs.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "tags": [],
  "paths": {
    "/confirmations/users/{userId}/identities/basic": {
      "post": {
        "operationId": "Confirmations_CreateUserBasicIdentityConfirmation",
        "description": "Basic identity (Email) confirmation for a User.",
        "parameters": [
          {
            "$ref": "#/parameters/DeveloperServicesAPI.Models.UserParams"
          },
          {
            "name": "identityConfirmationRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeveloperServicesAPI.Models.IdentityConfirmationRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/DeveloperServicesAPI.Models.ErrorResponse"
            }
          }
        }
      }
    },
    "/delegation/urls/users/{userId}/{action}": {
      "post": {
        "operationId": "Delegation_CreateUserDelegationUrl",
        "description": "User specific delegation urls (CloseAccount, ChangePassword, ChangeProfile, Subscribe, Unsubscribe, Renew, Signout).",
        "parameters": [
          {
            "$ref": "#/parameters/DeveloperServicesAPI.Models.UserParams"
          },
          {
            "name": "action",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userDelegationOperationRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeveloperServicesAPI.Models.UserDelegationOperationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DeveloperServicesAPI.Models.UserDelegationOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/DeveloperServicesAPI.Models.ErrorResponse"
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "operationId": "Users_GetUser",
        "description": "Get a user profile by its identifier.",
        "parameters": [
          {
            "$ref": "#/parameters/DeveloperServicesAPI.Models.UserParams"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DeveloperServicesAPI.Models.User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/DeveloperServicesAPI.Models.ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "operationId": "Users_CreateOrUpdateUser",
        "description": "Create or updatea a user by its identifier.",
        "parameters": [
          {
            "$ref": "#/parameters/DeveloperServicesAPI.Models.UserParams"
          },
          {
            "name": "if-match",
            "in": "header",
            "required": true,
            "x-ms-client-name": "ifMatch",
            "type": "string"
          },
          {
            "name": "userUpdate",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeveloperServicesAPI.Models.UserUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DeveloperServicesAPI.Models.User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/DeveloperServicesAPI.Models.ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Users_DeleteUser",
        "description": "Delete a user by its identifier.",
        "parameters": [
          {
            "$ref": "#/parameters/DeveloperServicesAPI.Models.UserParams"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/DeveloperServicesAPI.Models.ErrorResponse"
            }
          }
        }
      }
    },
    "/users/{userId}/identities": {
      "get": {
        "operationId": "Confirmations_ListUserIdentities",
        "description": "List a collection of user identities.",
        "parameters": [
          {
            "$ref": "#/parameters/DeveloperServicesAPI.Models.UserParams"
          },
          {
            "$ref": "#/parameters/DeveloperServicesAPI.Models.ListParams.skip"
          },
          {
            "$ref": "#/parameters/DeveloperServicesAPI.Models.ListParams.top"
          },
          {
            "$ref": "#/parameters/DeveloperServicesAPI.Models.ListParams.filter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "nextLink": {
                  "type": "string",
                  "description": "Relative URL to next page of collection."
                },
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeveloperServicesAPI.Models.IdentityResult"
                  },
                  "x-typespec-name": "DeveloperServicesAPI.Models.IdentityResult[]",
                  "description": "Collection itself."
                }
              },
              "description": "Collection object for listing operations.",
              "required": [
                "nextLink",
                "value"
              ],
              "x-typespec-name": "DeveloperServicesAPI.Models.Collection<DeveloperServicesAPI.Models.IdentityResult>"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/DeveloperServicesAPI.Models.ErrorResponse"
            }
          }
        }
      }
    },
    "/users/{userId}/identities/{provider}/{identity}": {
      "put": {
        "operationId": "Confirmations_CreateOrUpdateUserIdentityProvider",
        "description": "Creates or updates the given user identity.",
        "parameters": [
          {
            "$ref": "#/parameters/DeveloperServicesAPI.Models.UserParams"
          },
          {
            "$ref": "#/parameters/DeveloperServicesAPI.Models.ListParams.skip"
          },
          {
            "$ref": "#/parameters/DeveloperServicesAPI.Models.ListParams.top"
          },
          {
            "$ref": "#/parameters/DeveloperServicesAPI.Models.ListParams.filter"
          },
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "description": "The provider of the identity.",
            "type": "string"
          },
          {
            "name": "identity",
            "in": "path",
            "required": true,
            "description": "The identity.",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/DeveloperServicesAPI.Models.ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "DeveloperServicesAPI.Models.Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "details": {
          "type": "string",
          "description": "Error details if exists."
        }
      },
      "description": "Error.",
      "required": [
        "code",
        "message"
      ]
    },
    "DeveloperServicesAPI.Models.ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/DeveloperServicesAPI.Models.Error",
          "description": "Error itself."
        }
      },
      "description": "Error response object.",
      "required": [
        "error"
      ]
    },
    "DeveloperServicesAPI.Models.IdentityConfirmationRequest": {
      "type": "object",
      "properties": {
        "to": {
          "type": "string",
          "description": "The email address to send the confirmation to."
        },
        "reason": {
          "type": "string",
          "description": "Confirmation reason."
        }
      },
      "description": "API Management Notification Request",
      "required": [
        "to",
        "reason"
      ]
    },
    "DeveloperServicesAPI.Models.IdentityResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Signed user id."
        },
        "provider": {
          "type": "string",
          "description": "Identity provider of the user."
        }
      },
      "description": "UserId associate with credentials provided in request.",
      "required": [
        "id",
        "provider"
      ]
    },
    "DeveloperServicesAPI.Models.User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "User id."
        },
        "email": {
          "type": "string",
          "description": "User email."
        },
        "firstName": {
          "type": "string",
          "description": "User first name."
        },
        "lastName": {
          "type": "string",
          "description": "User last name."
        },
        "state": {
          "$ref": "#/definitions/DeveloperServicesAPI.Models.UserState",
          "description": "User state."
        },
        "registrationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date of user registration."
        }
      },
      "description": "User profile.",
      "required": [
        "id",
        "email",
        "firstName",
        "lastName",
        "state",
        "registrationDate"
      ]
    },
    "DeveloperServicesAPI.Models.UserDelegationOperationRequest": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "description": "Id of product. Is not required for all operations."
        },
        "subscriptionId": {
          "type": "string",
          "description": "Id of subscription. Is not required for all operations."
        }
      },
      "description": "User delegation operation request",
      "required": [
        "productId",
        "subscriptionId"
      ]
    },
    "DeveloperServicesAPI.Models.UserDelegationOperationResponse": {
      "type": "object",
      "properties": {
        "redirectUrl": {
          "type": "string",
          "description": "Redirect URL"
        }
      },
      "description": "User delegation operation response",
      "required": [
        "redirectUrl"
      ]
    },
    "DeveloperServicesAPI.Models.UserState": {
      "type": "string",
      "description": "User state.",
      "enum": [
        "active",
        "blocked",
        "pending",
        "deleted"
      ],
      "x-ms-enum": {
        "name": "UserState",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "active",
            "description": "User is active."
          },
          {
            "name": "Blocked",
            "value": "blocked",
            "description": "User is blocked. Blocked users cannot authenticate at developer portal or call API."
          },
          {
            "name": "Pending",
            "value": "pending",
            "description": "User account is pending. Requires identity confirmation"
          },
          {
            "name": "Deleted",
            "value": "deleted",
            "description": "User account is closed. All identities and related entities are removed."
          }
        ]
      }
    },
    "DeveloperServicesAPI.Models.UserUpdate": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "User password."
        },
        "firstName": {
          "type": "string",
          "description": "User first name."
        },
        "lastName": {
          "type": "string",
          "description": "User last name."
        },
        "state": {
          "$ref": "#/definitions/DeveloperServicesAPI.Models.UserState",
          "description": "User state."
        }
      },
      "description": "User update object."
    }
  },
  "parameters": {
    "DeveloperServicesAPI.Models.ListParams.filter": {
      "name": "filter",
      "in": "query",
      "required": false,
      "description": "OData filter query option.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DeveloperServicesAPI.Models.ListParams.skip": {
      "name": "skip",
      "in": "query",
      "required": false,
      "description": "Number of element to skip.",
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "DeveloperServicesAPI.Models.ListParams.top": {
      "name": "top",
      "in": "query",
      "required": false,
      "description": "Number of element to take from the top.",
      "maximum": 100,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "DeveloperServicesAPI.Models.UserParams": {
      "name": "userId",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
