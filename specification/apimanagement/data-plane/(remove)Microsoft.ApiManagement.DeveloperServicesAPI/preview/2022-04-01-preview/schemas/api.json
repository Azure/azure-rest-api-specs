{
  "swagger": "2.0",
  "info": {
    "title": "Api definition",
    "version": "2022-04-01-preview",
    "description": "A spec file containing api definition"
  },
  "paths": {},
  "definitions": {
    "Api": {
      "type": "object",
      "description": "API details",
      "x-apim-code-public": "true",
      "properties": {
        "id": {
          "type": "string",
          "description": "API identifier.",
          "x-apim-code-resourceId": "/apis/{aid}"
        },
        "name": {
          "type": "string",
          "description": "API name. Must be 1 to 300 characters long."
        },
        "description": {
          "type": "string",
          "description": "API description."
        },
        "subscriptionRequired": {
          "type": "boolean",
          "description": "Specifies whether an API subscription is required for accessing the API.",
          "x-apim-code-nillable": true,
          "x-apim-code-optional": true
        },
        "path": {
          "type": "string",
          "description": "Path for API requests."
        },
        "protocols": {
          "description": "Protocols over which API is made available.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiProtocol"
          }
        },
        "tagDescriptions": {
          "description": "Array of Tag Descriptions included into this API.",
          "type": "array",
          "items": {
            "$ref": "tag.json#/definitions/TagDescription"
          },
          "x-apim-code-optional": true
        },
        "authenticationSettings": {
          "allOf": [
            {
              "$ref": "authenticationSettings.json#/definitions/AuthenticationSettings"
            },
            {
              "description": "Collection of authentication settings included into this API."
            }
          ]
        },
        "subscriptionKeyParameterNames": {
          "allOf": [
            {
              "$ref": "subscription.json#/definitions/SubscriptionKeyParameterNames"
            },
            {
              "description": "Names of Subscription key parameters used by the API."
            }
          ]
        },
        "termsOfServiceUrl": {
          "type": "string",
          "maxLength": 128,
          "description": "A URL to the Terms of Service for the API. MUST be in the format of a URL.",
          "x-apim-code-optional": true
        },
        "contact": {
          "allOf": [
            {
              "$ref": "#/definitions/ApiContactInfo"
            },
            {
              "description": "Contact information for the exposed API."
            }
          ],
          "x-apim-code-optional": true
        },
        "license": {
          "allOf": [
            {
              "$ref": "#/definitions/ApiLicenseInfo"
            },
            {
              "description": "License information for the exposed API."
            }
          ],
          "x-apim-code-optional": true
        },
        "type": {
          "allOf": [
            {
              "$ref": "#/definitions/ApiType"
            },
            {
              "description": "Type of API.",
              "x-apim-code-optional": true
            }
          ]
        },
        "apiVersion": {
          "type": "string",
          "description": "API version name",
          "x-apim-code-optional": true
        },
        "apiVersionDescription": {
          "type": "string",
          "description": "Version description",
          "x-apim-code-optional": true
        },
        "apiVersionSetId": {
          "type": "string",
          "description": "Api Version Set Identifier",
          "x-apim-code-resourceId": "/apiVersionSets/{id}"
        }
      }
    },
    "ApiContactInfo": {
      "type": "object",
      "description": "API contact information",
      "x-apim-code-public": "true",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 128,
          "description": "The identifying name of the contact person/organization"
        },
        "url": {
          "type": "string",
          "maxLength": 128,
          "description": "The URL pointing to the contact information. MUST be in the format of a URL"
        },
        "email": {
          "type": "string",
          "maxLength": 128,
          "description": "The email address of the contact person/organization. MUST be in the format of an email address"
        }
      }
    },
    "ApiHostname": {
      "type": "object",
      "description": "Api hostname",
      "properties": {
        "id": {
          "type": "string",
          "description": "Api hostname identifier."
        },
        "value": {
          "type": "string",
          "description": "Api hostname value."
        }
      }
    },
    "ApiLicenseInfo": {
      "type": "object",
      "description": "API license information",
      "x-apim-code-public": "true",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 128,
          "description": "The license name used for the API"
        },
        "url": {
          "type": "string",
          "maxLength": 128,
          "description": "A URL to the license used for the API. MUST be in the format of a URL"
        }
      }
    },
    "ApiProtocol": {
      "type": "string",
      "description": "API Protocol",
      "x-apim-public": "true",
      "x-apim-code-flags": true,
      "enum": [
        "http",
        "https",
        "ws",
        "wss"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "apiProtocol",
        "values": [
          {
            "value": "http",
            "description": "HTTP scheme will be supported for API"
          },
          {
            "value": "https",
            "description": "HTTPS scheme will be supported for API"
          },
          {
            "value": "ws",
            "description": "WebSocket scheme will be supported for API"
          },
          {
            "value": "wss",
            "description": "WebSocket Secure scheme will be supported for API"
          }
        ]
      }
    },
    "ApiRelease": {
      "type": "object",
      "x-apim-code-public": "true",
      "properties": {
        "id": {
          "type": "string",
          "description": "Release identifier.",
          "x-apim-code-resourceId": "/apis/{aid}/releases/{rid}",
          "x-apim-code-type": "ApiReleaseIdentityContract",
          "readOnly": true,
          "x-apim-code-alias": "identity"
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Release creation date and time."
        },
        "updatedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Last updated date and time."
        },
        "notes": {
          "type": "string",
          "description": "Release Note"
        }
      }
    },
    "ApiReleaseIdentity": {
      "type": "object",
      "properties": {
        "releaseId": {
          "type": "string",
          "description": "Release ID"
        },
        "apiId": {
          "type": "string",
          "description": "API ID"
        }
      }
    },
    "ApiSchema": {
      "type": "object",
      "description": "A Schema used by an API",
      "x-apim-code-public": "true",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the schema"
        },
        "contentType": {
          "type": "string",
          "description": "Media type of the schema document (e.g. application/json, application/xml)."
        },
        "document": {
          "type": "object",
          "description": "The document representing the Schema",
          "x-apim-code-optional": true
        }
      }
    },
    "ApiType": {
      "type": "string",
      "description": "Type of API",
      "x-apim-public": "true",
      "enum": [
        "http",
        "soap",
        "websocket",
        "graphql"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "apiType",
        "values": [
          {
            "value": "http",
            "description": "HTTP"
          },
          {
            "value": "soap",
            "description": "SOAP"
          },
          {
            "value": "websocket",
            "description": "WEBSOCKET"
          },
          {
            "value": "graphql",
            "description": "GRAPHQL"
          }
        ]
      }
    }
  }
}
