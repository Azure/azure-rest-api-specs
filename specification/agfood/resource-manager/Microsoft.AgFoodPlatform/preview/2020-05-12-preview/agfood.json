{
  "swagger": "2.0",
  "info": {
    "version": "2020-05-12-preview",
    "title": "AgFoodPlatformClient",
    "description": "API's to manage agriculture and food industry data."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{farmBeatsResourceName}/extensions/{extensionId}": {
      "put": {
        "tags": [
          "Extensions"
        ],
        "description": "Install extension.",
        "operationId": "Extensions_Create",
        "x-ms-examples": {
          "Extensions_Install": {
            "$ref": "./examples/farmbeats_extensions_install.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ExtensionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Extension"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Extensions"
        ],
        "description": "Get installed extension details by extension id.",
        "operationId": "Extensions_Get",
        "x-ms-examples": {
          "Extensions_Get": {
            "$ref": "./examples/farmbeats_extensions_get.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ExtensionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Extension"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Extensions"
        ],
        "description": "Upgrade to latest extension.",
        "operationId": "Extensions_Update",
        "x-ms-examples": {
          "Extensions_Upgrade": {
            "$ref": "./examples/farmbeats_extensions_upgrade.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ExtensionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Extension"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Extensions"
        ],
        "description": "Uninstall extension.",
        "operationId": "Extensions_Delete",
        "x-ms-examples": {
          "Extensions_Uninstall": {
            "$ref": "./examples/farmbeats_extensions_uninstall.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ExtensionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{farmBeatsResourceName}/extensions": {
      "get": {
        "tags": [
          "Extensions"
        ],
        "description": "Get installed extensions details by FarmBeats resource.",
        "operationId": "Extensions_ListByFarmBeats",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Extensions_ListByFarmBeats": {
            "$ref": "./examples/farmbeats_extensions_listByFarmBeats.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "in": "query",
            "name": "extensionId",
            "description": "Id of the extension.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "category",
            "description": "Category of extension (weather/sensor/satellite etc.).",
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "in": "query",
            "name": "$maxPageSize",
            "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
            "type": "integer",
            "format": "int32",
            "default": 50,
            "maximum": 1000,
            "minimum": 10
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Skip token for getting next set of results.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExtensionListResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.AgFoodPlatform/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists the available operations of Microsoft.AgFoodPlatform resource provider.",
        "operationId": "Operations_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/operations_list.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/OperationListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AgFoodPlatform/checkNameAvailability": {
      "post": {
        "tags": [
          "Locations"
        ],
        "operationId": "Locations_CheckNameAvailability",
        "x-ms-examples": {
          "LocationCheckNameAvailability_Available": {
            "$ref": "./examples/locationCheckNameAvailability_Available.json"
          },
          "LocationCheckNameAvailability_AlreadyExists": {
            "$ref": "./examples/locationCheckNameAvailability_AlreadyExists.json"
          }
        },
        "description": "To check whether a resource name is available.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NameAvailabilityRequest"
            },
            "description": "Name availability request payload."
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Returns details about whether a Farmbeats instance is available.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{farmBeatsResourceName}": {
      "put": {
        "tags": [
          "FarmBeatsModel"
        ],
        "operationId": "FarmBeatsModels_CreateOrUpdate",
        "description": "Creates or update a FarmBeats resource.",
        "x-ms-examples": {
          "FarmBeats_Create": {
            "$ref": "./examples/farmbeats_createOrUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "name": "farmBeatsCreateOrUpdateRequest",
            "description": "FarmBeats resource create or update request object.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FarmBeats"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "FarmBeats resource was updated successfully. Check provisioningStatus to see detailed status.",
            "schema": {
              "$ref": "#/definitions/FarmBeats"
            }
          },
          "201": {
            "description": "FarmBeats resource was created successfully. Check provisioningStatus to see detailed status.",
            "schema": {
              "$ref": "#/definitions/FarmBeats"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "FarmBeatsModel"
        ],
        "operationId": "FarmBeatModels_Get",
        "description": "Get a FarmBeats resource by identified name.",
        "x-ms-examples": {
          "FarmBeats_Get": {
            "$ref": "./examples/farmbeats_get.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FarmBeats"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "FarmBeatsModel"
        ],
        "operationId": "FarmBeatsModels_Update",
        "description": "Incrementally updates FarmBeats resource by identified name.",
        "x-ms-examples": {
          "FarmBeats_Update": {
            "$ref": "./examples/farmbeats_update.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "name": "farmBeatsUpdateRequest",
            "description": "FarmBeats resource update request object.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FarmBeatsUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FarmBeats"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FarmBeatsModel"
        ],
        "operationId": "FarmBeatsModels_Delete",
        "description": "Removes FarmBeats resource identified by name.",
        "x-ms-examples": {
          "FarmBeats_Delete": {
            "$ref": "./examples/farmbeats_delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The specified resource was deleted successfully."
          },
          "204": {
            "description": "The specified resource does not exist in the subscription."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats": {
      "get": {
        "tags": [
          "FarmBeatsModel"
        ],
        "description": "Lists the FarmBeats instances for a resource group.",
        "operationId": "FarmBeatsModels_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FarmBeatsCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "FarmBeats_ListByResourceGroup": {
            "$ref": "./examples/farmbeats_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AgFoodPlatform/farmBeats": {
      "get": {
        "tags": [
          "FarmBeatsModel"
        ],
        "description": "Lists the FarmBeats instances for a subscription.",
        "operationId": "FarmBeatsModel_ListBySubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FarmBeatsCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "FarmBeats_ListBySubscription": {
            "$ref": "./examples/farmbeats_ListBySubscription.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Extension": {
      "type": "object",
      "description": "Api Model for Extension object.",
      "properties": {
        "properties": {
          "description": "Extension Properties.",
          "$ref": "#/definitions/ExtensionProperties",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData"
        },
        "eTag": {
          "description": "The ETag value to implement optimistic concurrency.",
          "type": "string",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "ExtensionListResponse": {
      "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of requested objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "$skipToken": {
          "description": "Token used in retrieving the next page. If null, there are no additional pages.",
          "type": "string"
        },
        "nextLink": {
          "description": "Continuation link (absolute URI) to the next page of results in the list.",
          "type": "string"
        }
      }
    },
    "ExtensionProperties": {
      "description": "Extension proxy resource properties object.",
      "type": "object",
      "properties": {
        "category": {
          "description": "Category of the extension. e.g. weather/sensor/satellite.",
          "maxLength": 100,
          "minLength": 2,
          "type": "string",
          "readOnly": true
        },
        "installedExtensionVersion": {
          "description": "Installed extension version.",
          "maxLength": 100,
          "minLength": 2,
          "type": "string",
          "readOnly": true
        },
        "extensionAuthLink": {
          "description": "Extension auth link.",
          "type": "string",
          "readOnly": true
        },
        "extensionApiDocsLink": {
          "description": "Extension api docs link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Operation": {
      "description": "Resources and supported operations on them.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{read | write | action | delete}",
          "type": "string",
          "readOnly": true
        },
        "isDataAction": {
          "description": "A boolean value indicating whether the operation is a data action or not.",
          "type": "boolean",
          "readOnly": true
        },
        "display": {
          "description": "Operation display payload which is exposed in the response of the resource provider.",
          "properties": {
            "provider": {
              "description": "Name of the provider for display purposes.",
              "type": "string",
              "readOnly": true
            },
            "resource": {
              "description": "Name of the resource type for display purposes.",
              "type": "string",
              "readOnly": true
            },
            "operation": {
              "description": "Name of the operation for display purposes.",
              "type": "string",
              "readOnly": true
            },
            "description": {
              "description": "Description of the operation for display purposes.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "OperationListResponse": {
      "description": "Result of the request to list AgFoodPlatform operations. It contains a list of resources and supported operations on them and a URL link to get the next set of results.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of resources and supported operations by the Microsoft.AgFoodPlatform resource provider.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of operation list results if there are any.",
          "type": "string"
        }
      }
    },
    "NameAvailabilityRequest": {
      "description": "Parameters body to pass for name availability check.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name to check."
        },
        "type": {
          "type": "string",
          "description": "Resource type to check."
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "CheckNameAvailabilityResult": {
      "properties": {
        "nameAvailable": {
          "readOnly": true,
          "type": "boolean",
          "description": "Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or invalid and cannot be used."
        },
        "reason": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "NameAvailabilityReason",
            "modelAsString": true
          },
          "description": "Gets the reason that a given resource name could not be used. The 'reason' element is returned only if 'nameAvailable' is false."
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "Gets an error message explaining the 'reason' value in more detail."
        }
      },
      "description": "The CheckNameAvailability operation response."
    },
    "FarmBeatsUpdateParameters": {
      "description": "Parameters used to update an existing FarmBeats resource.",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters."
        }
      }
    },
    "FarmBeats": {
      "description": "FarmBeats resource object.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "FarmBeats Properties.",
          "$ref": "#/definitions/FarmBeatsProperties",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "FarmBeatsProperties": {
      "description": "FarmBeats resource properties object.",
      "type": "object",
      "properties": {
        "instanceUri": {
          "type": "string",
          "description": "Uri of the FarmBeats instance.",
          "readOnly": true
        },
        "provisioningState": {
          "description": "FarmBeats instance provisioning state.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "FarmBeatsCollection": {
      "description": "Collection of the FarmBeats payload which is exposed in the request/response of the resource provider.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection of FarmBeats instances.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/FarmBeats"
          }
        },
        "nextLink": {
          "description": "Gets or sets the URL, that the client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "description": "An error response from the service.",
      "type": "object",
      "properties": {
        "error": {
          "description": "The error object",
          "$ref": "#/definitions/ErrorResponseBody"
        }
      }
    },
    "ErrorResponseBody": {
      "properties": {
        "code": {
          "readOnly": true,
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "The error message."
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "The error target."
        },
        "details": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorResponseBody"
          },
          "description": "The error details."
        },
        "additionalInfo": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "description": "The error additional info."
        }
      },
      "description": "The resource management error response."
    },
    "ErrorAdditionalInfo": {
      "properties": {
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The additional info type."
        },
        "info": {
          "readOnly": true,
          "type": "object",
          "description": "The additional info.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "The resource management error additional info."
    }
  },
  "parameters": {
    "FarmBeatsResourceNameParameter": {
      "description": "FarmBeats resource name.",
      "name": "farmBeatsResourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ExtensionIdParameter": {
      "description": "Id of extension proxy resource.",
      "name": "extensionId",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
