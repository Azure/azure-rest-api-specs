// <auto-generated>
// MICROSOFT-MIT_NO_VERSION
// </auto-generated>

namespace regionmovecollection
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for MoveCollectionOperations.
    /// </summary>
    public static partial class MoveCollectionOperationsExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// </param>
            /// <param name='moveCollectionName'>
            /// </param>
            /// <param name='body'>
            /// </param>
            public static MoveCollection Update(this IMoveCollectionOperations operations, string resourceGroupName, string moveCollectionName, UpdateMoveCollectionRequest body = default(UpdateMoveCollectionRequest))
            {
                return operations.UpdateAsync(resourceGroupName, moveCollectionName, body).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// </param>
            /// <param name='moveCollectionName'>
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<MoveCollection> UpdateAsync(this IMoveCollectionOperations operations, string resourceGroupName, string moveCollectionName, UpdateMoveCollectionRequest body = default(UpdateMoveCollectionRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, moveCollectionName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
