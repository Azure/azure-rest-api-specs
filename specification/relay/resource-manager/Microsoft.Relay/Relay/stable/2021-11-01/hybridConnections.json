{
  "swagger": "2.0",
  "info": {
    "title": "Relay API",
    "description": "Use these API to manage Azure Relay resources through Azure Resource Manager.",
    "version": "2021-11-01",
    "x-ms-code-generation-settings": {
      "name": "RelayManagementClient"
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections": {
      "get": {
        "tags": [
          "HybridConnections"
        ],
        "operationId": "HybridConnections_ListByNamespace",
        "x-ms-examples": {
          "RelayHybridConnectionListAll": {
            "$ref": "./examples/HybridConnection/RelayHybridConnectionListAll.json"
          }
        },
        "description": "Lists the hybrid connection within the namespace.",
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request to retrieve hybrid connections by namespace succeeded.",
            "schema": {
              "$ref": "#/definitions/HybridConnectionListResult"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}": {
      "put": {
        "tags": [
          "HybridConnections"
        ],
        "operationId": "HybridConnections_CreateOrUpdate",
        "x-ms-examples": {
          "RelayHybridConnectionCreate": {
            "$ref": "./examples/HybridConnection/RelayHybridConnectionCreate.json"
          }
        },
        "description": "Creates or updates a service hybrid connection. This operation is idempotent.",
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/HybridConnectionNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HybridConnection"
            },
            "description": "Parameters supplied to create a hybrid connection."
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request to create hybrid connections succeeded.",
            "schema": {
              "$ref": "#/definitions/HybridConnection"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "HybridConnections"
        ],
        "operationId": "HybridConnections_Delete",
        "x-ms-examples": {
          "RelayHybridconnectionDelete": {
            "$ref": "./examples/HybridConnection/RelayHybridconnectionDelete.json"
          }
        },
        "description": "Deletes a hybrid connection.",
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/HybridConnectionNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request to delete hybrid connection succeeded."
          },
          "204": {
            "description": "No content. The request has been accepted but the hybrid connection was not found."
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "HybridConnections"
        ],
        "operationId": "HybridConnections_Get",
        "x-ms-examples": {
          "RelayHybridConnectionGet": {
            "$ref": "./examples/HybridConnection/RelayHybridConnectionGet.json"
          }
        },
        "description": "Returns the description for the specified hybrid connection.",
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/HybridConnectionNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved description for the hybrid connection.",
            "schema": {
              "$ref": "#/definitions/HybridConnection"
            }
          },
          "default": {
            "description": "Relay error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "HybridConnectionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HybridConnection"
          },
          "description": "Result of the list hybrid connections."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if value contains incomplete list hybrid connection operation."
        }
      },
      "description": "The response of the list hybrid connection operation."
    },
    "HybridConnection": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "createdAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "The time the hybrid connection was created."
            },
            "updatedAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "The time the namespace was updated."
            },
            "listenerCount": {
              "readOnly": true,
              "format": "int32",
              "type": "integer",
              "minimum": 0,
              "maximum": 25,
              "description": "The number of listeners for this hybrid connection. Note that min : 1 and max:25 are supported."
            },
            "requiresClientAuthorization": {
              "type": "boolean",
              "description": "Returns true if client authorization is needed for this hybrid connection; otherwise, false."
            },
            "userMetadata": {
              "type": "string",
              "description": "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored."
            }
          },
          "description": "Properties of the HybridConnection."
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData"
        }
      },
      "description": "Description of hybrid connection resource.",
      "allOf": [
        {
          "$ref": "../../common/v1/definitions.json#/definitions/ProxyResource"
        }
      ]
    }
  },
  "parameters": {}
}
