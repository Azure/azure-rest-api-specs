{
  "swagger": "2.0",
  "info": {
      "version": "2018-08-20-preview",
      "title": "HealthcareClient",
      "description": "Use this API to manage Microsoft Healthcare services in your Azure subscription."
  },
  "host": "management.azure.com",
  "schemes": [
      "https"
  ],
  "consumes": [
      "application/json"
  ],
  "produces": [
      "application/json"
  ],
  "security": [
      {
          "azure_auth": [
              "user_impersonation"
          ]
      }
  ],
  "securityDefinitions": {
      "azure_auth": {
          "type": "oauth2",
          "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
          "flow": "implicit",
          "description": "Azure Active Directory OAuth2 Flow",
          "scopes": {
              "user_impersonation": "impersonate your user account"
          }
      }
  },
  "paths": {
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services/{resourceName}": {
          "get": {
              "tags": [
                  "Resource"
              ],
              "description": "Get the metadata of a service instance.",
              "operationId": "Services_Get",
              "x-ms-examples": {
                  "ServiceGet": {
                      "$ref": "./examples/ServiceGet.json"
                  }
              },
              "parameters": [
                  {
                      "$ref": "#/parameters/api-version"
                  },
                  {
                      "$ref": "#/parameters/subscriptionId"
                  },
                  {
                      "$ref": "#/parameters/resourceGroupName"
                  },
                  {
                      "$ref": "#/parameters/resourceName"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "The body contains all of the properties of the service instance.",
                      "schema": {
                          "$ref": "#/definitions/ServicesDescription"
                      }
                  },
                  "default": {
                      "description": "Default error response",
                      "schema": {
                          "$ref": "#/definitions/ErrorDetails"
                      }
                  }
              },
              "deprecated": false
          },
          "put": {
              "tags": [
                  "Resource"
              ],
              "description": "Create or update the metadata of a service instance.",
              "operationId": "Services_CreateOrUpdate",
              "x-ms-examples": {
                  "ServicePut": {
                      "$ref": "./examples/ServiceCreate.json"
                  }
              },
              "x-ms-long-running-operation": true,
              "parameters": [
                  {
                      "$ref": "#/parameters/api-version"
                  },
                  {
                      "$ref": "#/parameters/subscriptionId"
                  },
                  {
                      "$ref": "#/parameters/resourceGroupName"
                  },
                  {
                      "$ref": "#/parameters/resourceName"
                  },
                  {
                      "name": "serviceDescription",
                      "in": "body",
                      "description": "The service instance metadata.",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/ServicesDescription"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Updated - Put request accepted and an existing resource is being updated; the operation will complete asynchronously.",
                      "schema": {
                          "$ref": "#/definitions/ServicesDescription"
                      }
                  },
                  "201": {
                      "description": "Created - Put request accepted and a new resource was created; the operation will complete asynchronously.",
                      "schema": {
                          "$ref": "#/definitions/ServicesDescription"
                      }
                  },
                  "default": {
                      "description": "DefaultErrorResponse",
                      "schema": {
                          "$ref": "#/definitions/ErrorDetails"
                      }
                  }
              },
              "deprecated": false
          },
          "patch": {
              "tags": [
                  "Resource"
              ],
              "description": "Update the metadata of a service instance.",
              "operationId": "Services_Update",
              "x-ms-examples": {
                  "ServicePatch": {
                      "$ref": "./examples/ServicePatch.json"
                  }
              },
              "x-ms-long-running-operation": true,
              "parameters": [
                  {
                      "$ref": "#/parameters/api-version"
                  },
                  {
                      "$ref": "#/parameters/subscriptionId"
                  },
                  {
                      "$ref": "#/parameters/resourceGroupName"
                  },
                  {
                      "$ref": "#/parameters/resourceName"
                  },
                  {
                      "name": "servicePatchDescription",
                      "in": "body",
                      "description": "The service instance metadata and security metadata.",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/ServicesPatchDescription"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "The tags for the resource were updated successfully.",
                      "schema": {
                          "$ref": "#/definitions/ServicesDescription"
                      }
                  },
                  "default": {
                      "description": "DefaultErrorResponse",
                      "schema": {
                          "$ref": "#/definitions/ErrorDetails"
                      }
                  }
              },
              "deprecated": false
          },
          "delete": {
              "tags": [
                  "Resource"
              ],
              "description": "Delete a service instance.",
              "operationId": "Services_Delete",
              "x-ms-examples": {
                  "ServiceDelete": {
                      "$ref": "./examples/ServiceDelete.json"
                  }
              },
              "x-ms-long-running-operation": true,
              "parameters": [
                  {
                      "$ref": "#/parameters/api-version"
                  },
                  {
                      "$ref": "#/parameters/subscriptionId"
                  },
                  {
                      "$ref": "#/parameters/resourceGroupName"
                  },
                  {
                      "$ref": "#/parameters/resourceName"
                  }
              ],
              "responses": {
                  "202": {
                      "description": "Accepted - Delete request accepted; the operation will complete asynchronously."
                  },
                  "204": {
                      "description": "The resource does not exist."
                  },
                  "default": {
                      "description": "DefaultErrorResponse",
                      "schema": {
                          "$ref": "#/definitions/ErrorDetails"
                      }
                  }
              }
          }
      },
      "/subscriptions/{subscriptionId}/providers/Microsoft.HealthcareApis/services": {
          "get": {
              "tags": [
                  "Collection"
              ],
              "description": "Get all the service instances in a subscription.",
              "operationId": "Services_List",
              "x-ms-examples": {
                  "ServiceList": {
                      "$ref": "./examples/ServiceList.json"
                  }
              },
              "x-ms-pageable": {
                  "nextLinkName": "nextLink"
              },
              "parameters": [
                  {
                      "$ref": "#/parameters/api-version"
                  },
                  {
                      "$ref": "#/parameters/subscriptionId"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the service instances in the subscription.",
                      "schema": {
                          "$ref": "#/definitions/ServicesDescriptionListResult"
                      }
                  },
                  "default": {
                      "description": "DefaultErrorResponse",
                      "schema": {
                          "$ref": "#/definitions/ErrorDetails"
                      }
                  }
              },
              "deprecated": false
          }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services": {
          "get": {
              "tags": [
                  "Collection"
              ],
              "description": "Get all the service instances in a resource group.",
              "operationId": "Services_ListByResourceGroup",
              "x-ms-examples": {
                  "ServiceListByResourceGroup": {
                      "$ref": "./examples/ServiceListByResourceGroup.json"
                  }
              },
              "x-ms-pageable": {
                  "nextLinkName": "nextLink"
              },
              "parameters": [
                  {
                      "$ref": "#/parameters/api-version"
                  },
                  {
                      "$ref": "#/parameters/subscriptionId"
                  },
                  {
                      "$ref": "#/parameters/resourceGroupName"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the service instances in the resource group.",
                      "schema": {
                          "$ref": "#/definitions/ServicesDescriptionListResult"
                      }
                  },
                  "default": {
                      "description": "DefaultErrorResponse",
                      "schema": {
                          "$ref": "#/definitions/ErrorDetails"
                      }
                  }
              },
              "deprecated": false
          }
      },
      "/providers/Microsoft.HealthcareApis/operations": {
          "get": {
              "tags": [
                  "Proxy"
              ],
              "description": "Lists all of the available Healthcare service REST API operations.",
              "operationId": "Operations_List",
              "x-ms-examples": {
                  "OperationsList": {
                      "$ref": "./examples/OperationsList.json"
                  }
              },
              "x-ms-pageable": {
                  "nextLinkName": "nextLink"
              },
              "parameters": [
                  {
                      "$ref": "#/parameters/api-version"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK. The request has succeeded.",
                      "schema": {
                          "$ref": "#/definitions/OperationListResult"
                      }
                  },
                  "default": {
                      "description": "DefaultErrorResponse",
                      "schema": {
                          "$ref": "#/definitions/ErrorDetails"
                      }
                  }
              },
              "deprecated": false
          }
      },
      "/subscriptions/{subscriptionId}/providers/Microsoft.HealthcareApis/checkNameAvailability": {
          "post": {
              "tags": [
                  "Proxy"
              ],
              "description": "Check if a service instance name is available.",
              "operationId": "Services_CheckNameAvailability",
              "x-ms-examples": {
                  "ServiceList": {
                      "$ref": "./examples/CheckNameAvailabilityPost.json"
                  }
              },
              "parameters": [
                  {
                      "$ref": "#/parameters/api-version"
                  },
                  {
                      "$ref": "#/parameters/subscriptionId"
                  },
                  {
                      "name": "checkNameAvailabilityInputs",
                      "in": "body",
                      "description": "Set the name parameter in the CheckNameAvailabilityParameters structure to the name of the service instance to check.",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/CheckNameAvailabilityParameters"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "This is a synchronous operation. The body contains a JSON-serialized response that specifies whether the service name is available. If the name is not available, the body contains the reason.",
                      "schema": {
                          "$ref": "#/definitions/ServicesNameAvailabilityInfo"
                      }
                  },
                  "default": {
                      "description": "DefaultErrorResponse",
                      "schema": {
                          "$ref": "#/definitions/ErrorDetails"
                      }
                  }
              },
              "deprecated": false
          }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/moveResources": {
          "post": {
              "tags": [
                  "Proxy"
              ],
              "description": "Moves resources to another subscription and/or resource group.",
              "operationId": "Services_MoveResources",
              "x-ms-examples": {
                  "ServiceList": {
                      "$ref": "./examples/MoveResourcesPost.json"
                  }
              },
              "parameters": [
                  {
                      "$ref": "#/parameters/api-version"
                  },
                  {
                      "$ref": "#/parameters/subscriptionId"
                  },
                  {
                      "$ref": "#/parameters/resourceGroupName"
                  },
                  {
                      "name": "moveResourcesInputs",
                      "in": "body",
                      "description": "Set the move resource structure to the name of the service instance to check.",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/MoveResourcesParameters"
                      }
                  }
              ],
              "responses": {
                  "202": {
                      "description": "Accepted - Move request accepted; the operation will complete asynchronously."
                  },
                  "default": {
                      "description": "DefaultErrorResponse",
                      "schema": {
                          "$ref": "#/definitions/ErrorDetails"
                      }
                  }
              },
              "deprecated": false
          }
      },
      "/subscriptions/{subscriptionId}/providers/Microsoft.HealthcareApis/locations/{locationName}/operationresults/{operationResultId}": {
          "get": {
              "tags": [
                  "Resource"
              ],
              "description": "Get the operation result for a long running operation.",
              "operationId": "OperationResults_Get",
              "x-ms-examples": {
                  "OperationResultsGet": {
                      "$ref": "./examples/OperationResultsGet.json"
                  }
              },
              "parameters": [
                  {
                      "$ref": "#/parameters/api-version"
                  },
                  {
                      "$ref": "#/parameters/subscriptionId"
                  },
                  {
                      "$ref": "#/parameters/locationName"
                  },
                  {
                      "$ref": "#/parameters/operationResultId"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "The body contains all of the properties of the operation result.",
                      "schema": {
                          "$ref": "#/definitions/OperationResultsDescription"
                      }
                  },
                  "404": {
                      "description": "No operation result was found matching operationResultId.",
                      "schema": {
                          "$ref": "#/definitions/ErrorDetails"
                      }
                  },
                  "default": {
                      "description": "Default error response",
                      "schema": {
                          "$ref": "#/definitions/ErrorDetails"
                      }
                  }
              },
              "deprecated": false
          }
      },
      "/subscriptions/{subscriptionId}/providers/Microsoft.HealthcareApis/locations/{locationName}/moveResourcesStatus/{operationResultId}": {
          "get": {
              "tags": [
                  "Resource"
              ],
              "description": "Get the operation result for a long running move operation.",
              "operationId": "MoveResourcesStatus_Get",
              "x-ms-examples": {
                  "OperationResultsGet": {
                      "$ref": "./examples/OperationResultsGet.json"
                  }
              },
              "parameters": [
                  {
                      "$ref": "#/parameters/api-version"
                  },
                  {
                      "$ref": "#/parameters/subscriptionId"
                  },
                  {
                      "$ref": "#/parameters/locationName"
                  },
                  {
                      "$ref": "#/parameters/operationResultId"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "The body contains all of the properties of the operation result.",
                      "schema": {
                          "$ref": "#/definitions/OperationResultsDescription"
                      }
                  },
                  "404": {
                      "description": "No operation result was found matching operationResultId.",
                      "schema": {
                          "$ref": "#/definitions/ErrorDetails"
                      }
                  },
                  "default": {
                      "description": "Default error response",
                      "schema": {
                          "$ref": "#/definitions/ErrorDetails"
                      }
                  }
              },
              "deprecated": false
          }
      }
  },
  "definitions": {
      "ServicesProperties": {
          "description": "The properties of a service instance.",
          "type": "object",
          "properties": {
              "provisioningState": {
                  "description": "The provisioning state.",
                  "enum": [
                      "Deleting",
                      "Succeeded",
                      "Creating",
                      "Accepted",
                      "Verifying",
                      "Updating",
                      "Failed",
                      "Canceled",
                      "Deprovisioned"
                  ],
                  "type": "string",
                  "readOnly": true,
                  "x-ms-enum": {
                      "name": "provisioningState",
                      "modelAsString": true
                  }
              },
              "accessPolicies": {
                  "$ref": "#/definitions/ServiceAccessPoliciesInfo",
                  "description": "The access policies of the service instance."
              },
              "cosmosDbConfiguration": {
                  "$ref": "#/definitions/ServiceCosmosDbConfigurationInfo",
                  "description": "The settings for the Cosmos DB database backing the service."
              }
          },
          "required": [
              "accessPolicies"
          ]
      },
      "ServiceAccessPoliciesInfo": {
          "description": "The access policies of the service instance.",
          "type": "array",
          "minItems": 1,
          "items": {
              "$ref": "#/definitions/ServiceAccessPolicyEntry"
          }
      },
      "ServiceAccessPolicyEntry": {
          "description": "An access policy entry.",
          "properties": {
              "objectId": {
                  "description": "An object ID that is allowed access to the FHIR service.",
                  "type": "string",
                  "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$"
              }
          },
          "required": [
              "objectId"
          ]
      },
      "ServiceCosmosDbConfigurationInfo": {
          "description": "The settings for the Cosmos DB database backing the service.",
          "type": "object",
          "properties": {
              "offerThroughput": {
                  "type": "integer",
                  "description": "The provisioned throughput for the backing database.",
                  "readOnly": false
              }
          }
      },
      "ServicesDescription": {
          "description": "The description of the service.",
          "type": "object",
          "properties": {
              "properties": {
                  "x-ms-client-flatten": false,
                  "description": "The common properties of a service.",
                  "$ref": "#/definitions/ServicesProperties"
              }
          },
          "allOf": [
              {
                  "$ref": "#/definitions/Resource"
              }
          ]
      },
      "ServicesPatchDescription": {
          "description": "The description of the service.",
          "type": "object",
          "properties": {
              "tags": {
                  "description": "Instance tags",
                  "type": "object",
                  "additionalProperties": {
                      "type": "string"
                  }
              }
          }
      },
      "Resource": {
          "description": "The common properties of a service.",
          "properties": {
              "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource identifier."
              },
              "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource name.",
                  "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$"
              },
              "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The resource type."
              },
              "kind": {
                  "readOnly": false,
                  "type": "string",
                  "description": "The kind of the service. Valid values are: fhir.",
                  "enum": [
                      "fhir"
                  ],
                  "x-ms-enum":{
                      "name": "kind",
                      "modelAsString": false
                  }
              },
              "location": {
                  "type": "string",
                  "description": "The resource location.",
                  "x-ms-mutability": [
                      "create",
                      "read"
                  ]
              },
              "tags": {
                  "type": "object",
                  "additionalProperties": {
                      "type": "string"
                  },
                  "description": "The resource tags."
              },
              "etag": {
                  "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
                  "type": "string"
              }
          },
          "x-ms-azure-resource": true,
          "required": [
            "location",
            "kind"
          ]
      },
      "ErrorDetails": {
          "description": "Error details.",
          "type": "object",
          "properties": {
              "error": {
                  "description": "Object containing error details.",
                  "$ref": "#/definitions/ErrorDetailsInternal"
              }
          }
      },
      "ErrorDetailsInternal": {
          "description": "Error details.",
          "type": "object",
          "properties": {
              "code": {
                  "description": "The error code.",
                  "type": "string",
                  "readOnly": true
              },
              "message": {
                  "description": "The error message.",
                  "type": "string",
                  "readOnly": true
              },
              "target": {
                  "description": "The target of the particular error.",
                  "type": "string",
                  "readOnly": true
              }
          }
      },
      "ServicesDescriptionListResult": {
          "description": "A list of service description objects with a next link.",
          "type": "object",
          "properties": {
              "nextLink": {
                  "description": "The link used to get the next page of service description objects.",
                  "type": "string"
              },
              "value": {
                  "description": "A list of service description objects.",
                  "type": "array",
                  "items": {
                      "$ref": "#/definitions/ServicesDescription"
                  }
              }
          }
      },
      "OperationListResult": {
          "description": "A list of service operations. It contains a list of operations and a URL link to get the next set of results.",
          "type": "object",
          "properties": {
              "nextLink": {
                  "description": "The link used to get the next page of service description objects.",
                  "type": "string"
              },
              "value": {
                  "description": "A list of service operations supported by the Microsoft.HealthcareApis resource provider.",
                  "type": "array",
                  "readOnly": true,
                  "items": {
                      "$ref": "#/definitions/Operation"
                  }
              }
          }
      },
      "Operation": {
          "description": "Service REST API operation.",
          "type": "object",
          "properties": {
              "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Operation name: {provider}/{resource}/{read | write | action | delete}"
              },
              "origin": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Default value is 'user,system'."
              },
              "display": {
                  "description": "The information displayed about the operation.",
                  "$ref": "#/definitions/OperationDisplay"
              }
          }
      },
      "OperationDisplay": {
          "description": "The object that represents the operation.",
          "type": "object",
          "properties": {
              "provider": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Service provider: Microsoft.HealthcareApis"
              },
              "resource": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Resource Type: Services"
              },
              "operation": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Name of the operation"
              },
              "description": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Friendly description for the operation,"
              }
          }
      },
      "CheckNameAvailabilityParameters": {
          "description": "Input values.",
          "type": "object",
          "properties": {
              "name": {
                  "description": "The name of the service instance to check.",
                  "type": "string"
              },
              "type": {
                  "description": "The fully qualified resource type which includes provider namespace.",
                  "type": "string"
              }
          },
          "required": [
              "name",
              "type"
          ]
      },
      "ServicesNameAvailabilityInfo": {
          "description": "The properties indicating whether a given service name is available.",
          "type": "object",
          "properties": {
              "nameAvailable": {
                  "description": "The value which indicates whether the provided name is available.",
                  "type": "boolean",
                  "readOnly": true
              },
              "reason": {
                  "description": "The reason for unavailability.",
                  "enum": [
                      "Invalid",
                      "AlreadyExists"
                  ],
                  "type": "string",
                  "readOnly": true,
                  "x-ms-enum": {
                      "name": "ServiceNameUnavailabilityReason",
                      "modelAsString": false
                  }
              },
              "message": {
                  "description": "The detailed reason message.",
                  "type": "string"
              }
          }
      },
      "MoveResourcesParameters": {
          "description": "Input values.",
          "type": "object",
          "properties": {
              "targetSubscriptionId": {
                  "description": "The target subscription to move resources to.",
                  "type": "string"
              },
              "targetResourceGroupName": {
                  "description": "The target resource group to move resources to.",
                  "type": "string"
              },
              "resourceIdsToMove": {
                  "description": "The list of resources to move.",
                  "type": "array",
                  "minItems": 1,
                  "maxItems": 250,
                  "items": {
                      "type": "string"
                  }
              }
          },
          "required": [
              "targetSubscriptionId",
              "targetResourceGroupName",
              "resourceIdsToMove"
          ]
      },
      "OperationResultsDescription": {
          "description": "The properties indicating the operation result of an operation on a service.",
          "type": "object",
          "properties": {
              "id": {
                  "description": "The ID of the operation returned.",
                  "readOnly": true,
                  "type": "string"
              },
              "name": {
                  "description": "The name of the operation result.",
                  "readOnly": true,
                  "type": "string"
              },
              "status": {
                  "description": "The status of the operation being performed.",
                  "enum": [
                      "Canceled",
                      "Succeeded",
                      "Failed",
                      "Requested",
                      "Running"
                  ],
                  "readOnly": true,
                  "type": "string",
                  "x-ms-enum": {
                      "name": "OperationResultStatus",
                      "modelAsString": true
                  }
              },
              "startTime": {
                  "description": "The time that the operation was started.",
                  "readOnly": true,
                  "type": "string"
              },
              "properties": {
                  "x-ms-client-flatten": false,
                  "description": "Additional properties of the operation result."
              }
          }
      }
  },
  "parameters": {
      "subscriptionId": {
          "name": "subscriptionId",
          "in": "path",
          "description": "The subscription identifier.",
          "required": true,
          "type": "string",
          "format": "uuid"
      },
      "api-version": {
          "name": "api-version",
          "enum": [
              "2018-08-20-preview"
          ],
          "in": "query",
          "description": "The version of the API.",
          "required": true,
          "type": "string",
          "minLength": 10
      },
      "resourceGroupName": {
          "name": "resourceGroupName",
          "in": "path",
          "description": "The name of the resource group that contains the service instance.",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "method",
          "pattern": "^[-\\w\\._\\(\\)]+$",
          "minLength": 1,
          "maxLength": 90
      },
      "resourceName": {
          "name": "resourceName",
          "in": "path",
          "description": "The name of the service instance.",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "method",
          "minLength": 3,
          "maxLength": 24
      },
      "locationName": {
          "name": "locationName",
          "in": "path",
          "description": "The location of the operation.",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "method"
      },
      "operationResultId": {
          "name": "operationResultId",
          "in": "path",
          "description": "The ID of the operation result to get.",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "method"
      }
  }
}
