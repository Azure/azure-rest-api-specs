{
  "swagger": "2.0",
  "info": {
    "title": "HealthcareApisManagementClient",
    "version": "2023-11-01",
    "description": "Azure Healthcare APIs Client",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "ServicesDescriptions"
    },
    {
      "name": "PrivateEndpointConnectionDescriptions"
    },
    {
      "name": "PrivateLinkResourceDescriptions"
    },
    {
      "name": "Workspaces"
    },
    {
      "name": "DicomServices"
    },
    {
      "name": "IotConnectors"
    },
    {
      "name": "IotFhirDestinations"
    },
    {
      "name": "FhirServices"
    }
  ],
  "paths": {
    "/providers/Microsoft.HealthcareApis/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HealthcareApis/checkNameAvailability": {
      "post": {
        "operationId": "Services_CheckNameAvailability",
        "tags": [
          "ServicesDescriptions"
        ],
        "description": "Check if a service instance name is available.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The CheckAvailability request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ServicesNameAvailabilityInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Check name availability": {
            "$ref": "./examples/Services_CheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HealthcareApis/services": {
      "get": {
        "operationId": "Services_List",
        "tags": [
          "ServicesDescriptions"
        ],
        "description": "Get all the service instances in a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServicesDescriptionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all services in subscription": {
            "$ref": "./examples/Services_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HealthcareApis/workspaces": {
      "get": {
        "operationId": "Workspaces_ListBySubscription",
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all the available workspaces under the specified subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkspaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get workspaces by subscription": {
            "$ref": "./examples/Workspaces_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services": {
      "get": {
        "operationId": "Services_ListByResourceGroup",
        "tags": [
          "ServicesDescriptions"
        ],
        "description": "Get all the service instances in a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServicesDescriptionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all services in resource group": {
            "$ref": "./examples/Services_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services/{resourceName}": {
      "get": {
        "operationId": "Services_Get",
        "tags": [
          "ServicesDescriptions"
        ],
        "description": "Get the metadata of a service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the service instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServicesDescription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get metadata": {
            "$ref": "./examples/Services_Get_Get_Metadata.json"
          },
          "Get metadata for CMK enabled service in data sovereign region": {
            "$ref": "./examples/Services_Get_Get_Metadata_For_Cmk_Enabled_Service_In_Data_Sovereign_Region.json"
          }
        }
      },
      "put": {
        "operationId": "Services_CreateOrUpdate",
        "tags": [
          "ServicesDescriptions"
        ],
        "description": "Create or update the metadata of a service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the service instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "serviceDescription",
            "in": "body",
            "description": "The service instance metadata.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServicesDescription"
            },
            "x-ms-client-name": "serviceDescription"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ServicesDescription' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ServicesDescription"
            }
          },
          "201": {
            "description": "Resource 'ServicesDescription' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ServicesDescription"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update a service with all parameters": {
            "$ref": "./examples/Services_CreateOrUpdate_Create_Or_Update_A_Service_With_All_Parameters.json"
          },
          "Create or Update a service with all parameters and CMK enabled in a data sovereign region": {
            "$ref": "./examples/Services_CreateOrUpdate_Create_Or_Update_A_Service_With_All_Parameters_And_Cmk_Enabled_In_A_Data_Sovereign_Region.json"
          },
          "Create or Update a service with minimum parameters": {
            "$ref": "./examples/Services_CreateOrUpdate_Create_Or_Update_A_Service_With_Minimum_Parameters.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Services_Update",
        "tags": [
          "ServicesDescriptions"
        ],
        "description": "Update the metadata of a service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the service instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "servicePatchDescription",
            "in": "body",
            "description": "The service instance metadata and security metadata.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServicesPatchDescription"
            },
            "x-ms-client-name": "servicePatchDescription"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServicesDescription"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch service": {
            "$ref": "./examples/Services_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Services_Delete",
        "tags": [
          "ServicesDescriptions"
        ],
        "description": "Delete a service instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the service instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete service": {
            "$ref": "./examples/Services_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services/{resourceName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_ListByService",
        "tags": [
          "PrivateEndpointConnectionDescriptions"
        ],
        "description": "Lists all private endpoint connections for a service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the service instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionDescriptionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_List": {
            "$ref": "./examples/PrivateEndpointConnections_ListByService.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_Get",
        "tags": [
          "PrivateEndpointConnectionDescriptions"
        ],
        "description": "Gets the specified private endpoint connection associated with the service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the service instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionDescription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_GetConnection": {
            "$ref": "./examples/PrivateEndpointConnections_Get.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "tags": [
          "PrivateEndpointConnectionDescriptions"
        ],
        "description": "Update the state of the specified private endpoint connection associated with the service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the service instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The private endpoint connection properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionDescription"
            },
            "x-ms-client-name": "properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnectionDescription' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionDescription"
            }
          },
          "201": {
            "description": "Resource 'PrivateEndpointConnectionDescription' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionDescription"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_CreateOrUpdate": {
            "$ref": "./examples/PrivateEndpointConnections_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_Delete",
        "tags": [
          "PrivateEndpointConnectionDescriptions"
        ],
        "description": "Deletes a private endpoint connection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the service instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_Delete": {
            "$ref": "./examples/PrivateEndpointConnections_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services/{resourceName}/privateLinkResources": {
      "get": {
        "operationId": "PrivateLinkResources_ListByService",
        "tags": [
          "PrivateLinkResourceDescriptions"
        ],
        "description": "Gets the private link resources that need to be created for a service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the service instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceDescriptionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateLinkResources_ListGroupIds": {
            "$ref": "./examples/PrivateLinkResources_ListByService.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services/{resourceName}/privateLinkResources/{groupName}": {
      "get": {
        "operationId": "PrivateLinkResources_Get",
        "tags": [
          "PrivateLinkResourceDescriptions"
        ],
        "description": "Gets a private link resource that need to be created for a service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the service instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "groupName",
            "in": "path",
            "description": "The name of the private link resource group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceDescription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateLinkResources_Get": {
            "$ref": "./examples/PrivateLinkResources_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces": {
      "get": {
        "operationId": "Workspaces_ListByResourceGroup",
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all the available workspaces under the specified resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkspaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get workspaces by resource group": {
            "$ref": "./examples/Workspaces_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}": {
      "get": {
        "operationId": "Workspaces_Get",
        "tags": [
          "Workspaces"
        ],
        "description": "Gets the properties of the specified workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get workspace": {
            "$ref": "./examples/Workspaces_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Workspaces_CreateOrUpdate",
        "tags": [
          "Workspaces"
        ],
        "description": "Creates or updates a workspace resource with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "workspace",
            "in": "body",
            "description": "The parameters for creating or updating a healthcare workspace.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workspace"
            },
            "x-ms-client-name": "workspace"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Workspace' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "201": {
            "description": "Resource 'Workspace' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Workspace"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a workspace": {
            "$ref": "./examples/Workspaces_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Workspaces_Update",
        "tags": [
          "Workspaces"
        ],
        "description": "Patch workspace details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "workspacePatchResource",
            "in": "body",
            "description": "The parameters for updating a specified workspace.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkspacePatchResource"
            },
            "x-ms-client-name": "workspacePatchResource"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update a workspace": {
            "$ref": "./examples/Workspaces_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Workspaces_Delete",
        "tags": [
          "Workspaces"
        ],
        "description": "Deletes a specified workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a workspace": {
            "$ref": "./examples/Workspaces_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/dicomservices": {
      "get": {
        "operationId": "DicomServices_ListByWorkspace",
        "tags": [
          "DicomServices"
        ],
        "description": "Lists all DICOM Services for the given workspace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DicomServiceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List dicomservices": {
            "$ref": "./examples/DicomServices_ListByWorkspace.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/dicomservices/{dicomServiceName}": {
      "get": {
        "operationId": "DicomServices_Get",
        "tags": [
          "DicomServices"
        ],
        "description": "Gets the properties of the specified DICOM Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "dicomServiceName",
            "in": "path",
            "description": "The name of DICOM Service resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DicomService"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a dicomservice": {
            "$ref": "./examples/DicomServices_Get.json"
          }
        }
      },
      "put": {
        "operationId": "DicomServices_CreateOrUpdate",
        "tags": [
          "DicomServices"
        ],
        "description": "Creates or updates a DICOM Service resource with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "dicomServiceName",
            "in": "path",
            "description": "The name of DICOM Service resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "dicomservice",
            "in": "body",
            "description": "The parameters for creating or updating a Dicom Service resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DicomService"
            },
            "x-ms-client-name": "dicomservice"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DicomService' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DicomService"
            }
          },
          "201": {
            "description": "Resource 'DicomService' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DicomService"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a Dicom Service": {
            "$ref": "./examples/DicomServices_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "DicomServices_Update",
        "tags": [
          "DicomServices"
        ],
        "description": "Patch DICOM Service details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "dicomServiceName",
            "in": "path",
            "description": "The name of DICOM Service resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "dicomservicePatchResource",
            "in": "body",
            "description": "The parameters for updating a Dicom Service.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DicomServicePatchResource"
            },
            "x-ms-client-name": "dicomservicePatchResource"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DicomService"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update a dicomservice": {
            "$ref": "./examples/DicomServices_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DicomServices_Delete",
        "tags": [
          "DicomServices"
        ],
        "description": "Deletes a DICOM Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "dicomServiceName",
            "in": "path",
            "description": "The name of DICOM Service resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a dicomservice": {
            "$ref": "./examples/DicomServices_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/fhirservices": {
      "get": {
        "operationId": "FhirServices_ListByWorkspace",
        "tags": [
          "FhirServices"
        ],
        "description": "Lists all FHIR Services for the given workspace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FhirServiceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List fhirservices": {
            "$ref": "./examples/FhirServices_ListByWorkspace.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/fhirservices/{fhirServiceName}": {
      "get": {
        "operationId": "FhirServices_Get",
        "tags": [
          "FhirServices"
        ],
        "description": "Gets the properties of the specified FHIR Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "fhirServiceName",
            "in": "path",
            "description": "The name of FHIR Service resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FhirService"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a Fhir Service": {
            "$ref": "./examples/FhirServices_Get.json"
          }
        }
      },
      "put": {
        "operationId": "FhirServices_CreateOrUpdate",
        "tags": [
          "FhirServices"
        ],
        "description": "Creates or updates a FHIR Service resource with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "fhirServiceName",
            "in": "path",
            "description": "The name of FHIR Service resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "fhirservice",
            "in": "body",
            "description": "The parameters for creating or updating a Fhir Service resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FhirService"
            },
            "x-ms-client-name": "fhirservice"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FhirService' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/FhirService"
            }
          },
          "201": {
            "description": "Resource 'FhirService' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/FhirService"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a Fhir Service": {
            "$ref": "./examples/FhirServices_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "FhirServices_Update",
        "tags": [
          "FhirServices"
        ],
        "description": "Patch FHIR Service details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "fhirServiceName",
            "in": "path",
            "description": "The name of FHIR Service resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "fhirservicePatchResource",
            "in": "body",
            "description": "The parameters for updating a Fhir Service.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FhirServicePatchResource"
            },
            "x-ms-client-name": "fhirservicePatchResource"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FhirService"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update a Fhir Service": {
            "$ref": "./examples/FhirServices_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "FhirServices_Delete",
        "tags": [
          "FhirServices"
        ],
        "description": "Deletes a FHIR Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "fhirServiceName",
            "in": "path",
            "description": "The name of FHIR Service resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a Fhir Service": {
            "$ref": "./examples/FhirServices_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/iotconnectors": {
      "get": {
        "operationId": "IotConnectors_ListByWorkspace",
        "tags": [
          "IotConnectors"
        ],
        "description": "Lists all IoT Connectors for the given workspace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IotConnectorListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List iotconnectors": {
            "$ref": "./examples/IotConnectors_ListByWorkspace.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/iotconnectors/{iotConnectorName}": {
      "get": {
        "operationId": "IotConnectors_Get",
        "tags": [
          "IotConnectors"
        ],
        "description": "Gets the properties of the specified IoT Connector.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "iotConnectorName",
            "in": "path",
            "description": "The name of IoT Connector resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IotConnector"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get an IoT Connector": {
            "$ref": "./examples/IotConnectors_Get.json"
          }
        }
      },
      "put": {
        "operationId": "IotConnectors_CreateOrUpdate",
        "tags": [
          "IotConnectors"
        ],
        "description": "Creates or updates an IoT Connector resource with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "iotConnectorName",
            "in": "path",
            "description": "The name of IoT Connector resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "iotConnector",
            "in": "body",
            "description": "The parameters for creating or updating an IoT Connectors resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IotConnector"
            },
            "x-ms-client-name": "iotConnector"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'IotConnector' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/IotConnector"
            }
          },
          "201": {
            "description": "Resource 'IotConnector' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/IotConnector"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create an IoT Connector": {
            "$ref": "./examples/IotConnectors_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "IotConnectors_Update",
        "tags": [
          "IotConnectors"
        ],
        "description": "Patch an IoT Connector.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "iotConnectorName",
            "in": "path",
            "description": "The name of IoT Connector resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "iotConnectorPatchResource",
            "in": "body",
            "description": "The parameters for updating an IoT Connector.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IotConnectorPatchResource"
            },
            "x-ms-client-name": "iotConnectorPatchResource"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IotConnector"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch an IoT Connector": {
            "$ref": "./examples/IotConnectors_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "IotConnectors_Delete",
        "tags": [
          "IotConnectors"
        ],
        "description": "Deletes an IoT Connector.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "iotConnectorName",
            "in": "path",
            "description": "The name of IoT Connector resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete an IoT Connector": {
            "$ref": "./examples/IotConnectors_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/iotconnectors/{iotConnectorName}/fhirdestinations": {
      "get": {
        "operationId": "FhirDestinations_ListByIotConnector",
        "tags": [
          "IotFhirDestinations"
        ],
        "description": "Lists all FHIR destinations for the given IoT Connector",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "iotConnectorName",
            "in": "path",
            "description": "The name of IoT Connector resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IotFhirDestinationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List IoT Connectors": {
            "$ref": "./examples/FhirDestinations_ListByIotConnector.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/iotconnectors/{iotConnectorName}/fhirdestinations/{fhirDestinationName}": {
      "get": {
        "operationId": "IotConnectorFhirDestination_Get",
        "tags": [
          "IotFhirDestinations"
        ],
        "description": "Gets the properties of the specified Iot Connector FHIR destination.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "iotConnectorName",
            "in": "path",
            "description": "The name of IoT Connector resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "fhirDestinationName",
            "in": "path",
            "description": "The name of IoT Connector FHIR destination resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IotFhirDestination"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get an IoT Connector destination": {
            "$ref": "./examples/IotConnectorFhirDestination_Get.json"
          }
        }
      },
      "put": {
        "operationId": "IotConnectorFhirDestination_CreateOrUpdate",
        "tags": [
          "IotFhirDestinations"
        ],
        "description": "Creates or updates an IoT Connector FHIR destination resource with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "iotConnectorName",
            "in": "path",
            "description": "The name of IoT Connector resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "fhirDestinationName",
            "in": "path",
            "description": "The name of IoT Connector FHIR destination resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "iotFhirDestination",
            "in": "body",
            "description": "The parameters for creating or updating an IoT Connector FHIR destination resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IotFhirDestination"
            },
            "x-ms-client-name": "iotFhirDestination"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'IotFhirDestination' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/IotFhirDestination"
            }
          },
          "201": {
            "description": "Resource 'IotFhirDestination' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/IotFhirDestination"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update an Iot Connector FHIR destination": {
            "$ref": "./examples/IotConnectorFhirDestination_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "IotConnectorFhirDestination_Delete",
        "tags": [
          "IotFhirDestinations"
        ],
        "description": "Deletes an IoT Connector FHIR destination.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "iotConnectorName",
            "in": "path",
            "description": "The name of IoT Connector resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "fhirDestinationName",
            "in": "path",
            "description": "The name of IoT Connector FHIR destination resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete an IoT Connector destination": {
            "$ref": "./examples/IotConnectorFhirDestination_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/privateEndpointConnections": {
      "get": {
        "operationId": "WorkspacePrivateEndpointConnectionsOperations_ListByWorkspace",
        "description": "Lists all private endpoint connections for a workspace.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionDescriptionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "WorkspacePrivateEndpointConnectionsOperations_Get",
        "description": "Gets the specified private endpoint connection associated with the workspace.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionDescription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "WorkspacePrivateEndpointConnectionsOperations_CreateOrUpdate",
        "description": "Update the state of the specified private endpoint connection associated with the workspace.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The private endpoint connection properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionDescription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionDescription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "WorkspacePrivateEndpointConnectionsOperations_Delete",
        "description": "Deletes a private endpoint connection.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/privateLinkResources": {
      "get": {
        "operationId": "WorkspacePrivateLinkResourcesOperations_ListByWorkspace",
        "description": "Gets the private link resources that need to be created for a workspace.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceDescriptionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/workspaces/{workspaceName}/privateLinkResources/{groupName}": {
      "get": {
        "operationId": "WorkspacePrivateLinkResourcesOperations_Get",
        "description": "Gets a private link resource that need to be created for a workspace.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the service instance.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of workspace resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
          },
          {
            "name": "groupName",
            "in": "path",
            "description": "The name of the private link resource group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceDescription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Azure.ResourceManager.Foundations.ActionType": {
      "type": "string",
      "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
      "enum": [
        "Internal"
      ],
      "x-ms-enum": {
        "name": "ActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Internal",
            "value": "Internal",
            "description": "Actions are for internal-only APIs."
          }
        ]
      }
    },
    "Azure.ResourceManager.Foundations.UserAssignedIdentity": {
      "type": "object",
      "description": "A managed identity assigned by the user.",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The active directory client identifier for this principal."
        },
        "principalId": {
          "type": "string",
          "description": "The active directory identifier for this principal."
        }
      }
    },
    "CheckNameAvailabilityParameters": {
      "type": "object",
      "description": "Input values.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the service instance to check."
        },
        "type": {
          "type": "string",
          "description": "The fully qualified resource type which includes provider namespace."
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "CorsConfiguration": {
      "type": "object",
      "description": "The settings for the CORS configuration of the service instance.",
      "properties": {
        "origins": {
          "type": "array",
          "description": "The origins to be allowed via CORS.",
          "items": {
            "type": "string"
          }
        },
        "headers": {
          "type": "array",
          "description": "The headers to be allowed via CORS.",
          "items": {
            "type": "string"
          }
        },
        "methods": {
          "type": "array",
          "description": "The methods to be allowed via CORS.",
          "items": {
            "type": "string"
          }
        },
        "maxAge": {
          "type": "integer",
          "format": "int32",
          "description": "The max age to be allowed via CORS.",
          "maximum": 99999
        },
        "allowCredentials": {
          "type": "boolean",
          "description": "If credentials are allowed via CORS."
        }
      }
    },
    "DicomService": {
      "type": "object",
      "description": "The description of Dicom Service",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DicomServiceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DicomServiceAuthenticationConfiguration": {
      "type": "object",
      "description": "Authentication configuration information",
      "properties": {
        "authority": {
          "type": "string",
          "description": "The authority url for the service",
          "readOnly": true
        },
        "audiences": {
          "type": "array",
          "description": "The audiences for the service",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "DicomServiceListResult": {
      "type": "object",
      "description": "The response of a DicomService list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DicomService items on this page",
          "items": {
            "$ref": "#/definitions/DicomService"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DicomServicePatchResource": {
      "type": "object",
      "description": "Dicom Service patch properties",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ServiceManagedIdentityIdentity",
          "description": "Setting indicating whether the service has a managed identity associated with it."
        }
      }
    },
    "DicomServiceProperties": {
      "type": "object",
      "description": "Dicom Service properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "authenticationConfiguration": {
          "$ref": "#/definitions/DicomServiceAuthenticationConfiguration",
          "description": "Dicom Service authentication configuration."
        },
        "corsConfiguration": {
          "$ref": "#/definitions/CorsConfiguration",
          "description": "Dicom Service Cors configuration."
        },
        "serviceUrl": {
          "type": "string",
          "description": "The url of the Dicom Services.",
          "readOnly": true
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "The list of private endpoint connections that are set up for this resource.",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnectionDescription"
          },
          "readOnly": true
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled."
        },
        "eventState": {
          "$ref": "#/definitions/ServiceEventState",
          "description": "DICOM Service event support status.",
          "readOnly": true
        },
        "encryption": {
          "$ref": "#/definitions/Encryption",
          "description": "The encryption settings of the DICOM service"
        }
      }
    },
    "DummyPrivateEndpointConnection": {
      "type": "object",
      "description": "The Private Endpoint Connection resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "Resource properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "DummyPrivateLinkResource": {
      "type": "object",
      "description": "A private link resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Resource properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Encryption": {
      "type": "object",
      "description": "Settings to encrypt a service",
      "properties": {
        "customerManagedKeyEncryption": {
          "$ref": "#/definitions/EncryptionCustomerManagedKeyEncryption",
          "description": "The encryption settings for the customer-managed key"
        }
      }
    },
    "EncryptionCustomerManagedKeyEncryption": {
      "type": "object",
      "description": "The encryption settings for the customer-managed key",
      "properties": {
        "keyEncryptionKeyUrl": {
          "type": "string",
          "description": "The URL of the key to use for encryption"
        }
      }
    },
    "Error": {
      "type": "object",
      "description": "Error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetailsInternal",
          "description": "Error details"
        }
      }
    },
    "ErrorDetails": {
      "type": "object",
      "description": "Error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetailsInternal",
          "description": "Error details"
        }
      }
    },
    "ErrorDetailsInternal": {
      "type": "object",
      "description": "Error details.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error.",
          "readOnly": true
        }
      }
    },
    "FhirResourceVersionPolicy": {
      "type": "string",
      "description": "Controls how resources are versioned on the FHIR service",
      "enum": [
        "no-version",
        "versioned",
        "versioned-update"
      ],
      "x-ms-enum": {
        "name": "FhirResourceVersionPolicy",
        "modelAsString": true
      }
    },
    "FhirService": {
      "type": "object",
      "description": "The description of Fhir Service",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FhirServiceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\\\\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "FhirServiceAcrConfiguration": {
      "type": "object",
      "description": "Azure container registry configuration information",
      "properties": {
        "loginServers": {
          "type": "array",
          "description": "The list of the Azure container registry login servers.",
          "items": {
            "type": "string"
          }
        },
        "ociArtifacts": {
          "type": "array",
          "description": "The list of Open Container Initiative (OCI) artifacts.",
          "items": {
            "$ref": "#/definitions/ServiceOciArtifactEntry"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "FhirServiceAuthenticationConfiguration": {
      "type": "object",
      "description": "Authentication configuration information",
      "properties": {
        "authority": {
          "type": "string",
          "description": "The authority url for the service"
        },
        "audience": {
          "type": "string",
          "description": "The audience url for the service"
        },
        "smartProxyEnabled": {
          "type": "boolean",
          "description": "If the SMART on FHIR proxy is enabled"
        }
      }
    },
    "FhirServiceCorsConfiguration": {
      "type": "object",
      "description": "The settings for the CORS configuration of the service instance.",
      "properties": {
        "origins": {
          "type": "array",
          "description": "The origins to be allowed via CORS.",
          "items": {
            "type": "string"
          }
        },
        "headers": {
          "type": "array",
          "description": "The headers to be allowed via CORS.",
          "items": {
            "type": "string"
          }
        },
        "methods": {
          "type": "array",
          "description": "The methods to be allowed via CORS.",
          "items": {
            "type": "string"
          }
        },
        "maxAge": {
          "type": "integer",
          "format": "int32",
          "description": "The max age to be allowed via CORS.",
          "maximum": 99999
        },
        "allowCredentials": {
          "type": "boolean",
          "description": "If credentials are allowed via CORS."
        }
      }
    },
    "FhirServiceExportConfiguration": {
      "type": "object",
      "description": "Export operation configuration information",
      "properties": {
        "storageAccountName": {
          "type": "string",
          "description": "The name of the default export storage account."
        }
      }
    },
    "FhirServiceImportConfiguration": {
      "type": "object",
      "description": "Import operation configuration information",
      "properties": {
        "integrationDataStore": {
          "type": "string",
          "description": "The name of the default integration storage account."
        },
        "initialImportMode": {
          "type": "boolean",
          "description": "If the FHIR service is in InitialImportMode."
        },
        "enabled": {
          "type": "boolean",
          "description": "If the import operation is enabled."
        }
      }
    },
    "FhirServiceKind": {
      "type": "string",
      "description": "The kind of the service.",
      "enum": [
        "fhir-Stu3",
        "fhir-R4"
      ],
      "x-ms-enum": {
        "name": "FhirServiceKind",
        "modelAsString": true
      }
    },
    "FhirServiceListResult": {
      "type": "object",
      "description": "The response of a FhirService list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FhirService items on this page",
          "items": {
            "$ref": "#/definitions/FhirService"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FhirServicePatchResource": {
      "type": "object",
      "description": "FhirService patch properties",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ServiceManagedIdentityIdentity",
          "description": "Setting indicating whether the service has a managed identity associated with it."
        }
      }
    },
    "FhirServiceProperties": {
      "type": "object",
      "description": "Fhir Service properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "acrConfiguration": {
          "$ref": "#/definitions/FhirServiceAcrConfiguration",
          "description": "Fhir Service Azure container registry configuration."
        },
        "authenticationConfiguration": {
          "$ref": "#/definitions/FhirServiceAuthenticationConfiguration",
          "description": "Fhir Service authentication configuration."
        },
        "corsConfiguration": {
          "$ref": "#/definitions/FhirServiceCorsConfiguration",
          "description": "Fhir Service Cors configuration."
        },
        "exportConfiguration": {
          "$ref": "#/definitions/FhirServiceExportConfiguration",
          "description": "Fhir Service export configuration."
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "The list of private endpoint connections that are set up for this resource.",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnectionDescription"
          },
          "readOnly": true
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled."
        },
        "eventState": {
          "$ref": "#/definitions/ServiceEventState",
          "description": "Fhir Service event support status.",
          "readOnly": true
        },
        "resourceVersionPolicyConfiguration": {
          "$ref": "#/definitions/ResourceVersionPolicyConfiguration",
          "description": "Determines tracking of history for resources."
        },
        "importConfiguration": {
          "$ref": "#/definitions/FhirServiceImportConfiguration",
          "description": "Fhir Service import configuration."
        },
        "implementationGuidesConfiguration": {
          "$ref": "#/definitions/ImplementationGuidesConfiguration",
          "description": "Implementation Guides configuration."
        },
        "encryption": {
          "$ref": "#/definitions/Encryption",
          "description": "The encryption settings of the FHIR service"
        }
      }
    },
    "ImplementationGuidesConfiguration": {
      "type": "object",
      "description": "The settings for Implementation Guides - defining capabilities for national standards, vendor consortiums, clinical societies, etc.",
      "properties": {
        "usCoreMissingData": {
          "type": "boolean",
          "description": "If US Core Missing Data requirement is enabled."
        }
      }
    },
    "IotConnector": {
      "type": "object",
      "description": "IoT Connector definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IotConnectorProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "IotConnectorListResult": {
      "type": "object",
      "description": "The response of a IotConnector list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IotConnector items on this page",
          "items": {
            "$ref": "#/definitions/IotConnector"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IotConnectorPatchResource": {
      "type": "object",
      "description": "Iot Connector patch properties",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ServiceManagedIdentityIdentity",
          "description": "Setting indicating whether the service has a managed identity associated with it."
        }
      }
    },
    "IotConnectorProperties": {
      "type": "object",
      "description": "IoT Connector properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "ingestionEndpointConfiguration": {
          "$ref": "#/definitions/IotEventHubIngestionEndpointConfiguration",
          "description": "Source configuration."
        },
        "deviceMapping": {
          "$ref": "#/definitions/IotMappingProperties",
          "description": "Device Mappings."
        }
      }
    },
    "IotDestinationProperties": {
      "type": "object",
      "description": "Common IoT Connector destination properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        }
      }
    },
    "IotEventHubIngestionEndpointConfiguration": {
      "type": "object",
      "description": "Event Hub ingestion endpoint configuration",
      "properties": {
        "eventHubName": {
          "type": "string",
          "description": "Event Hub name to connect to."
        },
        "consumerGroup": {
          "type": "string",
          "description": "Consumer group of the event hub to connected to."
        },
        "fullyQualifiedEventHubNamespace": {
          "type": "string",
          "description": "Fully qualified namespace of the Event Hub to connect to."
        }
      }
    },
    "IotFhirDestination": {
      "type": "object",
      "description": "IoT Connector FHIR destination definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IotFhirDestinationProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "IotFhirDestinationListResult": {
      "type": "object",
      "description": "The response of a IotFhirDestination list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IotFhirDestination items on this page",
          "items": {
            "$ref": "#/definitions/IotFhirDestination"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IotFhirDestinationProperties": {
      "type": "object",
      "description": "IoT Connector destination properties for an Azure FHIR service.",
      "properties": {
        "resourceIdentityResolutionType": {
          "$ref": "#/definitions/IotIdentityResolutionType",
          "description": "Determines how resource identity is resolved on the destination."
        },
        "fhirServiceResourceId": {
          "type": "string",
          "description": "Fully qualified resource id of the FHIR service to connect to."
        },
        "fhirMapping": {
          "$ref": "#/definitions/IotMappingProperties",
          "description": "FHIR Mappings"
        }
      },
      "required": [
        "resourceIdentityResolutionType",
        "fhirServiceResourceId",
        "fhirMapping"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/IotDestinationProperties"
        }
      ]
    },
    "IotIdentityResolutionType": {
      "type": "string",
      "description": "The type of IoT identity resolution to use with the destination.",
      "enum": [
        "Create",
        "Lookup"
      ],
      "x-ms-enum": {
        "name": "IotIdentityResolutionType",
        "modelAsString": true
      }
    },
    "IotMappingProperties": {
      "type": "object",
      "description": "The mapping content.",
      "properties": {
        "content": {
          "type": "object",
          "description": "The mapping.",
          "additionalProperties": {}
        }
      }
    },
    "Kind": {
      "type": "string",
      "description": "The kind of the service.",
      "enum": [
        "fhir",
        "fhir-Stu3",
        "fhir-R4"
      ],
      "x-ms-enum": {
        "name": "Kind",
        "modelAsString": false
      }
    },
    "LocationBasedResource": {
      "type": "object",
      "description": "The common properties for any location based resource, tracked or proxy.",
      "properties": {
        "location": {
          "type": "string",
          "description": "The resource location.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceCore"
        }
      ]
    },
    "LogSpecification": {
      "type": "object",
      "description": "Specifications of the Log for Azure Monitoring",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the log"
        },
        "displayName": {
          "type": "string",
          "description": "Localized friendly display name of the log"
        },
        "blobDuration": {
          "type": "string",
          "description": "Blob duration of the log"
        }
      }
    },
    "ManagedServiceIdentityType": {
      "type": "string",
      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
      "enum": [
        "SystemAssigned",
        "None"
      ],
      "x-ms-enum": {
        "name": "ManagedServiceIdentityType",
        "modelAsString": true
      }
    },
    "MetricDimension": {
      "type": "object",
      "description": "Specifications of the Dimension of metrics",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the dimension"
        },
        "displayName": {
          "type": "string",
          "description": "Localized friendly display name of the dimension"
        },
        "toBeExportedForShoebox": {
          "type": "boolean",
          "description": "Whether this dimension should be included for the Shoebox export scenario"
        }
      }
    },
    "MetricSpecification": {
      "type": "object",
      "description": "Specifications of the Metrics for Azure Monitoring",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the metric"
        },
        "displayName": {
          "type": "string",
          "description": "Localized friendly display name of the metric"
        },
        "displayDescription": {
          "type": "string",
          "description": "Localized friendly description of the metric"
        },
        "unit": {
          "type": "string",
          "description": "Unit that makes sense for the metric"
        },
        "category": {
          "type": "string",
          "description": "Name of the metric category that the metric belongs to. A metric can only belong to a single category."
        },
        "aggregationType": {
          "type": "string",
          "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count."
        },
        "supportedAggregationTypes": {
          "type": "array",
          "description": "Supported aggregation types",
          "items": {
            "type": "string"
          }
        },
        "supportedTimeGrainTypes": {
          "type": "array",
          "description": "Supported time grain types",
          "items": {
            "type": "string"
          }
        },
        "fillGapWithZero": {
          "type": "boolean",
          "description": "Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published."
        },
        "metricFilterPattern": {
          "type": "string",
          "description": "Pattern for the filter of the metric."
        },
        "dimensions": {
          "type": "array",
          "description": "Dimensions of the metric",
          "items": {
            "$ref": "#/definitions/MetricDimension"
          },
          "x-ms-identifiers": []
        },
        "isInternal": {
          "type": "boolean",
          "description": "Whether the metric is internal."
        },
        "sourceMdmAccount": {
          "type": "string",
          "description": "The source MDM account."
        },
        "sourceMdmNamespace": {
          "type": "string",
          "description": "The source MDM namespace."
        },
        "enableRegionalMdmAccount": {
          "type": "boolean",
          "description": "Whether regional MDM account enabled."
        },
        "resourceIdDimensionNameOverride": {
          "type": "string",
          "description": "The resource Id dimension name override."
        }
      }
    },
    "OperationDetail": {
      "type": "object",
      "description": "Service REST API operation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the operation",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationDisplay",
          "description": "Display of the operation"
        },
        "origin": {
          "type": "string",
          "description": "Default value is 'user,system'.",
          "readOnly": true
        },
        "actionType": {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.ActionType",
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/OperationProperties",
          "description": "Properties of the operation"
        }
      }
    },
    "OperationProperties": {
      "type": "object",
      "description": "Extra Operation properties",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification",
          "description": "Service specifications of the operation"
        }
      }
    },
    "OperationResultStatus": {
      "type": "string",
      "description": "The status of the operation being performed.",
      "enum": [
        "Canceled",
        "Succeeded",
        "Failed",
        "Requested",
        "Running"
      ],
      "x-ms-enum": {
        "name": "OperationResultStatus",
        "modelAsString": true
      },
      "readOnly": true
    },
    "OperationResultsDescription": {
      "type": "object",
      "description": "The properties indicating the operation result of an operation on a service.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the operation returned.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the operation result.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/OperationResultStatus",
          "description": "The status of the operation being performed.",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "description": "The time that the operation was started.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "description": "The time that the operation finished.",
          "readOnly": true
        },
        "properties": {
          "type": "object",
          "description": "Additional properties of the operation result.",
          "additionalProperties": {}
        }
      }
    },
    "PrivateEndpoint": {
      "type": "object",
      "description": "The Private Endpoint resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM identifier for Private Endpoint",
          "readOnly": true
        }
      }
    },
    "PrivateEndpointConnectionDescription": {
      "type": "object",
      "description": "The Private Endpoint Connection resource.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionDescriptionListResult": {
      "type": "object",
      "description": "The response of a PrivateEndpointConnectionDescription list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateEndpointConnectionDescription items on this page",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnectionDescription"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "List of private endpoint connection associated with the specified storage account",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private endpoint connections",
          "items": {
            "$ref": "#/definitions/DummyPrivateEndpointConnection"
          }
        }
      }
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": "Properties of the PrivateEndpointConnectProperties.",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The resource of private end point."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "$ref": "#/definitions/PrivateEndpointConnectionProvisioningState",
          "description": "The provisioning state of the private endpoint connection resource.",
          "readOnly": true
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ]
    },
    "PrivateEndpointConnectionProvisioningState": {
      "type": "string",
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Creating",
        "Deleting",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "PrivateEndpointServiceConnectionStatus": {
      "type": "string",
      "description": "The private endpoint connection status.",
      "enum": [
        "Pending",
        "Approved",
        "Rejected"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointServiceConnectionStatus",
        "modelAsString": true
      }
    },
    "PrivateLinkResourceDescription": {
      "type": "object",
      "description": "The Private Endpoint Connection resource.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateLinkResourceDescriptionListResult": {
      "type": "object",
      "description": "The response of a PrivateLinkResourceDescription list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateLinkResourceDescription items on this page",
          "items": {
            "$ref": "#/definitions/PrivateLinkResourceDescription"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "description": "Properties of a private link resource.",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The private link resource group id.",
          "readOnly": true
        },
        "requiredMembers": {
          "type": "array",
          "description": "The private link resource required member names.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "The private link resource Private link DNS zone name.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "description": "A collection of information about the state of the connection between service consumer and provider.",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateEndpointServiceConnectionStatus",
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval/rejection of the connection."
        },
        "actionsRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The provisioning state.",
      "enum": [
        "Deleting",
        "Succeeded",
        "Creating",
        "Accepted",
        "Verifying",
        "Updating",
        "Failed",
        "Canceled",
        "Deprovisioned",
        "Moving",
        "Suspended",
        "Warned",
        "SystemMaintenance"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "PublicNetworkAccess": {
      "type": "string",
      "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true
      }
    },
    "Resource": {
      "type": "object",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        }
      }
    },
    "ResourceCore": {
      "type": "object",
      "description": "The common properties for any resource, tracked or proxy.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "An etag associated with the resource, used for optimistic concurrency when editing it."
        }
      }
    },
    "ResourceTags": {
      "type": "object",
      "description": "List of key value pairs that describe the resource. This will overwrite the existing tags.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "ResourceVersionPolicyConfiguration": {
      "type": "object",
      "description": "The settings for history tracking for FHIR resources.",
      "properties": {
        "default": {
          "$ref": "#/definitions/FhirResourceVersionPolicy",
          "description": "The default value for tracking history across all resources."
        },
        "resourceTypeOverrides": {
          "type": "object",
          "description": "A list of FHIR Resources and their version policy overrides.",
          "additionalProperties": {
            "$ref": "#/definitions/FhirResourceVersionPolicy"
          }
        }
      }
    },
    "ServiceAccessPolicyEntry": {
      "type": "object",
      "description": "An access policy entry.",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.",
          "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$"
        }
      },
      "required": [
        "objectId"
      ]
    },
    "ServiceAcrConfigurationInfo": {
      "type": "object",
      "description": "Azure container registry configuration information",
      "properties": {
        "loginServers": {
          "type": "array",
          "description": "The list of the ACR login servers.",
          "items": {
            "type": "string"
          }
        },
        "ociArtifacts": {
          "type": "array",
          "description": "The list of Open Container Initiative (OCI) artifacts.",
          "items": {
            "$ref": "#/definitions/ServiceOciArtifactEntry"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ServiceAuthenticationConfigurationInfo": {
      "type": "object",
      "description": "Authentication configuration information",
      "properties": {
        "authority": {
          "type": "string",
          "description": "The authority url for the service"
        },
        "audience": {
          "type": "string",
          "description": "The audience url for the service"
        },
        "smartProxyEnabled": {
          "type": "boolean",
          "description": "If the SMART on FHIR proxy is enabled"
        }
      }
    },
    "ServiceCorsConfigurationInfo": {
      "type": "object",
      "description": "The settings for the CORS configuration of the service instance.",
      "properties": {
        "origins": {
          "type": "array",
          "description": "The origins to be allowed via CORS.",
          "items": {
            "type": "string"
          }
        },
        "headers": {
          "type": "array",
          "description": "The headers to be allowed via CORS.",
          "items": {
            "type": "string"
          }
        },
        "methods": {
          "type": "array",
          "description": "The methods to be allowed via CORS.",
          "items": {
            "type": "string"
          }
        },
        "maxAge": {
          "type": "integer",
          "format": "int32",
          "description": "The max age to be allowed via CORS.",
          "maximum": 99999
        },
        "allowCredentials": {
          "type": "boolean",
          "description": "If credentials are allowed via CORS."
        }
      }
    },
    "ServiceCosmosDbConfigurationInfo": {
      "type": "object",
      "description": "The settings for the Cosmos DB database backing the service.",
      "properties": {
        "offerThroughput": {
          "type": "integer",
          "format": "int32",
          "description": "The provisioned throughput for the backing database.",
          "minimum": 400
        },
        "keyVaultKeyUri": {
          "type": "string",
          "description": "The URI of the customer-managed key for the backing database."
        },
        "crossTenantCmkApplicationId": {
          "type": "string",
          "description": "The multi-tenant application id used to enable CMK access for services in a data sovereign region.",
          "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$"
        }
      }
    },
    "ServiceEventState": {
      "type": "string",
      "description": "Indicates the current status of event support for the resource.",
      "enum": [
        "Disabled",
        "Enabled",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "ServiceEventState",
        "modelAsString": true
      }
    },
    "ServiceExportConfigurationInfo": {
      "type": "object",
      "description": "Export operation configuration information",
      "properties": {
        "storageAccountName": {
          "type": "string",
          "description": "The name of the default export storage account."
        }
      }
    },
    "ServiceImportConfigurationInfo": {
      "type": "object",
      "description": "Import operation configuration information",
      "properties": {
        "integrationDataStore": {
          "type": "string",
          "description": "The name of the default integration storage account."
        },
        "initialImportMode": {
          "type": "boolean",
          "description": "If the FHIR service is in InitialImportMode."
        },
        "enabled": {
          "type": "boolean",
          "description": "If the import operation is enabled."
        }
      }
    },
    "ServiceManagedIdentity": {
      "type": "object",
      "description": "Managed service identity (system assigned and/or user assigned identities)",
      "properties": {
        "identity": {
          "$ref": "#/definitions/ServiceManagedIdentityIdentity",
          "description": "Setting indicating whether the service has a managed identity associated with it."
        }
      }
    },
    "ServiceManagedIdentityIdentity": {
      "type": "object",
      "description": "Setting indicating whether the service has a managed identity associated with it.",
      "properties": {
        "type": {
          "$ref": "#/definitions/ServiceManagedIdentityType",
          "description": "Type of identity being specified, currently SystemAssigned and None are allowed."
        },
        "principalId": {
          "type": "string",
          "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
          "readOnly": true
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
          "additionalProperties": {
            "$ref": "#/definitions/Azure.ResourceManager.Foundations.UserAssignedIdentity"
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "ServiceManagedIdentityType": {
      "type": "string",
      "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
      "enum": [
        "None",
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned,UserAssigned"
      ],
      "x-ms-enum": {
        "name": "ServiceManagedIdentityType",
        "modelAsString": true
      }
    },
    "ServiceNameUnavailabilityReason": {
      "type": "string",
      "description": "The reason for unavailability.",
      "enum": [
        "Invalid",
        "AlreadyExists"
      ],
      "x-ms-enum": {
        "name": "ServiceNameUnavailabilityReason",
        "modelAsString": false
      }
    },
    "ServiceOciArtifactEntry": {
      "type": "object",
      "description": "An Open Container Initiative (OCI) artifact.",
      "properties": {
        "loginServer": {
          "type": "string",
          "description": "The Azure Container Registry login server."
        },
        "imageName": {
          "type": "string",
          "description": "The artifact name."
        },
        "digest": {
          "type": "string",
          "description": "The artifact digest."
        }
      }
    },
    "ServiceSpecification": {
      "type": "object",
      "description": "Service specification payload",
      "properties": {
        "logSpecifications": {
          "type": "array",
          "description": "Specifications of the Log for Azure Monitoring",
          "items": {
            "$ref": "#/definitions/LogSpecification"
          },
          "x-ms-identifiers": []
        },
        "metricSpecifications": {
          "type": "array",
          "description": "Specifications of the Metrics for Azure Monitoring",
          "items": {
            "$ref": "#/definitions/MetricSpecification"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ServicesDescription": {
      "type": "object",
      "description": "The description of the service.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServicesProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ServicesDescriptionListResult": {
      "type": "object",
      "description": "The response of a ServicesDescription list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ServicesDescription items on this page",
          "items": {
            "$ref": "#/definitions/ServicesDescription"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ServicesNameAvailabilityInfo": {
      "type": "object",
      "description": "The properties indicating whether a given service name is available.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "The value which indicates whether the provided name is available.",
          "readOnly": true
        },
        "reason": {
          "$ref": "#/definitions/ServiceNameUnavailabilityReason",
          "description": "The reason for unavailability.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The detailed reason message."
        }
      }
    },
    "ServicesPatchDescription": {
      "type": "object",
      "description": "The description of the service.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Instance tags",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/ServicesPropertiesUpdateParameters",
          "description": "The properties for updating a service instance."
        }
      }
    },
    "ServicesProperties": {
      "type": "object",
      "description": "The properties of a service instance.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "accessPolicies": {
          "type": "array",
          "description": "The access policies of the service instance.",
          "items": {
            "$ref": "#/definitions/ServiceAccessPolicyEntry"
          },
          "x-ms-identifiers": []
        },
        "cosmosDbConfiguration": {
          "$ref": "#/definitions/ServiceCosmosDbConfigurationInfo",
          "description": "The settings for the Cosmos DB database backing the service."
        },
        "authenticationConfiguration": {
          "$ref": "#/definitions/ServiceAuthenticationConfigurationInfo",
          "description": "The authentication configuration for the service instance."
        },
        "corsConfiguration": {
          "$ref": "#/definitions/ServiceCorsConfigurationInfo",
          "description": "The settings for the CORS configuration of the service instance."
        },
        "exportConfiguration": {
          "$ref": "#/definitions/ServiceExportConfigurationInfo",
          "description": "The settings for the export operation of the service instance."
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "The list of private endpoint connections that are set up for this resource.",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnectionDescription"
          }
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled."
        },
        "acrConfiguration": {
          "$ref": "#/definitions/ServiceAcrConfigurationInfo",
          "description": "The azure container registry settings used for convert data operation of the service instance."
        },
        "importConfiguration": {
          "$ref": "#/definitions/ServiceImportConfigurationInfo",
          "description": "The settings for the import operation of the service instance."
        }
      }
    },
    "ServicesPropertiesUpdateParameters": {
      "type": "object",
      "description": "The properties for updating a service instance.",
      "properties": {
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled."
        }
      }
    },
    "ServicesResource": {
      "type": "object",
      "description": "The common properties of a service.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "kind": {
          "$ref": "#/definitions/Kind",
          "description": "The kind of the service."
        },
        "location": {
          "type": "string",
          "description": "The resource location.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "The resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "etag": {
          "type": "string",
          "description": "An etag associated with the resource, used for optimistic concurrency when editing it."
        },
        "identity": {
          "$ref": "#/definitions/ServicesResourceIdentity",
          "description": "Setting indicating whether the service has a managed identity associated with it."
        }
      },
      "required": [
        "kind",
        "location"
      ]
    },
    "ServicesResourceIdentity": {
      "type": "object",
      "description": "Setting indicating whether the service has a managed identity associated with it.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of the resource identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of the resource.",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/ManagedServiceIdentityType",
          "description": "Type of identity being specified, currently SystemAssigned and None are allowed."
        }
      }
    },
    "TaggedResource": {
      "type": "object",
      "description": "The common properties of tracked resources in the service.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "location": {
          "type": "string",
          "description": "The resource location.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "An etag associated with the resource, used for optimistic concurrency when editing it."
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2023-11-01"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_11_01",
            "value": "2023-11-01",
            "description": "The 2023-11-01 API version."
          }
        ]
      }
    },
    "Workspace": {
      "type": "object",
      "description": "Workspace resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkspaceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "WorkspaceListResult": {
      "type": "object",
      "description": "The response of a Workspace list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Workspace items on this page",
          "items": {
            "$ref": "#/definitions/Workspace"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkspacePatchResource": {
      "type": "object",
      "description": "Workspace patch properties",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceTags"
        }
      ]
    },
    "WorkspaceProperties": {
      "type": "object",
      "description": "Workspaces resource specific properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "The list of private endpoint connections that are set up for this resource.",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnectionDescription"
          },
          "readOnly": true
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled."
        }
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
