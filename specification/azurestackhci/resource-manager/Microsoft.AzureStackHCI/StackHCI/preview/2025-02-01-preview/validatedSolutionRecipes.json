{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.AzureStackHCI",
    "version": "2025-02-01-preview",
    "description": "Azure Stack HCI service"
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "ValidatedSolutionRecipes"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/locations/{location}/validatedSolutionRecipes": {
      "get": {
        "operationId": "ValidatedSolutionRecipes_ListBySubscriptionLocationResource",
        "tags": [
          "ValidatedSolutionRecipes"
        ],
        "description": "List all validated solution recipes.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidatedSolutionRecipeListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ValidatedSolutionRecipes_ListBySubscriptionLocationResource": {
            "$ref": "./examples/ValidatedSolutionRecipes_ListBySubscriptionLocationResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/locations/{location}/validatedSolutionRecipes/{validatedSolutionRecipeName}": {
      "get": {
        "operationId": "ValidatedSolutionRecipes_Get",
        "tags": [
          "ValidatedSolutionRecipes"
        ],
        "description": "Get a validated solution recipe.",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "validatedSolutionRecipeName",
            "in": "path",
            "description": "The name of the ValidatedSolutionRecipe",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-.]{3,50}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidatedSolutionRecipe"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ValidatedSolutionRecipes_Get": {
            "$ref": "./examples/ValidatedSolutionRecipes_Get.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ValidatedSolutionRecipe": {
      "type": "object",
      "description": "Represents a validated solution recipe resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ValidatedSolutionRecipeProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ValidatedSolutionRecipeCapabilities": {
      "type": "object",
      "description": "Represents capabilities available in a validated solution recipe.",
      "properties": {
        "clusterCapabilities": {
          "type": "array",
          "description": "Represents the cluster capabilities.",
          "items": {
            "$ref": "#/definitions/ValidatedSolutionRecipeCapability"
          },
          "x-ms-identifiers": []
        },
        "nodeCapabilities": {
          "type": "array",
          "description": "Represents the node capabilities.",
          "items": {
            "$ref": "#/definitions/ValidatedSolutionRecipeCapability"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "clusterCapabilities",
        "nodeCapabilities"
      ]
    },
    "ValidatedSolutionRecipeCapability": {
      "type": "object",
      "description": "Represents capability available in a validated solution recipe.",
      "properties": {
        "capabilityName": {
          "type": "string",
          "description": "Represents the capability name."
        }
      },
      "required": [
        "capabilityName"
      ]
    },
    "ValidatedSolutionRecipeComponent": {
      "type": "object",
      "description": "Represents component available in a validated solution recipe.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Represents the component's name."
        },
        "type": {
          "type": "string",
          "description": "Represents the component's type."
        },
        "requiredVersion": {
          "type": "string",
          "description": "Represents the component's required version."
        },
        "installOrder": {
          "type": "integer",
          "format": "int64",
          "description": "Represents the component's install order."
        },
        "tags": {
          "type": "array",
          "description": "Represents the component's tags.",
          "items": {
            "type": "string"
          }
        },
        "payloads": {
          "type": "array",
          "description": "Represents the component's payloads.",
          "items": {
            "$ref": "#/definitions/ValidatedSolutionRecipeComponentPayload"
          },
          "x-ms-identifiers": []
        },
        "metadata": {
          "$ref": "#/definitions/ValidatedSolutionRecipeComponentMetadata",
          "description": "Represents the component's metadata."
        }
      },
      "required": [
        "name",
        "type",
        "tags"
      ]
    },
    "ValidatedSolutionRecipeComponentMetadata": {
      "type": "object",
      "description": "Represents metadata associated with a component available in a validated solution recipe.",
      "properties": {
        "extensionType": {
          "type": "string",
          "description": "Represents the type of extension."
        },
        "publisher": {
          "type": "string",
          "description": "Represents the publisher of the extension."
        },
        "enableAutomaticUpgrade": {
          "type": "boolean",
          "description": "Indicates whether automatic upgrades of the extension are enabled."
        },
        "lcmUpdate": {
          "type": "boolean",
          "description": "Indicates whether the LCM (Lifecycle Management) update of the extension is enabled."
        },
        "catalog": {
          "type": "string",
          "description": "Specifies the catalog to which the extension belongs."
        },
        "ring": {
          "type": "string",
          "description": "Specifies the ring to which the extension belongs, internally used by component."
        },
        "releaseTrain": {
          "type": "string",
          "description": "Specifies the release train to which given component belongs."
        },
        "link": {
          "type": "string",
          "description": "Specifies the link associated with the extension."
        },
        "name": {
          "type": "string",
          "description": "Specifies the name of the extension."
        },
        "expectedHash": {
          "type": "string",
          "description": "Specifies the expected hash of the extension."
        },
        "previewSource": {
          "type": "string",
          "description": "Specifies the preview source of the extension."
        }
      }
    },
    "ValidatedSolutionRecipeComponentPayload": {
      "type": "object",
      "description": "Represents payloads associated with a component available in a validated solution recipe.",
      "properties": {
        "identifier": {
          "type": "string",
          "description": "Represents the unique identifier of the payload used to query the URL."
        },
        "hash": {
          "type": "string",
          "description": "Represents the cryptographic hash of the payload, ensuring data integrity."
        },
        "fileName": {
          "type": "string",
          "description": "Represents the name of the file associated with the payload."
        },
        "url": {
          "type": "string",
          "description": "Represents the URL from which the payload can be downloaded."
        }
      },
      "required": [
        "identifier",
        "hash",
        "fileName",
        "url"
      ]
    },
    "ValidatedSolutionRecipeContent": {
      "type": "object",
      "description": "Represents contents of a validated solution recipe resource.",
      "properties": {
        "info": {
          "$ref": "#/definitions/ValidatedSolutionRecipeInfo",
          "description": "Represents information about a validated solution recipe."
        },
        "capabilities": {
          "$ref": "#/definitions/ValidatedSolutionRecipeCapabilities",
          "description": "Represents capabilities available in a validated solution recipe."
        },
        "components": {
          "type": "array",
          "description": "Represents components available in a validated solution recipe.",
          "items": {
            "$ref": "#/definitions/ValidatedSolutionRecipeComponent"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "info",
        "components"
      ]
    },
    "ValidatedSolutionRecipeInfo": {
      "type": "object",
      "description": "Represents information about a validated solution recipe.",
      "properties": {
        "solutionType": {
          "type": "string",
          "description": "Represents the solution type for which this validated solution recipe is applicable."
        },
        "version": {
          "type": "string",
          "description": "Represents the version for which this validated solution recipe is applicable."
        }
      },
      "required": [
        "solutionType",
        "version"
      ]
    },
    "ValidatedSolutionRecipeListResult": {
      "type": "object",
      "description": "The response of a ValidatedSolutionRecipe list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ValidatedSolutionRecipe items on this page",
          "items": {
            "$ref": "#/definitions/ValidatedSolutionRecipe"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ValidatedSolutionRecipeProperties": {
      "type": "object",
      "description": "Represents properties of a validated solution recipe resource.",
      "properties": {
        "recipeContent": {
          "$ref": "#/definitions/ValidatedSolutionRecipeContent",
          "description": "Represents contents of a validated solution recipe."
        },
        "signature": {
          "type": "string",
          "description": "Represents the signature of the recipe, to be used for ensuring its integrity."
        }
      },
      "required": [
        "recipeContent"
      ]
    }
  },
  "parameters": {}
}
