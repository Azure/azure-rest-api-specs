{
  "swagger": "2.0",
  "info": {
    "title": "AzureStackHCI",
    "description": "The Microsoft.AzureStackHCI Rest API spec.",
    "version": "2022-12-15-preview",
    "x-ms-code-generation-settings": {
      "name": "AzureStackHCIClient"
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualMachines/{virtualMachineName}": {
      "get": {
        "operationId": "VirtualMachines_Get",
        "description": "Gets a virtual machine",
        "x-ms-examples": {
          "GetVirtualMachine": {
            "$ref": "./examples/GetVirtualMachine.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualMachineNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachines"
            }
          }
        }
      },
      "put": {
        "operationId": "VirtualMachines_CreateOrUpdate",
        "description": "The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.",
        "x-ms-examples": {
          "PutVirtualMachineWithGalleryImage": {
            "$ref": "./examples/PutVirtualMachineWithGalleryImage.json"
          },
          "PutVirtualMachineWithMarketplaceGalleryImage": {
            "$ref": "./examples/PutVirtualMachineWithMarketplaceGalleryImage.json"
          },
          "PutVirtualMachineWithOsDisk": {
            "$ref": "./examples/PutVirtualMachineWithOsDisk.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualMachineNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "virtualMachines",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualMachines"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachines"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/VirtualMachines"
            }
          }
        }
      },
      "delete": {
        "operationId": "VirtualMachines_Delete",
        "description": "The operation to delete a virtual machine.",
        "x-ms-examples": {
          "DeleteVirtualMachine": {
            "$ref": "./examples/DeleteVirtualMachine.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualMachineNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No content"
          }
        }
      },
      "patch": {
        "operationId": "VirtualMachines_Update",
        "description": "The operation to update a virtual machine.",
        "x-ms-examples": {
          "UpdateVirtualMachine": {
            "$ref": "./examples/UpdateVirtualMachine.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualMachineNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "virtualMachines",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualMachinesUpdateRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachines"
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualMachines/{virtualMachineName}/start": {
      "post": {
        "operationId": "VirtualMachines_Start",
        "description": "The operation to start a virtual machine.",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "StartVirtualMachine": {
            "$ref": "./examples/StartVirtualMachine.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualMachineNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualMachines/{virtualMachineName}/stop": {
      "post": {
        "operationId": "VirtualMachines_Stop",
        "description": "The operation to stop a virtual machine.",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "StopVirtualMachine": {
            "$ref": "./examples/StopVirtualMachine.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualMachineNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualMachines/{virtualMachineName}/restart": {
      "post": {
        "operationId": "VirtualMachines_Restart",
        "description": "The operation to restart a virtual machine.",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "RestartVirtualMachine": {
            "$ref": "./examples/RestartVirtualMachine.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualMachineNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualMachines": {
      "get": {
        "operationId": "VirtualMachines_ListByResourceGroup",
        "description": "Lists all of the virtual machines in the specified resource group. Use the nextLink property in the response to get the next page of virtual machines.",
        "x-ms-examples": {
          "ListVirtualMachineByResourceGroup": {
            "$ref": "./examples/ListVirtualMachineByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachinesListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/virtualMachines": {
      "get": {
        "operationId": "VirtualMachines_ListBySubscription",
        "description": "Lists all of the virtual machines in the specified subscription. Use the nextLink property in the response to get the next page of virtual machines.",
        "x-ms-examples": {
          "ListVirtualMachineBySubscription": {
            "$ref": "./examples/ListVirtualMachineBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachinesListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualMachines/{virtualMachineName}/hybridIdentityMetadata/{metadataName}": {
      "put": {
        "tags": [
          "HybridIdentityMetadata"
        ],
        "operationId": "HybridIdentityMetadata_Create",
        "description": "Create Or Update HybridIdentityMetadata.",
        "summary": "Implements HybridIdentityMetadata PUT method.",
        "x-ms-examples": {
          "CreateHybridIdentityMetadata": {
            "$ref": "./examples/CreateHybridIdentityMetadata.json"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "path",
            "name": "virtualMachineName",
            "required": true,
            "type": "string",
            "description": "Name of the vm."
          },
          {
            "in": "path",
            "name": "metadataName",
            "required": true,
            "type": "string",
            "description": "Name of the hybridIdentityMetadata."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/HybridIdentityMetadata"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HybridIdentityMetadata"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "HybridIdentityMetadata"
        ],
        "operationId": "HybridIdentityMetadata_Get",
        "summary": "Gets HybridIdentityMetadata.",
        "description": "Implements HybridIdentityMetadata GET method.",
        "x-ms-examples": {
          "GetHybridIdentityMetadata": {
            "$ref": "./examples/GetHybridIdentityMetadata.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "path",
            "name": "virtualMachineName",
            "required": true,
            "type": "string",
            "description": "Name of the vm."
          },
          {
            "in": "path",
            "name": "metadataName",
            "required": true,
            "type": "string",
            "description": "Name of the HybridIdentityMetadata."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HybridIdentityMetadata"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "HybridIdentityMetadata"
        ],
        "operationId": "HybridIdentityMetadata_Delete",
        "summary": "Deleted an HybridIdentityMetadata.",
        "description": "Implements HybridIdentityMetadata DELETE method.",
        "x-ms-examples": {
          "DeleteHybridIdentityMetadata": {
            "$ref": "./examples/DeleteHybridIdentityMetadata.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "path",
            "name": "virtualMachineName",
            "required": true,
            "type": "string",
            "description": "Name of the vm."
          },
          {
            "in": "path",
            "name": "metadataName",
            "required": true,
            "type": "string",
            "description": "Name of the HybridIdentityMetadata."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualMachines/{virtualMachineName}/hybridIdentityMetadata": {
      "get": {
        "tags": [
          "HybridIdentityMetadata"
        ],
        "operationId": "HybridIdentityMetadata_ListByVirtualMachines",
        "summary": "Implements GET HybridIdentityMetadata in a vm.",
        "description": "Returns the list of HybridIdentityMetadata of the given vm.",
        "x-ms-examples": {
          "HybridIdentityMetadataListByVirtualMachines": {
            "$ref": "./examples/HybridIdentityMetadata_ListByVirtualMachines.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "path",
            "name": "virtualMachineName",
            "required": true,
            "type": "string",
            "description": "Name of the vm."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HybridIdentityMetadataList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualMachines/{name}/extensions/{extensionName}": {
      "put": {
        "tags": [
          "MachineExtensions"
        ],
        "operationId": "MachineExtensions_CreateOrUpdate",
        "description": "The operation to create or update the extension.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine where the extension should be created or updated."
          },
          {
            "name": "extensionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine extension."
          },
          {
            "name": "extensionParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MachineExtension"
            },
            "description": "Parameters supplied to the Create Machine Extension operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MachineExtension"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/MachineExtension"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update a Machine Extension (PUT)": {
            "$ref": "./examples/PutMachineExtension.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "MachineExtensions"
        ],
        "operationId": "MachineExtensions_Update",
        "description": "The operation to update the extension.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine where the extension should be created or updated."
          },
          {
            "name": "extensionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine extension."
          },
          {
            "name": "extensionParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MachineExtensionUpdate"
            },
            "description": "Parameters supplied to the Create Machine Extension operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MachineExtension"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update a Machine Extension (PATCH)": {
            "$ref": "./examples/UpdateMachineExtension.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "MachineExtensions"
        ],
        "operationId": "MachineExtensions_Delete",
        "description": "The operation to delete the extension.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine where the extension should be deleted."
          },
          {
            "name": "extensionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine extension."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete a Machine Extension": {
            "$ref": "./examples/DeleteMachineExtension.json"
          }
        }
      },
      "get": {
        "tags": [
          "MachineExtensions"
        ],
        "operationId": "MachineExtensions_Get",
        "description": "The operation to get the extension.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine containing the extension."
          },
          {
            "name": "extensionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine extension."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MachineExtension"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Machine Extension": {
            "$ref": "./examples/GetMachineExtension.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualMachines/{name}/extensions": {
      "get": {
        "tags": [
          "MachineExtensions"
        ],
        "operationId": "MachineExtensions_ListByVirtualMachines",
        "description": "The operation to get all extensions of a non-Azure machine",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine containing the extension."
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The expand expression to apply on the operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MachineExtensionsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get all Machine Extensions": {
            "$ref": "./examples/ListMachineExtension.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualMachines/{virtualMachineName}/guestAgents/{name}": {
      "put": {
        "tags": [
          "GuestAgents"
        ],
        "operationId": "GuestAgent_Create",
        "description": "Create Or Update GuestAgent.",
        "summary": "Implements GuestAgent PUT method.",
        "x-ms-examples": {
          "CreateGuestAgent": {
            "$ref": "./examples/CreateGuestAgent.json"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "path",
            "name": "virtualMachineName",
            "required": true,
            "type": "string",
            "description": "Name of the vm."
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "description": "Name of the guestAgents."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/GuestAgent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GuestAgent"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/GuestAgent"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "GuestAgents"
        ],
        "operationId": "GuestAgent_Get",
        "summary": "Gets GuestAgent.",
        "description": "Implements GuestAgent GET method.",
        "x-ms-examples": {
          "GetGuestAgent": {
            "$ref": "./examples/GetGuestAgent.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "path",
            "name": "virtualMachineName",
            "required": true,
            "type": "string",
            "description": "Name of the vm."
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "description": "Name of the GuestAgent."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GuestAgent"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GuestAgents"
        ],
        "operationId": "GuestAgent_Delete",
        "summary": "Deleted an GuestAgent.",
        "description": "Implements GuestAgent DELETE method.",
        "x-ms-examples": {
          "DeleteGuestAgent": {
            "$ref": "./examples/DeleteGuestAgent.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "path",
            "name": "virtualMachineName",
            "required": true,
            "type": "string",
            "description": "Name of the vm."
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "description": "Name of the GuestAgent."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualMachines/{virtualMachineName}/guestAgents": {
      "get": {
        "tags": [
          "GuestAgents"
        ],
        "operationId": "GuestAgents_ListByVirtualMachines",
        "summary": "Implements GET GuestAgent in a vm.",
        "description": "Returns the list of GuestAgent of the given vm.",
        "x-ms-examples": {
          "GuestAgentListByVirtualMachines": {
            "$ref": "./examples/GuestAgent_ListByVirtualMachines.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "path",
            "name": "virtualMachineName",
            "required": true,
            "type": "string",
            "description": "Name of the vm."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GuestAgentList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "VirtualMachineProperties": {
      "type": "object",
      "x-ms-client-flatten": true,
      "properties": {
        "hardwareProfile": {
          "type": "object",
          "properties": {
            "vmSize": {
              "type": "string",
              "enum": [
                "Default",
                "Standard_A2_v2",
                "Standard_A4_v2",
                "Standard_D2s_v3",
                "Standard_D4s_v3",
                "Standard_D8s_v3",
                "Standard_D16s_v3",
                "Standard_D32s_v3",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_DS13_v2",
                "Standard_K8S_v1",
                "Standard_K8S2_v1",
                "Standard_K8S3_v1",
                "Standard_K8S4_v1",
                "Standard_NK6",
                "Standard_NK12",
                "Standard_NV6",
                "Standard_NV12",
                "Standard_K8S5_v1",
                "Custom"
              ],
              "default": "Default",
              "x-ms-enum": {
                "name": "VmSizeEnum",
                "modelAsString": true
              }
            },
            "processors": {
              "type": "integer",
              "format": "int32",
              "description": "number of processors for the virtual machine"
            },
            "memoryMB": {
              "type": "integer",
              "format": "int64",
              "description": "RAM in MB for the virtual machine"
            },
            "dynamicMemoryConfig": {
              "type": "object",
              "properties": {
                "maximumMemoryMB": {
                  "type": "integer",
                  "format": "int64"
                },
                "minimumMemoryMB": {
                  "type": "integer",
                  "format": "int64"
                },
                "targetMemoryBuffer": {
                  "type": "integer",
                  "description": "Defines the amount of extra memory that should be reserved for a virtual machine at runtime, as a percentage of the total memory that the virtual machine is thought to need. This only applies to virtual systems with dynamic memory enabled. This property can be in the range of 5 to 2000.",
                  "format": "int32"
                }
              }
            }
          },
          "description": "HardwareProfile - Specifies the hardware settings for the virtual machine."
        },
        "networkProfile": {
          "type": "object",
          "properties": {
            "networkInterfaces": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "ID - Resource Id of the network interface"
                  }
                }
              },
              "description": "NetworkInterfaces - list of network interfaces to be attached to the virtual machine"
            }
          },
          "description": "NetworkProfile - describes the network configuration the virtual machine"
        },
        "osProfile": {
          "type": "object",
          "properties": {
            "adminPassword": {
              "type": "string",
              "x-ms-secret": true,
              "description": "AdminPassword - admin password",
              "x-ms-mutability": [
                "create"
              ]
            },
            "adminUsername": {
              "type": "string",
              "description": "AdminUsername - admin username"
            },
            "computerName": {
              "type": "string",
              "description": "ComputerName - name of the compute"
            },
            "linuxConfiguration": {
              "type": "object",
              "properties": {
                "disablePasswordAuthentication": {
                  "type": "boolean",
                  "description": "DisablePasswordAuthentication - whether password authentication should be disabled"
                },
                "ssh": {
                  "type": "object",
                  "properties": {
                    "publicKeys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "keyData": {
                            "type": "string",
                            "description": "KeyData - SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Li      nux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)."
                          },
                          "path": {
                            "type": "string",
                            "description": "Path - Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys"
                          }
                        }
                      },
                      "description": "PublicKeys - The list of SSH public keys used to authenticate with linux based VMs.",
                      "x-ms-identifiers": []
                    }
                  },
                  "description": "SSH - contains settings related to ssh configuration"
                },
                "provisionVMAgent": {
                  "type": "boolean",
                  "description": "Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine creation process."
                }
              },
              "description": "LinuxConfiguration - linux specific configuration values for the virtual machine"
            },
            "osType": {
              "type": "string",
              "description": "OsType - string specifying whether the OS is Linux or Windows",
              "enum": [
                "Linux",
                "Windows"
              ],
              "x-ms-enum": {
                "name": "OsTypeEnum",
                "modelAsString": true
              }
            },
            "windowsConfiguration": {
              "type": "object",
              "properties": {
                "enableAutomaticUpdates": {
                  "type": "boolean",
                  "description": "Whether to EnableAutomaticUpdates on the machine"
                },
                "ssh": {
                  "type": "object",
                  "properties": {
                    "publicKeys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "keyData": {
                            "type": "string",
                            "description": "KeyData - SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Li      nux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)."
                          },
                          "path": {
                            "type": "string",
                            "description": "Path - Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys"
                          }
                        }
                      },
                      "description": "PublicKeys - The list of SSH public keys used to authenticate with linux based VMs.",
                      "x-ms-identifiers": []
                    }
                  },
                  "description": "SSH Configuration"
                },
                "timeZone": {
                  "type": "string",
                  "description": "TimeZone for the virtual machine"
                },
                "provisionVMAgent": {
                  "type": "boolean",
                  "description": "Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine creation process."
                }
              },
              "description": "Windows Configuration for the virtual machine "
            }
          },
          "description": "OsProfile - describes the configuration of the operating system and sets login data"
        },
        "securityProfile": {
          "type": "object",
          "properties": {
            "enableTPM": {
              "type": "boolean",
              "default": false
            },
            "uefiSettings": {
              "type": "object",
              "properties": {
                "secureBootEnabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "Specifies whether secure boot should be enabled on the virtual machine."
                }
              }
            }
          },
          "description": "SecurityProfile - Specifies the security settings for the virtual machine."
        },
        "storageProfile": {
          "type": "object",
          "properties": {
            "dataDisks": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Resource ID of the data disk"
                  }
                }
              },
              "description": "adds data disks to the virtual machine"
            },
            "imageReference": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ],
                  "description": "Resource ID of the image"
                }
              },
              "description": "Which Image to use for the virtual machine"
            },
            "osDisk": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Resource ID of the OS disk"
                }
              },
              "description": "VHD to attach as OS disk"
            },
            "vmConfigStoragePathId": {
              "type": "string",
              "description": "Id of the storage container that hosts the VM configuration file"
            }
          },
          "description": "StorageProfile - contains information about the disks and storage information for the virtual machine"
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the virtual machine.",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "InProgress",
            "Accepted",
            "Deleting",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningStateEnum",
            "modelAsString": true
          }
        },
        "status": {
          "$ref": "#/definitions/VirtualMachineStatus"
        },
        "guestAgentProfile": {
          "description": "Guest agent status properties.",
          "$ref": "#/definitions/GuestAgentProfile"
        },
        "vmId": {
          "description": "Unique identifier for the vm resource.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Properties under the virtual machine resource"
    },
    "VirtualMachineStatus": {
      "x-ms-client-flatten": true,
      "readOnly": true,
      "properties": {
        "errorCode": {
          "type": "string",
          "description": "VirtualMachine provisioning error code"
        },
        "errorMessage": {
          "type": "string",
          "description": "Descriptive error message"
        },
        "powerState": {
          "type": "string",
          "description": "The power state of the virtual machine",
          "enum": [
            "Deallocated",
            "Deallocating",
            "Running",
            "Starting",
            "Stopped",
            "Stopping",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "PowerStateEnum",
            "modelAsString": true
          }
        },
        "provisioningStatus": {
          "properties": {
            "operationId": {
              "type": "string",
              "description": "The ID of the operation performed on the virtual machine"
            },
            "status": {
              "type": "string",
              "description": "The status of the operation performed on the virtual machine [Succeeded, Failed, InProgress]",
              "enum": [
                "Succeeded",
                "Failed",
                "InProgress"
              ],
              "x-ms-enum": {
                "name": "Status",
                "modelAsString": true
              }
            }
          }
        }
      },
      "description": "The observed state of virtual machines"
    },
    "VirtualMachines": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualMachineProperties"
        },
        "extendedLocation": {
          "$ref": "./common.json#/definitions/ExtendedLocation",
          "description": "The extendedLocation of the resource."
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Identity"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "The virtual machine resource definition."
    },
    "HardwareProfileUpdate": {
      "type": "object",
      "properties": {
        "vmSize": {
          "type": "string",
          "enum": [
            "Default",
            "Standard_A2_v2",
            "Standard_A4_v2",
            "Standard_D2s_v3",
            "Standard_D4s_v3",
            "Standard_D8s_v3",
            "Standard_D16s_v3",
            "Standard_D32s_v3",
            "Standard_DS2_v2",
            "Standard_DS3_v2",
            "Standard_DS4_v2",
            "Standard_DS5_v2",
            "Standard_DS13_v2",
            "Standard_K8S_v1",
            "Standard_K8S2_v1",
            "Standard_K8S3_v1",
            "Standard_K8S4_v1",
            "Standard_NK6",
            "Standard_NK12",
            "Standard_NV6",
            "Standard_NV12",
            "Standard_K8S5_v1",
            "Custom"
          ],
          "default": "Default",
          "x-ms-enum": {
            "name": "VmSizeEnum",
            "modelAsString": true
          }
        },
        "processors": {
          "type": "integer",
          "format": "int32",
          "description": "number of processors for the virtual machine"
        },
        "memoryMB": {
          "type": "integer",
          "format": "int64",
          "description": "RAM in MB for the virtual machine"
        }
      },
      "description": "HardwareProfile - Specifies the hardware settings for the virtual machine."
    },
    "NetworkProfileUpdate": {
      "type": "object",
      "properties": {
        "networkInterfaces": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID - Resource ID of the network interface"
              }
            }
          },
          "description": "NetworkInterfaces - list of network interfaces to be attached to the virtual machine"
        }
      },
      "description": "NetworkProfile - describes the network update configuration the virtual machine"
    },
    "StorageProfileUpdate": {
      "type": "object",
      "properties": {
        "dataDisks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            }
          },
          "description": "adds data disks to the virtual machine for the update call"
        }
      }
    },
    "VirtualMachineUpdateProperties": {
      "description": "Defines the resource properties for the update.",
      "type": "object",
      "properties": {
        "hardwareProfile": {
          "$ref": "#/definitions/HardwareProfileUpdate"
        },
        "storageProfile": {
          "$ref": "#/definitions/StorageProfileUpdate"
        },
        "networkProfile": {
          "$ref": "#/definitions/NetworkProfileUpdate"
        }
      }
    },
    "VirtualMachinesUpdateRequest": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VirtualMachineUpdateProperties"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "The virtual machine resource patch definition."
    },
    "VirtualMachinesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualMachines"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "GuestAgentProfile": {
      "description": "Defines the resource properties.",
      "type": "object",
      "properties": {
        "vmUuid": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the VM's unique SMBIOS ID."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "The status of the hybrid machine agent.",
          "enum": [
            "Connected",
            "Disconnected",
            "Error"
          ],
          "x-ms-enum": {
            "name": "StatusTypes",
            "modelAsString": true
          }
        },
        "lastStatusChange": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The time of the last status change."
        },
        "agentVersion": {
          "readOnly": true,
          "type": "string",
          "description": "The hybrid machine agent full version."
        },
        "errorDetails": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorDetail"
          },
          "description": "Details about the error state."
        }
      }
    },
    "HybridIdentityMetadataList": {
      "description": "List of HybridIdentityMetadata.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of HybridIdentityMetadata.",
          "type": "string"
        },
        "value": {
          "description": "Array of HybridIdentityMetadata",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HybridIdentityMetadata"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "HybridIdentityMetadata": {
      "description": "Defines the HybridIdentityMetadata.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource",
          "description": "The resource model definition for an Azure Resource Manager proxy resource. It will have everything other than required location and tags."
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/HybridIdentityMetadataProperties"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "The system data."
        }
      },
      "x-ms-azure-resource": true
    },
    "HybridIdentityMetadataProperties": {
      "description": "Defines the resource properties.",
      "type": "object",
      "properties": {
        "resourceUid": {
          "description": "The unique identifier for the resource.",
          "type": "string"
        },
        "publicKey": {
          "description": "The Public Key.",
          "type": "string"
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Identity",
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResourcePatch": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Object containing updates for patch operations."
    },
    "MachineExtension": {
      "x-ms-azure-resource": true,
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MachineExtensionProperties",
          "description": "Describes Machine Extension Properties."
        },
        "location": {
          "description": "The location.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "The system data."
        },
        "tags": {
          "description": "The Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "The name.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "The Id.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Describes a Machine Extension."
    },
    "MachineExtensionUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MachineExtensionUpdateProperties",
          "description": "Describes Machine Extension Update Properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourcePatch"
        }
      ],
      "description": "Describes a Machine Extension Update."
    },
    "MachineExtensionProperties": {
      "type": "object",
      "properties": {
        "forceUpdateTag": {
          "type": "string",
          "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
        },
        "publisher": {
          "type": "string",
          "description": "The name of the extension handler publisher."
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Specifies the version of the script handler."
        },
        "autoUpgradeMinorVersion": {
          "type": "boolean",
          "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
        },
        "settings": {
          "type": "object",
          "description": "Json formatted public settings for the extension."
        },
        "protectedSettings": {
          "type": "object",
          "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.",
          "x-ms-secret": true
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state, which only appears in the response."
        },
        "instanceView": {
          "allOf": [
            {
              "$ref": "#/definitions/MachineExtensionInstanceView"
            }
          ],
          "description": "The machine extension instance view."
        }
      },
      "description": "Describes the properties of a Machine Extension."
    },
    "MachineExtensionUpdateProperties": {
      "type": "object",
      "properties": {
        "forceUpdateTag": {
          "type": "string",
          "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
        },
        "publisher": {
          "type": "string",
          "description": "The name of the extension handler publisher."
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Specifies the version of the script handler."
        },
        "autoUpgradeMinorVersion": {
          "type": "boolean",
          "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
        },
        "settings": {
          "type": "object",
          "description": "Json formatted public settings for the extension."
        },
        "protectedSettings": {
          "type": "object",
          "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.",
          "x-ms-secret": true
        }
      },
      "description": "Describes the properties of a Machine Extension."
    },
    "MachineExtensionInstanceView": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The machine extension name."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
        },
        "typeHandlerVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Specifies the version of the script handler."
        },
        "status": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "readOnly": true,
              "description": "The status code."
            },
            "level": {
              "type": "string",
              "readOnly": true,
              "description": "The level code.",
              "enum": [
                "Info",
                "Warning",
                "Error"
              ],
              "x-ms-enum": {
                "name": "StatusLevelTypes",
                "modelAsString": true
              }
            },
            "displayStatus": {
              "type": "string",
              "readOnly": true,
              "description": "The short localizable label for the status."
            },
            "message": {
              "type": "string",
              "readOnly": true,
              "description": "The detailed status message, including for alerts and error messages."
            },
            "time": {
              "type": "string",
              "readOnly": true,
              "format": "date-time",
              "description": "The time of the status."
            }
          },
          "description": "Instance view status."
        }
      },
      "description": "Describes the Machine Extension Instance View."
    },
    "MachineExtensionsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MachineExtension"
          },
          "description": "The list of extensions"
        },
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of machine extensions. Call ListNext() with this to fetch the next page of extensions."
        }
      },
      "description": "Describes the Machine Extensions List Result."
    },
    "GuestAgentList": {
      "type": "object",
      "description": "List of GuestAgent.",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of GuestAgent.",
          "type": "string"
        },
        "value": {
          "description": "Array of GuestAgent",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GuestAgent"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "GuestAgent": {
      "description": "Defines the GuestAgent.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource",
          "description": "The resource model definition for an Azure Resource Manager proxy resource. It will have everything other than required location and tags."
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/GuestAgentProperties"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "The system data."
        }
      },
      "x-ms-azure-resource": true
    },
    "ProvisioningAction": {
      "description": "Defines the different types of operations for guest agent.",
      "enum": [
        "install",
        "uninstall",
        "repair"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "ProvisioningAction"
      }
    },
    "GuestCredential": {
      "description": "Username / Password Credentials to connect to guest.",
      "type": "object",
      "properties": {
        "username": {
          "description": "The username to connect with the guest.",
          "type": "string"
        },
        "password": {
          "description": "The password to connect with the guest.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      }
    },
    "GuestAgentProperties": {
      "description": "Defines the resource properties.",
      "type": "object",
      "properties": {
        "credentials": {
          "description": "Username / Password Credentials to provision guest agent.",
          "$ref": "#/definitions/GuestCredential"
        },
        "httpProxyConfig": {
          "description": "HTTP Proxy configuration for the VM.",
          "$ref": "#/definitions/HttpProxyConfiguration"
        },
        "provisioningAction": {
          "description": "The guest agent provisioning action.",
          "$ref": "#/definitions/ProvisioningAction",
          "type": "string"
        },
        "status": {
          "description": "The guest agent status.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HttpProxyConfiguration": {
      "description": "HTTP Proxy configuration for the VM.",
      "type": "object",
      "properties": {
        "httpsProxy": {
          "description": "The httpsProxy url.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "VirtualMachineNameParameter": {
      "name": "virtualMachineName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,62}[a-zA-Z0-9]$",
      "x-ms-parameter-location": "method",
      "maxLength": 64,
      "minLength": 1,
      "description": "Name of the virtual machine"
    }
  }
}
