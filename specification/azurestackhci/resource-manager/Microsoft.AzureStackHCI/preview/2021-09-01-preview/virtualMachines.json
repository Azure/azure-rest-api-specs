{
  "swagger": "2.0",
  "info": {
    "title": "AzureStackHCI",
    "description": "The Microsoft.AzureStackHCI Rest API spec.",
    "version": "2021-09-01-preview",
    "x-ms-code-generation-settings": {
      "name": "AzureStackHCIClient"
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualmachines/{virtualmachinesName}": {
      "get": {
        "operationId": "virtualmachines_Retrieve",
        "x-ms-examples": {
          "GetVirtualMachine": {
            "$ref": "./examples/GetVirtualMachine.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/virtualmachinesNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Retrieves the virtualmachines resource.",
            "schema": {
              "$ref": "#/definitions/virtualmachines"
            }
          }
        }
      },
      "put": {
        "operationId": "virtualmachines_CreateOrUpdate",
        "x-ms-examples": {
          "PutVirtualMachine": {
            "$ref": "./examples/PutVirtualMachine.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/virtualmachinesNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "virtualmachines",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/virtualmachines"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Updates the virtualmachines resource.",
            "schema": {
              "$ref": "#/definitions/virtualmachines"
            }
          },
          "201": {
            "description": "Creates the virtualmachines resource.",
            "schema": {
              "$ref": "#/definitions/virtualmachines"
            }
          }
        }
      },
      "delete": {
        "operationId": "virtualmachines_Delete",
        "x-ms-examples": {
          "DeleteVirtualMachine": {
            "$ref": "./examples/DeleteVirtualMachine.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/virtualmachinesNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Deletes the virtualmachines resource."
          },
          "204": {
            "description": "No content"
          }
        }
      },
      "patch": {
        "operationId": "virtualmachines_Update",
        "x-ms-examples": {
          "UpdateVirtualMachine": {
            "$ref": "./examples/UpdateVirtualMachine.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/virtualmachinesNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "virtualmachines",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/virtualmachinesPatch"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Updates the virtualmachines resource.",
            "schema": {
              "$ref": "#/definitions/virtualmachines"
            }
          },
          "201": {
            "description": "Updates the virtualmachines resource.",
            "schema": {
              "$ref": "#/definitions/virtualmachines"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualmachines/{virtualmachinesName}/start": {
      "post": {
        "operationId": "virtualmachines_Start",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "StartVirtualMachine": {
            "$ref": "./examples/StartVirtualMachine.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/virtualmachinesNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Ok."
          },
          "202": {
            "description": "Accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualmachines/{virtualmachinesName}/stop": {
      "post": {
        "operationId": "virtualmachines_Stop",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "StopVirtualMachine": {
            "$ref": "./examples/StopVirtualMachine.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/virtualmachinesNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Ok."
          },
          "202": {
            "description": "Accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualmachines/{virtualmachinesName}/restart": {
      "post": {
        "operationId": "virtualmachines_Restart",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "RestartVirtualMachine": {
            "$ref": "./examples/RestartVirtualMachine.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/virtualmachinesNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Ok."
          },
          "202": {
            "description": "Accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualmachines": {
      "get": {
        "operationId": "virtualmachines_ListByResourceGroup",
        "x-ms-examples": {
          "ListVirtualMachineByResourceGroup": {
            "$ref": "./examples/ListVirtualMachineByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Lists all virtualmachines under the resource group.",
            "schema": {
              "$ref": "#/definitions/virtualmachinesListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/virtualmachines": {
      "get": {
        "operationId": "virtualmachines_ListBySubscription",
        "x-ms-examples": {
          "ListVirtualMachineBySubscription": {
            "$ref": "./examples/ListVirtualMachineBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Lists all virtualmachines under the subscription.",
            "schema": {
              "$ref": "#/definitions/virtualmachinesListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualMachines/{virtualMachineName}/hybridIdentityMetadata/{metadataName}": {
      "put": {
        "tags": [
          "HybridIdentityMetadata"
        ],
        "operationId": "HybridIdentityMetadata_Create",
        "description": "Create Or Update HybridIdentityMetadata.",
        "summary": "Implements HybridIdentityMetadata PUT method.",
        "x-ms-examples": {
          "CreateHybridIdentityMetadata": {
            "$ref": "./examples/CreateHybridIdentityMetadata.json"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "path",
            "name": "virtualMachineName",
            "required": true,
            "type": "string",
            "description": "Name of the vm."
          },
          {
            "in": "path",
            "name": "metadataName",
            "required": true,
            "type": "string",
            "description": "Name of the hybridIdentityMetadata."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/HybridIdentityMetadata"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HybridIdentityMetadata"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "HybridIdentityMetadata"
        ],
        "operationId": "HybridIdentityMetadata_Get",
        "summary": "Gets HybridIdentityMetadata.",
        "description": "Implements HybridIdentityMetadata GET method.",
        "x-ms-examples": {
          "GetHybridIdentityMetadata": {
            "$ref": "./examples/GetHybridIdentityMetadata.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "path",
            "name": "virtualMachineName",
            "required": true,
            "type": "string",
            "description": "Name of the vm."
          },
          {
            "in": "path",
            "name": "metadataName",
            "required": true,
            "type": "string",
            "description": "Name of the HybridIdentityMetadata."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HybridIdentityMetadata"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "HybridIdentityMetadata"
        ],
        "operationId": "HybridIdentityMetadata_Delete",
        "summary": "Deletes an HybridIdentityMetadata.",
        "description": "Implements HybridIdentityMetadata DELETE method.",
        "x-ms-examples": {
          "DeleteHybridIdentityMetadata": {
            "$ref": "./examples/DeleteHybridIdentityMetadata.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "path",
            "name": "virtualMachineName",
            "required": true,
            "type": "string",
            "description": "Name of the vm."
          },
          {
            "in": "path",
            "name": "metadataName",
            "required": true,
            "type": "string",
            "description": "Name of the HybridIdentityMetadata."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualMachines/{virtualMachineName}/hybridIdentityMetadata": {
      "get": {
        "tags": [
          "HybridIdentityMetadata"
        ],
        "operationId": "HybridIdentityMetadata_ListByVirtualMachines",
        "summary": "Implements GET HybridIdentityMetadata in a vm.",
        "description": "Returns the list of HybridIdentityMetadata of the given vm.",
        "x-ms-examples": {
          "HybridIdentityMetadataListByVirtualMachines": {
            "$ref": "./examples/HybridIdentityMetadata_ListByVirtualMachines.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "path",
            "name": "virtualMachineName",
            "required": true,
            "type": "string",
            "description": "Name of the vm."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/HybridIdentityMetadataList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualMachines/{name}/extensions/{extensionName}": {
      "put": {
        "tags": [
          "MachineExtensions"
        ],
        "operationId": "MachineExtensions_CreateOrUpdate",
        "description": "The operation to create or update the extension.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine where the extension should be created or updated."
          },
          {
            "name": "extensionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine extension."
          },
          {
            "name": "extensionParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MachineExtension"
            },
            "description": "Parameters supplied to the Create Machine Extension operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MachineExtension"
            }
          },
          "201": {
            "description": "HTTP 201 (Created) if the operation was successfully started and will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/MachineExtension"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update a Machine Extension (PUT)": {
            "$ref": "./examples/PutMachineExtension.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "MachineExtensions"
        ],
        "operationId": "MachineExtensions_Update",
        "description": "The operation to update the extension.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine where the extension should be created or updated."
          },
          {
            "name": "extensionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine extension."
          },
          {
            "name": "extensionParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MachineExtensionUpdate"
            },
            "description": "Parameters supplied to the Create Machine Extension operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MachineExtension"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/MachineExtension"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update a Machine Extension (PATCH)": {
            "$ref": "./examples/UpdateMachineExtension.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "MachineExtensions"
        ],
        "operationId": "MachineExtensions_Delete",
        "description": "The operation to delete the extension.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine where the extension should be deleted."
          },
          {
            "name": "extensionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine extension."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete a Machine Extension": {
            "$ref": "./examples/DeleteMachineExtension.json"
          }
        }
      },
      "get": {
        "tags": [
          "MachineExtensions"
        ],
        "operationId": "MachineExtensions_Get",
        "description": "The operation to get the extension.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine containing the extension."
          },
          {
            "name": "extensionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine extension."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MachineExtension"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Machine Extension": {
            "$ref": "./examples/GetMachineExtension.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualMachines/{name}/extensions": {
      "get": {
        "tags": [
          "MachineExtensions"
        ],
        "operationId": "MachineExtensions_ListByVirtualMachines",
        "description": "The operation to get all extensions of a non-Azure machine",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine containing the extension."
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The expand expression to apply on the operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MachineExtensionsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get all Machine Extensions": {
            "$ref": "./examples/ListMachineExtension.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualMachines/{virtualMachineName}/guestAgents/{name}": {
      "put": {
        "tags": [
          "GuestAgents"
        ],
        "operationId": "GuestAgent_Create",
        "description": "Create Or Update GuestAgent.",
        "summary": "Implements GuestAgent PUT method.",
        "x-ms-examples": {
          "CreateGuestAgent": {
            "$ref": "./examples/CreateGuestAgent.json"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "path",
            "name": "virtualMachineName",
            "required": true,
            "type": "string",
            "description": "Name of the vm."
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "description": "Name of the guestAgents."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/GuestAgent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GuestAgent"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/GuestAgent"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "GuestAgents"
        ],
        "operationId": "GuestAgent_Get",
        "summary": "Gets GuestAgent.",
        "description": "Implements GuestAgent GET method.",
        "x-ms-examples": {
          "GetGuestAgent": {
            "$ref": "./examples/GetGuestAgent.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "path",
            "name": "virtualMachineName",
            "required": true,
            "type": "string",
            "description": "Name of the vm."
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "description": "Name of the GuestAgent."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GuestAgent"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "GuestAgents"
        ],
        "operationId": "GuestAgent_Delete",
        "summary": "Deletes an GuestAgent.",
        "description": "Implements GuestAgent DELETE method.",
        "x-ms-examples": {
          "DeleteGuestAgent": {
            "$ref": "./examples/DeleteGuestAgent.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "path",
            "name": "virtualMachineName",
            "required": true,
            "type": "string",
            "description": "Name of the vm."
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "description": "Name of the GuestAgent."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/virtualMachines/{virtualMachineName}/guestAgents": {
      "get": {
        "tags": [
          "GuestAgents"
        ],
        "operationId": "GuestAgents_ListByVirtualMachines",
        "summary": "Implements GET GuestAgent in a vm.",
        "description": "Returns the list of GuestAgent of the given vm.",
        "x-ms-examples": {
          "GuestAgentListByVirtualMachines": {
            "$ref": "./examples/GuestAgent_ListByVirtualMachines.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "path",
            "name": "virtualMachineName",
            "required": true,
            "type": "string",
            "description": "Name of the vm."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GuestAgentList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "virtualmachinesProperties": {
      "type": "object",
      "x-ms-client-flatten": true,
      "properties": {
        "hardwareProfile": {
          "type": "object",
          "properties": {
            "vmSize": {
              "type": "string"
            },
            "processors": {
              "type": "integer",
              "format": "int32",
              "description": "number of processors for the virtual machine"
            },
            "memoryGB": {
              "type": "integer",
              "format": "int32",
              "description": "RAM in gb for the virtual machine"
            },
            "dynamicMemoryConfig": {
              "type": "object",
              "properties": {
                "maximumMemoryGB": {
                  "type": "integer",
                  "format": "int64"
                },
                "minimumMemoryGB": {
                  "type": "integer",
                  "format": "int64"
                },
                "targetMemoryBuffer": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "description": "HardwareProfile - Specifies the hardware settings for the virtual machine."
        },
        "networkProfile": {
          "type": "object",
          "properties": {
            "networkInterfaces": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "ID - Resource Id"
                  }
                }
              },
              "description": "NetworkInterfaces - list of network interfaces to be attached to the virtual machine"
            }
          },
          "description": "NetworkProfile - describes the network configuration the virtual machine"
        },
        "osProfile": {
          "type": "object",
          "properties": {
            "adminPassword": {
              "type": "string",
              "x-ms-secret": true,
              "description": "AdminPassword - admin password"
            },
            "adminUsername": {
              "type": "string",
              "description": "AdminUsername - admin username"
            },
            "computerName": {
              "type": "string",
              "description": "ComputerName - name of the compute"
            },
            "linuxConfiguration": {
              "type": "object",
              "properties": {
                "disablePasswordAuthentication": {
                  "type": "boolean",
                  "description": "DisablePasswordAuthentication - whether password authentication should be disabled"
                },
                "ssh": {
                  "type": "object",
                  "properties": {
                    "publicKeys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "keyData": {
                            "type": "string",
                            "description": "KeyData - SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Li      nux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)."
                          },
                          "path": {
                            "type": "string",
                            "description": "Path - Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys"
                          }
                        }
                      },
                      "description": "PublicKeys - The list of SSH public keys used to authenticate with linux based VMs."
                    }
                  },
                  "description": "SSH - contains settings related to ssh configuration"
                },
                "provisionVMAgent": {
                  "type": "boolean",
                  "description": "Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine creation process."
                }
              },
              "description": "LinuxConfiguration - linux specific configuration values for the virtual machine"
            },
            "osType": {
              "type": "string",
              "description": "OsType - string specifying whether the OS is Linux or Windows"
            },
            "windowsConfiguration": {
              "type": "object",
              "properties": {
                "enableAutomaticUpdates": {
                  "type": "boolean",
                  "description": "Whether to EnableAutomaticUpdates on the machine"
                },
                "ssh": {
                  "type": "object",
                  "properties": {
                    "publicKeys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "keyData": {
                            "type": "string",
                            "x-ms-secret": true,
                            "description": "KeyData - SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Li      nux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)."
                          },
                          "path": {
                            "type": "string",
                            "description": "Path - Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys"
                          }
                        }
                      },
                      "description": "PublicKeys - The list of SSH public keys used to authenticate with linux based VMs."
                    }
                  },
                  "description": "AdditionalUnattendContent AdditionalUnattendContent *[]AdditionalUnattendContent `json:\"additionalUnattendContent,omitempty\"` SSH"
                },
                "timeZone": {
                  "type": "string",
                  "description": "TimeZone for the virtual machine"
                },
                "provisionVMAgent": {
                  "type": "boolean",
                  "description": "Used to indicate whether Arc for Servers agent onboarding should be triggered during the virtual machine creation process."
                }
              },
              "description": "Windows Configuration for the virtual machine "
            }
          },
          "description": "OsProfile - describes the configuration of the operating system and sets login data"
        },
        "resourceName": {
          "type": "string",
          "description": "name of the object to be used in moc"
        },
        "securityProfile": {
          "type": "object",
          "properties": {
            "enableTPM": {
              "type": "boolean"
            }
          },
          "description": "SecurityProfile - Specifies the security settings for the virtual machine."
        },
        "storageProfile": {
          "type": "object",
          "properties": {
            "dataDisks": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              },
              "description": "adds data disks to the virtual machine"
            },
            "imageReference": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name - Name of the image"
                }
              },
              "description": "Which Image to use for the virtual machine"
            }
          },
          "description": "StorageProfile - contains information about the disks and storage information for the virtual machine"
        },
        "provisioningState": {
          "type": "string"
        },
        "status": {
          "type": "object",
          "description": "MOCVirtualMachineStatus defines the observed state of MOCVirtualMachine"
        },
        "guestAgentProfile": {
          "description": "Guest agent status properties.",
          "$ref": "#/definitions/GuestAgentProfile"
        },
        "vmId": {
          "description": "Unique identifier for the vm resource.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "MOCVirtualMachineSpec defines the desired state of MOCVirtualMachine"
    },
    "virtualmachines": {
      "type": "object",
      "x-ms-client-flatten": true,
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/virtualmachinesProperties"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Type"
        },
        "location": {
          "type": "string",
          "description": "The resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "extendedLocation": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "description": "The extended location name."
            }
          }
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "The identity of the resource."
        }
      },
      "required": [
        "location"
      ],
      "description": "The virtualmachines resource definition."
    },
    "hardwareProfileUpdate": {
      "type": "object",
      "properties": {
        "vmSize": {
          "type": "string"
        },
        "processors": {
          "type": "integer",
          "format": "int32",
          "description": "number of processors for the virtual machine"
        },
        "memoryGB": {
          "type": "integer",
          "format": "int32",
          "description": "RAM in gb for the virtual machine"
        }
      },
      "description": "HardwareProfile - Specifies the hardware settings for the virtual machine."
    },
    "networkProfileUpdate": {
      "type": "object",
      "properties": {
        "networkInterfaces": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID - Resource Id"
              }
            }
          },
          "description": "NetworkInterfaces - list of network interfaces to be attached to the virtual machine"
        }
      },
      "description": "NetworkProfile - describes the network update configuration the virtual machine"
    },
    "storageProfileUpdate": {
      "type": "object",
      "properties": {
        "dataDisks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "description": "adds data disks to the virtual machine for the update call"
        }
      }
    },
    "virtualMachineUpdateProperties": {
      "description": "Defines the resource properties for the update.",
      "type": "object",
      "properties": {
        "hardwareProfile": {
          "$ref": "#/definitions/hardwareProfileUpdate"
        },
        "storageProfile": {
          "$ref": "#/definitions/storageProfileUpdate"
        },
        "networkProfile": {
          "$ref": "#/definitions/networkProfileUpdate"
        }
      }
    },
    "virtualmachinesPatch": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/virtualMachineUpdateProperties"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "The virtualmachines resource patch definition."
    },
    "virtualmachinesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/virtualmachines"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "GuestAgentProfile": {
      "description": "Defines the resource properties.",
      "type": "object",
      "properties": {
        "vmUuid": {
          "readOnly": true,
          "type": "string",
          "description": "Specifies the VM's unique SMBIOS ID."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "The status of the hybrid machine agent.",
          "enum": [
            "Connected",
            "Disconnected",
            "Error"
          ],
          "x-ms-enum": {
            "name": "StatusTypes",
            "modelAsString": true
          }
        },
        "lastStatusChange": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The time of the last status change."
        },
        "agentVersion": {
          "readOnly": true,
          "type": "string",
          "description": "The hybrid machine agent full version."
        },
        "errorDetails": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorDetail"
          },
          "description": "Details about the error state."
        }
      }
    },
    "HybridIdentityMetadataList": {
      "description": "List of HybridIdentityMetadata.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of HybridIdentityMetadata.",
          "type": "string"
        },
        "value": {
          "description": "Array of HybridIdentityMetadata",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HybridIdentityMetadata"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "HybridIdentityMetadata": {
      "description": "Defines the HybridIdentityMetadata.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource",
          "description": "The resource model definition for an Azure Resource Manager proxy resource. It will have everything other than required location and tags."
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/HybridIdentityMetadataProperties"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "The system data."
        }
      },
      "x-ms-azure-resource": true
    },
    "HybridIdentityMetadataProperties": {
      "description": "Defines the resource properties.",
      "type": "object",
      "properties": {
        "vmId": {
          "description": "Gets or sets the Vm Id.",
          "type": "string"
        },
        "publicKey": {
          "description": "Gets or sets the Public Key.",
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "The identity of the resource.",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Gets or sets the provisioning state.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Identity": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal id of managed service identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant of managed service identity."
        },
        "type": {
          "type": "string",
          "description": "The type of managed service identity.",
          "enum": [
            "None",
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "IdentityType",
            "modelAsString": true
          }
        }
      },
      "description": "Managed service identity."
    },
    "ResourcePatch": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Object containing updates for patch operations."
    },
    "MachineExtension": {
      "x-ms-azure-resource": true,
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MachineExtensionProperties",
          "description": "Describes Machine Extension Properties."
        },
        "location": {
          "description": "Gets or sets the location.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "The system data."
        },
        "tags": {
          "description": "Gets or sets the Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "Gets or sets the Id.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Gets or sets the type of the resource.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Describes a Machine Extension."
    },
    "MachineExtensionUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MachineExtensionUpdateProperties",
          "description": "Describes Machine Extension Update Properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourcePatch"
        }
      ],
      "description": "Describes a Machine Extension Update."
    },
    "MachineExtensionProperties": {
      "type": "object",
      "properties": {
        "forceUpdateTag": {
          "type": "string",
          "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
        },
        "publisher": {
          "type": "string",
          "description": "The name of the extension handler publisher."
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Specifies the version of the script handler."
        },
        "autoUpgradeMinorVersion": {
          "type": "boolean",
          "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
        },
        "settings": {
          "type": "object",
          "description": "Json formatted public settings for the extension."
        },
        "protectedSettings": {
          "type": "object",
          "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.",
          "x-ms-secret": true
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state, which only appears in the response."
        },
        "instanceView": {
          "allOf": [
            {
              "$ref": "#/definitions/MachineExtensionInstanceView"
            }
          ],
          "description": "The machine extension instance view."
        }
      },
      "description": "Describes the properties of a Machine Extension."
    },
    "MachineExtensionUpdateProperties": {
      "type": "object",
      "properties": {
        "forceUpdateTag": {
          "type": "string",
          "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
        },
        "publisher": {
          "type": "string",
          "description": "The name of the extension handler publisher."
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Specifies the version of the script handler."
        },
        "autoUpgradeMinorVersion": {
          "type": "boolean",
          "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
        },
        "settings": {
          "type": "object",
          "description": "Json formatted public settings for the extension."
        },
        "protectedSettings": {
          "type": "object",
          "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.",
          "x-ms-secret": true
        }
      },
      "description": "Describes the properties of a Machine Extension."
    },
    "MachineExtensionInstanceView": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The machine extension name."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
        },
        "typeHandlerVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Specifies the version of the script handler."
        },
        "status": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "readOnly": true,
              "description": "The status code."
            },
            "level": {
              "type": "string",
              "readOnly": true,
              "description": "The level code.",
              "enum": [
                "Info",
                "Warning",
                "Error"
              ],
              "x-ms-enum": {
                "name": "StatusLevelTypes",
                "modelAsString": true
              }
            },
            "displayStatus": {
              "type": "string",
              "readOnly": true,
              "description": "The short localizable label for the status."
            },
            "message": {
              "type": "string",
              "readOnly": true,
              "description": "The detailed status message, including for alerts and error messages."
            },
            "time": {
              "type": "string",
              "readOnly": true,
              "format": "date-time",
              "description": "The time of the status."
            }
          },
          "description": "Instance view status."
        }
      },
      "description": "Describes the Machine Extension Instance View."
    },
    "MachineExtensionsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MachineExtension"
          },
          "description": "The list of extensions"
        },
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of machine extensions. Call ListNext() with this to fetch the next page of extensions."
        }
      },
      "description": "Describes the Machine Extensions List Result."
    },
    "GuestAgentList": {
      "type": "object",
      "description": "List of GuestAgent.",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of GuestAgent.",
          "type": "string"
        },
        "value": {
          "description": "Array of GuestAgent",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GuestAgent"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "GuestAgent": {
      "description": "Defines the GuestAgent.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource",
          "description": "The resource model definition for an Azure Resource Manager proxy resource. It will have everything other than required location and tags."
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/GuestAgentProperties"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "The system data."
        }
      },
      "x-ms-azure-resource": true
    },
    "ProvisioningAction": {
      "description": "Defines the different types of operations for guest agent.",
      "enum": [
        "install",
        "uninstall",
        "repair"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "ProvisioningAction"
      }
    },
    "GuestCredential": {
      "description": "Username / Password Credentials to connect to guest.",
      "type": "object",
      "properties": {
        "username": {
          "description": "Gets or sets username to connect with the guest.",
          "type": "string"
        },
        "password": {
          "description": "Gets or sets the password to connect with the guest.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      }
    },
    "GuestAgentProperties": {
      "description": "Defines the resource properties.",
      "type": "object",
      "properties": {
        "credentials": {
          "description": "Username / Password Credentials to provision guest agent.",
          "$ref": "#/definitions/GuestCredential"
        },
        "httpProxyConfig": {
          "description": "HTTP Proxy configuration for the VM.",
          "$ref": "#/definitions/HttpProxyConfiguration"
        },
        "provisioningAction": {
          "description": "Gets or sets the guest agent provisioning action.",
          "$ref": "#/definitions/ProvisioningAction",
          "type": "string"
        },
        "status": {
          "description": "Gets or sets the guest agent status.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Gets or sets the provisioning state.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HttpProxyConfiguration": {
      "description": "HTTP Proxy configuration for the VM.",
      "type": "object",
      "properties": {
        "httpsProxy": {
          "description": "Gets or sets httpsProxy url.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "virtualmachinesNameParameter": {
      "name": "virtualmachinesName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "maxLength": 64,
      "minLength": 3
    }
  }
}
