# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.3, generator: @autorest/python@6.13.19)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, Dict, List, Literal, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class Resource(_serialization.Model):
    """Common fields that are returned in the response for all Azure Resource Manager resources.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure_stack_hci_client.models.SystemData
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.id = None
        self.name = None
        self.type = None
        self.system_data = None


class ProxyResource(Resource):
    """The resource model definition for a Azure Resource Manager proxy resource. It will not have
    tags and a location.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure_stack_hci_client.models.SystemData
    """


class AttestationStatus(ProxyResource):
    """The attestation status of the virtual machine.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure_stack_hci_client.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure_stack_hci_client.models.AttestationStatusProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "AttestationStatusProperties"},
    }

    def __init__(self, *, properties: Optional["_models.AttestationStatusProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure_stack_hci_client.models.AttestationStatusProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class AttestationStatusProperties(_serialization.Model):
    """Defines the attestation status properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar attest_secure_boot_enabled: The status of whether secure boot is enabled. Known values
     are: "Enabled", "Disabled", and "Unknown".
    :vartype attest_secure_boot_enabled: str or
     ~azure_stack_hci_client.models.AttestSecureBootPropertyEnum
    :ivar attestation_cert_validated: The status of whether attestation certificate is validated.
     Known values are: "Valid", "Invalid", and "Unknown".
    :vartype attestation_cert_validated: str or
     ~azure_stack_hci_client.models.AttestCertPropertyEnum
    :ivar boot_integrity_validated: The status of whether the list of boot integrity properties is
     validated. Known values are: "Valid", "Invalid", and "Unknown".
    :vartype boot_integrity_validated: str or
     ~azure_stack_hci_client.models.AttestBootIntegrityPropertyEnum
    :ivar linux_kernel_version: kernel version string for Linux VM.
    :vartype linux_kernel_version: str
    :ivar health_status: The health status of attestation validation and parsing. Known values are:
     "Pending", "Healthy", "Unhealthy", and "Unknown".
    :vartype health_status: str or ~azure_stack_hci_client.models.AttestHealthStatusEnum
    :ivar timestamp: The time stamp of the last time attestation token is validated by relying
     party service.
    :vartype timestamp: str
    :ivar error_message: The error message of attestation validation and parsing.
    :vartype error_message: str
    :ivar provisioning_state: Provisioning state of the virtual machine instance. Known values are:
     "Succeeded", "Failed", "InProgress", "Accepted", "Deleting", and "Canceled".
    :vartype provisioning_state: str or ~azure_stack_hci_client.models.ProvisioningStateEnum
    :ivar attest_hardware_platform: The hardware platform information from attestation token. This
     only applies to Confidential VM. Known values are: "SEVSNP" and "Unknown".
    :vartype attest_hardware_platform: str or ~azure_stack_hci_client.models.AttestHWPlatformEnum
    :ivar attest_disk_security_encryption_type: The managed disk security encryption type from
     attestation token. This only applies to Confidential VM. Known values are: "NonPersistedTPM"
     and "Unknown".
    :vartype attest_disk_security_encryption_type: str or
     ~azure_stack_hci_client.models.AttestDiskSecurityEncryptionTypeEnum
    """

    _validation = {
        "attest_secure_boot_enabled": {"readonly": True},
        "attestation_cert_validated": {"readonly": True},
        "boot_integrity_validated": {"readonly": True},
        "linux_kernel_version": {"readonly": True},
        "health_status": {"readonly": True},
        "timestamp": {"readonly": True},
        "error_message": {"readonly": True},
        "provisioning_state": {"readonly": True},
        "attest_hardware_platform": {"readonly": True},
        "attest_disk_security_encryption_type": {"readonly": True},
    }

    _attribute_map = {
        "attest_secure_boot_enabled": {"key": "attestSecureBootEnabled", "type": "str"},
        "attestation_cert_validated": {"key": "attestationCertValidated", "type": "str"},
        "boot_integrity_validated": {"key": "bootIntegrityValidated", "type": "str"},
        "linux_kernel_version": {"key": "linuxKernelVersion", "type": "str"},
        "health_status": {"key": "healthStatus", "type": "str"},
        "timestamp": {"key": "timestamp", "type": "str"},
        "error_message": {"key": "errorMessage", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "attest_hardware_platform": {"key": "attestHardwarePlatform", "type": "str"},
        "attest_disk_security_encryption_type": {"key": "attestDiskSecurityEncryptionType", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.attest_secure_boot_enabled = None
        self.attestation_cert_validated = None
        self.boot_integrity_validated = None
        self.linux_kernel_version = None
        self.health_status = None
        self.timestamp = None
        self.error_message = None
        self.provisioning_state = None
        self.attest_hardware_platform = None
        self.attest_disk_security_encryption_type = None


class ErrorAdditionalInfo(_serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: JSON
    """

    _validation = {
        "type": {"readonly": True},
        "info": {"readonly": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "info": {"key": "info", "type": "object"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(_serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure_stack_hci_client.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure_stack_hci_client.models.ErrorAdditionalInfo]
    """

    _validation = {
        "code": {"readonly": True},
        "message": {"readonly": True},
        "target": {"readonly": True},
        "details": {"readonly": True},
        "additional_info": {"readonly": True},
    }

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "target": {"key": "target", "type": "str"},
        "details": {"key": "details", "type": "[ErrorDetail]"},
        "additional_info": {"key": "additionalInfo", "type": "[ErrorAdditionalInfo]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(_serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed
    operations. (This also follows the OData error response format.).

    :ivar error: The error object.
    :vartype error: ~azure_stack_hci_client.models.ErrorDetail
    """

    _attribute_map = {
        "error": {"key": "error", "type": "ErrorDetail"},
    }

    def __init__(self, *, error: Optional["_models.ErrorDetail"] = None, **kwargs: Any) -> None:
        """
        :keyword error: The error object.
        :paramtype error: ~azure_stack_hci_client.models.ErrorDetail
        """
        super().__init__(**kwargs)
        self.error = error


class ExtendedLocation(_serialization.Model):
    """The complex type of the extended location.

    :ivar name: The name of the extended location.
    :vartype name: str
    :ivar type: The type of the extended location. "CustomLocation"
    :vartype type: str or ~azure_stack_hci_client.models.ExtendedLocationTypes
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        type: Optional[Union[str, "_models.ExtendedLocationTypes"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: The name of the extended location.
        :paramtype name: str
        :keyword type: The type of the extended location. "CustomLocation"
        :paramtype type: str or ~azure_stack_hci_client.models.ExtendedLocationTypes
        """
        super().__init__(**kwargs)
        self.name = name
        self.type = type


class GalleryDiskImage(_serialization.Model):
    """This is the disk image base class.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar size_in_mb: This property indicates the size of the VHD to be created.
    :vartype size_in_mb: int
    """

    _validation = {
        "size_in_mb": {"readonly": True},
    }

    _attribute_map = {
        "size_in_mb": {"key": "sizeInMB", "type": "int"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.size_in_mb = None


class TrackedResource(Resource):
    """The resource model definition for an Azure Resource Manager tracked top level resource which
    has 'tags' and a 'location'.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure_stack_hci_client.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
    }

    def __init__(self, *, location: str, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        """
        super().__init__(**kwargs)
        self.tags = tags
        self.location = location


class GalleryImage(TrackedResource):
    """The gallery images resource definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure_stack_hci_client.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure_stack_hci_client.models.GalleryImageProperties
    :ivar extended_location: The extendedLocation of the resource.
    :vartype extended_location: ~azure_stack_hci_client.models.ExtendedLocation
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "GalleryImageProperties"},
        "extended_location": {"key": "extendedLocation", "type": "ExtendedLocation"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.GalleryImageProperties"] = None,
        extended_location: Optional["_models.ExtendedLocation"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure_stack_hci_client.models.GalleryImageProperties
        :keyword extended_location: The extendedLocation of the resource.
        :paramtype extended_location: ~azure_stack_hci_client.models.ExtendedLocation
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties
        self.extended_location = extended_location


class GalleryImageIdentifier(_serialization.Model):
    """This is the gallery image definition identifier.

    All required parameters must be populated in order to send to server.

    :ivar publisher: The name of the gallery image definition publisher. Required.
    :vartype publisher: str
    :ivar offer: The name of the gallery image definition offer. Required.
    :vartype offer: str
    :ivar sku: The name of the gallery image definition SKU. Required.
    :vartype sku: str
    """

    _validation = {
        "publisher": {"required": True},
        "offer": {"required": True},
        "sku": {"required": True},
    }

    _attribute_map = {
        "publisher": {"key": "publisher", "type": "str"},
        "offer": {"key": "offer", "type": "str"},
        "sku": {"key": "sku", "type": "str"},
    }

    def __init__(self, *, publisher: str, offer: str, sku: str, **kwargs: Any) -> None:
        """
        :keyword publisher: The name of the gallery image definition publisher. Required.
        :paramtype publisher: str
        :keyword offer: The name of the gallery image definition offer. Required.
        :paramtype offer: str
        :keyword sku: The name of the gallery image definition SKU. Required.
        :paramtype sku: str
        """
        super().__init__(**kwargs)
        self.publisher = publisher
        self.offer = offer
        self.sku = sku


class GalleryImageListResult(_serialization.Model):
    """The response of a GalleryImage list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The GalleryImage items on this page. Required.
    :vartype value: list[~azure_stack_hci_client.models.GalleryImage]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[GalleryImage]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.GalleryImage"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The GalleryImage items on this page. Required.
        :paramtype value: list[~azure_stack_hci_client.models.GalleryImage]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class GalleryImageProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Properties under the gallery image resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar container_id: Storage ContainerID of the storage container to be used for gallery image.
    :vartype container_id: str
    :ivar image_path: location of the image the gallery image should be created from.
    :vartype image_path: str
    :ivar os_type: Operating system type that the gallery image uses [Windows, Linux]. Required.
     Known values are: "Windows" and "Linux".
    :vartype os_type: str or ~azure_stack_hci_client.models.OperatingSystemTypes
    :ivar cloud_init_data_source: Datasource for the gallery image when provisioning with
     cloud-init [NoCloud, Azure]. Known values are: "NoCloud" and "Azure".
    :vartype cloud_init_data_source: str or ~azure_stack_hci_client.models.CloudInitDataSource
    :ivar hyper_v_generation: The hypervisor generation of the Virtual Machine [V1, V2]. Known
     values are: "V1" and "V2".
    :vartype hyper_v_generation: str or ~azure_stack_hci_client.models.HyperVGeneration
    :ivar vm_image_repository_credentials: The credentials used to login to the image repository
     that has access to the specified image.
    :vartype vm_image_repository_credentials:
     ~azure_stack_hci_client.models.VmImageRepositoryCredentials
    :ivar identifier: This is the gallery image definition identifier.
    :vartype identifier: ~azure_stack_hci_client.models.GalleryImageIdentifier
    :ivar version: Specifies information about the gallery image version that you want to create or
     update.
    :vartype version: ~azure_stack_hci_client.models.GalleryImageVersion
    :ivar provisioning_state: Provisioning state of the gallery image. Known values are:
     "Succeeded", "Failed", "InProgress", "Accepted", "Deleting", and "Canceled".
    :vartype provisioning_state: str or ~azure_stack_hci_client.models.ProvisioningStateEnum
    :ivar status: The observed state of gallery images.
    :vartype status: ~azure_stack_hci_client.models.GalleryImageStatus
    :ivar source_virtual_machine_id: Resource ID of the source virtual machine from whose OS disk
     the gallery image is created.
    :vartype source_virtual_machine_id: str
    """

    _validation = {
        "os_type": {"required": True},
        "provisioning_state": {"readonly": True},
        "status": {"readonly": True},
    }

    _attribute_map = {
        "container_id": {"key": "containerId", "type": "str"},
        "image_path": {"key": "imagePath", "type": "str"},
        "os_type": {"key": "osType", "type": "str"},
        "cloud_init_data_source": {"key": "cloudInitDataSource", "type": "str"},
        "hyper_v_generation": {"key": "hyperVGeneration", "type": "str"},
        "vm_image_repository_credentials": {
            "key": "vmImageRepositoryCredentials",
            "type": "VmImageRepositoryCredentials",
        },
        "identifier": {"key": "identifier", "type": "GalleryImageIdentifier"},
        "version": {"key": "version", "type": "GalleryImageVersion"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "status": {"key": "status", "type": "GalleryImageStatus"},
        "source_virtual_machine_id": {"key": "sourceVirtualMachineId", "type": "str"},
    }

    def __init__(
        self,
        *,
        os_type: Union[str, "_models.OperatingSystemTypes"],
        container_id: Optional[str] = None,
        image_path: Optional[str] = None,
        cloud_init_data_source: Optional[Union[str, "_models.CloudInitDataSource"]] = None,
        hyper_v_generation: Optional[Union[str, "_models.HyperVGeneration"]] = None,
        vm_image_repository_credentials: Optional["_models.VmImageRepositoryCredentials"] = None,
        identifier: Optional["_models.GalleryImageIdentifier"] = None,
        version: Optional["_models.GalleryImageVersion"] = None,
        source_virtual_machine_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword container_id: Storage ContainerID of the storage container to be used for gallery
         image.
        :paramtype container_id: str
        :keyword image_path: location of the image the gallery image should be created from.
        :paramtype image_path: str
        :keyword os_type: Operating system type that the gallery image uses [Windows, Linux]. Required.
         Known values are: "Windows" and "Linux".
        :paramtype os_type: str or ~azure_stack_hci_client.models.OperatingSystemTypes
        :keyword cloud_init_data_source: Datasource for the gallery image when provisioning with
         cloud-init [NoCloud, Azure]. Known values are: "NoCloud" and "Azure".
        :paramtype cloud_init_data_source: str or ~azure_stack_hci_client.models.CloudInitDataSource
        :keyword hyper_v_generation: The hypervisor generation of the Virtual Machine [V1, V2]. Known
         values are: "V1" and "V2".
        :paramtype hyper_v_generation: str or ~azure_stack_hci_client.models.HyperVGeneration
        :keyword vm_image_repository_credentials: The credentials used to login to the image repository
         that has access to the specified image.
        :paramtype vm_image_repository_credentials:
         ~azure_stack_hci_client.models.VmImageRepositoryCredentials
        :keyword identifier: This is the gallery image definition identifier.
        :paramtype identifier: ~azure_stack_hci_client.models.GalleryImageIdentifier
        :keyword version: Specifies information about the gallery image version that you want to create
         or update.
        :paramtype version: ~azure_stack_hci_client.models.GalleryImageVersion
        :keyword source_virtual_machine_id: Resource ID of the source virtual machine from whose OS
         disk the gallery image is created.
        :paramtype source_virtual_machine_id: str
        """
        super().__init__(**kwargs)
        self.container_id = container_id
        self.image_path = image_path
        self.os_type = os_type
        self.cloud_init_data_source = cloud_init_data_source
        self.hyper_v_generation = hyper_v_generation
        self.vm_image_repository_credentials = vm_image_repository_credentials
        self.identifier = identifier
        self.version = version
        self.provisioning_state = None
        self.status = None
        self.source_virtual_machine_id = source_virtual_machine_id


class GalleryImageStatus(_serialization.Model):
    """The observed state of gallery images.

    :ivar error_code: GalleryImage provisioning error code.
    :vartype error_code: str
    :ivar error_message: Descriptive error message.
    :vartype error_message: str
    :ivar provisioning_status: provisioning status of the gallery image.
    :vartype provisioning_status:
     ~azure_stack_hci_client.models.GalleryImageStatusProvisioningStatus
    :ivar download_status: The download status of the gallery image.
    :vartype download_status: ~azure_stack_hci_client.models.GalleryImageStatusDownloadStatus
    :ivar progress_percentage: The progress of the operation in percentage.
    :vartype progress_percentage: int
    """

    _attribute_map = {
        "error_code": {"key": "errorCode", "type": "str"},
        "error_message": {"key": "errorMessage", "type": "str"},
        "provisioning_status": {"key": "provisioningStatus", "type": "GalleryImageStatusProvisioningStatus"},
        "download_status": {"key": "downloadStatus", "type": "GalleryImageStatusDownloadStatus"},
        "progress_percentage": {"key": "progressPercentage", "type": "int"},
    }

    def __init__(
        self,
        *,
        error_code: Optional[str] = None,
        error_message: Optional[str] = None,
        provisioning_status: Optional["_models.GalleryImageStatusProvisioningStatus"] = None,
        download_status: Optional["_models.GalleryImageStatusDownloadStatus"] = None,
        progress_percentage: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword error_code: GalleryImage provisioning error code.
        :paramtype error_code: str
        :keyword error_message: Descriptive error message.
        :paramtype error_message: str
        :keyword provisioning_status: provisioning status of the gallery image.
        :paramtype provisioning_status:
         ~azure_stack_hci_client.models.GalleryImageStatusProvisioningStatus
        :keyword download_status: The download status of the gallery image.
        :paramtype download_status: ~azure_stack_hci_client.models.GalleryImageStatusDownloadStatus
        :keyword progress_percentage: The progress of the operation in percentage.
        :paramtype progress_percentage: int
        """
        super().__init__(**kwargs)
        self.error_code = error_code
        self.error_message = error_message
        self.provisioning_status = provisioning_status
        self.download_status = download_status
        self.progress_percentage = progress_percentage


class GalleryImageStatusDownloadStatus(_serialization.Model):
    """The download status of the gallery image.

    :ivar download_size_in_mb: The downloaded sized of the image in MB.
    :vartype download_size_in_mb: int
    """

    _attribute_map = {
        "download_size_in_mb": {"key": "downloadSizeInMB", "type": "int"},
    }

    def __init__(self, *, download_size_in_mb: Optional[int] = None, **kwargs: Any) -> None:
        """
        :keyword download_size_in_mb: The downloaded sized of the image in MB.
        :paramtype download_size_in_mb: int
        """
        super().__init__(**kwargs)
        self.download_size_in_mb = download_size_in_mb


class GalleryImageStatusProvisioningStatus(_serialization.Model):
    """The status of the operation performed on the gallery image.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar operation_id: The ID of the operation performed on the gallery image.
    :vartype operation_id: str
    :ivar status: The status of the operation performed on the gallery image [Succeeded, Failed,
     InProgress]. Known values are: "Succeeded", "Failed", and "InProgress".
    :vartype status: str or ~azure_stack_hci_client.models.Status
    """

    _validation = {
        "status": {"readonly": True},
    }

    _attribute_map = {
        "operation_id": {"key": "operationId", "type": "str"},
        "status": {"key": "status", "type": "str"},
    }

    def __init__(self, *, operation_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword operation_id: The ID of the operation performed on the gallery image.
        :paramtype operation_id: str
        """
        super().__init__(**kwargs)
        self.operation_id = operation_id
        self.status = None


class GalleryImagesUpdateRequest(_serialization.Model):
    """The gallery images resource patch definition.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(self, *, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.tags = tags


class GalleryImageTagsUpdate(_serialization.Model):
    """The type used for updating tags in GalleryImage resources.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(self, *, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.tags = tags


class GalleryImageVersion(_serialization.Model):
    """Specifies information about the gallery image version that you want to create or update.

    :ivar name: This is the version of the gallery image.
    :vartype name: str
    :ivar properties: Describes the properties of a gallery image version.
    :vartype properties: ~azure_stack_hci_client.models.GalleryImageVersionProperties
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "properties": {"key": "properties", "type": "GalleryImageVersionProperties"},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        properties: Optional["_models.GalleryImageVersionProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: This is the version of the gallery image.
        :paramtype name: str
        :keyword properties: Describes the properties of a gallery image version.
        :paramtype properties: ~azure_stack_hci_client.models.GalleryImageVersionProperties
        """
        super().__init__(**kwargs)
        self.name = name
        self.properties = properties


class GalleryImageVersionProperties(_serialization.Model):
    """Describes the properties of a gallery image version.

    All required parameters must be populated in order to send to server.

    :ivar storage_profile: This is the storage profile of a Gallery Image Version. Required.
    :vartype storage_profile: ~azure_stack_hci_client.models.GalleryImageVersionStorageProfile
    """

    _validation = {
        "storage_profile": {"required": True},
    }

    _attribute_map = {
        "storage_profile": {"key": "storageProfile", "type": "GalleryImageVersionStorageProfile"},
    }

    def __init__(self, *, storage_profile: "_models.GalleryImageVersionStorageProfile", **kwargs: Any) -> None:
        """
        :keyword storage_profile: This is the storage profile of a Gallery Image Version. Required.
        :paramtype storage_profile: ~azure_stack_hci_client.models.GalleryImageVersionStorageProfile
        """
        super().__init__(**kwargs)
        self.storage_profile = storage_profile


class GalleryImageVersionStorageProfile(_serialization.Model):
    """This is the storage profile of a Gallery Image Version.

    :ivar os_disk_image: This is the OS disk image.
    :vartype os_disk_image: ~azure_stack_hci_client.models.GalleryOSDiskImage
    """

    _attribute_map = {
        "os_disk_image": {"key": "osDiskImage", "type": "GalleryOSDiskImage"},
    }

    def __init__(self, *, os_disk_image: Optional["_models.GalleryOSDiskImage"] = None, **kwargs: Any) -> None:
        """
        :keyword os_disk_image: This is the OS disk image.
        :paramtype os_disk_image: ~azure_stack_hci_client.models.GalleryOSDiskImage
        """
        super().__init__(**kwargs)
        self.os_disk_image = os_disk_image


class GalleryOSDiskImage(_serialization.Model):
    """This is the OS disk image.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar size_in_mb: This property indicates the size of the VHD to be created.
    :vartype size_in_mb: int
    """

    _validation = {
        "size_in_mb": {"readonly": True},
    }

    _attribute_map = {
        "size_in_mb": {"key": "sizeInMB", "type": "int"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.size_in_mb = None


class GuestAgent(ProxyResource):
    """Defines the GuestAgent.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure_stack_hci_client.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure_stack_hci_client.models.GuestAgentProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "GuestAgentProperties"},
    }

    def __init__(self, *, properties: Optional["_models.GuestAgentProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure_stack_hci_client.models.GuestAgentProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class GuestAgentInstallStatus(_serialization.Model):
    """Defines the status of a guest agent installation.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar vm_uuid: Specifies the VM's unique SMBIOS ID.
    :vartype vm_uuid: str
    :ivar status: The installation status of the hybrid machine agent installation. Known values
     are: "Succeeded", "InProgress", and "Failed".
    :vartype status: str or ~azure_stack_hci_client.models.StatusTypes
    :ivar last_status_change: The time of the last status change.
    :vartype last_status_change: ~datetime.datetime
    :ivar agent_version: The hybrid machine agent full version.
    :vartype agent_version: str
    :ivar error_details: Details about the error state.
    :vartype error_details: list[~azure_stack_hci_client.models.ErrorDetail]
    """

    _validation = {
        "vm_uuid": {"readonly": True},
        "status": {"readonly": True},
        "last_status_change": {"readonly": True},
        "agent_version": {"readonly": True},
        "error_details": {"readonly": True},
    }

    _attribute_map = {
        "vm_uuid": {"key": "vmUuid", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "last_status_change": {"key": "lastStatusChange", "type": "iso-8601"},
        "agent_version": {"key": "agentVersion", "type": "str"},
        "error_details": {"key": "errorDetails", "type": "[ErrorDetail]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.vm_uuid = None
        self.status = None
        self.last_status_change = None
        self.agent_version = None
        self.error_details = None


class GuestAgentListResult(_serialization.Model):
    """The response of a GuestAgent list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The GuestAgent items on this page. Required.
    :vartype value: list[~azure_stack_hci_client.models.GuestAgent]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[GuestAgent]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.GuestAgent"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The GuestAgent items on this page. Required.
        :paramtype value: list[~azure_stack_hci_client.models.GuestAgent]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class GuestAgentProperties(_serialization.Model):
    """Defines the resource properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar credentials: Username / Password Credentials to provision guest agent.
    :vartype credentials: ~azure_stack_hci_client.models.GuestCredential
    :ivar provisioning_action: The guest agent provisioning action. Known values are: "install",
     "uninstall", and "repair".
    :vartype provisioning_action: str or ~azure_stack_hci_client.models.ProvisioningAction
    :ivar status: The guest agent status.
    :vartype status: str
    :ivar provisioning_state: Provisioning state of the virtual machine instance. Known values are:
     "Succeeded", "Failed", "InProgress", "Accepted", "Deleting", and "Canceled".
    :vartype provisioning_state: str or ~azure_stack_hci_client.models.ProvisioningStateEnum
    """

    _validation = {
        "status": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "credentials": {"key": "credentials", "type": "GuestCredential"},
        "provisioning_action": {"key": "provisioningAction", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        credentials: Optional["_models.GuestCredential"] = None,
        provisioning_action: Optional[Union[str, "_models.ProvisioningAction"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword credentials: Username / Password Credentials to provision guest agent.
        :paramtype credentials: ~azure_stack_hci_client.models.GuestCredential
        :keyword provisioning_action: The guest agent provisioning action. Known values are: "install",
         "uninstall", and "repair".
        :paramtype provisioning_action: str or ~azure_stack_hci_client.models.ProvisioningAction
        """
        super().__init__(**kwargs)
        self.credentials = credentials
        self.provisioning_action = provisioning_action
        self.status = None
        self.provisioning_state = None


class GuestCredential(_serialization.Model):
    """Username / Password Credentials to connect to guest.

    :ivar username: The username to connect with the guest.
    :vartype username: str
    :ivar password: The password to connect with the guest.
    :vartype password: str
    """

    _attribute_map = {
        "username": {"key": "username", "type": "str"},
        "password": {"key": "password", "type": "str"},
    }

    def __init__(self, *, username: Optional[str] = None, password: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword username: The username to connect with the guest.
        :paramtype username: str
        :keyword password: The password to connect with the guest.
        :paramtype password: str
        """
        super().__init__(**kwargs)
        self.username = username
        self.password = password


class HardwareProfileUpdate(_serialization.Model):
    """HardwareProfile - Specifies the hardware settings for the virtual machine instance.

    :ivar vm_size: VM Size Enum. Known values are: "Default", "Standard_A2_v2", "Standard_A4_v2",
     "Standard_D2s_v3", "Standard_D4s_v3", "Standard_D8s_v3", "Standard_D16s_v3",
     "Standard_D32s_v3", "Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_DS5_v2",
     "Standard_DS13_v2", "Standard_K8S_v1", "Standard_K8S2_v1", "Standard_K8S3_v1",
     "Standard_K8S4_v1", "Standard_NK6", "Standard_NK12", "Standard_NV6", "Standard_NV12",
     "Standard_K8S5_v1", and "Custom".
    :vartype vm_size: str or ~azure_stack_hci_client.models.VmSizeEnum
    :ivar processors: number of processors for the virtual machine instance.
    :vartype processors: int
    :ivar memory_mb: RAM in MB for the virtual machine instance.
    :vartype memory_mb: int
    :ivar virtual_machine_gp_us: virtualMachineGPUs - updated list of GPUs on the virtual machine
     instance.
    :vartype virtual_machine_gp_us:
     list[~azure_stack_hci_client.models.VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU]
    """

    _attribute_map = {
        "vm_size": {"key": "vmSize", "type": "str"},
        "processors": {"key": "processors", "type": "int"},
        "memory_mb": {"key": "memoryMB", "type": "int"},
        "virtual_machine_gp_us": {
            "key": "virtualMachineGPUs",
            "type": "[VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU]",
        },
    }

    def __init__(
        self,
        *,
        vm_size: Optional[Union[str, "_models.VmSizeEnum"]] = None,
        processors: Optional[int] = None,
        memory_mb: Optional[int] = None,
        virtual_machine_gp_us: Optional[
            List["_models.VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU"]
        ] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword vm_size: VM Size Enum. Known values are: "Default", "Standard_A2_v2",
         "Standard_A4_v2", "Standard_D2s_v3", "Standard_D4s_v3", "Standard_D8s_v3", "Standard_D16s_v3",
         "Standard_D32s_v3", "Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_DS5_v2",
         "Standard_DS13_v2", "Standard_K8S_v1", "Standard_K8S2_v1", "Standard_K8S3_v1",
         "Standard_K8S4_v1", "Standard_NK6", "Standard_NK12", "Standard_NV6", "Standard_NV12",
         "Standard_K8S5_v1", and "Custom".
        :paramtype vm_size: str or ~azure_stack_hci_client.models.VmSizeEnum
        :keyword processors: number of processors for the virtual machine instance.
        :paramtype processors: int
        :keyword memory_mb: RAM in MB for the virtual machine instance.
        :paramtype memory_mb: int
        :keyword virtual_machine_gp_us: virtualMachineGPUs - updated list of GPUs on the virtual
         machine instance.
        :paramtype virtual_machine_gp_us:
         list[~azure_stack_hci_client.models.VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU]
        """
        super().__init__(**kwargs)
        self.vm_size = vm_size
        self.processors = processors
        self.memory_mb = memory_mb
        self.virtual_machine_gp_us = virtual_machine_gp_us


class HttpProxyConfiguration(_serialization.Model):
    """HTTP Proxy configuration for the VM.

    :ivar http_proxy: The HTTP proxy server endpoint to use.
    :vartype http_proxy: str
    :ivar https_proxy: The HTTPS proxy server endpoint to use.
    :vartype https_proxy: str
    :ivar no_proxy: The endpoints that should not go through proxy.
    :vartype no_proxy: list[str]
    :ivar trusted_ca: Alternative CA cert to use for connecting to proxy servers.
    :vartype trusted_ca: str
    """

    _attribute_map = {
        "http_proxy": {"key": "httpProxy", "type": "str"},
        "https_proxy": {"key": "httpsProxy", "type": "str"},
        "no_proxy": {"key": "noProxy", "type": "[str]"},
        "trusted_ca": {"key": "trustedCa", "type": "str"},
    }

    def __init__(
        self,
        *,
        http_proxy: Optional[str] = None,
        https_proxy: Optional[str] = None,
        no_proxy: Optional[List[str]] = None,
        trusted_ca: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword http_proxy: The HTTP proxy server endpoint to use.
        :paramtype http_proxy: str
        :keyword https_proxy: The HTTPS proxy server endpoint to use.
        :paramtype https_proxy: str
        :keyword no_proxy: The endpoints that should not go through proxy.
        :paramtype no_proxy: list[str]
        :keyword trusted_ca: Alternative CA cert to use for connecting to proxy servers.
        :paramtype trusted_ca: str
        """
        super().__init__(**kwargs)
        self.http_proxy = http_proxy
        self.https_proxy = https_proxy
        self.no_proxy = no_proxy
        self.trusted_ca = trusted_ca


class HybridIdentityMetadata(ProxyResource):
    """Defines the HybridIdentityMetadata.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure_stack_hci_client.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure_stack_hci_client.models.HybridIdentityMetadataProperties
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "HybridIdentityMetadataProperties"},
    }

    def __init__(
        self, *, properties: Optional["_models.HybridIdentityMetadataProperties"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure_stack_hci_client.models.HybridIdentityMetadataProperties
        """
        super().__init__(**kwargs)
        self.properties = properties


class HybridIdentityMetadataListResult(_serialization.Model):
    """The response of a HybridIdentityMetadata list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The HybridIdentityMetadata items on this page. Required.
    :vartype value: list[~azure_stack_hci_client.models.HybridIdentityMetadata]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[HybridIdentityMetadata]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.HybridIdentityMetadata"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The HybridIdentityMetadata items on this page. Required.
        :paramtype value: list[~azure_stack_hci_client.models.HybridIdentityMetadata]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class HybridIdentityMetadataProperties(_serialization.Model):
    """Defines the resource properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar resource_uid: The unique identifier for the resource.
    :vartype resource_uid: str
    :ivar public_key: The Public Key.
    :vartype public_key: str
    :ivar identity: Identity for the resource.
    :vartype identity: ~azure_stack_hci_client.models.Identity
    :ivar provisioning_state: Provisioning state of the virtual machine instance. Known values are:
     "Succeeded", "Failed", "InProgress", "Accepted", "Deleting", and "Canceled".
    :vartype provisioning_state: str or ~azure_stack_hci_client.models.ProvisioningStateEnum
    """

    _validation = {
        "identity": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "resource_uid": {"key": "resourceUid", "type": "str"},
        "public_key": {"key": "publicKey", "type": "str"},
        "identity": {"key": "identity", "type": "Identity"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(self, *, resource_uid: Optional[str] = None, public_key: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword resource_uid: The unique identifier for the resource.
        :paramtype resource_uid: str
        :keyword public_key: The Public Key.
        :paramtype public_key: str
        """
        super().__init__(**kwargs)
        self.resource_uid = resource_uid
        self.public_key = public_key
        self.identity = None
        self.provisioning_state = None


class Identity(_serialization.Model):
    """Identity for the resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar principal_id: The principal ID of resource identity. The value must be an UUID.
    :vartype principal_id: str
    :ivar tenant_id: The tenant ID of resource. The value must be an UUID.
    :vartype tenant_id: str
    :ivar type: The identity type. Default value is "SystemAssigned".
    :vartype type: str
    """

    _validation = {
        "principal_id": {"readonly": True},
        "tenant_id": {"readonly": True},
    }

    _attribute_map = {
        "principal_id": {"key": "principalId", "type": "str"},
        "tenant_id": {"key": "tenantId", "type": "str"},
        "type": {"key": "type", "type": "str"},
    }

    def __init__(self, *, type: Optional[Literal["SystemAssigned"]] = None, **kwargs: Any) -> None:
        """
        :keyword type: The identity type. Default value is "SystemAssigned".
        :paramtype type: str
        """
        super().__init__(**kwargs)
        self.principal_id = None
        self.tenant_id = None
        self.type = type


class ImageArmReference(_serialization.Model):
    """The ARM ID for a Gallery Image.

    :ivar id: The ARM ID for an image resource used by the virtual machine instance.
    :vartype id: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
    }

    def __init__(self, *, id: Optional[str] = None, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: The ARM ID for an image resource used by the virtual machine instance.
        :paramtype id: str
        """
        super().__init__(**kwargs)
        self.id = id


class InstanceViewStatus(_serialization.Model):
    """Instance view status.

    :ivar code: The status code.
    :vartype code: str
    :ivar level: The level code. Known values are: "Info", "Warning", and "Error".
    :vartype level: str or ~azure_stack_hci_client.models.StatusLevelTypes
    :ivar display_status: The short localizable label for the status.
    :vartype display_status: str
    :ivar message: The detailed status message, including for alerts and error messages.
    :vartype message: str
    :ivar time: The time of the status.
    :vartype time: ~datetime.datetime
    """

    _attribute_map = {
        "code": {"key": "code", "type": "str"},
        "level": {"key": "level", "type": "str"},
        "display_status": {"key": "displayStatus", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "time": {"key": "time", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        code: Optional[str] = None,
        level: Optional[Union[str, "_models.StatusLevelTypes"]] = None,
        display_status: Optional[str] = None,
        message: Optional[str] = None,
        time: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword code: The status code.
        :paramtype code: str
        :keyword level: The level code. Known values are: "Info", "Warning", and "Error".
        :paramtype level: str or ~azure_stack_hci_client.models.StatusLevelTypes
        :keyword display_status: The short localizable label for the status.
        :paramtype display_status: str
        :keyword message: The detailed status message, including for alerts and error messages.
        :paramtype message: str
        :keyword time: The time of the status.
        :paramtype time: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.code = code
        self.level = level
        self.display_status = display_status
        self.message = message
        self.time = time


class InterfaceDNSSettings(_serialization.Model):
    """DNS Settings of the interface.

    :ivar dns_servers: List of DNS server IP Addresses for the interface.
    :vartype dns_servers: list[str]
    """

    _attribute_map = {
        "dns_servers": {"key": "dnsServers", "type": "[str]"},
    }

    def __init__(self, *, dns_servers: Optional[List[str]] = None, **kwargs: Any) -> None:
        """
        :keyword dns_servers: List of DNS server IP Addresses for the interface.
        :paramtype dns_servers: list[str]
        """
        super().__init__(**kwargs)
        self.dns_servers = dns_servers


class IPConfiguration(_serialization.Model):
    """InterfaceIPConfiguration IPConfiguration in a network interface.

    :ivar name: Name - The name of the resource that is unique within a resource group. This name
     can be used to access the resource.
    :vartype name: str
    :ivar properties: InterfaceIPConfigurationPropertiesFormat properties of IP configuration.
    :vartype properties: ~azure_stack_hci_client.models.IPConfigurationProperties
    """

    _validation = {
        "name": {"pattern": r"^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,78}[_a-zA-Z0-9]$"},
    }

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "properties": {"key": "properties", "type": "IPConfigurationProperties"},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        properties: Optional["_models.IPConfigurationProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: Name - The name of the resource that is unique within a resource group. This
         name can be used to access the resource.
        :paramtype name: str
        :keyword properties: InterfaceIPConfigurationPropertiesFormat properties of IP configuration.
        :paramtype properties: ~azure_stack_hci_client.models.IPConfigurationProperties
        """
        super().__init__(**kwargs)
        self.name = name
        self.properties = properties


class IPConfigurationProperties(_serialization.Model):
    """InterfaceIPConfigurationPropertiesFormat properties of IP configuration.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar gateway: Gateway for network interface.
    :vartype gateway: str
    :ivar prefix_length: prefixLength for network interface.
    :vartype prefix_length: str
    :ivar private_ip_address: PrivateIPAddress - Private IP address of the IP configuration.
    :vartype private_ip_address: str
    :ivar subnet: Subnet - Name of Subnet bound to the IP configuration.
    :vartype subnet: ~azure_stack_hci_client.models.LogicalNetworkArmReference
    """

    _validation = {
        "gateway": {"readonly": True},
        "prefix_length": {"readonly": True},
    }

    _attribute_map = {
        "gateway": {"key": "gateway", "type": "str"},
        "prefix_length": {"key": "prefixLength", "type": "str"},
        "private_ip_address": {"key": "privateIPAddress", "type": "str"},
        "subnet": {"key": "subnet", "type": "LogicalNetworkArmReference"},
    }

    def __init__(
        self,
        *,
        private_ip_address: Optional[str] = None,
        subnet: Optional["_models.LogicalNetworkArmReference"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword private_ip_address: PrivateIPAddress - Private IP address of the IP configuration.
        :paramtype private_ip_address: str
        :keyword subnet: Subnet - Name of Subnet bound to the IP configuration.
        :paramtype subnet: ~azure_stack_hci_client.models.LogicalNetworkArmReference
        """
        super().__init__(**kwargs)
        self.gateway = None
        self.prefix_length = None
        self.private_ip_address = private_ip_address
        self.subnet = subnet


class IPPool(_serialization.Model):
    """Describes IPPool.

    :ivar name: Name of the IP-Pool.
    :vartype name: str
    :ivar ip_pool_type: Type of the IP Pool [vm, vippool]. Known values are: "vm" and "vippool".
    :vartype ip_pool_type: str or ~azure_stack_hci_client.models.IPPoolTypeEnum
    :ivar start: Start of the IP address pool.
    :vartype start: str
    :ivar end: End of the IP address pool.
    :vartype end: str
    :ivar info: IPPool info.
    :vartype info: ~azure_stack_hci_client.models.IPPoolInfo
    """

    _attribute_map = {
        "name": {"key": "name", "type": "str"},
        "ip_pool_type": {"key": "ipPoolType", "type": "str"},
        "start": {"key": "start", "type": "str"},
        "end": {"key": "end", "type": "str"},
        "info": {"key": "info", "type": "IPPoolInfo"},
    }

    def __init__(
        self,
        *,
        name: Optional[str] = None,
        ip_pool_type: Optional[Union[str, "_models.IPPoolTypeEnum"]] = None,
        start: Optional[str] = None,
        end: Optional[str] = None,
        info: Optional["_models.IPPoolInfo"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword name: Name of the IP-Pool.
        :paramtype name: str
        :keyword ip_pool_type: Type of the IP Pool [vm, vippool]. Known values are: "vm" and "vippool".
        :paramtype ip_pool_type: str or ~azure_stack_hci_client.models.IPPoolTypeEnum
        :keyword start: Start of the IP address pool.
        :paramtype start: str
        :keyword end: End of the IP address pool.
        :paramtype end: str
        :keyword info: IPPool info.
        :paramtype info: ~azure_stack_hci_client.models.IPPoolInfo
        """
        super().__init__(**kwargs)
        self.name = name
        self.ip_pool_type = ip_pool_type
        self.start = start
        self.end = end
        self.info = info


class IPPoolInfo(_serialization.Model):
    """IP Pool info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar used: Number of IP addresses allocated from the IP Pool.
    :vartype used: str
    :ivar available: Number of IP addresses available in the IP Pool.
    :vartype available: str
    """

    _validation = {
        "used": {"readonly": True},
        "available": {"readonly": True},
    }

    _attribute_map = {
        "used": {"key": "used", "type": "str"},
        "available": {"key": "available", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.used = None
        self.available = None


class LogicalNetwork(TrackedResource):
    """The logical network resource definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure_stack_hci_client.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure_stack_hci_client.models.LogicalNetworkProperties
    :ivar extended_location: The extendedLocation of the resource.
    :vartype extended_location: ~azure_stack_hci_client.models.ExtendedLocation
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "LogicalNetworkProperties"},
        "extended_location": {"key": "extendedLocation", "type": "ExtendedLocation"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.LogicalNetworkProperties"] = None,
        extended_location: Optional["_models.ExtendedLocation"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure_stack_hci_client.models.LogicalNetworkProperties
        :keyword extended_location: The extendedLocation of the resource.
        :paramtype extended_location: ~azure_stack_hci_client.models.ExtendedLocation
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties
        self.extended_location = extended_location


class LogicalNetworkArmReference(_serialization.Model):
    """The ARM ID for a Logical Network.

    :ivar id: The ARM ID for a Logical Network.
    :vartype id: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
    }

    def __init__(self, *, id: Optional[str] = None, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: The ARM ID for a Logical Network.
        :paramtype id: str
        """
        super().__init__(**kwargs)
        self.id = id


class LogicalNetworkListResult(_serialization.Model):
    """The response of a LogicalNetwork list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The LogicalNetwork items on this page. Required.
    :vartype value: list[~azure_stack_hci_client.models.LogicalNetwork]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[LogicalNetwork]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.LogicalNetwork"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The LogicalNetwork items on this page. Required.
        :paramtype value: list[~azure_stack_hci_client.models.LogicalNetwork]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class LogicalNetworkProperties(_serialization.Model):
    """Properties under the logical network resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar dhcp_options: DhcpOptions contains an array of DNS servers available to VMs deployed in
     the logical network. Standard DHCP option for a subnet overrides logical network DHCP options.
    :vartype dhcp_options: ~azure_stack_hci_client.models.LogicalNetworkPropertiesDhcpOptions
    :ivar subnets: Subnet - list of subnets under the logical network.
    :vartype subnets: list[~azure_stack_hci_client.models.Subnet]
    :ivar provisioning_state: Provisioning state of the logical network. Known values are:
     "Succeeded", "Failed", "InProgress", "Accepted", "Deleting", and "Canceled".
    :vartype provisioning_state: str or ~azure_stack_hci_client.models.ProvisioningStateEnum
    :ivar vm_switch_name: name of the network switch to be used for VMs.
    :vartype vm_switch_name: str
    :ivar status: The observed state of logical networks.
    :vartype status: ~azure_stack_hci_client.models.LogicalNetworkStatus
    """

    _validation = {
        "provisioning_state": {"readonly": True},
        "status": {"readonly": True},
    }

    _attribute_map = {
        "dhcp_options": {"key": "dhcpOptions", "type": "LogicalNetworkPropertiesDhcpOptions"},
        "subnets": {"key": "subnets", "type": "[Subnet]"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "vm_switch_name": {"key": "vmSwitchName", "type": "str"},
        "status": {"key": "status", "type": "LogicalNetworkStatus"},
    }

    def __init__(
        self,
        *,
        dhcp_options: Optional["_models.LogicalNetworkPropertiesDhcpOptions"] = None,
        subnets: Optional[List["_models.Subnet"]] = None,
        vm_switch_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword dhcp_options: DhcpOptions contains an array of DNS servers available to VMs deployed
         in the logical network. Standard DHCP option for a subnet overrides logical network DHCP
         options.
        :paramtype dhcp_options: ~azure_stack_hci_client.models.LogicalNetworkPropertiesDhcpOptions
        :keyword subnets: Subnet - list of subnets under the logical network.
        :paramtype subnets: list[~azure_stack_hci_client.models.Subnet]
        :keyword vm_switch_name: name of the network switch to be used for VMs.
        :paramtype vm_switch_name: str
        """
        super().__init__(**kwargs)
        self.dhcp_options = dhcp_options
        self.subnets = subnets
        self.provisioning_state = None
        self.vm_switch_name = vm_switch_name
        self.status = None


class LogicalNetworkPropertiesDhcpOptions(_serialization.Model):
    """DhcpOptions contains an array of DNS servers available to VMs deployed in the logical network.
    Standard DHCP option for a subnet overrides logical network DHCP options.

    :ivar dns_servers: The list of DNS servers IP addresses.
    :vartype dns_servers: list[str]
    """

    _attribute_map = {
        "dns_servers": {"key": "dnsServers", "type": "[str]"},
    }

    def __init__(self, *, dns_servers: Optional[List[str]] = None, **kwargs: Any) -> None:
        """
        :keyword dns_servers: The list of DNS servers IP addresses.
        :paramtype dns_servers: list[str]
        """
        super().__init__(**kwargs)
        self.dns_servers = dns_servers


class LogicalNetworkStatus(_serialization.Model):
    """The observed state of logical networks.

    :ivar error_code: LogicalNetwork provisioning error code.
    :vartype error_code: str
    :ivar error_message: Descriptive error message.
    :vartype error_message: str
    :ivar provisioning_status: Logical network provisioning status.
    :vartype provisioning_status:
     ~azure_stack_hci_client.models.LogicalNetworkStatusProvisioningStatus
    """

    _attribute_map = {
        "error_code": {"key": "errorCode", "type": "str"},
        "error_message": {"key": "errorMessage", "type": "str"},
        "provisioning_status": {"key": "provisioningStatus", "type": "LogicalNetworkStatusProvisioningStatus"},
    }

    def __init__(
        self,
        *,
        error_code: Optional[str] = None,
        error_message: Optional[str] = None,
        provisioning_status: Optional["_models.LogicalNetworkStatusProvisioningStatus"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword error_code: LogicalNetwork provisioning error code.
        :paramtype error_code: str
        :keyword error_message: Descriptive error message.
        :paramtype error_message: str
        :keyword provisioning_status: Logical network provisioning status.
        :paramtype provisioning_status:
         ~azure_stack_hci_client.models.LogicalNetworkStatusProvisioningStatus
        """
        super().__init__(**kwargs)
        self.error_code = error_code
        self.error_message = error_message
        self.provisioning_status = provisioning_status


class LogicalNetworkStatusProvisioningStatus(_serialization.Model):
    """Describes the status of the provisioning.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar operation_id: The ID of the operation performed on the logical network.
    :vartype operation_id: str
    :ivar status: The status of the operation performed on the logical network [Succeeded, Failed,
     InProgress]. Known values are: "Succeeded", "Failed", and "InProgress".
    :vartype status: str or ~azure_stack_hci_client.models.Status
    """

    _validation = {
        "status": {"readonly": True},
    }

    _attribute_map = {
        "operation_id": {"key": "operationId", "type": "str"},
        "status": {"key": "status", "type": "str"},
    }

    def __init__(self, *, operation_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword operation_id: The ID of the operation performed on the logical network.
        :paramtype operation_id: str
        """
        super().__init__(**kwargs)
        self.operation_id = operation_id
        self.status = None


class LogicalNetworksUpdateRequest(_serialization.Model):
    """The logical network resource patch definition.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(self, *, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.tags = tags


class ManagedServiceIdentity(_serialization.Model):
    """Managed service identity (system assigned and/or user assigned identities).

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar principal_id: The service principal ID of the system assigned identity. This property
     will only be provided for a system assigned identity.
    :vartype principal_id: str
    :ivar tenant_id: The tenant ID of the system assigned identity. This property will only be
     provided for a system assigned identity.
    :vartype tenant_id: str
    :ivar type: Type of managed service identity (where both SystemAssigned and UserAssigned types
     are allowed). Required. Known values are: "None", "SystemAssigned", "UserAssigned", and
     "SystemAssigned,UserAssigned".
    :vartype type: str or ~azure_stack_hci_client.models.ManagedServiceIdentityType
    :ivar user_assigned_identities: The set of user assigned identities associated with the
     resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form:
     '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.  # pylint: disable=line-too-long
     The dictionary values can be empty objects ({}) in requests.
    :vartype user_assigned_identities: dict[str,
     ~azure_stack_hci_client.models.UserAssignedIdentity]
    """

    _validation = {
        "principal_id": {"readonly": True},
        "tenant_id": {"readonly": True},
        "type": {"required": True},
    }

    _attribute_map = {
        "principal_id": {"key": "principalId", "type": "str"},
        "tenant_id": {"key": "tenantId", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "user_assigned_identities": {"key": "userAssignedIdentities", "type": "{UserAssignedIdentity}"},
    }

    def __init__(
        self,
        *,
        type: Union[str, "_models.ManagedServiceIdentityType"],
        user_assigned_identities: Optional[Dict[str, "_models.UserAssignedIdentity"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword type: Type of managed service identity (where both SystemAssigned and UserAssigned
         types are allowed). Required. Known values are: "None", "SystemAssigned", "UserAssigned", and
         "SystemAssigned,UserAssigned".
        :paramtype type: str or ~azure_stack_hci_client.models.ManagedServiceIdentityType
        :keyword user_assigned_identities: The set of user assigned identities associated with the
         resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form:
         '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}.  # pylint: disable=line-too-long
         The dictionary values can be empty objects ({}) in requests.
        :paramtype user_assigned_identities: dict[str,
         ~azure_stack_hci_client.models.UserAssignedIdentity]
        """
        super().__init__(**kwargs)
        self.principal_id = None
        self.tenant_id = None
        self.type = type
        self.user_assigned_identities = user_assigned_identities


class MarketplaceGalleryImage(TrackedResource):
    """The marketplace gallery image resource definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure_stack_hci_client.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure_stack_hci_client.models.MarketplaceGalleryImageProperties
    :ivar extended_location: The extendedLocation of the resource.
    :vartype extended_location: ~azure_stack_hci_client.models.ExtendedLocation
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "MarketplaceGalleryImageProperties"},
        "extended_location": {"key": "extendedLocation", "type": "ExtendedLocation"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.MarketplaceGalleryImageProperties"] = None,
        extended_location: Optional["_models.ExtendedLocation"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure_stack_hci_client.models.MarketplaceGalleryImageProperties
        :keyword extended_location: The extendedLocation of the resource.
        :paramtype extended_location: ~azure_stack_hci_client.models.ExtendedLocation
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties
        self.extended_location = extended_location


class MarketplaceGalleryImageListResult(_serialization.Model):
    """The response of a MarketplaceGalleryImage list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The MarketplaceGalleryImage items on this page. Required.
    :vartype value: list[~azure_stack_hci_client.models.MarketplaceGalleryImage]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[MarketplaceGalleryImage]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.MarketplaceGalleryImage"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The MarketplaceGalleryImage items on this page. Required.
        :paramtype value: list[~azure_stack_hci_client.models.MarketplaceGalleryImage]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class MarketplaceGalleryImageProperties(_serialization.Model):
    """Properties under the marketplace gallery image resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar container_id: Storage ContainerID of the storage container to be used for marketplace
     gallery image.
    :vartype container_id: str
    :ivar os_type: Operating system type that the gallery image uses [Windows, Linux]. Required.
     Known values are: "Windows" and "Linux".
    :vartype os_type: str or ~azure_stack_hci_client.models.OperatingSystemTypes
    :ivar cloud_init_data_source: Datasource for the gallery image when provisioning with
     cloud-init [NoCloud, Azure]. Known values are: "NoCloud" and "Azure".
    :vartype cloud_init_data_source: str or ~azure_stack_hci_client.models.CloudInitDataSource
    :ivar hyper_v_generation: The hypervisor generation of the Virtual Machine [V1, V2]. Known
     values are: "V1" and "V2".
    :vartype hyper_v_generation: str or ~azure_stack_hci_client.models.HyperVGeneration
    :ivar identifier: This is the gallery image definition identifier.
    :vartype identifier: ~azure_stack_hci_client.models.GalleryImageIdentifier
    :ivar version: Specifies information about the gallery image version that you want to create or
     update.
    :vartype version: ~azure_stack_hci_client.models.GalleryImageVersion
    :ivar provisioning_state: Provisioning state of the marketplace gallery image. Known values
     are: "Succeeded", "Failed", "InProgress", "Accepted", "Deleting", and "Canceled".
    :vartype provisioning_state: str or ~azure_stack_hci_client.models.ProvisioningStateEnum
    :ivar status: The observed state of marketplace gallery images.
    :vartype status: ~azure_stack_hci_client.models.MarketplaceGalleryImageStatus
    """

    _validation = {
        "os_type": {"required": True},
        "provisioning_state": {"readonly": True},
        "status": {"readonly": True},
    }

    _attribute_map = {
        "container_id": {"key": "containerId", "type": "str"},
        "os_type": {"key": "osType", "type": "str"},
        "cloud_init_data_source": {"key": "cloudInitDataSource", "type": "str"},
        "hyper_v_generation": {"key": "hyperVGeneration", "type": "str"},
        "identifier": {"key": "identifier", "type": "GalleryImageIdentifier"},
        "version": {"key": "version", "type": "GalleryImageVersion"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "status": {"key": "status", "type": "MarketplaceGalleryImageStatus"},
    }

    def __init__(
        self,
        *,
        os_type: Union[str, "_models.OperatingSystemTypes"],
        container_id: Optional[str] = None,
        cloud_init_data_source: Optional[Union[str, "_models.CloudInitDataSource"]] = None,
        hyper_v_generation: Optional[Union[str, "_models.HyperVGeneration"]] = None,
        identifier: Optional["_models.GalleryImageIdentifier"] = None,
        version: Optional["_models.GalleryImageVersion"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword container_id: Storage ContainerID of the storage container to be used for marketplace
         gallery image.
        :paramtype container_id: str
        :keyword os_type: Operating system type that the gallery image uses [Windows, Linux]. Required.
         Known values are: "Windows" and "Linux".
        :paramtype os_type: str or ~azure_stack_hci_client.models.OperatingSystemTypes
        :keyword cloud_init_data_source: Datasource for the gallery image when provisioning with
         cloud-init [NoCloud, Azure]. Known values are: "NoCloud" and "Azure".
        :paramtype cloud_init_data_source: str or ~azure_stack_hci_client.models.CloudInitDataSource
        :keyword hyper_v_generation: The hypervisor generation of the Virtual Machine [V1, V2]. Known
         values are: "V1" and "V2".
        :paramtype hyper_v_generation: str or ~azure_stack_hci_client.models.HyperVGeneration
        :keyword identifier: This is the gallery image definition identifier.
        :paramtype identifier: ~azure_stack_hci_client.models.GalleryImageIdentifier
        :keyword version: Specifies information about the gallery image version that you want to create
         or update.
        :paramtype version: ~azure_stack_hci_client.models.GalleryImageVersion
        """
        super().__init__(**kwargs)
        self.container_id = container_id
        self.os_type = os_type
        self.cloud_init_data_source = cloud_init_data_source
        self.hyper_v_generation = hyper_v_generation
        self.identifier = identifier
        self.version = version
        self.provisioning_state = None
        self.status = None


class MarketplaceGalleryImageStatus(_serialization.Model):
    """The observed state of marketplace gallery images.

    :ivar error_code: MarketplaceGalleryImage provisioning error code.
    :vartype error_code: str
    :ivar error_message: Descriptive error message.
    :vartype error_message: str
    :ivar provisioning_status: Provisioning status of marketplace gallery image.
    :vartype provisioning_status:
     ~azure_stack_hci_client.models.MarketplaceGalleryImageStatusProvisioningStatus
    :ivar download_status: The download status of the gallery image.
    :vartype download_status:
     ~azure_stack_hci_client.models.MarketplaceGalleryImageStatusDownloadStatus
    :ivar progress_percentage: The progress of the operation in percentage.
    :vartype progress_percentage: int
    """

    _attribute_map = {
        "error_code": {"key": "errorCode", "type": "str"},
        "error_message": {"key": "errorMessage", "type": "str"},
        "provisioning_status": {"key": "provisioningStatus", "type": "MarketplaceGalleryImageStatusProvisioningStatus"},
        "download_status": {"key": "downloadStatus", "type": "MarketplaceGalleryImageStatusDownloadStatus"},
        "progress_percentage": {"key": "progressPercentage", "type": "int"},
    }

    def __init__(
        self,
        *,
        error_code: Optional[str] = None,
        error_message: Optional[str] = None,
        provisioning_status: Optional["_models.MarketplaceGalleryImageStatusProvisioningStatus"] = None,
        download_status: Optional["_models.MarketplaceGalleryImageStatusDownloadStatus"] = None,
        progress_percentage: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword error_code: MarketplaceGalleryImage provisioning error code.
        :paramtype error_code: str
        :keyword error_message: Descriptive error message.
        :paramtype error_message: str
        :keyword provisioning_status: Provisioning status of marketplace gallery image.
        :paramtype provisioning_status:
         ~azure_stack_hci_client.models.MarketplaceGalleryImageStatusProvisioningStatus
        :keyword download_status: The download status of the gallery image.
        :paramtype download_status:
         ~azure_stack_hci_client.models.MarketplaceGalleryImageStatusDownloadStatus
        :keyword progress_percentage: The progress of the operation in percentage.
        :paramtype progress_percentage: int
        """
        super().__init__(**kwargs)
        self.error_code = error_code
        self.error_message = error_message
        self.provisioning_status = provisioning_status
        self.download_status = download_status
        self.progress_percentage = progress_percentage


class MarketplaceGalleryImageStatusDownloadStatus(_serialization.Model):  # pylint: disable=name-too-long
    """The download status of the gallery image.

    :ivar download_size_in_mb: The downloaded sized of the image in MB.
    :vartype download_size_in_mb: int
    """

    _attribute_map = {
        "download_size_in_mb": {"key": "downloadSizeInMB", "type": "int"},
    }

    def __init__(self, *, download_size_in_mb: Optional[int] = None, **kwargs: Any) -> None:
        """
        :keyword download_size_in_mb: The downloaded sized of the image in MB.
        :paramtype download_size_in_mb: int
        """
        super().__init__(**kwargs)
        self.download_size_in_mb = download_size_in_mb


class MarketplaceGalleryImageStatusProvisioningStatus(_serialization.Model):  # pylint: disable=name-too-long
    """Marketplace GalleryImage provisioning status.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar operation_id: The ID of the operation performed on the gallery image.
    :vartype operation_id: str
    :ivar status: The status of the operation performed on the gallery image [Succeeded, Failed,
     InProgress]. Known values are: "Succeeded", "Failed", and "InProgress".
    :vartype status: str or ~azure_stack_hci_client.models.Status
    """

    _validation = {
        "status": {"readonly": True},
    }

    _attribute_map = {
        "operation_id": {"key": "operationId", "type": "str"},
        "status": {"key": "status", "type": "str"},
    }

    def __init__(self, *, operation_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword operation_id: The ID of the operation performed on the gallery image.
        :paramtype operation_id: str
        """
        super().__init__(**kwargs)
        self.operation_id = operation_id
        self.status = None


class MarketplaceGalleryImagesUpdateRequest(_serialization.Model):
    """The marketplace gallery image resource patch definition.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(self, *, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.tags = tags


class MarketplaceGalleryImageTagsUpdate(_serialization.Model):
    """The type used for updating tags in MarketplaceGalleryImage resources.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(self, *, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.tags = tags


class NetworkInterface(TrackedResource):
    """The network interface resource definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure_stack_hci_client.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure_stack_hci_client.models.NetworkInterfaceProperties
    :ivar extended_location: The extendedLocation of the resource.
    :vartype extended_location: ~azure_stack_hci_client.models.ExtendedLocation
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "NetworkInterfaceProperties"},
        "extended_location": {"key": "extendedLocation", "type": "ExtendedLocation"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.NetworkInterfaceProperties"] = None,
        extended_location: Optional["_models.ExtendedLocation"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure_stack_hci_client.models.NetworkInterfaceProperties
        :keyword extended_location: The extendedLocation of the resource.
        :paramtype extended_location: ~azure_stack_hci_client.models.ExtendedLocation
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties
        self.extended_location = extended_location


class NetworkInterfaceArmReference(_serialization.Model):
    """The ARM ID for a Network Interface.

    :ivar id: The ARM ID for a Network Interface.
    :vartype id: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
    }

    def __init__(self, *, id: Optional[str] = None, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: The ARM ID for a Network Interface.
        :paramtype id: str
        """
        super().__init__(**kwargs)
        self.id = id


class NetworkInterfaceListResult(_serialization.Model):
    """The response of a NetworkInterface list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The NetworkInterface items on this page. Required.
    :vartype value: list[~azure_stack_hci_client.models.NetworkInterface]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[NetworkInterface]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.NetworkInterface"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The NetworkInterface items on this page. Required.
        :paramtype value: list[~azure_stack_hci_client.models.NetworkInterface]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class NetworkInterfaceProperties(_serialization.Model):
    """Properties under the network interface resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar ip_configurations: IPConfigurations - A list of IPConfigurations of the network
     interface.
    :vartype ip_configurations: list[~azure_stack_hci_client.models.IPConfiguration]
    :ivar mac_address: MacAddress - The MAC address of the network interface.
    :vartype mac_address: str
    :ivar dns_settings: DNS Settings for the interface.
    :vartype dns_settings: ~azure_stack_hci_client.models.InterfaceDNSSettings
    :ivar provisioning_state: Provisioning state of the network interface. Known values are:
     "Succeeded", "Failed", "InProgress", "Accepted", "Deleting", and "Canceled".
    :vartype provisioning_state: str or ~azure_stack_hci_client.models.ProvisioningStateEnum
    :ivar status: The observed state of network interfaces.
    :vartype status: ~azure_stack_hci_client.models.NetworkInterfaceStatus
    :ivar network_security_group: NetworkSecurityGroup - Network Security Group attached to the
     network interface.
    :vartype network_security_group:
     ~azure_stack_hci_client.models.NetworkSecurityGroupArmReference
    """

    _validation = {
        "provisioning_state": {"readonly": True},
        "status": {"readonly": True},
    }

    _attribute_map = {
        "ip_configurations": {"key": "ipConfigurations", "type": "[IPConfiguration]"},
        "mac_address": {"key": "macAddress", "type": "str"},
        "dns_settings": {"key": "dnsSettings", "type": "InterfaceDNSSettings"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "status": {"key": "status", "type": "NetworkInterfaceStatus"},
        "network_security_group": {"key": "networkSecurityGroup", "type": "NetworkSecurityGroupArmReference"},
    }

    def __init__(
        self,
        *,
        ip_configurations: Optional[List["_models.IPConfiguration"]] = None,
        mac_address: Optional[str] = None,
        dns_settings: Optional["_models.InterfaceDNSSettings"] = None,
        network_security_group: Optional["_models.NetworkSecurityGroupArmReference"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword ip_configurations: IPConfigurations - A list of IPConfigurations of the network
         interface.
        :paramtype ip_configurations: list[~azure_stack_hci_client.models.IPConfiguration]
        :keyword mac_address: MacAddress - The MAC address of the network interface.
        :paramtype mac_address: str
        :keyword dns_settings: DNS Settings for the interface.
        :paramtype dns_settings: ~azure_stack_hci_client.models.InterfaceDNSSettings
        :keyword network_security_group: NetworkSecurityGroup - Network Security Group attached to the
         network interface.
        :paramtype network_security_group:
         ~azure_stack_hci_client.models.NetworkSecurityGroupArmReference
        """
        super().__init__(**kwargs)
        self.ip_configurations = ip_configurations
        self.mac_address = mac_address
        self.dns_settings = dns_settings
        self.provisioning_state = None
        self.status = None
        self.network_security_group = network_security_group


class NetworkInterfaceStatus(_serialization.Model):
    """The observed state of network interfaces.

    :ivar error_code: NetworkInterface provisioning error code.
    :vartype error_code: str
    :ivar error_message: Descriptive error message.
    :vartype error_message: str
    :ivar provisioning_status: Network interface provisioning status.
    :vartype provisioning_status:
     ~azure_stack_hci_client.models.NetworkInterfaceStatusProvisioningStatus
    """

    _attribute_map = {
        "error_code": {"key": "errorCode", "type": "str"},
        "error_message": {"key": "errorMessage", "type": "str"},
        "provisioning_status": {"key": "provisioningStatus", "type": "NetworkInterfaceStatusProvisioningStatus"},
    }

    def __init__(
        self,
        *,
        error_code: Optional[str] = None,
        error_message: Optional[str] = None,
        provisioning_status: Optional["_models.NetworkInterfaceStatusProvisioningStatus"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword error_code: NetworkInterface provisioning error code.
        :paramtype error_code: str
        :keyword error_message: Descriptive error message.
        :paramtype error_message: str
        :keyword provisioning_status: Network interface provisioning status.
        :paramtype provisioning_status:
         ~azure_stack_hci_client.models.NetworkInterfaceStatusProvisioningStatus
        """
        super().__init__(**kwargs)
        self.error_code = error_code
        self.error_message = error_message
        self.provisioning_status = provisioning_status


class NetworkInterfaceStatusProvisioningStatus(_serialization.Model):
    """Network interface provisioning status.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar operation_id: The ID of the operation performed on the network interface.
    :vartype operation_id: str
    :ivar status: The status of the operation performed on the network interface [Succeeded,
     Failed, InProgress]. Known values are: "Succeeded", "Failed", and "InProgress".
    :vartype status: str or ~azure_stack_hci_client.models.Status
    """

    _validation = {
        "status": {"readonly": True},
    }

    _attribute_map = {
        "operation_id": {"key": "operationId", "type": "str"},
        "status": {"key": "status", "type": "str"},
    }

    def __init__(self, *, operation_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword operation_id: The ID of the operation performed on the network interface.
        :paramtype operation_id: str
        """
        super().__init__(**kwargs)
        self.operation_id = operation_id
        self.status = None


class NetworkInterfacesUpdateRequest(_serialization.Model):
    """The network interface resource patch definition.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(self, *, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.tags = tags


class NetworkInterfaceTagsUpdate(_serialization.Model):
    """The type used for updating tags in NetworkInterface resources.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(self, *, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.tags = tags


class NetworkProfileUpdate(_serialization.Model):
    """NetworkProfile - describes the network update configuration the virtual machine instance.

    :ivar network_interfaces: NetworkInterfaces - list of network interfaces to be attached to the
     virtual machine instance.
    :vartype network_interfaces: list[~azure_stack_hci_client.models.NetworkInterfaceArmReference]
    """

    _attribute_map = {
        "network_interfaces": {"key": "networkInterfaces", "type": "[NetworkInterfaceArmReference]"},
    }

    def __init__(
        self, *, network_interfaces: Optional[List["_models.NetworkInterfaceArmReference"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword network_interfaces: NetworkInterfaces - list of network interfaces to be attached to
         the virtual machine instance.
        :paramtype network_interfaces:
         list[~azure_stack_hci_client.models.NetworkInterfaceArmReference]
        """
        super().__init__(**kwargs)
        self.network_interfaces = network_interfaces


class NetworkSecurityGroup(TrackedResource):
    """NetworkSecurityGroup resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure_stack_hci_client.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure_stack_hci_client.models.NetworkSecurityGroupProperties
    :ivar extended_location: The extendedLocation of the resource.
    :vartype extended_location: ~azure_stack_hci_client.models.ExtendedLocation
    :ivar e_tag: If eTag is provided in the response body, it may also be provided as a header per
     the normal etag convention.  Entity tags are used for comparing two or more entities from the
     same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match
     (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
    :vartype e_tag: str
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
        "e_tag": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "NetworkSecurityGroupProperties"},
        "extended_location": {"key": "extendedLocation", "type": "ExtendedLocation"},
        "e_tag": {"key": "eTag", "type": "str"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.NetworkSecurityGroupProperties"] = None,
        extended_location: Optional["_models.ExtendedLocation"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure_stack_hci_client.models.NetworkSecurityGroupProperties
        :keyword extended_location: The extendedLocation of the resource.
        :paramtype extended_location: ~azure_stack_hci_client.models.ExtendedLocation
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties
        self.extended_location = extended_location
        self.e_tag = None


class NetworkSecurityGroupArmReference(_serialization.Model):
    """The ARM ID for a Network Security Group.

    :ivar id: The ARM ID for a Network Security Group.
    :vartype id: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
    }

    def __init__(self, *, id: Optional[str] = None, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: The ARM ID for a Network Security Group.
        :paramtype id: str
        """
        super().__init__(**kwargs)
        self.id = id


class NetworkSecurityGroupListResult(_serialization.Model):
    """The response of a NetworkSecurityGroup list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The NetworkSecurityGroup items on this page. Required.
    :vartype value: list[~azure_stack_hci_client.models.NetworkSecurityGroup]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[NetworkSecurityGroup]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.NetworkSecurityGroup"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The NetworkSecurityGroup items on this page. Required.
        :paramtype value: list[~azure_stack_hci_client.models.NetworkSecurityGroup]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class NetworkSecurityGroupProperties(_serialization.Model):
    """Network Security Group resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar network_interfaces: A collection of references to network interfaces that are currently
     using this NSG.
    :vartype network_interfaces: list[~azure_stack_hci_client.models.NetworkInterfaceArmReference]
    :ivar subnets: A collection of references to logical networks that are currently using this
     NSG.
    :vartype subnets: list[~azure_stack_hci_client.models.LogicalNetworkArmReference]
    :ivar provisioning_state: The provisioning state of the network security group resource. Known
     values are: "Succeeded", "Failed", "InProgress", "Accepted", "Deleting", and "Canceled".
    :vartype provisioning_state: str or ~azure_stack_hci_client.models.ProvisioningStateEnum
    """

    _validation = {
        "network_interfaces": {"readonly": True},
        "subnets": {"readonly": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "network_interfaces": {"key": "networkInterfaces", "type": "[NetworkInterfaceArmReference]"},
        "subnets": {"key": "subnets", "type": "[LogicalNetworkArmReference]"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.network_interfaces = None
        self.subnets = None
        self.provisioning_state = None


class NetworkSecurityGroupTagsUpdate(_serialization.Model):
    """The type used for updating tags in NetworkSecurityGroup resources.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(self, *, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.tags = tags


class OsProfileUpdate(_serialization.Model):
    """OsProfile - describes the update configuration of the operating system.

    :ivar computer_name: ComputerName - name of the computer.
    :vartype computer_name: str
    :ivar linux_configuration: Linux configuration properties.
    :vartype linux_configuration: ~azure_stack_hci_client.models.OsProfileUpdateLinuxConfiguration
    :ivar windows_configuration: Windows configuration properties.
    :vartype windows_configuration:
     ~azure_stack_hci_client.models.OsProfileUpdateWindowsConfiguration
    """

    _attribute_map = {
        "computer_name": {"key": "computerName", "type": "str"},
        "linux_configuration": {"key": "linuxConfiguration", "type": "OsProfileUpdateLinuxConfiguration"},
        "windows_configuration": {"key": "windowsConfiguration", "type": "OsProfileUpdateWindowsConfiguration"},
    }

    def __init__(
        self,
        *,
        computer_name: Optional[str] = None,
        linux_configuration: Optional["_models.OsProfileUpdateLinuxConfiguration"] = None,
        windows_configuration: Optional["_models.OsProfileUpdateWindowsConfiguration"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword computer_name: ComputerName - name of the computer.
        :paramtype computer_name: str
        :keyword linux_configuration: Linux configuration properties.
        :paramtype linux_configuration:
         ~azure_stack_hci_client.models.OsProfileUpdateLinuxConfiguration
        :keyword windows_configuration: Windows configuration properties.
        :paramtype windows_configuration:
         ~azure_stack_hci_client.models.OsProfileUpdateWindowsConfiguration
        """
        super().__init__(**kwargs)
        self.computer_name = computer_name
        self.linux_configuration = linux_configuration
        self.windows_configuration = windows_configuration


class OsProfileUpdateLinuxConfiguration(_serialization.Model):
    """OSProfile update linux configuration.

    :ivar provision_vm_agent: Used to indicate whether Arc for Servers agent onboarding should be
     triggered during the virtual machine instance creation process.
    :vartype provision_vm_agent: bool
    :ivar provision_vm_config_agent: Used to indicate whether the VM Config Agent should be
     installed during the virtual machine creation process.
    :vartype provision_vm_config_agent: bool
    """

    _attribute_map = {
        "provision_vm_agent": {"key": "provisionVMAgent", "type": "bool"},
        "provision_vm_config_agent": {"key": "provisionVMConfigAgent", "type": "bool"},
    }

    def __init__(
        self,
        *,
        provision_vm_agent: Optional[bool] = None,
        provision_vm_config_agent: Optional[bool] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword provision_vm_agent: Used to indicate whether Arc for Servers agent onboarding should
         be triggered during the virtual machine instance creation process.
        :paramtype provision_vm_agent: bool
        :keyword provision_vm_config_agent: Used to indicate whether the VM Config Agent should be
         installed during the virtual machine creation process.
        :paramtype provision_vm_config_agent: bool
        """
        super().__init__(**kwargs)
        self.provision_vm_agent = provision_vm_agent
        self.provision_vm_config_agent = provision_vm_config_agent


class OsProfileUpdateWindowsConfiguration(_serialization.Model):
    """OSProfile update windows configuration.

    :ivar provision_vm_agent: Used to indicate whether Arc for Servers agent onboarding should be
     triggered during the virtual machine instance creation process.
    :vartype provision_vm_agent: bool
    :ivar provision_vm_config_agent: Used to indicate whether the VM Config Agent should be
     installed during the virtual machine creation process.
    :vartype provision_vm_config_agent: bool
    """

    _attribute_map = {
        "provision_vm_agent": {"key": "provisionVMAgent", "type": "bool"},
        "provision_vm_config_agent": {"key": "provisionVMConfigAgent", "type": "bool"},
    }

    def __init__(
        self,
        *,
        provision_vm_agent: Optional[bool] = None,
        provision_vm_config_agent: Optional[bool] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword provision_vm_agent: Used to indicate whether Arc for Servers agent onboarding should
         be triggered during the virtual machine instance creation process.
        :paramtype provision_vm_agent: bool
        :keyword provision_vm_config_agent: Used to indicate whether the VM Config Agent should be
         installed during the virtual machine creation process.
        :paramtype provision_vm_config_agent: bool
        """
        super().__init__(**kwargs)
        self.provision_vm_agent = provision_vm_agent
        self.provision_vm_config_agent = provision_vm_config_agent


class Route(_serialization.Model):
    """Route - Route resource.

    :ivar properties: Properties of the route.
    :vartype properties: ~azure_stack_hci_client.models.RouteProperties
    :ivar name: Name - name of the subnet.
    :vartype name: str
    """

    _validation = {
        "name": {"pattern": r"^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,78}[_a-zA-Z0-9]$"},
    }

    _attribute_map = {
        "properties": {"key": "properties", "type": "RouteProperties"},
        "name": {"key": "name", "type": "str"},
    }

    def __init__(
        self, *, properties: Optional["_models.RouteProperties"] = None, name: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: Properties of the route.
        :paramtype properties: ~azure_stack_hci_client.models.RouteProperties
        :keyword name: Name - name of the subnet.
        :paramtype name: str
        """
        super().__init__(**kwargs)
        self.properties = properties
        self.name = name


class RouteProperties(_serialization.Model):
    """RoutePropertiesFormat - Route resource.

    :ivar address_prefix: The destination CIDR to which the route applies.
    :vartype address_prefix: str
    :ivar next_hop_ip_address: The IP address packets should be forwarded to. Next hop values are
     only allowed in routes where the next hop type is VirtualAppliance.
    :vartype next_hop_ip_address: str
    """

    _attribute_map = {
        "address_prefix": {"key": "addressPrefix", "type": "str"},
        "next_hop_ip_address": {"key": "nextHopIpAddress", "type": "str"},
    }

    def __init__(
        self, *, address_prefix: Optional[str] = None, next_hop_ip_address: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword address_prefix: The destination CIDR to which the route applies.
        :paramtype address_prefix: str
        :keyword next_hop_ip_address: The IP address packets should be forwarded to. Next hop values
         are only allowed in routes where the next hop type is VirtualAppliance.
        :paramtype next_hop_ip_address: str
        """
        super().__init__(**kwargs)
        self.address_prefix = address_prefix
        self.next_hop_ip_address = next_hop_ip_address


class RouteTable(_serialization.Model):
    """Route table resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar etag: A unique read-only string that changes whenever the resource is updated.
    :vartype etag: str
    :ivar name: Resource name.
    :vartype name: str
    :ivar type: Resource type.
    :vartype type: str
    :ivar properties: Properties of the route table.
    :vartype properties: ~azure_stack_hci_client.models.RouteTableProperties
    """

    _validation = {
        "etag": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
    }

    _attribute_map = {
        "etag": {"key": "etag", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "properties": {"key": "properties", "type": "RouteTableProperties"},
    }

    def __init__(self, *, properties: Optional["_models.RouteTableProperties"] = None, **kwargs: Any) -> None:
        """
        :keyword properties: Properties of the route table.
        :paramtype properties: ~azure_stack_hci_client.models.RouteTableProperties
        """
        super().__init__(**kwargs)
        self.etag = None
        self.name = None
        self.type = None
        self.properties = properties


class RouteTableProperties(_serialization.Model):
    """RouteTablePropertiesFormat - Route Table resource.

    :ivar routes: Collection of routes contained within a route table.
    :vartype routes: list[~azure_stack_hci_client.models.Route]
    """

    _attribute_map = {
        "routes": {"key": "routes", "type": "[Route]"},
    }

    def __init__(self, *, routes: Optional[List["_models.Route"]] = None, **kwargs: Any) -> None:
        """
        :keyword routes: Collection of routes contained within a route table.
        :paramtype routes: list[~azure_stack_hci_client.models.Route]
        """
        super().__init__(**kwargs)
        self.routes = routes


class SecurityRule(ProxyResource):
    """Security Rule resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure_stack_hci_client.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure_stack_hci_client.models.SecurityRuleProperties
    :ivar extended_location: The extendedLocation of the resource.
    :vartype extended_location: ~azure_stack_hci_client.models.ExtendedLocation
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "SecurityRuleProperties"},
        "extended_location": {"key": "extendedLocation", "type": "ExtendedLocation"},
    }

    def __init__(
        self,
        *,
        properties: Optional["_models.SecurityRuleProperties"] = None,
        extended_location: Optional["_models.ExtendedLocation"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure_stack_hci_client.models.SecurityRuleProperties
        :keyword extended_location: The extendedLocation of the resource.
        :paramtype extended_location: ~azure_stack_hci_client.models.ExtendedLocation
        """
        super().__init__(**kwargs)
        self.properties = properties
        self.extended_location = extended_location


class SecurityRuleListResult(_serialization.Model):
    """The response of a SecurityRule list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The SecurityRule items on this page. Required.
    :vartype value: list[~azure_stack_hci_client.models.SecurityRule]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[SecurityRule]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(self, *, value: List["_models.SecurityRule"], next_link: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword value: The SecurityRule items on this page. Required.
        :paramtype value: list[~azure_stack_hci_client.models.SecurityRule]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class SecurityRuleProperties(_serialization.Model):
    """Security rule resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar description: A description for this rule. Restricted to 140 chars.
    :vartype description: str
    :ivar protocol: Network protocol this rule applies to. Required. Known values are: "Tcp",
     "Udp", "Icmp", and "*".
    :vartype protocol: str or ~azure_stack_hci_client.models.SecurityRuleProtocol
    :ivar source_address_prefixes: The CIDR or source IP ranges.
    :vartype source_address_prefixes: list[str]
    :ivar destination_address_prefixes: The destination address prefixes. CIDR or destination IP
     ranges.
    :vartype destination_address_prefixes: list[str]
    :ivar source_port_ranges: The source port ranges. Integer or range between 0 and 65535.
     Asterisk '*' can also be used to match all ports.
    :vartype source_port_ranges: list[str]
    :ivar destination_port_ranges: The destination port ranges. Integer or range between 0 and
     65535. Asterisk '*' can also be used to match all ports.
    :vartype destination_port_ranges: list[str]
    :ivar access: The network traffic is allowed or denied. Required. Known values are: "Allow" and
     "Deny".
    :vartype access: str or ~azure_stack_hci_client.models.SecurityRuleAccess
    :ivar priority: The priority of the rule. The value can be between 100 and 4096. The priority
     number must be unique for each rule in the collection. The lower the priority number, the
     higher the priority of the rule. Required.
    :vartype priority: int
    :ivar direction: The direction of the rule. The direction specifies if rule will be evaluated
     on incoming or outgoing traffic. Required. Known values are: "Inbound" and "Outbound".
    :vartype direction: str or ~azure_stack_hci_client.models.SecurityRuleDirection
    :ivar provisioning_state: Provisioning state of the SR. Known values are: "Succeeded",
     "Failed", "InProgress", "Accepted", "Deleting", and "Canceled".
    :vartype provisioning_state: str or ~azure_stack_hci_client.models.ProvisioningStateEnum
    """

    _validation = {
        "protocol": {"required": True},
        "access": {"required": True},
        "priority": {"required": True},
        "direction": {"required": True},
        "provisioning_state": {"readonly": True},
    }

    _attribute_map = {
        "description": {"key": "description", "type": "str"},
        "protocol": {"key": "protocol", "type": "str"},
        "source_address_prefixes": {"key": "sourceAddressPrefixes", "type": "[str]"},
        "destination_address_prefixes": {"key": "destinationAddressPrefixes", "type": "[str]"},
        "source_port_ranges": {"key": "sourcePortRanges", "type": "[str]"},
        "destination_port_ranges": {"key": "destinationPortRanges", "type": "[str]"},
        "access": {"key": "access", "type": "str"},
        "priority": {"key": "priority", "type": "int"},
        "direction": {"key": "direction", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
    }

    def __init__(
        self,
        *,
        protocol: Union[str, "_models.SecurityRuleProtocol"],
        access: Union[str, "_models.SecurityRuleAccess"],
        priority: int,
        direction: Union[str, "_models.SecurityRuleDirection"],
        description: Optional[str] = None,
        source_address_prefixes: Optional[List[str]] = None,
        destination_address_prefixes: Optional[List[str]] = None,
        source_port_ranges: Optional[List[str]] = None,
        destination_port_ranges: Optional[List[str]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword description: A description for this rule. Restricted to 140 chars.
        :paramtype description: str
        :keyword protocol: Network protocol this rule applies to. Required. Known values are: "Tcp",
         "Udp", "Icmp", and "*".
        :paramtype protocol: str or ~azure_stack_hci_client.models.SecurityRuleProtocol
        :keyword source_address_prefixes: The CIDR or source IP ranges.
        :paramtype source_address_prefixes: list[str]
        :keyword destination_address_prefixes: The destination address prefixes. CIDR or destination IP
         ranges.
        :paramtype destination_address_prefixes: list[str]
        :keyword source_port_ranges: The source port ranges. Integer or range between 0 and 65535.
         Asterisk '*' can also be used to match all ports.
        :paramtype source_port_ranges: list[str]
        :keyword destination_port_ranges: The destination port ranges. Integer or range between 0 and
         65535. Asterisk '*' can also be used to match all ports.
        :paramtype destination_port_ranges: list[str]
        :keyword access: The network traffic is allowed or denied. Required. Known values are: "Allow"
         and "Deny".
        :paramtype access: str or ~azure_stack_hci_client.models.SecurityRuleAccess
        :keyword priority: The priority of the rule. The value can be between 100 and 4096. The
         priority number must be unique for each rule in the collection. The lower the priority number,
         the higher the priority of the rule. Required.
        :paramtype priority: int
        :keyword direction: The direction of the rule. The direction specifies if rule will be
         evaluated on incoming or outgoing traffic. Required. Known values are: "Inbound" and
         "Outbound".
        :paramtype direction: str or ~azure_stack_hci_client.models.SecurityRuleDirection
        """
        super().__init__(**kwargs)
        self.description = description
        self.protocol = protocol
        self.source_address_prefixes = source_address_prefixes
        self.destination_address_prefixes = destination_address_prefixes
        self.source_port_ranges = source_port_ranges
        self.destination_port_ranges = destination_port_ranges
        self.access = access
        self.priority = priority
        self.direction = direction
        self.provisioning_state = None


class SshConfiguration(_serialization.Model):
    """SSH configuration for Linux based VMs running on Azure.

    :ivar public_keys: The list of SSH public keys used to authenticate with linux based VMs.
    :vartype public_keys: list[~azure_stack_hci_client.models.SshPublicKey]
    """

    _attribute_map = {
        "public_keys": {"key": "publicKeys", "type": "[SshPublicKey]"},
    }

    def __init__(self, *, public_keys: Optional[List["_models.SshPublicKey"]] = None, **kwargs: Any) -> None:
        """
        :keyword public_keys: The list of SSH public keys used to authenticate with linux based VMs.
        :paramtype public_keys: list[~azure_stack_hci_client.models.SshPublicKey]
        """
        super().__init__(**kwargs)
        self.public_keys = public_keys


class SshPublicKey(_serialization.Model):
    """Contains information about SSH certificate public key and the path on the Linux VM where the
    public key is placed.

    :ivar path: Specifies the full path on the created VM where ssh public key is stored. If the
     file already exists, the specified key is appended to the file. Example:
     /home/user/.ssh/authorized_keys.
    :vartype path: str
    :ivar key_data: SSH public key certificate used to authenticate with the VM through ssh. The
     key needs to be at least 2048-bit and in ssh-rsa format. :code:`<br>`:code:`<br>` For creating
     ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in
     Azure]https://learn.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed).
    :vartype key_data: str
    """

    _attribute_map = {
        "path": {"key": "path", "type": "str"},
        "key_data": {"key": "keyData", "type": "str"},
    }

    def __init__(self, *, path: Optional[str] = None, key_data: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword path: Specifies the full path on the created VM where ssh public key is stored. If the
         file already exists, the specified key is appended to the file. Example:
         /home/user/.ssh/authorized_keys.
        :paramtype path: str
        :keyword key_data: SSH public key certificate used to authenticate with the VM through ssh. The
         key needs to be at least 2048-bit and in ssh-rsa format. :code:`<br>`:code:`<br>` For creating
         ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in
         Azure]https://learn.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed).
        :paramtype key_data: str
        """
        super().__init__(**kwargs)
        self.path = path
        self.key_data = key_data


class StorageContainer(TrackedResource):
    """The storage container resource definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure_stack_hci_client.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure_stack_hci_client.models.StorageContainerProperties
    :ivar extended_location: The extendedLocation of the resource.
    :vartype extended_location: ~azure_stack_hci_client.models.ExtendedLocation
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "StorageContainerProperties"},
        "extended_location": {"key": "extendedLocation", "type": "ExtendedLocation"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.StorageContainerProperties"] = None,
        extended_location: Optional["_models.ExtendedLocation"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure_stack_hci_client.models.StorageContainerProperties
        :keyword extended_location: The extendedLocation of the resource.
        :paramtype extended_location: ~azure_stack_hci_client.models.ExtendedLocation
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties
        self.extended_location = extended_location


class StorageContainerArmReference(_serialization.Model):
    """The ARM ID for a Storage Container.

    :ivar id: The ARM ID for a Storage Container.
    :vartype id: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
    }

    def __init__(self, *, id: Optional[str] = None, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: The ARM ID for a Storage Container.
        :paramtype id: str
        """
        super().__init__(**kwargs)
        self.id = id


class StorageContainerListResult(_serialization.Model):
    """The response of a StorageContainer list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The StorageContainer items on this page. Required.
    :vartype value: list[~azure_stack_hci_client.models.StorageContainer]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[StorageContainer]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.StorageContainer"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The StorageContainer items on this page. Required.
        :paramtype value: list[~azure_stack_hci_client.models.StorageContainer]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class StorageContainerProperties(_serialization.Model):
    """Properties under the storage container resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar path: Path of the storage container on the disk. Required.
    :vartype path: str
    :ivar provisioning_state: Provisioning state of the storage container. Known values are:
     "Succeeded", "Failed", "InProgress", "Accepted", "Deleting", and "Canceled".
    :vartype provisioning_state: str or ~azure_stack_hci_client.models.ProvisioningStateEnum
    :ivar status: The observed state of storage containers.
    :vartype status: ~azure_stack_hci_client.models.StorageContainerStatus
    """

    _validation = {
        "path": {"required": True},
        "provisioning_state": {"readonly": True},
        "status": {"readonly": True},
    }

    _attribute_map = {
        "path": {"key": "path", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "status": {"key": "status", "type": "StorageContainerStatus"},
    }

    def __init__(self, *, path: str, **kwargs: Any) -> None:
        """
        :keyword path: Path of the storage container on the disk. Required.
        :paramtype path: str
        """
        super().__init__(**kwargs)
        self.path = path
        self.provisioning_state = None
        self.status = None


class StorageContainerStatus(_serialization.Model):
    """The observed state of storage containers.

    :ivar error_code: StorageContainer provisioning error code.
    :vartype error_code: str
    :ivar error_message: Descriptive error message.
    :vartype error_message: str
    :ivar available_size_mb: Amount of space available on the disk in MB.
    :vartype available_size_mb: int
    :ivar container_size_mb: Total size of the disk in MB.
    :vartype container_size_mb: int
    :ivar provisioning_status: Storage container's provisioning status.
    :vartype provisioning_status:
     ~azure_stack_hci_client.models.StorageContainerStatusProvisioningStatus
    """

    _attribute_map = {
        "error_code": {"key": "errorCode", "type": "str"},
        "error_message": {"key": "errorMessage", "type": "str"},
        "available_size_mb": {"key": "availableSizeMB", "type": "int"},
        "container_size_mb": {"key": "containerSizeMB", "type": "int"},
        "provisioning_status": {"key": "provisioningStatus", "type": "StorageContainerStatusProvisioningStatus"},
    }

    def __init__(
        self,
        *,
        error_code: Optional[str] = None,
        error_message: Optional[str] = None,
        available_size_mb: Optional[int] = None,
        container_size_mb: Optional[int] = None,
        provisioning_status: Optional["_models.StorageContainerStatusProvisioningStatus"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword error_code: StorageContainer provisioning error code.
        :paramtype error_code: str
        :keyword error_message: Descriptive error message.
        :paramtype error_message: str
        :keyword available_size_mb: Amount of space available on the disk in MB.
        :paramtype available_size_mb: int
        :keyword container_size_mb: Total size of the disk in MB.
        :paramtype container_size_mb: int
        :keyword provisioning_status: Storage container's provisioning status.
        :paramtype provisioning_status:
         ~azure_stack_hci_client.models.StorageContainerStatusProvisioningStatus
        """
        super().__init__(**kwargs)
        self.error_code = error_code
        self.error_message = error_message
        self.available_size_mb = available_size_mb
        self.container_size_mb = container_size_mb
        self.provisioning_status = provisioning_status


class StorageContainerStatusProvisioningStatus(_serialization.Model):
    """Storage container provisioning status.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar operation_id: The ID of the operation performed on the storage container.
    :vartype operation_id: str
    :ivar status: The status of the operation performed on the storage container [Succeeded,
     Failed, InProgress]. Known values are: "Succeeded", "Failed", and "InProgress".
    :vartype status: str or ~azure_stack_hci_client.models.Status
    """

    _validation = {
        "status": {"readonly": True},
    }

    _attribute_map = {
        "operation_id": {"key": "operationId", "type": "str"},
        "status": {"key": "status", "type": "str"},
    }

    def __init__(self, *, operation_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword operation_id: The ID of the operation performed on the storage container.
        :paramtype operation_id: str
        """
        super().__init__(**kwargs)
        self.operation_id = operation_id
        self.status = None


class StorageContainersUpdateRequest(_serialization.Model):
    """The storage container resource patch definition.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(self, *, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.tags = tags


class StorageContainerTagsUpdate(_serialization.Model):
    """The type used for updating tags in StorageContainer resources.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(self, *, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.tags = tags


class StorageProfileUpdate(_serialization.Model):
    """Storage profile update.

    :ivar data_disks: adds data disks to the virtual machine instance for the update call.
    :vartype data_disks: list[~azure_stack_hci_client.models.VirtualHardDiskArmReference]
    """

    _attribute_map = {
        "data_disks": {"key": "dataDisks", "type": "[VirtualHardDiskArmReference]"},
    }

    def __init__(
        self, *, data_disks: Optional[List["_models.VirtualHardDiskArmReference"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword data_disks: adds data disks to the virtual machine instance for the update call.
        :paramtype data_disks: list[~azure_stack_hci_client.models.VirtualHardDiskArmReference]
        """
        super().__init__(**kwargs)
        self.data_disks = data_disks


class Subnet(_serialization.Model):
    """Properties of the subnet.

    :ivar properties: Properties of the subnet.
    :vartype properties: ~azure_stack_hci_client.models.SubnetProperties
    :ivar name: Name - The name of the resource that is unique within a resource group. This name
     can be used to access the resource.
    :vartype name: str
    """

    _validation = {
        "name": {"pattern": r"^[a-zA-Z0-9]$|^[a-zA-Z0-9][-._a-zA-Z0-9]{0,78}[_a-zA-Z0-9]$"},
    }

    _attribute_map = {
        "properties": {"key": "properties", "type": "SubnetProperties"},
        "name": {"key": "name", "type": "str"},
    }

    def __init__(
        self, *, properties: Optional["_models.SubnetProperties"] = None, name: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword properties: Properties of the subnet.
        :paramtype properties: ~azure_stack_hci_client.models.SubnetProperties
        :keyword name: Name - The name of the resource that is unique within a resource group. This
         name can be used to access the resource.
        :paramtype name: str
        """
        super().__init__(**kwargs)
        self.properties = properties
        self.name = name


class SubnetIpConfigurationReference(_serialization.Model):
    """The ARM ID for a Network Interface.

    :ivar id: The ARM ID for a Network Interface.
    :vartype id: str
    """

    _attribute_map = {
        "id": {"key": "ID", "type": "str"},
    }

    def __init__(self, *, id: Optional[str] = None, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: The ARM ID for a Network Interface.
        :paramtype id: str
        """
        super().__init__(**kwargs)
        self.id = id


class SubnetProperties(_serialization.Model):
    """Properties of the subnet.

    :ivar address_prefix: The address prefix for the subnet: Cidr for this subnet - IPv4, IPv6.
    :vartype address_prefix: str
    :ivar address_prefixes: List of address prefixes for the subnet.
    :vartype address_prefixes: list[str]
    :ivar ip_allocation_method: IPAllocationMethod - The IP address allocation method. Possible
     values include: 'Static', 'Dynamic'. Known values are: "Dynamic" and "Static".
    :vartype ip_allocation_method: str or ~azure_stack_hci_client.models.IpAllocationMethodEnum
    :ivar ip_configuration_references: IPConfigurationReferences - list of
     IPConfigurationReferences.
    :vartype ip_configuration_references:
     list[~azure_stack_hci_client.models.SubnetIpConfigurationReference]
    :ivar network_security_group: NetworkSecurityGroup - Network Security Group attached to the
     logical network.
    :vartype network_security_group:
     ~azure_stack_hci_client.models.NetworkSecurityGroupArmReference
    :ivar route_table: Route table resource.
    :vartype route_table: ~azure_stack_hci_client.models.RouteTable
    :ivar ip_pools: network associated pool of IP Addresses.
    :vartype ip_pools: list[~azure_stack_hci_client.models.IPPool]
    :ivar vlan: Vlan to use for the subnet.
    :vartype vlan: int
    """

    _attribute_map = {
        "address_prefix": {"key": "addressPrefix", "type": "str"},
        "address_prefixes": {"key": "addressPrefixes", "type": "[str]"},
        "ip_allocation_method": {"key": "ipAllocationMethod", "type": "str"},
        "ip_configuration_references": {"key": "ipConfigurationReferences", "type": "[SubnetIpConfigurationReference]"},
        "network_security_group": {"key": "networkSecurityGroup", "type": "NetworkSecurityGroupArmReference"},
        "route_table": {"key": "routeTable", "type": "RouteTable"},
        "ip_pools": {"key": "ipPools", "type": "[IPPool]"},
        "vlan": {"key": "vlan", "type": "int"},
    }

    def __init__(
        self,
        *,
        address_prefix: Optional[str] = None,
        address_prefixes: Optional[List[str]] = None,
        ip_allocation_method: Optional[Union[str, "_models.IpAllocationMethodEnum"]] = None,
        ip_configuration_references: Optional[List["_models.SubnetIpConfigurationReference"]] = None,
        network_security_group: Optional["_models.NetworkSecurityGroupArmReference"] = None,
        route_table: Optional["_models.RouteTable"] = None,
        ip_pools: Optional[List["_models.IPPool"]] = None,
        vlan: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword address_prefix: The address prefix for the subnet: Cidr for this subnet - IPv4, IPv6.
        :paramtype address_prefix: str
        :keyword address_prefixes: List of address prefixes for the subnet.
        :paramtype address_prefixes: list[str]
        :keyword ip_allocation_method: IPAllocationMethod - The IP address allocation method. Possible
         values include: 'Static', 'Dynamic'. Known values are: "Dynamic" and "Static".
        :paramtype ip_allocation_method: str or ~azure_stack_hci_client.models.IpAllocationMethodEnum
        :keyword ip_configuration_references: IPConfigurationReferences - list of
         IPConfigurationReferences.
        :paramtype ip_configuration_references:
         list[~azure_stack_hci_client.models.SubnetIpConfigurationReference]
        :keyword network_security_group: NetworkSecurityGroup - Network Security Group attached to the
         logical network.
        :paramtype network_security_group:
         ~azure_stack_hci_client.models.NetworkSecurityGroupArmReference
        :keyword route_table: Route table resource.
        :paramtype route_table: ~azure_stack_hci_client.models.RouteTable
        :keyword ip_pools: network associated pool of IP Addresses.
        :paramtype ip_pools: list[~azure_stack_hci_client.models.IPPool]
        :keyword vlan: Vlan to use for the subnet.
        :paramtype vlan: int
        """
        super().__init__(**kwargs)
        self.address_prefix = address_prefix
        self.address_prefixes = address_prefixes
        self.ip_allocation_method = ip_allocation_method
        self.ip_configuration_references = ip_configuration_references
        self.network_security_group = network_security_group
        self.route_table = route_table
        self.ip_pools = ip_pools
        self.vlan = vlan


class SystemData(_serialization.Model):
    """Metadata pertaining to creation and last modification of the resource.

    :ivar created_by: The identity that created the resource.
    :vartype created_by: str
    :ivar created_by_type: The type of identity that created the resource. Known values are:
     "User", "Application", "ManagedIdentity", and "Key".
    :vartype created_by_type: str or ~azure_stack_hci_client.models.CreatedByType
    :ivar created_at: The timestamp of resource creation (UTC).
    :vartype created_at: ~datetime.datetime
    :ivar last_modified_by: The identity that last modified the resource.
    :vartype last_modified_by: str
    :ivar last_modified_by_type: The type of identity that last modified the resource. Known values
     are: "User", "Application", "ManagedIdentity", and "Key".
    :vartype last_modified_by_type: str or ~azure_stack_hci_client.models.CreatedByType
    :ivar last_modified_at: The timestamp of resource last modification (UTC).
    :vartype last_modified_at: ~datetime.datetime
    """

    _attribute_map = {
        "created_by": {"key": "createdBy", "type": "str"},
        "created_by_type": {"key": "createdByType", "type": "str"},
        "created_at": {"key": "createdAt", "type": "iso-8601"},
        "last_modified_by": {"key": "lastModifiedBy", "type": "str"},
        "last_modified_by_type": {"key": "lastModifiedByType", "type": "str"},
        "last_modified_at": {"key": "lastModifiedAt", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        created_by: Optional[str] = None,
        created_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        created_at: Optional[datetime.datetime] = None,
        last_modified_by: Optional[str] = None,
        last_modified_by_type: Optional[Union[str, "_models.CreatedByType"]] = None,
        last_modified_at: Optional[datetime.datetime] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword created_by: The identity that created the resource.
        :paramtype created_by: str
        :keyword created_by_type: The type of identity that created the resource. Known values are:
         "User", "Application", "ManagedIdentity", and "Key".
        :paramtype created_by_type: str or ~azure_stack_hci_client.models.CreatedByType
        :keyword created_at: The timestamp of resource creation (UTC).
        :paramtype created_at: ~datetime.datetime
        :keyword last_modified_by: The identity that last modified the resource.
        :paramtype last_modified_by: str
        :keyword last_modified_by_type: The type of identity that last modified the resource. Known
         values are: "User", "Application", "ManagedIdentity", and "Key".
        :paramtype last_modified_by_type: str or ~azure_stack_hci_client.models.CreatedByType
        :keyword last_modified_at: The timestamp of resource last modification (UTC).
        :paramtype last_modified_at: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.created_by = created_by
        self.created_by_type = created_by_type
        self.created_at = created_at
        self.last_modified_by = last_modified_by
        self.last_modified_by_type = last_modified_by_type
        self.last_modified_at = last_modified_at


class TagsObject(_serialization.Model):
    """Tags object for patch operations.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(self, *, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.tags = tags


class UserAssignedIdentity(_serialization.Model):
    """User assigned identity properties.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar principal_id: The principal ID of the assigned identity.
    :vartype principal_id: str
    :ivar client_id: The client ID of the assigned identity.
    :vartype client_id: str
    """

    _validation = {
        "principal_id": {"readonly": True},
        "client_id": {"readonly": True},
    }

    _attribute_map = {
        "principal_id": {"key": "principalId", "type": "str"},
        "client_id": {"key": "clientId", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.principal_id = None
        self.client_id = None


class VirtualHardDisk(TrackedResource):
    """The virtual hard disk resource definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure_stack_hci_client.models.SystemData
    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    :ivar location: The geo-location where the resource lives. Required.
    :vartype location: str
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure_stack_hci_client.models.VirtualHardDiskProperties
    :ivar extended_location: The extendedLocation of the resource.
    :vartype extended_location: ~azure_stack_hci_client.models.ExtendedLocation
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
        "location": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "tags": {"key": "tags", "type": "{str}"},
        "location": {"key": "location", "type": "str"},
        "properties": {"key": "properties", "type": "VirtualHardDiskProperties"},
        "extended_location": {"key": "extendedLocation", "type": "ExtendedLocation"},
    }

    def __init__(
        self,
        *,
        location: str,
        tags: Optional[Dict[str, str]] = None,
        properties: Optional["_models.VirtualHardDiskProperties"] = None,
        extended_location: Optional["_models.ExtendedLocation"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        :keyword location: The geo-location where the resource lives. Required.
        :paramtype location: str
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure_stack_hci_client.models.VirtualHardDiskProperties
        :keyword extended_location: The extendedLocation of the resource.
        :paramtype extended_location: ~azure_stack_hci_client.models.ExtendedLocation
        """
        super().__init__(tags=tags, location=location, **kwargs)
        self.properties = properties
        self.extended_location = extended_location


class VirtualHardDiskArmReference(_serialization.Model):
    """The ARM ID for a Virtual Hard Disk.

    :ivar id: The ARM ID for a Virtual Hard Disk.
    :vartype id: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
    }

    def __init__(self, *, id: Optional[str] = None, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: The ARM ID for a Virtual Hard Disk.
        :paramtype id: str
        """
        super().__init__(**kwargs)
        self.id = id


class VirtualHardDiskDownloadStatus(_serialization.Model):
    """The download status of the virtual hard disk.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar downloaded_size_in_mb: The downloaded sized of the virtual hard disk in MB.
    :vartype downloaded_size_in_mb: int
    :ivar status: The status of Uploading virtual hard disk [Succeeded, Failed, InProgress]. Known
     values are: "Succeeded", "Failed", and "InProgress".
    :vartype status: str or ~azure_stack_hci_client.models.Status
    :ivar progress_percentage: The progress of the operation in percentage.
    :vartype progress_percentage: int
    """

    _validation = {
        "status": {"readonly": True},
        "progress_percentage": {"maximum": 100, "minimum": 0},
    }

    _attribute_map = {
        "downloaded_size_in_mb": {"key": "downloadedSizeInMB", "type": "int"},
        "status": {"key": "status", "type": "str"},
        "progress_percentage": {"key": "progressPercentage", "type": "int"},
    }

    def __init__(
        self, *, downloaded_size_in_mb: Optional[int] = None, progress_percentage: Optional[int] = None, **kwargs: Any
    ) -> None:
        """
        :keyword downloaded_size_in_mb: The downloaded sized of the virtual hard disk in MB.
        :paramtype downloaded_size_in_mb: int
        :keyword progress_percentage: The progress of the operation in percentage.
        :paramtype progress_percentage: int
        """
        super().__init__(**kwargs)
        self.downloaded_size_in_mb = downloaded_size_in_mb
        self.status = None
        self.progress_percentage = progress_percentage


class VirtualHardDiskListResult(_serialization.Model):
    """The response of a VirtualHardDisk list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The VirtualHardDisk items on this page. Required.
    :vartype value: list[~azure_stack_hci_client.models.VirtualHardDisk]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[VirtualHardDisk]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.VirtualHardDisk"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The VirtualHardDisk items on this page. Required.
        :paramtype value: list[~azure_stack_hci_client.models.VirtualHardDisk]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class VirtualHardDiskProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Properties under the virtual hard disk resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar block_size_bytes: Block size in bytes.
    :vartype block_size_bytes: int
    :ivar disk_size_gb: Size of the disk in GB.
    :vartype disk_size_gb: int
    :ivar dynamic: Boolean for enabling dynamic sizing on the virtual hard disk.
    :vartype dynamic: bool
    :ivar logical_sector_bytes: Logical sector in bytes.
    :vartype logical_sector_bytes: int
    :ivar physical_sector_bytes: Physical sector in bytes.
    :vartype physical_sector_bytes: int
    :ivar download_url: URL for downloading or accessing the virtual hard disk. This URL points to
     a secure link from where the VHD can be downloaded or accessed directly.
    :vartype download_url: str
    :ivar hyper_v_generation: The hypervisor generation of the Virtual Machine [V1, V2]. Known
     values are: "V1" and "V2".
    :vartype hyper_v_generation: str or ~azure_stack_hci_client.models.HyperVGeneration
    :ivar disk_file_format: The format of the actual VHD file [vhd, vhdx]. Known values are: "vhdx"
     and "vhd".
    :vartype disk_file_format: str or ~azure_stack_hci_client.models.DiskFileFormat
    :ivar provisioning_state: Provisioning state of the virtual hard disk. Known values are:
     "Succeeded", "Failed", "InProgress", "Accepted", "Deleting", and "Canceled".
    :vartype provisioning_state: str or ~azure_stack_hci_client.models.ProvisioningStateEnum
    :ivar container_id: Storage ContainerID of the storage container to be used for VHD.
    :vartype container_id: str
    :ivar status: The observed state of virtual hard disks.
    :vartype status: ~azure_stack_hci_client.models.VirtualHardDiskStatus
    """

    _validation = {
        "provisioning_state": {"readonly": True},
        "status": {"readonly": True},
    }

    _attribute_map = {
        "block_size_bytes": {"key": "blockSizeBytes", "type": "int"},
        "disk_size_gb": {"key": "diskSizeGB", "type": "int"},
        "dynamic": {"key": "dynamic", "type": "bool"},
        "logical_sector_bytes": {"key": "logicalSectorBytes", "type": "int"},
        "physical_sector_bytes": {"key": "physicalSectorBytes", "type": "int"},
        "download_url": {"key": "downloadUrl", "type": "str"},
        "hyper_v_generation": {"key": "hyperVGeneration", "type": "str"},
        "disk_file_format": {"key": "diskFileFormat", "type": "str"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "container_id": {"key": "containerId", "type": "str"},
        "status": {"key": "status", "type": "VirtualHardDiskStatus"},
    }

    def __init__(
        self,
        *,
        block_size_bytes: Optional[int] = None,
        disk_size_gb: Optional[int] = None,
        dynamic: Optional[bool] = None,
        logical_sector_bytes: Optional[int] = None,
        physical_sector_bytes: Optional[int] = None,
        download_url: Optional[str] = None,
        hyper_v_generation: Optional[Union[str, "_models.HyperVGeneration"]] = None,
        disk_file_format: Optional[Union[str, "_models.DiskFileFormat"]] = None,
        container_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword block_size_bytes: Block size in bytes.
        :paramtype block_size_bytes: int
        :keyword disk_size_gb: Size of the disk in GB.
        :paramtype disk_size_gb: int
        :keyword dynamic: Boolean for enabling dynamic sizing on the virtual hard disk.
        :paramtype dynamic: bool
        :keyword logical_sector_bytes: Logical sector in bytes.
        :paramtype logical_sector_bytes: int
        :keyword physical_sector_bytes: Physical sector in bytes.
        :paramtype physical_sector_bytes: int
        :keyword download_url: URL for downloading or accessing the virtual hard disk. This URL points
         to a secure link from where the VHD can be downloaded or accessed directly.
        :paramtype download_url: str
        :keyword hyper_v_generation: The hypervisor generation of the Virtual Machine [V1, V2]. Known
         values are: "V1" and "V2".
        :paramtype hyper_v_generation: str or ~azure_stack_hci_client.models.HyperVGeneration
        :keyword disk_file_format: The format of the actual VHD file [vhd, vhdx]. Known values are:
         "vhdx" and "vhd".
        :paramtype disk_file_format: str or ~azure_stack_hci_client.models.DiskFileFormat
        :keyword container_id: Storage ContainerID of the storage container to be used for VHD.
        :paramtype container_id: str
        """
        super().__init__(**kwargs)
        self.block_size_bytes = block_size_bytes
        self.disk_size_gb = disk_size_gb
        self.dynamic = dynamic
        self.logical_sector_bytes = logical_sector_bytes
        self.physical_sector_bytes = physical_sector_bytes
        self.download_url = download_url
        self.hyper_v_generation = hyper_v_generation
        self.disk_file_format = disk_file_format
        self.provisioning_state = None
        self.container_id = container_id
        self.status = None


class VirtualHardDiskStatus(_serialization.Model):
    """The observed state of virtual hard disks.

    :ivar error_code: VirtualHardDisk provisioning error code.
    :vartype error_code: str
    :ivar error_message: Descriptive error message.
    :vartype error_message: str
    :ivar provisioning_status: Provisioning status of the vhd.
    :vartype provisioning_status:
     ~azure_stack_hci_client.models.VirtualHardDiskStatusProvisioningStatus
    :ivar download_status: The download status of the virtual hard disk.
    :vartype download_status: ~azure_stack_hci_client.models.VirtualHardDiskDownloadStatus
    :ivar upload_status: The upload status of the virtual hard disk.
    :vartype upload_status: ~azure_stack_hci_client.models.VirtualHardDiskUploadStatus
    """

    _attribute_map = {
        "error_code": {"key": "errorCode", "type": "str"},
        "error_message": {"key": "errorMessage", "type": "str"},
        "provisioning_status": {"key": "provisioningStatus", "type": "VirtualHardDiskStatusProvisioningStatus"},
        "download_status": {"key": "downloadStatus", "type": "VirtualHardDiskDownloadStatus"},
        "upload_status": {"key": "uploadStatus", "type": "VirtualHardDiskUploadStatus"},
    }

    def __init__(
        self,
        *,
        error_code: Optional[str] = None,
        error_message: Optional[str] = None,
        provisioning_status: Optional["_models.VirtualHardDiskStatusProvisioningStatus"] = None,
        download_status: Optional["_models.VirtualHardDiskDownloadStatus"] = None,
        upload_status: Optional["_models.VirtualHardDiskUploadStatus"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword error_code: VirtualHardDisk provisioning error code.
        :paramtype error_code: str
        :keyword error_message: Descriptive error message.
        :paramtype error_message: str
        :keyword provisioning_status: Provisioning status of the vhd.
        :paramtype provisioning_status:
         ~azure_stack_hci_client.models.VirtualHardDiskStatusProvisioningStatus
        :keyword download_status: The download status of the virtual hard disk.
        :paramtype download_status: ~azure_stack_hci_client.models.VirtualHardDiskDownloadStatus
        :keyword upload_status: The upload status of the virtual hard disk.
        :paramtype upload_status: ~azure_stack_hci_client.models.VirtualHardDiskUploadStatus
        """
        super().__init__(**kwargs)
        self.error_code = error_code
        self.error_message = error_message
        self.provisioning_status = provisioning_status
        self.download_status = download_status
        self.upload_status = upload_status


class VirtualHardDiskStatusProvisioningStatus(_serialization.Model):
    """VHD Status provisioning status.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar operation_id: The ID of the operation performed on the virtual hard disk.
    :vartype operation_id: str
    :ivar status: The status of the operation performed on the virtual hard disk [Succeeded,
     Failed, InProgress]. Known values are: "Succeeded", "Failed", and "InProgress".
    :vartype status: str or ~azure_stack_hci_client.models.Status
    """

    _validation = {
        "status": {"readonly": True},
    }

    _attribute_map = {
        "operation_id": {"key": "operationId", "type": "str"},
        "status": {"key": "status", "type": "str"},
    }

    def __init__(self, *, operation_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword operation_id: The ID of the operation performed on the virtual hard disk.
        :paramtype operation_id: str
        """
        super().__init__(**kwargs)
        self.operation_id = operation_id
        self.status = None


class VirtualHardDisksUpdateRequest(_serialization.Model):
    """The virtual hard disk resource patch definition.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(self, *, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.tags = tags


class VirtualHardDiskTagsUpdate(_serialization.Model):
    """The type used for updating tags in VirtualHardDisk resources.

    :ivar tags: Resource tags.
    :vartype tags: dict[str, str]
    """

    _attribute_map = {
        "tags": {"key": "tags", "type": "{str}"},
    }

    def __init__(self, *, tags: Optional[Dict[str, str]] = None, **kwargs: Any) -> None:
        """
        :keyword tags: Resource tags.
        :paramtype tags: dict[str, str]
        """
        super().__init__(**kwargs)
        self.tags = tags


class VirtualHardDiskUploadRequest(_serialization.Model):
    """Request for uploading virtual hard disk.

    All required parameters must be populated in order to send to server.

    :ivar azure_managed_disk_upload_url: The Azure managed disk SAS URL to upload the virtual hard
     disk to. Required.
    :vartype azure_managed_disk_upload_url: str
    """

    _validation = {
        "azure_managed_disk_upload_url": {"required": True},
    }

    _attribute_map = {
        "azure_managed_disk_upload_url": {"key": "azureManagedDiskUploadUrl", "type": "str"},
    }

    def __init__(self, *, azure_managed_disk_upload_url: str, **kwargs: Any) -> None:
        """
        :keyword azure_managed_disk_upload_url: The Azure managed disk SAS URL to upload the virtual
         hard disk to. Required.
        :paramtype azure_managed_disk_upload_url: str
        """
        super().__init__(**kwargs)
        self.azure_managed_disk_upload_url = azure_managed_disk_upload_url


class VirtualHardDiskUploadResponse(_serialization.Model):
    """Response for uploading virtual hard disk.

    :ivar virtual_hard_disk_id: The ARM ID for a Virtual Hard Disk.
    :vartype virtual_hard_disk_id: str
    :ivar upload_status: The upload status of the virtual hard disk.
    :vartype upload_status: ~azure_stack_hci_client.models.VirtualHardDiskUploadStatus
    """

    _attribute_map = {
        "virtual_hard_disk_id": {"key": "virtualHardDiskId", "type": "str"},
        "upload_status": {"key": "uploadStatus", "type": "VirtualHardDiskUploadStatus"},
    }

    def __init__(
        self,
        *,
        virtual_hard_disk_id: Optional[str] = None,
        upload_status: Optional["_models.VirtualHardDiskUploadStatus"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword virtual_hard_disk_id: The ARM ID for a Virtual Hard Disk.
        :paramtype virtual_hard_disk_id: str
        :keyword upload_status: The upload status of the virtual hard disk.
        :paramtype upload_status: ~azure_stack_hci_client.models.VirtualHardDiskUploadStatus
        """
        super().__init__(**kwargs)
        self.virtual_hard_disk_id = virtual_hard_disk_id
        self.upload_status = upload_status


class VirtualHardDiskUploadStatus(_serialization.Model):
    """The upload status of the virtual hard disk.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar uploaded_size_in_mb: The uploaded sized of the virtual hard disk in MB.
    :vartype uploaded_size_in_mb: int
    :ivar status: The status of Uploading virtual hard disk [Succeeded, Failed, InProgress]. Known
     values are: "Succeeded", "Failed", and "InProgress".
    :vartype status: str or ~azure_stack_hci_client.models.Status
    :ivar progress_percentage: The progress of the operation in percentage.
    :vartype progress_percentage: int
    :ivar error_code: VirtualHardDisk upload error code.
    :vartype error_code: str
    :ivar error_message: Descriptive upload error message.
    :vartype error_message: str
    """

    _validation = {
        "status": {"readonly": True},
        "progress_percentage": {"maximum": 100, "minimum": 0},
    }

    _attribute_map = {
        "uploaded_size_in_mb": {"key": "uploadedSizeInMB", "type": "int"},
        "status": {"key": "status", "type": "str"},
        "progress_percentage": {"key": "progressPercentage", "type": "int"},
        "error_code": {"key": "errorCode", "type": "str"},
        "error_message": {"key": "errorMessage", "type": "str"},
    }

    def __init__(
        self,
        *,
        uploaded_size_in_mb: Optional[int] = None,
        progress_percentage: Optional[int] = None,
        error_code: Optional[str] = None,
        error_message: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword uploaded_size_in_mb: The uploaded sized of the virtual hard disk in MB.
        :paramtype uploaded_size_in_mb: int
        :keyword progress_percentage: The progress of the operation in percentage.
        :paramtype progress_percentage: int
        :keyword error_code: VirtualHardDisk upload error code.
        :paramtype error_code: str
        :keyword error_message: Descriptive upload error message.
        :paramtype error_message: str
        """
        super().__init__(**kwargs)
        self.uploaded_size_in_mb = uploaded_size_in_mb
        self.status = None
        self.progress_percentage = progress_percentage
        self.error_code = error_code
        self.error_message = error_message


class VirtualMachineArmReference(_serialization.Model):
    """The ARM ID for a Virtual Machine.

    :ivar id: The ARM ID for a Virtual Machine.
    :vartype id: str
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
    }

    def __init__(self, *, id: Optional[str] = None, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: The ARM ID for a Virtual Machine.
        :paramtype id: str
        """
        super().__init__(**kwargs)
        self.id = id


class VirtualMachineConfigAgentInstanceView(_serialization.Model):
    """The instance view of the VM Config Agent running on the virtual machine.

    :ivar vm_config_agent_version: The VM Config Agent full version.
    :vartype vm_config_agent_version: str
    :ivar statuses: The resource status information.
    :vartype statuses: list[~azure_stack_hci_client.models.InstanceViewStatus]
    """

    _attribute_map = {
        "vm_config_agent_version": {"key": "vmConfigAgentVersion", "type": "str"},
        "statuses": {"key": "statuses", "type": "[InstanceViewStatus]"},
    }

    def __init__(
        self,
        *,
        vm_config_agent_version: Optional[str] = None,
        statuses: Optional[List["_models.InstanceViewStatus"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword vm_config_agent_version: The VM Config Agent full version.
        :paramtype vm_config_agent_version: str
        :keyword statuses: The resource status information.
        :paramtype statuses: list[~azure_stack_hci_client.models.InstanceViewStatus]
        """
        super().__init__(**kwargs)
        self.vm_config_agent_version = vm_config_agent_version
        self.statuses = statuses


class VirtualMachineInstance(ProxyResource):
    """The virtual machine instance resource definition.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar id: Fully qualified resource ID for the resource. E.g.
     "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}".  # pylint: disable=line-too-long
    :vartype id: str
    :ivar name: The name of the resource.
    :vartype name: str
    :ivar type: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
     "Microsoft.Storage/storageAccounts".
    :vartype type: str
    :ivar system_data: Azure Resource Manager metadata containing createdBy and modifiedBy
     information.
    :vartype system_data: ~azure_stack_hci_client.models.SystemData
    :ivar properties: The resource-specific properties for this resource.
    :vartype properties: ~azure_stack_hci_client.models.VirtualMachineInstanceProperties
    :ivar extended_location: The extendedLocation of the resource.
    :vartype extended_location: ~azure_stack_hci_client.models.ExtendedLocation
    :ivar identity: The managed service identities assigned to this resource.
    :vartype identity: ~azure_stack_hci_client.models.ManagedServiceIdentity
    """

    _validation = {
        "id": {"readonly": True},
        "name": {"readonly": True},
        "type": {"readonly": True},
        "system_data": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "system_data": {"key": "systemData", "type": "SystemData"},
        "properties": {"key": "properties", "type": "VirtualMachineInstanceProperties"},
        "extended_location": {"key": "extendedLocation", "type": "ExtendedLocation"},
        "identity": {"key": "identity", "type": "ManagedServiceIdentity"},
    }

    def __init__(
        self,
        *,
        properties: Optional["_models.VirtualMachineInstanceProperties"] = None,
        extended_location: Optional["_models.ExtendedLocation"] = None,
        identity: Optional["_models.ManagedServiceIdentity"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword properties: The resource-specific properties for this resource.
        :paramtype properties: ~azure_stack_hci_client.models.VirtualMachineInstanceProperties
        :keyword extended_location: The extendedLocation of the resource.
        :paramtype extended_location: ~azure_stack_hci_client.models.ExtendedLocation
        :keyword identity: The managed service identities assigned to this resource.
        :paramtype identity: ~azure_stack_hci_client.models.ManagedServiceIdentity
        """
        super().__init__(**kwargs)
        self.properties = properties
        self.extended_location = extended_location
        self.identity = identity


class VirtualMachineInstanceListResult(_serialization.Model):
    """The response of a VirtualMachineInstance list operation.

    All required parameters must be populated in order to send to server.

    :ivar value: The VirtualMachineInstance items on this page. Required.
    :vartype value: list[~azure_stack_hci_client.models.VirtualMachineInstance]
    :ivar next_link: The link to the next page of items.
    :vartype next_link: str
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[VirtualMachineInstance]"},
        "next_link": {"key": "nextLink", "type": "str"},
    }

    def __init__(
        self, *, value: List["_models.VirtualMachineInstance"], next_link: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword value: The VirtualMachineInstance items on this page. Required.
        :paramtype value: list[~azure_stack_hci_client.models.VirtualMachineInstance]
        :keyword next_link: The link to the next page of items.
        :paramtype next_link: str
        """
        super().__init__(**kwargs)
        self.value = value
        self.next_link = next_link


class VirtualMachineInstanceManagedDiskParameters(_serialization.Model):  # pylint: disable=name-too-long
    """The parameters of a managed disk.

    :ivar security_profile: Specifies the security profile for the managed disk.
    :vartype security_profile: ~azure_stack_hci_client.models.VMDiskSecurityProfile
    """

    _attribute_map = {
        "security_profile": {"key": "securityProfile", "type": "VMDiskSecurityProfile"},
    }

    def __init__(self, *, security_profile: Optional["_models.VMDiskSecurityProfile"] = None, **kwargs: Any) -> None:
        """
        :keyword security_profile: Specifies the security profile for the managed disk.
        :paramtype security_profile: ~azure_stack_hci_client.models.VMDiskSecurityProfile
        """
        super().__init__(**kwargs)
        self.security_profile = security_profile


class VirtualMachineInstanceProperties(_serialization.Model):  # pylint: disable=too-many-instance-attributes
    """Properties under the virtual machine instance resource.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar hardware_profile: HardwareProfile - Specifies the hardware settings for the virtual
     machine instance.
    :vartype hardware_profile:
     ~azure_stack_hci_client.models.VirtualMachineInstancePropertiesHardwareProfile
    :ivar network_profile: NetworkProfile - describes the network configuration the virtual machine
     instance.
    :vartype network_profile:
     ~azure_stack_hci_client.models.VirtualMachineInstancePropertiesNetworkProfile
    :ivar os_profile: OsProfile - describes the configuration of the operating system and sets
     login data.
    :vartype os_profile: ~azure_stack_hci_client.models.VirtualMachineInstancePropertiesOsProfile
    :ivar security_profile: SecurityProfile - Specifies the security settings for the virtual
     machine instance.
    :vartype security_profile:
     ~azure_stack_hci_client.models.VirtualMachineInstancePropertiesSecurityProfile
    :ivar storage_profile: StorageProfile - contains information about the disks and storage
     information for the virtual machine instance.
    :vartype storage_profile:
     ~azure_stack_hci_client.models.VirtualMachineInstancePropertiesStorageProfile
    :ivar http_proxy_config: HTTP Proxy configuration for the VM.
    :vartype http_proxy_config: ~azure_stack_hci_client.models.HttpProxyConfiguration
    :ivar provisioning_state: Provisioning state of the virtual machine instance. Known values are:
     "Succeeded", "Failed", "InProgress", "Accepted", "Deleting", and "Canceled".
    :vartype provisioning_state: str or ~azure_stack_hci_client.models.ProvisioningStateEnum
    :ivar instance_view: The virtual machine instance view.
    :vartype instance_view: ~azure_stack_hci_client.models.VirtualMachineInstanceView
    :ivar status: The observed state of virtual machine instances.
    :vartype status: ~azure_stack_hci_client.models.VirtualMachineInstanceStatus
    :ivar guest_agent_install_status: Guest agent install status.
    :vartype guest_agent_install_status: ~azure_stack_hci_client.models.GuestAgentInstallStatus
    :ivar vm_id: Unique identifier for the vm resource.
    :vartype vm_id: str
    :ivar resource_uid: Unique identifier defined by ARC to identify the guest of the VM.
    :vartype resource_uid: str
    """

    _validation = {
        "provisioning_state": {"readonly": True},
        "instance_view": {"readonly": True},
        "status": {"readonly": True},
        "vm_id": {"readonly": True},
    }

    _attribute_map = {
        "hardware_profile": {"key": "hardwareProfile", "type": "VirtualMachineInstancePropertiesHardwareProfile"},
        "network_profile": {"key": "networkProfile", "type": "VirtualMachineInstancePropertiesNetworkProfile"},
        "os_profile": {"key": "osProfile", "type": "VirtualMachineInstancePropertiesOsProfile"},
        "security_profile": {"key": "securityProfile", "type": "VirtualMachineInstancePropertiesSecurityProfile"},
        "storage_profile": {"key": "storageProfile", "type": "VirtualMachineInstancePropertiesStorageProfile"},
        "http_proxy_config": {"key": "httpProxyConfig", "type": "HttpProxyConfiguration"},
        "provisioning_state": {"key": "provisioningState", "type": "str"},
        "instance_view": {"key": "instanceView", "type": "VirtualMachineInstanceView"},
        "status": {"key": "status", "type": "VirtualMachineInstanceStatus"},
        "guest_agent_install_status": {"key": "guestAgentInstallStatus", "type": "GuestAgentInstallStatus"},
        "vm_id": {"key": "vmId", "type": "str"},
        "resource_uid": {"key": "resourceUid", "type": "str"},
    }

    def __init__(
        self,
        *,
        hardware_profile: Optional["_models.VirtualMachineInstancePropertiesHardwareProfile"] = None,
        network_profile: Optional["_models.VirtualMachineInstancePropertiesNetworkProfile"] = None,
        os_profile: Optional["_models.VirtualMachineInstancePropertiesOsProfile"] = None,
        security_profile: Optional["_models.VirtualMachineInstancePropertiesSecurityProfile"] = None,
        storage_profile: Optional["_models.VirtualMachineInstancePropertiesStorageProfile"] = None,
        http_proxy_config: Optional["_models.HttpProxyConfiguration"] = None,
        guest_agent_install_status: Optional["_models.GuestAgentInstallStatus"] = None,
        resource_uid: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword hardware_profile: HardwareProfile - Specifies the hardware settings for the virtual
         machine instance.
        :paramtype hardware_profile:
         ~azure_stack_hci_client.models.VirtualMachineInstancePropertiesHardwareProfile
        :keyword network_profile: NetworkProfile - describes the network configuration the virtual
         machine instance.
        :paramtype network_profile:
         ~azure_stack_hci_client.models.VirtualMachineInstancePropertiesNetworkProfile
        :keyword os_profile: OsProfile - describes the configuration of the operating system and sets
         login data.
        :paramtype os_profile: ~azure_stack_hci_client.models.VirtualMachineInstancePropertiesOsProfile
        :keyword security_profile: SecurityProfile - Specifies the security settings for the virtual
         machine instance.
        :paramtype security_profile:
         ~azure_stack_hci_client.models.VirtualMachineInstancePropertiesSecurityProfile
        :keyword storage_profile: StorageProfile - contains information about the disks and storage
         information for the virtual machine instance.
        :paramtype storage_profile:
         ~azure_stack_hci_client.models.VirtualMachineInstancePropertiesStorageProfile
        :keyword http_proxy_config: HTTP Proxy configuration for the VM.
        :paramtype http_proxy_config: ~azure_stack_hci_client.models.HttpProxyConfiguration
        :keyword guest_agent_install_status: Guest agent install status.
        :paramtype guest_agent_install_status: ~azure_stack_hci_client.models.GuestAgentInstallStatus
        :keyword resource_uid: Unique identifier defined by ARC to identify the guest of the VM.
        :paramtype resource_uid: str
        """
        super().__init__(**kwargs)
        self.hardware_profile = hardware_profile
        self.network_profile = network_profile
        self.os_profile = os_profile
        self.security_profile = security_profile
        self.storage_profile = storage_profile
        self.http_proxy_config = http_proxy_config
        self.provisioning_state = None
        self.instance_view = None
        self.status = None
        self.guest_agent_install_status = guest_agent_install_status
        self.vm_id = None
        self.resource_uid = resource_uid


class VirtualMachineInstancePropertiesHardwareProfile(_serialization.Model):  # pylint: disable=name-too-long
    """HardwareProfile - Specifies the hardware settings for the virtual machine instance.

    :ivar vm_size: Enum of VM Sizes. Known values are: "Default", "Standard_A2_v2",
     "Standard_A4_v2", "Standard_D2s_v3", "Standard_D4s_v3", "Standard_D8s_v3", "Standard_D16s_v3",
     "Standard_D32s_v3", "Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_DS5_v2",
     "Standard_DS13_v2", "Standard_K8S_v1", "Standard_K8S2_v1", "Standard_K8S3_v1",
     "Standard_K8S4_v1", "Standard_NK6", "Standard_NK12", "Standard_NV6", "Standard_NV12",
     "Standard_K8S5_v1", and "Custom".
    :vartype vm_size: str or ~azure_stack_hci_client.models.VmSizeEnum
    :ivar processors: number of processors for the virtual machine instance.
    :vartype processors: int
    :ivar memory_mb: RAM in MB for the virtual machine instance.
    :vartype memory_mb: int
    :ivar dynamic_memory_config: Dynamic memory config.
    :vartype dynamic_memory_config:
     ~azure_stack_hci_client.models.VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig
    :ivar virtual_machine_gp_us: virtualMachineGPUs - list of gpus to be attached to the virtual
     machine instance.
    :vartype virtual_machine_gp_us:
     list[~azure_stack_hci_client.models.VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU]
    """

    _attribute_map = {
        "vm_size": {"key": "vmSize", "type": "str"},
        "processors": {"key": "processors", "type": "int"},
        "memory_mb": {"key": "memoryMB", "type": "int"},
        "dynamic_memory_config": {
            "key": "dynamicMemoryConfig",
            "type": "VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig",
        },
        "virtual_machine_gp_us": {
            "key": "virtualMachineGPUs",
            "type": "[VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU]",
        },
    }

    def __init__(
        self,
        *,
        vm_size: Optional[Union[str, "_models.VmSizeEnum"]] = None,
        processors: Optional[int] = None,
        memory_mb: Optional[int] = None,
        dynamic_memory_config: Optional[
            "_models.VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig"
        ] = None,
        virtual_machine_gp_us: Optional[
            List["_models.VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU"]
        ] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword vm_size: Enum of VM Sizes. Known values are: "Default", "Standard_A2_v2",
         "Standard_A4_v2", "Standard_D2s_v3", "Standard_D4s_v3", "Standard_D8s_v3", "Standard_D16s_v3",
         "Standard_D32s_v3", "Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_DS5_v2",
         "Standard_DS13_v2", "Standard_K8S_v1", "Standard_K8S2_v1", "Standard_K8S3_v1",
         "Standard_K8S4_v1", "Standard_NK6", "Standard_NK12", "Standard_NV6", "Standard_NV12",
         "Standard_K8S5_v1", and "Custom".
        :paramtype vm_size: str or ~azure_stack_hci_client.models.VmSizeEnum
        :keyword processors: number of processors for the virtual machine instance.
        :paramtype processors: int
        :keyword memory_mb: RAM in MB for the virtual machine instance.
        :paramtype memory_mb: int
        :keyword dynamic_memory_config: Dynamic memory config.
        :paramtype dynamic_memory_config:
         ~azure_stack_hci_client.models.VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig
        :keyword virtual_machine_gp_us: virtualMachineGPUs - list of gpus to be attached to the virtual
         machine instance.
        :paramtype virtual_machine_gp_us:
         list[~azure_stack_hci_client.models.VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU]
        """
        super().__init__(**kwargs)
        self.vm_size = vm_size
        self.processors = processors
        self.memory_mb = memory_mb
        self.dynamic_memory_config = dynamic_memory_config
        self.virtual_machine_gp_us = virtual_machine_gp_us


class VirtualMachineInstancePropertiesHardwareProfileDynamicMemoryConfig(
    _serialization.Model
):  # pylint: disable=name-too-long
    """Dynamic memory config.

    :ivar maximum_memory_mb: Maximum memory in MB.
    :vartype maximum_memory_mb: int
    :ivar minimum_memory_mb: Minimum memory in MB.
    :vartype minimum_memory_mb: int
    :ivar target_memory_buffer: Defines the amount of extra memory that should be reserved for a
     virtual machine instance at runtime, as a percentage of the total memory that the virtual
     machine instance is thought to need. This only applies to virtual systems with dynamic memory
     enabled. This property can be in the range of 5 to 2000.
    :vartype target_memory_buffer: int
    """

    _attribute_map = {
        "maximum_memory_mb": {"key": "maximumMemoryMB", "type": "int"},
        "minimum_memory_mb": {"key": "minimumMemoryMB", "type": "int"},
        "target_memory_buffer": {"key": "targetMemoryBuffer", "type": "int"},
    }

    def __init__(
        self,
        *,
        maximum_memory_mb: Optional[int] = None,
        minimum_memory_mb: Optional[int] = None,
        target_memory_buffer: Optional[int] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword maximum_memory_mb: Maximum memory in MB.
        :paramtype maximum_memory_mb: int
        :keyword minimum_memory_mb: Minimum memory in MB.
        :paramtype minimum_memory_mb: int
        :keyword target_memory_buffer: Defines the amount of extra memory that should be reserved for a
         virtual machine instance at runtime, as a percentage of the total memory that the virtual
         machine instance is thought to need. This only applies to virtual systems with dynamic memory
         enabled. This property can be in the range of 5 to 2000.
        :paramtype target_memory_buffer: int
        """
        super().__init__(**kwargs)
        self.maximum_memory_mb = maximum_memory_mb
        self.minimum_memory_mb = minimum_memory_mb
        self.target_memory_buffer = target_memory_buffer


class VirtualMachineInstancePropertiesHardwareProfileVirtualMachineGPU(
    _serialization.Model
):  # pylint: disable=name-too-long
    """GPU properties - describes the GPU configuration.

    All required parameters must be populated in order to send to server.

    :ivar assignment_type: GPU assignment type. Required. Known values are: "GpuDDA" and "GpuP".
    :vartype assignment_type: str or ~azure_stack_hci_client.models.GpuAssignmentTypeEnum
    :ivar partition_size_mb: Size of gpu partition in MB for GPU-P.
    :vartype partition_size_mb: int
    :ivar gpu_name: Name of the GPU.
    :vartype gpu_name: str
    """

    _validation = {
        "assignment_type": {"required": True},
    }

    _attribute_map = {
        "assignment_type": {"key": "assignmentType", "type": "str"},
        "partition_size_mb": {"key": "partitionSizeMB", "type": "int"},
        "gpu_name": {"key": "gpuName", "type": "str"},
    }

    def __init__(
        self,
        *,
        assignment_type: Union[str, "_models.GpuAssignmentTypeEnum"],
        partition_size_mb: Optional[int] = None,
        gpu_name: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword assignment_type: GPU assignment type. Required. Known values are: "GpuDDA" and "GpuP".
        :paramtype assignment_type: str or ~azure_stack_hci_client.models.GpuAssignmentTypeEnum
        :keyword partition_size_mb: Size of gpu partition in MB for GPU-P.
        :paramtype partition_size_mb: int
        :keyword gpu_name: Name of the GPU.
        :paramtype gpu_name: str
        """
        super().__init__(**kwargs)
        self.assignment_type = assignment_type
        self.partition_size_mb = partition_size_mb
        self.gpu_name = gpu_name


class VirtualMachineInstancePropertiesNetworkProfile(_serialization.Model):  # pylint: disable=name-too-long
    """NetworkProfile - describes the network configuration the virtual machine instance.

    :ivar network_interfaces: NetworkInterfaces - list of network interfaces to be attached to the
     virtual machine instance.
    :vartype network_interfaces: list[~azure_stack_hci_client.models.NetworkInterfaceArmReference]
    """

    _attribute_map = {
        "network_interfaces": {"key": "networkInterfaces", "type": "[NetworkInterfaceArmReference]"},
    }

    def __init__(
        self, *, network_interfaces: Optional[List["_models.NetworkInterfaceArmReference"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword network_interfaces: NetworkInterfaces - list of network interfaces to be attached to
         the virtual machine instance.
        :paramtype network_interfaces:
         list[~azure_stack_hci_client.models.NetworkInterfaceArmReference]
        """
        super().__init__(**kwargs)
        self.network_interfaces = network_interfaces


class VirtualMachineInstancePropertiesOsProfile(_serialization.Model):  # pylint: disable=name-too-long
    """OsProfile - describes the configuration of the operating system and sets login data.

    :ivar admin_password: AdminPassword - admin password.
    :vartype admin_password: str
    :ivar admin_username: AdminUsername - admin username.
    :vartype admin_username: str
    :ivar computer_name: ComputerName - name of the compute.
    :vartype computer_name: str
    :ivar linux_configuration: LinuxConfiguration - linux specific configuration values for the
     virtual machine instance.
    :vartype linux_configuration:
     ~azure_stack_hci_client.models.VirtualMachineInstancePropertiesOsProfileLinuxConfiguration
    :ivar windows_configuration: Windows Configuration for the virtual machine instance.
    :vartype windows_configuration:
     ~azure_stack_hci_client.models.VirtualMachineInstancePropertiesOsProfileWindowsConfiguration
    """

    _attribute_map = {
        "admin_password": {"key": "adminPassword", "type": "str"},
        "admin_username": {"key": "adminUsername", "type": "str"},
        "computer_name": {"key": "computerName", "type": "str"},
        "linux_configuration": {
            "key": "linuxConfiguration",
            "type": "VirtualMachineInstancePropertiesOsProfileLinuxConfiguration",
        },
        "windows_configuration": {
            "key": "windowsConfiguration",
            "type": "VirtualMachineInstancePropertiesOsProfileWindowsConfiguration",
        },
    }

    def __init__(
        self,
        *,
        admin_password: Optional[str] = None,
        admin_username: Optional[str] = None,
        computer_name: Optional[str] = None,
        linux_configuration: Optional["_models.VirtualMachineInstancePropertiesOsProfileLinuxConfiguration"] = None,
        windows_configuration: Optional["_models.VirtualMachineInstancePropertiesOsProfileWindowsConfiguration"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword admin_password: AdminPassword - admin password.
        :paramtype admin_password: str
        :keyword admin_username: AdminUsername - admin username.
        :paramtype admin_username: str
        :keyword computer_name: ComputerName - name of the compute.
        :paramtype computer_name: str
        :keyword linux_configuration: LinuxConfiguration - linux specific configuration values for the
         virtual machine instance.
        :paramtype linux_configuration:
         ~azure_stack_hci_client.models.VirtualMachineInstancePropertiesOsProfileLinuxConfiguration
        :keyword windows_configuration: Windows Configuration for the virtual machine instance.
        :paramtype windows_configuration:
         ~azure_stack_hci_client.models.VirtualMachineInstancePropertiesOsProfileWindowsConfiguration
        """
        super().__init__(**kwargs)
        self.admin_password = admin_password
        self.admin_username = admin_username
        self.computer_name = computer_name
        self.linux_configuration = linux_configuration
        self.windows_configuration = windows_configuration


class VirtualMachineInstancePropertiesOsProfileLinuxConfiguration(
    _serialization.Model
):  # pylint: disable=name-too-long
    """LinuxConfiguration - linux specific configuration values for the virtual machine instance.

    :ivar disable_password_authentication: DisablePasswordAuthentication - whether password
     authentication should be disabled.
    :vartype disable_password_authentication: bool
    :ivar ssh: Specifies the ssh key configuration for a Linux OS.
    :vartype ssh: ~azure_stack_hci_client.models.SshConfiguration
    :ivar provision_vm_agent: Used to indicate whether Arc for Servers agent onboarding should be
     triggered during the virtual machine instance creation process.
    :vartype provision_vm_agent: bool
    :ivar provision_vm_config_agent: Used to indicate whether the VM Config Agent should be
     installed during the virtual machine creation process.
    :vartype provision_vm_config_agent: bool
    """

    _attribute_map = {
        "disable_password_authentication": {"key": "disablePasswordAuthentication", "type": "bool"},
        "ssh": {"key": "ssh", "type": "SshConfiguration"},
        "provision_vm_agent": {"key": "provisionVMAgent", "type": "bool"},
        "provision_vm_config_agent": {"key": "provisionVMConfigAgent", "type": "bool"},
    }

    def __init__(
        self,
        *,
        disable_password_authentication: Optional[bool] = None,
        ssh: Optional["_models.SshConfiguration"] = None,
        provision_vm_agent: bool = True,
        provision_vm_config_agent: bool = True,
        **kwargs: Any
    ) -> None:
        """
        :keyword disable_password_authentication: DisablePasswordAuthentication - whether password
         authentication should be disabled.
        :paramtype disable_password_authentication: bool
        :keyword ssh: Specifies the ssh key configuration for a Linux OS.
        :paramtype ssh: ~azure_stack_hci_client.models.SshConfiguration
        :keyword provision_vm_agent: Used to indicate whether Arc for Servers agent onboarding should
         be triggered during the virtual machine instance creation process.
        :paramtype provision_vm_agent: bool
        :keyword provision_vm_config_agent: Used to indicate whether the VM Config Agent should be
         installed during the virtual machine creation process.
        :paramtype provision_vm_config_agent: bool
        """
        super().__init__(**kwargs)
        self.disable_password_authentication = disable_password_authentication
        self.ssh = ssh
        self.provision_vm_agent = provision_vm_agent
        self.provision_vm_config_agent = provision_vm_config_agent


class VirtualMachineInstancePropertiesOsProfileWindowsConfiguration(
    _serialization.Model
):  # pylint: disable=name-too-long
    """Windows Configuration for the virtual machine instance.

    :ivar enable_automatic_updates: Whether to EnableAutomaticUpdates on the machine.
    :vartype enable_automatic_updates: bool
    :ivar ssh: Specifies the ssh key configuration for Windows OS.
    :vartype ssh: ~azure_stack_hci_client.models.SshConfiguration
    :ivar time_zone: TimeZone for the virtual machine instance.
    :vartype time_zone: str
    :ivar provision_vm_agent: Used to indicate whether Arc for Servers agent onboarding should be
     triggered during the virtual machine instance creation process.
    :vartype provision_vm_agent: bool
    :ivar provision_vm_config_agent: Used to indicate whether the VM Config Agent should be
     installed during the virtual machine creation process.
    :vartype provision_vm_config_agent: bool
    """

    _attribute_map = {
        "enable_automatic_updates": {"key": "enableAutomaticUpdates", "type": "bool"},
        "ssh": {"key": "ssh", "type": "SshConfiguration"},
        "time_zone": {"key": "timeZone", "type": "str"},
        "provision_vm_agent": {"key": "provisionVMAgent", "type": "bool"},
        "provision_vm_config_agent": {"key": "provisionVMConfigAgent", "type": "bool"},
    }

    def __init__(
        self,
        *,
        enable_automatic_updates: Optional[bool] = None,
        ssh: Optional["_models.SshConfiguration"] = None,
        time_zone: Optional[str] = None,
        provision_vm_agent: bool = True,
        provision_vm_config_agent: bool = True,
        **kwargs: Any
    ) -> None:
        """
        :keyword enable_automatic_updates: Whether to EnableAutomaticUpdates on the machine.
        :paramtype enable_automatic_updates: bool
        :keyword ssh: Specifies the ssh key configuration for Windows OS.
        :paramtype ssh: ~azure_stack_hci_client.models.SshConfiguration
        :keyword time_zone: TimeZone for the virtual machine instance.
        :paramtype time_zone: str
        :keyword provision_vm_agent: Used to indicate whether Arc for Servers agent onboarding should
         be triggered during the virtual machine instance creation process.
        :paramtype provision_vm_agent: bool
        :keyword provision_vm_config_agent: Used to indicate whether the VM Config Agent should be
         installed during the virtual machine creation process.
        :paramtype provision_vm_config_agent: bool
        """
        super().__init__(**kwargs)
        self.enable_automatic_updates = enable_automatic_updates
        self.ssh = ssh
        self.time_zone = time_zone
        self.provision_vm_agent = provision_vm_agent
        self.provision_vm_config_agent = provision_vm_config_agent


class VirtualMachineInstancePropertiesSecurityProfile(_serialization.Model):  # pylint: disable=name-too-long
    """SecurityProfile - Specifies the security settings for the virtual machine instance.

    :ivar enable_tpm: Enable TPM flag.
    :vartype enable_tpm: bool
    :ivar uefi_settings: Uefi settings of the virtual machine instance.
    :vartype uefi_settings:
     ~azure_stack_hci_client.models.VirtualMachineInstancePropertiesSecurityProfileUefiSettings
    :ivar security_type: Specifies the SecurityType of the virtual machine. EnableTPM and
     SecureBootEnabled must be set to true for SecurityType to function. Known values are:
     "TrustedLaunch" and "ConfidentialVM".
    :vartype security_type: str or ~azure_stack_hci_client.models.SecurityTypes
    """

    _attribute_map = {
        "enable_tpm": {"key": "enableTPM", "type": "bool"},
        "uefi_settings": {"key": "uefiSettings", "type": "VirtualMachineInstancePropertiesSecurityProfileUefiSettings"},
        "security_type": {"key": "securityType", "type": "str"},
    }

    def __init__(
        self,
        *,
        enable_tpm: bool = False,
        uefi_settings: Optional["_models.VirtualMachineInstancePropertiesSecurityProfileUefiSettings"] = None,
        security_type: Optional[Union[str, "_models.SecurityTypes"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword enable_tpm: Enable TPM flag.
        :paramtype enable_tpm: bool
        :keyword uefi_settings: Uefi settings of the virtual machine instance.
        :paramtype uefi_settings:
         ~azure_stack_hci_client.models.VirtualMachineInstancePropertiesSecurityProfileUefiSettings
        :keyword security_type: Specifies the SecurityType of the virtual machine. EnableTPM and
         SecureBootEnabled must be set to true for SecurityType to function. Known values are:
         "TrustedLaunch" and "ConfidentialVM".
        :paramtype security_type: str or ~azure_stack_hci_client.models.SecurityTypes
        """
        super().__init__(**kwargs)
        self.enable_tpm = enable_tpm
        self.uefi_settings = uefi_settings
        self.security_type = security_type


class VirtualMachineInstancePropertiesSecurityProfileUefiSettings(
    _serialization.Model
):  # pylint: disable=name-too-long
    """Uefi settings - Specifies whether secure boot should be enabled on the virtual machine
    instance.

    :ivar secure_boot_enabled: Specifies whether secure boot should be enabled on the virtual
     machine instance.
    :vartype secure_boot_enabled: bool
    """

    _attribute_map = {
        "secure_boot_enabled": {"key": "secureBootEnabled", "type": "bool"},
    }

    def __init__(self, *, secure_boot_enabled: bool = False, **kwargs: Any) -> None:
        """
        :keyword secure_boot_enabled: Specifies whether secure boot should be enabled on the virtual
         machine instance.
        :paramtype secure_boot_enabled: bool
        """
        super().__init__(**kwargs)
        self.secure_boot_enabled = secure_boot_enabled


class VirtualMachineInstancePropertiesStorageProfile(_serialization.Model):  # pylint: disable=name-too-long
    """StorageProfile - contains information about the disks and storage information for the virtual
    machine instance.

    :ivar data_disks: adds data disks to the virtual machine instance.
    :vartype data_disks: list[~azure_stack_hci_client.models.VirtualHardDiskArmReference]
    :ivar image_reference: Which Image to use for the virtual machine instance.
    :vartype image_reference: ~azure_stack_hci_client.models.ImageArmReference
    :ivar os_disk: VHD to attach as OS disk.
    :vartype os_disk:
     ~azure_stack_hci_client.models.VirtualMachineInstancePropertiesStorageProfileOsDisk
    :ivar vm_config_storage_path_id: Id of the storage container that hosts the VM configuration
     file.
    :vartype vm_config_storage_path_id: str
    """

    _attribute_map = {
        "data_disks": {"key": "dataDisks", "type": "[VirtualHardDiskArmReference]"},
        "image_reference": {"key": "imageReference", "type": "ImageArmReference"},
        "os_disk": {"key": "osDisk", "type": "VirtualMachineInstancePropertiesStorageProfileOsDisk"},
        "vm_config_storage_path_id": {"key": "vmConfigStoragePathId", "type": "str"},
    }

    def __init__(
        self,
        *,
        data_disks: Optional[List["_models.VirtualHardDiskArmReference"]] = None,
        image_reference: Optional["_models.ImageArmReference"] = None,
        os_disk: Optional["_models.VirtualMachineInstancePropertiesStorageProfileOsDisk"] = None,
        vm_config_storage_path_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword data_disks: adds data disks to the virtual machine instance.
        :paramtype data_disks: list[~azure_stack_hci_client.models.VirtualHardDiskArmReference]
        :keyword image_reference: Which Image to use for the virtual machine instance.
        :paramtype image_reference: ~azure_stack_hci_client.models.ImageArmReference
        :keyword os_disk: VHD to attach as OS disk.
        :paramtype os_disk:
         ~azure_stack_hci_client.models.VirtualMachineInstancePropertiesStorageProfileOsDisk
        :keyword vm_config_storage_path_id: Id of the storage container that hosts the VM configuration
         file.
        :paramtype vm_config_storage_path_id: str
        """
        super().__init__(**kwargs)
        self.data_disks = data_disks
        self.image_reference = image_reference
        self.os_disk = os_disk
        self.vm_config_storage_path_id = vm_config_storage_path_id


class VirtualMachineInstancePropertiesStorageProfileOsDisk(_serialization.Model):  # pylint: disable=name-too-long
    """VHD to attach as OS disk.

    :ivar id: The ARM ID for a Virtual Hard Disk.
    :vartype id: str
    :ivar os_type: This property allows you to specify the type of the OS that is included in the
     disk if creating a VM from user-image or a specialized VHD. Possible values are: Windows,
     Linux. Known values are: "Windows" and "Linux".
    :vartype os_type: str or ~azure_stack_hci_client.models.OperatingSystemTypes
    :ivar managed_disk: The managed disk parameters.
    :vartype managed_disk:
     ~azure_stack_hci_client.models.VirtualMachineInstanceManagedDiskParameters
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "os_type": {"key": "osType", "type": "str"},
        "managed_disk": {"key": "managedDisk", "type": "VirtualMachineInstanceManagedDiskParameters"},
    }

    def __init__(
        self,
        *,
        id: Optional[str] = None,  # pylint: disable=redefined-builtin
        os_type: Optional[Union[str, "_models.OperatingSystemTypes"]] = None,
        managed_disk: Optional["_models.VirtualMachineInstanceManagedDiskParameters"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword id: The ARM ID for a Virtual Hard Disk.
        :paramtype id: str
        :keyword os_type: This property allows you to specify the type of the OS that is included in
         the disk if creating a VM from user-image or a specialized VHD. Possible values are: Windows,
         Linux. Known values are: "Windows" and "Linux".
        :paramtype os_type: str or ~azure_stack_hci_client.models.OperatingSystemTypes
        :keyword managed_disk: The managed disk parameters.
        :paramtype managed_disk:
         ~azure_stack_hci_client.models.VirtualMachineInstanceManagedDiskParameters
        """
        super().__init__(**kwargs)
        self.id = id
        self.os_type = os_type
        self.managed_disk = managed_disk


class VirtualMachineInstanceStatus(_serialization.Model):
    """The observed state of virtual machine instances.

    :ivar error_code: VirtualMachine provisioning error code.
    :vartype error_code: str
    :ivar error_message: Descriptive error message.
    :vartype error_message: str
    :ivar power_state: The power state of the virtual machine instance. Known values are:
     "Deallocated", "Deallocating", "Running", "Starting", "Stopped", "Stopping", "Paused", "Saved",
     and "Unknown".
    :vartype power_state: str or ~azure_stack_hci_client.models.PowerStateEnum
    :ivar provisioning_status: Provisioning status of the virtual machine instance.
    :vartype provisioning_status:
     ~azure_stack_hci_client.models.VirtualMachineInstanceStatusProvisioningStatus
    """

    _attribute_map = {
        "error_code": {"key": "errorCode", "type": "str"},
        "error_message": {"key": "errorMessage", "type": "str"},
        "power_state": {"key": "powerState", "type": "str"},
        "provisioning_status": {"key": "provisioningStatus", "type": "VirtualMachineInstanceStatusProvisioningStatus"},
    }

    def __init__(
        self,
        *,
        error_code: Optional[str] = None,
        error_message: Optional[str] = None,
        power_state: Optional[Union[str, "_models.PowerStateEnum"]] = None,
        provisioning_status: Optional["_models.VirtualMachineInstanceStatusProvisioningStatus"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword error_code: VirtualMachine provisioning error code.
        :paramtype error_code: str
        :keyword error_message: Descriptive error message.
        :paramtype error_message: str
        :keyword power_state: The power state of the virtual machine instance. Known values are:
         "Deallocated", "Deallocating", "Running", "Starting", "Stopped", "Stopping", "Paused", "Saved",
         and "Unknown".
        :paramtype power_state: str or ~azure_stack_hci_client.models.PowerStateEnum
        :keyword provisioning_status: Provisioning status of the virtual machine instance.
        :paramtype provisioning_status:
         ~azure_stack_hci_client.models.VirtualMachineInstanceStatusProvisioningStatus
        """
        super().__init__(**kwargs)
        self.error_code = error_code
        self.error_message = error_message
        self.power_state = power_state
        self.provisioning_status = provisioning_status


class VirtualMachineInstanceStatusProvisioningStatus(_serialization.Model):  # pylint: disable=name-too-long
    """Virtual machine instance provisioning status.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar operation_id: The ID of the operation performed on the virtual machine instance.
    :vartype operation_id: str
    :ivar status: The status of the operation performed on the virtual machine instance [Succeeded,
     Failed, InProgress]. Known values are: "Succeeded", "Failed", and "InProgress".
    :vartype status: str or ~azure_stack_hci_client.models.Status
    """

    _validation = {
        "status": {"readonly": True},
    }

    _attribute_map = {
        "operation_id": {"key": "operationId", "type": "str"},
        "status": {"key": "status", "type": "str"},
    }

    def __init__(self, *, operation_id: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword operation_id: The ID of the operation performed on the virtual machine instance.
        :paramtype operation_id: str
        """
        super().__init__(**kwargs)
        self.operation_id = operation_id
        self.status = None


class VirtualMachineInstanceUpdateProperties(_serialization.Model):
    """Defines the resource properties for the update.

    :ivar hardware_profile: HardwareProfile - Specifies the hardware settings for the virtual
     machine instance.
    :vartype hardware_profile: ~azure_stack_hci_client.models.HardwareProfileUpdate
    :ivar storage_profile: StorageProfile - Specifies the storage settings for the virtual machine
     instance.
    :vartype storage_profile: ~azure_stack_hci_client.models.StorageProfileUpdate
    :ivar network_profile: NetworkProfile - describes the network update configuration the virtual
     machine instance.
    :vartype network_profile: ~azure_stack_hci_client.models.NetworkProfileUpdate
    :ivar os_profile: OsProfile - describes the update configuration of the operating system.
    :vartype os_profile: ~azure_stack_hci_client.models.OsProfileUpdate
    """

    _attribute_map = {
        "hardware_profile": {"key": "hardwareProfile", "type": "HardwareProfileUpdate"},
        "storage_profile": {"key": "storageProfile", "type": "StorageProfileUpdate"},
        "network_profile": {"key": "networkProfile", "type": "NetworkProfileUpdate"},
        "os_profile": {"key": "osProfile", "type": "OsProfileUpdate"},
    }

    def __init__(
        self,
        *,
        hardware_profile: Optional["_models.HardwareProfileUpdate"] = None,
        storage_profile: Optional["_models.StorageProfileUpdate"] = None,
        network_profile: Optional["_models.NetworkProfileUpdate"] = None,
        os_profile: Optional["_models.OsProfileUpdate"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword hardware_profile: HardwareProfile - Specifies the hardware settings for the virtual
         machine instance.
        :paramtype hardware_profile: ~azure_stack_hci_client.models.HardwareProfileUpdate
        :keyword storage_profile: StorageProfile - Specifies the storage settings for the virtual
         machine instance.
        :paramtype storage_profile: ~azure_stack_hci_client.models.StorageProfileUpdate
        :keyword network_profile: NetworkProfile - describes the network update configuration the
         virtual machine instance.
        :paramtype network_profile: ~azure_stack_hci_client.models.NetworkProfileUpdate
        :keyword os_profile: OsProfile - describes the update configuration of the operating system.
        :paramtype os_profile: ~azure_stack_hci_client.models.OsProfileUpdate
        """
        super().__init__(**kwargs)
        self.hardware_profile = hardware_profile
        self.storage_profile = storage_profile
        self.network_profile = network_profile
        self.os_profile = os_profile


class VirtualMachineInstanceUpdateRequest(_serialization.Model):
    """The virtual machine instance resource patch definition.

    :ivar properties: Defines the resource properties for the update.
    :vartype properties: ~azure_stack_hci_client.models.VirtualMachineInstanceUpdateProperties
    :ivar identity: Identity for the resource.
    :vartype identity: ~azure_stack_hci_client.models.Identity
    """

    _attribute_map = {
        "properties": {"key": "properties", "type": "VirtualMachineInstanceUpdateProperties"},
        "identity": {"key": "identity", "type": "Identity"},
    }

    def __init__(
        self,
        *,
        properties: Optional["_models.VirtualMachineInstanceUpdateProperties"] = None,
        identity: Optional["_models.Identity"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword properties: Defines the resource properties for the update.
        :paramtype properties: ~azure_stack_hci_client.models.VirtualMachineInstanceUpdateProperties
        :keyword identity: Identity for the resource.
        :paramtype identity: ~azure_stack_hci_client.models.Identity
        """
        super().__init__(**kwargs)
        self.properties = properties
        self.identity = identity


class VirtualMachineInstanceView(_serialization.Model):
    """The instance view of a virtual machine.

    :ivar vm_agent: The VM Config Agent running on the virtual machine.
    :vartype vm_agent: ~azure_stack_hci_client.models.VirtualMachineConfigAgentInstanceView
    """

    _attribute_map = {
        "vm_agent": {"key": "vmAgent", "type": "VirtualMachineConfigAgentInstanceView"},
    }

    def __init__(
        self, *, vm_agent: Optional["_models.VirtualMachineConfigAgentInstanceView"] = None, **kwargs: Any
    ) -> None:
        """
        :keyword vm_agent: The VM Config Agent running on the virtual machine.
        :paramtype vm_agent: ~azure_stack_hci_client.models.VirtualMachineConfigAgentInstanceView
        """
        super().__init__(**kwargs)
        self.vm_agent = vm_agent


class VMDiskSecurityProfile(_serialization.Model):
    """Specifies the security profile settings for the managed disk. NOTE: It can only be set for
    Confidential VMs.

    :ivar security_encryption_type: Specifies the EncryptionType of the managed disk. It is set to
     NonPersistedTPM for not persisting firmware state in the VMGuestState blob. NOTE: It can be set
     for only Confidential VMs. "NonPersistedTPM"
    :vartype security_encryption_type: str or ~azure_stack_hci_client.models.SecurityEncryptionType
    """

    _attribute_map = {
        "security_encryption_type": {"key": "securityEncryptionType", "type": "str"},
    }

    def __init__(
        self, *, security_encryption_type: Optional[Union[str, "_models.SecurityEncryptionType"]] = None, **kwargs: Any
    ) -> None:
        """
        :keyword security_encryption_type: Specifies the EncryptionType of the managed disk. It is set
         to NonPersistedTPM for not persisting firmware state in the VMGuestState blob. NOTE: It can be
         set for only Confidential VMs. "NonPersistedTPM"
        :paramtype security_encryption_type: str or
         ~azure_stack_hci_client.models.SecurityEncryptionType
        """
        super().__init__(**kwargs)
        self.security_encryption_type = security_encryption_type


class VmImageRepositoryCredentials(_serialization.Model):
    """The credentials used to login to the image repository that has access to the specified image.

    All required parameters must be populated in order to send to server.

    :ivar username: Username for accessing image repository. Required.
    :vartype username: str
    :ivar password: Password for accessing image repository. Required.
    :vartype password: str
    """

    _validation = {
        "username": {"required": True},
        "password": {"required": True},
    }

    _attribute_map = {
        "username": {"key": "username", "type": "str"},
        "password": {"key": "password", "type": "str"},
    }

    def __init__(self, *, username: str, password: str, **kwargs: Any) -> None:
        """
        :keyword username: Username for accessing image repository. Required.
        :paramtype username: str
        :keyword password: Password for accessing image repository. Required.
        :paramtype password: str
        """
        super().__init__(**kwargs)
        self.username = username
        self.password = password
