{
  "swagger": "2.0",
  "info": {
    "title": "Azure Machine Learning Data Plane Services",
    "version": "2024-04-01-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}/genericasset/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "description": "Supported Azure-AI asset endpoints.",
        "required": true,
        "type": "string",
        "format": "uri",
        "x-ms-skip-url-encoding": true
      },
      {
        "name": "subscriptionId",
        "in": "path",
        "description": "The ID of the target subscription.",
        "required": true,
        "type": "string"
      },
      {
        "name": "resourceGroupName",
        "in": "path",
        "description": "The name of the Resource Group.",
        "required": true,
        "type": "string"
      },
      {
        "name": "workspaceName",
        "in": "path",
        "description": "The name of the AzureML workspace or AI project.",
        "required": true,
        "type": "string"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "OAuth2Auth": [
        "https://ml.azure.com/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
      "scopes": {
        "https://ml.azure.com/.default": ""
      }
    }
  },
  "tags": [],
  "paths": {
    "/indexes": {
      "get": {
        "operationId": "Indexes_ListLatest",
        "description": "List the latest version of each index. Latest is defined by most recent created by date.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedIndex"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Indexes_ListLatest - generated by [MaximumSet] rule": {
            "$ref": "./examples/Indexes_ListLatest_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/indexes/{name}": {
      "get": {
        "operationId": "Indexes_GetLatest",
        "description": "Get latest version of the Index. Latest is defined by most recent created by date.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the index.",
            "required": true,
            "type": "string",
            "maxLength": 254,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Index"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Indexes_GetLatest - generated by [MaximumSet] rule": {
            "$ref": "./examples/Indexes_GetLatest_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/indexes/{name}:getNextVersion": {
      "post": {
        "operationId": "Indexes_GetNextVersion",
        "description": "Get next Index version as defined by the server. The server keeps track of all versions that are string-representations of integers. If one exists, the nextVersion will be a string representation of the highest integer value + 1. Otherwise, the nextVersion will default to '1'.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the index.",
            "required": true,
            "type": "string",
            "maxLength": 254,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/VersionInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Indexes_GetNextVersion - generated by [MaximumSet] rule": {
            "$ref": "./examples/Indexes_GetNextVersion_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/indexes/{name}/versions": {
      "get": {
        "operationId": "Indexes_List",
        "description": "List the versions of an Index given the name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the index.",
            "required": true,
            "type": "string",
            "maxLength": 254,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_]*$"
          },
          {
            "name": "listViewType",
            "in": "query",
            "description": "View type for including/excluding (for example) archived entities.",
            "required": true,
            "type": "string",
            "default": "ActiveOnly"
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Ordering of list: Please choose orderby value from ['createdAt', 'lastModifiedAt'].",
            "required": false,
            "type": "string"
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedIndex"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Indexes_List - generated by [MaximumSet] rule": {
            "$ref": "./examples/Indexes_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/indexes/{name}/versions/{version}": {
      "get": {
        "operationId": "Indexes_Get",
        "description": "Get a specific version of an Index.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the index.",
            "required": true,
            "type": "string",
            "maxLength": 254,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_]*$"
          },
          {
            "name": "version",
            "in": "path",
            "description": "Version of the index.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Index"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Indexes_Get - generated by [MaximumSet] rule": {
            "$ref": "./examples/Indexes_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Indexes_CreateOrUpdate",
        "description": "Creates or updates a IndexVersion.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the index.",
            "required": true,
            "type": "string",
            "maxLength": 254,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_]*$"
          },
          {
            "name": "version",
            "in": "path",
            "description": "Version of the index.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Properties of an Index Version.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Index"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Index"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Index"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Indexes_CreateOrUpdate - generated by [MaximumSet] rule": {
            "$ref": "./examples/Indexes_CreateOrUpdate_MaximumSet_Gen.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AssetVersion": {
      "type": "object",
      "description": "AssetVersion Definition",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource Id: azureml://workspace/{workspaceName}/indexes/{name}/versions/{version} of the index.",
          "readOnly": true
        },
        "stage": {
          "type": "string",
          "description": "Update stage to 'Archive' to archive the asset. Default is Development, which means the asset is under development.",
          "default": "Development"
        },
        "description": {
          "type": "string",
          "description": "Description information of the asset."
        },
        "systemData": {
          "$ref": "#/definitions/SystemData",
          "description": "Metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Asset's tags. Unlike properties, tags are fully mutable.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "description": "Asset's properties. Unlike tags, properties are add-only. Once added, a property cannot be removed.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Index": {
      "type": "object",
      "description": "Index resource Definition",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource Id: azureml://workspace/{workspaceName}/indexes/{name}/versions/{version} of the index.",
          "readOnly": true
        },
        "stage": {
          "type": "string",
          "description": "Update stage to 'Archive' to archive the asset. Default is Development, which means the asset is under development.",
          "default": "Development"
        },
        "description": {
          "type": "string",
          "description": "Description information of the asset."
        },
        "systemData": {
          "$ref": "#/definitions/SystemData",
          "description": "Metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Asset's tags. Unlike properties, tags are fully mutable.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "description": "Asset's properties. Unlike tags, properties are add-only. Once added, a property cannot be removed.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "storageUri": {
          "type": "string",
          "description": "Default workspace blob storage Uri. Should work across storage types and auth scenarios."
        }
      },
      "required": [
        "id",
        "storageUri"
      ]
    },
    "PagedIndex": {
      "type": "object",
      "description": "Paged collection of IndexVersion items.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of Indexes.",
          "items": {
            "$ref": "#/definitions/Index"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SystemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp the resource was created at.",
          "readOnly": true
        },
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource.",
          "readOnly": true
        },
        "createdByType": {
          "type": "string",
          "description": "The identity type that created the resource.",
          "readOnly": true
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)",
          "readOnly": true
        }
      }
    },
    "VersionInfo": {
      "type": "object",
      "description": "Next version definition.",
      "properties": {
        "nextVersion": {
          "type": "integer",
          "format": "int64",
          "description": "Next version as defined by the server. The server keeps track of all versions that are string-representations of integers. If one exists, the nextVersion will be a string representation of the highest integer value + 1. Otherwise, the nextVersion will default to '1'."
        },
        "latestVersion": {
          "type": "string",
          "description": "Current latest version of the resource."
        }
      },
      "required": [
        "latestVersion"
      ]
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    },
    "Azure.Core.MaxPageSizeQueryParameter": {
      "name": "maxpagesize",
      "in": "query",
      "description": "The maximum number of result items per page.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.SkipQueryParameter": {
      "name": "skip",
      "in": "query",
      "description": "The number of result items to skip.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "default": 0,
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.TopQueryParameter": {
      "name": "top",
      "in": "query",
      "description": "The number of result items to return.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    }
  }
}
