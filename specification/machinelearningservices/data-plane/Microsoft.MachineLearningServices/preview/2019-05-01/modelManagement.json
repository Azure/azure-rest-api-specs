{
  "swagger": "2.0",
  "info": {
    "version": "2019-05-01",
    "title": "Azure Machine Learning Model Management Service",
    "description": "These APIs allow end users to manage Azure Machine Learning Models, Images, Profiles, and Services."
  },
  "paths": {
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/assets": {
      "get": {
        "tags": [
          "Asset"
        ],
        "summary": "Query the list of Assets in a workspace.",
        "description": "If no filter is passed, the query lists all the Assets in the given workspace. The returned list is paginated and the count of items in each page is an optional parameter.",
        "operationId": "Assets_ListQuery",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "runId",
            "in": "query",
            "description": "The run Id associated with the Assets.",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "description": "The project Id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "The object name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "The object tag.",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The number of items to retrieve in a page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "The continuation token to retrieve the next page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": false,
            "type": "string"
          },
          {
            "name": "tags",
            "in": "query",
            "description": "A list of Asset tags.",
            "required": false,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "query",
            "description": "A list of Asset properties.",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "An option for specifying how to order the list.",
            "required": false,
            "type": "string",
            "default": "CreatedAtDesc",
            "enum": [
              "CreatedAtDesc",
              "CreatedAtAsc",
              "UpdatedAtDesc",
              "UpdatedAtAsc"
            ]
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PaginatedAssetList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      },
      "post": {
        "tags": [
          "Asset"
        ],
        "summary": "Create an Asset.",
        "description": "Create an Asset from the provided payload.",
        "operationId": "Assets_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "asset",
            "in": "body",
            "description": "The Asset to be created.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/assets/{id}": {
      "get": {
        "tags": [
          "Asset"
        ],
        "summary": "Get an Asset.",
        "description": "Get an Asset by Id.",
        "operationId": "Assets_QueryById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Asset Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Asset"
        ],
        "summary": "Delete an Asset.",
        "description": "Delete the specified Asset.",
        "operationId": "Assets_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the Asset to delete.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource exists and was deleted successfully."
          },
          "204": {
            "description": "The resource does not exist and the request was well formed."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Asset"
        ],
        "summary": "Update an Asset.",
        "description": "Patch a specific Asset.",
        "operationId": "Assets_Patch",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Id of the Asset to patch.",
            "required": true,
            "type": "string"
          },
          {
            "name": "patch",
            "in": "body",
            "description": "The payload that is used to patch an Asset.",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/JsonPatchOperation"
              }
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/images/{id}": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "Get an Image.",
        "description": "Get an Image by Id.",
        "operationId": "Images_QueryById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Image Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "When set to True, additional model details are returned.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ImageResponseBase"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Image"
        ],
        "summary": "Delete an Image.",
        "description": "Delete the image specified.",
        "operationId": "Images_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Image Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource exists and was deleted successfully."
          },
          "204": {
            "description": "The resource does not exist and the request was well formed."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Image"
        ],
        "summary": "Patch an Image.",
        "description": "Patch a specific Image.",
        "operationId": "Images_Patch",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Image Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "patch",
            "in": "body",
            "description": "The payload that is used to patch an Image.",
            "required": true,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/JsonPatchOperation"
              }
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The Image patch was successful.",
            "schema": {
              "$ref": "#/definitions/ImageResponseBase"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/images": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "Query the list of Images in a workspace.",
        "description": "If no filter is passed, the query lists all the Images in the given workspace. The returned list is paginated and the count of items in each page is an optional parameter.",
        "operationId": "Images_ListQuery",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "The object name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "The object tag.",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "description": "The object version.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The description of the object.",
            "required": false,
            "type": "string"
          },
          {
            "name": "modelId",
            "in": "query",
            "description": "The Model Id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "modelName",
            "in": "query",
            "description": "The Model name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The number of items to retrieve in a page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "The continuation token to retrieve the next page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": false,
            "type": "string"
          },
          {
            "name": "tags",
            "in": "query",
            "description": "A list of Image tags.",
            "required": false,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "query",
            "description": "A list of Image properties.",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "An option for specifying how to order the list.",
            "required": false,
            "type": "string",
            "default": "CreatedAtDesc",
            "enum": [
              "CreatedAtDesc",
              "CreatedAtAsc",
              "UpdatedAtDesc",
              "UpdatedAtAsc"
            ]
          },
          {
            "name": "expand",
            "in": "query",
            "description": "When set to True, additional model details are returned.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "version",
            "in": "path",
            "description": "The object version.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PaginatedImageList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      },
      "post": {
        "tags": [
          "Image"
        ],
        "summary": "Create an Image.",
        "description": "Create an Image from the provided payload.",
        "operationId": "Images_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imageRequest",
            "in": "body",
            "description": "The payload containing image request details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImageRequestBase"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request was accepted.  The header 'Operation-Location' contains the async operation location URL.  Accessing this URL with a GET call will return the status of the background task."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/images/generateDockerBuildContext": {
      "post": {
        "tags": [
          "Image"
        ],
        "summary": "Retreive a Docker file and build context.",
        "description": "The Docker file and build context allows for locally debugging the Docker file.",
        "operationId": "Images_GenerateDockerBuildContext",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imageRequest",
            "in": "body",
            "description": "The Image request.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ImageRequestBase"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DockerBuildContextResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/models/{id}": {
      "get": {
        "tags": [
          "Model"
        ],
        "summary": "Gets a model.",
        "description": "Gets a model by model id.",
        "operationId": "MLModels_QueryById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The model id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Model"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Model"
        ],
        "summary": "Delete the specified Model.",
        "description": "Deletes a model if it exists.",
        "operationId": "MLModels_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The model id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource exists and was deleted successfully."
          },
          "204": {
            "description": "The resource does not exist and the request was well formed."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Model"
        ],
        "summary": "Patch a specific model.",
        "description": "Updates an existing model with the specified patch.",
        "operationId": "MLModels_Patch",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The model id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "patch",
            "in": "body",
            "description": "The payload that is used to patch the model.",
            "required": true,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/JsonPatchOperation"
              }
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Model"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/models": {
      "get": {
        "tags": [
          "Model"
        ],
        "summary": "Query the list of Models in a workspace.",
        "description": "The result list can be filtered using tag and name. If no filter is passed, the query lists all the Models in the given workspace. The returned list is paginated and the count of items in each page is an optional parameter.",
        "operationId": "MLModels_ListQuery",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "The object name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "The object tag.",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "description": "The object version.",
            "required": false,
            "type": "string"
          },
          {
            "name": "framework",
            "in": "query",
            "description": "The framework.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The object description.",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The number of items to retrieve in a page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "The continuation token to retrieve the next page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": false,
            "type": "string"
          },
          {
            "name": "tags",
            "in": "query",
            "description": "A set of tags with which to filter the returned models.",
            "required": false,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "query",
            "description": "A set of properties with which to filter the returned models.",
            "required": false,
            "type": "string"
          },
          {
            "name": "runId",
            "in": "query",
            "description": "The runId which created the model.",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "An option to specify how the models are ordered in the response.",
            "required": false,
            "type": "string",
            "default": "CreatedAtDesc",
            "enum": [
              "CreatedAtDesc",
              "CreatedAtAsc",
              "UpdatedAtDesc",
              "UpdatedAtAsc"
            ]
          },
          {
            "name": "version",
            "in": "path",
            "description": "The object version.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PaginatedModelList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      },
      "post": {
        "tags": [
          "Model"
        ],
        "summary": "Register a model.",
        "description": "Register the model provided.",
        "operationId": "MLModels_Register",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "The payload that is used to register the model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Model"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The model registration was successful.",
            "schema": {
              "$ref": "#/definitions/Model"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/models/{id}/metrics": {
      "get": {
        "tags": [
          "Model"
        ],
        "summary": "Retrieve the metrics for a Model.",
        "description": "The operational events collected for the Model are returned.",
        "operationId": "MLModels_GetMetrics",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Model Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "The start date from which to retrieve metrics.",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date from which to retrieve metrics.",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelOperationalState"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/operations/{id}": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "Get the status of an async operation.",
        "description": "Get the status of an async operation by operation id.",
        "operationId": "Operations_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The operation id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AsyncOperationStatus"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/images/{imageId}/profiles/{id}": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get a Profile.",
        "description": "Get the Profile for an Image.",
        "operationId": "Profiles_QueryById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "The Image Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Profile Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProfileResponseBase"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/images/{imageId}/profiles": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get a list of Image Profiles.",
        "description": "If no filter is passed, the query lists all Profiles for the Image. The returned list is paginated and the count of items in each page is an optional parameter.",
        "operationId": "Profiles_ListQuery",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "The Image Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "The Profile name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The Profile description.",
            "required": false,
            "type": "string"
          },
          {
            "name": "tags",
            "in": "query",
            "description": "A list of tags for the Profile.",
            "required": false,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "query",
            "description": "A list of properties for the Profile.",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The number of items to retrieve in a page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "The continuation token to retrieve the next page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "The option to order the response.",
            "required": false,
            "type": "string",
            "default": "CreatedAtDesc",
            "enum": [
              "CreatedAtDesc",
              "CreatedAtAsc",
              "UpdatedAtDesc",
              "UpdatedAtAsc"
            ]
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PaginatedProfileList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      },
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Create a Profile.",
        "description": "Create a Profile for an Image.",
        "operationId": "Profiles_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "description": "The Image Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "inputRequest",
            "in": "body",
            "description": "The payload that is used to create the Profile.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProfileRequestBase"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request was accepted. The header 'Operation-Location' contains the async operation location URL. Accessing this URL with a GET call will return the status of the background task."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/services/{id}": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Get a Service.",
        "description": "Get a Service by Id.",
        "operationId": "Services_QueryById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Service Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Set to True to include Model details.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ServiceResponseBase"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Service"
        ],
        "summary": "Delete a Service.",
        "description": "Delete a specific Service.",
        "operationId": "Services_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Service Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource exists and was deleted successfully."
          },
          "202": {
            "description": "Success"
          },
          "204": {
            "description": "The resource does not exist and the request was well formed."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Service"
        ],
        "summary": "Patch a Service.",
        "description": "Patch a specific Service.",
        "operationId": "Services_Patch",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Service Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "patch",
            "in": "body",
            "description": "The payload that is used to patch the Service.",
            "required": true,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/JsonPatchOperation"
              }
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "The request was accepted.  The header 'Operation-Location' contains the async operation location URL.  Accessing this URL with a GET call will return the status of the background task."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/services": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Query the list of Services in a Workspace.",
        "description": "If no filter is passed, the query lists all Services in the Workspace. The returned list is paginated and the count of item in each page is an optional parameter.",
        "operationId": "Services_ListQuery",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "imageId",
            "in": "query",
            "description": "The Image Id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "imageName",
            "in": "query",
            "description": "The Image name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "modelId",
            "in": "query",
            "description": "The Model Id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "modelName",
            "in": "query",
            "description": "The Model name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "The object name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "The object tag.",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The number of items to retrieve in a page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeType",
            "in": "query",
            "description": "The compute environment type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "The continuation token to retrieve the next page.",
            "required": false,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": false,
            "type": "string"
          },
          {
            "name": "tags",
            "in": "query",
            "description": "A list of tags.",
            "required": false,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "query",
            "description": "A list of properties.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Set to True to include Model details.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "The option to order the response.",
            "required": false,
            "type": "string",
            "default": "UpdatedAtDesc",
            "enum": [
              "CreatedAtDesc",
              "CreatedAtAsc",
              "UpdatedAtDesc",
              "UpdatedAtAsc"
            ]
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PaginatedServiceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      },
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Create a Service.",
        "description": "Create a Service with the specified payload.",
        "operationId": "Services_Create",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The payload that is used to create the Service.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateServiceRequest"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request was accepted.  The header 'Operation-Location' contains the async operation location URL.  Accessing this URL with a GET call will return the status of the background task."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/services/{id}/listkeys": {
      "post": {
        "tags": [
          "Service",
          "Keys"
        ],
        "summary": "Lists Service keys.",
        "description": "Gets a list of Service keys.",
        "operationId": "Services_ListServiceKeys",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Service Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AuthKeys"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/services/{id}/regenerateKeys": {
      "post": {
        "tags": [
          "Service",
          "Keys"
        ],
        "summary": "Regenerate Service Keys.",
        "description": "Regenerate and return the Service keys.",
        "operationId": "Services_RegenerateServiceKeys",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Service Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The payload that is used to regenerate keys.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateServiceKeysRequest"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AuthKeys"
            }
          },
          "202": {
            "description": "The request was accepted. The header 'Operation-Location' contains the async operation location URL.  Accessing this URL with a GET call will return the status of the background task."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/services/register": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Register a service.",
        "description": "Register a service using the provided payload.",
        "operationId": "Services_Register",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The payload describing the service to register.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterServiceRequest"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The Azure subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "description": "The name of resource group in which the workspace is located.",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ServiceResponseBase"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Asset": {
      "description": "The Asset definition.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The Asset Id.",
          "type": "string"
        },
        "name": {
          "description": "The name of the Asset.",
          "type": "string"
        },
        "description": {
          "description": "The Asset description.",
          "type": "string"
        },
        "artifacts": {
          "description": "A list of child artifacts.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactDetails"
          }
        },
        "tags": {
          "description": "The Asset tag list.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kvTags": {
          "description": "The Asset tag dictionary. Tags are mutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The Asset property dictionary. Properties are immutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "runid": {
          "description": "The RunId associated with this Asset.",
          "type": "string"
        },
        "projectid": {
          "description": "The project Id.",
          "type": "string"
        },
        "meta": {
          "description": "A dictionary containing metadata about the Asset.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createdTime": {
          "format": "date-time",
          "description": "The time the Asset was created in UTC.",
          "type": "string"
        }
      }
    },
    "ArtifactDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        }
      }
    },
    "PaginatedAssetList": {
      "description": "A paginated list of objects.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type T.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Asset"
          }
        },
        "nextLink": {
          "description": "A continuation link (absolute URI) to the next page of results in the list.",
          "type": "string"
        }
      }
    },
    "JsonPatchOperation": {
      "description": "The Json Patch definition.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "object"
        },
        "path": {
          "description": "The target location.",
          "type": "string"
        },
        "op": {
          "description": "The operation.",
          "type": "string"
        },
        "from": {
          "description": "The source location.",
          "type": "string"
        }
      }
    },
    "ImageResponseBase": {
      "required": [
        "imageResponseBaseTypeDiscriminator"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The image Id.",
          "type": "string",
          "example": "myimage:3"
        },
        "name": {
          "description": "The image name.",
          "type": "string",
          "example": "myimage:3"
        },
        "version": {
          "format": "int64",
          "description": "The image version.",
          "type": "integer",
          "example": "3"
        },
        "description": {
          "description": "The image description.",
          "type": "string",
          "example": "My docker image."
        },
        "tags": {
          "description": "The image tag list.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": "[\"docker\"]"
        },
        "kvTags": {
          "description": "The image tag dictionary. Tags are mutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The image properties dictionary. Properties are immutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createdTime": {
          "format": "date-time",
          "description": "The time the image was created.",
          "type": "string"
        },
        "modifiedTime": {
          "format": "date-time",
          "description": "The time the image was last modified.",
          "type": "string"
        },
        "imageType": {
          "description": "The type of the image.",
          "enum": [
            "Docker",
            "FPGA"
          ],
          "type": "string",
          "example": "Docker",
          "x-ms-enum": {
            "name": "ImageType",
            "modelAsString": true
          }
        },
        "imageFlavor": {
          "description": "The flavor of the image.",
          "enum": [
            "WebApiContainer",
            "BatchContainer",
            "IoTContainer",
            "BrainwavePackage",
            "AccelContainer",
            "BrainwaveContainer",
            "UserProvidedContainer"
          ],
          "type": "string",
          "example": "WebApiContainer",
          "x-ms-enum": {
            "name": "ImageFlavor",
            "modelAsString": true
          }
        },
        "creationState": {
          "description": "The state of the operation.",
          "enum": [
            "NotStarted",
            "Running",
            "Cancelled",
            "Succeeded",
            "Failed",
            "TimedOut"
          ],
          "type": "string",
          "example": "Running",
          "x-ms-enum": {
            "name": "AsyncOperationState",
            "modelAsString": true
          }
        },
        "error": {
          "$ref": "#/definitions/ModelErrorResponse",
          "description": "The error response."
        },
        "modelIds": {
          "description": "The list of model Ids.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modelDetails": {
          "description": "The list of models.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Model"
          }
        },
        "imageLocation": {
          "description": "The Image location string.",
          "type": "string"
        },
        "imageBuildLogUri": {
          "description": "The Uri to the image build logs.",
          "type": "string"
        },
        "imageResponseBaseTypeDiscriminator": {
          "description": "Property used by Swagger for polymorphic object generation.",
          "type": "string"
        }
      },
      "discriminator": "imageResponseBaseTypeDiscriminator"
    },
    "ModelErrorResponse": {
      "description": "The Model Management Service Error object.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The error code.",
          "type": "string"
        },
        "statusCode": {
          "format": "int32",
          "description": "The HTTP status code.",
          "type": "integer"
        },
        "message": {
          "description": "The error message.",
          "type": "string"
        },
        "details": {
          "description": "An array of error detail objects.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetails"
          }
        }
      }
    },
    "Model": {
      "description": "An Azure Machine Learning Model.",
      "required": [
        "name",
        "url",
        "mimeType"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The Model Id.",
          "type": "string",
          "example": "sklearn_mnist:1"
        },
        "name": {
          "description": "The Model name.",
          "type": "string",
          "example": "sklearn_mnist"
        },
        "framework": {
          "description": "The Model framework.",
          "type": "string"
        },
        "frameworkVersion": {
          "description": "The Model framework version.",
          "type": "string"
        },
        "version": {
          "format": "int64",
          "description": "The Model version assigned by Model Management Service.",
          "type": "integer",
          "example": "1"
        },
        "tags": {
          "description": "The Model tag list.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": "[\"mnist\", \"sklearn\"]"
        },
        "datasets": {
          "description": "The list of datasets associated with the model.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatasetReference"
          }
        },
        "url": {
          "description": "The URL of the Model. Usually a SAS URL.",
          "type": "string"
        },
        "mimeType": {
          "description": "The MIME type of Model content. For more details about MIME type, please open https://www.iana.org/assignments/media-types/media-types.xhtml",
          "type": "string"
        },
        "description": {
          "description": "The Model description text.",
          "type": "string",
          "example": "A mnist model, first version."
        },
        "createdTime": {
          "format": "date-time",
          "description": "The Model creation time (UTC).",
          "type": "string"
        },
        "modifiedTime": {
          "format": "date-time",
          "description": "The Model last modified time (UTC).",
          "type": "string"
        },
        "unpack": {
          "description": "Indicates whether we need to unpack the Model during docker Image creation.",
          "type": "boolean",
          "example": "False"
        },
        "parentModelId": {
          "description": "The Parent Model Id.",
          "type": "string",
          "example": "sklearn_mnist_root:1"
        },
        "runId": {
          "description": "The RunId that created this model.",
          "type": "string"
        },
        "experimentName": {
          "description": "The name of the experiment where this model was created.",
          "type": "string"
        },
        "kvTags": {
          "description": "The Model tag dictionary. Items are mutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The Model property dictionary. Properties are immutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ErrorDetails": {
      "description": "The error details.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The error code.",
          "type": "string"
        },
        "message": {
          "description": "The error message.",
          "type": "string"
        },
        "target": {
          "description": "The target of the error (e.g., the name of the property in error).",
          "type": "string"
        }
      }
    },
    "DatasetReference": {
      "description": "The dataset reference object.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the dataset reference.",
          "type": "string"
        },
        "id": {
          "description": "The id of the dataset reference.",
          "type": "string"
        }
      }
    },
    "PaginatedImageList": {
      "description": "A paginated list of objects.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type T.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageResponseBase"
          }
        },
        "nextLink": {
          "description": "A continuation link (absolute URI) to the next page of results in the list.",
          "type": "string"
        }
      }
    },
    "ImageRequestBase": {
      "description": "Request to create an Azure Machine Learning Image.",
      "required": [
        "imageRequestBaseTypeDiscriminator"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the image.",
          "type": "string",
          "example": "myimage:3"
        },
        "description": {
          "description": "The image description.",
          "type": "string",
          "example": "My third image version."
        },
        "imageType": {
          "description": "The type of the image.",
          "enum": [
            "Docker",
            "FPGA"
          ],
          "type": "string",
          "example": "Docker",
          "x-ms-enum": {
            "name": "ImageType",
            "modelAsString": true
          }
        },
        "imageFlavor": {
          "description": "The flavor of the image.",
          "enum": [
            "WebApiContainer",
            "BatchContainer",
            "IoTContainer",
            "BrainwavePackage",
            "AccelContainer",
            "BrainwaveContainer",
            "UserProvidedContainer"
          ],
          "type": "string",
          "example": "WebApiContainer",
          "x-ms-enum": {
            "name": "ImageFlavor",
            "modelAsString": true
          }
        },
        "modelIds": {
          "description": "The list of model Ids.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": "[mymodel:1, mymodel:2]"
        },
        "tags": {
          "description": "The image tag list.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kvTags": {
          "description": "The image tag dictionary. Tags are mutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The image property dictionary. Properties are immutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "imageRequestBaseTypeDiscriminator": {
          "description": "Property used by Swagger for polymorphic object generation.",
          "type": "string"
        }
      },
      "discriminator": "imageRequestBaseTypeDiscriminator"
    },
    "DockerBuildContextResponse": {
      "type": "object",
      "properties": {
        "context": {
          "description": "The Docker build context.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DockerBuildContextResponseEntry"
          }
        },
        "dockerfilePath": {
          "description": "The Docker file path.",
          "type": "string"
        }
      }
    },
    "DockerBuildContextResponseEntry": {
      "description": "The Docker build context response.",
      "type": "object",
      "properties": {
        "content": {
          "description": "The content.",
          "type": "string"
        },
        "encoding": {
          "description": "The encoding type.",
          "enum": [
            "Base64"
          ],
          "type": "string",
          "example": "Base64",
          "x-ms-enum": {
            "name": "DockerBuildContextResponseEntryEncoding",
            "modelAsString": true
          }
        },
        "path": {
          "description": "The path to the file.",
          "type": "string"
        }
      }
    },
    "PaginatedModelList": {
      "description": "A paginated list of objects.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type T.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Model"
          }
        },
        "nextLink": {
          "description": "A continuation link (absolute URI) to the next page of results in the list.",
          "type": "string"
        }
      }
    },
    "ModelOperationalState": {
      "description": "The operational state of the Model.",
      "type": "object",
      "properties": {
        "deploymentSummary": {
          "$ref": "#/definitions/DeploymentSummary",
          "description": "The summary of the deployment."
        },
        "endTime": {
          "description": "The deployment end time.",
          "type": "string"
        },
        "startTime": {
          "description": "The deployment start time.",
          "type": "string"
        }
      }
    },
    "DeploymentSummary": {
      "description": "The deployment summary.",
      "type": "object",
      "properties": {
        "successfulDeployments": {
          "format": "int32",
          "description": "The number of successful deployments.",
          "type": "integer"
        },
        "unsuccessfulDeployments": {
          "format": "int32",
          "description": "The number of unsuccessful deployments.",
          "type": "integer"
        }
      }
    },
    "AsyncOperationStatus": {
      "description": "The async operation status.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The async operation id.",
          "type": "string"
        },
        "operationType": {
          "description": "The async operation type.",
          "type": "string"
        },
        "state": {
          "description": "The async operation state.",
          "enum": [
            "NotStarted",
            "Running",
            "Cancelled",
            "Succeeded",
            "Failed",
            "TimedOut"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AsyncOperationState",
            "modelAsString": true
          }
        },
        "createdTime": {
          "format": "date-time",
          "description": "The async operation creation time (UTC).",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "The async operation end time (UTC)l",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ModelErrorResponse",
          "description": "The error details."
        },
        "resourceLocation": {
          "description": "The resource created/updated by the async operation.",
          "type": "string"
        },
        "operationLog": {
          "description": "The async operation log.",
          "type": "string"
        },
        "operationDetails": {
          "$ref": "#/definitions/AsyncOperationDetails",
          "description": "The async operation details."
        }
      }
    },
    "AsyncOperationDetails": {
      "description": "The async operation details.",
      "required": [
        "asyncOperationDetailsTypeDiscriminator"
      ],
      "type": "object",
      "properties": {
        "subOperationType": {
          "description": "The suboperation type.",
          "type": "string"
        },
        "subOperationState": {
          "description": "The suboperation state.",
          "type": "string"
        },
        "asyncOperationDetailsTypeDiscriminator": {
          "description": "Property used by Swagger for polymorphic object generation.",
          "type": "string"
        }
      },
      "discriminator": "asyncOperationDetailsTypeDiscriminator"
    },
    "ProfileResponseBase": {
      "description": "The profile response.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The profile name.",
          "type": "string"
        },
        "description": {
          "description": "The profile description.",
          "type": "string"
        },
        "imageId": {
          "description": "The Image Id.",
          "type": "string"
        },
        "inputData": {
          "description": "The input data.",
          "type": "string"
        },
        "state": {
          "description": "The state of the profile.",
          "type": "string"
        },
        "createdTime": {
          "format": "date-time",
          "description": "The profile creation time (UTC).",
          "type": "string"
        },
        "kvTags": {
          "description": "The profile tags dictionary. Tags are mutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The profile properties dictionary. Properties are immutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "recommendedMemoryInGB": {
          "format": "double",
          "description": "The recommended amount of memory to allocate in GB.",
          "type": "number"
        },
        "recommendedCpu": {
          "format": "double",
          "description": "The recommended CPU allocation.",
          "type": "number"
        },
        "latencyInMsAtRecommendedMemory": {
          "format": "double",
          "description": "The recommended memory latency in milliseconds.",
          "type": "number"
        },
        "latencyInMsAtRecommendedCpu": {
          "format": "double",
          "description": "The recommended CPU latency in milliseconds.",
          "type": "number"
        },
        "profileRunResult": {
          "description": "The profile run result.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ModelErrorResponse",
          "description": "The error details."
        },
        "profilingErrorLogs": {
          "description": "The profiling error logs.",
          "type": "string"
        }
      }
    },
    "PaginatedProfileList": {
      "description": "A paginated list of objects.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type T.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProfileResponseBase"
          }
        },
        "nextLink": {
          "description": "A continuation link (absolute URI) to the next page of results in the list.",
          "type": "string"
        }
      }
    },
    "ProfileRequestBase": {
      "description": "The request for creating a profile.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The profile name.",
          "type": "string"
        },
        "description": {
          "description": "The profile description.",
          "type": "string"
        },
        "inputData": {
          "description": "The profile input data.",
          "type": "string"
        },
        "kvTags": {
          "description": "The tags dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The properties dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ServiceResponseBase": {
      "description": "The base service response. The correct inherited response based on computeType will be returned (ex. ACIServiceResponse)",
      "required": [
        "serviceResponseBaseTypeDiscriminator"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The service Id.",
          "type": "string"
        },
        "name": {
          "description": "The service name.",
          "type": "string"
        },
        "description": {
          "description": "The service description.",
          "type": "string"
        },
        "tags": {
          "description": "The service tag list.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kvTags": {
          "description": "The service tag dictionary. Tags are mutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The service property dictionary. Properties are immutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "description": "The current state of the service.",
          "enum": [
            "Transitioning",
            "Healthy",
            "Unhealthy",
            "Failed"
          ],
          "type": "string",
          "example": "Healthy",
          "x-ms-enum": {
            "name": "WebServiceState",
            "modelAsString": true
          }
        },
        "createdTime": {
          "format": "date-time",
          "description": "The time the service was created.",
          "type": "string"
        },
        "updatedTime": {
          "format": "date-time",
          "description": "The time the service was updated.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ModelErrorResponse",
          "description": "The error details."
        },
        "computeType": {
          "description": "The compute environment type for the service.",
          "enum": [
            "ACS",
            "FPGA",
            "ACI",
            "AKS",
            "AMLCOMPUTE",
            "IOT",
            "MIR"
          ],
          "type": "string",
          "example": "AKS",
          "x-ms-enum": {
            "name": "ComputeEnvironmentType",
            "modelAsString": true
          }
        },
        "deploymentType": {
          "description": "The deployment type for the service.",
          "enum": [
            "GRPCRealtimeEndpoint",
            "HttpRealtimeEndpoint"
          ],
          "type": "string",
          "example": "HttpRealtimeEndpoint",
          "x-ms-enum": {
            "name": "DeploymentType",
            "modelAsString": true
          }
        },
        "serviceResponseBaseTypeDiscriminator": {
          "description": "Property used by Swagger for polymorphic object generation.",
          "type": "string"
        }
      },
      "discriminator": "serviceResponseBaseTypeDiscriminator"
    },
    "PaginatedServiceList": {
      "description": "A paginated list of objects.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type T.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceResponseBase"
          }
        },
        "nextLink": {
          "description": "A continuation link (absolute URI) to the next page of results in the list.",
          "type": "string"
        }
      }
    },
    "CreateServiceRequest": {
      "description": "The base class for creating a service.",
      "required": [
        "createServiceRequestTypeDiscriminator"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The service name.",
          "type": "string"
        },
        "creationMode": {
          "format": "int32",
          "description": "The service creation mode.",
          "enum": [
            "Image",
            "RegisteredModel",
            "ModelFiles",
            "Environment"
          ],
          "type": "integer",
          "example": "Image",
          "x-ms-enum": {
            "name": "ServiceCreationSource",
            "modelAsString": true
          }
        },
        "dependencies": {
          "$ref": "#/definitions/ServiceCreationDependentEntities",
          "description": "The entities (like models and images) that the service is dependent on and that need to be created as part of this call."
        },
        "description": {
          "description": "The description of the service.",
          "type": "string"
        },
        "tags": {
          "description": "The service tag list.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kvTags": {
          "description": "The service tag dictionary. Tags are mutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The service properties dictionary. Properties are immutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "keys": {
          "$ref": "#/definitions/AuthKeys",
          "description": "The authentication keys."
        },
        "computeType": {
          "description": "The compute environment type for the service.",
          "enum": [
            "ACS",
            "FPGA",
            "ACI",
            "AKS",
            "AMLCOMPUTE",
            "IOT",
            "MIR"
          ],
          "type": "string",
          "example": "AKS",
          "x-ms-enum": {
            "name": "ComputeEnvironmentType",
            "modelAsString": true
          }
        },
        "deploymentType": {
          "description": "The deployment type for the service.",
          "enum": [
            "GRPCRealtimeEndpoint",
            "HttpRealtimeEndpoint"
          ],
          "type": "string",
          "example": "HttpRealtimeEndpoint",
          "x-ms-enum": {
            "name": "DeploymentType",
            "modelAsString": true
          }
        },
        "imageId": {
          "description": "The Image Id.",
          "type": "string"
        },
        "location": {
          "description": "The location of the service.",
          "type": "string"
        },
        "createServiceRequestTypeDiscriminator": {
          "description": "Property used by Swagger for polymorphic object generation.",
          "type": "string"
        }
      },
      "discriminator": "createServiceRequestTypeDiscriminator"
    },
    "ServiceCreationDependentEntities": {
      "description": "The dependent entities for the service.",
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/ImageRequestBase",
          "description": "The Image details."
        }
      }
    },
    "AuthKeys": {
      "type": "object",
      "properties": {
        "primaryKey": {
          "description": "The primary key.",
          "type": "string"
        },
        "secondaryKey": {
          "description": "The secondary key.",
          "type": "string"
        }
      }
    },
    "RegenerateServiceKeysRequest": {
      "type": "object",
      "properties": {
        "keyType": {
          "format": "int32",
          "description": "Specification for which type of key to generate.",
          "enum": [
            "Primary",
            "Secondary"
          ],
          "type": "integer",
          "example": "Primary",
          "x-ms-enum": {
            "name": "KeyType",
            "modelAsString": true
          }
        },
        "keyValue": {
          "description": "The value the key is set to.",
          "type": "string"
        }
      }
    },
    "RegisterServiceRequest": {
      "description": "The base class for registering a service.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the service to register.",
          "type": "string"
        },
        "description": {
          "description": "The description of the service.",
          "type": "string"
        },
        "kvTags": {
          "description": "The service tag dictionary. Tags are mutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The service properties dictionary. Properties are immutable.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "computeType": {
          "description": "The type of compute environment used by the service.",
          "enum": [
            "ACS",
            "FPGA",
            "ACI",
            "AKS",
            "AMLCOMPUTE",
            "IOT",
            "MIR"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ComputeEnvironmentType",
            "modelAsString": true
          }
        }
      }
    },
    "DockerImageResponse": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ImageResponseBase"
        },
        {
          "type": "object",
          "properties": {
            "driverProgram": {
              "description": "The name of the driver file.",
              "type": "string"
            },
            "assets": {
              "description": "The list of assets.",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ImageAsset"
              }
            },
            "targetRuntime": {
              "$ref": "#/definitions/TargetRuntime",
              "description": "The target runtime."
            },
            "dockerFileUri": {
              "description": "The Uri to the docker file.",
              "type": "string"
            },
            "generatedDockerFileUri": {
              "description": "The Uri to the generated docker file.",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "ImageAsset": {
      "description": "An Image asset.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The Asset Id.",
          "type": "string"
        },
        "mimeType": {
          "description": "The mime type.",
          "type": "string"
        },
        "url": {
          "description": "The Url of the Asset.",
          "type": "string"
        },
        "unpack": {
          "description": "Whether the Asset is unpacked.",
          "type": "boolean"
        }
      }
    },
    "TargetRuntime": {
      "description": "The target runtime.",
      "type": "object",
      "properties": {
        "targetArchitecture": {
          "description": "The target architecture.",
          "enum": [
            "Amd64",
            "Arm32v7"
          ],
          "type": "string",
          "example": "Amd64",
          "x-ms-enum": {
            "name": "ArchitectureType",
            "modelAsString": true
          }
        },
        "runtimeType": {
          "description": "The target runtime type.",
          "enum": [
            "SparkPython",
            "Tlc37",
            "Tlc38",
            "Tlc310",
            "Python",
            "PythonSlim",
            "PythonCustom"
          ],
          "type": "string",
          "example": "Python",
          "x-ms-enum": {
            "name": "RuntimeType",
            "modelAsString": true
          }
        },
        "properties": {
          "description": "The properties dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "FPGADockerImageResponse": {
      "description": "The FPGA Docker Image response.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ImageResponseBase"
        },
        {
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "FPGAImageResponse": {
      "description": "The FPGA Image response.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ImageResponseBase"
        },
        {
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "DockerImageRequest": {
      "description": "Request to create a Docker image.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ImageRequestBase"
        },
        {
          "type": "object",
          "properties": {
            "driverProgram": {
              "description": "The name of the driver file.",
              "type": "string"
            },
            "assets": {
              "description": "The list of assets.",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ImageAsset"
              }
            },
            "targetRuntime": {
              "$ref": "#/definitions/TargetRuntime",
              "description": "The target runtime."
            },
            "dockerFileUri": {
              "description": "The Uri to the docker file.",
              "type": "string"
            },
            "baseImageRegistryInfo": {
              "$ref": "#/definitions/RegistryInfo",
              "description": "The details of the base image registry."
            },
            "baseImage": {
              "description": "The name of the base Docker image.",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "RegistryInfo": {
      "description": "Contains registry information.",
      "required": [
        "user",
        "location",
        "password"
      ],
      "type": "object",
      "properties": {
        "user": {
          "description": "The user.",
          "type": "string"
        },
        "location": {
          "description": "The location.",
          "type": "string"
        },
        "password": {
          "description": "The password.",
          "type": "string"
        }
      }
    },
    "FPGADockerImageRequest": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ImageRequestBase"
        },
        {
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "FPGAImageRequest": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ImageRequestBase"
        },
        {
          "type": "object",
          "properties": {}
        }
      ],
      "properties": {}
    },
    "ACIServiceResponse": {
      "description": "The response for an AKS service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResponseBase"
        },
        {
          "type": "object",
          "properties": {
            "containerResourceRequirements": {
              "$ref": "#/definitions/ContainerResourceRequirements",
              "description": "The container resource requirements."
            },
            "imageId": {
              "description": "The Id of the Image.",
              "type": "string"
            },
            "servingContainerInferenceConfiguration": {
              "$ref": "#/definitions/ServingContainerInferenceConfiguration",
              "description": "The Image configuration details."
            },
            "imageDetails": {
              "$ref": "#/definitions/DockerImageResponse",
              "description": "The Image details."
            },
            "scoringUri": {
              "description": "The Uri for sending scoring requests.",
              "type": "string"
            },
            "location": {
              "description": "The location of the service.",
              "type": "string"
            },
            "authEnabled": {
              "description": "Whether or not authentication is enabled on the service.",
              "type": "boolean"
            },
            "sslEnabled": {
              "description": "Whether or not SSL is enabled.",
              "type": "boolean"
            },
            "appInsightsEnabled": {
              "description": "Whether or not Application Insights is enabled.",
              "type": "boolean"
            },
            "dataCollection": {
              "$ref": "#/definitions/ModelDataCollection",
              "description": "Details of the data collection options specified."
            },
            "sslCertificate": {
              "description": "The SSL certificate to use if SSL is enabled.",
              "type": "string"
            },
            "sslKey": {
              "description": "The SSL key for the certificate.",
              "type": "string"
            },
            "cname": {
              "description": "The CName for the service.",
              "type": "string"
            },
            "publicIp": {
              "description": "The public IP address for the service.",
              "type": "string"
            },
            "swaggerUri": {
              "description": "The Uri for sending swagger requests.",
              "type": "string"
            },
            "modelConfigMap": {
              "description": "Details on the models and configurations.",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "ContainerResourceRequirements": {
      "description": "The resource requirements for the container (cpu and memory).",
      "type": "object",
      "properties": {
        "cpu": {
          "format": "double",
          "description": "The number of CPU cores on the container.",
          "type": "number",
          "example": "4"
        },
        "memoryInGB": {
          "format": "double",
          "description": "The amount of memory on the container in GB.",
          "type": "number",
          "example": "64"
        },
        "gpu": {
          "format": "int32",
          "description": "The number of GPU cores in the container.",
          "type": "integer"
        },
        "fpga": {
          "format": "int32",
          "description": "The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.",
          "type": "integer"
        }
      }
    },
    "ServingContainerInferenceConfiguration": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "imageLocation": {
          "type": "string"
        },
        "internalPort": {
          "format": "int32",
          "type": "integer"
        },
        "workingDirectory": {
          "type": "string"
        },
        "defaultScoringPath": {
          "type": "string"
        },
        "healthPath": {
          "type": "string"
        },
        "runCommandWithParameters": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "gpuRequired": {
          "default": false,
          "type": "boolean"
        },
        "swaggerPath": {
          "type": "string"
        },
        "modelIds": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "imageRegistryInfo": {
          "$ref": "#/definitions/RegistryInfo"
        }
      }
    },
    "ModelDataCollection": {
      "description": "The Model data collection properties.",
      "type": "object",
      "properties": {
        "eventHubEnabled": {
          "description": "Option for enabling/disabling Event Hub.",
          "type": "boolean",
          "example": "False"
        },
        "storageEnabled": {
          "description": "Option for enabling/disabling storage.",
          "type": "boolean",
          "example": "False"
        }
      }
    },
    "AmlComputeBatchServiceResponse": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResponseBase"
        },
        {
          "type": "object",
          "properties": {
            "modelIds": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "computeName": {
              "type": "string"
            },
            "scoringUri": {
              "type": "string"
            },
            "appInsightsEnabled": {
              "type": "boolean"
            },
            "modelDataCollection": {
              "$ref": "#/definitions/ModelDataCollection"
            },
            "entryScript": {
              "type": "string"
            },
            "snapshotId": {
              "type": "string"
            },
            "enableGpu": {
              "type": "boolean"
            },
            "nodeCount": {
              "format": "int32",
              "type": "integer"
            },
            "processCountPerNode": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      ],
      "properties": {}
    },
    "FPGAServiceResponse": {
      "description": "The response for a FPGA service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResponseBase"
        },
        {
          "type": "object",
          "properties": {
            "imageId": {
              "description": "The Id of the Image.",
              "type": "string"
            },
            "imageDetails": {
              "$ref": "#/definitions/FPGAImageResponse",
              "description": "The Image details."
            },
            "numReplicas": {
              "format": "int32",
              "description": "The number of replicas in the web service.",
              "type": "integer"
            },
            "ipAddress": {
              "description": "The IP address of the service.",
              "type": "string"
            },
            "port": {
              "format": "int32",
              "description": "The port of the service.",
              "type": "integer"
            },
            "sslEnabled": {
              "description": "Whether or not SSL is enabled.",
              "type": "boolean"
            },
            "sslCertificate": {
              "description": "The SSL certificate.",
              "type": "string"
            },
            "sslKey": {
              "description": "The SSL key.",
              "type": "string"
            }
          }
        }
      ],
      "properties": {}
    },
    "IotServiceResponse": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResponseBase"
        },
        {
          "type": "object",
          "properties": {
            "iotDeviceId": {
              "type": "string"
            },
            "routes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "computeName": {
              "type": "string"
            },
            "iotEdgeModules": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/IotModuleSettings"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "IotModuleSettings": {
      "type": "object",
      "properties": {
        "imageLocation": {
          "type": "string"
        },
        "moduleName": {
          "type": "string"
        },
        "propertiesDesired": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createOptions": {
          "type": "string"
        },
        "environmentVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "AKSServiceResponse": {
      "description": "The response for an AKS service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResponseBase"
        },
        {
          "type": "object",
          "properties": {
            "imageDetails": {
              "$ref": "#/definitions/ImageResponseBase",
              "description": "The Docker Image details."
            },
            "imageId": {
              "description": "The Id of the Image.",
              "type": "string"
            },
            "servingContainerInferenceConfiguration": {
              "$ref": "#/definitions/ServingContainerInferenceConfiguration",
              "description": "The Docker Image configuration."
            },
            "models": {
              "description": "The list of models.",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Model"
              }
            },
            "containerResourceRequirements": {
              "$ref": "#/definitions/ContainerResourceRequirements",
              "description": "The container resource requirements."
            },
            "maxConcurrentRequestsPerContainer": {
              "format": "int32",
              "description": "The maximum number of concurrent requests per container.",
              "type": "integer"
            },
            "maxQueueWaitMs": {
              "format": "int32",
              "description": "Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)",
              "type": "integer"
            },
            "computeName": {
              "description": "The name of the compute resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The Kubernetes namespace of the deployment.",
              "type": "string"
            },
            "numReplicas": {
              "format": "int32",
              "description": "The number of replicas on the cluster.",
              "type": "integer"
            },
            "dataCollection": {
              "$ref": "#/definitions/ModelDataCollection",
              "description": "Details of the data collection options specified."
            },
            "appInsightsEnabled": {
              "description": "Whether or not Application Insights is enabled.",
              "type": "boolean"
            },
            "autoScaler": {
              "$ref": "#/definitions/AutoScaler",
              "description": "The auto scaler properties."
            },
            "scoringUri": {
              "description": "The Uri for sending scoring requests.",
              "type": "string"
            },
            "deploymentStatus": {
              "$ref": "#/definitions/AKSReplicaStatus",
              "description": "The deployment status."
            },
            "scoringTimeoutMs": {
              "format": "int32",
              "description": "The scoring timeout in milliseconds.",
              "type": "integer"
            },
            "livenessProbeRequirements": {
              "$ref": "#/definitions/LivenessProbeRequirements",
              "description": "The liveness probe requirements."
            },
            "authEnabled": {
              "description": "Whether or not authentication is enabled.",
              "type": "boolean"
            },
            "swaggerUri": {
              "description": "The Uri for sending swagger requests.",
              "type": "string"
            },
            "modelConfigMap": {
              "description": "Details on the models and configurations.",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "AutoScaler": {
      "description": "The Auto Scaler properties.",
      "type": "object",
      "properties": {
        "autoscaleEnabled": {
          "description": "Option to enable/disable auto scaling.",
          "type": "boolean",
          "example": "True"
        },
        "minReplicas": {
          "format": "int32",
          "description": "The minimum number of replicas to scale down to.",
          "type": "integer",
          "example": "1"
        },
        "maxReplicas": {
          "format": "int32",
          "description": "The maximum number of replicas in the cluster.",
          "type": "integer",
          "example": "3"
        },
        "targetUtilization": {
          "format": "int32",
          "description": "The target utilization percentage to use for determining whether to scale the cluster.",
          "type": "integer",
          "example": "70"
        },
        "refreshPeriodInSeconds": {
          "format": "int32",
          "description": "The amount of seconds to wait between auto scale updates.",
          "type": "integer",
          "example": "120"
        }
      }
    },
    "AKSReplicaStatus": {
      "type": "object",
      "properties": {
        "desiredReplicas": {
          "format": "int32",
          "description": "The desired number of replicas.",
          "type": "integer",
          "example": "2"
        },
        "updatedReplicas": {
          "format": "int32",
          "description": "The number of updated replicas.",
          "type": "integer",
          "example": "1"
        },
        "availableReplicas": {
          "format": "int32",
          "description": "The number of available replicas.",
          "type": "integer",
          "example": "1"
        },
        "error": {
          "$ref": "#/definitions/ModelErrorResponse",
          "description": "The error details."
        }
      }
    },
    "LivenessProbeRequirements": {
      "description": "The liveness probe requirements.",
      "type": "object",
      "properties": {
        "failureThreshold": {
          "format": "int32",
          "description": "The number of failures to allow before returning an unhealthy status.",
          "type": "integer"
        },
        "successThreshold": {
          "format": "int32",
          "description": "The number of successful probes before returning a healthy status.",
          "type": "integer"
        },
        "timeoutSeconds": {
          "format": "int32",
          "description": "The probe timeout in seconds.",
          "type": "integer"
        },
        "periodSeconds": {
          "format": "int32",
          "description": "The length of time between probes in seconds.",
          "type": "integer"
        },
        "initialDelaySeconds": {
          "format": "int32",
          "description": "The delay before the first probe in seconds.",
          "type": "integer"
        }
      }
    },
    "ACIServiceCreateRequest": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CreateServiceRequest"
        },
        {
          "type": "object",
          "properties": {
            "containerResourceRequirements": {
              "$ref": "#/definitions/ContainerResourceRequirements",
              "description": "The container resource requirements."
            },
            "authEnabled": {
              "description": "Whether or not authentication is enabled on the service.",
              "default": false,
              "type": "boolean"
            },
            "sslEnabled": {
              "description": "Whether or not SSL is enabled.",
              "default": false,
              "type": "boolean"
            },
            "appInsightsEnabled": {
              "description": "Whether or not Application Insights is enabled.",
              "default": false,
              "type": "boolean"
            },
            "dataCollection": {
              "$ref": "#/definitions/ModelDataCollection",
              "description": "Details of the data collection options specified."
            },
            "sslCertificate": {
              "description": "The SSL certificate to use if SSL is enabled.",
              "type": "string"
            },
            "sslKey": {
              "description": "The SSL key for the certificate.",
              "type": "string"
            },
            "cname": {
              "description": "The CName for the service.",
              "type": "string"
            },
            "dnsNameLabel": {
              "description": "The Dns label for the service.",
              "type": "string"
            },
            "servingContainerInferenceConfiguration": {
              "$ref": "#/definitions/ServingContainerInferenceConfiguration"
            },
            "creationMode": {
              "format": "int32",
              "description": "The service creation mode.",
              "enum": [
                "Image",
                "RegisteredModel",
                "ModelFiles",
                "Environment"
              ],
              "type": "integer",
              "x-ms-enum": {
                "name": "ServiceCreationSource",
                "modelAsString": true
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "FPGAServiceCreateRequest": {
      "description": "The request to create a FPGA service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CreateServiceRequest"
        },
        {
          "type": "object",
          "properties": {
            "numReplicas": {
              "format": "int32",
              "description": "The number of replicas in the web service.",
              "type": "integer"
            },
            "sslEnabled": {
              "description": "Whether or not SSL is enabled.",
              "type": "boolean"
            },
            "sslCertificate": {
              "description": "The SSL certificate.",
              "type": "string"
            },
            "sslKey": {
              "description": "The SSL key.",
              "type": "string"
            },
            "creationMode": {
              "format": "int32",
              "description": "The service creation mode.",
              "enum": [
                "Image",
                "RegisteredModel",
                "ModelFiles",
                "Environment"
              ],
              "type": "integer",
              "x-ms-enum": {
                "name": "ServiceCreationSource",
                "modelAsString": true
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "CreateIotServiceRequest": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CreateServiceRequest"
        },
        {
          "type": "object",
          "properties": {
            "iotDeviceId": {
              "type": "string"
            },
            "routes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "iotEdgeUserModule": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/IotModuleSettings"
              }
            },
            "iotEdgeModule": {
              "$ref": "#/definitions/IotBaseModuleSettings"
            },
            "computeName": {
              "type": "string"
            },
            "acrCredentials": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/RegistryInfo"
              }
            },
            "creationMode": {
              "format": "int32",
              "description": "The service creation mode.",
              "enum": [
                "Image",
                "RegisteredModel",
                "ModelFiles",
                "Environment"
              ],
              "type": "integer",
              "x-ms-enum": {
                "name": "ServiceCreationSource",
                "modelAsString": true
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "IotBaseModuleSettings": {
      "type": "object",
      "properties": {
        "moduleName": {
          "type": "string"
        },
        "propertiesDesired": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createOptions": {
          "type": "string"
        },
        "environmentVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "AKSServiceCreateRequest": {
      "description": "The request to create an AKS service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CreateServiceRequest"
        },
        {
          "type": "object",
          "properties": {
            "numReplicas": {
              "format": "int32",
              "description": "The number of replicas on the cluster.",
              "type": "integer"
            },
            "dataCollection": {
              "$ref": "#/definitions/ModelDataCollection",
              "description": "Details of the data collection options specified."
            },
            "computeName": {
              "description": "The name of the compute resource.",
              "type": "string"
            },
            "appInsightsEnabled": {
              "description": "Whether or not Application Insights is enabled.",
              "type": "boolean"
            },
            "autoScaler": {
              "$ref": "#/definitions/AutoScaler",
              "description": "The auto scaler properties."
            },
            "containerResourceRequirements": {
              "$ref": "#/definitions/ContainerResourceRequirements",
              "description": "The container resource requirements."
            },
            "maxConcurrentRequestsPerContainer": {
              "format": "int32",
              "description": "The maximum number of concurrent requests per container.",
              "type": "integer"
            },
            "maxQueueWaitMs": {
              "format": "int32",
              "description": "Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)",
              "type": "integer"
            },
            "namespace": {
              "description": "Kubernetes namespace for the service.",
              "type": "string"
            },
            "scoringTimeoutMs": {
              "format": "int32",
              "description": "The scoring timeout in milliseconds.",
              "type": "integer"
            },
            "authEnabled": {
              "description": "Whether or not authentication is enabled.",
              "type": "boolean"
            },
            "servingContainerInferenceConfiguration": {
              "$ref": "#/definitions/ServingContainerInferenceConfiguration"
            },
            "livenessProbeRequirements": {
              "$ref": "#/definitions/LivenessProbeRequirements",
              "description": "The liveness probe requirements."
            },
            "creationMode": {
              "format": "int32",
              "description": "The service creation mode.",
              "enum": [
                "Image",
                "RegisteredModel",
                "ModelFiles",
                "Environment"
              ],
              "type": "integer",
              "x-ms-enum": {
                "name": "ServiceCreationSource",
                "modelAsString": true
              }
            }
          }
        }
      ],
      "properties": {}
    },
    "CreateServiceInMirRequest": {
      "description": "The request to create a service on MIR resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CreateServiceRequest"
        },
        {
          "type": "object",
          "properties": {
            "numReplicas": {
              "format": "int32",
              "description": "The number of replicas on the cluster.",
              "type": "integer"
            },
            "modelDataCollection": {
              "$ref": "#/definitions/ModelDataCollection",
              "description": "Details of the data collection options specified."
            },
            "computeName": {
              "description": "The name of the compute resource.",
              "type": "string"
            },
            "autoScaler": {
              "$ref": "#/definitions/AutoScaler",
              "description": "The auto scaler properties."
            },
            "containerResourceRequirements": {
              "$ref": "#/definitions/ContainerResourceRequirements",
              "description": "The container resource requirements."
            },
            "maxConcurrentRequestsPerContainer": {
              "format": "int32",
              "description": "The maximum number of concurrent requests per container.",
              "type": "integer"
            },
            "scoringTimeoutMs": {
              "format": "int32",
              "description": "The scoring timeout in milliseconds.",
              "type": "integer"
            },
            "authEnabled": {
              "description": "Whether or not authentication is enabled.",
              "type": "boolean"
            },
            "livenessProbeRequirements": {
              "$ref": "#/definitions/LivenessProbeRequirements",
              "description": "The liveness probe requirements."
            },
            "creationMode": {
              "format": "int32",
              "description": "The service creation mode.",
              "enum": [
                "Image",
                "RegisteredModel",
                "ModelFiles",
                "Environment"
              ],
              "type": "integer",
              "x-ms-enum": {
                "name": "ServiceCreationSource",
                "modelAsString": true
              }
            }
          }
        }
      ],
      "properties": {}
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "type": "oauth2"
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "tags": []
}