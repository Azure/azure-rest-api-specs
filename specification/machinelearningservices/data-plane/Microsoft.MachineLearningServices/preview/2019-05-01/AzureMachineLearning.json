{
  "swagger": "2.0",
  "info": {
    "description": "These APIs allow end users to manage Azure Machine Learning Services.",
    "title": "Azure Machine Learning Service",
    "version": "2019-05-01"
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{region}.{dnsSuffix}",
    "parameters": [
      {
        "$ref": "#/parameters/region"
      },
      {
        "$ref": "#/parameters/dnsSuffix"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "tags": [],
  "definitions": {
    "ACIServiceCreateRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/ServiceCreateRequest"
        },
        {
          "properties": {
            "appInsightsEnabled": {
              "default": false,
              "description": "Whether or not Application Insights is enabled.",
              "type": "boolean"
            },
            "authEnabled": {
              "default": false,
              "description": "Whether or not authentication is enabled on the service.",
              "type": "boolean"
            },
            "cname": {
              "description": "The CName for the service.",
              "type": "string"
            },
            "containerResourceRequirements": {
              "$ref": "#/definitions/ContainerResourceRequirements",
              "description": "The container resource requirements."
            },
            "creationMode": {
              "description": "The service creation mode.",
              "enum": [
                "Image",
                "RegisteredModel",
                "ModelFiles",
                "Environment"
              ],
              "format": "int32",
              "type": "integer",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceCreationSource",
                "oldModelAsString": true
              }
            },
            "sslCertificate": {
              "description": "The SSL certificate to use if SSL is enabled.",
              "type": "string"
            },
            "sslEnabled": {
              "default": false,
              "description": "Whether or not SSL is enabled.",
              "type": "boolean"
            },
            "sslKey": {
              "description": "The SSL key for the certificate.",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ACIServiceResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResponseBase"
        },
        {
          "properties": {
            "appInsightsEnabled": {
              "description": "Whether or not Application Insights is enabled.",
              "type": "boolean"
            },
            "authEnabled": {
              "description": "Whether or not authentication is enabled on the service.",
              "type": "boolean"
            },
            "cname": {
              "description": "The CName for the service.",
              "type": "string"
            },
            "containerResourceRequirements": {
              "$ref": "#/definitions/ContainerResourceRequirements",
              "description": "The container resource requirements."
            },
            "imageDetails": {
              "$ref": "#/definitions/DockerImageResponse",
              "description": "The Image details."
            },
            "imageId": {
              "description": "The Id of the Image.",
              "type": "string"
            },
            "location": {
              "description": "The location of the service.",
              "type": "string"
            },
            "publicIp": {
              "description": "The public IP address for the service.",
              "type": "string"
            },
            "scoringUri": {
              "description": "The Uri for sending scoring requests.",
              "type": "string"
            },
            "sslCertificate": {
              "description": "The SSL certificate to use if SSL is enabled.",
              "type": "string"
            },
            "sslEnabled": {
              "description": "Whether or not SSL is enabled.",
              "type": "boolean"
            },
            "sslKey": {
              "description": "The SSL key for the certificate.",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "The response for an AKS service.",
      "properties": {},
      "type": "object"
    },
    "AKSReplicaStatus": {
      "properties": {
        "availableReplicas": {
          "description": "The number of available replicas.",
          "example": "1",
          "format": "int32",
          "type": "integer"
        },
        "desiredReplicas": {
          "description": "The desired number of replicas.",
          "example": "2",
          "format": "int32",
          "type": "integer"
        },
        "error": {
          "$ref": "#/definitions/ModelErrorResponse",
          "description": "The error details."
        },
        "updatedReplicas": {
          "description": "The number of updated replicas.",
          "example": "1",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "AKSServiceCreateRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/ServiceCreateRequest"
        },
        {
          "properties": {
            "appInsightsEnabled": {
              "description": "Whether or not Application Insights is enabled.",
              "type": "boolean"
            },
            "authEnabled": {
              "description": "Whether or not authentication is enabled.",
              "type": "boolean"
            },
            "autoScaler": {
              "$ref": "#/definitions/AutoScaler",
              "description": "The auto scaler properties."
            },
            "computeName": {
              "description": "The name of the compute resource.",
              "type": "string"
            },
            "containerResourceRequirements": {
              "$ref": "#/definitions/ContainerResourceRequirements",
              "description": "The container resource requirements."
            },
            "creationMode": {
              "description": "The service creation mode.",
              "enum": [
                "Image",
                "RegisteredModel",
                "ModelFiles",
                "Environment"
              ],
              "format": "int32",
              "type": "integer",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceCreationSource",
                "oldModelAsString": true
              }
            },
            "dataCollection": {
              "$ref": "#/definitions/ModelDataCollection",
              "description": "Details of the data collection options specified."
            },
            "livenessProbeRequirements": {
              "$ref": "#/definitions/LivenessProbeRequirements",
              "description": "The liveness probe requirements."
            },
            "maxConcurrentRequestsPerContainer": {
              "description": "The maximum number of concurrent requests per container.",
              "format": "int32",
              "type": "integer"
            },
            "maxQueueWaitMs": {
              "description": "Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)",
              "format": "int32",
              "type": "integer"
            },
            "numReplicas": {
              "description": "The number of replicas on the cluster.",
              "format": "int32",
              "type": "integer"
            },
            "scoringTimeoutMs": {
              "description": "The scoring timeout in milliseconds.",
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "description": "The request to create an AKS service.",
      "properties": {},
      "type": "object"
    },
    "AKSServiceResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResponseBase"
        },
        {
          "properties": {
            "appInsightsEnabled": {
              "description": "Whether or not Application Insights is enabled.",
              "type": "boolean"
            },
            "authEnabled": {
              "description": "Whether or not authentication is enabled.",
              "type": "boolean"
            },
            "autoScaler": {
              "$ref": "#/definitions/AutoScaler",
              "description": "The auto scaler properties."
            },
            "computeName": {
              "description": "The name of the compute resource.",
              "type": "string"
            },
            "containerResourceRequirements": {
              "$ref": "#/definitions/ContainerResourceRequirements",
              "description": "The container resource requirements."
            },
            "dataCollection": {
              "$ref": "#/definitions/ModelDataCollection",
              "description": "Details of the data collection options specified."
            },
            "deploymentStatus": {
              "$ref": "#/definitions/AKSReplicaStatus",
              "description": "The deployment status."
            },
            "imageDetails": {
              "$ref": "#/definitions/ImageResponseBase",
              "description": "The Docker Image details."
            },
            "imageId": {
              "description": "The Id of the Image.",
              "type": "string"
            },
            "livenessProbeRequirements": {
              "$ref": "#/definitions/LivenessProbeRequirements",
              "description": "The liveness probe requirements."
            },
            "maxConcurrentRequestsPerContainer": {
              "description": "The maximum number of concurrent requests per container.",
              "format": "int32",
              "type": "integer"
            },
            "maxQueueWaitMs": {
              "description": "Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)",
              "format": "int32",
              "type": "integer"
            },
            "models": {
              "description": "The list of models.",
              "items": {
                "$ref": "#/definitions/Model"
              },
              "type": "array",
              "uniqueItems": false
            },
            "numReplicas": {
              "description": "The number of replicas on the cluster.",
              "format": "int32",
              "type": "integer"
            },
            "scoringTimeoutMs": {
              "description": "The scoring timeout in milliseconds.",
              "format": "int32",
              "type": "integer"
            },
            "scoringUri": {
              "description": "The Uri for sending scoring requests.",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "The response for an AKS service.",
      "properties": {},
      "type": "object"
    },
    "AMLComputeConfiguration": {
      "properties": {
        "clusterMaxNodeCount": {
          "description": "The maximum number of nodes that the cluster can scale up to.",
          "example": "10",
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "description": "The name of the AMLCompute cluster.",
          "example": "my8nodeCluster",
          "type": "string"
        },
        "retainCluster": {
          "description": "Setting to true will prevent the cluster from being deleted upon completion of the run.",
          "example": "False",
          "type": "boolean"
        },
        "vmPriority": {
          "description": "VM priority of the Cluster to be created. Allowed values are dedicated and lowpriority.",
          "example": "dedicated",
          "type": "string"
        },
        "vmSize": {
          "description": "VM size of the Cluster to be created. Allowed values are Azure vm sizes.\r\nThe list of vm sizes is available in https://docs.microsoft.com/en-us/azure/cloud-services/cloud-services-sizes-specs",
          "example": "Standard_D2_v2",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ArtifactContentInformationDto": {
      "properties": {
        "container": {
          "type": "string"
        },
        "contentUri": {
          "type": "string"
        },
        "origin": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ArtifactDto": {
      "properties": {
        "artifactId": {
          "type": "string"
        },
        "container": {
          "type": "string"
        },
        "createdTime": {
          "format": "date-time",
          "type": "string"
        },
        "etag": {
          "type": "string"
        },
        "origin": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ArtifactPathDto": {
      "properties": {
        "path": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AssetDto": {
      "properties": {
        "assetId": {
          "format": "uuid",
          "type": "string"
        },
        "currentVersion": {
          "$ref": "#/definitions/AssetVersionDto"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AssetVersionDto": {
      "properties": {
        "file": {
          "$ref": "#/definitions/AssetVersionFileDto"
        },
        "fileOrFolder": {
          "type": "string"
        },
        "folder": {
          "items": {
            "$ref": "#/definitions/AssetVersionFolderItemDto"
          },
          "type": "array",
          "uniqueItems": false
        },
        "isCurrent": {
          "type": "boolean"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "type": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AssetVersionFileDto": {
      "properties": {
        "artifactId": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AssetVersionFolderItemDto": {
      "properties": {
        "artifactId": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AsyncOperationDetails": {
      "description": "The async operation details.",
      "discriminator": "asyncOperationDetailsTypeDiscriminator",
      "properties": {
        "asyncOperationDetailsTypeDiscriminator": {
          "description": "Property used by Swagger for polymorphic object generation.",
          "type": "string"
        },
        "subOperationState": {
          "description": "The suboperation state.",
          "type": "string"
        },
        "subOperationType": {
          "description": "The suboperation type.",
          "type": "string"
        }
      },
      "required": [
        "asyncOperationDetailsTypeDiscriminator"
      ],
      "type": "object"
    },
    "AsyncOperationStatus": {
      "description": "The async operation status.",
      "properties": {
        "createdTime": {
          "description": "The async operation creation time (UTC).",
          "format": "date-time",
          "type": "string"
        },
        "endTime": {
          "description": "The async operation end time (UTC)l",
          "format": "date-time",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ModelErrorResponse",
          "description": "The error details."
        },
        "id": {
          "description": "The async operation id.",
          "type": "string"
        },
        "operationDetails": {
          "$ref": "#/definitions/AsyncOperationDetails",
          "description": "The async operation details."
        },
        "operationLog": {
          "description": "The async operation log.",
          "type": "string"
        },
        "operationType": {
          "description": "The async operation type.",
          "type": "string"
        },
        "resourceLocation": {
          "description": "The resource created/updated by the async operation.",
          "type": "string"
        },
        "state": {
          "description": "The async operation state.",
          "enum": [
            "NotStarted",
            "Running",
            "Cancelled",
            "Succeeded",
            "Failed",
            "TimedOut"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "AsyncOperationState",
            "oldModelAsString": true
          }
        }
      },
      "type": "object"
    },
    "AuthKeys": {
      "properties": {
        "primaryKey": {
          "description": "The primary key.",
          "type": "string"
        },
        "secondaryKey": {
          "description": "The secondary key.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AutoScaler": {
      "description": "The Auto Scaler properties.",
      "properties": {
        "autoscaleEnabled": {
          "description": "Option to enable/disable auto scaling.",
          "example": "True",
          "type": "boolean"
        },
        "maxReplicas": {
          "description": "The maximum number of replicas in the cluster.",
          "example": "3",
          "format": "int32",
          "type": "integer"
        },
        "minReplicas": {
          "description": "The minimum number of replicas to scale down to.",
          "example": "1",
          "format": "int32",
          "type": "integer"
        },
        "refreshPeriodInSeconds": {
          "description": "The amount of seconds to wait between auto scale updates.",
          "example": "120",
          "format": "int32",
          "type": "integer"
        },
        "targetUtilization": {
          "description": "The target utilization percentage to use for determining whether to scale the cluster.",
          "example": "70",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "AzureDataLakeDto": {
      "properties": {
        "authorityUrl": {
          "description": "The authority URL used for authentication",
          "type": "string"
        },
        "certificate": {
          "description": "The content of the certificate used for authentication",
          "type": "string"
        },
        "clientId": {
          "description": "The Client ID/Application ID",
          "format": "uuid",
          "type": "string"
        },
        "clientSecret": {
          "description": "The client secret",
          "type": "string"
        },
        "isCertAuth": {
          "description": "Is it using certificate to authenticate. If false then use client secret",
          "type": "boolean"
        },
        "resourceGroup": {
          "description": "Resource Group Name",
          "type": "string"
        },
        "resourceUri": {
          "description": "The resource the service principal/app has access to",
          "type": "string"
        },
        "storeName": {
          "description": "The Azure Data Lake store name",
          "type": "string"
        },
        "subscriptionId": {
          "description": "Subscription Id",
          "format": "uuid",
          "type": "string"
        },
        "tenantId": {
          "description": "The ID of the tenant the service principal/app belongs to",
          "format": "uuid",
          "type": "string"
        },
        "thumbprint": {
          "description": "The thumbprint of the certificate above",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AzurePostgreSqlDto": {
      "properties": {
        "databaseName": {
          "description": "The Azure PostgreSQL database name",
          "type": "string"
        },
        "endpoint": {
          "description": "The Azure PostgreSQL server host endpoint",
          "type": "string"
        },
        "portNumber": {
          "description": "The Azure PostgreSQL port number",
          "type": "string"
        },
        "resourceGroup": {
          "description": "Resource Group Name",
          "type": "string"
        },
        "serverName": {
          "description": "The Azure PostgreSQL server name",
          "type": "string"
        },
        "subscriptionId": {
          "description": "Subscription Id",
          "format": "uuid",
          "type": "string"
        },
        "userId": {
          "description": "The Azure PostgreSQL user id",
          "type": "string"
        },
        "userPassword": {
          "description": "The Azure PostgreSQL user password",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AzureSqlDatabaseDto": {
      "properties": {
        "authorityUrl": {
          "description": "The authority URL used for authentication",
          "type": "string"
        },
        "certificate": {
          "description": "The content of the certificate used for authentication",
          "type": "string"
        },
        "clientId": {
          "description": "The Client ID/Application ID",
          "format": "uuid",
          "type": "string"
        },
        "clientSecret": {
          "description": "The client secret",
          "type": "string"
        },
        "databaseName": {
          "description": "The Azure SQL database name",
          "type": "string"
        },
        "endpoint": {
          "description": "The server host endpoint",
          "type": "string"
        },
        "isCertAuth": {
          "description": "Is it using certificate to authenticate. If false then use client secret",
          "type": "boolean"
        },
        "resourceGroup": {
          "description": "Resource Group Name",
          "type": "string"
        },
        "resourceUri": {
          "description": "The resource the service principal/app has access to",
          "type": "string"
        },
        "serverName": {
          "description": "The Azure SQL server name",
          "type": "string"
        },
        "subscriptionId": {
          "description": "Subscription Id",
          "format": "uuid",
          "type": "string"
        },
        "tenantId": {
          "description": "The ID of the tenant the service principal/app belongs to",
          "format": "uuid",
          "type": "string"
        },
        "thumbprint": {
          "description": "The thumbprint of the certificate above",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AzureStorageDto": {
      "properties": {
        "accountKey": {
          "description": "Storage Account Key (Deprecated)",
          "type": "string"
        },
        "accountName": {
          "description": "Storage Account Name",
          "type": "string"
        },
        "blobCacheTimeout": {
          "description": "If this is an Microsoft.MachineLearning.DataStore.Contracts.DataStoreType.AzureBlob, the length of time (in seconds) to cache files locally after they are accessed (downloaded).",
          "format": "int32",
          "type": "integer"
        },
        "clientCredentials": {
          "$ref": "#/definitions/ClientCredentialsDto",
          "description": "Service principal credential when credential type is Microsoft.MachineLearning.DataStore.Contracts.AzureStorageCredentialTypes.ClientCredentials"
        },
        "containerName": {
          "description": "The storage container name",
          "type": "string"
        },
        "credential": {
          "description": "The credential",
          "type": "string"
        },
        "credentialType": {
          "description": "The credential type",
          "enum": [
            "None",
            "Sas",
            "AccountKey",
            "ClientCredentials"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "AzureStorageCredentialTypes",
            "oldModelAsString": true
          }
        },
        "endpoint": {
          "description": "The host of the container",
          "type": "string"
        },
        "isSas": {
          "description": "Indicate if we are using SAS token or Account Key (Deprecated)",
          "type": "boolean"
        },
        "protocol": {
          "description": "The protocol to use. Defaults to https",
          "type": "string"
        },
        "resourceGroup": {
          "description": "Resource Group Name",
          "type": "string"
        },
        "sasToken": {
          "description": "SAS Token for the container (Deprecated)",
          "type": "string"
        },
        "subscriptionId": {
          "description": "Subscription Id",
          "format": "uuid",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BaseEventDto": {
      "description": "Base event is the envelope used to post event data to the Event controller",
      "properties": {
        "data": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BatchAddOrModifyRunRequestDto": {
      "properties": {
        "runs": {
          "items": {
            "$ref": "#/definitions/CreateRunDto"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "BatchAddOrModifyRunResultDto": {
      "properties": {
        "errors": {
          "additionalProperties": {
            "$ref": "#/definitions/ErrorResponse"
          },
          "type": "object"
        },
        "runs": {
          "additionalProperties": {
            "$ref": "#/definitions/RunDto"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BatchArtifactBlobCopyRequest": {
      "properties": {
        "blobsToCopy": {
          "items": {
            "$ref": "#/definitions/CloudBlobWithUri"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "BatchArtifactContainerSasIngestCommand": {
      "properties": {
        "artifactPrefix": {
          "type": "string"
        },
        "containerSas": {
          "type": "string"
        },
        "containerUri": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BatchArtifactContentInformationDto": {
      "properties": {
        "artifactContentInformation": {
          "additionalProperties": {
            "$ref": "#/definitions/ArtifactContentInformationDto"
          },
          "type": "object"
        },
        "artifacts": {
          "additionalProperties": {
            "$ref": "#/definitions/ArtifactDto"
          },
          "type": "object"
        },
        "errors": {
          "additionalProperties": {
            "$ref": "#/definitions/ErrorResponse"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BatchArtifactCopyRequest": {
      "properties": {
        "filesToCopy": {
          "items": {
            "$ref": "#/definitions/CloudFileWithSas"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "BatchArtifactCreateCommand": {
      "properties": {
        "paths": {
          "items": {
            "$ref": "#/definitions/ArtifactPathDto"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "BatchArtifactDeleteCommand": {
      "properties": {
        "paths": {
          "items": {
            "$ref": "#/definitions/ArtifactPathDto"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "BatchArtifactsGetCommand": {
      "properties": {
        "artifactIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "BatchEventCommandDto": {
      "properties": {
        "events": {
          "items": {
            "$ref": "#/definitions/BaseEventDto"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "BatchEventCommandResultDto": {
      "properties": {
        "errors": {
          "items": {
            "$ref": "#/definitions/KeyValuePair`2"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "BatchMetricDto": {
      "properties": {
        "values": {
          "items": {
            "$ref": "#/definitions/MetricDto"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "ClientCredentialsDto": {
      "properties": {
        "authorityUrl": {
          "description": "The authority URL used for authentication",
          "type": "string"
        },
        "certificate": {
          "description": "The content of the certificate used for authentication",
          "type": "string"
        },
        "clientId": {
          "description": "The Client ID/Application ID",
          "format": "uuid",
          "type": "string"
        },
        "clientSecret": {
          "description": "The client secret",
          "type": "string"
        },
        "isCertAuth": {
          "description": "Is it using certificate to authenticate. If false then use client secret",
          "type": "boolean"
        },
        "resourceGroup": {
          "description": "Resource Group Name",
          "type": "string"
        },
        "resourceUri": {
          "description": "The resource the service principal/app has access to",
          "type": "string"
        },
        "subscriptionId": {
          "description": "Subscription Id",
          "format": "uuid",
          "type": "string"
        },
        "tenantId": {
          "description": "The ID of the tenant the service principal/app belongs to",
          "format": "uuid",
          "type": "string"
        },
        "thumbprint": {
          "description": "The thumbprint of the certificate above",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CloudBlobWithUri": {
      "properties": {
        "blobStorageUri": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CloudFileWithSas": {
      "properties": {
        "path": {
          "type": "string"
        },
        "sasUri": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ContainerInstanceConfiguration": {
      "properties": {
        "cpuCores": {
          "description": "Default size corresponds to the largest container supported in all regions.\r\nDetails: https://docs.microsoft.com/en-us/azure/container-instances/container-instances-quotas",
          "example": "2",
          "format": "double",
          "type": "number"
        },
        "memoryGb": {
          "description": "The memory available for the container instance.",
          "example": "3.5",
          "format": "double",
          "type": "number"
        },
        "region": {
          "description": "Defaults to the region of the workspace.",
          "example": "eastus2",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ContainerRegistry": {
      "properties": {
        "address": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ContainerResourceRequirements": {
      "description": "The resource requirements for the container (cpu and memory).",
      "properties": {
        "cpu": {
          "description": "The number of CPU cores on the container.",
          "example": "4",
          "format": "double",
          "type": "number"
        },
        "fpga": {
          "description": "The number of FPGA cores in the container.",
          "format": "int32",
          "type": "integer"
        },
        "gpu": {
          "description": "The number of GPU cores in the container.",
          "format": "int32",
          "type": "integer"
        },
        "memoryInGB": {
          "description": "The amount of memory on the container in GB.",
          "example": "64",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CreateRunDto": {
      "properties": {
        "cancelUri": {
          "type": "string"
        },
        "createdFrom": {
          "$ref": "#/definitions/CreatedFromDto"
        },
        "dataContainerId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "endTimeUtc": {
          "description": "The end time of the run in UTC.",
          "format": "date-time",
          "type": "string"
        },
        "heartbeatEnabled": {
          "type": "boolean"
        },
        "hidden": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/RunOptions"
        },
        "parentRunId": {
          "description": "The parent of the run if the run is hierarchical; otherwise, Null.",
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "runDefinition": {
          "type": "object"
        },
        "runId": {
          "description": "The identifier for the run. Run IDs must be less than 256 characters and contain only alphanumeric characters with dashes and underscores.",
          "type": "string"
        },
        "runType": {
          "type": "string"
        },
        "scriptName": {
          "type": "string"
        },
        "startTimeUtc": {
          "description": "The start time of the run in UTC.",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "The status of the run. The Status string value maps to the RunStatus Enum.",
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "target": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreatedByDto": {
      "properties": {
        "userName": {
          "description": "A user's full name or a service principal's app ID.\r\nThis is PII and should never be logged.",
          "type": "string"
        },
        "userObjectId": {
          "description": "A user or service principal's object ID.\r\nThis is PII and should never be logged.",
          "type": "string"
        },
        "userTenantId": {
          "description": "A user or service principal's tenant ID.\r\nThis is PII and should never be logged.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreatedFromDto": {
      "properties": {
        "location": {
          "type": "string"
        },
        "locationType": {
          "enum": [
            "ArtifactId"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "CreatedFromLocationType",
            "oldModelAsString": true
          }
        },
        "type": {
          "enum": [
            "Notebook"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "CreatedFromType",
            "oldModelAsString": true
          }
        }
      },
      "type": "object"
    },
    "DataReferenceConfiguration": {
      "description": "A class for managing DataReferenceConfiguration.",
      "properties": {
        "dataStoreName": {
          "description": "The name of the data store.",
          "example": "myblobstore",
          "type": "string"
        },
        "mode": {
          "description": "Operation on the datastore, mount, download, upload.",
          "enum": [
            "Mount",
            "Download",
            "Upload"
          ],
          "example": "Mount",
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DataStoreMode",
            "oldModelAsString": true
          }
        },
        "overwrite": {
          "description": "Whether to overwrite the data if existing.",
          "example": "False",
          "type": "boolean"
        },
        "pathOnCompute": {
          "description": "The path on the compute target.",
          "type": "string"
        },
        "pathOnDataStore": {
          "description": "Relative path on the datastore.",
          "example": "/images/validation",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DataStoreDto": {
      "properties": {
        "azureDataLakeSection": {
          "$ref": "#/definitions/AzureDataLakeDto",
          "description": "Data Specific to azure data lake"
        },
        "azurePostgreSqlSection": {
          "$ref": "#/definitions/AzurePostgreSqlDto",
          "description": "Data specific to azure PostgreSQL"
        },
        "azureSqlDatabaseSection": {
          "$ref": "#/definitions/AzureSqlDatabaseDto",
          "description": "Data specific to azure SQL database"
        },
        "azureStorageSection": {
          "$ref": "#/definitions/AzureStorageDto",
          "description": "Data specific to azure storage"
        },
        "dataStoreType": {
          "description": "The Azure storage service this datastore points to.",
          "enum": [
            "AzureBlob",
            "AzureFile",
            "AzureDataLake",
            "AzureSqlDatabase",
            "AzurePostgreSql",
            "DBFS",
            "AzureDataLakeGen2"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DataStoreType",
            "oldModelAsString": true
          }
        },
        "hasBeenValidated": {
          "description": "A read only property that denotes whether the service datastore has been validated with credentials.",
          "type": "boolean"
        },
        "name": {
          "description": "Name of the datastore",
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags to datastore",
          "type": "object"
        }
      },
      "type": "object"
    },
    "DatasetReference": {
      "description": "The dataset reference object.",
      "properties": {
        "id": {
          "description": "The id of the dataset reference.",
          "type": "string"
        },
        "name": {
          "description": "The name of the dataset reference.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DebugInfoResponse": {
      "description": "Internal debugging information not intended for external clients.",
      "properties": {
        "data": {
          "additionalProperties": {
            "type": "object"
          },
          "description": "The data associated with the error.",
          "type": "object"
        },
        "errorResponse": {
          "$ref": "#/definitions/ErrorResponse",
          "description": "The error response."
        },
        "innerException": {
          "$ref": "#/definitions/DebugInfoResponse",
          "description": "The inner exception."
        },
        "message": {
          "description": "The message.",
          "type": "string"
        },
        "stackTrace": {
          "description": "The stack trace.",
          "type": "string"
        },
        "type": {
          "description": "The type.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeploymentSummary": {
      "description": "The deployment summary.",
      "properties": {
        "successfulDeployments": {
          "description": "The number of successful deployments.",
          "format": "int32",
          "type": "integer"
        },
        "unsuccessfulDeployments": {
          "description": "The number of unsuccessful deployments.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DockerBuildContextResponse": {
      "properties": {
        "context": {
          "description": "The Docker build context.",
          "items": {
            "$ref": "#/definitions/DockerBuildContextResponseEntry"
          },
          "type": "array",
          "uniqueItems": false
        },
        "dockerfilePath": {
          "description": "The Docker file path.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DockerBuildContextResponseEntry": {
      "description": "The Docker build context response.",
      "properties": {
        "content": {
          "description": "The content.",
          "type": "string"
        },
        "encoding": {
          "description": "The encoding type.",
          "enum": [
            "Base64"
          ],
          "example": "Base64",
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DockerBuildContextResponseEntryEncoding",
            "oldModelAsString": true
          }
        },
        "path": {
          "description": "The path to the file.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DockerImageRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/ImageRequestBase"
        },
        {
          "properties": {
            "assets": {
              "description": "The list of assets.",
              "items": {
                "$ref": "#/definitions/ImageAsset"
              },
              "type": "array",
              "uniqueItems": false
            },
            "baseImage": {
              "description": "The name of the base Docker image.",
              "type": "string"
            },
            "baseImageRegistryInfo": {
              "$ref": "#/definitions/RegistryInfo",
              "description": "The details of the base image registry."
            },
            "dockerFileUri": {
              "description": "The Uri to the docker file.",
              "type": "string"
            },
            "driverProgram": {
              "description": "The name of the driver file.",
              "type": "string"
            },
            "targetRuntime": {
              "$ref": "#/definitions/TargetRuntime",
              "description": "The target runtime."
            }
          },
          "type": "object"
        }
      ],
      "description": "Request to create a Docker image.",
      "properties": {},
      "type": "object"
    },
    "DockerImageResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/ImageResponseBase"
        },
        {
          "properties": {
            "assets": {
              "description": "The list of assets.",
              "items": {
                "$ref": "#/definitions/ImageAsset"
              },
              "type": "array",
              "uniqueItems": false
            },
            "dockerFileUri": {
              "description": "The Uri to the docker file.",
              "type": "string"
            },
            "driverProgram": {
              "description": "The name of the driver file.",
              "type": "string"
            },
            "generatedDockerFileUri": {
              "description": "The Uri to the generated docker file.",
              "type": "string"
            },
            "targetRuntime": {
              "$ref": "#/definitions/TargetRuntime",
              "description": "The target runtime."
            }
          },
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "DockerSection": {
      "properties": {
        "arguments": {
          "description": "Extra arguments to the Docker run command.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false
        },
        "baseImage": {
          "description": "Base image used for Docker-based runs.",
          "example": "ubuntu:latest",
          "type": "string"
        },
        "baseImageRegistry": {
          "$ref": "#/definitions/ContainerRegistry",
          "description": "Image registry that contains the base image."
        },
        "enabled": {
          "description": "Set True to perform this run inside a Docker container.",
          "example": "True",
          "type": "boolean"
        },
        "gpuSupport": {
          "description": "Run with NVidia Docker extension to support GPUs.",
          "example": "False",
          "type": "boolean"
        },
        "preparation": {
          "$ref": "#/definitions/Preparation"
        },
        "sharedVolumes": {
          "description": "Set False if necessary to work around shared volume bugs on Windows.",
          "example": "True",
          "type": "boolean"
        },
        "shmSize": {
          "description": "The shared memory size setting for NVidia GPUs.",
          "example": "1g",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EntityTagHeaderValue": {
      "properties": {
        "isWeak": {
          "readOnly": true,
          "type": "boolean"
        },
        "tag": {
          "$ref": "#/definitions/StringSegment",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "EnvironmentDefinition": {
      "properties": {
        "docker": {
          "$ref": "#/definitions/DockerSection",
          "description": "The definition of a Docker container."
        },
        "environmentVariables": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Definition of environment variables to be defined in the environment.",
          "type": "object"
        },
        "name": {
          "description": "The name of the environment.",
          "example": "mydevenvironment",
          "type": "string"
        },
        "python": {
          "$ref": "#/definitions/PythonSection",
          "description": "Settings for a Python environment."
        },
        "spark": {
          "$ref": "#/definitions/SparkSection",
          "description": "The configuration for a Spark environment."
        },
        "version": {
          "description": "The environment version.",
          "example": "1",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ErrorDetails": {
      "description": "The error details.",
      "properties": {
        "code": {
          "description": "The error code.",
          "type": "string"
        },
        "message": {
          "description": "The error message.",
          "type": "string"
        },
        "target": {
          "description": "The target of the error (e.g., the name of the property in error).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ErrorResponse": {
      "description": "The error response.",
      "properties": {
        "correlation": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Dictionary containing correlation details for the error.",
          "type": "object"
        },
        "environment": {
          "description": "The hosting environment.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/RootError",
          "description": "The top level error that occurred."
        },
        "location": {
          "description": "The Azure region.",
          "type": "string"
        },
        "time": {
          "description": "The time in UTC.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExperimentDto": {
      "properties": {
        "createdUtc": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "experimentId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "FPGADockerImageRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/ImageRequestBase"
        },
        {
          "properties": {},
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "FPGADockerImageResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/ImageResponseBase"
        },
        {
          "properties": {},
          "type": "object"
        }
      ],
      "description": "The FPGA Docker Image response.",
      "properties": {},
      "type": "object"
    },
    "FPGAImageRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/ImageRequestBase"
        },
        {
          "properties": {},
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "FPGAImageResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/ImageResponseBase"
        },
        {
          "properties": {},
          "type": "object"
        }
      ],
      "description": "The FPGA Image response.",
      "properties": {},
      "type": "object"
    },
    "FPGAServiceCreateRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/ServiceCreateRequest"
        },
        {
          "properties": {
            "creationMode": {
              "description": "The service creation mode.",
              "enum": [
                "Image",
                "RegisteredModel",
                "ModelFiles",
                "Environment"
              ],
              "format": "int32",
              "type": "integer",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceCreationSource",
                "oldModelAsString": true
              }
            },
            "numReplicas": {
              "description": "The number of replicas in the web service.",
              "format": "int32",
              "type": "integer"
            },
            "sslCertificate": {
              "description": "The SSL certificate.",
              "type": "string"
            },
            "sslEnabled": {
              "description": "Whether or not SSL is enabled.",
              "type": "boolean"
            },
            "sslKey": {
              "description": "The SSL key.",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "The request to create a FPGA service.",
      "properties": {},
      "type": "object"
    },
    "FPGAServiceResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResponseBase"
        },
        {
          "properties": {
            "imageDetails": {
              "$ref": "#/definitions/FPGAImageResponse",
              "description": "The Image details."
            },
            "imageId": {
              "description": "The Id of the Image.",
              "type": "string"
            },
            "ipAddress": {
              "description": "The IP address of the service.",
              "type": "string"
            },
            "numReplicas": {
              "description": "The number of replicas in the web service.",
              "format": "int32",
              "type": "integer"
            },
            "port": {
              "description": "The port of the service.",
              "format": "int32",
              "type": "integer"
            },
            "sslCertificate": {
              "description": "The SSL certificate.",
              "type": "string"
            },
            "sslEnabled": {
              "description": "Whether or not SSL is enabled.",
              "type": "boolean"
            },
            "sslKey": {
              "description": "The SSL key.",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "The response for a FPGA service.",
      "properties": {},
      "type": "object"
    },
    "FileStreamResult": {
      "properties": {
        "contentType": {
          "readOnly": true,
          "type": "string"
        },
        "entityTag": {
          "$ref": "#/definitions/EntityTagHeaderValue"
        },
        "fileDownloadName": {
          "type": "string"
        },
        "fileStream": {
          "$ref": "#/definitions/Stream"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HdiConfiguration": {
      "properties": {
        "yarnDeployMode": {
          "enum": [
            "None",
            "Client",
            "Cluster"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "YarnDeployMode",
            "oldModelAsString": true
          }
        }
      },
      "type": "object"
    },
    "HistoryConfiguration": {
      "additionalProperties": {
        "type": "object"
      },
      "properties": {
        "directoriesToWatch": {
          "description": "The list of directories to monitor and upload files from.",
          "example": "[\"logs\", \"outputs\"]",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false
        },
        "outputCollection": {
          "description": "Set to true to collect outputs and store in run history.",
          "example": "True",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IFormFile": {
      "properties": {
        "contentDisposition": {
          "readOnly": true,
          "type": "string"
        },
        "contentType": {
          "readOnly": true,
          "type": "string"
        },
        "fileName": {
          "readOnly": true,
          "type": "string"
        },
        "headers": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": false
          },
          "readOnly": true,
          "type": "object"
        },
        "length": {
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "name": {
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ImageAsset": {
      "description": "An Image asset.",
      "properties": {
        "id": {
          "description": "The Asset Id.",
          "type": "string"
        },
        "mimeType": {
          "description": "The mime type.",
          "type": "string"
        },
        "unpack": {
          "description": "Whether the Asset is unpacked.",
          "type": "boolean"
        },
        "url": {
          "description": "The Url of the Asset.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ImageRequestBase": {
      "description": "Request to create an Azure Machine Learning Image.",
      "discriminator": "imageRequestBaseTypeDiscriminator",
      "properties": {
        "description": {
          "description": "The image description.",
          "example": "My third image version.",
          "type": "string"
        },
        "imageFlavor": {
          "description": "The flavor of the image.",
          "enum": [
            "WebApiContainer",
            "BatchContainer",
            "IoTContainer",
            "BrainwavePackage",
            "AccelContainer",
            "BrainwaveContainer"
          ],
          "example": "WebApiContainer",
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ImageFlavor",
            "oldModelAsString": true
          }
        },
        "imageRequestBaseTypeDiscriminator": {
          "description": "Property used by Swagger for polymorphic object generation.",
          "type": "string"
        },
        "imageType": {
          "description": "The type of the image.",
          "enum": [
            "Docker",
            "FPGA"
          ],
          "example": "Docker",
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ImageType",
            "oldModelAsString": true
          }
        },
        "kvTags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The image tag dictionary. Tags are mutable.",
          "type": "object"
        },
        "modelIds": {
          "description": "The list of model Ids.",
          "example": "[mymodel:1, mymodel:2]",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false
        },
        "name": {
          "description": "The name of the image.",
          "example": "myimage:3",
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The image property dictionary. Properties are immutable.",
          "type": "object"
        },
        "tags": {
          "description": "The image tag list.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "required": [
        "imageRequestBaseTypeDiscriminator"
      ],
      "type": "object"
    },
    "ImageResponseBase": {
      "discriminator": "imageResponseBaseTypeDiscriminator",
      "properties": {
        "createdTime": {
          "description": "The time the image was created.",
          "format": "date-time",
          "type": "string"
        },
        "creationState": {
          "description": "The state of the operation.",
          "enum": [
            "NotStarted",
            "Running",
            "Cancelled",
            "Succeeded",
            "Failed",
            "TimedOut"
          ],
          "example": "Running",
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "AsyncOperationState",
            "oldModelAsString": true
          }
        },
        "description": {
          "description": "The image description.",
          "example": "My docker image.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ModelErrorResponse",
          "description": "The error response."
        },
        "id": {
          "description": "The image Id.",
          "example": "myimage:3",
          "type": "string"
        },
        "imageBuildLogUri": {
          "description": "The Uri to the image build logs.",
          "type": "string"
        },
        "imageFlavor": {
          "description": "The flavor of the image.",
          "enum": [
            "WebApiContainer",
            "BatchContainer",
            "IoTContainer",
            "BrainwavePackage",
            "AccelContainer",
            "BrainwaveContainer"
          ],
          "example": "WebApiContainer",
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ImageFlavor",
            "oldModelAsString": true
          }
        },
        "imageLocation": {
          "description": "The Image location string.",
          "type": "string"
        },
        "imageResponseBaseTypeDiscriminator": {
          "description": "Property used by Swagger for polymorphic object generation.",
          "type": "string"
        },
        "imageType": {
          "description": "The type of the image.",
          "enum": [
            "Docker",
            "FPGA"
          ],
          "example": "Docker",
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ImageType",
            "oldModelAsString": true
          }
        },
        "kvTags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The image tag dictionary. Tags are mutable.",
          "type": "object"
        },
        "modelDetails": {
          "description": "The list of models.",
          "items": {
            "$ref": "#/definitions/Model"
          },
          "type": "array",
          "uniqueItems": false
        },
        "modelIds": {
          "description": "The list of model Ids.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false
        },
        "modifiedTime": {
          "description": "The time the image was last modified.",
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "description": "The image name.",
          "example": "myimage:3",
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The image properties dictionary. Properties are immutable.",
          "type": "object"
        },
        "tags": {
          "description": "The image tag list.",
          "example": "[\"docker\"]",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false
        },
        "version": {
          "description": "The image version.",
          "example": "3",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "imageResponseBaseTypeDiscriminator"
      ],
      "type": "object"
    },
    "InnerErrorResponse": {
      "description": "A nested structure of errors.",
      "properties": {
        "code": {
          "description": "The error code.",
          "type": "string"
        },
        "innerError": {
          "$ref": "#/definitions/InnerErrorResponse",
          "description": "A nested list of inner errors. When evaluating errors, clients MUST traverse through all of the nested “innererrors” and choose the deepest one that they understand."
        }
      },
      "type": "object"
    },
    "JsonPatchOperation": {
      "description": "The Json Patch definition.",
      "properties": {
        "from": {
          "description": "The source location.",
          "type": "string"
        },
        "op": {
          "description": "The operation.",
          "type": "string"
        },
        "path": {
          "description": "The target location.",
          "type": "string"
        },
        "value": {
          "description": "The value.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "KeyValuePair`2": {
      "properties": {
        "key": {
          "$ref": "#/definitions/BaseEventDto",
          "readOnly": true
        },
        "value": {
          "$ref": "#/definitions/ErrorResponse",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "LivenessProbeRequirements": {
      "description": "The liveness probe requirements.",
      "properties": {
        "failureThreshold": {
          "description": "The number of failures to allow before returning an unhealthy status.",
          "format": "int32",
          "type": "integer"
        },
        "initialDelaySeconds": {
          "description": "The delay before the first probe in seconds.",
          "format": "int32",
          "type": "integer"
        },
        "periodSeconds": {
          "description": "The length of time between probes in seconds.",
          "format": "int32",
          "type": "integer"
        },
        "successThreshold": {
          "description": "The number of successful probes before returning a healthy status.",
          "format": "int32",
          "type": "integer"
        },
        "timeoutSeconds": {
          "description": "The probe timeout in seconds.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MetricDto": {
      "properties": {
        "cells": {
          "items": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "type": "array",
          "uniqueItems": false
        },
        "createdUtc": {
          "format": "date-time",
          "type": "string"
        },
        "dataContainerId": {
          "type": "string"
        },
        "dataLocation": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "metricId": {
          "format": "uuid",
          "type": "string"
        },
        "metricType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "numCells": {
          "format": "int32",
          "type": "integer"
        },
        "schema": {
          "$ref": "#/definitions/MetricSchemaDto"
        }
      },
      "type": "object"
    },
    "MetricSchemaDto": {
      "properties": {
        "numProperties": {
          "format": "int32",
          "type": "integer"
        },
        "properties": {
          "items": {
            "$ref": "#/definitions/MetricSchemaPropertyDto"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "MetricSchemaPropertyDto": {
      "properties": {
        "name": {
          "type": "string"
        },
        "propertyId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Model": {
      "description": "An Azure Machine Learnging Model.",
      "properties": {
        "createdTime": {
          "description": "The Model creation time (UTC).",
          "format": "date-time",
          "type": "string"
        },
        "datasets": {
          "description": "The list of datasets associated with the model.",
          "items": {
            "$ref": "#/definitions/DatasetReference"
          },
          "type": "array",
          "uniqueItems": false
        },
        "description": {
          "description": "The Model description text.",
          "example": "A mnist model, first version.",
          "type": "string"
        },
        "experimentName": {
          "description": "The name of the experiment where this model was created.",
          "type": "string"
        },
        "framework": {
          "description": "The Model framework.",
          "type": "string"
        },
        "frameworkVersion": {
          "description": "The Model framework version.",
          "type": "string"
        },
        "id": {
          "description": "The Model Id.",
          "example": "sklearn_mnist:1",
          "type": "string"
        },
        "kvTags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The Model tag dictionary. Items are mutable.",
          "type": "object"
        },
        "mimeType": {
          "description": "The MIME type of Model content. For more details about MIME type, please open https://www.iana.org/assignments/media-types/media-types.xhtml",
          "type": "string"
        },
        "modifiedTime": {
          "description": "The Model last modified time (UTC).",
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "description": "The Model name.",
          "example": "sklearn_mnist",
          "type": "string"
        },
        "parentModelId": {
          "description": "The Parent Model Id.",
          "example": "sklearn_mnist_root:1",
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The Model preperty dictionary. Properties are immutable.",
          "type": "object"
        },
        "runId": {
          "description": "The RunId that created this model.",
          "type": "string"
        },
        "tags": {
          "description": "The Model tag list.",
          "example": "[\"mnist\", \"sklearn\"]",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false
        },
        "unpack": {
          "description": "Indicates whether we need to unpack the Model during docker Image creation.",
          "example": "False",
          "type": "boolean"
        },
        "url": {
          "description": "The URL of the Model. Usually a SAS URL.",
          "type": "string"
        },
        "version": {
          "description": "The Model version assigned by Model Management Service.",
          "example": "1",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "name",
        "url",
        "mimeType"
      ],
      "type": "object"
    },
    "ModelDataCollection": {
      "description": "The Model data collection properties.",
      "properties": {
        "eventHubEnabled": {
          "description": "Option for enabling/disabling Event Hub.",
          "example": "False",
          "type": "boolean"
        },
        "storageEnabled": {
          "description": "Option for enabling/disabling storage.",
          "example": "False",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ModelErrorResponse": {
      "description": "The Model Management Service Error object.",
      "properties": {
        "code": {
          "description": "The error code.",
          "type": "string"
        },
        "details": {
          "description": "An array of error detail objects.",
          "items": {
            "$ref": "#/definitions/ErrorDetails"
          },
          "type": "array",
          "uniqueItems": false
        },
        "message": {
          "description": "The error message.",
          "type": "string"
        },
        "statusCode": {
          "description": "The HTTP status code.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ModelOperationalState": {
      "description": "The operational state of the Model.",
      "properties": {
        "deploymentSummary": {
          "$ref": "#/definitions/DeploymentSummary",
          "description": "The summary of the deployment."
        },
        "endTime": {
          "description": "The deployment end time.",
          "type": "string"
        },
        "startTime": {
          "description": "The deployment start time.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ModifyRunDto": {
      "properties": {
        "cancelUri": {
          "type": "string"
        },
        "createdFrom": {
          "$ref": "#/definitions/CreatedFromDto"
        },
        "dataContainerId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "hidden": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "runDefinition": {
          "type": "object"
        },
        "runType": {
          "type": "string"
        },
        "scriptName": {
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "target": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "MpiConfiguration": {
      "properties": {
        "processCountPerNode": {
          "description": "Number of processes per node.",
          "example": "2",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "PaginatedArtifactContentInformationDtoList": {
      "description": "A paginated list of objects.",
      "properties": {
        "continuationToken": {
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type T.",
          "items": {
            "$ref": "#/definitions/ArtifactContentInformationDto"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "PaginatedArtifactDtoList": {
      "description": "A paginated list of objects.",
      "properties": {
        "continuationToken": {
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type T.",
          "items": {
            "$ref": "#/definitions/ArtifactDto"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "PaginatedDataStoreDtoList": {
      "description": "A paginated list of objects.",
      "properties": {
        "continuationToken": {
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type T.",
          "items": {
            "$ref": "#/definitions/DataStoreDto"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "PaginatedExperimentDtoList": {
      "description": "A paginated list of objects.",
      "properties": {
        "continuationToken": {
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type T.",
          "items": {
            "$ref": "#/definitions/ExperimentDto"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "PaginatedImageList": {
      "description": "A paginated list of objects.",
      "properties": {
        "nextLink": {
          "description": "A continuation link (absolute URI) to the next page of results in the list.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type T.",
          "items": {
            "$ref": "#/definitions/ImageResponseBase"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "PaginatedModelList": {
      "description": "A paginated list of objects.",
      "properties": {
        "nextLink": {
          "description": "A continuation link (absolute URI) to the next page of results in the list.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type T.",
          "items": {
            "$ref": "#/definitions/Model"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "PaginatedProfileList": {
      "description": "A paginated list of objects.",
      "properties": {
        "nextLink": {
          "description": "A continuation link (absolute URI) to the next page of results in the list.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type T.",
          "items": {
            "$ref": "#/definitions/ProfileResponseBase"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "PaginatedRunDtoList": {
      "description": "A paginated list of objects.",
      "properties": {
        "continuationToken": {
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type T.",
          "items": {
            "$ref": "#/definitions/RunDto"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "PaginatedRunMetricDtoList": {
      "description": "A paginated list of objects.",
      "properties": {
        "continuationToken": {
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type T.",
          "items": {
            "$ref": "#/definitions/RunMetricDto"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "PaginatedServiceList": {
      "description": "A paginated list of objects.",
      "properties": {
        "nextLink": {
          "description": "A continuation link (absolute URI) to the next page of results in the list.",
          "type": "string"
        },
        "value": {
          "description": "An array of objects of type T.",
          "items": {
            "$ref": "#/definitions/ServiceResponseBase"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "Preparation": {
      "properties": {
        "commandLine": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProfileRequestBase": {
      "description": "The request for createing a profile.",
      "properties": {
        "description": {
          "description": "The profile description.",
          "type": "string"
        },
        "inputData": {
          "description": "The profile input data.",
          "type": "string"
        },
        "kvTags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The tags dictionary.",
          "type": "object"
        },
        "name": {
          "description": "The profile name.",
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The properties dictionary.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "ProfileResponseBase": {
      "description": "The profile response.",
      "properties": {
        "createdTime": {
          "description": "The profile creation time (UTC).",
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "description": "The profile description.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ModelErrorResponse",
          "description": "The error details."
        },
        "imageId": {
          "description": "The Image Id.",
          "type": "string"
        },
        "inputData": {
          "description": "The input data.",
          "type": "string"
        },
        "kvTags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The profile tags dictionary. Tags are mutable.",
          "type": "object"
        },
        "latencyInMsAtRecommendedCpu": {
          "description": "The recommended CPU latency in milliseconds.",
          "format": "double",
          "type": "number"
        },
        "latencyInMsAtRecommendedMemory": {
          "description": "The recommended memory latency in milliseconds.",
          "format": "double",
          "type": "number"
        },
        "name": {
          "description": "The profile name.",
          "type": "string"
        },
        "profileRunResult": {
          "description": "The profile run result.",
          "type": "string"
        },
        "profilingErrorLogs": {
          "description": "The profiling error logs.",
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The profile properties dictionary. Properties are immutable.",
          "type": "object"
        },
        "recommendedCpu": {
          "description": "The recommended CPU allocation.",
          "format": "double",
          "type": "number"
        },
        "recommendedMemoryInGB": {
          "description": "The recommended amout of memory to allocate in GB.",
          "format": "double",
          "type": "number"
        },
        "state": {
          "description": "The state of the profile.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PythonSection": {
      "properties": {
        "baseCondaEnvironment": {
          "type": "string"
        },
        "condaDependencies": {
          "type": "object"
        },
        "interpreterPath": {
          "description": "The python interpreter path. This is only used when user_managed_dependencies=True.",
          "type": "string"
        },
        "userManagedDependencies": {
          "description": "True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "QueryParamsDto": {
      "description": "The set of supported filters.",
      "properties": {
        "continuationToken": {
          "description": "The continuation token to use for getting the next set of resources.",
          "type": "string"
        },
        "filter": {
          "description": "Allows for filtering the collection of resources.\r\nThe expression specified is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response.\r\nSee https://docs.microsoft.com/en-us/azure/search/query-odata-filter-orderby-syntax for details on the expression syntax.",
          "type": "string"
        },
        "orderBy": {
          "description": "The comma separated list of resource properties to use for sorting the requested resources.\r\nOptionally, can be followed by either 'asc' or 'desc'",
          "example": "Color, Size desc",
          "type": "string"
        },
        "top": {
          "description": "The maximum number of items in the resource collection to be included in the result.\r\nIf not specified, all items are returned.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "RegenerateKeyRequest": {
      "properties": {
        "keyType": {
          "description": "Specification for which type of key to generate.",
          "enum": [
            "Primary",
            "Secondary"
          ],
          "example": "Primary",
          "format": "int32",
          "type": "integer",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "KeyType",
            "oldModelAsString": true
          }
        },
        "keyValue": {
          "description": "The value the key is set to.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RegistryInfo": {
      "description": "Contains registry information.",
      "properties": {
        "location": {
          "description": "The location.",
          "type": "string"
        },
        "password": {
          "description": "The password.",
          "type": "string"
        },
        "user": {
          "description": "The user.",
          "type": "string"
        }
      },
      "required": [
        "user",
        "location",
        "password"
      ],
      "type": "object"
    },
    "RootError": {
      "description": "The root error.",
      "properties": {
        "code": {
          "description": "The service-defined error code.",
          "type": "string"
        },
        "debugInfo": {
          "$ref": "#/definitions/DebugInfoResponse",
          "description": "An internal repesentation of the error. May be null for non-AzureML services."
        },
        "details": {
          "description": "The related errors that occurred during the rquest.",
          "items": {
            "$ref": "#/definitions/ErrorDetails"
          },
          "type": "array",
          "uniqueItems": false
        },
        "innerError": {
          "$ref": "#/definitions/InnerErrorResponse",
          "description": "A nested list of inner errors. When evaluating errors, clients MUST traverse through all of the nested “innererrors” and choose the deepest one that they understand."
        },
        "message": {
          "description": "A human-readable representation of the error.",
          "type": "string"
        },
        "target": {
          "description": "The target of the error (e.g., the name of the property in error).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RunConfiguration": {
      "properties": {
        "amlCompute": {
          "$ref": "#/definitions/AMLComputeConfiguration",
          "description": "The attribute is used to configure details of the compute target to be created during experiment.\r\nThe configuration only takes effect when the target is set to \"amlcompute\"."
        },
        "arguments": {
          "description": "Command line arguments for the python script file.",
          "example": "[\"234\"]",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false
        },
        "autoPrepareEnvironment": {
          "description": "Defaulted to True, but if set to False the run will fail if no environment was found matching the requirements specified.\r\nThis can be set to False to fail fast when the environment is not found in the cache.",
          "example": "True",
          "type": "boolean"
        },
        "communicator": {
          "description": "The supported communicators are None, ParameterServer, OpenMpi, and IntelMpi Keep in mind that OpenMpi requires a custom image with OpenMpi installed.\r\nUse ParameterServer or OpenMpi for AmlCompute clusters. Use IntelMpi for distributed training jobs.",
          "enum": [
            "None",
            "ParameterServer",
            "Gloo",
            "Mpi"
          ],
          "example": "None",
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "Communicator",
            "oldModelAsString": true
          }
        },
        "containerInstance": {
          "$ref": "#/definitions/ContainerInstanceConfiguration"
        },
        "dataReferences": {
          "additionalProperties": {
            "$ref": "#/definitions/DataReferenceConfiguration"
          },
          "description": "All the data sources are made available to the run during execution based on each configuration.",
          "type": "object"
        },
        "environment": {
          "$ref": "#/definitions/EnvironmentDefinition",
          "description": "The environment definition, This field configures the python environment.\r\nIt can be configured to use an existing Python environment or configured to setup a temp environment for the experiment.\r\nThe definition is also responsible for setting the required application dependencies."
        },
        "exposedPorts": {
          "description": "Currently unused.",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array",
          "uniqueItems": false
        },
        "framework": {
          "description": "The supported frameworks are Python, PySpark, CNTK, TensorFlow, and PyTorch. Use Tensorflow for AmlCompute clusters, and Python for distributed training jobs.",
          "enum": [
            "Python",
            "PySpark",
            "Cntk",
            "TensorFlow",
            "PyTorch",
            "PySparkInteractive",
            "R"
          ],
          "example": "Python",
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "Framework",
            "oldModelAsString": true
          }
        },
        "hdi": {
          "$ref": "#/definitions/HdiConfiguration",
          "description": "This attribute takes effect only when the target is set to an Azure HDI compute.\r\nThe HDI Configuration is used to set the YARN deployment mode. It is defaulted to cluster mode."
        },
        "history": {
          "$ref": "#/definitions/HistoryConfiguration",
          "description": "This section is used to disable and enable experiment history logging features."
        },
        "jobName": {
          "description": "This is primarily intended for notebooks to override the default job name.\r\nDefaults to ArgumentVector[0] if not specified.",
          "example": "FindSquaresJob",
          "type": "string"
        },
        "maxRunDurationSeconds": {
          "description": "Maximum allowed time for the run. The system will attempt to automatically cancel the run if it took longer than this value.\r\nMaxRunDurationSeconds=null means infinite duration.",
          "example": "84000",
          "format": "int64",
          "type": "integer"
        },
        "mpi": {
          "$ref": "#/definitions/MpiConfiguration",
          "description": "The attribute is used to configure the distributed MPI job parameters.\r\nThis attribute takes effect only when the framework is set to Python, and the communicator to OpenMpi or IntelMpi.\r\nAmlComppute is the only supported compute type for this configuration."
        },
        "nodeCount": {
          "description": "Number of compute nodes to run the job on. Only applies to AMLCompute.",
          "example": "1",
          "format": "int32",
          "type": "integer"
        },
        "script": {
          "description": "The relative path to the python script file. The file path is relative to the source_directory passed to submit run.",
          "example": "findsquare.py",
          "type": "string"
        },
        "sourceDirectoryDataStore": {
          "description": "The attribute is used to configure the backing datastore for the project share.",
          "example": "my-source-store",
          "type": "string"
        },
        "spark": {
          "$ref": "#/definitions/SparkConfiguration",
          "description": "When the platform is set to Pyspark, The spark configuration is used to set the default sparkconf for the submitted job."
        },
        "target": {
          "description": "Target refers to compute where the job is scheduled for execution. The default target is \"local\" refering to the local machine.",
          "example": "amlcompute",
          "type": "string"
        },
        "tensorflow": {
          "$ref": "#/definitions/TensorflowConfiguration",
          "description": "The attribute is used to configure the distributed tensorflow parameters.\r\nThis attribute takes effect only when the framework is set to TensorFlow, and the communicator to ParameterServer.\r\nAmlCompute is the only supported compute for this configuration."
        }
      },
      "type": "object"
    },
    "RunCountsDto": {
      "description": "Captures the number of runs in each of the possible run states.",
      "properties": {
        "canceled": {
          "format": "int32",
          "type": "integer"
        },
        "completed": {
          "format": "int32",
          "type": "integer"
        },
        "failed": {
          "format": "int32",
          "type": "integer"
        },
        "notResponding": {
          "format": "int32",
          "type": "integer"
        },
        "notStarted": {
          "format": "int32",
          "type": "integer"
        },
        "preparing": {
          "format": "int32",
          "type": "integer"
        },
        "provisioning": {
          "format": "int32",
          "type": "integer"
        },
        "queued": {
          "format": "int32",
          "type": "integer"
        },
        "running": {
          "format": "int32",
          "type": "integer"
        },
        "starting": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "RunDefinition": {
      "properties": {
        "attribution": {
          "type": "string"
        },
        "configuration": {
          "$ref": "#/definitions/RunConfiguration",
          "description": "Fully specified configuration information for the run. Even when that information\r\nis contained in configuration files within the project folder, the client collapses\r\nit all and inlines it into the run definition when submitting a run."
        },
        "parentRunId": {
          "description": "Specifies that the run history entry for this execution should be scoped within\r\nan existing run as a child. Defaults to null, meaning the run has no parent.\r\nThis is intended for first-party service integration, not third-party API users.",
          "example": "myexperiment_155000000001_0",
          "type": "string"
        },
        "runType": {
          "description": "Specifies the runsource property for this run. The default value is \"experiment\" if not specified.",
          "example": "experiment",
          "type": "string"
        },
        "snapshotId": {
          "description": "Snapshots are user project folders that have been uploaded to the cloud for subsequent\r\nexecution. This field is required when executing against cloud-based compute targets\r\nunless the run submission was against the API endpoint that takes a zipped project folder\r\ninline with the request.",
          "format": "uuid",
          "type": "string"
        },
        "sourceCodeDataReference": {
          "$ref": "#/definitions/SourceCodeDataReference",
          "description": "Specifies the cloud source data to use for the run."
        },
        "telemetryValues": {
          "additionalProperties": {
            "type": "object"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RunDetails": {
      "description": "Contains the details of a run.",
      "properties": {
        "runId": {
          "description": "The identifier for a run.",
          "example": "myexperiment_155000000001_0",
          "type": "string"
        },
        "target": {
          "description": "Target refers to compute where the job is scheduled for execution.",
          "example": "local",
          "type": "string"
        }
      },
      "required": [
        "runId",
        "target"
      ],
      "type": "object"
    },
    "RunDetailsDto": {
      "description": "The details of the run.",
      "properties": {
        "endTimeUtc": {
          "description": "The end time of the run in UTC.",
          "format": "date-time",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ErrorResponse",
          "description": "If an error occurred during the run, this will be populated."
        },
        "logFiles": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "parentRunId": {
          "description": "The parent of the run if the run is hierarchical.",
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The properties dictionary for the run. Properties are immutable.",
          "type": "object"
        },
        "revision": {
          "format": "int32",
          "type": "integer"
        },
        "runDefinition": {
          "description": "The run definition specification.",
          "type": "object"
        },
        "runId": {
          "description": "The identifier for the run.",
          "type": "string"
        },
        "startTimeUtc": {
          "description": "The start time of the run in UTC.",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "The status of the run. The Status string value maps to the RunStatus Enum.",
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The tag dictionary for the run. Tags are mutable.",
          "type": "object"
        },
        "target": {
          "description": "The name of the compute target where the run is executed.",
          "type": "string"
        },
        "warnings": {
          "description": "A list of warnings that occurred during the run.",
          "items": {
            "$ref": "#/definitions/RunDetailsWarningDto"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "RunDetailsWarningDto": {
      "properties": {
        "message": {
          "type": "string"
        },
        "source": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RunDto": {
      "description": "The definition of a Run.",
      "properties": {
        "cancelUri": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/CreatedByDto",
          "description": "The details of the user who created the run."
        },
        "createdFrom": {
          "$ref": "#/definitions/CreatedFromDto"
        },
        "createdUtc": {
          "description": "The time the run was created in UTC.",
          "format": "date-time",
          "type": "string"
        },
        "dataContainerId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "endTimeUtc": {
          "description": "The end time of the run in UTC.",
          "format": "date-time",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ErrorResponse",
          "description": "If an error occurred during the run, this will be populated."
        },
        "experimentId": {
          "description": "The Id of the experiment that created this run.",
          "type": "string"
        },
        "heartbeatEnabled": {
          "type": "boolean"
        },
        "hidden": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/RunOptions"
        },
        "parentRunId": {
          "description": "The parent of the run if the run is hierarchical; otherwise, Null.",
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "revision": {
          "format": "int32",
          "type": "integer"
        },
        "rootRunId": {
          "type": "string"
        },
        "runDefinition": {
          "type": "object"
        },
        "runId": {
          "description": "The identifier for the run. Run IDs must be less than 256 characters and contain only alphanumeric characters with dashes and underscores.",
          "type": "string"
        },
        "runNumber": {
          "format": "int32",
          "type": "integer"
        },
        "runType": {
          "type": "string"
        },
        "scriptName": {
          "type": "string"
        },
        "startTimeUtc": {
          "description": "The start time of the run in UTC.",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "The status of the run. The Status string value maps to the RunStatus Enum.",
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "target": {
          "type": "string"
        },
        "token": {
          "description": "A token used for authenticating a run.",
          "type": "string"
        },
        "tokenExpiryTimeUtc": {
          "description": "The Token expiration time in UTC.",
          "format": "date-time",
          "type": "string"
        },
        "userId": {
          "description": "The Id of the user that created the run.",
          "type": "string"
        },
        "warnings": {
          "description": "A list of warnings that occurred during the run.",
          "items": {
            "$ref": "#/definitions/RunDetailsWarningDto"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "RunMetricDto": {
      "properties": {
        "cells": {
          "items": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "type": "array",
          "uniqueItems": false
        },
        "createdUtc": {
          "format": "date-time",
          "type": "string"
        },
        "dataContainerId": {
          "type": "string"
        },
        "dataLocation": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "metricId": {
          "format": "uuid",
          "type": "string"
        },
        "metricType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "numCells": {
          "format": "int32",
          "type": "integer"
        },
        "runId": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/MetricSchemaDto"
        }
      },
      "type": "object"
    },
    "RunOptions": {
      "properties": {
        "generateDataContainerIdIfNotSpecified": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RunStatus": {
      "description": "Contains the details of a run.",
      "properties": {
        "runId": {
          "description": "The identifier for a run.",
          "example": "myexperiment_155000000001_0",
          "type": "string"
        },
        "target": {
          "description": "Target refers to compute where the job is scheduled for execution.",
          "example": "local",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ServiceCreateRequest": {
      "description": "The base class for creating a service.",
      "discriminator": "serviceCreateRequestTypeDiscriminator",
      "properties": {
        "computeType": {
          "description": "The compute environment type for the service.",
          "enum": [
            "ACS",
            "FPGA",
            "ACI",
            "AKS"
          ],
          "example": "AKS",
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ComputeEnvironmentType",
            "oldModelAsString": true
          }
        },
        "creationMode": {
          "description": "The service creation mode.",
          "enum": [
            "Image",
            "RegisteredModel",
            "ModelFiles",
            "Environment"
          ],
          "example": "Image",
          "format": "int32",
          "type": "integer",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ServiceCreationSource",
            "oldModelAsString": true
          }
        },
        "dependencies": {
          "$ref": "#/definitions/ServiceCreationDependentEntities",
          "description": "The entities (like models and images) that the service is dependent on and that need to be created as part of this call."
        },
        "description": {
          "description": "The description of the service.",
          "type": "string"
        },
        "imageId": {
          "description": "The Image Id.",
          "type": "string"
        },
        "keys": {
          "$ref": "#/definitions/AuthKeys",
          "description": "The authentication keys."
        },
        "kvTags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The service tag dictionary. Tags are mutable.",
          "type": "object"
        },
        "location": {
          "description": "The location of the service.",
          "type": "string"
        },
        "name": {
          "description": "The service name.",
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The service properties dictionary. Properties are immutable.",
          "type": "object"
        },
        "serviceCreateRequestTypeDiscriminator": {
          "description": "Property used by Swagger for polymorphic object generation.",
          "type": "string"
        },
        "tags": {
          "description": "The service tag list.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "required": [
        "serviceCreateRequestTypeDiscriminator"
      ],
      "type": "object"
    },
    "ServiceCreationAsyncOperationDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/AsyncOperationDetails"
        },
        {
          "properties": {
            "createdImageId": {
              "description": "The created Image Id.",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "description": "The service creation operation details.",
      "properties": {},
      "type": "object"
    },
    "ServiceCreationDependentEntities": {
      "description": "The dependent entities for the service.",
      "properties": {
        "image": {
          "$ref": "#/definitions/ImageRequestBase",
          "description": "The Image details."
        }
      },
      "type": "object"
    },
    "ServiceResponseBase": {
      "description": "The base service response. The correct inherited response based on computeType will be returned (ex. ACIServiceResponse)",
      "discriminator": "serviceResponseBaseTypeDiscriminator",
      "properties": {
        "computeType": {
          "description": "The compute environment type for the service.",
          "enum": [
            "ACS",
            "FPGA",
            "ACI",
            "AKS"
          ],
          "example": "AKS",
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ComputeEnvironmentType",
            "oldModelAsString": true
          }
        },
        "createdTime": {
          "description": "The time the service was created.",
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "description": "The service description.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ModelErrorResponse",
          "description": "The error details."
        },
        "id": {
          "description": "The service Id.",
          "type": "string"
        },
        "kvTags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The service tag dictionary. Tags are mutable.",
          "type": "object"
        },
        "name": {
          "description": "The service name.",
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The service property dictionary. Properties are immutable.",
          "type": "object"
        },
        "serviceResponseBaseTypeDiscriminator": {
          "description": "Property used by Swagger for polymorphic object generation.",
          "type": "string"
        },
        "state": {
          "description": "The current state of the service.",
          "enum": [
            "Transitioning",
            "Healthy",
            "Unhealthy",
            "Failed"
          ],
          "example": "Healthy",
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "WebServiceState",
            "oldModelAsString": true
          }
        },
        "tags": {
          "description": "The service tag list.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false
        },
        "updatedTime": {
          "description": "The time the service was updated.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "serviceResponseBaseTypeDiscriminator"
      ],
      "type": "object"
    },
    "SourceCodeDataReference": {
      "properties": {
        "dataStoreName": {
          "description": "The source data datastore name.",
          "example": "MySourceDatastore",
          "type": "string"
        },
        "path": {
          "description": "The path to the source directory or file.\r\nThe path should not include the blob container\r\nname or fileshare name.\r\nIf not set, the path defaults to the root\r\nof the file share or blob container.\r\nThe cloud file or the contents of cloud directory will be copied to the working directory of the run\r\nbefore the user code runs.",
          "example": "source/projects/projectAbc/",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SparkConfiguration": {
      "properties": {
        "configuration": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SparkMavenPackage": {
      "properties": {
        "artifact": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SparkSection": {
      "properties": {
        "packages": {
          "description": "The Spark packages to use.",
          "items": {
            "$ref": "#/definitions/SparkMavenPackage"
          },
          "type": "array",
          "uniqueItems": false
        },
        "precachePackages": {
          "description": "Whether to preckage the packages.",
          "example": "True",
          "type": "boolean"
        },
        "repositories": {
          "description": "The list of spark repositories.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "Stream": {
      "properties": {
        "canRead": {
          "readOnly": true,
          "type": "boolean"
        },
        "canSeek": {
          "readOnly": true,
          "type": "boolean"
        },
        "canTimeout": {
          "readOnly": true,
          "type": "boolean"
        },
        "canWrite": {
          "readOnly": true,
          "type": "boolean"
        },
        "length": {
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "position": {
          "format": "int64",
          "type": "integer"
        },
        "readTimeout": {
          "format": "int32",
          "type": "integer"
        },
        "writeTimeout": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "StringSegment": {
      "properties": {
        "buffer": {
          "readOnly": true,
          "type": "string"
        },
        "hasValue": {
          "readOnly": true,
          "type": "boolean"
        },
        "length": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "value": {
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TargetRuntime": {
      "description": "The target runtime.",
      "properties": {
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The properties dictionary.",
          "readOnly": true,
          "type": "object"
        },
        "runtimeType": {
          "description": "The target runtime type.",
          "enum": [
            "SparkPython",
            "Tlc37",
            "Tlc38",
            "Tlc310",
            "Python",
            "PythonSlim",
            "PythonCustom"
          ],
          "example": "Python",
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "RuntimeType",
            "oldModelAsString": true
          }
        },
        "targetArchitecture": {
          "description": "The target architecture.",
          "enum": [
            "Amd64",
            "Arm32v7"
          ],
          "example": "Amd64",
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ArchitectureType",
            "oldModelAsString": true
          }
        }
      },
      "type": "object"
    },
    "TensorflowConfiguration": {
      "properties": {
        "parameterServerCount": {
          "description": "Number of parameter servers.",
          "example": "1",
          "format": "int32",
          "type": "integer"
        },
        "workerCount": {
          "description": "The number of workers.",
          "example": "2",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    }
  },
  "parameters": {
    "dnsSuffix": {
      "default": "api.azureml.ms",
      "description": "The DNS suffix for the Azure Machine Learning Service endpoint.",
      "in": "path",
      "name": "dnsSuffix",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
      "x-ms-skip-url-encoding": true
    },
    "region": {
      "description": "The Azure region name.",
      "in": "path",
      "name": "region",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client",
      "x-ms-skip-url-encoding": true
    }
  },
  "paths": {
    "/artifact/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/artifacts/asset/{origin}/{container}": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Create an Asset.",
        "operationId": "Artifact_CreateAsset",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The origin of the Artifact.",
            "in": "path",
            "name": "origin",
            "required": true,
            "type": "string"
          },
          {
            "description": "The container name.",
            "in": "path",
            "name": "container",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Artifact Path.",
            "in": "query",
            "name": "path",
            "required": false,
            "type": "string"
          },
          {
            "description": "The Asset details.",
            "in": "body",
            "name": "assetDto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AssetDto"
            }
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Asset is created successfully.",
            "schema": {
              "$ref": "#/definitions/AssetDto"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "429": {
            "description": "Too many Requests. Please try again later."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Create Asset.",
        "tags": [
          "Artifact"
        ]
      },
      "put": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Update or insert an Asset.",
        "operationId": "Artifact_CreateOrUpdateAsset",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The origin of the Artifact.",
            "in": "path",
            "name": "origin",
            "required": true,
            "type": "string"
          },
          {
            "description": "The container name.",
            "in": "path",
            "name": "container",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Artifact Path.",
            "in": "query",
            "name": "path",
            "required": false,
            "type": "string"
          },
          {
            "description": "The Asset details.",
            "in": "body",
            "name": "assetDto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AssetDto"
            }
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Assert is updated or inserted successfully.",
            "schema": {
              "$ref": "#/definitions/AssetDto"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "429": {
            "description": "Too many Requests. Please try again later."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Upset Asset.",
        "tags": [
          "Artifact"
        ]
      }
    },
    "/artifact/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/artifacts/batch/copy/bloburis/{origin}/{container}": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Batch copy of blobs using uri.",
        "operationId": "Artifact_BatchCopyBlobsWithUri",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The origin of the Artifact.",
            "in": "path",
            "name": "origin",
            "required": true,
            "type": "string"
          },
          {
            "description": "The container name.",
            "in": "path",
            "name": "container",
            "required": true,
            "type": "string"
          },
          {
            "description": "The command for Batch Artifact blob copy request.",
            "in": "body",
            "name": "command",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BatchArtifactBlobCopyRequest"
            }
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The batch copy of files using uri is successful.",
            "schema": {
              "$ref": "#/definitions/BatchArtifactContentInformationDto"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "429": {
            "description": "Too many Requests. Please try again later."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Batch copy of blobs with uri.",
        "tags": [
          "Artifact"
        ]
      }
    },
    "/artifact/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/artifacts/batch/copy/filesas/{origin}/{container}": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Batch copy of files using shared access signature.",
        "operationId": "Artifact_BatchCopyFilesWithSas",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The origin of the Artifact.",
            "in": "path",
            "name": "origin",
            "required": true,
            "type": "string"
          },
          {
            "description": "The container name.",
            "in": "path",
            "name": "container",
            "required": true,
            "type": "string"
          },
          {
            "description": "The command for Batch Artifact copy request.",
            "in": "body",
            "name": "command",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BatchArtifactCopyRequest"
            }
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The batch copy of files using shared access signature is successful.",
            "schema": {
              "$ref": "#/definitions/BatchArtifactContentInformationDto"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "429": {
            "description": "Too many Requests. Please try again later."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Batch copy of files with shared access signature.",
        "tags": [
          "Artifact"
        ]
      }
    },
    "/artifact/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/artifacts/batch/ingest/containersas/{origin}/{container}": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Ingest Batch Artifacts using shared access signature.",
        "operationId": "Artifact_BatchIngestFromSas",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The origin of the Artifact.",
            "in": "path",
            "name": "origin",
            "required": true,
            "type": "string"
          },
          {
            "description": "The container name.",
            "in": "path",
            "name": "container",
            "required": true,
            "type": "string"
          },
          {
            "description": "The command for Batch Artifact container ingest using shared access signature request.",
            "in": "body",
            "name": "command",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BatchArtifactContainerSasIngestCommand"
            }
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Batch is ingested using shared access signature successfully.",
            "schema": {
              "$ref": "#/definitions/PaginatedArtifactDtoList"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "429": {
            "description": "Too many Requests. Please try again later."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Batch ingest using shared access signature.",
        "tags": [
          "Artifact"
        ],
        "x-ms-pageable": {
          "nextLinkName": "continuationToken"
        }
      }
    },
    "/artifact/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/artifacts/batch/metadata": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Get Batch Artifacts by the specific Ids.",
        "operationId": "Artifact_BatchGetById",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The command for Batch Artifact get request.",
            "in": "body",
            "name": "command",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BatchArtifactsGetCommand"
            }
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The requested Batch Artifacts are returned successfully.",
            "schema": {
              "$ref": "#/definitions/BatchArtifactContentInformationDto"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "429": {
            "description": "Too many Requests. Please try again later."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get Batch Artifacts by Ids.",
        "tags": [
          "Artifact"
        ]
      }
    },
    "/artifact/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/artifacts/batch/metadata/{origin}/{container}": {
      "delete": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Delete a Batch of Artifact Metadata.",
        "operationId": "Artifact_BatchDeleteMetaData",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The origin of the Artifact.",
            "in": "path",
            "name": "origin",
            "required": true,
            "type": "string"
          },
          {
            "description": "The container name.",
            "in": "path",
            "name": "container",
            "required": true,
            "type": "string"
          },
          {
            "description": "The command for Batch Artifact delete request.",
            "in": "body",
            "name": "command",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BatchArtifactDeleteCommand"
            }
          },
          {
            "default": false,
            "description": "If set to true. The delete cannot be revert at later time.",
            "in": "query",
            "name": "hardDelete",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "The batch delete of Artifact metadata is completed successfully."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "429": {
            "description": "Too many Requests. Please try again later."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Delete Batch of Artifact Metadata.",
        "tags": [
          "Artifact"
        ]
      },
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Create a Batch of empty Artifacts.",
        "operationId": "Artifact_BatchCreateEmptyArtifacts",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The origin of the Artifact.",
            "in": "path",
            "name": "origin",
            "required": true,
            "type": "string"
          },
          {
            "description": "The container name.",
            "in": "path",
            "name": "container",
            "required": true,
            "type": "string"
          },
          {
            "description": "The command for Batch Artifact create request.",
            "in": "body",
            "name": "command",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BatchArtifactCreateCommand"
            }
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Batch of empty Artifacts created successfully.",
            "schema": {
              "$ref": "#/definitions/BatchArtifactContentInformationDto"
            }
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "The request could not be completed due to a conflict with the current state of the target resource."
          },
          "429": {
            "description": "Too many Requests. Please try again later."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Create empty Batch Artifacts.",
        "tags": [
          "Artifact"
        ]
      }
    },
    "/artifact/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/artifacts/batch/{origin}/{container}": {
      "delete": {
        "consumes": [],
        "description": "Delete Artifact Metadata in a specific container.",
        "operationId": "Artifact_DeleteMetaDataInContainer",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The origin of the Artifact.",
            "in": "path",
            "name": "origin",
            "required": true,
            "type": "string"
          },
          {
            "description": "The container name.",
            "in": "path",
            "name": "container",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "description": "If set to true. The delete cannot be revert at later time.",
            "in": "query",
            "name": "hardDelete",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "The Artifact metadata deleted successfully."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "429": {
            "description": "Too many Requests. Please try again later."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Delete Artifact Metadata.",
        "tags": [
          "Artifact"
        ]
      }
    },
    "/artifact/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/artifacts/content/{origin}/{container}": {
      "get": {
        "consumes": [],
        "description": "Get Artifact content of a specific Id.",
        "operationId": "Artifact_Download",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The origin of the Artifact.",
            "in": "path",
            "name": "origin",
            "required": true,
            "type": "string"
          },
          {
            "description": "The container name.",
            "in": "path",
            "name": "container",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Artifact Path.",
            "in": "query",
            "name": "path",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/octet-stream"
        ],
        "responses": {
          "200": {
            "description": "The details of the Artifact content are returned successfully.",
            "schema": {
              "format": "byte",
              "type": "file"
            }
          },
          "400": {
            "description": "The request had missing or invalid values."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found."
          },
          "429": {
            "description": "Too many Requests. Please try again later."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get Artifact content by Id.",
        "tags": [
          "Artifact"
        ]
      },
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Upload content to an Artifact.",
        "operationId": "Artifact_Upload",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The origin of the Artifact.",
            "in": "path",
            "name": "origin",
            "required": true,
            "type": "string"
          },
          {
            "description": "The container name.",
            "in": "path",
            "name": "container",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Artifact Path.",
            "in": "query",
            "name": "path",
            "required": false,
            "type": "string"
          },
          {
            "description": "The index.",
            "format": "int32",
            "in": "query",
            "name": "index",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The content.",
            "in": "body",
            "name": "content",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Stream"
            }
          },
          {
            "default": false,
            "description": "The command for Batch Artifact blob copy request.",
            "in": "query",
            "name": "append",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Artifact content is uploaded successfully.",
            "schema": {
              "$ref": "#/definitions/ArtifactDto"
            }
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "The request could not be completed due to a conflict with the current state of the target resource."
          },
          "429": {
            "description": "Too many Requests. Please try again later."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Upload Artifact content.",
        "tags": [
          "Artifact"
        ]
      }
    },
    "/artifact/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/artifacts/contentinfo/storageuri/{origin}/{container}": {
      "get": {
        "consumes": [],
        "description": "Get storage content information of an Artifact.",
        "operationId": "Artifact_GetStorageContentInformation",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The origin of the Artifact.",
            "in": "path",
            "name": "origin",
            "required": true,
            "type": "string"
          },
          {
            "description": "The container name.",
            "in": "path",
            "name": "container",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Artifact Path.",
            "in": "query",
            "name": "path",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Artifact storage content information is returned successfully.",
            "schema": {
              "$ref": "#/definitions/ArtifactContentInformationDto"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "429": {
            "description": "Too many Requests. Please try again later."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get Artifact storage content information.",
        "tags": [
          "Artifact"
        ]
      }
    },
    "/artifact/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/artifacts/contentinfo/{origin}/{container}": {
      "get": {
        "consumes": [],
        "description": "Get content information of an Artifact.",
        "operationId": "Artifact_GetContentInformation",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The origin of the Artifact.",
            "in": "path",
            "name": "origin",
            "required": true,
            "type": "string"
          },
          {
            "description": "The container name.",
            "in": "path",
            "name": "container",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Artifact Path.",
            "in": "query",
            "name": "path",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Artifact content information is returned successfully.",
            "schema": {
              "$ref": "#/definitions/ArtifactContentInformationDto"
            }
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "429": {
            "description": "Too many Requests. Please try again later."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get Artifact content information.",
        "tags": [
          "Artifact"
        ]
      }
    },
    "/artifact/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/artifacts/metadata": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Create an Artifact.",
        "operationId": "Artifact_Create",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Artifact details.",
            "in": "body",
            "name": "artifactDto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ArtifactDto"
            }
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Artifact is created successfully.",
            "schema": {
              "$ref": "#/definitions/ArtifactDto"
            }
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "429": {
            "description": "Too many Requests. Please try again later."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Create Artifact.",
        "tags": [
          "Artifact"
        ]
      }
    },
    "/artifact/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/artifacts/metadata/{origin}/{container}": {
      "delete": {
        "consumes": [],
        "description": "Delete an Artifact Metadata.",
        "operationId": "Artifact_DeleteMetaData",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The origin of the Artifact.",
            "in": "path",
            "name": "origin",
            "required": true,
            "type": "string"
          },
          {
            "description": "The container name.",
            "in": "path",
            "name": "container",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Artifact Path.",
            "in": "query",
            "name": "path",
            "required": false,
            "type": "string"
          },
          {
            "default": false,
            "description": "If set to true. The delete cannot be revert at later time.",
            "in": "query",
            "name": "hardDelete",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [],
        "responses": {
          "200": {
            "description": "The Artifact metadata deleted successfully."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "429": {
            "description": "Too many Requests. Please try again later."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Delete Artifact Metadata.",
        "tags": [
          "Artifact"
        ]
      },
      "get": {
        "consumes": [],
        "description": "Get Artifact metadata for a specific Id.",
        "operationId": "Artifact_Get",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The origin of the Artifact.",
            "in": "path",
            "name": "origin",
            "required": true,
            "type": "string"
          },
          {
            "description": "The container name.",
            "in": "path",
            "name": "container",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Artifact Path.",
            "in": "query",
            "name": "path",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The details of the Artifact are returned successfully.",
            "schema": {
              "$ref": "#/definitions/ArtifactDto"
            }
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "429": {
            "description": "Too many Requests. Please try again later."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get Artifact metadata by Id.",
        "tags": [
          "Artifact"
        ]
      }
    },
    "/artifact/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/artifacts/prefix/contentinfo/storageuri/{origin}/{container}": {
      "get": {
        "consumes": [],
        "description": "Get storage Uri for Artifacts in a specific path.",
        "operationId": "Artifact_ListStorageUriByPrefix",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The origin of the Artifact.",
            "in": "path",
            "name": "origin",
            "required": true,
            "type": "string"
          },
          {
            "description": "The container name.",
            "in": "path",
            "name": "container",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Artifact Path.",
            "in": "query",
            "name": "path",
            "required": false,
            "type": "string"
          },
          {
            "description": "The continuation token.",
            "in": "query",
            "name": "continuationToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Artifact storage uri is returned successfully.",
            "schema": {
              "$ref": "#/definitions/PaginatedArtifactContentInformationDtoList"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "429": {
            "description": "Too many Requests. Please try again later."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get storage Uri for Artifacts in a path.",
        "tags": [
          "Artifact"
        ],
        "x-ms-pageable": {
          "nextLinkName": "continuationToken"
        }
      }
    },
    "/artifact/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/artifacts/prefix/contentinfo/{origin}/{container}": {
      "get": {
        "consumes": [],
        "description": "Get shared access signature for an Artifact in specific path.",
        "operationId": "Artifact_ListSasByPrefix",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The origin of the Artifact.",
            "in": "path",
            "name": "origin",
            "required": true,
            "type": "string"
          },
          {
            "description": "The container name.",
            "in": "path",
            "name": "container",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Artifact Path.",
            "in": "query",
            "name": "path",
            "required": false,
            "type": "string"
          },
          {
            "description": "The continuation token.",
            "in": "query",
            "name": "continuationToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Artifact writable shared access signature is returned successfully.",
            "schema": {
              "$ref": "#/definitions/PaginatedArtifactContentInformationDtoList"
            }
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "429": {
            "description": "Too many Requests. Please try again later."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get shared access signature for an Artifact",
        "tags": [
          "Artifact"
        ],
        "x-ms-pageable": {
          "nextLinkName": "continuationToken"
        }
      }
    },
    "/artifact/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/artifacts/storageuri/batch/metadata": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Get Batch Artifacts storage by specific Ids.",
        "operationId": "Artifact_BatchGetStorageById",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The command for Batch Artifact get request.",
            "in": "body",
            "name": "command",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BatchArtifactsGetCommand"
            }
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Batch Artifact's storage are returned successfully.",
            "schema": {
              "$ref": "#/definitions/BatchArtifactContentInformationDto"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "429": {
            "description": "Too many Requests. Please try again later."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get Batch Artifacts storage by Ids.",
        "tags": [
          "Artifact"
        ]
      }
    },
    "/artifact/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/artifacts/write/{origin}/{container}": {
      "get": {
        "consumes": [],
        "description": "Get writable shared access signature for a specific Artifact.",
        "operationId": "Artifact_GetSas",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The origin of the Artifact.",
            "in": "path",
            "name": "origin",
            "required": true,
            "type": "string"
          },
          {
            "description": "The container name.",
            "in": "path",
            "name": "container",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Artifact Path.",
            "in": "query",
            "name": "path",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Artifact writable shared access signature is returned successfully.",
            "schema": {
              "$ref": "#/definitions/ArtifactContentInformationDto"
            }
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "429": {
            "description": "Too many Requests. Please try again later."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get writable shared access signature for Artifact.",
        "tags": [
          "Artifact"
        ]
      }
    },
    "/artifact/v2.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/artifacts/{origin}/{container}": {
      "get": {
        "consumes": [],
        "description": "Get Artifacts metadata in a specific container or path.",
        "operationId": "Artifact_ListInContainer",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The origin of the Artifact.",
            "in": "path",
            "name": "origin",
            "required": true,
            "type": "string"
          },
          {
            "description": "The container name.",
            "in": "path",
            "name": "container",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Artifact Path.",
            "in": "query",
            "name": "path",
            "required": false,
            "type": "string"
          },
          {
            "description": "The continuation token.",
            "in": "query",
            "name": "continuationToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The details of the Artifacts are returned successfully.",
            "schema": {
              "$ref": "#/definitions/PaginatedArtifactDtoList"
            }
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "429": {
            "description": "Too many Requests. Please try again later."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get Artifacts metadata in a container or path.",
        "tags": [
          "Artifact"
        ],
        "x-ms-pageable": {
          "nextLinkName": "continuationToken"
        }
      }
    },
    "/datastore/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores": {
      "delete": {
        "consumes": [],
        "description": "Delete all Datastores in the workspace.",
        "operationId": "DataStore_DeleteAll",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "All the Datastores in the workspace are deleted successfully."
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Delete all Datastores.",
        "tags": [
          "DataStore"
        ]
      },
      "get": {
        "consumes": [],
        "description": "Get the list of Datastores attached to the workspace.",
        "operationId": "DataStore_List",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "List of Datastore names.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "dataStoreNames",
            "required": false,
            "type": "array",
            "uniqueItems": false
          },
          {
            "description": "The Continuation Token.",
            "in": "query",
            "name": "continuationToken",
            "required": false,
            "type": "string"
          },
          {
            "default": 30,
            "description": "Count of Datastores to be returned.",
            "format": "int32",
            "in": "query",
            "name": "count",
            "required": false,
            "type": "integer"
          },
          {
            "default": true,
            "description": "Whether to include the datastore secret in the response.",
            "in": "query",
            "name": "includeSecret",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The list of Datastores are returned successfully.",
            "schema": {
              "$ref": "#/definitions/PaginatedDataStoreDtoList"
            }
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get Datastores list.",
        "tags": [
          "DataStore"
        ],
        "x-ms-pageable": {
          "nextLinkName": "continuationToken"
        }
      },
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Create or update a Datastore in the given workspace.",
        "operationId": "DataStore_Create",
        "parameters": [
          {
            "description": "The Datastore details.",
            "in": "body",
            "name": "dto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DataStoreDto"
            }
          },
          {
            "default": false,
            "description": "If set to true, the call will create an Datastore if it doesn't exist.",
            "in": "query",
            "name": "createIfNotExists",
            "required": false,
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If set to true, the call will skip Datastore validation.",
            "in": "query",
            "name": "skipValidation",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Datastore is created/updated succesfully."
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Create or update a Datastore.",
        "tags": [
          "DataStore"
        ]
      }
    },
    "/datastore/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}": {
      "delete": {
        "consumes": [],
        "description": "Delete a Datastore with a specific name.",
        "operationId": "DataStore_Delete",
        "parameters": [
          {
            "description": "The Datastore name.",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Datastore is deleted successfully."
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Delete a Datastore.",
        "tags": [
          "DataStore"
        ]
      },
      "get": {
        "consumes": [],
        "description": "Get details of a Datastore with a specific name.",
        "operationId": "DataStore_Get",
        "parameters": [
          {
            "description": "The Datastore name.",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Datastore details are returned successfully.",
            "schema": {
              "$ref": "#/definitions/DataStoreDto"
            }
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get Datastore details.",
        "tags": [
          "DataStore"
        ]
      },
      "put": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Update or create a Datastore in the given workspace.",
        "operationId": "DataStore_Update",
        "parameters": [
          {
            "description": "The Datastore name.",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Datastore details.",
            "in": "body",
            "name": "dto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DataStoreDto"
            }
          },
          {
            "default": false,
            "description": "If set to true, the call will create an Datastore if it doesn't exist.",
            "in": "query",
            "name": "createIfNotExists",
            "required": false,
            "type": "boolean"
          },
          {
            "default": false,
            "description": "If set to true, the call will skip Datastore validation.",
            "in": "query",
            "name": "skipValidation",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Datastore is created/updated succesfully."
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Update or create a Datastore.",
        "tags": [
          "DataStore"
        ]
      }
    },
    "/datastore/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/default": {
      "get": {
        "consumes": [],
        "description": "Get the default Datastore in the workspace.",
        "operationId": "DataStore_GetDefault",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The default Datastore is returned successfully.",
            "schema": {
              "$ref": "#/definitions/DataStoreDto"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get the default Datastore.",
        "tags": [
          "DataStoreDefault"
        ]
      }
    },
    "/datastore/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/default/{name}": {
      "put": {
        "consumes": [],
        "description": "Set a default Datastore in the workspace.",
        "operationId": "DataStore_SetDefault",
        "parameters": [
          {
            "description": "The Datastore name.",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The default Datastore is set successfully."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Set a default Datastore.",
        "tags": [
          "DataStoreDefault"
        ]
      }
    },
    "/execution/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/cancel": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Cancels a run within an experiment.",
        "operationId": "Execution_CancelRun",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The details of the run to cancel.",
            "in": "body",
            "name": "runDetails",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RunDetails"
            }
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The run was succesfully cancelled.",
            "schema": {
              "$ref": "#/definitions/RunStatus"
            }
          },
          "400": {
            "description": "The cancellation request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested run was not found."
          },
          "500": {
            "description": "An internal error has occurred and the run could not be created at this time."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Cancel a run.",
        "tags": [
          "Execution"
        ],
        "x-ms-examples": {
          "Cancel a run": {
            "parameters": {
              "experimentName": "demo_experiment",
              "parameters": {
                "runId": "demorun_15501234342_0",
                "target": "local"
              },
              "resourceGroupName": "demo_resource_group",
              "subscriptionId": "00000000-0000-0000-0000-000000000000",
              "workspaceName": "demo_workspace"
            },
            "responses": {
              "200": {
                "body": {
                  "runId": "demorun_15501234342_0",
                  "target": "local"
                }
              }
            }
          }
        }
      }
    },
    "/execution/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/localrun": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Starts an experiment run using the provided definition.json file to define the run.\r\n            The source code and configuration is defined in a zip archive in project.zip.",
        "operationId": "Execution_StartLocalRun",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Two files are required: 'project.zip':\r\n            A zip archive of a folder containing the source code to use for the run.\r\n            'definition.json': A text file that is a JSON-serialized run definition structure.",
            "in": "formData",
            "items": {},
            "name": "files",
            "required": true,
            "type": "array",
            "uniqueItems": false
          },
          {
            "description": "A run id. If not supplied a run id will be created automatically.",
            "in": "query",
            "name": "runId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "A run was succesfully started.",
            "schema": {
              "$ref": "#/definitions/FileStreamResult"
            }
          },
          "400": {
            "description": "The run was submitted with missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested experiment was not found."
          },
          "500": {
            "description": "An internal error has occurred and the run could not be created at this time."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Start a run on a local machine.",
        "tags": [
          "Execution"
        ],
        "x-ms-examples": {
          "Start a local run": {
            "parameters": {
              "experimentName": "demo_experiment",
              "files": "multipart-form-data",
              "resourceGroupName": "demo_resource_group",
              "subscriptionId": "00000000-0000-0000-0000-000000000000",
              "workspaceName": "demo_workspace"
            },
            "responses": {
              "200": {
                "body": {}
              }
            }
          }
        }
      }
    },
    "/execution/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/run": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Starts an experiment run using the provided definition.json file to define the run.\r\n            The source code and configuration is defined in a zip archive in project.zip.",
        "operationId": "Execution_StartRun",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Two files are required: 'project.zip':\r\n            A zip archive of a folder containing the source code to use for the run.\r\n            'definition.json': A text file that is a JSON-serialized run definition structure.",
            "in": "formData",
            "items": {},
            "name": "files",
            "required": true,
            "type": "array",
            "uniqueItems": false
          },
          {
            "description": "A run id. If not supplied a run id will be created automatically.",
            "in": "query",
            "name": "runId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "A run was succesfully started.",
            "schema": {
              "$ref": "#/definitions/RunStatus"
            }
          },
          "400": {
            "description": "The run was submitted with missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "500": {
            "description": "An internal error has occurred and the run could not be created at this time."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Start a run on a remote compute target.",
        "tags": [
          "Execution"
        ],
        "x-ms-examples": {
          "Start a run": {
            "parameters": {
              "definition": {
                "Configuration": {
                  "Arguments": [
                    "234"
                  ],
                  "Communicator": "None",
                  "Environment": {
                    "Docker": {
                      "BaseImage": "mcr.microsoft.com/azureml/base:0.2.2"
                    },
                    "Python": {
                      "CondaDependencies": {
                        "dependencies": [
                          "python=3.6.2",
                          {
                            "pip": [
                              "azureml-defaults"
                            ]
                          }
                        ],
                        "name": "project_environment"
                      },
                      "InterpreterPath": "python",
                      "UserManagedDependencies": false
                    }
                  },
                  "Framework": "Python",
                  "History": {
                    "OutputCollection": true
                  },
                  "MaxRunDurationSeconds": 1200,
                  "NodeCount": 1,
                  "Script": "findsquare.py",
                  "SourceDirectoryDataStore": null,
                  "Target": "batchai"
                },
                "SnapshotId": "00000000-0000-0000-0000-000000000000"
              },
              "experimentName": "demo_experiment",
              "resourceGroupName": "demo_resource_group",
              "subscriptionId": "00000000-0000-0000-0000-000000000000",
              "workspaceName": "demo_workspace"
            },
            "responses": {
              "200": {
                "body": {
                  "runId": "demorun_15501234342_0",
                  "target": "local"
                }
              }
            }
          }
        }
      }
    },
    "/execution/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runId/{runId}/cancel": {
      "post": {
        "consumes": [],
        "description": "Cancels a run within an experiment.",
        "operationId": "Execution_CancelRunWithUri",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The id of the run to cancel.",
            "in": "path",
            "name": "runId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The run was succesfully cancelled.",
            "schema": {
              "$ref": "#/definitions/RunStatus"
            }
          },
          "400": {
            "description": "The cancellation request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested run was not found."
          },
          "500": {
            "description": "An internal error has occurred and the run could not be created at this time."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Cancel a run.",
        "tags": [
          "Execution"
        ],
        "x-ms-examples": {
          "Cancel a run with URI": {
            "parameters": {
              "experimentName": "demo_experiment",
              "resourceGroupName": "demo_resource_group",
              "runId": "demorun_15501234342_0",
              "subscriptionId": "00000000-0000-0000-0000-000000000000",
              "workspaceName": "demo_workspace"
            },
            "responses": {
              "200": {
                "body": {
                  "runId": "demorun_15501234342_0",
                  "target": "local"
                }
              }
            }
          }
        }
      }
    },
    "/execution/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/snapshotrun": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Starts an experiment run on the remote compute target using the provided definition.json file to define the run.\r\n            The code for the run is retrieved using the snapshotId in definition.json.",
        "operationId": "Execution_StartSnapshotRun",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "A JSON run definition structure.",
            "in": "body",
            "name": "definition",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RunDefinition"
            }
          },
          {
            "description": "A run id. If not supplied a run id will be created automatically.",
            "in": "query",
            "name": "runId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "A snapshot run was succesfully started.",
            "schema": {
              "$ref": "#/definitions/RunStatus"
            }
          },
          "400": {
            "description": "The snaphot run was submitted with missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested experiment was not found."
          },
          "409": {
            "description": "A conflict occurred."
          },
          "500": {
            "description": "An internal error has occurred and the snapshot run could not be created at this time."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Start a run from a snapshot on a remote compute target.",
        "tags": [
          "Execution"
        ],
        "x-ms-examples": {
          "Start a snapshot run": {
            "parameters": {
              "experimentName": "demo_experiment",
              "files": "multipart-form-data",
              "resourceGroupName": "demo_resource_group",
              "subscriptionId": "00000000-0000-0000-0000-000000000000",
              "workspaceName": "demo_workspace"
            },
            "responses": {
              "200": {
                "body": {
                  "runId": "demorun_15501234342_0",
                  "target": "local"
                }
              }
            }
          }
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments": {
      "get": {
        "consumes": [],
        "description": "Get all experiments in a specific workspace with the specified filters.",
        "operationId": "Experiment_List",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Allows for filtering the collection of resources.\r\nThe expression specified is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "The continuation token to use for getting the next set of resources.",
            "in": "query",
            "name": "$continuationtoken",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "The list of resource properties to use for sorting the requested resources.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "$orderby",
            "required": false,
            "type": "array",
            "uniqueItems": false
          },
          {
            "description": "The sort order of the returned resources. Not used, specify asc or desc after each property name in the OrderBy parameter.",
            "enum": [
              "Asc",
              "Desc"
            ],
            "in": "query",
            "name": "$sortorder",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of items in the resource collection to be included in the result.\r\nIf not specified, all items are returned.",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Whether to include a count of the matching resources along with the resources returned in the response.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The details of the Experiment are returned successfully.",
            "schema": {
              "$ref": "#/definitions/ExperimentDto"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested Experiment was not found."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get all Experiments in a specific workspace.",
        "tags": [
          "Experiments"
        ]
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}": {
      "get": {
        "consumes": [],
        "description": "Get details of an Experiment with specific Experiment name.",
        "operationId": "Experiment_Get",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The details of the Experiment are returned successfully.",
            "schema": {
              "$ref": "#/definitions/ExperimentDto"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested Experiment was not found."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get details of an Experiment.",
        "tags": [
          "Experiments"
        ]
      },
      "post": {
        "consumes": [],
        "description": "Create a new Experiment.",
        "operationId": "Experiment_Create",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Experiment is created successfully.",
            "schema": {
              "$ref": "#/definitions/ExperimentDto"
            }
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Create an Experiment.",
        "tags": [
          "Experiments"
        ]
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/batch/events": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Post event data to a specific Run Id.",
        "operationId": "Events_BatchPost",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The batch of Event details.",
            "in": "body",
            "name": "batchEventCommand",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BatchEventCommandDto"
            }
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The batch of Events is posted successfully.",
            "schema": {
              "$ref": "#/definitions/BatchEventCommandResultDto"
            }
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Batch post event data.",
        "tags": [
          "Events"
        ]
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/batch/runs": {
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Add or Modify a batch of Runs for a given experiment.",
        "operationId": "Run_BatchAddOrModify",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The list of requested Run Additions/modifications in an Experiment.",
            "in": "body",
            "name": "requestDto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BatchAddOrModifyRunRequestDto"
            }
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Batch Runs are added/modified successfully.",
            "schema": {
              "$ref": "#/definitions/BatchAddOrModifyRunResultDto"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Add or Modify a batch of Runs.",
        "tags": [
          "Run"
        ]
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/metrics": {
      "get": {
        "consumes": [],
        "description": "Get all Run Metrics for a specific Experiment with the specified filters.",
        "operationId": "RunMetric_List",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Allows for filtering the collection of resources.\r\nThe expression specified is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "The continuation token to use for getting the next set of resources.",
            "in": "query",
            "name": "$continuationtoken",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "The list of resource properties to use for sorting the requested resources.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "$orderby",
            "required": false,
            "type": "array",
            "uniqueItems": false
          },
          {
            "description": "The sort order of the returned resources. Not used, specify asc or desc after each property name in the OrderBy parameter.",
            "enum": [
              "Asc",
              "Desc"
            ],
            "in": "query",
            "name": "$sortorder",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of items in the resource collection to be included in the result.\r\nIf not specified, all items are returned.",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Whether to include a count of the matching resources along with the resources returned in the response.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The type of merge strategy. Currently supported strategies are:\r\nNone - all logged values are returned as individual metrics.\r\nMergeToVector - merges multiple values into a vector of values.\r\nDefault - the system determines the behavior.",
            "enum": [
              "Default",
              "None",
              "MergeToVector"
            ],
            "in": "query",
            "name": "MergeStrategyType",
            "required": false,
            "type": "string"
          },
          {
            "description": "Controls behavior of the merge strategy in certain cases; e.g. when a metric is not merged.",
            "enum": [
              "None",
              "ReportUnmergedMetricsValues"
            ],
            "in": "query",
            "name": "MergeStrategyOptions",
            "required": false,
            "type": "string"
          },
          {
            "description": "The strategy settings version.",
            "in": "query",
            "name": "MergeStrategySettings.Version",
            "required": false,
            "type": "string"
          },
          {
            "description": "Defines how to select metrics when merging them together.",
            "enum": [
              "SelectAll",
              "SelectByFirstValueSchema"
            ],
            "in": "query",
            "name": "MergeStrategySettings.SelectMetrics",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Run Metrics are returned successfully.",
            "schema": {
              "$ref": "#/definitions/PaginatedRunMetricDtoList"
            }
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get all Run Metrics for a specific Experiment.",
        "tags": [
          "RunMetrics"
        ],
        "x-ms-pageable": {
          "nextLinkName": "continuationToken"
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/metrics/{metricId}": {
      "get": {
        "consumes": [],
        "description": "Get Metric details for a specific Metric Id.",
        "operationId": "RunMetric_Get",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier for a Metric.",
            "format": "uuid",
            "in": "path",
            "name": "metricId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RunMetricDto"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get Metric details.",
        "tags": [
          "RunMetrics"
        ]
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/metrics:query": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Get all Run Metrics for the specific Experiment with the specified query filters.",
        "operationId": "RunMetric_GetByQuery",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Query Prameters for data sorting and filtering.",
            "in": "body",
            "name": "queryParams",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryParamsDto"
            }
          },
          {
            "description": "The type of merge strategy. Currently supported strategies are:\r\nNone - all logged values are returned as individual metrics.\r\nMergeToVector - merges multiple values into a vector of values.\r\nDefault - the system determines the behavior.",
            "enum": [
              "Default",
              "None",
              "MergeToVector"
            ],
            "in": "query",
            "name": "MergeStrategyType",
            "required": false,
            "type": "string"
          },
          {
            "description": "Controls behavior of the merge strategy in certain cases; e.g. when a metric is not merged.",
            "enum": [
              "None",
              "ReportUnmergedMetricsValues"
            ],
            "in": "query",
            "name": "MergeStrategyOptions",
            "required": false,
            "type": "string"
          },
          {
            "description": "The strategy settings version.",
            "in": "query",
            "name": "MergeStrategySettings.Version",
            "required": false,
            "type": "string"
          },
          {
            "description": "Defines how to select metrics when merging them together.",
            "enum": [
              "SelectAll",
              "SelectByFirstValueSchema"
            ],
            "in": "query",
            "name": "MergeStrategySettings.SelectMetrics",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Run Metrics are returned successfully.",
            "schema": {
              "$ref": "#/definitions/PaginatedRunMetricDtoList"
            }
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get all Run Metrics for the specific Experiment.",
        "tags": [
          "RunMetrics"
        ],
        "x-ms-pageable": {
          "nextLinkName": "continuationToken"
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runcounts": {
      "get": {
        "consumes": [],
        "description": "Get Run counts for an Experiment.",
        "operationId": "Run_GetCounts",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Allows for filtering the collection of resources.\r\nThe expression specified is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "The continuation token to use for getting the next set of resources.",
            "in": "query",
            "name": "$continuationtoken",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "The list of resource properties to use for sorting the requested resources.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "$orderby",
            "required": false,
            "type": "array",
            "uniqueItems": false
          },
          {
            "description": "The sort order of the returned resources. Not used, specify asc or desc after each property name in the OrderBy parameter.",
            "enum": [
              "Asc",
              "Desc"
            ],
            "in": "query",
            "name": "$sortorder",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of items in the resource collection to be included in the result.\r\nIf not specified, all items are returned.",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Whether to include a count of the matching resources along with the resources returned in the response.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RunCountsDto"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get Run counts.",
        "tags": [
          "Run"
        ]
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs": {
      "get": {
        "consumes": [],
        "description": "Get all Runs for a specific Experiment with the specified filters.",
        "operationId": "Run_List",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Allows for filtering the collection of resources.\r\nThe expression specified is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "The continuation token to use for getting the next set of resources.",
            "in": "query",
            "name": "$continuationtoken",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "The list of resource properties to use for sorting the requested resources.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "$orderby",
            "required": false,
            "type": "array",
            "uniqueItems": false
          },
          {
            "description": "The sort order of the returned resources. Not used, specify asc or desc after each property name in the OrderBy parameter.",
            "enum": [
              "Asc",
              "Desc"
            ],
            "in": "query",
            "name": "$sortorder",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of items in the resource collection to be included in the result.\r\nIf not specified, all items are returned.",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Whether to include a count of the matching resources along with the resources returned in the response.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Runs are returned successfully.",
            "schema": {
              "$ref": "#/definitions/PaginatedRunDtoList"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get all Runs for a specific Experiment.",
        "tags": [
          "Run"
        ],
        "x-ms-pageable": {
          "nextLinkName": "continuationToken"
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}": {
      "get": {
        "consumes": [],
        "description": "Get Run details of a specific Run Id.",
        "operationId": "Run_Get",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the Run.",
            "in": "path",
            "name": "runId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The details of the Run are returned successfully.",
            "schema": {
              "$ref": "#/definitions/RunDto"
            }
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get Run details.",
        "tags": [
          "Run"
        ]
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Add a new Run or Modify an existing Run.",
        "operationId": "Run_Patch",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the Run.",
            "in": "path",
            "name": "runId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The requested Run parameter Additions/modifications.",
            "in": "body",
            "name": "createRunDto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateRunDto"
            }
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Run is added/modified successfully.",
            "schema": {
              "$ref": "#/definitions/RunDto"
            }
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found."
          },
          "409": {
            "description": "The request could not be completed due to a conflict with the current state of the target resource."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Add or Modify a Run.",
        "tags": [
          "Run"
        ]
      },
      "put": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Create a new Run.",
        "operationId": "Run_Update",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The workspace name.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the Run.",
            "in": "path",
            "name": "runId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The parameters of the new Run.",
            "in": "body",
            "name": "modifyRunDto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ModifyRunDto"
            }
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RunDto"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Create a Run.",
        "tags": [
          "Run"
        ]
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/artifacts": {
      "get": {
        "consumes": [],
        "description": "Get Artifacts in container for a specific Run Id.",
        "operationId": "RunArtifact_ListInContainer",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the Run.",
            "in": "path",
            "name": "runId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Continuation Token.",
            "in": "query",
            "name": "continuationToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Artifacts in Container are returned successfully.",
            "schema": {
              "$ref": "#/definitions/PaginatedArtifactDtoList"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get Artifacts in a container.",
        "tags": [
          "RunArtifacts"
        ],
        "x-ms-pageable": {
          "nextLinkName": "continuationToken"
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/artifacts/artifacturi": {
      "get": {
        "consumes": [],
        "description": "Get URI of an Artifact for a specific Run Id.",
        "operationId": "RunArtifact_GetSasUri",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the Run.",
            "in": "path",
            "name": "runId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Artifact Path.",
            "in": "query",
            "name": "path",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get URI of an Artifact.",
        "tags": [
          "RunArtifacts"
        ]
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/artifacts/batch/metadata": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Create a batch of empty Artifacts in a specific Run.",
        "operationId": "RunArtifact_BatchCreateEmptyArtifacts",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the Run.",
            "in": "path",
            "name": "runId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The command.",
            "in": "body",
            "name": "command",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BatchArtifactCreateCommand"
            }
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Batch Artifacts are created successfully.",
            "schema": {
              "$ref": "#/definitions/BatchArtifactContentInformationDto"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Create a batch of empty Artifacts.",
        "tags": [
          "RunArtifacts"
        ]
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/artifacts/contentinfo": {
      "get": {
        "consumes": [],
        "description": "Get Artifact content information for give Run Id.",
        "operationId": "RunArtifact_GetContentInformation",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the Run.",
            "in": "path",
            "name": "runId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Artifact Path.",
            "in": "query",
            "name": "path",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Artifact content information is returned successfully.",
            "schema": {
              "$ref": "#/definitions/ArtifactContentInformationDto"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get Artifact content information.",
        "tags": [
          "RunArtifacts"
        ]
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/artifacts/metadata": {
      "get": {
        "consumes": [],
        "description": "Get Artifact for a specific Id.",
        "operationId": "RunArtifact_GetById",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the Run.",
            "in": "path",
            "name": "runId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Artifact Path.",
            "in": "query",
            "name": "path",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ArtifactDto"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get Artifact by Id.",
        "tags": [
          "RunArtifacts"
        ]
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/artifacts/path": {
      "get": {
        "consumes": [],
        "description": "Get Artifacts in the provided path for a specific Run Id.",
        "operationId": "RunArtifact_ListInPath",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the Run.",
            "in": "path",
            "name": "runId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Artifact Path.",
            "in": "query",
            "name": "path",
            "required": false,
            "type": "string"
          },
          {
            "description": "The Continuation Token.",
            "in": "query",
            "name": "continuationToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PaginatedArtifactDtoList"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get Artifacts in the provided path.",
        "tags": [
          "RunArtifacts"
        ],
        "x-ms-pageable": {
          "nextLinkName": "continuationToken"
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/artifacts/prefix/contentinfo": {
      "get": {
        "consumes": [],
        "description": "Get SAS of an Artifact in the specified path.",
        "operationId": "RunArtifact_ListSasByPrefix",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the Run.",
            "in": "path",
            "name": "runId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Artifact Path.",
            "in": "query",
            "name": "path",
            "required": false,
            "type": "string"
          },
          {
            "description": "The Continuation Token.",
            "in": "query",
            "name": "continuationToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PaginatedArtifactContentInformationDtoList"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get SAS of an Artifact.",
        "tags": [
          "RunArtifacts"
        ],
        "x-ms-pageable": {
          "nextLinkName": "continuationToken"
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/batch/metrics": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Post Metrics to a specific Run Id.",
        "operationId": "RunMetric_BatchPost",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier for a run.",
            "in": "path",
            "name": "runId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Details of the Metrics which will be added to the Run Id.",
            "in": "body",
            "name": "batchMetricDto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BatchMetricDto"
            }
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Run Metrics are posted successfully."
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found."
          },
          "409": {
            "description": "The request could not be completed due to a conflict with the current state of the target resource."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Post Metrics to a Run.",
        "tags": [
          "RunMetrics"
        ]
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/children": {
      "get": {
        "consumes": [],
        "description": "Get details of all child runs for the specified Run Id with the specified filters.",
        "operationId": "Run_GetChild",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the Run.",
            "in": "path",
            "name": "runId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Allows for filtering the collection of resources.\r\nThe expression specified is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "The continuation token to use for getting the next set of resources.",
            "in": "query",
            "name": "$continuationtoken",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "The list of resource properties to use for sorting the requested resources.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "$orderby",
            "required": false,
            "type": "array",
            "uniqueItems": false
          },
          {
            "description": "The sort order of the returned resources. Not used, specify asc or desc after each property name in the OrderBy parameter.",
            "enum": [
              "Asc",
              "Desc"
            ],
            "in": "query",
            "name": "$sortorder",
            "required": false,
            "type": "string"
          },
          {
            "description": "The maximum number of items in the resource collection to be included in the result.\r\nIf not specified, all items are returned.",
            "format": "int32",
            "in": "query",
            "name": "$top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Whether to include a count of the matching resources along with the resources returned in the response.",
            "in": "query",
            "name": "$count",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The details of the child Runs are returned successfully.",
            "schema": {
              "$ref": "#/definitions/PaginatedRunDtoList"
            }
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get details of all child runs.",
        "tags": [
          "Run"
        ],
        "x-ms-pageable": {
          "nextLinkName": "continuationToken"
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/details": {
      "get": {
        "consumes": [],
        "description": "Get Run Details for a specific Run Id.",
        "operationId": "Run_GetDetails",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the Run.",
            "in": "path",
            "name": "runId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The details of the Run are returned successfully.",
            "schema": {
              "$ref": "#/definitions/RunDetailsDto"
            }
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get Run Details.",
        "tags": [
          "Run"
        ]
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/events": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Post event data to a specific Run Id.",
        "operationId": "Events_Post",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the Run.",
            "in": "path",
            "name": "runId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Event details.",
            "in": "body",
            "name": "eventMessage",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BaseEventDto"
            }
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Event is posted successfully."
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Post event data.",
        "tags": [
          "Events"
        ]
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/metrics": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Post a Metric to a specific Run Id.",
        "operationId": "RunMetric_Post",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier for a run.",
            "in": "path",
            "name": "runId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Details of the metric which will be added to the Run Id.",
            "in": "body",
            "name": "metricDto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MetricDto"
            }
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Run Metric is posted successfully."
          },
          "400": {
            "description": "The request had missing or invalid values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "The requested resource could not be found."
          },
          "409": {
            "description": "The request could not be completed due to a conflict with the current state of the target resource."
          },
          "500": {
            "description": "An internal error has occurred and the request cannot be completed."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Post Metric to a Run.",
        "tags": [
          "RunMetrics"
        ]
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/tags": {
      "delete": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Delete list of Tags from a specific Run Id.",
        "operationId": "Run_DeleteTags",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The identifier of the Run.",
            "in": "path",
            "name": "runId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The requested tags list to be deleted.",
            "in": "body",
            "name": "tags",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "uniqueItems": false
            }
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RunDto"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Delete list of Tags in a Run.",
        "tags": [
          "Run"
        ]
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs:query": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Get all Runs for a specific Experiment with the specified query filters.",
        "operationId": "Run_GetByQuery",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The experiment name.",
            "in": "path",
            "name": "experimentName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Query parameters for data sorting and filtering.",
            "in": "body",
            "name": "queryParams",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryParamsDto"
            }
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PaginatedRunDtoList"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get all Runs for a specific Experiment.",
        "tags": [
          "Run"
        ],
        "x-ms-pageable": {
          "nextLinkName": "continuationToken"
        }
      }
    },
    "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments:query": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Get all experiments in a specific workspace with the specified query filters.",
        "operationId": "Experiment_GetByQuery",
        "parameters": [
          {
            "description": "The Azure subscription Id.",
            "format": "uuid",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspaceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Query parameters for data sorting and filtering.",
            "in": "body",
            "name": "queryParams",
            "required": false,
            "schema": {
              "$ref": "#/definitions/QueryParamsDto"
            }
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PaginatedExperimentDtoList"
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "504": {
            "description": "Gateway Timeout."
          }
        },
        "summary": "Get all Experiments in a specific workspace.",
        "tags": [
          "Experiments"
        ],
        "x-ms-pageable": {
          "nextLinkName": "continuationToken"
        }
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/images": {
      "get": {
        "consumes": [],
        "description": "If no filter is passed, the query lists all the Images in the given workspace. The returned list is paginated and the count of items in each page is an optional parameter.",
        "operationId": "Images_ListQuery",
        "parameters": [
          {
            "description": "The object name.",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "The object tag.",
            "in": "query",
            "name": "tag",
            "required": false,
            "type": "string"
          },
          {
            "description": "The object version.",
            "in": "query",
            "name": "version",
            "required": false,
            "type": "string"
          },
          {
            "description": "The description of the object.",
            "in": "query",
            "name": "description",
            "required": false,
            "type": "string"
          },
          {
            "description": "The Model Id.",
            "in": "query",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The Model name.",
            "in": "query",
            "name": "modelName",
            "required": false,
            "type": "string"
          },
          {
            "description": "The number of items to retrieve in a page.",
            "in": "query",
            "name": "count",
            "required": false,
            "type": "string"
          },
          {
            "description": "The continuation token to retrieve the next page.",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "query",
            "name": "api-version",
            "required": false,
            "type": "string"
          },
          {
            "description": "A list of Image tags.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "string"
          },
          {
            "description": "A list of Image properties.",
            "in": "query",
            "name": "properties",
            "required": false,
            "type": "string"
          },
          {
            "default": "CreatedAtDesc",
            "description": "An option for specifying how to order the list.",
            "enum": [
              "CreatedAtDesc",
              "CreatedAtAsc",
              "UpdatedAtDesc",
              "UpdatedAtAsc"
            ],
            "in": "query",
            "name": "orderBy",
            "required": false,
            "type": "string"
          },
          {
            "default": false,
            "description": "When set to True, additional model details are returned.",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The object version.",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspace",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PaginatedImageList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "summary": "Query the list of Images in a workspace.",
        "tags": [
          "Image"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      },
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Create an Image from the provided payload.",
        "operationId": "Images_Create",
        "parameters": [
          {
            "description": "The payload containing image request details.",
            "in": "body",
            "name": "imageRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImageRequestBase"
            }
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspace",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "202": {
            "description": "The request was accepted.  The header 'Operation-Location' contains the async operation location URL.  Accessing this URL with a GET call will return the status of the background task."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "summary": "Create an Image.",
        "tags": [
          "Image"
        ]
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/images/generateDockerBuildContext": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "The Docker file and build context allows for locally debugging the Docker file.",
        "operationId": "Images_GenerateDockerBuildContext",
        "parameters": [
          {
            "description": "The Image request.",
            "in": "body",
            "name": "imageRequest",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ImageRequestBase"
            }
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspace",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DockerBuildContextResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "Retreive a Docker file and build context.",
        "tags": [
          "Image"
        ]
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/images/{id}": {
      "delete": {
        "consumes": [],
        "description": "Delete the image specified.",
        "operationId": "Images_Delete",
        "parameters": [
          {
            "description": "The Image Id.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspace",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The resource exists and was deleted successfully."
          },
          "204": {
            "description": "The resource does not exist and the request was well formed."
          },
          "400": {
            "description": "The request was not well formed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "412": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        },
        "summary": "Delete an Image.",
        "tags": [
          "Image"
        ]
      },
      "get": {
        "consumes": [],
        "description": "Get an Image by Id.",
        "operationId": "Images_QueryById",
        "parameters": [
          {
            "description": "The Image Id.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "description": "When set to True, additional model details are returned.",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspace",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ImageResponseBase"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "summary": "Get an Image.",
        "tags": [
          "Image"
        ]
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Patch a specific Image.",
        "operationId": "Images_Patch",
        "parameters": [
          {
            "description": "The Image Id.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The payload that is used to patch an Image.",
            "in": "body",
            "name": "patch",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/JsonPatchOperation"
              },
              "type": "array",
              "uniqueItems": false
            }
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspace",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The Image patch was successful.",
            "schema": {
              "$ref": "#/definitions/ImageResponseBase"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "Patch an Image.",
        "tags": [
          "Image"
        ]
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/images/{imageId}/profiles": {
      "get": {
        "consumes": [],
        "description": "If no filter is passed, the query lists all Profiles for the Image. The returned list is paginated and the count of items in each page is an optional parameter.",
        "operationId": "Profiles_ListQuery",
        "parameters": [
          {
            "description": "The Image Id.",
            "in": "path",
            "name": "imageId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Profile name.",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "The Profile description.",
            "in": "query",
            "name": "description",
            "required": false,
            "type": "string"
          },
          {
            "description": "A list of tags for the Profile.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "string"
          },
          {
            "description": "A list of properties for the Profile.",
            "in": "query",
            "name": "properties",
            "required": false,
            "type": "string"
          },
          {
            "description": "The number of items to retrieve in a page.",
            "in": "query",
            "name": "count",
            "required": false,
            "type": "string"
          },
          {
            "description": "The continuation token to retrieve the next page.",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "query",
            "name": "api-version",
            "required": false,
            "type": "string"
          },
          {
            "default": "CreatedAtDesc",
            "description": "The option to order the response.",
            "enum": [
              "CreatedAtDesc",
              "CreatedAtAsc",
              "UpdatedAtDesc",
              "UpdatedAtAsc"
            ],
            "in": "query",
            "name": "orderBy",
            "required": false,
            "type": "string"
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspace",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PaginatedProfileList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "Get a list of Image Profiles.",
        "tags": [
          "Profile"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      },
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Create a Profile for an Image.",
        "operationId": "Profiles_Create",
        "parameters": [
          {
            "description": "The Image Id.",
            "in": "path",
            "name": "imageId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The payload that is used to create the Profile.",
            "in": "body",
            "name": "inputRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProfileRequestBase"
            }
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspace",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "202": {
            "description": "The request was accepted. The header 'Operation-Location' contains the async operation location URL. Accessing this URL with a GET call will return the status of the background task."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "Create a Profile.",
        "tags": [
          "Profile"
        ]
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/images/{imageId}/profiles/{id}": {
      "get": {
        "consumes": [],
        "description": "Get the Profile for an Image.",
        "operationId": "Profiles_QueryById",
        "parameters": [
          {
            "description": "The Image Id.",
            "in": "path",
            "name": "imageId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Profile Id.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspace",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProfileResponseBase"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "Get a Profile.",
        "tags": [
          "Profile"
        ]
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/models": {
      "get": {
        "consumes": [],
        "description": "The result list can be filtered using tag and name. If no filter is passed, the query lists all the Models in the given workspace. The returned list is paginated and the count of items in each page is an optional parameter.",
        "operationId": "Models_ListQuery",
        "parameters": [
          {
            "description": "The object name.",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "The object tag.",
            "in": "query",
            "name": "tag",
            "required": false,
            "type": "string"
          },
          {
            "description": "The object version.",
            "in": "query",
            "name": "version",
            "required": false,
            "type": "string"
          },
          {
            "description": "The framework.",
            "in": "query",
            "name": "framework",
            "required": false,
            "type": "string"
          },
          {
            "description": "The object description.",
            "in": "query",
            "name": "description",
            "required": false,
            "type": "string"
          },
          {
            "description": "The number of items to retrieve in a page.",
            "in": "query",
            "name": "count",
            "required": false,
            "type": "string"
          },
          {
            "description": "The continuation token to retrieve the next page.",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "query",
            "name": "api-version",
            "required": false,
            "type": "string"
          },
          {
            "description": "A set of tags with which to filter the returned models.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "string"
          },
          {
            "description": "A set of properties with which to filter the returned models.",
            "in": "query",
            "name": "properties",
            "required": false,
            "type": "string"
          },
          {
            "description": "The runId which created the model.",
            "in": "query",
            "name": "runId",
            "required": false,
            "type": "string"
          },
          {
            "default": "CreatedAtDesc",
            "description": "An option to specify how the models are ordered in the response.",
            "enum": [
              "CreatedAtDesc",
              "CreatedAtAsc",
              "UpdatedAtDesc",
              "UpdatedAtAsc"
            ],
            "in": "query",
            "name": "orderBy",
            "required": false,
            "type": "string"
          },
          {
            "description": "The object version.",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspace",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PaginatedModelList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "summary": "Query the list of Models in a workspace.",
        "tags": [
          "Model"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      },
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Register the model provided.",
        "operationId": "Models_Register",
        "parameters": [
          {
            "description": "The payload that is used to register the model.",
            "in": "body",
            "name": "model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Model"
            }
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspace",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The model registration was successful.",
            "schema": {
              "$ref": "#/definitions/Model"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "Register a model.",
        "tags": [
          "Model"
        ]
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/models/{id}": {
      "delete": {
        "consumes": [],
        "description": "Deletes a model if it exists.",
        "operationId": "Models_Delete",
        "parameters": [
          {
            "description": "The model id.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspace",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The resource exists and was deleted successfully."
          },
          "204": {
            "description": "The resource does not exist and the request was well formed."
          },
          "400": {
            "description": "The request was not well formed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        },
        "summary": "Delete the specified Model.",
        "tags": [
          "Model"
        ]
      },
      "get": {
        "consumes": [],
        "description": "Gets a model by model id.",
        "operationId": "Models_QueryById",
        "parameters": [
          {
            "description": "The model id.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspace",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Model"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          }
        },
        "summary": "Gets a model.",
        "tags": [
          "Model"
        ]
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Updates an existing model with the specified patch.",
        "operationId": "Models_Patch",
        "parameters": [
          {
            "description": "The model id.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The payload that is used to patch the model.",
            "in": "body",
            "name": "patch",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/JsonPatchOperation"
              },
              "type": "array",
              "uniqueItems": false
            }
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspace",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Model"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "Patch a specific model.",
        "tags": [
          "Model"
        ]
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/models/{id}/metrics": {
      "get": {
        "consumes": [],
        "description": "The operational events collected for the Model are returned.",
        "operationId": "Models_GetMetrics",
        "parameters": [
          {
            "description": "The Model Id.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The start date from which to retrieve metrics.",
            "in": "query",
            "name": "startDate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The end date from which to retrieve metrics.",
            "in": "query",
            "name": "endDate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspace",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelOperationalState"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "Retrieve the metrics for a Model.",
        "tags": [
          "Model"
        ]
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/operations/{id}": {
      "get": {
        "consumes": [],
        "description": "Get the status of an async operation by operation id.",
        "operationId": "Operations_Get",
        "parameters": [
          {
            "description": "The operation id.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspace",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AsyncOperationStatus"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "summary": "Get the status of an async operation.",
        "tags": [
          "Operations"
        ]
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/services": {
      "get": {
        "consumes": [],
        "description": "If no filter is passed, the query lists all Services in the Workspace. The returned list is paginated and the count of item in each page is an optional parameter.",
        "operationId": "Services_ListQuery",
        "parameters": [
          {
            "description": "The Image Id.",
            "in": "query",
            "name": "imageId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The Image name.",
            "in": "query",
            "name": "imageName",
            "required": false,
            "type": "string"
          },
          {
            "description": "The Model Id.",
            "in": "query",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "description": "The Model name.",
            "in": "query",
            "name": "modelName",
            "required": false,
            "type": "string"
          },
          {
            "description": "The object name.",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "The object tag.",
            "in": "query",
            "name": "tag",
            "required": false,
            "type": "string"
          },
          {
            "description": "The number of items to retrieve in a page.",
            "in": "query",
            "name": "count",
            "required": false,
            "type": "string"
          },
          {
            "description": "The compute environment type.",
            "in": "query",
            "name": "computeType",
            "required": false,
            "type": "string"
          },
          {
            "description": "The continuation token to retrieve the next page.",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "type": "string"
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "query",
            "name": "api-version",
            "required": false,
            "type": "string"
          },
          {
            "description": "A list of tags.",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "string"
          },
          {
            "description": "A list of properties.",
            "in": "query",
            "name": "properties",
            "required": false,
            "type": "string"
          },
          {
            "default": false,
            "description": "Set to True to include Model details.",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "UpdatedAtDesc",
            "description": "The option to order the response.",
            "enum": [
              "CreatedAtDesc",
              "CreatedAtAsc",
              "UpdatedAtDesc",
              "UpdatedAtAsc"
            ],
            "in": "query",
            "name": "orderby",
            "required": false,
            "type": "string"
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspace",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PaginatedServiceList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "summary": "Query the list of Services in a Workspace.",
        "tags": [
          "Service"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      },
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Create a Service with the specified payload.",
        "operationId": "Services_Create",
        "parameters": [
          {
            "description": "The payload that is used to create the Service.",
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceCreateRequest"
            }
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspace",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "202": {
            "description": "The request was accepted.  The header 'Operation-Location' contains the async operation location URL.  Accessing this URL with a GET call will return the status of the background task."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "summary": "Create a Service.",
        "tags": [
          "Service"
        ]
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/services/{id}": {
      "delete": {
        "consumes": [],
        "description": "Delete a specific Service.",
        "operationId": "Services_Delete",
        "parameters": [
          {
            "description": "The Service Id.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspace",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The resource exists and was deleted successfully."
          },
          "202": {
            "description": "Success"
          },
          "204": {
            "description": "The resource does not exist and the request was well formed."
          },
          "400": {
            "description": "The request was not well formed.",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "summary": "Delete a Service.",
        "tags": [
          "Service"
        ]
      },
      "get": {
        "consumes": [],
        "description": "Get a Service by Id.",
        "operationId": "Services_QueryById",
        "parameters": [
          {
            "description": "The Service Id.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": false,
            "description": "Set to True to include Model details.",
            "in": "query",
            "name": "expand",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspace",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ServiceResponseBase"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "summary": "Get a Service.",
        "tags": [
          "Service"
        ]
      },
      "patch": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Patch a specific Service.",
        "operationId": "Services_Patch",
        "parameters": [
          {
            "description": "The Service Id.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The payload that is used to patch the Service.",
            "in": "body",
            "name": "patch",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/JsonPatchOperation"
              },
              "type": "array",
              "uniqueItems": false
            }
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspace",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "The request was accepted.  The header 'Operation-Location' contains the async operation location URL.  Accessing this URL with a GET call will return the status of the background task."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "summary": "Patch a Service.",
        "tags": [
          "Service"
        ]
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/services/{id}/listkeys": {
      "post": {
        "consumes": [],
        "description": "Gets a list of Service keys.",
        "operationId": "Services_ListServiceKeys",
        "parameters": [
          {
            "description": "The Service Id.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspace",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AuthKeys"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Client Error"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "summary": "Lists Service keys.",
        "tags": [
          "Service",
          "Keys"
        ]
      }
    },
    "/modelmanagement/v{version}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.MachineLearningServices/workspaces/{workspace}/services/{id}/regenerateKeys": {
      "post": {
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "description": "Regenerate and return the Service keys.",
        "operationId": "Services_RegenerateServiceKeys",
        "parameters": [
          {
            "description": "The Service Id.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The payload that is used to regenerate keys.",
            "in": "body",
            "name": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateKeyRequest"
            }
          },
          {
            "description": "The version of the Microsoft.MachineLearning resource provider API to use.",
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure subscription Id.",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of resource group in which the workspace is located.",
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the workspace.",
            "in": "path",
            "name": "workspace",
            "required": true,
            "type": "string"
          },
          {
            "description": "The authorization bearer token. The value should follow the pattern: 'Bearer XXXXXXX'.",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AuthKeys"
            }
          },
          "202": {
            "description": "The request was accepted. The header 'Operation-Location' contains the async operation location URL.  Accessing this URL with a GET call will return the status of the background task."
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ModelErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "Regenerate Service Keys.",
        "tags": [
          "Service",
          "Keys"
        ]
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "type": "oauth2"
    }
  },
}