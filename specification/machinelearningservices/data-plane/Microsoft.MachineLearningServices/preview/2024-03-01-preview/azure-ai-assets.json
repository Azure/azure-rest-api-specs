{
  "swagger": "2.0",
  "info": {
    "title": "Azure Machine Learning Services",
    "version": "2024-03-01-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "description": "Supported Azure-AI asset endpoints.",
        "required": true,
        "type": "string"
      },
      {
        "name": "subscriptionId",
        "in": "path",
        "description": "The ID of the target subscription.",
        "required": true,
        "type": "string"
      },
      {
        "name": "resourceGroupName",
        "in": "path",
        "description": "The name of the Resource Group.",
        "required": true,
        "type": "string"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "ApiKeyAuth": []
    },
    {
      "OAuth2Auth": [
        "https://ml.azure.com/"
      ]
    }
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "api-key",
      "in": "header"
    },
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
      "scopes": {
        "https://ml.azure.com/": ""
      }
    }
  },
  "tags": [],
  "paths": {
    "/workspaces/{workspaceName}/indexes": {
      "get": {
        "operationId": "IndexesLatest_ListLatest",
        "description": "List the latest version of each index.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "Name of the workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedIndex"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "IndexesLatest_ListLatest": {
            "$ref": "./examples/IndexesLatest_ListLatest_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/workspaces/{workspaceName}/indexes/{indexName}": {
      "get": {
        "operationId": "IndexesLatest_GetLatest",
        "description": "Get latest Index.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "Name of the workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "indexName",
            "in": "path",
            "description": "Name of the index.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Index"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "IndexesLatest_GetLatest": {
            "$ref": "./examples/IndexesLatest_GetLatest_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/workspaces/{workspaceName}/indexes/{indexName}/versions": {
      "get": {
        "operationId": "IndexVersions_List",
        "description": "The most basic operation.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "Name of the workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "indexName",
            "in": "path",
            "description": "Name of the index.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "listViewType",
            "in": "query",
            "description": "View type for including/excluding (for example) archived entities.",
            "required": true,
            "type": "string",
            "default": "ActiveOnly"
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Ordering of list.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedIndex"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "IndexVersions_List": {
            "$ref": "./examples/IndexVersions_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/workspaces/{workspaceName}/indexes/{indexName}/versions/{indexVersion}": {
      "get": {
        "operationId": "IndexVersions_Get",
        "description": "Fetch a IndexVersion by name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "Name of the workspace",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "indexName",
            "in": "path",
            "description": "Name of the index.",
            "required": true,
            "type": "string"
          },
          {
            "name": "indexVersion",
            "in": "path",
            "description": "Version of the index.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Index"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "IndexVersions_Get": {
            "$ref": "./examples/IndexVersions_Get_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "operationId": "IndexVersions_CreateOrUpdate",
        "description": "Creates or updates a IndexVersion.",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "Name of the workspace",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "indexName",
            "in": "path",
            "description": "Name of the index.",
            "required": true,
            "type": "string"
          },
          {
            "name": "indexVersion",
            "in": "path",
            "description": "Version of the index.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The resource instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndexCreateOrUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Index"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Index"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "IndexVersions_CreateOrUpdate": {
            "$ref": "./examples/IndexVersions_CreateOrUpdate_MaximumSet_Gen.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AssetVersion": {
      "type": "object",
      "description": "AssetVersion Definition",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the index.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Version of the index.",
          "readOnly": true
        },
        "isArchived": {
          "type": "boolean",
          "description": "Update stage to 'Archived' for soft delete.",
          "default": false
        },
        "description": {
          "type": "string",
          "description": "Description information of the asset."
        },
        "systemData": {
          "$ref": "#/definitions/SystemData",
          "description": "Metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Asset's tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "description": "Asset's properties.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "version",
        "isArchived"
      ]
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Index": {
      "type": "object",
      "description": "Index resource Definition",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the index.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Version of the index.",
          "readOnly": true
        },
        "isArchived": {
          "type": "boolean",
          "description": "Update stage to 'Archived' for soft delete.",
          "default": false
        },
        "description": {
          "type": "string",
          "description": "Description information of the asset."
        },
        "systemData": {
          "$ref": "#/definitions/SystemData",
          "description": "Metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Asset's tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "description": "Asset's properties.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "storageUri": {
          "type": "string",
          "description": "Default workspace blob storage Uri. Should work across storage types and auth scenarios."
        }
      },
      "required": [
        "name",
        "version",
        "isArchived",
        "storageUri"
      ]
    },
    "IndexCreateOrUpdate": {
      "type": "object",
      "description": "Index resource Definition",
      "properties": {
        "isArchived": {
          "type": "boolean",
          "description": "Update stage to 'Archived' for soft delete.",
          "default": false
        },
        "description": {
          "type": "string",
          "description": "Description information of the asset."
        },
        "tags": {
          "type": "object",
          "description": "Asset's tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "description": "Asset's properties.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "storageUri": {
          "type": "string",
          "description": "Default workspace blob storage Uri. Should work across storage types and auth scenarios."
        }
      }
    },
    "IndexResource": {
      "type": "object",
      "description": "Index asset resource definition."
    },
    "PagedIndex": {
      "type": "object",
      "description": "Paged collection of IndexVersion items.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Index items on this page",
          "items": {
            "$ref": "#/definitions/Index"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SystemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp the resource was created at.",
          "readOnly": true
        },
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource.",
          "readOnly": true
        },
        "createdByType": {
          "type": "string",
          "description": "The identity type that created the resource.",
          "readOnly": true
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)",
          "readOnly": true
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "Azure Machine Learning Services api versions.",
      "enum": [
        "2024-03-01-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "2024-03-01-preview",
            "value": "2024-03-01-preview",
            "description": "Azure Machine Learning Services api version 2024-03-01-preview."
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    },
    "Azure.Core.MaxPageSizeQueryParameter": {
      "name": "maxpagesize",
      "in": "query",
      "description": "The maximum number of result items per page.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.SkipQueryParameter": {
      "name": "skip",
      "in": "query",
      "description": "The number of result items to skip.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "default": 0,
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.TopQueryParameter": {
      "name": "top",
      "in": "query",
      "description": "The number of result items to return.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    }
  }
}
