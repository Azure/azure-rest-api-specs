{
  "swagger": "2.0",
  "info": {
    "title": "Azure Machine Learning Services",
    "version": "2024-03-01-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}/assets",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "description": "Supported Azure-AI asset endpoints.",
        "required": true,
        "type": "string"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "ApiKeyAuth": []
    },
    {
      "OAuth2Auth": [
        "https://ml.azure.com/"
      ]
    }
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "api-key",
      "in": "header"
    },
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
      "scopes": {
        "https://ml.azure.com/": ""
      }
    }
  },
  "tags": [],
  "paths": {
    "/workspaces/{workspaceName}/indexes": {
      "get": {
        "operationId": "Indexes_List",
        "description": "List the latest version of each index.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedIndex"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/workspaces/{workspaceName}/indexes/{name}/versions": {
      "get": {
        "operationId": "IndexVersions_ListIndexVersions",
        "description": "List IndexVersion resources.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the index.",
            "required": true,
            "type": "string"
          },
          {
            "name": "listViewType",
            "in": "query",
            "description": "View type for including/excluding (for example) archived entities.",
            "required": true,
            "type": "string",
            "default": "ActiveOnly"
          },
          {
            "name": "label",
            "in": "query",
            "description": "Label query parameter, for example, latest.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedIndexVersion"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/workspaces/{workspaceName}/indexes/{name}/versions/{version}": {
      "get": {
        "operationId": "IndexVersions_GetIndexVersion",
        "description": "Fetch a IndexVersion by name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the index.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "Version of the index.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifMatch"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifNoneMatch"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifUnmodifiedSince"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifModifiedSince"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/IndexVersion"
            },
            "headers": {
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              },
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "IndexVersions_CreateIndexVersion",
        "description": "Creates or updates a IndexVersion.",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the index.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "Version of the index.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.RepeatabilityRequestHeaders.repeatabilityRequestId"
          },
          {
            "$ref": "#/parameters/Azure.Core.RepeatabilityRequestHeaders.repeatabilityFirstSent"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifMatch"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifNoneMatch"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifUnmodifiedSince"
          },
          {
            "$ref": "#/parameters/Azure.Core.ConditionalRequestHeaders.ifModifiedSince"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The resource instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndexVersionCreateOrUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/IndexVersion"
            },
            "headers": {
              "Repeatability-Result": {
                "type": "string",
                "description": "Indicates whether the repeatable request was accepted or rejected.",
                "enum": [
                  "accepted",
                  "rejected"
                ],
                "x-ms-enum": {
                  "name": "RepeatabilityResult",
                  "modelAsString": false,
                  "values": [
                    {
                      "name": "accepted",
                      "value": "accepted",
                      "description": "If the request was accepted and the server guarantees that the server state reflects a single execution of the operation."
                    },
                    {
                      "name": "rejected",
                      "value": "rejected",
                      "description": "If the request was rejected because the combination of Repeatability-First-Sent and Repeatability-Request-ID were invalid\nor because the Repeatability-First-Sent value was outside the range of values held by the server."
                    }
                  ]
                }
              },
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              },
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/IndexVersion"
            },
            "headers": {
              "Repeatability-Result": {
                "type": "string",
                "description": "Indicates whether the repeatable request was accepted or rejected.",
                "enum": [
                  "accepted",
                  "rejected"
                ],
                "x-ms-enum": {
                  "name": "RepeatabilityResult",
                  "modelAsString": false,
                  "values": [
                    {
                      "name": "accepted",
                      "value": "accepted",
                      "description": "If the request was accepted and the server guarantees that the server state reflects a single execution of the operation."
                    },
                    {
                      "name": "rejected",
                      "value": "rejected",
                      "description": "If the request was rejected because the combination of Repeatability-First-Sent and Repeatability-Request-ID were invalid\nor because the Repeatability-First-Sent value was outside the range of values held by the server."
                    }
                  ]
                }
              },
              "ETag": {
                "type": "string",
                "description": "The entity tag for the response."
              },
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AssetCapabilityType": {
      "type": "string",
      "description": "Asset capability type definition.",
      "enum": [
        "UriFolder",
        "UriFile"
      ],
      "x-ms-enum": {
        "name": "AssetCapabilityType",
        "modelAsString": true,
        "values": [
          {
            "name": "UriFolder",
            "value": "UriFolder",
            "description": "Uri denotes a folder."
          },
          {
            "name": "UriFile",
            "value": "UriFile",
            "description": "Uri denotes a file."
          }
        ]
      }
    },
    "AssetType": {
      "type": "string",
      "description": "Asset type definition.",
      "enum": [
        "Index"
      ],
      "x-ms-enum": {
        "name": "AssetType",
        "modelAsString": true,
        "values": [
          {
            "name": "Index",
            "value": "Index",
            "description": "AssetVersion Definition"
          }
        ]
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Index": {
      "type": "object",
      "description": "Index asset definition.",
      "properties": {
        "indexVersion": {
          "type": "string",
          "description": "Default workspace blob storage Uri. Should work across storage types and auth scenarios."
        },
        "indexVersionDefinition": {
          "$ref": "#/definitions/IndexVersion",
          "description": "Index version definition."
        }
      },
      "required": [
        "indexVersion",
        "indexVersionDefinition"
      ]
    },
    "IndexSpec": {
      "type": "object",
      "description": "IndexSpec Definition",
      "properties": {
        "storageUri": {
          "type": "string",
          "description": "Default workspace blob storage Uri. Should work across storage types and auth scenarios."
        },
        "indexConfigurations": {
          "type": "object",
          "description": "Placeholder for extras.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "storageUri"
      ]
    },
    "IndexSpecCreateOrUpdate": {
      "type": "object",
      "description": "IndexSpec Definition",
      "properties": {
        "storageUri": {
          "type": "string",
          "description": "Default workspace blob storage Uri. Should work across storage types and auth scenarios."
        },
        "indexConfigurations": {
          "type": "object",
          "description": "Placeholder for extras.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "IndexVersion": {
      "type": "object",
      "description": "Index resource Definition",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name."
        },
        "stage": {
          "type": "string",
          "description": "Lifecycle stage of the asset. Stage populates IsArchived."
        },
        "description": {
          "type": "string",
          "description": "Description information of the asset."
        },
        "capabilities": {
          "type": "object",
          "description": "Capability type of the asset.",
          "additionalProperties": {
            "$ref": "#/definitions/AssetCapabilityType"
          },
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/SystemData",
          "description": "Metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Asset's tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "description": "Asset's properties.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "relationships": {
          "type": "object",
          "description": "Asset's relationship.",
          "additionalProperties": {
            "$ref": "#/definitions/Relationship"
          }
        },
        "assetSpec": {
          "$ref": "#/definitions/IndexSpec",
          "description": "AssetSpec definition."
        },
        "type": {
          "$ref": "#/definitions/AssetType",
          "description": "Index asset type.",
          "default": "Index"
        }
      },
      "required": [
        "assetSpec",
        "type"
      ]
    },
    "IndexVersionCreateOrUpdate": {
      "type": "object",
      "description": "Index resource Definition",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name."
        },
        "stage": {
          "type": "string",
          "description": "Lifecycle stage of the asset. Stage populates IsArchived."
        },
        "description": {
          "type": "string",
          "description": "Description information of the asset."
        },
        "tags": {
          "type": "object",
          "description": "Asset's tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "description": "Asset's properties.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "relationships": {
          "type": "object",
          "description": "Asset's relationship.",
          "additionalProperties": {
            "$ref": "#/definitions/RelationshipCreateOrUpdate"
          }
        },
        "assetSpec": {
          "$ref": "#/definitions/IndexSpecCreateOrUpdate",
          "description": "AssetSpec definition."
        },
        "type": {
          "$ref": "#/definitions/AssetType",
          "description": "Index asset type.",
          "default": "Index"
        }
      }
    },
    "PagedIndex": {
      "type": "object",
      "description": "Paged collection of Index items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Index items on this page",
          "items": {
            "$ref": "#/definitions/Index"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedIndexVersion": {
      "type": "object",
      "description": "Paged collection of IndexVersion items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IndexVersion items on this page",
          "items": {
            "$ref": "#/definitions/IndexVersion"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "Relationship": {
      "type": "object",
      "description": "Lineage with other assets.",
      "properties": {
        "assetId": {
          "type": "string",
          "description": "AssetId of the other asset."
        },
        "assetType": {
          "type": "string",
          "description": "AssetType of the other asset."
        },
        "state": {
          "type": "string",
          "description": "State of relationship."
        },
        "type": {
          "type": "string",
          "description": "Type of relationship."
        }
      },
      "required": [
        "assetId",
        "assetType",
        "state",
        "type"
      ]
    },
    "RelationshipCreateOrUpdate": {
      "type": "object",
      "description": "Lineage with other assets.",
      "properties": {
        "assetId": {
          "type": "string",
          "description": "AssetId of the other asset."
        },
        "assetType": {
          "type": "string",
          "description": "AssetType of the other asset."
        },
        "state": {
          "type": "string",
          "description": "State of relationship."
        },
        "type": {
          "type": "string",
          "description": "Type of relationship."
        }
      }
    },
    "SystemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource.",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "date",
          "description": "The type of identity that created the resource.",
          "readOnly": true
        },
        "modifiedTime": {
          "type": "string",
          "format": "date",
          "description": "The timestamp of resource last modification (UTC)",
          "readOnly": true
        }
      },
      "required": [
        "createdBy"
      ]
    },
    "Versions": {
      "type": "string",
      "description": "Azure Machine Learning Services api versions.",
      "enum": [
        "2024-03-01-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "2024-03-01-preview",
            "value": "2024-03-01-preview",
            "description": "Azure Machine Learning Services api version 2024-03-01-preview."
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.ClientRequestIdHeader": {
      "name": "x-ms-client-request-id",
      "in": "header",
      "description": "An opaque, globally-unique, client-generated string identifier for the request.",
      "required": false,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "clientRequestId"
    },
    "Azure.Core.ConditionalRequestHeaders.ifMatch": {
      "name": "If-Match",
      "in": "header",
      "description": "The request should only proceed if an entity matches this string.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "ifMatch"
    },
    "Azure.Core.ConditionalRequestHeaders.ifModifiedSince": {
      "name": "If-Modified-Since",
      "in": "header",
      "description": "The request should only proceed if the entity was modified after this time.",
      "required": false,
      "type": "string",
      "format": "date-time",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "ifModifiedSince"
    },
    "Azure.Core.ConditionalRequestHeaders.ifNoneMatch": {
      "name": "If-None-Match",
      "in": "header",
      "description": "The request should only proceed if no entity matches this string.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "ifNoneMatch"
    },
    "Azure.Core.ConditionalRequestHeaders.ifUnmodifiedSince": {
      "name": "If-Unmodified-Since",
      "in": "header",
      "description": "The request should only proceed if the entity was not modified after this time.",
      "required": false,
      "type": "string",
      "format": "date-time",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "ifUnmodifiedSince"
    },
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    },
    "Azure.Core.MaxPageSizeQueryParameter": {
      "name": "maxpagesize",
      "in": "query",
      "description": "The maximum number of result items per page.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.RepeatabilityRequestHeaders.repeatabilityFirstSent": {
      "name": "Repeatability-First-Sent",
      "in": "header",
      "description": "Specifies the date and time at which the request was first created.",
      "required": false,
      "type": "string",
      "format": "date-time",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "repeatabilityFirstSent"
    },
    "Azure.Core.RepeatabilityRequestHeaders.repeatabilityRequestId": {
      "name": "Repeatability-Request-ID",
      "in": "header",
      "description": "An opaque, globally-unique, client-generated string identifier for the request.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "repeatabilityRequestId"
    },
    "Azure.Core.SkipQueryParameter": {
      "name": "skip",
      "in": "query",
      "description": "The number of result items to skip.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "default": 0,
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.TopQueryParameter": {
      "name": "top",
      "in": "query",
      "description": "The number of result items to return.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    }
  }
}
