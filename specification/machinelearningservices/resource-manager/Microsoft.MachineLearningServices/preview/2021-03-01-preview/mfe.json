{
  "swagger": "2.0",
  "info": {
    "title": "Azure Machine Learning Workspaces",
    "version": "2021-03-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/deployments/{deploymentName}": {
      "put": {
        "tags": [
          "BatchDeployment"
        ],
        "summary": "Creates/updates a batch inference deployment.",
        "operationId": "BatchDeployments_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "The identifier for the Batch inference deployment.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Batch inference deployment definition object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Batch Deployment.": {
            "$ref": "./examples/BatchDeployment/createOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "BatchDeployment"
        ],
        "summary": "Update a batch inference deployment.",
        "operationId": "BatchDeployments_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "The identifier for the Batch inference deployment.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Batch inference deployment definition object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialBatchDeploymentPartialTrackedResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "Update Batch Deployment.": {
            "$ref": "./examples/BatchDeployment/update.json"
          }
        }
      },
      "get": {
        "tags": [
          "BatchDeployment"
        ],
        "summary": "Gets a batch inference deployment by id.",
        "operationId": "BatchDeployments_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Endpoint name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "The identifier for the Batch deployments.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Batch Deployment.": {
            "$ref": "./examples/BatchDeployment/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "BatchDeployment"
        ],
        "summary": "Delete Batch Inference deployment.",
        "operationId": "BatchDeployments_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Endpoint name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference deployment identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Batch Deployment.": {
            "$ref": "./examples/BatchDeployment/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/deployments": {
      "get": {
        "tags": [
          "BatchDeployment"
        ],
        "summary": "Lists Batch inference deployments in the workspace.",
        "operationId": "BatchDeployments_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Endpoint name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Top of list.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Batch Deployment.": {
            "$ref": "./examples/BatchDeployment/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}": {
      "put": {
        "tags": [
          "BatchEndpoint"
        ],
        "summary": "Creates a batch inference endpoint.",
        "operationId": "BatchEndpoints_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Name for the Batch inference endpoint.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Batch inference endpoint definition object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Batch Endpoint.": {
            "$ref": "./examples/BatchEndpoint/createOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "BatchEndpoint"
        ],
        "summary": "Update a batch inference endpoint.",
        "operationId": "BatchEndpoints_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Name for the Batch inference endpoint.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Mutable batch inference endpoint definition object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialBatchEndpointPartialTrackedResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "Update Batch Endpoint.": {
            "$ref": "./examples/BatchEndpoint/update.json"
          }
        }
      },
      "get": {
        "tags": [
          "BatchEndpoint"
        ],
        "summary": "Gets a batch inference endpoint by name.",
        "operationId": "BatchEndpoints_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Name for the Batch Endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Batch Endpoint.": {
            "$ref": "./examples/BatchEndpoint/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "BatchEndpoint"
        ],
        "summary": "Delete Batch Inference Endpoint.",
        "operationId": "BatchEndpoints_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Batch Endpoint.": {
            "$ref": "./examples/BatchEndpoint/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints": {
      "get": {
        "tags": [
          "BatchEndpoint"
        ],
        "summary": "Lists Batch inference endpoint in the workspace.",
        "operationId": "BatchEndpoints_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Number of endpoints to be retrieved in a page of results.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Batch Endpoint.": {
            "$ref": "./examples/BatchEndpoint/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/listkeys": {
      "post": {
        "tags": [
          "BatchEndpoint"
        ],
        "summary": "Lists batch Inference Endpoint keys.",
        "operationId": "BatchEndpoints_ListKeys",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EndpointAuthKeys"
            }
          }
        },
        "x-ms-examples": {
          "ListKeys Batch Endpoint.": {
            "$ref": "./examples/BatchEndpoint/listKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}": {
      "put": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "CodeContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Code Container.": {
            "$ref": "./examples/CodeContainer/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "Get container.",
        "operationId": "CodeContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Code Container.": {
            "$ref": "./examples/CodeContainer/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "Delete container.",
        "operationId": "CodeContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Code Container.": {
            "$ref": "./examples/CodeContainer/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes": {
      "get": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "List containers.",
        "operationId": "CodeContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeContainerResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Code Container.": {
            "$ref": "./examples/CodeContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions/{version}": {
      "put": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Create or update version.",
        "operationId": "CodeVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Code Version.": {
            "$ref": "./examples/CodeVersion/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Get version.",
        "operationId": "CodeVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Code Version.": {
            "$ref": "./examples/CodeVersion/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Delete version.",
        "operationId": "CodeVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Code Version.": {
            "$ref": "./examples/CodeVersion/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions": {
      "get": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "List versions.",
        "operationId": "CodeVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeVersionResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Code Version.": {
            "$ref": "./examples/CodeVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}": {
      "put": {
        "tags": [
          "DataContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "DataContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Data Container.": {
            "$ref": "./examples/DataContainer/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "DataContainer"
        ],
        "summary": "Get container.",
        "operationId": "DataContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Data Container.": {
            "$ref": "./examples/DataContainer/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DataContainer"
        ],
        "summary": "Delete container.",
        "operationId": "DataContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Data Container.": {
            "$ref": "./examples/DataContainer/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data": {
      "get": {
        "tags": [
          "DataContainer"
        ],
        "summary": "List containers.",
        "operationId": "DataContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataContainerResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Data Container.": {
            "$ref": "./examples/DataContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores": {
      "get": {
        "tags": [
          "Datastore"
        ],
        "summary": "List datastores.",
        "operationId": "Datastores_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Maximum number of results to return.",
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "in": "query",
            "name": "isDefault",
            "description": "Filter down to the workspace default datastore.",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "names",
            "description": "Names of datastores to return.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "searchText",
            "description": "Text to search for in the datastore names.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "Order by property (createdtime | modifiedtime | name).",
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderByAsc",
            "description": "Order by property in ascending order.",
            "type": "boolean",
            "default": false
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List datastores.": {
            "$ref": "./examples/Datastore/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}": {
      "delete": {
        "tags": [
          "Datastore"
        ],
        "summary": "Delete datastore.",
        "operationId": "Datastores_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete datastore.": {
            "$ref": "./examples/Datastore/delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "Datastore"
        ],
        "summary": "Get datastore.",
        "operationId": "Datastores_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResource"
            }
          }
        },
        "x-ms-examples": {
          "Get datastore.": {
            "$ref": "./examples/Datastore/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Datastore"
        ],
        "summary": "Create or update datastore.",
        "operationId": "Datastores_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "skipValidation",
            "description": "Flag to skip validation.",
            "type": "boolean",
            "default": false
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Datastore entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResource"
            }
          }
        },
        "x-ms-examples": {
          "Create or update datastore.": {
            "$ref": "./examples/Datastore/createOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}/listSecrets": {
      "post": {
        "tags": [
          "Datastore"
        ],
        "summary": "Get datastore secrets.",
        "operationId": "Datastores_ListSecrets",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastoreSecrets"
            }
          }
        },
        "x-ms-examples": {
          "Get datastore secrets.": {
            "$ref": "./examples/Datastore/listSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}/versions/{version}": {
      "put": {
        "tags": [
          "DataVersion"
        ],
        "summary": "Create or update version.",
        "operationId": "DataVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataVersionResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataVersionResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DataVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Data Version.": {
            "$ref": "./examples/DataVersion/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "DataVersion"
        ],
        "summary": "Get version.",
        "operationId": "DataVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Data Version.": {
            "$ref": "./examples/DataVersion/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DataVersion"
        ],
        "summary": "Delete version.",
        "operationId": "DataVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Data Version.": {
            "$ref": "./examples/DataVersion/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}/versions": {
      "get": {
        "tags": [
          "DataVersion"
        ],
        "summary": "List versions.",
        "operationId": "DataVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataVersionResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Data Version.": {
            "$ref": "./examples/DataVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}": {
      "put": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "EnvironmentContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Environment Container.": {
            "$ref": "./examples/EnvironmentContainer/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "Get container.",
        "operationId": "EnvironmentContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Environment Container.": {
            "$ref": "./examples/EnvironmentContainer/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "Delete container.",
        "operationId": "EnvironmentContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Environment Container.": {
            "$ref": "./examples/EnvironmentContainer/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments": {
      "get": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "List containers.",
        "operationId": "EnvironmentContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Environment Container.": {
            "$ref": "./examples/EnvironmentContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}/versions/{version}": {
      "put": {
        "tags": [
          "EnvironmentSpecification"
        ],
        "summary": "Creates or updates an EnvironmentSpecificationVersion.",
        "operationId": "EnvironmentSpecificationVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Name of EnvironmentSpecificationVersion.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version of EnvironmentSpecificationVersion.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Definition of EnvironmentSpecificationVersion.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentSpecificationVersionResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentSpecificationVersionResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/EnvironmentSpecificationVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Environment Specification Version.": {
            "$ref": "./examples/EnvironmentSpecificationVersion/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "EnvironmentSpecification"
        ],
        "summary": "Get version.",
        "operationId": "EnvironmentSpecificationVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentSpecificationVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Environment Specification Version.": {
            "$ref": "./examples/EnvironmentSpecificationVersion/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "EnvironmentSpecification"
        ],
        "summary": "Delete version.",
        "operationId": "EnvironmentSpecificationVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Environment Specification Version.": {
            "$ref": "./examples/EnvironmentSpecificationVersion/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}/versions": {
      "get": {
        "tags": [
          "EnvironmentSpecification"
        ],
        "summary": "List versions.",
        "operationId": "EnvironmentSpecificationVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentSpecificationVersionResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Environment Specification Version.": {
            "$ref": "./examples/EnvironmentSpecificationVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs/{id}": {
      "put": {
        "tags": [
          "Job"
        ],
        "summary": "Creates and executes a Job.",
        "operationId": "Jobs_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Job definition object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Command Job.": {
            "$ref": "./examples/CommandJob/createOrUpdate.json"
          },
          "CreateOrUpdate Sweep Job.": {
            "$ref": "./examples/SweepJob/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Gets a Job by name/id.",
        "operationId": "Jobs_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Command Job.": {
            "$ref": "./examples/CommandJob/get.json"
          },
          "Get Sweep Job.": {
            "$ref": "./examples/SweepJob/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Job"
        ],
        "summary": "Deletes a Job.",
        "operationId": "Jobs_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Command Job.": {
            "$ref": "./examples/CommandJob/delete.json"
          },
          "Delete Sweep Job.": {
            "$ref": "./examples/SweepJob/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Lists Jobs in the workspace.",
        "operationId": "Jobs_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "jobType",
            "description": "Type of job to be returned.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "tags",
            "description": "Tags for job to be returned.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "tag",
            "description": "Jobs returned will have this tag key.",
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JobBaseResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Command Job.": {
            "$ref": "./examples/CommandJob/list.json"
          },
          "List Sweep Job.": {
            "$ref": "./examples/SweepJob/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs/{id}/cancel": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Cancels a Job.",
        "operationId": "Jobs_Cancel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Cancel Command Job.": {
            "$ref": "./examples/CommandJob/cancel.json"
          },
          "Cancel Sweep Job.": {
            "$ref": "./examples/SweepJob/cancel.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}": {
      "put": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Creates or updates a labeling job.",
        "operationId": "LabelingJobs_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "LabelingJob definition object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelingJobResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/LabelingJobResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LabelingJobResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Labeling Job.": {
            "$ref": "./examples/LabelingJob/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Gets a labeling job by name/id.",
        "operationId": "LabelingJobs_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "includeJobInstructions",
            "description": "Boolean value to indicate whether to include JobInstructions in response.",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeLabelCategories",
            "description": "Boolean value to indicate Whether to include LabelCategories in response.",
            "type": "boolean"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LabelingJobResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Labeling Job.": {
            "$ref": "./examples/LabelingJob/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Delete a labeling job.",
        "operationId": "LabelingJobs_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Labeling Job.": {
            "$ref": "./examples/LabelingJob/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs": {
      "get": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Lists labeling jobs in the workspace.",
        "operationId": "LabelingJobs_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Number of labeling jobs to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LabelingJobResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Labeling Job.": {
            "$ref": "./examples/LabelingJob/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}/pause": {
      "post": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Pause a labeling job.",
        "operationId": "LabelingJobs_Pause",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Pause Labeling Job.": {
            "$ref": "./examples/LabelingJob/pause.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}/resume": {
      "post": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Resume a labeling job.",
        "operationId": "LabelingJobs_Resume",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          }
        },
        "x-ms-examples": {
          "Resume Labeling Job.": {
            "$ref": "./examples/LabelingJob/resume.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}/exportLabels": {
      "post": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Export labels from a labeling job.",
        "operationId": "LabelingJobs_ExportLabels",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The export summary.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportSummary"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExportSummary"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          }
        },
        "x-ms-examples": {
          "ExportLabels Labeling Job.": {
            "$ref": "./examples/LabelingJob/exportLabels.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models": {
      "get": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "List model containers.",
        "operationId": "ModelContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Maximum number of results to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Model Container.": {
            "$ref": "./examples/ModelContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}": {
      "put": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "ModelContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Model Container.": {
            "$ref": "./examples/ModelContainer/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Get container.",
        "operationId": "ModelContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Model Container.": {
            "$ref": "./examples/ModelContainer/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Delete container.",
        "operationId": "ModelContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Model Container.": {
            "$ref": "./examples/ModelContainer/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions": {
      "get": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "List model versions.",
        "operationId": "ModelVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Model name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Model version.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Model description.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Number of initial results to skip.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "tags",
            "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
            "type": "string"
          },
          {
            "in": "query",
            "name": "properties",
            "description": "Comma-separated list of property names (and optionally values). Example: prop1,prop2=value2",
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Model Version.": {
            "$ref": "./examples/ModelVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions/{version}": {
      "put": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Create or update version.",
        "operationId": "ModelVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Model Version.": {
            "$ref": "./examples/ModelVersion/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Get version.",
        "operationId": "ModelVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Model Version.": {
            "$ref": "./examples/ModelVersion/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Delete version.",
        "operationId": "ModelVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        },
        "x-ms-examples": {
          "Delete Model Version.": {
            "$ref": "./examples/ModelVersion/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments": {
      "get": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "List Inference Endpoint Deployments.",
        "operationId": "OnlineDeployments_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Top of list.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Delete Inference Endpoint Deployment.",
        "operationId": "OnlineDeployments_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference Endpoint Deployment name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          }
        },
        "x-ms-examples": {
          "Delete Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Get Inference Deployment Deployment.",
        "operationId": "OnlineDeployments_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference Endpoint Deployment name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Create or update Inference Endpoint Deployment.",
        "operationId": "OnlineDeployments_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference Endpoint Deployment name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Inference Endpoint entity to apply during operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Update Online Deployment.",
        "operationId": "OnlineDeployments_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference Endpoint Deployment name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Online Endpoint entity to apply during operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialOnlineDeploymentPartialTrackedResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          }
        },
        "x-ms-examples": {
          "Update Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/update.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}/getLogs": {
      "post": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Polls an Endpoint operation.",
        "operationId": "OnlineDeployments_GetLogs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "The name and identifier for the endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The request containing parameters for retrieving logs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentLogsRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeploymentLogs"
            }
          }
        },
        "x-ms-examples": {
          "GetLogs Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/getLogs.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints": {
      "get": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "List Online Endpoints.",
        "operationId": "OnlineEndpoints_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the endpoint.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Number of endpoints to be retrieved in a page of results.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "computeType",
            "description": "EndpointComputeType to be filtered by.",
            "type": "string",
            "enum": [
              "Managed",
              "K8S",
              "AzureMLCompute"
            ],
            "x-ms-enum": {
              "name": "EndpointComputeType",
              "modelAsString": true
            }
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "tags",
            "description": "A set of tags with which to filter the returned models. It is a comma separated string of tags key or tags key=value. Example: tagKey1,tagKey2,tagKey3=value3 .",
            "type": "string"
          },
          {
            "in": "query",
            "name": "properties",
            "description": "A set of properties with which to filter the returned models. It is a comma separated string of properties key and/or properties key=value Example: propKey1,propKey2,propKey3=value3 .",
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The option to order the response.",
            "type": "string",
            "enum": [
              "CreatedAtDesc",
              "CreatedAtAsc",
              "UpdatedAtDesc",
              "UpdatedAtAsc"
            ],
            "x-ms-enum": {
              "name": "OrderString",
              "modelAsString": true
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Online Endpoint.": {
            "$ref": "./examples/OnlineEndpoint/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}": {
      "delete": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Delete Online Endpoint.",
        "operationId": "OnlineEndpoints_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "204": {
            "description": "No Content"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "200": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Online Endpoint.": {
            "$ref": "./examples/OnlineEndpoint/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Get Online Endpoint.",
        "operationId": "OnlineEndpoints_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Online Endpoint.": {
            "$ref": "./examples/OnlineEndpoint/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Create or update Online Endpoint.",
        "operationId": "OnlineEndpoints_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Online Endpoint entity to apply during operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Online Endpoint.": {
            "$ref": "./examples/OnlineEndpoint/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Update Online Endpoint.",
        "operationId": "OnlineEndpoints_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Online Endpoint entity to apply during operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialOnlineEndpointPartialTrackedResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "x-ms-async-operation-timeout": {
                "description": "Timeout for the client to use when polling the asynchronous operation.",
                "type": "string",
                "format": "duration"
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          }
        },
        "x-ms-examples": {
          "Update Online Endpoint.": {
            "$ref": "./examples/OnlineEndpoint/update.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/regenerateKeys": {
      "post": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Regenerate EndpointAuthKeys for an Endpoint using Key-based authentication.",
        "operationId": "OnlineEndpoints_RegenerateKeys",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "RegenerateKeys request .",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateEndpointKeysRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          }
        },
        "x-ms-examples": {
          "RegenerateKeys Online Endpoint.": {
            "$ref": "./examples/OnlineEndpoint/regenerateKeys.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/listKeys": {
      "post": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "List EndpointAuthKeys for an Endpoint using Key-based authentication.",
        "operationId": "OnlineEndpoints_ListKeys",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EndpointAuthKeys"
            }
          }
        },
        "x-ms-examples": {
          "ListKeys Online Endpoint.": {
            "$ref": "./examples/OnlineEndpoint/listKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/token": {
      "post": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Retrieve a valid AAD token for an Endpoint using AMLToken-based authentication.",
        "operationId": "OnlineEndpoints_GetToken",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EndpointAuthToken"
            }
          }
        },
        "x-ms-examples": {
          "GetToken Online Endpoint.": {
            "$ref": "./examples/OnlineEndpoint/getToken.json"
          }
        }
      }
    }
  },
  "definitions": {
    "UserAssignedIdentityMeta": {
      "description": "User assigned identities associated with a resource.",
      "type": "object",
      "properties": {
        "principalId": {
          "description": "The object ID of the service principal object for your managed identity that is used to grant role-based access to an Azure resource.",
          "type": "string"
        },
        "clientId": {
          "description": "Aka application ID, a unique identifier generated by Azure AD that is tied to an application and service principal during its initial provisioning.",
          "type": "string"
        }
      }
    },
    "ResourceIdentity": {
      "description": "Service identity associated with a resource.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Defines values for a ResourceIdentity's type.",
          "enum": [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned,UserAssigned",
            "None"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceIdentityAssignment",
            "modelAsString": false
          }
        },
        "principalId": {
          "description": "Client ID that is used when authenticating.",
          "type": "string",
          "readOnly": true
        },
        "tenantId": {
          "description": "AAD Tenant where this identity lives.",
          "type": "string",
          "readOnly": true
        },
        "userAssignedIdentities": {
          "description": "Dictionary of the user assigned identities, key is resource ID of the UAI.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UserAssignedIdentityMeta"
          }
        }
      }
    },
    "ComputeConfiguration": {
      "description": "Compute binding definition.",
      "type": "object",
      "properties": {
        "target": {
          "description": "Resource ID of the compute resource. Not used for Batch jobs.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "instanceCount": {
          "format": "int32",
          "description": "Number of instances or nodes.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "isLocal": {
          "description": "Set to true for jobs running on local compute.",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "location": {
          "description": "Location for virtual cluster run.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "instanceType": {
          "description": "SKU type to run on.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "properties": {
          "description": "Additional properties.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "BatchRetrySettings": {
      "description": "Retry settings for a batch inference operation.",
      "type": "object",
      "properties": {
        "maxRetries": {
          "format": "int32",
          "description": "Maximum retry count for a mini-batch",
          "type": "integer"
        },
        "timeout": {
          "format": "date-span",
          "description": "Invocation timeout for a mini-batch, in ISO 8601 format.",
          "type": "string"
        }
      }
    },
    "BatchOutputConfiguration": {
      "description": "Batch inference output configuration.",
      "type": "object",
      "properties": {
        "outputAction": {
          "description": "Indicates how the output will be organized.",
          "enum": [
            "SummaryOnly",
            "AppendRow"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BatchOutputAction",
            "modelAsString": false
          }
        },
        "appendRowFileName": {
          "description": "Customized output file name for append_row output action.",
          "type": "string"
        }
      }
    },
    "AssetReferenceBase": {
      "required": [
        "referenceType"
      ],
      "type": "object",
      "properties": {
        "referenceType": {
          "description": "Specifies the type of asset reference.",
          "enum": [
            "Id",
            "DataPath",
            "OutputPath"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ReferenceType",
            "modelAsString": false
          }
        }
      },
      "discriminator": "referenceType"
    },
    "IdAssetReference": {
      "allOf": [
        {
          "$ref": "#/definitions/AssetReferenceBase"
        },
        {
          "required": [
            "assetId"
          ],
          "type": "object",
          "properties": {
            "assetId": {
              "type": "string"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Id"
    },
    "DataPathAssetReference": {
      "allOf": [
        {
          "$ref": "#/definitions/AssetReferenceBase"
        },
        {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            },
            "datastoreId": {
              "type": "string"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "DataPath"
    },
    "OutputPathAssetReference": {
      "allOf": [
        {
          "$ref": "#/definitions/AssetReferenceBase"
        },
        {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            },
            "jobId": {
              "type": "string"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "OutputPath"
    },
    "CodeConfiguration": {
      "required": [
        "scoringScript"
      ],
      "type": "object",
      "properties": {
        "codeId": {
          "description": "The ID of the code asset.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "scoringScript": {
          "description": "The script to execute on startup. eg. \"score.py\"",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "BatchDeployment": {
      "description": "Batch inference settings per deployment.",
      "type": "object",
      "properties": {
        "compute": {
          "$ref": "#/definitions/ComputeConfiguration"
        },
        "errorThreshold": {
          "format": "int32",
          "description": "Error threshold, if the error count for the entire input goes above this value,\r\nthe batch inference will be aborted. Range is [-1, int.MaxValue]\r\n-1 value indicates, ignore all failures during batch inference\r\nFor FileDataset count of file failures\r\nFor TabularDataset, this is the count of record failures",
          "type": "integer"
        },
        "retrySettings": {
          "$ref": "#/definitions/BatchRetrySettings"
        },
        "partitionKeys": {
          "description": "Partition keys list used for Named partitioning.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "miniBatchSize": {
          "format": "int64",
          "description": "Size of the mini-batch passed to each batch invocation.\r\nFor FileDataset, this is the number of files per mini-batch.\r\nFor TabularDataset, this is the size of the records in bytes, per mini-batch.",
          "type": "integer"
        },
        "loggingLevel": {
          "description": "Logging level for batch inference operation.",
          "enum": [
            "Info",
            "Warning",
            "Debug"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BatchLoggingLevel",
            "modelAsString": false
          }
        },
        "outputConfiguration": {
          "$ref": "#/definitions/BatchOutputConfiguration"
        },
        "description": {
          "description": "Description of the endpoint deployment.",
          "type": "string"
        },
        "properties": {
          "description": "Property dictionary. Properties can be added, but not removed or altered.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "model": {
          "description": "Model Configuration.",
          "$ref": "#/definitions/AssetReferenceBase"
        },
        "codeConfiguration": {
          "$ref": "#/definitions/CodeConfiguration"
        },
        "environmentId": {
          "description": "Environment specification for the endpoint deployment.",
          "type": "string"
        },
        "environmentVariables": {
          "description": "Environment variables configuration for the deployment.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SystemData": {
      "description": "Azure Resource Manager resource Envelope",
      "type": "object",
      "properties": {
        "createdAt": {
          "format": "date-time",
          "description": "the timestamp of resource creation (UTC)",
          "type": "string"
        },
        "createdBy": {
          "description": "a string identifier for the identity that created the resource",
          "type": "string"
        },
        "createdByType": {
          "description": "the type of identity that created the resource: user, application, managedIdentity, key",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "UserType",
            "modelAsString": false
          }
        },
        "lastModifiedAt": {
          "format": "date-time",
          "description": "the timestamp of resource last modification (UTC)",
          "type": "string"
        },
        "lastModifiedBy": {
          "description": "a string identifier for the identity that last modified the resource",
          "type": "string"
        },
        "lastModifiedByType": {
          "description": "the type of identity that last modified the resource: user, application, managedIdentity, key",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "UserType",
            "modelAsString": false
          }
        }
      }
    },
    "BatchDeploymentTrackedResource": {
      "required": [
        "location",
        "properties"
      ],
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/ResourceIdentity"
        },
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/BatchDeployment"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "InnerErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "innerError": {
          "$ref": "#/definitions/InnerErrorResponse"
        }
      }
    },
    "DebugInfoResponse": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "innerException": {
          "$ref": "#/definitions/DebugInfoResponse"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "errorResponse": {
          "$ref": "#/definitions/ErrorResponse"
        }
      }
    },
    "RootError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "severity": {
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "messageFormat": {
          "type": "string"
        },
        "messageParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "referenceCode": {
          "type": "string"
        },
        "detailsUri": {
          "format": "uri",
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RootError"
          }
        },
        "innerError": {
          "$ref": "#/definitions/InnerErrorResponse"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/RootError"
        },
        "correlation": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "environment": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "time": {
          "format": "date-time",
          "type": "string"
        },
        "componentName": {
          "type": "string"
        }
      }
    },
    "PartialBatchDeployment": {
      "description": "Mutable batch inference settings per deployment.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the endpoint deployment.",
          "type": "string"
        }
      }
    },
    "PartialBatchDeploymentPartialTrackedResource": {
      "description": "Strictly used in update requests.",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/ResourceIdentity"
        },
        "properties": {
          "$ref": "#/definitions/PartialBatchDeployment"
        }
      }
    },
    "BatchDeploymentTrackedResourceArmPaginatedResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchDeploymentTrackedResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "EndpointAuthKeys": {
      "type": "object",
      "properties": {
        "primaryKey": {
          "description": "The primary key.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "secondaryKey": {
          "description": "The secondary key.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "BatchEndpoint": {
      "description": "Batch endpoint configuration",
      "type": "object",
      "properties": {
        "authMode": {
          "enum": [
            "AMLToken",
            "Key",
            "AADToken"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EndpointAuthMode",
            "modelAsString": false
          }
        },
        "description": {
          "description": "Description of the inference endpoint.",
          "type": "string"
        },
        "properties": {
          "description": "Property dictionary. Properties can be added, but not removed or altered.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "traffic": {
          "description": "Traffic rules on how the traffic will be routed across deployments.",
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          }
        },
        "scoringUri": {
          "format": "uri",
          "description": "Endpoint URI",
          "type": "string",
          "readOnly": true
        },
        "swaggerUri": {
          "format": "uri",
          "description": "Endpoint Swagger URI",
          "type": "string",
          "readOnly": true
        },
        "keys": {
          "$ref": "#/definitions/EndpointAuthKeys"
        }
      }
    },
    "BatchEndpointTrackedResource": {
      "required": [
        "location",
        "properties"
      ],
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/ResourceIdentity"
        },
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/BatchEndpoint"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "PartialBatchEndpoint": {
      "description": "Mutable Batch endpoint configuration",
      "type": "object",
      "properties": {
        "traffic": {
          "description": "Traffic rules on how the traffic will be routed across deployments.",
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "PartialBatchEndpointPartialTrackedResource": {
      "description": "Strictly used in update requests.",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/ResourceIdentity"
        },
        "properties": {
          "$ref": "#/definitions/PartialBatchEndpoint"
        }
      }
    },
    "BatchEndpointTrackedResourceArmPaginatedResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchEndpointTrackedResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "CodeContainer": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        }
      }
    },
    "CodeContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/CodeContainer"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "CodeContainerResourceArmPaginatedResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeContainerResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "CodeVersion": {
      "description": "Details of an RegisteredCode",
      "required": [
        "path"
      ],
      "type": "object",
      "properties": {
        "datastoreId": {
          "description": "The asset datastoreId",
          "type": "string"
        },
        "path": {
          "description": "The path of the file/directory.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "isAnonymous": {
          "description": "If the name version are system generated (anonymous registration).",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CodeVersionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/CodeVersion"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "CodeVersionResourceArmPaginatedResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeVersionResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "DataContainer": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        }
      }
    },
    "DataContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/DataContainer"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "DataContainerResourceArmPaginatedResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataContainerResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "DatastoreSecrets": {
      "required": [
        "secretsType"
      ],
      "type": "object",
      "properties": {
        "secretsType": {
          "description": "Credential type used to authentication with storage.",
          "enum": [
            "AccountKey",
            "Certificate",
            "None",
            "Sas",
            "ServicePrincipal",
            "SqlAdmin"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SecretsType",
            "modelAsString": false
          }
        }
      },
      "discriminator": "secretsType"
    },
    "AccountKeyDatastoreSecrets": {
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreSecrets"
        },
        {
          "type": "object",
          "properties": {
            "key": {
              "description": "Storage account key.",
              "type": "string"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "AccountKey"
    },
    "DatastoreCredentials": {
      "required": [
        "credentialsType"
      ],
      "type": "object",
      "properties": {
        "credentialsType": {
          "description": "Credential type used to authentication with storage.",
          "enum": [
            "AccountKey",
            "Certificate",
            "None",
            "Sas",
            "ServicePrincipal",
            "SqlAdmin"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CredentialsType",
            "modelAsString": false
          }
        }
      },
      "discriminator": "credentialsType"
    },
    "AccountKeyDatastoreCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreCredentials"
        },
        {
          "type": "object",
          "properties": {
            "secrets": {
              "$ref": "#/definitions/AccountKeyDatastoreSecrets"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "AccountKey"
    },
    "CertificateDatastoreSecrets": {
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreSecrets"
        },
        {
          "type": "object",
          "properties": {
            "certificate": {
              "description": "Service principal certificate.",
              "type": "string"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Certificate"
    },
    "CertificateDatastoreCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreCredentials"
        },
        {
          "required": [
            "clientId",
            "tenantId",
            "thumbprint"
          ],
          "type": "object",
          "properties": {
            "authorityUrl": {
              "description": "Authority URL used for authentication.",
              "type": "string"
            },
            "resourceUri": {
              "description": "Resource the service principal has access to.",
              "type": "string"
            },
            "tenantId": {
              "format": "uuid",
              "description": "ID of the tenant to which the service principal belongs.",
              "type": "string"
            },
            "clientId": {
              "format": "uuid",
              "description": "Service principal client ID.",
              "type": "string"
            },
            "thumbprint": {
              "description": "Thumbprint of the certificate used for authentication.",
              "type": "string"
            },
            "secrets": {
              "$ref": "#/definitions/CertificateDatastoreSecrets"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Certificate"
    },
    "NoneDatastoreSecrets": {
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreSecrets"
        },
        {
          "type": "object"
        }
      ],
      "x-ms-discriminator-value": "None"
    },
    "NoneDatastoreCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreCredentials"
        },
        {
          "type": "object",
          "properties": {
            "secrets": {
              "$ref": "#/definitions/NoneDatastoreSecrets"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "None"
    },
    "SasDatastoreSecrets": {
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreSecrets"
        },
        {
          "type": "object",
          "properties": {
            "sasToken": {
              "description": "Storage container SAS token.",
              "type": "string"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Sas"
    },
    "SasDatastoreCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreCredentials"
        },
        {
          "type": "object",
          "properties": {
            "secrets": {
              "$ref": "#/definitions/SasDatastoreSecrets"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Sas"
    },
    "ServicePrincipalDatastoreSecrets": {
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreSecrets"
        },
        {
          "type": "object",
          "properties": {
            "clientSecret": {
              "description": "Service principal secret.",
              "type": "string"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "ServicePrincipal"
    },
    "ServicePrincipalDatastoreCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreCredentials"
        },
        {
          "required": [
            "clientId",
            "tenantId"
          ],
          "type": "object",
          "properties": {
            "authorityUrl": {
              "description": "Authority URL used for authentication.",
              "type": "string"
            },
            "resourceUri": {
              "description": "Resource the service principal has access to.",
              "type": "string"
            },
            "tenantId": {
              "format": "uuid",
              "description": "ID of the tenant to which the service principal belongs.",
              "type": "string"
            },
            "clientId": {
              "format": "uuid",
              "description": "Service principal client ID.",
              "type": "string"
            },
            "secrets": {
              "$ref": "#/definitions/ServicePrincipalDatastoreSecrets"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "ServicePrincipal"
    },
    "SqlAdminDatastoreSecrets": {
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreSecrets"
        },
        {
          "type": "object",
          "properties": {
            "password": {
              "description": "SQL database password.",
              "type": "string"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "SqlAdmin"
    },
    "SqlAdminDatastoreCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreCredentials"
        },
        {
          "required": [
            "userId"
          ],
          "type": "object",
          "properties": {
            "userId": {
              "description": "SQL database user name.",
              "type": "string"
            },
            "secrets": {
              "$ref": "#/definitions/SqlAdminDatastoreSecrets"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "SqlAdmin"
    },
    "DatastoreContents": {
      "required": [
        "contentsType"
      ],
      "type": "object",
      "properties": {
        "contentsType": {
          "description": "Storage type backing the datastore.",
          "enum": [
            "AzureBlob",
            "AzureDataLakeGen1",
            "AzureDataLakeGen2",
            "AzureFile",
            "AzureMySql",
            "AzurePostgreSql",
            "AzureSqlDatabase",
            "GlusterFs"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ContentsType",
            "modelAsString": false
          }
        }
      },
      "discriminator": "contentsType"
    },
    "DatastoresContentsWithCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreContents"
        },
        {
          "required": [
            "contentsType",
            "credentials"
          ],
          "type": "object",
          "properties": {
            "credentials": {
              "description": "Account credentials.",
              "$ref": "#/definitions/DatastoreCredentials"
            }
          },
          "discriminator": "contentsType"
        }
      ]
    },
    "AzureStorageContents": {
      "allOf": [
        {
          "$ref": "#/definitions/DatastoresContentsWithCredentials"
        },
        {
          "required": [
            "accountName",
            "containerName",
            "contentsType",
            "credentials",
            "endpoint",
            "protocol"
          ],
          "type": "object",
          "properties": {
            "accountName": {
              "description": "Storage account name.",
              "type": "string"
            },
            "containerName": {
              "description": "Storage account container name.",
              "type": "string"
            },
            "endpoint": {
              "description": "Azure cloud endpoint for the storage account.",
              "type": "string",
              "example": "core.windows.net"
            },
            "protocol": {
              "description": "Protocol used to communicate with the storage account.",
              "type": "string",
              "example": "https"
            }
          },
          "discriminator": "contentsType"
        }
      ]
    },
    "AzureBlobContents": {
      "allOf": [
        {
          "$ref": "#/definitions/AzureStorageContents"
        },
        {
          "required": [
            "accountName",
            "containerName",
            "credentials",
            "endpoint",
            "protocol"
          ],
          "type": "object",
          "properties": {
            "contentsType": {
              "enum": [
                "AzureBlob",
                "AzureDataLakeGen1",
                "AzureDataLakeGen2",
                "AzureFile",
                "AzureMySql",
                "AzurePostgreSql",
                "AzureSqlDatabase",
                "GlusterFs"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ContentsType",
                "modelAsString": false
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "AzureBlob"
    },
    "AzureDataLakeGen1Contents": {
      "allOf": [
        {
          "$ref": "#/definitions/DatastoresContentsWithCredentials"
        },
        {
          "required": [
            "credentials",
            "storeName"
          ],
          "type": "object",
          "properties": {
            "contentsType": {
              "enum": [
                "AzureBlob",
                "AzureDataLakeGen1",
                "AzureDataLakeGen2",
                "AzureFile",
                "AzureMySql",
                "AzurePostgreSql",
                "AzureSqlDatabase",
                "GlusterFs"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ContentsType",
                "modelAsString": false
              }
            },
            "storeName": {
              "description": "Azure Data Lake store name.",
              "type": "string"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "AzureDataLakeGen1"
    },
    "AzureDataLakeGen2Contents": {
      "allOf": [
        {
          "$ref": "#/definitions/AzureStorageContents"
        },
        {
          "required": [
            "accountName",
            "containerName",
            "credentials",
            "endpoint",
            "protocol"
          ],
          "type": "object",
          "properties": {
            "contentsType": {
              "enum": [
                "AzureBlob",
                "AzureDataLakeGen1",
                "AzureDataLakeGen2",
                "AzureFile",
                "AzureMySql",
                "AzurePostgreSql",
                "AzureSqlDatabase",
                "GlusterFs"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ContentsType",
                "modelAsString": false
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "AzureDataLakeGen2"
    },
    "AzureFileContents": {
      "allOf": [
        {
          "$ref": "#/definitions/AzureStorageContents"
        },
        {
          "required": [
            "accountName",
            "containerName",
            "credentials",
            "endpoint",
            "protocol"
          ],
          "type": "object",
          "properties": {
            "contentsType": {
              "enum": [
                "AzureBlob",
                "AzureDataLakeGen1",
                "AzureDataLakeGen2",
                "AzureFile",
                "AzureMySql",
                "AzurePostgreSql",
                "AzureSqlDatabase",
                "GlusterFs"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ContentsType",
                "modelAsString": false
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "AzureFile"
    },
    "AzureSqlDatabaseContents": {
      "allOf": [
        {
          "$ref": "#/definitions/DatastoresContentsWithCredentials"
        },
        {
          "required": [
            "contentsType",
            "credentials",
            "databaseName",
            "endpoint",
            "portNumber",
            "serverName"
          ],
          "type": "object",
          "properties": {
            "contentsType": {
              "enum": [
                "AzureBlob",
                "AzureDataLakeGen1",
                "AzureDataLakeGen2",
                "AzureFile",
                "AzureMySql",
                "AzurePostgreSql",
                "AzureSqlDatabase",
                "GlusterFs"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ContentsType",
                "modelAsString": false
              }
            },
            "databaseName": {
              "description": "Azure SQL database name.",
              "type": "string"
            },
            "endpoint": {
              "description": "Azure cloud endpoint for the database.",
              "type": "string",
              "example": "database.windows.net"
            },
            "portNumber": {
              "format": "int32",
              "description": "Azure SQL server port.",
              "type": "integer"
            },
            "serverName": {
              "description": "Azure SQL server name.",
              "type": "string"
            }
          },
          "discriminator": "contentsType"
        }
      ],
      "x-ms-discriminator-value": "AzureSqlDatabase"
    },
    "AzurePostgreSqlContents": {
      "allOf": [
        {
          "$ref": "#/definitions/AzureSqlDatabaseContents"
        },
        {
          "required": [
            "credentials",
            "databaseName",
            "endpoint",
            "portNumber",
            "serverName"
          ],
          "type": "object",
          "properties": {
            "contentsType": {
              "enum": [
                "AzureBlob",
                "AzureDataLakeGen1",
                "AzureDataLakeGen2",
                "AzureFile",
                "AzureMySql",
                "AzurePostgreSql",
                "AzureSqlDatabase",
                "GlusterFs"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ContentsType",
                "modelAsString": false
              }
            },
            "enableSSL": {
              "description": "Whether the Azure PostgreSQL server requires SSL.",
              "type": "boolean"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "AzurePostgreSql"
    },
    "GlusterFsContents": {
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreContents"
        },
        {
          "required": [
            "serverAddress",
            "volumeName"
          ],
          "type": "object",
          "properties": {
            "serverAddress": {
              "description": "GlusterFS server address (can be the IP address or server name).",
              "type": "string"
            },
            "volumeName": {
              "description": "GlusterFS volume name.",
              "type": "string"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "GlusterFs"
    },
    "LinkedInfo": {
      "type": "object",
      "properties": {
        "linkedId": {
          "description": "Linked service ID.",
          "type": "string"
        },
        "linkedResourceName": {
          "description": "Linked service resource name.",
          "type": "string"
        },
        "origin": {
          "description": "Type of the linked service.",
          "enum": [
            "Synapse"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "OriginType",
            "modelAsString": false
          }
        }
      }
    },
    "DatastoreProperties": {
      "required": [
        "contents"
      ],
      "type": "object",
      "properties": {
        "contents": {
          "description": "Reference to the datastore storage contents.",
          "$ref": "#/definitions/DatastoreContents"
        },
        "hasBeenValidated": {
          "description": "Whether the service has validated access to the datastore with the provided credentials.",
          "type": "boolean",
          "readOnly": true
        },
        "isDefault": {
          "description": "Whether this datastore is the default for the workspace.",
          "type": "boolean"
        },
        "linkedInfo": {
          "$ref": "#/definitions/LinkedInfo"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "DatastorePropertiesResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/DatastoreProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "DatastorePropertiesResourceArmPaginatedResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatastorePropertiesResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "DataVersion": {
      "description": "Details of an DatasetDto",
      "required": [
        "path"
      ],
      "type": "object",
      "properties": {
        "datasetType": {
          "description": "The Format of dataset.",
          "enum": [
            "Simple",
            "Dataflow"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DatasetType",
            "modelAsString": false
          }
        },
        "datastoreId": {
          "description": "The asset datastoreId",
          "type": "string"
        },
        "path": {
          "description": "The path of the file/directory.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "isAnonymous": {
          "description": "If the name version are system generated (anonymous registration).",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "DataVersionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/DataVersion"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "DataVersionResourceArmPaginatedResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataVersionResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "EnvironmentContainer": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        }
      }
    },
    "EnvironmentContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/EnvironmentContainer"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "EnvironmentContainerResourceArmPaginatedResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentContainerResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "DockerImagePlatform": {
      "type": "object",
      "properties": {
        "operatingSystemType": {
          "description": "The OS type the Environment.",
          "enum": [
            "Linux",
            "Windows"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "OperatingSystemType",
            "modelAsString": false
          }
        }
      }
    },
    "DockerSpecification": {
      "description": "Class to represent configuration settings for Docker",
      "required": [
        "dockerSpecificationType"
      ],
      "type": "object",
      "properties": {
        "dockerSpecificationType": {
          "description": "Docker specification must be either Build or Image",
          "enum": [
            "Build",
            "Image"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DockerSpecificationType",
            "modelAsString": false
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "platform": {
          "$ref": "#/definitions/DockerImagePlatform"
        }
      },
      "discriminator": "dockerSpecificationType"
    },
    "DockerImage": {
      "description": "Class to represent configuration settings for Docker Build",
      "allOf": [
        {
          "$ref": "#/definitions/DockerSpecification"
        },
        {
          "required": [
            "dockerImageUri"
          ],
          "type": "object",
          "properties": {
            "dockerImageUri": {
              "description": "Image name of a custom base image.\r\n<seealso href=\"https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image\" />",
              "type": "string"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Image"
    },
    "DockerBuild": {
      "description": "Class to represent configuration settings for Docker Build",
      "allOf": [
        {
          "$ref": "#/definitions/DockerSpecification"
        },
        {
          "required": [
            "dockerfile"
          ],
          "type": "object",
          "properties": {
            "dockerfile": {
              "description": "Docker command line instructions to assemble an image.\r\n<seealso href=\"https://repo2docker.readthedocs.io/en/latest/config_files.html#dockerfile-advanced-environments\" />",
              "type": "string"
            },
            "context": {
              "description": "Path to a snapshot of the Docker Context. This property is only valid if Dockerfile is specified.\r\nThe path is relative to the asset path which must contain a single Blob URI value.\r\n<seealso href=\"https://docs.docker.com/engine/context/working-with-contexts/\" />",
              "type": "string"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Build"
    },
    "Route": {
      "required": [
        "path",
        "port"
      ],
      "type": "object",
      "properties": {
        "path": {
          "description": "The path for the route.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "port": {
          "format": "int32",
          "description": "The port for the route.",
          "type": "integer"
        }
      }
    },
    "InferenceContainerProperties": {
      "type": "object",
      "properties": {
        "livenessRoute": {
          "$ref": "#/definitions/Route"
        },
        "readinessRoute": {
          "$ref": "#/definitions/Route"
        },
        "scoringRoute": {
          "$ref": "#/definitions/Route"
        }
      }
    },
    "EnvironmentSpecificationVersion": {
      "description": "Data Transfer Object (DTO) for an Execution Environment Specification. Name and\r\nversion should default to the AzureML-Minimal environment version tested with the\r\ncurrent SDK client version as this is a main use-case.\r\n<see href=\"https://repo2docker.readthedocs.io/en/latest/specification.html\" />",
      "type": "object",
      "properties": {
        "environmentSpecificationType": {
          "description": "Environment specification is either user managed or curated by the Azure ML service\r\n<see href=\"https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments\" />",
          "enum": [
            "Curated",
            "UserCreated"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "EnvironmentSpecificationType",
            "modelAsString": false
          }
        },
        "docker": {
          "description": "Configuration settings for Docker",
          "$ref": "#/definitions/DockerSpecification"
        },
        "condaFile": {
          "description": "Standard configuration file used by conda that lets you install any kind of package, including Python, R, and C/C++ packages\r\n<see href=\"https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment\" />",
          "type": "string"
        },
        "inferenceContainerProperties": {
          "$ref": "#/definitions/InferenceContainerProperties"
        },
        "isAnonymous": {
          "description": "If the name version are system generated (anonymous registration).",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "EnvironmentSpecificationVersionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/EnvironmentSpecificationVersion"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "EnvironmentSpecificationVersionResourceArmPaginatedResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentSpecificationVersionResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "JobOutput": {
      "type": "object",
      "properties": {
        "datastoreId": {
          "description": "ARM ID of the datastore where the job logs and artifacts are stored, or null for the default container (\"azureml\") in the workspace's storage account.",
          "type": "string",
          "readOnly": true
        },
        "path": {
          "description": "Path within the datastore to the job logs and artifacts.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "InputDataBinding": {
      "type": "object",
      "properties": {
        "dataId": {
          "description": "ArmId of the registered dataVersion.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "pathOnCompute": {
          "description": "Location of data inside the container process.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "mode": {
          "description": "Mechanism for accessing the data artifact.",
          "enum": [
            "Mount",
            "Download",
            "Upload"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataBindingMode",
            "modelAsString": false
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "OutputDataBinding": {
      "type": "object",
      "properties": {
        "datastoreId": {
          "description": "ArmId of the datastore where the data output will be stored.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "pathOnDatastore": {
          "description": "Path within the datastore to the data.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "pathOnCompute": {
          "description": "Location of data inside the container process.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "mode": {
          "description": "Mechanism for data movement to datastore.",
          "enum": [
            "Mount",
            "Download",
            "Upload"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataBindingMode",
            "modelAsString": false
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "DistributionConfiguration": {
      "required": [
        "distributionType"
      ],
      "type": "object",
      "properties": {
        "distributionType": {
          "description": "Specifies the type of distribution framework.",
          "enum": [
            "PyTorch",
            "TensorFlow",
            "Mpi"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DistributionType",
            "modelAsString": false
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "distributionType"
    },
    "TensorFlow": {
      "allOf": [
        {
          "$ref": "#/definitions/DistributionConfiguration"
        },
        {
          "type": "object",
          "properties": {
            "workerCount": {
              "format": "int32",
              "description": "Number of workers. Overwrites the node count in compute binding.",
              "type": "integer"
            },
            "parameterServerCount": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "TensorFlow"
    },
    "Mpi": {
      "allOf": [
        {
          "$ref": "#/definitions/DistributionConfiguration"
        },
        {
          "type": "object",
          "properties": {
            "processCountPerInstance": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Mpi"
    },
    "PyTorch": {
      "allOf": [
        {
          "$ref": "#/definitions/DistributionConfiguration"
        },
        {
          "type": "object",
          "properties": {
            "processCount": {
              "format": "int32",
              "description": "Total process count for the distributed job.",
              "type": "integer"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "PyTorch"
    },
    "IdentityConfiguration": {
      "required": [
        "identityType"
      ],
      "type": "object",
      "properties": {
        "identityType": {
          "description": "Specifies the type of identity framework.",
          "enum": [
            "Managed",
            "AMLToken"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IdentityConfigurationType",
            "modelAsString": false
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "identityType"
    },
    "AmlToken": {
      "allOf": [
        {
          "$ref": "#/definitions/IdentityConfiguration"
        },
        {
          "type": "object"
        }
      ],
      "x-ms-discriminator-value": "AMLToken"
    },
    "ManagedIdentity": {
      "allOf": [
        {
          "$ref": "#/definitions/IdentityConfiguration"
        },
        {
          "type": "object",
          "properties": {
            "clientId": {
              "format": "uuid",
              "description": "Specifies a user-assigned identity by client ID. For system-assigned, do not set this field.",
              "type": "string"
            },
            "objectId": {
              "format": "uuid",
              "description": "Specifies a user-assigned identity by object ID. For system-assigned, do not set this field.",
              "type": "string"
            },
            "resourceId": {
              "description": "Specifies a user-assigned identity by resource ID. For system-assigned, do not set this field.",
              "type": "string"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Managed"
    },
    "JobEndpoint": {
      "description": "Job endpoint definition",
      "type": "object",
      "properties": {
        "jobEndpointType": {
          "description": "Endpoint type.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "port": {
          "format": "int32",
          "description": "Port for endpoint.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "endpoint": {
          "description": "Url for endpoint.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "JobBase": {
      "description": "Job base definition",
      "required": [
        "jobType"
      ],
      "type": "object",
      "properties": {
        "jobType": {
          "description": "Specifies the type of job.",
          "enum": [
            "Command",
            "Sweep",
            "Labeling"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "JobType",
            "modelAsString": false
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "provisioningState": {
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "InProgress"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "JobProvisioningState",
            "modelAsString": false
          }
        },
        "interactionEndpoints": {
          "description": "List of JobEndpoints.\r\nFor local jobs, a job endpoint will have an endpoint value of FileStreamObject.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/JobEndpoint"
          },
          "readOnly": true
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "discriminator": "jobType"
    },
    "CommandJob": {
      "description": "Code Job definition",
      "allOf": [
        {
          "$ref": "#/definitions/JobBase"
        },
        {
          "required": [
            "command",
            "compute"
          ],
          "type": "object",
          "properties": {
            "compute": {
              "$ref": "#/definitions/ComputeConfiguration"
            },
            "priority": {
              "format": "int32",
              "description": "Job priority for scheduling policy. Only applies to AMLCompute.\r\nPrivate preview feature and only available to users on the allow list.",
              "type": "integer"
            },
            "experimentName": {
              "description": "The name of the experiment the job belongs to. If not set, the job is placed in the \"Default\" experiment.",
              "type": "string"
            },
            "output": {
              "$ref": "#/definitions/JobOutput"
            },
            "status": {
              "description": "Status of the job.",
              "enum": [
                "NotStarted",
                "Starting",
                "Provisioning",
                "Preparing",
                "Queued",
                "Running",
                "Finalizing",
                "CancelRequested",
                "Completed",
                "Failed",
                "Canceled",
                "NotResponding",
                "Paused"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "JobStatus",
                "modelAsString": false
              }
            },
            "timeout": {
              "format": "date-span",
              "description": "The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.",
              "type": "string"
            },
            "codeId": {
              "description": "The ID of the code asset.",
              "type": "string"
            },
            "command": {
              "description": "The command to execute on startup of the job. eg. \"python train.py\"",
              "minLength": 1,
              "type": "string"
            },
            "environmentId": {
              "description": "Environment specification of the job.",
              "type": "string"
            },
            "inputDataBindings": {
              "description": "Mapping of input data bindings used in the job.",
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/InputDataBinding"
              }
            },
            "outputDataBindings": {
              "description": "Mapping of output data bindings used in the job.",
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/OutputDataBinding"
              }
            },
            "distribution": {
              "description": "Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.",
              "$ref": "#/definitions/DistributionConfiguration"
            },
            "environmentVariables": {
              "description": "Environment variables included in the job.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "identity": {
              "description": "Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, or null.\r\nDefaults to AmlToken if null.",
              "$ref": "#/definitions/IdentityConfiguration"
            },
            "parameters": {
              "description": "Input parameters.",
              "type": "object",
              "additionalProperties": {}
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Command"
    },
    "EarlyTerminationPolicy": {
      "description": "Early termination policies enable canceling poor-performing runs before they complete",
      "required": [
        "policyType"
      ],
      "type": "object",
      "properties": {
        "policyType": {
          "description": "Name of policy configuration",
          "enum": [
            "Bandit",
            "MedianStopping",
            "TruncationSelection"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EarlyTerminationPolicyType",
            "modelAsString": false
          }
        },
        "evaluationInterval": {
          "format": "int32",
          "type": "integer"
        },
        "delayEvaluation": {
          "format": "int32",
          "type": "integer"
        }
      },
      "discriminator": "policyType"
    },
    "BanditPolicy": {
      "description": "Defines an early termination policy based on slack criteria, and a frequency and delay interval for evaluation",
      "allOf": [
        {
          "$ref": "#/definitions/EarlyTerminationPolicy"
        },
        {
          "type": "object",
          "properties": {
            "slackFactor": {
              "format": "float",
              "type": "number"
            },
            "slackAmount": {
              "format": "float",
              "type": "number"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Bandit"
    },
    "MedianStoppingPolicy": {
      "description": "Defines an early termination policy based on running averages of the primary metric of all runs",
      "allOf": [
        {
          "$ref": "#/definitions/EarlyTerminationPolicy"
        },
        {
          "type": "object"
        }
      ],
      "x-ms-discriminator-value": "MedianStopping"
    },
    "TruncationSelectionPolicy": {
      "description": "Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.",
      "allOf": [
        {
          "$ref": "#/definitions/EarlyTerminationPolicy"
        },
        {
          "type": "object",
          "properties": {
            "truncationPercentage": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "TruncationSelection"
    },
    "Objective": {
      "required": [
        "goal",
        "primaryMetric"
      ],
      "type": "object",
      "properties": {
        "primaryMetric": {
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "goal": {
          "description": "Defines supported metric goals for hyperparameter tuning",
          "enum": [
            "Minimize",
            "Maximize"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "Goal",
            "modelAsString": false
          }
        }
      }
    },
    "TrialComponent": {
      "required": [
        "command"
      ],
      "type": "object",
      "properties": {
        "timeout": {
          "format": "date-span",
          "description": "The max run duration in ISO 8601 format, after which the trial component will be cancelled.\r\nOnly supports duration with precision as low as Seconds.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "codeId": {
          "description": "The ID of the code asset.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "command": {
          "description": "The command to execute on startup of the job. eg. \"python train.py\"",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "environmentId": {
          "description": "Environment id of the job.",
          "type": "string"
        },
        "inputDataBindings": {
          "description": "Mapping of input data bindings used in the job.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/InputDataBinding"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "outputDataBindings": {
          "description": "Mapping of output data bindings used in the job.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/OutputDataBinding"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "environmentVariables": {
          "description": "Environment variables included in the job.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "distribution": {
          "description": "Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.",
          "$ref": "#/definitions/DistributionConfiguration",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "SweepJob": {
      "allOf": [
        {
          "$ref": "#/definitions/JobBase"
        },
        {
          "required": [
            "algorithm",
            "compute",
            "objective",
            "searchSpace"
          ],
          "type": "object",
          "properties": {
            "compute": {
              "$ref": "#/definitions/ComputeConfiguration"
            },
            "priority": {
              "format": "int32",
              "description": "Job priority for scheduling policy. Only applies to AMLCompute.\r\nPrivate preview feature and only available to users on the allow list.",
              "type": "integer"
            },
            "experimentName": {
              "description": "The name of the experiment the job belongs to. If not set, the job is placed in the \"Default\" experiment.",
              "type": "string"
            },
            "output": {
              "$ref": "#/definitions/JobOutput"
            },
            "status": {
              "description": "The status of a job.",
              "enum": [
                "NotStarted",
                "Starting",
                "Provisioning",
                "Preparing",
                "Queued",
                "Running",
                "Finalizing",
                "CancelRequested",
                "Completed",
                "Failed",
                "Canceled",
                "NotResponding",
                "Paused"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "JobStatus",
                "modelAsString": false
              }
            },
            "searchSpace": {
              "description": "A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            },
            "algorithm": {
              "description": "Type of the hyperparameter sampling algorithms",
              "enum": [
                "Grid",
                "Random",
                "Bayesian"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SamplingAlgorithm",
                "modelAsString": false
              }
            },
            "maxTotalTrials": {
              "format": "int32",
              "type": "integer"
            },
            "maxConcurrentTrials": {
              "format": "int32",
              "type": "integer"
            },
            "timeout": {
              "format": "date-span",
              "description": "The total timeout in ISO 8601 format. Only supports duration with precision as low as Minutes.",
              "type": "string"
            },
            "earlyTermination": {
              "description": "Early termination policies enable canceling poor-performing runs before they complete",
              "$ref": "#/definitions/EarlyTerminationPolicy"
            },
            "objective": {
              "$ref": "#/definitions/Objective"
            },
            "trial": {
              "$ref": "#/definitions/TrialComponent"
            },
            "identity": {
              "description": "Identity configuration. If set, this should be one of AmlToken, ManagedIdentity or null.\r\nDefaults to AmlToken if null.",
              "$ref": "#/definitions/IdentityConfiguration"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Sweep"
    },
    "JobBaseResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/JobBase"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "JobBaseResourceArmPaginatedResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobBaseResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "LabelClass": {
      "description": "Label class definition",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name of the label class.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "subclasses": {
          "description": "Dictionary of subclasses of the label class.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LabelClass"
          },
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      }
    },
    "LabelCategory": {
      "description": "Label category definition",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name of the label category.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "allowMultiSelect": {
          "description": "Indicates whether it is allowed to select multiple classes in this category.",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "classes": {
          "description": "Dictionary of label classes in this category.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LabelClass"
          },
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      }
    },
    "LabelingJobInstructions": {
      "description": "Instructions for labeling job",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The link to a page with detailed labeling instructions for labelers.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      }
    },
    "LabelingDatasetConfiguration": {
      "description": "Labeling dataset configuration definition",
      "type": "object",
      "properties": {
        "assetName": {
          "description": "Name of the data asset to perform labeling.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "incrementalDatasetRefreshEnabled": {
          "description": "Indicates whether to enable incremental dataset refresh.",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "datasetVersion": {
          "description": "AML dataset version.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "MLAssistConfiguration": {
      "description": "Labeling MLAssist configuration definition",
      "type": "object",
      "properties": {
        "inferencingComputeBinding": {
          "$ref": "#/definitions/ComputeConfiguration"
        },
        "trainingComputeBinding": {
          "$ref": "#/definitions/ComputeConfiguration"
        },
        "mlAssistEnabled": {
          "description": "Indicates whether MLAssist feature is enabled.",
          "type": "boolean"
        }
      }
    },
    "LabelingJobMediaProperties": {
      "description": "Properties of a labeling job",
      "required": [
        "mediaType"
      ],
      "type": "object",
      "properties": {
        "mediaType": {
          "description": "Media type of the job.",
          "enum": [
            "Image",
            "Text"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MediaType",
            "modelAsString": false
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "mediaType"
    },
    "LabelingJobImageProperties": {
      "description": "Properties of a labeling job for image data",
      "allOf": [
        {
          "$ref": "#/definitions/LabelingJobMediaProperties"
        },
        {
          "type": "object",
          "properties": {
            "annotationType": {
              "description": "Annotation type of image labeling job.",
              "enum": [
                "Classification",
                "BoundingBox",
                "InstanceSegmentation"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ImageAnnotationType",
                "modelAsString": false
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Image"
    },
    "LabelingJobTextProperties": {
      "description": "Properties of a labeling job for text data",
      "allOf": [
        {
          "$ref": "#/definitions/LabelingJobMediaProperties"
        },
        {
          "type": "object",
          "properties": {
            "annotationType": {
              "description": "Annotation type of text labeling job.",
              "enum": [
                "Classification"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "TextAnnotationType",
                "modelAsString": false
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Text"
    },
    "ProgressMetrics": {
      "description": "Progress metrics definition",
      "type": "object",
      "properties": {
        "totalDatapointCount": {
          "format": "int64",
          "description": "The total datapoint count.",
          "type": "integer",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "completedDatapointCount": {
          "format": "int64",
          "description": "The completed datapoint count.",
          "type": "integer",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "skippedDatapointCount": {
          "format": "int64",
          "description": "The skipped datapoint count.",
          "type": "integer",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "incrementalDatasetLastRefreshTime": {
          "format": "date-time",
          "description": "The time of last successful incremental dataset refresh in UTC.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      }
    },
    "StatusMessage": {
      "description": "Active message associated with project",
      "type": "object",
      "properties": {
        "level": {
          "description": "Severity level of message.",
          "enum": [
            "Error",
            "Information",
            "Warning"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "StatusMessageLevel",
            "modelAsString": false
          },
          "x-ms-mutability": [
            "read"
          ]
        },
        "code": {
          "description": "Service-defined message code.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "message": {
          "description": "A human-readable representation of the message code.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "createdTimeUtc": {
          "format": "date-time",
          "description": "Time in UTC at which the message was created.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      }
    },
    "LabelingJob": {
      "description": "Labeling job definition",
      "type": "object",
      "properties": {
        "provisioningState": {
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "InProgress"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "JobProvisioningState",
            "modelAsString": false
          }
        },
        "interactionEndpoints": {
          "description": "List of JobEndpoints.\r\nFor local jobs, a job endpoint will have an endpoint value of FileStreamObject.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/JobEndpoint"
          },
          "readOnly": true
        },
        "labelCategories": {
          "description": "Label categories of the job.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LabelCategory"
          },
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "jobInstructions": {
          "$ref": "#/definitions/LabelingJobInstructions"
        },
        "datasetConfiguration": {
          "$ref": "#/definitions/LabelingDatasetConfiguration"
        },
        "mlAssistConfiguration": {
          "$ref": "#/definitions/MLAssistConfiguration"
        },
        "labelingJobMediaProperties": {
          "description": "Media type specific properties in the job.",
          "$ref": "#/definitions/LabelingJobMediaProperties",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "projectId": {
          "format": "uuid",
          "description": "Internal id of the job(Previously called project).",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "status": {
          "description": "Status of the job.",
          "enum": [
            "NotStarted",
            "Starting",
            "Provisioning",
            "Preparing",
            "Queued",
            "Running",
            "Finalizing",
            "CancelRequested",
            "Completed",
            "Failed",
            "Canceled",
            "NotResponding",
            "Paused"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": false
          },
          "x-ms-mutability": [
            "read"
          ]
        },
        "progressMetrics": {
          "$ref": "#/definitions/ProgressMetrics"
        },
        "statusMessages": {
          "description": "Status messages of the job.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusMessage"
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "createdTimeUtc": {
          "format": "date-time",
          "description": "Created time of the job in UTC timezone.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "LabelingJobResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/LabelingJob"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "LabelingJobResourceArmPaginatedResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LabelingJobResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "ExportSummary": {
      "required": [
        "format"
      ],
      "type": "object",
      "properties": {
        "format": {
          "description": "The format of exported labels, also as the discriminator.",
          "enum": [
            "Dataset",
            "Coco",
            "CSV"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ExportFormatType",
            "modelAsString": false
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "labelingJobId": {
          "description": "Name and identifier of the job containing exported labels.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "exportedRowCount": {
          "format": "int64",
          "description": "The total number of labeled datapoints exported.",
          "type": "integer",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "startTimeUtc": {
          "format": "date-time",
          "description": "The time when the export was requested.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "endTimeUtc": {
          "format": "date-time",
          "description": "The time when the export was completed.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "discriminator": "format"
    },
    "CocoExportSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/ExportSummary"
        },
        {
          "type": "object",
          "properties": {
            "snapshotPath": {
              "description": "The output path where the labels will be exported.",
              "type": "string"
            },
            "containerName": {
              "description": "The container name to which the labels will be exported.",
              "type": "string"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Coco"
    },
    "CsvExportSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/ExportSummary"
        },
        {
          "type": "object",
          "properties": {
            "snapshotPath": {
              "description": "The output path where the labels will be exported.",
              "type": "string"
            },
            "containerName": {
              "description": "The container name to which the labels will be exported.",
              "type": "string"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "CSV"
    },
    "DatasetExportSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/ExportSummary"
        },
        {
          "type": "object",
          "properties": {
            "labeledAssetName": {
              "description": "The unique name of the labeled data asset.",
              "type": "string"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Dataset"
    },
    "ModelContainer": {
      "type": "object",
      "properties": {
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ModelContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/ModelContainer"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "ModelContainerResourceArmPaginatedResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelContainerResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "FlavorData": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ModelVersion": {
      "description": "Details of an ModelDto",
      "required": [
        "path"
      ],
      "type": "object",
      "properties": {
        "flavors": {
          "description": "Dictionary mapping model flavors to their properties.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/FlavorData"
          }
        },
        "datastoreId": {
          "description": "The asset datastoreId",
          "type": "string"
        },
        "path": {
          "description": "The path of the file/directory.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "isAnonymous": {
          "description": "If the name version are system generated (anonymous registration).",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ModelVersionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/ModelVersion"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "ModelVersionResourceArmPaginatedResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelVersionResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "ContainerResourceRequirements": {
      "type": "object",
      "properties": {
        "cpu": {
          "format": "double",
          "description": "The minimum amount of CPU cores to be used by the container. More info:\r\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "number",
          "example": 4
        },
        "cpuLimit": {
          "format": "double",
          "description": "The maximum amount of CPU cores allowed to be used by the container. More info:\r\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "number",
          "example": 4
        },
        "memoryInGB": {
          "format": "double",
          "description": "The minimum amount of memory (in GB) to be used by the container. More info:\r\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "number",
          "example": 64
        },
        "memoryInGBLimit": {
          "format": "double",
          "description": "The maximum amount of memory (in GB) allowed to be used by the container. More info:\r\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "number",
          "example": 64
        },
        "gpuEnabled": {
          "description": "If gpu should be enabled",
          "type": "boolean"
        },
        "gpu": {
          "format": "int32",
          "description": "The number of GPU cores in the container.",
          "type": "integer"
        },
        "fpga": {
          "format": "int32",
          "description": "The number of FPGA PCIE devices exposed to the container. Must be multiple of 2.",
          "type": "integer"
        }
      }
    },
    "OnlineScaleSettings": {
      "required": [
        "scaleType"
      ],
      "type": "object",
      "properties": {
        "scaleType": {
          "enum": [
            "Auto",
            "Manual"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ScaleType",
            "modelAsString": false
          }
        },
        "minInstances": {
          "format": "int32",
          "type": "integer"
        },
        "maxInstances": {
          "format": "int32",
          "type": "integer"
        }
      },
      "discriminator": "scaleType"
    },
    "ManualScaleSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/OnlineScaleSettings"
        },
        {
          "type": "object",
          "properties": {
            "instanceCount": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Manual"
    },
    "AutoScaleSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/OnlineScaleSettings"
        },
        {
          "type": "object",
          "properties": {
            "pollingInterval": {
              "format": "date-span",
              "description": "The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.",
              "type": "string"
            },
            "targetUtilizationPercentage": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Auto"
    },
    "OnlineRequestSettings": {
      "type": "object",
      "properties": {
        "maxQueueWait": {
          "format": "date-span",
          "description": "The maximum queue wait time in ISO 8601 format. Supports millisecond precision.",
          "type": "string"
        },
        "requestTimeout": {
          "format": "date-span",
          "description": "The request timeout in ISO 8601 format. Supports millisecond precision.",
          "type": "string"
        },
        "maxConcurrentRequestsPerInstance": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ProbeSettings": {
      "type": "object",
      "properties": {
        "failureThreshold": {
          "format": "int32",
          "description": "The number of failures to allow before returning an unhealthy status.",
          "type": "integer"
        },
        "successThreshold": {
          "format": "int32",
          "description": "The number of successful probes before returning a healthy status.",
          "type": "integer"
        },
        "timeout": {
          "format": "date-span",
          "description": "The probe timeout in ISO 8601 format.",
          "type": "string"
        },
        "period": {
          "format": "date-span",
          "description": "The length of time between probes in ISO 8601 format.",
          "type": "string"
        },
        "initialDelay": {
          "format": "date-span",
          "description": "The delay before the first probe in ISO 8601 format.",
          "type": "string"
        }
      }
    },
    "OnlineDeployment": {
      "required": [
        "endpointComputeType"
      ],
      "type": "object",
      "properties": {
        "endpointComputeType": {
          "enum": [
            "Managed",
            "K8S",
            "AzureMLCompute"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EndpointComputeType",
            "modelAsString": false
          }
        },
        "scaleSettings": {
          "$ref": "#/definitions/OnlineScaleSettings"
        },
        "requestSettings": {
          "$ref": "#/definitions/OnlineRequestSettings"
        },
        "appInsightsEnabled": {
          "type": "boolean"
        },
        "livenessProbe": {
          "$ref": "#/definitions/ProbeSettings"
        },
        "provisioningState": {
          "description": "Provisioning state for the endpoint deployment.",
          "enum": [
            "Creating",
            "Deleting",
            "Scaling",
            "Updating",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "DeploymentProvisioningState",
            "modelAsString": false
          }
        },
        "description": {
          "description": "Description of the endpoint deployment.",
          "type": "string"
        },
        "properties": {
          "description": "Property dictionary. Properties can be added, but not removed or altered.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "model": {
          "description": "Model Configuration.",
          "$ref": "#/definitions/AssetReferenceBase"
        },
        "codeConfiguration": {
          "$ref": "#/definitions/CodeConfiguration"
        },
        "environmentId": {
          "description": "Environment specification for the endpoint deployment.",
          "type": "string"
        },
        "environmentVariables": {
          "description": "Environment variables configuration for the deployment.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "discriminator": "endpointComputeType"
    },
    "K8sOnlineDeployment": {
      "allOf": [
        {
          "$ref": "#/definitions/OnlineDeployment"
        },
        {
          "type": "object",
          "properties": {
            "containerResourceRequirements": {
              "$ref": "#/definitions/ContainerResourceRequirements"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "K8S"
    },
    "ManagedOnlineDeployment": {
      "allOf": [
        {
          "$ref": "#/definitions/OnlineDeployment"
        },
        {
          "type": "object",
          "properties": {
            "instanceType": {
              "type": "string"
            },
            "readinessProbe": {
              "$ref": "#/definitions/ProbeSettings"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Managed"
    },
    "OnlineDeploymentTrackedResource": {
      "required": [
        "location",
        "properties"
      ],
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/ResourceIdentity"
        },
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/OnlineDeployment"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "OnlineDeploymentTrackedResourceArmPaginatedResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OnlineDeploymentTrackedResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "PartialOnlineDeployment": {
      "description": "Mutable online deployment configuration",
      "required": [
        "endpointComputeType"
      ],
      "type": "object",
      "properties": {
        "endpointComputeType": {
          "enum": [
            "Managed",
            "K8S",
            "AzureMLCompute"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EndpointComputeType",
            "modelAsString": false
          }
        },
        "scaleSettings": {
          "$ref": "#/definitions/OnlineScaleSettings"
        },
        "requestSettings": {
          "$ref": "#/definitions/OnlineRequestSettings"
        },
        "appInsightsEnabled": {
          "type": "boolean"
        },
        "livenessProbe": {
          "$ref": "#/definitions/ProbeSettings"
        }
      },
      "discriminator": "endpointComputeType"
    },
    "PartialAksOnlineDeployment": {
      "allOf": [
        {
          "$ref": "#/definitions/PartialOnlineDeployment"
        },
        {
          "type": "object",
          "properties": {
            "containerResourceRequirements": {
              "$ref": "#/definitions/ContainerResourceRequirements"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "K8S"
    },
    "PartialManagedOnlineDeployment": {
      "allOf": [
        {
          "$ref": "#/definitions/PartialOnlineDeployment"
        },
        {
          "type": "object",
          "properties": {
            "readinessProbe": {
              "$ref": "#/definitions/ProbeSettings"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Managed"
    },
    "PartialOnlineDeploymentPartialTrackedResource": {
      "description": "Strictly used in update requests.",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/ResourceIdentity"
        },
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/PartialOnlineDeployment"
        }
      }
    },
    "DeploymentLogsRequest": {
      "type": "object",
      "properties": {
        "containerType": {
          "description": "The type of container to retrieve logs from.",
          "enum": [
            "StorageInitializer",
            "InferenceServer"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ContainerType",
            "modelAsString": false
          }
        },
        "tail": {
          "format": "int32",
          "description": "The maximum number of lines to tail.",
          "type": "integer"
        }
      }
    },
    "DeploymentLogs": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        }
      }
    },
    "OnlineEndpoint": {
      "description": "Online endpoint configuration",
      "required": [
        "authMode"
      ],
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "State of endpoint provisioning.",
          "enum": [
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Updating",
            "Canceled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "EndpointProvisioningState",
            "modelAsString": false
          }
        },
        "target": {
          "description": "Reference to compute Id if exist.\r\noptional",
          "type": "string"
        },
        "description": {
          "description": "Description of the inference endpoint.",
          "type": "string"
        },
        "properties": {
          "description": "Property dictionary. Properties can be added, but not removed or altered.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "traffic": {
          "description": "Traffic rules on how the traffic will be routed across deployments.",
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          }
        },
        "scoringUri": {
          "format": "uri",
          "description": "Endpoint URI",
          "type": "string",
          "readOnly": true
        },
        "swaggerUri": {
          "format": "uri",
          "description": "Endpoint Swagger URI",
          "type": "string",
          "readOnly": true
        },
        "authMode": {
          "description": "Inference endpoint authentication mode type",
          "enum": [
            "AMLToken",
            "Key",
            "AADToken"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EndpointAuthMode",
            "modelAsString": false
          }
        },
        "keys": {
          "$ref": "#/definitions/EndpointAuthKeys"
        }
      }
    },
    "OnlineEndpointTrackedResource": {
      "required": [
        "location",
        "properties"
      ],
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/ResourceIdentity"
        },
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/OnlineEndpoint"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "OnlineEndpointTrackedResourceArmPaginatedResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OnlineEndpointTrackedResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "PartialOnlineEndpoint": {
      "description": "Mutable online endpoint configuration",
      "type": "object",
      "properties": {
        "traffic": {
          "description": "Traffic rules on how the traffic will be routed across deployments.",
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "PartialOnlineEndpointPartialTrackedResource": {
      "description": "Strictly used in update requests.",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/ResourceIdentity"
        },
        "properties": {
          "$ref": "#/definitions/PartialOnlineEndpoint"
        }
      }
    },
    "RegenerateEndpointKeysRequest": {
      "required": [
        "keyType"
      ],
      "type": "object",
      "properties": {
        "keyType": {
          "description": "Specification for which type of key to generate. Primary or Secondary.",
          "enum": [
            "Primary",
            "Secondary"
          ],
          "type": "string",
          "example": "Primary",
          "x-ms-enum": {
            "name": "KeyType",
            "modelAsString": false
          }
        },
        "keyValue": {
          "description": "The value the key is set to.",
          "type": "string"
        }
      }
    },
    "EndpointAuthToken": {
      "description": "Service Token",
      "type": "object",
      "properties": {
        "accessToken": {
          "description": "Access token.",
          "type": "string"
        },
        "tokenType": {
          "description": "Access token type.",
          "type": "string"
        },
        "expiryTimeUtc": {
          "format": "int64",
          "description": "Access token expiry time (UTC).",
          "type": "integer"
        },
        "refreshAfterTimeUtc": {
          "format": "int64",
          "description": "Refresh access token after time (UTC).",
          "type": "integer"
        }
      }
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "description": "Azure Active Directory OAuth2 Flow."
    }
  }
}