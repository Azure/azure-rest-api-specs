{
  "swagger": "2.0",
  "info": {
    "title": "Azure Machine Learning Workspaces",
    "version": "2021-03-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}": {
      "put": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "CodeContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Code Container.": {
            "$ref": "./examples/CodeContainer/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "Get container.",
        "operationId": "CodeContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Code Container.": {
            "$ref": "./examples/CodeContainer/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "Delete container.",
        "operationId": "CodeContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Code Container.": {
            "$ref": "./examples/CodeContainer/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes": {
      "get": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "List containers.",
        "operationId": "CodeContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeContainerResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Code Container.": {
            "$ref": "./examples/CodeContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions/{version}": {
      "put": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Create or update version.",
        "operationId": "CodeVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Code Version.": {
            "$ref": "./examples/CodeVersion/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Get version.",
        "operationId": "CodeVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Code Version.": {
            "$ref": "./examples/CodeVersion/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Delete version.",
        "operationId": "CodeVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Code Version.": {
            "$ref": "./examples/CodeVersion/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions": {
      "get": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "List versions.",
        "operationId": "CodeVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeVersionResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Code Version.": {
            "$ref": "./examples/CodeVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}": {
      "put": {
        "tags": [
          "DataContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "DataContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Data Container.": {
            "$ref": "./examples/DataContainer/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "DataContainer"
        ],
        "summary": "Get container.",
        "operationId": "DataContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Data Container.": {
            "$ref": "./examples/DataContainer/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DataContainer"
        ],
        "summary": "Delete container.",
        "operationId": "DataContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Data Container.": {
            "$ref": "./examples/DataContainer/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data": {
      "get": {
        "tags": [
          "DataContainer"
        ],
        "summary": "List containers.",
        "operationId": "DataContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataContainerResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Data Container.": {
            "$ref": "./examples/DataContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores": {
      "get": {
        "tags": [
          "Datastore"
        ],
        "summary": "List datastores.",
        "operationId": "Datastores_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Maximum number of results to return.",
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "in": "query",
            "name": "isDefault",
            "description": "Filter down to the workspace default datastore.",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "names",
            "description": "Names of datastores to return.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "searchText",
            "description": "Text to search for in the datastore names.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "Order by property (createdtime | modifiedtime | name).",
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderByAsc",
            "description": "Order by property in ascending order.",
            "type": "boolean",
            "default": false
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List datastores.": {
            "$ref": "./examples/Datastore/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}": {
      "delete": {
        "tags": [
          "Datastore"
        ],
        "summary": "Delete datastore.",
        "operationId": "Datastores_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete datastore.": {
            "$ref": "./examples/Datastore/delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "Datastore"
        ],
        "summary": "Get datastore.",
        "operationId": "Datastores_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResource"
            }
          }
        },
        "x-ms-examples": {
          "Get datastore.": {
            "$ref": "./examples/Datastore/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Datastore"
        ],
        "summary": "Create or update datastore.",
        "operationId": "Datastores_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Datastore entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResource"
            }
          }
        },
        "x-ms-examples": {
          "Create or update datastore.": {
            "$ref": "./examples/Datastore/createOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}/listSecrets": {
      "post": {
        "tags": [
          "Datastore"
        ],
        "summary": "Get datastore secrets.",
        "operationId": "Datastores_ListSecrets",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastoreCredentials"
            }
          }
        },
        "x-ms-examples": {
          "Get datastore secrets.": {
            "$ref": "./examples/Datastore/listSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}/versions/{version}": {
      "put": {
        "tags": [
          "DataVersion"
        ],
        "summary": "Create or update version.",
        "operationId": "DataVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataVersionResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataVersionResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Data Version.": {
            "$ref": "./examples/DataVersion/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "DataVersion"
        ],
        "summary": "Get version.",
        "operationId": "DataVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Data Version.": {
            "$ref": "./examples/DataVersion/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DataVersion"
        ],
        "summary": "Delete version.",
        "operationId": "DataVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Data Version.": {
            "$ref": "./examples/DataVersion/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}/versions": {
      "get": {
        "tags": [
          "DataVersion"
        ],
        "summary": "List versions.",
        "operationId": "DataVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataVersionResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Data Version.": {
            "$ref": "./examples/DataVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}": {
      "put": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "EnvironmentContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Environment Container.": {
            "$ref": "./examples/EnvironmentContainer/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "Get container.",
        "operationId": "EnvironmentContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Environment Container.": {
            "$ref": "./examples/EnvironmentContainer/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "Delete container.",
        "operationId": "EnvironmentContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Environment Container.": {
            "$ref": "./examples/EnvironmentContainer/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments": {
      "get": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "List containers.",
        "operationId": "EnvironmentContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Environment Container.": {
            "$ref": "./examples/EnvironmentContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}/versions/{version}": {
      "put": {
        "tags": [
          "EnvironmentSpecification"
        ],
        "summary": "Creates or updates an EnvironmentSpecificationVersion.",
        "operationId": "EnvironmentSpecificationVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Name of EnvironmentSpecificationVersion.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version of EnvironmentSpecificationVersion.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Definition of EnvironmentSpecificationVersion.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentSpecificationVersionResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentSpecificationVersionResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentSpecificationVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Environment Specification Version.": {
            "$ref": "./examples/EnvironmentSpecificationVersion/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "EnvironmentSpecification"
        ],
        "summary": "Get version.",
        "operationId": "EnvironmentSpecificationVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentSpecificationVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Environment Specification Version.": {
            "$ref": "./examples/EnvironmentSpecificationVersion/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "EnvironmentSpecification"
        ],
        "summary": "Delete version.",
        "operationId": "EnvironmentSpecificationVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Environment Specification Version.": {
            "$ref": "./examples/EnvironmentSpecificationVersion/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}/versions": {
      "get": {
        "tags": [
          "EnvironmentSpecification"
        ],
        "summary": "List versions.",
        "operationId": "EnvironmentSpecificationVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentSpecificationVersionResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Environment Specification Version.": {
            "$ref": "./examples/EnvironmentSpecificationVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs/{id}": {
      "put": {
        "tags": [
          "Job"
        ],
        "summary": "Creates and executes a Job.",
        "operationId": "Jobs_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Job definition object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Command Job.": {
            "$ref": "./examples/CommandJob/createOrUpdate.json"
          },
          "CreateOrUpdate Sweep Job.": {
            "$ref": "./examples/SweepJob/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Gets a Job by name/id.",
        "operationId": "Jobs_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Command Job.": {
            "$ref": "./examples/CommandJob/get.json"
          },
          "Get Sweep Job.": {
            "$ref": "./examples/SweepJob/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Job"
        ],
        "summary": "Deletes a Job.",
        "operationId": "Jobs_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "204": {
            "description": "Success"
          },
          "202": {
            "description": "Success",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "default": 60,
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "200": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Command Job.": {
            "$ref": "./examples/CommandJob/delete.json"
          },
          "Delete Sweep Job.": {
            "$ref": "./examples/SweepJob/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Lists Jobs in the workspace.",
        "operationId": "Jobs_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "jobType",
            "description": "Type of job to be returned.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "tags",
            "description": "Tags for job to be returned.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "tag",
            "description": "Jobs returned will have this tag key.",
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JobBaseResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Command Job.": {
            "$ref": "./examples/CommandJob/list.json"
          },
          "List Sweep Job.": {
            "$ref": "./examples/SweepJob/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs/{id}/cancel": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Cancels a Job.",
        "operationId": "Jobs_Cancel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Cancel Command Job.": {
            "$ref": "./examples/CommandJob/cancel.json"
          },
          "Cancel Sweep Job.": {
            "$ref": "./examples/SweepJob/cancel.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}": {
      "put": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Creates or updates a labeling job.",
        "operationId": "LabelingJobs_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "LabelingJob definition object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelingJobResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LabelingJobResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LabelingJobResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Labeling Job.": {
            "$ref": "./examples/LabelingJob/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Gets a labeling job by name/id.",
        "operationId": "LabelingJobs_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "includeJobInstructions",
            "description": "Boolean value to indicate whether to include JobInstructions in response.",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeLabelCategories",
            "description": "Boolean value to indicate Whether to include LabelCategories in response.",
            "type": "boolean"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LabelingJobResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Labeling Job.": {
            "$ref": "./examples/LabelingJob/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Delete a labeling job.",
        "operationId": "LabelingJobs_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Labeling Job.": {
            "$ref": "./examples/LabelingJob/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs": {
      "get": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Lists labeling jobs in the workspace.",
        "operationId": "LabelingJobs_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Number of labeling jobs to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LabelingJobResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Labeling Job.": {
            "$ref": "./examples/LabelingJob/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}/pause": {
      "post": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Pause a labeling job.",
        "operationId": "LabelingJobs_Pause",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Pause Labeling Job.": {
            "$ref": "./examples/LabelingJob/pause.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}/resume": {
      "post": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Resume a labeling job.",
        "operationId": "LabelingJobs_Resume",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Success",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "default": 60,
                "maximum": 600,
                "minimum": 10
              }
            }
          }
        },
        "x-ms-examples": {
          "Resume Labeling Job.": {
            "$ref": "./examples/LabelingJob/resume.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}/exportLabels": {
      "post": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Export labels from a labeling job.",
        "operationId": "LabelingJobs_ExportLabels",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The export summary.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportSummary"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExportSummary"
            }
          },
          "202": {
            "description": "Success",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "default": 60,
                "maximum": 600,
                "minimum": 10
              }
            }
          }
        },
        "x-ms-examples": {
          "ExportLabels Labeling Job.": {
            "$ref": "./examples/LabelingJob/exportLabels.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models": {
      "get": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "List model containers.",
        "operationId": "ModelContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Maximum number of results to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Model Container.": {
            "$ref": "./examples/ModelContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}": {
      "put": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "ModelContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Model Container.": {
            "$ref": "./examples/ModelContainer/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Get container.",
        "operationId": "ModelContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Model Container.": {
            "$ref": "./examples/ModelContainer/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Delete container.",
        "operationId": "ModelContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Model Container.": {
            "$ref": "./examples/ModelContainer/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions": {
      "get": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "List model versions.",
        "operationId": "ModelVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Model name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Model version.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Model description.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Number of initial results to skip.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "tags",
            "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
            "type": "string"
          },
          {
            "in": "query",
            "name": "properties",
            "description": "Comma-separated list of property names (and optionally values). Example: prop1,prop2=value2",
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Model Version.": {
            "$ref": "./examples/ModelVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions/{version}": {
      "put": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Create or update version.",
        "operationId": "ModelVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Model Version.": {
            "$ref": "./examples/ModelVersion/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Get version.",
        "operationId": "ModelVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Model Version.": {
            "$ref": "./examples/ModelVersion/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Delete version.",
        "operationId": "ModelVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Model Version.": {
            "$ref": "./examples/ModelVersion/delete.json"
          }
        }
      }
    }
  },
  "definitions": {
    "CodeContainer": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "CodeContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/CodeContainer",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "additionalProperties": false
    },
    "InnerErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "innerError": {
          "$ref": "#/definitions/InnerErrorResponse"
        }
      },
      "additionalProperties": false
    },
    "RootError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "severity": {
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "messageFormat": {
          "type": "string"
        },
        "messageParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "referenceCode": {
          "type": "string"
        },
        "detailsUri": {
          "format": "uri",
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RootError"
          }
        },
        "innerError": {
          "$ref": "#/definitions/InnerErrorResponse"
        }
      },
      "additionalProperties": false
    },
    "CodeContainerResourceArmPaginatedResult": {
      "description": "A paginated list of CodeContainer entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type CodeContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeContainerResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "AssetPath": {
      "description": "Details of an AssetUri.",
      "required": [
        "path"
      ],
      "type": "object",
      "properties": {
        "path": {
          "description": "The path of file/directory.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "isDirectory": {
          "description": "Whether the path defines a directory or a single file.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "CodeVersion": {
      "description": "Details of an RegisteredCode",
      "type": "object",
      "properties": {
        "datastoreId": {
          "description": "The asset datastoreId",
          "type": "string"
        },
        "assetPath": {
          "description": "Details of asset path in the datastore.",
          "$ref": "#/definitions/AssetPath"
        },
        "generatedBy": {
          "description": "How this asset was generated",
          "enum": [
            "User",
            "System"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "AssetGenerator",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "read"
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "CodeVersionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/CodeVersion",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "additionalProperties": false
    },
    "CodeVersionResourceArmPaginatedResult": {
      "description": "A paginated list of CodeVersion entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type CodeVersion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeVersionResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "DataContainer": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "DataContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/DataContainer",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "additionalProperties": false
    },
    "DataContainerResourceArmPaginatedResult": {
      "description": "A paginated list of DataContainer entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type DataContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataContainerResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "AccountKeySection": {
      "type": "object",
      "properties": {
        "key": {
          "description": "Storage account key.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      },
      "additionalProperties": false
    },
    "CertificateSection": {
      "required": [
        "clientId",
        "tenantId",
        "thumbprint"
      ],
      "type": "object",
      "properties": {
        "authorityUrl": {
          "description": "Authority URL used for authentication.",
          "type": "string"
        },
        "resourceUri": {
          "description": "Resource the service principal has access to.",
          "type": "string"
        },
        "tenantId": {
          "format": "uuid",
          "description": "ID of the tenant to which the service principal belongs.",
          "type": "string"
        },
        "clientId": {
          "format": "uuid",
          "description": "Service principal client ID.",
          "type": "string"
        },
        "certificate": {
          "description": "Service principal certificate.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        },
        "thumbprint": {
          "description": "Thumbprint of the certificate used for authentication.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "SasSection": {
      "type": "object",
      "properties": {
        "sasToken": {
          "description": "Storage container SAS token.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      },
      "additionalProperties": false
    },
    "ServicePrincipalSection": {
      "required": [
        "clientId",
        "tenantId"
      ],
      "type": "object",
      "properties": {
        "authorityUrl": {
          "description": "Authority URL used for authentication.",
          "type": "string"
        },
        "resourceUri": {
          "description": "Resource the service principal has access to.",
          "type": "string"
        },
        "tenantId": {
          "format": "uuid",
          "description": "ID of the tenant to which the service principal belongs.",
          "type": "string"
        },
        "clientId": {
          "format": "uuid",
          "description": "Service principal client ID.",
          "type": "string"
        },
        "clientSecret": {
          "description": "Service principal secret.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      },
      "additionalProperties": false
    },
    "SqlAdminSection": {
      "required": [
        "userId"
      ],
      "type": "object",
      "properties": {
        "userId": {
          "description": "SQL database user name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "password": {
          "description": "SQL database password.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      },
      "additionalProperties": false
    },
    "DatastoreCredentials": {
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "Credential type used to authentication with storage.",
          "enum": [
            "AccountKey",
            "Certificate",
            "None",
            "Sas",
            "ServicePrincipal",
            "SqlAdmin"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CredentialsType",
            "modelAsString": true
          }
        },
        "accountKey": {
          "description": "Storage account key authentication.",
          "$ref": "#/definitions/AccountKeySection"
        },
        "certificate": {
          "description": "Service principal certificate authentication.",
          "$ref": "#/definitions/CertificateSection"
        },
        "sas": {
          "description": "Storage container SAS token authentication.",
          "$ref": "#/definitions/SasSection"
        },
        "servicePrincipal": {
          "description": "Service principal password authentication.",
          "$ref": "#/definitions/ServicePrincipalSection"
        },
        "sqlAdmin": {
          "description": "SQL user/password authentication.",
          "$ref": "#/definitions/SqlAdminSection"
        }
      },
      "additionalProperties": false
    },
    "AzureDataLakeSection": {
      "required": [
        "credentials",
        "storeName"
      ],
      "type": "object",
      "properties": {
        "credentials": {
          "description": "Azure Data Lake credentials.",
          "$ref": "#/definitions/DatastoreCredentials"
        },
        "storeName": {
          "description": "Azure Data Lake store name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "AzureMySqlSection": {
      "required": [
        "credentials",
        "databaseName",
        "endpoint",
        "portNumber",
        "serverName"
      ],
      "type": "object",
      "properties": {
        "credentials": {
          "description": "Azure SQL database credentials.",
          "$ref": "#/definitions/DatastoreCredentials"
        },
        "databaseName": {
          "description": "Azure SQL database name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "endpoint": {
          "description": "Azure cloud endpoint for the database.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "example": "database.windows.net",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "portNumber": {
          "format": "int32",
          "description": "Azure SQL server port.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "serverName": {
          "description": "Azure SQL server name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "AzurePostgreSqlSection": {
      "required": [
        "credentials",
        "databaseName",
        "endpoint",
        "portNumber",
        "serverName"
      ],
      "type": "object",
      "properties": {
        "enableSSL": {
          "description": "Whether the Azure PostgreSQL server requires SSL.",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "credentials": {
          "description": "Azure SQL database credentials.",
          "$ref": "#/definitions/DatastoreCredentials"
        },
        "databaseName": {
          "description": "Azure SQL database name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "endpoint": {
          "description": "Azure cloud endpoint for the database.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "example": "database.windows.net",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "portNumber": {
          "format": "int32",
          "description": "Azure SQL server port.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "serverName": {
          "description": "Azure SQL server name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "AzureSqlDatabaseSection": {
      "required": [
        "credentials",
        "databaseName",
        "endpoint",
        "portNumber",
        "serverName"
      ],
      "type": "object",
      "properties": {
        "credentials": {
          "description": "Azure SQL database credentials.",
          "$ref": "#/definitions/DatastoreCredentials"
        },
        "databaseName": {
          "description": "Azure SQL database name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "endpoint": {
          "description": "Azure cloud endpoint for the database.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "example": "database.windows.net",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "portNumber": {
          "format": "int32",
          "description": "Azure SQL server port.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "serverName": {
          "description": "Azure SQL server name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "AzureStorageSection": {
      "required": [
        "accountName",
        "containerName",
        "credentials",
        "endpoint",
        "protocol"
      ],
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Storage account name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "blobCacheTimeout": {
          "format": "int32",
          "description": "Blob storage cache timeout.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "containerName": {
          "description": "Storage account container name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "credentials": {
          "description": "Storage account credentials.",
          "$ref": "#/definitions/DatastoreCredentials"
        },
        "endpoint": {
          "description": "Azure cloud endpoint for the storage account.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "example": "core.windows.net",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "protocol": {
          "description": "Protocol used to communicate with the storage account.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "example": "https",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "GlusterFsSection": {
      "required": [
        "serverAddress",
        "volumeName"
      ],
      "type": "object",
      "properties": {
        "serverAddress": {
          "description": "GlusterFS server address (can be the IP address or server name).",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "volumeName": {
          "description": "GlusterFS volume name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "DatastoreContents": {
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "Storage type backing the datastore.",
          "enum": [
            "AzureBlob",
            "AzureDataLake",
            "AzureDataLakeGen2",
            "AzureFile",
            "AzureMySql",
            "AzurePostgreSql",
            "AzureSqlDatabase",
            "GlusterFs"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ContentsType",
            "modelAsString": true
          }
        },
        "azureDataLake": {
          "description": "Azure Data Lake (Gen1/2) storage information.",
          "$ref": "#/definitions/AzureDataLakeSection"
        },
        "azureMySql": {
          "description": "Azure Database for MySQL information.",
          "$ref": "#/definitions/AzureMySqlSection"
        },
        "azurePostgreSql": {
          "description": "Azure Database for PostgreSQL information.",
          "$ref": "#/definitions/AzurePostgreSqlSection"
        },
        "azureSqlDatabase": {
          "description": "Azure SQL Database information.",
          "$ref": "#/definitions/AzureSqlDatabaseSection"
        },
        "azureStorage": {
          "description": "Azure storage account (blobs, files) information.",
          "$ref": "#/definitions/AzureStorageSection"
        },
        "glusterFs": {
          "description": "GlusterFS volume information.",
          "$ref": "#/definitions/GlusterFsSection"
        }
      },
      "additionalProperties": false
    },
    "LinkedInfo": {
      "type": "object",
      "properties": {
        "linkedId": {
          "description": "Linked service ID.",
          "type": "string"
        },
        "linkedResourceName": {
          "description": "Linked service resource name.",
          "type": "string"
        },
        "origin": {
          "description": "Type of the linked service.",
          "enum": [
            "Synapse"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "OriginType",
            "modelAsString": true
          }
        }
      },
      "additionalProperties": false
    },
    "DatastoreProperties": {
      "required": [
        "contents"
      ],
      "type": "object",
      "properties": {
        "contents": {
          "description": "Reference to the datastore storage contents.",
          "$ref": "#/definitions/DatastoreContents"
        },
        "hasBeenValidated": {
          "description": "Whether the service has validated access to the datastore with the provided credentials.",
          "type": "boolean",
          "readOnly": true
        },
        "isDefault": {
          "description": "Whether this datastore is the default for the workspace.",
          "type": "boolean"
        },
        "linkedInfo": {
          "description": "Information about the datastore origin, if linked.",
          "$ref": "#/definitions/LinkedInfo"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "DatastorePropertiesResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/DatastoreProperties",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "additionalProperties": false
    },
    "DatastorePropertiesResourceArmPaginatedResult": {
      "description": "A paginated list of DatastoreProperties entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type DatastoreProperties.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatastorePropertiesResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "DataVersion": {
      "description": "Details of an DatasetDto",
      "type": "object",
      "properties": {
        "datasetType": {
          "description": "The Format of dataset.",
          "enum": [
            "Simple",
            "Dataflow"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DatasetType",
            "modelAsString": true
          }
        },
        "datastoreId": {
          "description": "The asset datastoreId",
          "type": "string"
        },
        "assetPath": {
          "description": "Details of asset path in the datastore.",
          "$ref": "#/definitions/AssetPath"
        },
        "generatedBy": {
          "description": "How this asset was generated",
          "enum": [
            "User",
            "System"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "AssetGenerator",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "read"
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "DataVersionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/DataVersion",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "additionalProperties": false
    },
    "DataVersionResourceArmPaginatedResult": {
      "description": "A paginated list of DataVersion entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type DataVersion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataVersionResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "EnvironmentContainer": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "EnvironmentContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/EnvironmentContainer",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "additionalProperties": false
    },
    "EnvironmentContainerResourceArmPaginatedResult": {
      "description": "A paginated list of EnvironmentContainer entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type EnvironmentContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentContainerResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "DockerSpecification": {
      "description": "Class to represent configuration settings for Docker",
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "Docker specification must be either Build or Image",
          "enum": [
            "Build",
            "Image"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DockerSpecificationType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "type",
      "additionalProperties": false
    },
    "DockerImage": {
      "description": "Class to represent configuration settings for Docker Build",
      "required": [
        "dockerImageUri"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DockerSpecification"
        }
      ],
      "properties": {
        "dockerImageUri": {
          "description": "Image name of a custom base image.\r\n<seealso href=\"https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image\" />",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "Image",
      "additionalProperties": false
    },
    "DockerBuild": {
      "description": "Class to represent configuration settings for Docker Build",
      "required": [
        "dockerfile"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DockerSpecification"
        }
      ],
      "properties": {
        "dockerfile": {
          "description": "Docker command line instructions to assemble an image.\r\n<seealso href=\"https://repo2docker.readthedocs.io/en/latest/config_files.html#dockerfile-advanced-environments\" />",
          "type": "string"
        },
        "context": {
          "description": "Path to a snapshot of the Docker Context. This property is only valid if Dockerfile is specified.\r\nThe path is relative to AssetPaths which must contain a single Blob URI value.\r\nMicrosoft.MachineLearning.ManagementFrontEnd.Contracts.Assets.Asset.AssetPath<seealso href=\"https://docs.docker.com/engine/context/working-with-contexts/\" />",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "Build",
      "additionalProperties": false
    },
    "EnvironmentSpecificationVersion": {
      "description": "Data Transfer Object (DTO) for an Execution Environment Specification. Name and\r\nversion should default to the AzureML-Minimal environment version tested with the\r\ncurrent SDK client version as this is a main use-case.\r\n<see href=\"https://repo2docker.readthedocs.io/en/latest/specification.html\" />",
      "type": "object",
      "properties": {
        "type": {
          "description": "Environment specification is either user managed or curated by the Azure ML service\r\n<see href=\"https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments\" />",
          "enum": [
            "Curated",
            "UserCreated"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "EnvironmentSpecificationType",
            "modelAsString": true
          }
        },
        "docker": {
          "$ref": "#/definitions/DockerSpecification"
        },
        "condaFile": {
          "description": "Standard configuration file used by conda that lets you install any kind of package, including Python, R, and C/C++ packages\r\n<see href=\"https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment\" />",
          "type": "string"
        },
        "datastoreId": {
          "description": "The asset datastoreId",
          "type": "string"
        },
        "assetPath": {
          "description": "Details of asset path in the datastore.",
          "$ref": "#/definitions/AssetPath"
        },
        "generatedBy": {
          "description": "How this asset was generated",
          "enum": [
            "User",
            "System"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "AssetGenerator",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "read"
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "EnvironmentSpecificationVersionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/EnvironmentSpecificationVersion",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "additionalProperties": false
    },
    "EnvironmentSpecificationVersionResourceArmPaginatedResult": {
      "description": "A paginated list of EnvironmentSpecificationVersion entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type EnvironmentSpecificationVersion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentSpecificationVersionResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ComputeBinding": {
      "description": "Compute binding definition.",
      "type": "object",
      "properties": {
        "computeId": {
          "description": "Resource ID of the compute resource.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "nodeCount": {
          "format": "int32",
          "description": "Number of nodes.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "isLocal": {
          "description": "Set to true for jobs running on local compute.",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "JobOutput": {
      "type": "object",
      "properties": {
        "datastoreId": {
          "description": "ARM ID of the datastore where the job logs and artifacts are stored, or null for the default container (\"azureml\") in the workspace's storage account.",
          "type": "string",
          "readOnly": true
        },
        "path": {
          "description": "Path within the datastore to the job logs and artifacts.",
          "type": "string",
          "readOnly": true
        }
      },
      "additionalProperties": false
    },
    "JobBase": {
      "description": "Job base definition",
      "required": [
        "jobType"
      ],
      "type": "object",
      "properties": {
        "jobType": {
          "description": "Specifies the type of job.",
          "enum": [
            "Command",
            "Sweep",
            "Labeling",
            "Pipeline",
            "Data",
            "AutoML"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "JobType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "provisioningState": {
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "InProgress"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "JobProvisioningState",
            "modelAsString": true
          }
        },
        "interactionEndpoints": {
          "description": "Dictionary of endpoint URIs, keyed by enumerated job endpoints.\r\nFor local jobs, a job endpoint will have a value of FileStreamObject.",
          "type": "object",
          "properties": {
            "Tracking": {
              "format": "uri",
              "type": "string"
            },
            "Studio": {
              "format": "uri",
              "type": "string"
            },
            "Grafana": {
              "format": "uri",
              "type": "string"
            },
            "Tensorboard": {
              "format": "uri",
              "type": "string"
            },
            "Local": {
              "format": "uri",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "discriminator": "jobType",
      "additionalProperties": false
    },
    "ComputeJobBase": {
      "description": "Compute job base definition",
      "required": [
        "computeBinding",
        "jobType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobBase"
        }
      ],
      "properties": {
        "experimentName": {
          "description": "The name of the experiment the job belongs to. If not set, the job is placed in the \"Default\" experiment.",
          "type": "string"
        },
        "computeBinding": {
          "description": "Compute binding for the job.",
          "$ref": "#/definitions/ComputeBinding"
        },
        "output": {
          "description": "Location of the job output logs and artifacts.",
          "$ref": "#/definitions/JobOutput",
          "readOnly": true
        },
        "priority": {
          "format": "int32",
          "description": "Job priority for scheduling policy. Only applies to AMLCompute.\r\nPrivate preview  is only for whitelisted customers",
          "type": "integer"
        }
      },
      "discriminator": "jobType",
      "additionalProperties": false
    },
    "CodeConfiguration": {
      "required": [
        "command"
      ],
      "type": "object",
      "properties": {
        "codeArtifactId": {
          "description": "The ID of the code asset.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "command": {
          "description": "The command to execute on startup of the job. eg. [\"python\", \"train.py\"]",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "DataBinding": {
      "description": "Data binding definition.",
      "type": "object",
      "properties": {
        "sourceDataReference": {
          "description": "Reference to source data artifact.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "localReference": {
          "description": "Location of data inside the container process.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "mode": {
          "description": "Mechanism for accessing the data artifact.",
          "enum": [
            "Mount",
            "Download",
            "Upload"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataBindingMode",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "DistributionConfiguration": {
      "required": [
        "distributionType"
      ],
      "type": "object",
      "properties": {
        "distributionType": {
          "description": "Specifies the type of distribution framework.",
          "enum": [
            "PyTorch",
            "TensorFlow",
            "Mpi"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DistributionType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "distributionType",
      "additionalProperties": false
    },
    "TensorFlow": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DistributionConfiguration"
        }
      ],
      "properties": {
        "workerCount": {
          "format": "int32",
          "description": "Number of workers. Overwrites the node count in compute binding.",
          "type": "integer"
        },
        "parameterServerCount": {
          "format": "int32",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "TensorFlow",
      "additionalProperties": false
    },
    "Mpi": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DistributionConfiguration"
        }
      ],
      "properties": {
        "processCountPerInstance": {
          "format": "int32",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "Mpi",
      "additionalProperties": false
    },
    "PyTorch": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DistributionConfiguration"
        }
      ],
      "properties": {
        "processCount": {
          "format": "int32",
          "description": "Total process count for the distributed job.",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "PyTorch",
      "additionalProperties": false
    },
    "IdentityConfiguration": {
      "required": [
        "identityType"
      ],
      "type": "object",
      "properties": {
        "identityType": {
          "description": "Specifies the type of identity framework.",
          "enum": [
            "Managed",
            "ServicePrincipal",
            "AMLToken"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IdentityType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "identityType",
      "additionalProperties": false
    },
    "AmlTokenConfiguration": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IdentityConfiguration"
        }
      ],
      "x-ms-discriminator-value": "AMLToken",
      "additionalProperties": false
    },
    "ManagedIdentityConfiguration": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IdentityConfiguration"
        }
      ],
      "properties": {
        "clientId": {
          "format": "uuid",
          "description": "Specifies a user-assigned identity by client ID. For system-assigned, do not set this field.",
          "type": "string"
        },
        "objectId": {
          "format": "uuid",
          "description": "Specifies a user-assigned identity by object ID. For system-assigned, do not set this field.",
          "type": "string"
        },
        "msiResourceId": {
          "description": "Specifies a user-assigned identity by resource ID. For system-assigned, do not set this field.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "Managed",
      "additionalProperties": false
    },
    "ServicePrincipalConfiguration": {
      "required": [
        "secret"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IdentityConfiguration"
        }
      ],
      "properties": {
        "secret": {
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "ServicePrincipal",
      "additionalProperties": false
    },
    "CommandJob": {
      "description": "Code Job definition",
      "required": [
        "codeConfiguration",
        "computeBinding"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ComputeJobBase"
        }
      ],
      "properties": {
        "jobType": {
          "enum": [
            "Command",
            "Sweep",
            "Labeling",
            "Pipeline",
            "Data",
            "AutoML"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "JobType",
            "modelAsString": true
          }
        },
        "status": {
          "description": "Status of the job.",
          "enum": [
            "NotStarted",
            "Starting",
            "Provisioning",
            "Preparing",
            "Queued",
            "Running",
            "Finalizing",
            "CancelRequested",
            "Completed",
            "Failed",
            "Canceled",
            "NotResponding",
            "Paused"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": true
          }
        },
        "maxRunDurationSeconds": {
          "format": "int64",
          "description": "The max run duration in seconds, after which the job will be cancelled.",
          "type": "integer"
        },
        "codeConfiguration": {
          "description": "Code configuration of the job.",
          "$ref": "#/definitions/CodeConfiguration"
        },
        "environmentId": {
          "description": "Environment specification of the job.",
          "type": "string"
        },
        "dataBindings": {
          "description": "Mapping of data bindings used in the job.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DataBinding"
          }
        },
        "distributionConfiguration": {
          "$ref": "#/definitions/DistributionConfiguration"
        },
        "identityConfiguration": {
          "$ref": "#/definitions/IdentityConfiguration"
        },
        "parameters": {
          "description": "Input parameters.",
          "type": "object",
          "additionalProperties": {},
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "Command",
      "additionalProperties": false
    },
    "ParameterSamplingConfiguration": {
      "description": "class for all hyperparameter sampling algorithms",
      "required": [
        "parameterSpace",
        "samplingType"
      ],
      "type": "object",
      "properties": {
        "parameterSpace": {
          "description": "A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter",
          "type": "object"
        },
        "samplingType": {
          "description": "Type of the hyperparameter sampling algorithms",
          "enum": [
            "Grid",
            "Random",
            "Bayesian"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ParameterSamplingType",
            "modelAsString": true
          }
        }
      },
      "additionalProperties": false
    },
    "EarlyTerminationPolicyConfiguration": {
      "description": "Early termination policies enable canceling poor-performing runs before they complete",
      "required": [
        "policyType"
      ],
      "type": "object",
      "properties": {
        "policyType": {
          "description": "Name of policy configuration",
          "enum": [
            "Bandit",
            "MedianStopping",
            "TruncationSelection"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EarlyTerminationPolicyType",
            "modelAsString": true
          }
        },
        "evaluationInterval": {
          "format": "int32",
          "type": "integer"
        },
        "delayEvaluation": {
          "format": "int32",
          "type": "integer"
        }
      },
      "discriminator": "policyType",
      "additionalProperties": false
    },
    "BanditPolicyConfiguration": {
      "description": "Defines an early termination policy based on slack criteria, and a frequency and delay interval for evaluation",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EarlyTerminationPolicyConfiguration"
        }
      ],
      "properties": {
        "slackFactor": {
          "format": "float",
          "type": "number"
        },
        "slackAmount": {
          "format": "float",
          "type": "number"
        }
      },
      "x-ms-discriminator-value": "Bandit",
      "additionalProperties": false
    },
    "MedianStoppingPolicyConfiguration": {
      "description": "Defines an early termination policy based on running averages of the primary metric of all runs",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EarlyTerminationPolicyConfiguration"
        }
      ],
      "x-ms-discriminator-value": "MedianStopping",
      "additionalProperties": false
    },
    "TruncationSelectionPolicyConfiguration": {
      "description": "Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EarlyTerminationPolicyConfiguration"
        }
      ],
      "properties": {
        "truncationPercentage": {
          "format": "int32",
          "type": "integer"
        },
        "excludeFinishedJobs": {
          "type": "boolean"
        }
      },
      "x-ms-discriminator-value": "TruncationSelection",
      "additionalProperties": false
    },
    "TerminationConfiguration": {
      "type": "object",
      "properties": {
        "maxTotalRuns": {
          "format": "int32",
          "type": "integer"
        },
        "maxConcurrentRuns": {
          "format": "int32",
          "type": "integer"
        },
        "maxDurationMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "earlyTerminationPolicyConfiguration": {
          "$ref": "#/definitions/EarlyTerminationPolicyConfiguration"
        }
      },
      "additionalProperties": false
    },
    "EvaluationConfiguration": {
      "required": [
        "primaryMetricGoal",
        "primaryMetricName"
      ],
      "type": "object",
      "properties": {
        "primaryMetricName": {
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "primaryMetricGoal": {
          "description": "Defines supported metric goals for hyperparameter tuning",
          "enum": [
            "Minimize",
            "Maximize"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PrimaryMetricGoal",
            "modelAsString": true
          }
        }
      },
      "additionalProperties": false
    },
    "TrialComponent": {
      "type": "object",
      "properties": {
        "codeConfiguration": {
          "description": "Code configuration of the job.",
          "$ref": "#/definitions/CodeConfiguration"
        },
        "environmentId": {
          "description": "Environment id of the job.",
          "type": "string"
        },
        "dataBindings": {
          "description": "Mapping of data bindings used in the job.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DataBinding"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "distributionConfiguration": {
          "$ref": "#/definitions/DistributionConfiguration"
        },
        "identityConfiguration": {
          "$ref": "#/definitions/IdentityConfiguration"
        }
      },
      "additionalProperties": false
    },
    "SweepJob": {
      "required": [
        "computeBinding",
        "evaluationConfiguration",
        "parameterSamplingConfiguration"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ComputeJobBase"
        }
      ],
      "properties": {
        "jobType": {
          "enum": [
            "Command",
            "Sweep",
            "Labeling",
            "Pipeline",
            "Data",
            "AutoML"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "JobType",
            "modelAsString": true
          }
        },
        "status": {
          "description": "The status of a job.",
          "enum": [
            "NotStarted",
            "Starting",
            "Provisioning",
            "Preparing",
            "Queued",
            "Running",
            "Finalizing",
            "CancelRequested",
            "Completed",
            "Failed",
            "Canceled",
            "NotResponding",
            "Paused"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": true
          }
        },
        "parameterSamplingConfiguration": {
          "description": "class for all hyperparameter sampling algorithms",
          "$ref": "#/definitions/ParameterSamplingConfiguration"
        },
        "terminationConfiguration": {
          "$ref": "#/definitions/TerminationConfiguration"
        },
        "evaluationConfiguration": {
          "$ref": "#/definitions/EvaluationConfiguration"
        },
        "trialComponent": {
          "$ref": "#/definitions/TrialComponent"
        }
      },
      "x-ms-discriminator-value": "Sweep",
      "additionalProperties": false
    },
    "LabelClass": {
      "description": "Label class definition",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name of the label class.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "subclasses": {
          "description": "Dictionary of subclasses of the label class.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LabelClass"
          },
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      },
      "additionalProperties": false
    },
    "LabelCategory": {
      "description": "Label category definition",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name of the label category.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "allowMultiSelect": {
          "description": "Indicates whether it is allowed to select multiple classes in this category.",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "classes": {
          "description": "Dictionary of label classes in this category.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LabelClass"
          },
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      },
      "additionalProperties": false
    },
    "LabelingJobInstructions": {
      "description": "Instructions for labeling job",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The link to a page with detailed labeling instructions for labelers.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      },
      "additionalProperties": false
    },
    "LabelingDatasetConfiguration": {
      "description": "Labeling dataset configuration definition",
      "type": "object",
      "properties": {
        "assetName": {
          "description": "Name of the data asset to perform labeling.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "incrementalDatasetRefreshEnabled": {
          "description": "Indicates whether to enable incremental dataset refresh.",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "datasetVersion": {
          "description": "AML dataset version.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "MLAssistConfiguration": {
      "description": "Labeling MLAssist configuration definition",
      "type": "object",
      "properties": {
        "inferencingComputeBinding": {
          "description": "AML compute binding used in inferencing.",
          "$ref": "#/definitions/ComputeBinding",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "trainingComputeBinding": {
          "description": "AML compute binding used in training.",
          "$ref": "#/definitions/ComputeBinding",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "mlAssistEnabled": {
          "description": "Indicates whether MLAssist feature is enabled.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "LabelingJobMediaProperties": {
      "description": "Properties of a labeling job",
      "required": [
        "mediaType"
      ],
      "type": "object",
      "properties": {
        "mediaType": {
          "description": "Media type of the job.",
          "enum": [
            "Image",
            "Text"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MediaType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "mediaType",
      "additionalProperties": false
    },
    "LabelingJobImageProperties": {
      "description": "Properties of a labeling job for image data",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LabelingJobMediaProperties"
        }
      ],
      "properties": {
        "annotationType": {
          "description": "Annotation type of image labeling job.",
          "enum": [
            "Classification",
            "BoundingBox",
            "InstanceSegmentation"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ImageAnnotationType",
            "modelAsString": true
          }
        }
      },
      "x-ms-discriminator-value": "Image",
      "additionalProperties": false
    },
    "LabelingJobTextProperties": {
      "description": "Properties of a labeling job for text data",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LabelingJobMediaProperties"
        }
      ],
      "properties": {
        "annotationType": {
          "description": "Annotation type of text labeling job.",
          "enum": [
            "Classification"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TextAnnotationType",
            "modelAsString": true
          }
        }
      },
      "x-ms-discriminator-value": "Text",
      "additionalProperties": false
    },
    "ProgressMetrics": {
      "description": "Progress metrics definition",
      "type": "object",
      "properties": {
        "totalDatapointCount": {
          "format": "int64",
          "description": "The total datapoint count.",
          "type": "integer",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "completedDatapointCount": {
          "format": "int64",
          "description": "The completed datapoint count.",
          "type": "integer",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "skippedDatapointCount": {
          "format": "int64",
          "description": "The skipped datapoint count.",
          "type": "integer",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "incrementalDatasetLastRefreshTime": {
          "format": "date-time",
          "description": "The time of last successful incremental dataset refresh in UTC.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "StatusMessage": {
      "description": "Active message associated with project",
      "type": "object",
      "properties": {
        "level": {
          "description": "Severity level of message.",
          "enum": [
            "Error",
            "Information",
            "Warning"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "StatusMessageLevel",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "read"
          ]
        },
        "code": {
          "description": "Service-defined message code.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "message": {
          "description": "A human-readable representation of the message code.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "createdTimeUtc": {
          "format": "date-time",
          "description": "Time in UTC at which the message was created.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "LabelingJob": {
      "description": "Labeling job definition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobBase"
        }
      ],
      "properties": {
        "labelCategories": {
          "description": "Label categories of the job.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LabelCategory"
          }
        },
        "jobInstructions": {
          "description": "Labeling instructions of the job.",
          "$ref": "#/definitions/LabelingJobInstructions"
        },
        "datasetConfiguration": {
          "description": "Configuration of dataset used in the job.",
          "$ref": "#/definitions/LabelingDatasetConfiguration"
        },
        "mlAssistConfiguration": {
          "description": "Configuration of MLAssist feature in the job.",
          "$ref": "#/definitions/MLAssistConfiguration"
        },
        "labelingJobMediaProperties": {
          "$ref": "#/definitions/LabelingJobMediaProperties"
        },
        "projectId": {
          "format": "uuid",
          "description": "Internal id of the job(Previously called project).",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Status of the job.",
          "enum": [
            "NotStarted",
            "Starting",
            "Provisioning",
            "Preparing",
            "Queued",
            "Running",
            "Finalizing",
            "CancelRequested",
            "Completed",
            "Failed",
            "Canceled",
            "NotResponding",
            "Paused"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": true
          }
        },
        "progressMetrics": {
          "description": "Progress metrics of the job.",
          "$ref": "#/definitions/ProgressMetrics",
          "readOnly": true
        },
        "statusMessages": {
          "description": "Status messages of the job.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusMessage"
          },
          "readOnly": true
        },
        "createdTimeUtc": {
          "format": "date-time",
          "description": "Created time of the job in UTC timezone.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "Labeling",
      "additionalProperties": false
    },
    "JobBaseResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobBase"
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "additionalProperties": false
    },
    "JobBaseResourceArmPaginatedResult": {
      "description": "A paginated list of JobBase entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type JobBase.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobBaseResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "LabelingJobResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/LabelingJob",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "additionalProperties": false
    },
    "LabelingJobResourceArmPaginatedResult": {
      "description": "A paginated list of LabelingJob entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type LabelingJob.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LabelingJobResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ExportSummary": {
      "required": [
        "format"
      ],
      "type": "object",
      "properties": {
        "format": {
          "description": "The format of exported labels, also as the discriminator.",
          "enum": [
            "Dataset",
            "Coco",
            "CSV"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ExportFormatType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "labelingJobId": {
          "description": "Name and identifier of the job containing exported labels.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "exportedRowCount": {
          "format": "int64",
          "description": "The total number of labeled datapoints exported.",
          "type": "integer",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "startTimeUtc": {
          "format": "date-time",
          "description": "The time when the export was requested.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "endTimeUtc": {
          "format": "date-time",
          "description": "The time when the export was completed.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "discriminator": "format",
      "additionalProperties": false
    },
    "CocoExportSummary": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ExportSummary"
        }
      ],
      "properties": {
        "snapshotPath": {
          "description": "The output path where the labels will be exported.",
          "type": "string",
          "readOnly": true
        },
        "containerName": {
          "description": "The container name to which the labels will be exported.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "Coco",
      "additionalProperties": false
    },
    "CsvExportSummary": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ExportSummary"
        }
      ],
      "properties": {
        "snapshotPath": {
          "description": "The output path where the labels will be exported.",
          "type": "string",
          "readOnly": true
        },
        "containerName": {
          "description": "The container name to which the labels will be exported.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "CSV",
      "additionalProperties": false
    },
    "DatasetExportSummary": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ExportSummary"
        }
      ],
      "properties": {
        "labeledAssetName": {
          "description": "The unique name of the labeled data asset.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "Dataset",
      "additionalProperties": false
    },
    "ModelContainer": {
      "type": "object",
      "properties": {
        "latestVersions": {
          "description": "Latest model versions for each stage. Key is the model stage, value is the model version ARM ID.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "ModelContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/ModelContainer",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "additionalProperties": false
    },
    "ModelContainerResourceArmPaginatedResult": {
      "description": "A paginated list of ModelContainer entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type ModelContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelContainerResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ModelVersion": {
      "description": "Details of an ModelDto",
      "type": "object",
      "properties": {
        "stage": {
          "description": "Model asset stage.",
          "type": "string"
        },
        "flavors": {
          "description": "Dictionary mapping model flavors to their properties.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "datastoreId": {
          "description": "The asset datastoreId",
          "type": "string"
        },
        "assetPath": {
          "description": "Details of asset path in the datastore.",
          "$ref": "#/definitions/AssetPath"
        },
        "generatedBy": {
          "description": "How this asset was generated",
          "enum": [
            "User",
            "System"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "AssetGenerator",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "read"
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "ModelVersionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/ModelVersion",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "additionalProperties": false
    },
    "ModelVersionResourceArmPaginatedResult": {
      "description": "A paginated list of ModelVersion entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type ModelVersion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelVersionResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "description": "Azure Active Directory OAuth2 Flow."
    }
  }
}
