{
  "swagger": "2.0",
  "info": {
    "title": "Azure Machine Learning Workspaces",
    "description": "These APIs allow end users to operate on Azure Machine Learning Workspace resources.",
    "version": "2020-05-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/inferenceEndpoints": {
      "get": {
        "tags": [
          "MachineLearningInferenceEndpoints"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "operationId": "MachineLearningInferenceEndpoints_ListInferenceEndpoints",
        "description": "Gets Inference Endpoints.",
        "x-ms-examples": {
          "Get Endpoints": {
            "$ref": "./examples/getInferenceEndpoints.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response includes a paginated array of Machine Learning Inference Endpoints.",
            "schema": {
              "$ref": "#/definitions/PaginatedInferenceEndpointsList"
            }
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/inferenceEndpoints/{inferenceEndpointName}": {
      "get": {
        "tags": [
          "MachineLearningInferenceEndpoints"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "operationId": "MachineLearningInferenceEndpoint_Get",
        "description": "Gets Details in specified Inference Endpoint.",
        "x-ms-examples": {
          "Get Endpoint": {
            "$ref": "./examples/getInferenceEndpoint.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response includes a Machine Learning Inference Endpoint based on InferenceEndpointName, if any.",
            "schema": {
              "$ref": "#/definitions/InferenceEndpointResource"
            }
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MachineLearningInferenceEndpoints"
        ],
        "operationId": "MachineLearningInferenceEndpoint_Delete",
        "description": "Delete a specific Inference Endpoint.",
        "x-ms-examples": {
          "Delete Endpoint": {
            "$ref": "./examples/deleteInferenceEndpoint.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource exists and was deleted successfully."
          },
          "204": {
            "description": "The resource does not exist and the request was well formed."
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "MachineLearningInferenceEndpoints"
        ],
        "description": "Creates or updates an Inference Endpoint. This call will update an Inference Endpoint if it exists. This is a nonrecoverable operation. If your intent is to create a new Inference Endpoint, do a GET first to verify that it does not exist yet.",
        "operationId": "MachineLearningInferenceEndpoint_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create Or Update Endpoint": {
            "$ref": "./examples/createOrUpdateInferenceEndpoint.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointNameParameter"
          },
          {
            "in": "body",
            "name": "properties",
            "description": "The payload that is used to create or update the Inference Endpoint.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InferenceEndpointCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Inference Endpoint creation or update initiated.",
            "schema": {
              "$ref": "#/definitions/InferenceEndpointResource"
            }
          },
          "201": {
            "description": "Inference Endpoint creation or update initiated.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/inferenceEndpoints/{inferenceEndpointName}/validate": {
      "post": {
        "tags": [
          "MachineLearningInferenceEndpoints"
        ],
        "summary": "Validate if a resource can be created.",
        "description": "Description for Validate if a resource can be created.",
        "operationId": "MachineLearningInferenceEndpoint_Validate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ValidateResponse"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/inferenceEndpoints/{inferenceEndpointName}/deployments": {
      "get": {
        "tags": [
          "MachineLearningInferenceDeployments"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "operationId": "MachineLearningInferenceDeployments_ListByInferenceEndpoint",
        "description": "Gets Inference Deployments.",
        "x-ms-examples": {
          "Get Deployments": {
            "$ref": "./examples/getDeployments.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response includes a paginated array of Machine Learning Inference Deployments.",
            "schema": {
              "$ref": "#/definitions/PaginatedInferenceDeploymentsList"
            }
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/inferenceEndpoints/{inferenceEndpointName}/deployments/{deploymentName}": {
      "get": {
        "tags": [
          "MachineLearningInferenceDeployments"
        ],
        "operationId": "MachineLearningInferenceDeployment_Get",
        "description": "Get a Inference Deployment by name.",
        "x-ms-examples": {
          "Get Deployment": {
            "$ref": "./examples/getDeployment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointNameParameter"
          },
          {
            "$ref": "#/parameters/InferenceDeploymentNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InferenceDeploymentResource"
            }
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MachineLearningInferenceDeployments"
        ],
        "operationId": "MachineLearningInferenceDeployment_Delete",
        "description": "Delete a specific Inference Deployment.",
        "x-ms-examples": {
          "Delete Deployment": {
            "$ref": "./examples/deleteDeployment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointNameParameter"
          },
          {
            "$ref": "#/parameters/InferenceDeploymentNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource exists and was deleted successfully."
          },
          "204": {
            "description": "The resource does not exist and the request was well formed."
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "MachineLearningInferenceDeployments"
        ],
        "description": "Creates or updates an Inference Deployment. This call will update an Inference Deployment if it exists. This is a nonrecoverable operation. If your intent is to create a new Inference Deployment, do a GET first to verify that it does not exist yet.",
        "operationId": "MachineLearningInferenceDeployment_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create Or Update Deployment": {
            "$ref": "./examples/createOrUpdateDeployment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointNameParameter"
          },
          {
            "$ref": "#/parameters/InferenceDeploymentNameParameter"
          },
          {
            "in": "body",
            "name": "properties",
            "description": "The payload that is used to create or update the Inference Deployment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InferenceDeploymentCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Inference Deployment creation or update initiated.",
            "schema": {
              "$ref": "#/definitions/InferenceDeploymentResource"
            }
          },
          "201": {
            "description": "Inference Deployment creation or update initiated.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "MachineLearningInferenceDeployments"
        ],
        "description": "Updates mutable objects of an Inference Deployment. This call will update an Inference Deployment if it exists. This is a nonrecoverable operation. If your intent is to create a new Inference Deployment, call PUT or POST for creation.",
        "operationId": "MachineLearningInferenceDeployment_Update",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update Deployment": {
            "$ref": "./examples/updateDeployment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointNameParameter"
          },
          {
            "$ref": "#/parameters/InferenceDeploymentNameParameter"
          },
          {
            "in": "body",
            "name": "properties",
            "description": "The payload that is used to update the Inference Deployment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InferenceDeploymentUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Inference Deployment update initiated.",
            "schema": {
              "$ref": "#/definitions/InferenceDeploymentResource"
            }
          },
          "201": {
            "description": "Inference Deployment update initiated.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/inferenceEndpoints/{inferenceEndpointName}/deployments/{deploymentName}/skus": {
      "get": {
        "tags": [
          "MachineLearningInferenceDeployments"
        ],
        "summary": "This is an ARM Contract for Azure Monitor to scale the number of instances of the Inference Deployment.",
        "description": "Get SKU information for scaling an Inference Deployment.",
        "operationId": "MachineLearningService_ListDeploymentSkus",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointNameParameter"
          },
          {
            "$ref": "#/parameters/InferenceDeploymentNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SkuInfoCollection"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "description": "Azure subscription identifier.",
      "in": "path",
      "type": "string",
      "required": true
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "description": "Name of the resource group in which workspace is located.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "WorkspaceNameParameter": {
      "name": "workspaceName",
      "description": "Name of Azure Machine Learning workspace.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "APIVersionParameter": {
      "in": "query",
      "name": "api-version",
      "type": "string",
      "description": "Version of Azure Machine Learning resource provider API.",
      "required": true
    },
    "PaginationParameter": {
      "in": "query",
      "name": "$skiptoken",
      "type": "string",
      "description": "Continuation token for pagination.",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "InferenceEndpointNameParameter": {
      "name": "inferenceEndpointName",
      "description": "Name of the Azure Machine Learning endpoint.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "InferenceDeploymentNameParameter": {
      "name": "deploymentName",
      "description": "Name of the Azure Machine Learning Inference Deployment.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "MachineLearningServiceError": {
      "type": "object",
      "description": "Wrapper for error response to follow ARM guidelines.",
      "properties": {
        "error": {
          "description": "The error response.",
          "$ref": "#/definitions/ErrorResponse",
          "readOnly": true
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "description": "Error response information.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Error message.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "An array of error detail objects.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "Error detail information.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Identity": {
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal ID of resource identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant ID of resource."
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned",
            "SystemAssigned,UserAssigned",
            "UserAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        },
        "userAssignedIdentities": {
          "$ref": "#/definitions/UserAssignedIdentities",
          "description": "The user assigned identities associated with the resource."
        }
      },
      "description": "Identity for the resource."
    },
    "UserAssignedIdentities": {
      "description": "dictionary containing all the user assigned identities, with resourceId of the UAI as key.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/UserAssignedIdentity"
      }
    },
    "UserAssignedIdentity": {
      "description": "User Assigned Identity",
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal ID of the user assigned identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant ID of the user assigned identity."
        },
        "clientId": {
          "readOnly": true,
          "type": "string",
          "description": "The clientId(aka appId) of the user assigned identity."
        }
      }
    },
    "Sku": {
      "description": "Sku of the resource",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the sku",
          "type": "string"
        },
        "tier": {
          "description": "Tier of the sku like Basic or Enterprise",
          "type": "string"
        }
      }
    },
    "PaginatedInferenceEndpointsList": {
      "type": "object",
      "description": "Paginated list of Machine Learning Inference Endpoint objects wrapped in ARM resource envelope.",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "description": "An array of Machine Learning Inference Endpoint objects wrapped in ARM resource envelope.",
          "items": {
            "$ref": "#/definitions/InferenceEndpointResource"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "A continuation link (absolute URI) to the next page of results in the list."
        }
      }
    },
    "PaginatedInferenceDeploymentsList": {
      "type": "object",
      "description": "Paginated list of Machine Learning Inference Deployment objects wrapped in ARM resource envelope.",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "description": "An array of Machine Learning Inference Deployment  objects wrapped in ARM resource envelope.",
          "items": {
            "$ref": "#/definitions/InferenceDeploymentResource"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "A continuation link (absolute URI) to the next page of results in the list."
        }
      }
    },
    "InferenceResourceBase": {
      "description": "Azure Resource Manager resource envelope for Inference objects.",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "description": "Specifies the resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Specifies the name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "The identity of the resource."
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string"
        },
        "type": {
          "description": "Specifies the type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "InferenceEndpointResource": {
      "type": "object",
      "description": "Machine Learning Inference Endpoint object wrapped into ARM resource envelope.",
      "allOf": [
        {
          "$ref": "#/definitions/InferenceResourceBase"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "type": "object",
              "properties": {
                "description": {
                  "description": "The Endpoint description.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "The Endpoint property dictionary. Properties are immutable.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "readOnly": true
                },
                "provisioningState": {
                  "type": "string",
                  "enum": [
                    "Creating",
                    "Deleting",
                    "Succeeded",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "name": "InferenceEndpointProvisioningState",
                    "modelAsString": true
                  },
                  "readOnly": true,
                  "description": "The current provisioning state of the Inference Deployment resource."
                },
                "error": {
                  "description": "The error details.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/MachineLearningServiceError"
                    }
                  ],
                  "readOnly": true
                },
                "authMode":{
                  "type": "string",
                  "enum": [
                    "None"
                  ],
                  "x-ms-enum": {
                    "name": "AuthMode",
                    "modelAsString": true
                  },
                  "readOnly": true,
                  "description": "Authentication mode configured on the Inference Endpoint for inference requests."
                },
                "uri": {
                  "description": "The URI for sending inference requests.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      ]
    },
    "InferenceEndpointCreateRequest": {
      "description": "The request to create an Inference Endpoint.",
      "type": "object",
      "properties": {
        "description": {
          "description": "The description of the endpoint.",
          "type": "string"
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "authMode":{
          "type": "string",
          "enum": [
            "None"
          ],
          "x-ms-enum": {
            "name": "AuthMode",
            "modelAsString": true
          },
          "description": "Authentication used for calling endpoint. Immutable and exclusive."
        }
      }
    },
    "InferenceDeploymentResource": {
      "type": "object",
      "description": "Machine Learning Inference Deployment object wrapped into ARM resource envelope.",
      "allOf": [
        {
          "$ref": "#/definitions/InferenceResourceBase"
        },
        {
          "type": "object",
          "properties": {
            "sku": {
              "$ref": "#/definitions/InferenceSku"
            },
            "properties": {
              "type": "object",
              "properties": {
                "modelIds": {
                  "description": "The list of model ResourceIds.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                },
                "scaleSettings": {
                  "$ref": "#/definitions/SkuScaleSettings",
                  "description": "Min, max, and default scale values of the deployment.",
                  "readOnly": true
                },
                "weight": {
                  "description": "Weight of the deployment for load balancing. Traffic directed at the endpoint is distributed in the ratio of deployment weights. A zero weight implies the deployment does not participate in load balancing and can only be reached by adding the header InferenceDeployment:<deployment-name>.",
                  "type": "integer",
                  "minimum": 0,
                  "exclusiveMinimum": true
                },
                "provisioningState": {
                  "type": "string",
                  "enum": [
                    "Scaling",
                    "Creating",
                    "Deleting",
                    "Succeeded",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "name": "InferenceDeploymentProvisioningState",
                    "modelAsString": true
                  },
                  "readOnly": true,
                  "description": "The current provisioning state of the Inference Deployment resource."
                },
                "environmentConfigId": {
                  "type": "string",
                  "description": "ResourceId of the environment configuration Artifact.",
                  "readOnly": true
                },
                "codeAssetId": {
                  "type": "string",
                  "description": "ResourceId of the Code Assets i.e. startup code.",
                  "readOnly": true
                },
                "vnet": {
                  "$ref": "#/definitions/VirtualNetworkProfile",
                  "description": "Description of the Virtual Network and subnet for outbound calls from this deployment.",
                  "readOnly": true
                }
              }
            }
          }
        }
      ]
    },
    "InferenceDeploymentCreateRequest": {
      "description": "The request to create an Inference Deployment.",
      "type": "object",
      "required": [
        "modelIds",
        "skuSize",
        "weight"
      ],
      "properties": {
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "modelIds": {
          "description": "The list of model resource Ids.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "skuSize": {
          "description": "sku size for the deployment",
          "type": "string"
        },
        "weight": {
          "description": "weight of the deployment for load balancing.",
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true
        },
        "scaleSettings": {
          "description": "Scale settings for this deployment",
          "$ref": "#/definitions/SkuScaleSettings"
        },
        "environmentConfigId": {
          "type": "string",
          "description": "Resource Id of the Environment Configuration artifact."
        },
        "codeAssetId": {
          "type": "string",
          "description": "Resource Id of the Code Assets i.e. startup code."
        },
        "vnet": {
          "description": "Info of the customer's custom Virtual Network",
          "properties": {
            "id": {
              "type": "string",
              "description": "ResourceId of the Virtual Network."
            },
            "subnetName": {
              "type": "string",
              "description": "Name of the Subnet in the Virtual Network."
            }
          }
        }
      }
    },
    "SkuScaleSettings": {
      "description": "Description of the Deployment scale options.",
      "type": "object",
      "required": [
        "minimum",
        "maximum"
      ],
      "properties": {
        "minimum": {
          "format": "int32",
          "description": "Minimum number of instances for this SKU.",
          "type": "integer",
          "minimum": 1,
          "exclusiveMinimum": true
        },
        "maximum": {
          "format": "int32",
          "description": "Maximum number of workers for this SKU.",
          "type": "integer"
        },
        "default": {
          "format": "int32",
          "description": "Default number of workers for this SKU.",
          "type": "integer"
        },
        "scaleType": {
          "description": "Available scale configurations for this Deployment.",
          "type": "string"
        }
      }
    },
    "SkuInfo": {
      "description": "SKU discovery information.",
      "type": "object",
      "properties": {
        "resourceType": {
          "description": "Resource type that this SKU applies to.",
          "type": "string"
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Name and tier of the SKU."
        },
        "capacity": {
          "$ref": "#/definitions/SkuScaleSettings",
          "description": "Min, max, and default scale values of the SKU."
        }
      }
    },
    "SkuInfoCollection": {
      "description": "Collection of SKU information.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuInfo"
          }
        }
      }
    },
    "InferenceSku": {
      "description": "Description of a SKU for a scalable resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the sku",
          "type": "string"
        },
        "tier": {
          "type": "string",
          "enum": [
            "Free",
            "Shared",
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "skuTiers",
            "modelAsString": true
          },
          "readOnly": true,
          "description": "The tier of the sku."
        },
        "capacity": {
          "format": "int32",
          "description": "Current number of instances assigned to the resource.",
          "type": "integer"
        }
      }
    },
    "InferenceDeploymentUpdateParameters": {
      "description": "The parameters for updating an inference deployment.",
      "properties": {
        "sku": {
          "description": "Information to update the SKU of the deployment.",
          "$ref": "#/definitions/InferenceSku"
        },
        "weight": {
          "description": "The weight of the deployment for load balancing.",
          "type": "integer"
        }
      }
    },
    "ValidateResponse": {
      "description": "Describes the result of resource validation.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Result of validation.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ValidateResponseError",
          "description": "Error details for the case when validation fails."
        }
      }
    },
    "ValidateResponseError": {
      "description": "Error details for when validation fails.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Validation error code.",
          "type": "string"
        },
        "message": {
          "description": "Validation error message.",
          "type": "string"
        }
      }
    },
    "VirtualNetworkProfile": {
      "description": "Specification for using a Virtual Network.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource id of the Virtual Network.",
          "type": "string"
        },
        "name": {
          "description": "Name of the Virtual Network (read-only).",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Resource type of the Virtual Network (read-only).",
          "type": "string",
          "readOnly": true
        },
        "subnet": {
          "description": "Subnet within the Virtual Network.",
          "type": "string"
        }
      }
    }
  }
}