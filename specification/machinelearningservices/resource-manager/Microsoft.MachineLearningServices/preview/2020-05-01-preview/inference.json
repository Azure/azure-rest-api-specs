{
  "swagger": "2.0",
  "info": {
    "title": "Azure Machine Learning Workspaces",
    "description": "These APIs allow end users to operate on Azure Machine Learning Workspace resources.",
    "version": "2020-05-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/inferenceEndpoints": {
      "get": {
        "tags": [
          "MachineLearningInferenceEndpoints"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "operationId": "MachineLearningInferenceEndpoints_ListInferenceEndpoints",
        "description": "Gets Inference Endpoints.",
        "x-ms-examples": {
          "Get Endpoints": {
            "$ref": "./examples/getInferenceEndpoints.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response includes a paginated array of Machine Learning Inference Endpoints.",
            "schema": {
              "$ref": "#/definitions/PaginatedInferenceEndpointsList"
            }
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/inferenceEndpoints/{inferenceEndpointName}": {
      "get": {
        "tags": [
          "MachineLearningInferenceEndpoints"
        ],
        "operationId": "MachineLearningInferenceEndpoint_Get",
        "description": "Gets Details in specified Inference Endpoint.",
        "x-ms-examples": {
          "Get Endpoint": {
            "$ref": "./examples/getInferenceEndpoint.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response includes a Machine Learning Inference Endpoint based on InferenceEndpointName, if any.",
            "schema": {
              "$ref": "#/definitions/InferenceEndpointResource"
            }
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MachineLearningInferenceEndpoints"
        ],
        "operationId": "MachineLearningInferenceEndpoint_Delete",
        "description": "Delete a specific Inference Endpoint.",
        "x-ms-examples": {
          "Delete Endpoint": {
            "$ref": "./examples/deleteInferenceEndpoint.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource exists and was deleted successfully."
          },
          "202": {
            "description": "The delete operation has been accepted and is deleting the resource."
          },
          "204": {
            "description": "The resource does not exist and the request was well formed."
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "MachineLearningInferenceEndpoints"
        ],
        "description": "Creates or updates an Inference Endpoint. This call will update an Inference Endpoint if it exists. This is a nonrecoverable operation. If your intent is to create a new Inference Endpoint, do a GET first to verify that it does not exist yet.",
        "operationId": "MachineLearningInferenceEndpoint_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create Or Update Endpoint": {
            "$ref": "./examples/createOrUpdateInferenceEndpoint.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointNameParameter"
          },
          {
            "in": "body",
            "name": "properties",
            "description": "The payload that is used to create or update the Inference Endpoint.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InferenceEndpointCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Inference Endpoint creation or update initiated.",
            "schema": {
              "$ref": "#/definitions/InferenceEndpointResource"
            }
          },
          "201": {
            "description": "Inference Endpoint creation or update initiated.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/inferenceEndpoints/locations/{locationName}/checkNameAvailability": {
      "post": {
        "tags": [
          "MachineLearningInferenceEndpoints"
        ],
        "x-ms-examples": {
          "Check Endpoint Name": {
            "$ref": "./examples/checkInferenceEndpointName.json"
          }
        },
        "operationId": "MachineLearningInferenceEndpoint_CheckNameAvailability",
        "description": "Checks that the inference endpoint name is valid and is not already in use.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/LocationNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InferenceEndpointCheckNameAvailabilityParameter"
            },
            "description": "The name of the endpoint within the specified resource group."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Operation to check the endpoint name availability was successful.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/inferenceEndpoints/{inferenceEndpointName}/deployments": {
      "get": {
        "tags": [
          "MachineLearningInferenceEndpointDeployments"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "operationId": "MachineLearningInferenceEndpointDeployments_ListByInferenceEndpoint",
        "description": "Gets Inference Deployments.",
        "x-ms-examples": {
          "Get Deployments": {
            "$ref": "./examples/getDeployments.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/PaginationParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response includes a paginated array of Machine Learning Inference Deployments.",
            "schema": {
              "$ref": "#/definitions/PaginatedInferenceEndpointDeploymentsList"
            }
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/inferenceEndpoints/{inferenceEndpointName}/deployments/{deploymentName}": {
      "get": {
        "tags": [
          "MachineLearningInferenceEndpointDeployments"
        ],
        "operationId": "MachineLearningInferenceEndpointDeployment_Get",
        "description": "Get a Inference Deployment by name.",
        "x-ms-examples": {
          "Get Deployment": {
            "$ref": "./examples/getDeployment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointNameParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointDeploymentNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InferenceEndpointDeploymentResource"
            }
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MachineLearningInferenceEndpointDeployments"
        ],
        "operationId": "MachineLearningInferenceEndpointDeployment_Delete",
        "description": "Delete a specific Inference Deployment.",
        "x-ms-examples": {
          "Delete Deployment": {
            "$ref": "./examples/deleteDeployment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointNameParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointDeploymentNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource exists and was deleted successfully."
          },
          "202": {
            "description": "The delete operation has been accepted and is deleting the resource."
          },
          "204": {
            "description": "The resource does not exist and the request was well formed."
          },
          "default": {
            "description": "Error response describing why the request failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "MachineLearningInferenceEndpointDeployments"
        ],
        "description": "Creates or updates an Inference Deployment. This call will update an Inference Deployment if it exists. This is a nonrecoverable operation. If your intent is to create a new Inference Deployment, do a GET first to verify that it does not exist yet.",
        "operationId": "MachineLearningInferenceEndpointDeployment_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create Or Update Deployment": {
            "$ref": "./examples/createOrUpdateDeployment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointNameParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointDeploymentNameParameter"
          },
          {
            "in": "body",
            "name": "properties",
            "description": "The payload that is used to create or update the Inference Deployment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InferenceEndpointDeploymentCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Inference Deployment creation or update initiated.",
            "schema": {
              "$ref": "#/definitions/InferenceEndpointDeploymentResource"
            }
          },
          "201": {
            "description": "Inference Deployment creation or update initiated.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "MachineLearningInferenceEndpointDeployments"
        ],
        "description": "Updates mutable objects of an Inference Deployment. This call will update an Inference Deployment if it exists. This is a nonrecoverable operation. If your intent is to create a new Inference Deployment, call PUT or POST for creation.",
        "operationId": "MachineLearningInferenceEndpointDeployment_Update",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update Deployment": {
            "$ref": "./examples/updateDeployment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointNameParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointDeploymentNameParameter"
          },
          {
            "in": "body",
            "name": "properties",
            "description": "The payload that is used to update the Inference Deployment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InferenceEndpointDeploymentUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Inference Deployment update was successful.",
            "schema": {
              "$ref": "#/definitions/InferenceEndpointDeploymentResource"
            }
          },
          "202": {
            "description": "Inference Deployment update initiated.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/inferenceEndpoints/{inferenceEndpointName}/deployments/{deploymentName}/skus": {
      "get": {
        "tags": [
          "MachineLearningInferenceEndpointDeployments"
        ],
        "x-ms-examples": {
          "Get Sku setting info for deployment": {
            "$ref": "./examples/getDeploymentSkuInfo.json"
          }
        },
        "summary": "This is for an ARM Contract with Azure Monitor to scale the number of instances of the Inference Deployment.",
        "description": "Get SKU information for scaling an Inference Deployment.",
        "operationId": "MachineLearningInferenceEndpointDeployment_ListDeploymentSkus",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointNameParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointDeploymentNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SkuDiscoveryInfoCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/inferenceEndpoints/{inferenceEndpointName}/deployments/locations/{locationName}/checkNameAvailability": {
      "post": {
        "tags": [
          "MachineLearningInferenceEndpointDeployments"
        ],
        "x-ms-examples": {
          "Check Deployment Name": {
            "$ref": "./examples/checkInferenceEndpointDeploymentName.json"
          }
        },
        "operationId": "MachineLearningInferenceEndpointDeployment_CheckNameAvailability",
        "description": "Checks that the inference endpoint deployment name is valid and is not already in use.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/parameters/InferenceEndpointNameParameter"
          },
          {
            "$ref": "#/parameters/LocationNameParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InferenceEndpointDeploymentCheckNameAvailabilityParameter"
            },
            "description": "The name of the endpoint deployment within the specified resource group."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Operation to check the endpoint deployment name availability was successful.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/MachineLearningServiceError"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "description": "Azure subscription identifier.",
      "in": "path",
      "type": "string",
      "required": true
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "description": "Name of the resource group in which workspace is located.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "WorkspaceNameParameter": {
      "name": "workspaceName",
      "description": "Name of Azure Machine Learning workspace.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "APIVersionParameter": {
      "in": "query",
      "name": "api-version",
      "type": "string",
      "description": "Version of Azure Machine Learning resource provider API.",
      "required": true
    },
    "LocationNameParameter": {
      "name": "locationName",
      "description": "location of Azure Machine Learning workspace.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "PaginationParameter": {
      "in": "query",
      "name": "$skiptoken",
      "type": "string",
      "description": "Continuation token for pagination.",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "InferenceEndpointNameParameter": {
      "name": "inferenceEndpointName",
      "description": "Name of the Azure Machine Learning endpoint.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "InferenceEndpointDeploymentNameParameter": {
      "name": "deploymentName",
      "description": "Name of the Azure Machine Learning Inference Deployment.",
      "in": "path",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "InferenceEndpointCheckNameAvailabilityParameter": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "Microsoft.MachineLearningServices/workspaces/inferenceEndpoints"
        }
      },
      "required": [
        "name"
      ],
      "description": "The parameters used to check the availability of the endpoint name."
    },
    "InferenceEndpointDeploymentCheckNameAvailabilityParameter": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "Microsoft.MachineLearningServices/workspaces/inferenceEndpoints/deployments"
        }
      },
      "required": [
        "name"
      ],
      "description": "The parameters used to check the availability of the deployment name."
    },
    "CheckNameAvailabilityResult": {
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used."
        },
        "reason": {
          "type": "string",
          "description": "The reason that a name could not be used. The Reason element is only returned if NameAvailable is false.",
          "enum": [
            "AccountNameInvalid",
            "AlreadyExists",
            "None"
          ],
          "x-ms-enum": {
            "name": "Reason",
            "modelAsString": false
          }
        },
        "message": {
          "type": "string",
          "description": "The error message explaining the Reason value in more detail."
        }
      },
      "description": "The CheckNameAvailability operation response."
    },
    "MachineLearningServiceError": {
      "type": "object",
      "description": "Wrapper for error response to follow ARM guidelines.",
      "properties": {
        "error": {
          "description": "The error response.",
          "$ref": "#/definitions/ErrorResponse",
          "readOnly": true
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "description": "Error response information.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Error message.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "An array of error detail objects.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "Error detail information.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Identity": {
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal ID of resource identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant ID of resource."
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned",
            "SystemAssigned,UserAssigned",
            "UserAssigned",
            "None"
          ],
          "readOnly": true,
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        },
        "userAssignedIdentities": {
          "$ref": "#/definitions/UserAssignedIdentities",
          "description": "The user assigned identities associated with the resource."
        }
      },
      "description": "Identity for the resource."
    },
    "UserAssignedIdentities": {
      "description": "dictionary containing all the user assigned identities, with resourceId of the UAI as key.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/UserAssignedIdentity"
      }
    },
    "UserAssignedIdentity": {
      "description": "User Assigned Identity",
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal ID of the user assigned identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant ID of the user assigned identity."
        },
        "clientId": {
          "readOnly": true,
          "type": "string",
          "description": "The clientId(aka appId) of the user assigned identity."
        }
      }
    },
    "PaginatedInferenceEndpointsList": {
      "type": "object",
      "description": "Paginated list of Machine Learning Inference Endpoint objects wrapped in ARM resource envelope.",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "description": "An array of Machine Learning Inference Endpoint objects wrapped in ARM resource envelope.",
          "items": {
            "$ref": "#/definitions/InferenceEndpointResource"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "A continuation link (absolute URI) to the next page of results in the list."
        }
      }
    },
    "PaginatedInferenceEndpointDeploymentsList": {
      "type": "object",
      "description": "Paginated list of Machine Learning Inference Deployment objects wrapped in ARM resource envelope.",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "description": "An array of Machine Learning Inference Deployment  objects wrapped in ARM resource envelope.",
          "items": {
            "$ref": "#/definitions/InferenceEndpointDeploymentResource"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "A continuation link (absolute URI) to the next page of results in the list."
        }
      }
    },
    "SystemData": {
      "description": "Specifies system data of the resource.",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "createdByType": {
          "type": "string",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "readOnly": true,
          "x-ms-enum": {
            "name": "UserTypes",
            "modelAsString": false
          }
        },
        "createdAt": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedByType": {
          "type": "string",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "readOnly": true,
          "x-ms-enum": {
            "name": "UserTypes",
            "modelAsString": false
          }
        },
        "lastModifiedAt": {
          "type": "string"
        }
      }
    },
    "InferenceResourceBase": {
      "description": "Azure Resource Manager resource envelope for Inference objects.",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "description": "Specifies the resource ID.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Specifies the type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Specifies the name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "allOf": [
            {
              "$ref": "#/definitions/SystemData"
            }
          ],
          "readOnly": true
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "The identity of the resource.",
          "readOnly": true
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "InferenceEndpointResource": {
      "type": "object",
      "description": "Machine Learning Inference Endpoint object wrapped into ARM resource envelope.",
      "allOf": [
        {
          "$ref": "#/definitions/InferenceResourceBase"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "type": "object",
              "properties": {
                "description": {
                  "description": "The Endpoint description.",
                  "type": "string",
                  "readOnly": true
                },
                "properties": {
                  "description": "The Endpoint property dictionary. Properties are immutable.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "readOnly": true
                },
                "provisioningState": {
                  "type": "string",
                  "enum": [
                    "Creating",
                    "Deleting",
                    "Succeeded",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "name": "InferenceEndpointProvisioningState",
                    "modelAsString": true
                  },
                  "readOnly": true,
                  "description": "The current provisioning state of the Inference Endpoint resource."
                },
                "error": {
                  "description": "The error details.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/MachineLearningServiceError"
                    }
                  ],
                  "readOnly": true
                },
                "authMode": {
                  "type": "string",
                  "enum": [
                    "AML Token-based"
                  ],
                  "x-ms-enum": {
                    "name": "AuthMode",
                    "modelAsString": true
                  },
                  "readOnly": true,
                  "description": "Authentication mode configured on the Inference Endpoint for inference requests."
                },
                "uri": {
                  "description": "The URI for sending inference requests.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      ]
    },
    "InferenceEndpointDeploymentResource": {
      "type": "object",
      "description": "Machine Learning Inference Deployment object wrapped into ARM resource envelope.",
      "allOf": [
        {
          "$ref": "#/definitions/InferenceResourceBase"
        },
        {
          "type": "object",
          "properties": {
            "sku": {
              "$ref": "#/definitions/InferenceEndpointDeploymentSku"
            },
            "properties": {
              "type": "object",
              "properties": {
                "modelId": {
                  "description": "The model Resource Id.",
                  "type": "string",
                  "readOnly": true
                },
                "scaleSettings": {
                  "$ref": "#/definitions/SkuScaleSettings",
                  "description": "Min, max, and default scale values of the deployment.",
                  "readOnly": true
                },
                "weight": {
                  "description": "Weight of the deployment for load balancing. Traffic directed at the endpoint is distributed in the ratio of deployment weights. A zero weight implies the deployment does not participate in load balancing and can only be reached by adding the header InferenceEndpointDeployment:<deployment-name>.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "provisioningState": {
                  "type": "string",
                  "enum": [
                    "Scaling",
                    "Updating",
                    "Creating",
                    "Deleting",
                    "Succeeded",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "name": "InferenceEndpointDeploymentProvisioningState",
                    "modelAsString": true
                  },
                  "readOnly": true,
                  "description": "The current provisioning state of the Inference Deployment resource."
                },
                "environmentConfigId": {
                  "type": "string",
                  "description": "ResourceId of the environment configuration Artifact.",
                  "readOnly": true
                },
                "codeAssetId": {
                  "description": "Resource Id of the Code Assets i.e. startup code.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                }
              }
            }
          }
        }
      ]
    },
    "InferenceEndpointCreateRequest": {
      "description": "The request to create an Inference Endpoint.",
      "type": "object",
      "properties": {
        "description": {
          "description": "The description of the endpoint.",
          "type": "string"
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "InferenceEndpointDeploymentCreateRequest": {
      "description": "The request to create an Inference Deployment.",
      "type": "object",
      "required": [
        "modelId",
        "sku",
        "weight"
      ],
      "properties": {
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "modelId": {
          "description": "The model resource Id.",
          "type": "string"
        },
        "sku": {
          "description": "Sku for the deployment. Give the name of the sku such as Standard_DS2 or Basic_A0.",
          "type": "string",
          "default": "Standard_D2_v2"
        },
        "weight": {
          "description": "weight of the deployment for load balancing.",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "default": 0
        },
        "scaleSettings": {
          "description": "Scale settings for this deployment",
          "$ref": "#/definitions/SkuScaleSettings"
        },
        "environmentConfigId": {
          "type": "string",
          "description": "Resource Id of the Environment Configuration artifact."
        },
        "codeAssetId": {
          "description": "Resource Id of the Code Assets i.e. startup code.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SkuScaleSettings": {
      "description": "Description of the Deployment scale options.",
      "type": "object",
      "required": [
        "minimum",
        "maximum",
        "default"
      ],
      "properties": {
        "minimum": {
          "description": "Minimum number of instances for this deployment.",
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        "maximum": {
          "description": "Maximum number of instances for this deployment.",
          "type": "integer",
          "format": "int32"
        },
        "default": {
          "description": "Default/Initial number of instances for this deployment.",
          "type": "integer",
          "format": "int32"
        },
        "scaleType": {
          "description": "Available scale configurations for this Deployment.",
          "type": "string",
          "enum": [
            "automatic",
            "manual",
            "none"
          ],
          "default": "automatic",
          "x-ms-enum": {
            "name": "skuTiers",
            "modelAsString": true
          }
        }
      }
    },
    "Sku": {
      "description": "Sku of the resource",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the sku",
          "type": "string",
          "enum": [
            "Standard_D3_v2",
            "Standard_D2_v2"
          ],
          "x-ms-enum": {
            "name": "allowableSkus",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "enum": [
            "Basic"
          ],
          "x-ms-enum": {
            "name": "skuTiers",
            "modelAsString": true
          },
          "description": "The tier of the sku."
        }
      }
    },
    "SkuDiscoveryInfo": {
      "description": "SKU discovery information.",
      "type": "object",
      "properties": {
        "resourceType": {
          "description": "Resource type that this SKU applies to.",
          "type": "string"
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Name and tier of the SKU."
        },
        "capacity": {
          "$ref": "#/definitions/SkuScaleSettings",
          "description": "Min, max, and default scale values of the SKU."
        }
      }
    },
    "SkuDiscoveryInfoCollection": {
      "description": "Collection of SKU information.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuDiscoveryInfo"
          }
        }
      }
    },
    "InferenceEndpointDeploymentSku": {
      "description": "Description of a SKU for a scalable resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Sku"
        },
        {
          "type": "object",
          "properties": {
            "capacity": {
              "description": "Current number of instances assigned to the resource.",
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "InferenceEndpointDeploymentUpdateParameters": {
      "description": "The parameters for updating an inference deployment.",
      "properties": {
        "sku": {
          "description": "Information to update the SKU of the deployment.",
          "$ref": "#/definitions/InferenceEndpointDeploymentSku"
        },
        "weight": {
          "description": "The weight of the deployment for load balancing.",
          "type": "integer",
          "format": "int32"
        }
      }
    }
  }
}
