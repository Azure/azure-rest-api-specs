{
    "swagger": "2.0",
    "info": {
        "title": "Azure Machine Learning Services",
        "version": "2023-08-01-preview"
    },
    "host": "management.azure.com",
    "schemes": [
        "https"
    ],
    "paths": {
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/codes": {
            "get": {
                "tags": [
                    "CodeContainer"
                ],
                "summary": "List containers.",
                "operationId": "RegistryCodeContainers_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CodeContainerResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Registry Code Container.": {
                        "$ref": "./examples/Registry/CodeContainer/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/codes/{codeName}": {
            "delete": {
                "tags": [
                    "CodeContainer"
                ],
                "summary": "Delete Code container.",
                "operationId": "RegistryCodeContainers_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "codeName",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Registry Code Container.": {
                        "$ref": "./examples/Registry/CodeContainer/delete.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            },
            "get": {
                "tags": [
                    "CodeContainer"
                ],
                "summary": "Get Code container.",
                "operationId": "RegistryCodeContainers_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "codeName",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CodeContainerResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Registry Code Container.": {
                        "$ref": "./examples/Registry/CodeContainer/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "CodeContainer"
                ],
                "summary": "Create or update Code container.",
                "operationId": "RegistryCodeContainers_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "codeName",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Container entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CodeContainerResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/CodeContainerResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/CodeContainerResource"
                        },
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Azure-AsyncOperation": {
                                "description": "URI to poll for asynchronous operation status.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Registry Code Container.": {
                        "$ref": "./examples/Registry/CodeContainer/createOrUpdate.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "original-uri"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/codes/{codeName}/versions": {
            "get": {
                "tags": [
                    "CodeVersion"
                ],
                "summary": "List versions.",
                "operationId": "RegistryCodeVersions_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "codeName",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "query",
                        "name": "$orderBy",
                        "description": "Ordering of list.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Maximum number of records to return.",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CodeVersionResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Registry Code Version.": {
                        "$ref": "./examples/Registry/CodeVersion/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/codes/{codeName}/versions/{version}": {
            "delete": {
                "tags": [
                    "CodeVersion"
                ],
                "summary": "Delete version.",
                "operationId": "RegistryCodeVersions_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "codeName",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Registry Code Version.": {
                        "$ref": "./examples/Registry/CodeVersion/delete.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            },
            "get": {
                "tags": [
                    "CodeVersion"
                ],
                "summary": "Get version.",
                "operationId": "RegistryCodeVersions_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "codeName",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CodeVersionResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Registry Code Version.": {
                        "$ref": "./examples/Registry/CodeVersion/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "CodeVersion"
                ],
                "summary": "Create or update version.",
                "operationId": "RegistryCodeVersions_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "codeName",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Version entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CodeVersionResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/CodeVersionResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/CodeVersionResource"
                        },
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Azure-AsyncOperation": {
                                "description": "URI to poll for asynchronous operation status.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Registry Code Version.": {
                        "$ref": "./examples/Registry/CodeVersion/createOrUpdate.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "original-uri"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/codes/{codeName}/versions/{version}/startPendingUpload": {
            "post": {
                "tags": [
                    "CodeVersion"
                ],
                "summary": "Generate a storage location and credential for the client to upload a code asset to.",
                "operationId": "RegistryCodeVersions_CreateOrGetStartPendingUpload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "codeName",
                        "description": "Pending upload name. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Pending upload request object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PendingUploadRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PendingUploadResponseDto"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrGetStartPendingUpload Registry Code Version.": {
                        "$ref": "./examples/Registry/CodeVersion/createOrGetStartPendingUpload.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/components": {
            "get": {
                "tags": [
                    "ComponentContainer"
                ],
                "summary": "List containers.",
                "operationId": "RegistryComponentContainers_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ComponentContainerResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Registry Component Container.": {
                        "$ref": "./examples/Registry/ComponentContainer/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/components/{componentName}": {
            "delete": {
                "tags": [
                    "ComponentContainer"
                ],
                "summary": "Delete container.",
                "operationId": "RegistryComponentContainers_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "componentName",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Registry Component Container.": {
                        "$ref": "./examples/Registry/ComponentContainer/delete.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            },
            "get": {
                "tags": [
                    "ComponentContainer"
                ],
                "summary": "Get container.",
                "operationId": "RegistryComponentContainers_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "componentName",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ComponentContainerResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Registry Component Container.": {
                        "$ref": "./examples/Registry/ComponentContainer/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "ComponentContainer"
                ],
                "summary": "Create or update container.",
                "operationId": "RegistryComponentContainers_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "componentName",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Container entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ComponentContainerResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/ComponentContainerResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ComponentContainerResource"
                        },
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Azure-AsyncOperation": {
                                "description": "URI to poll for asynchronous operation status.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Registry Component Container.": {
                        "$ref": "./examples/Registry/ComponentContainer/createOrUpdate.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "original-uri"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/components/{componentName}/versions": {
            "get": {
                "tags": [
                    "ComponentVersion"
                ],
                "summary": "List versions.",
                "operationId": "RegistryComponentVersions_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "componentName",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "query",
                        "name": "$orderBy",
                        "description": "Ordering of list.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Maximum number of records to return.",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "stage",
                        "description": "Component stage.",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ComponentVersionResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Registry Component Version.": {
                        "$ref": "./examples/Registry/ComponentVersion/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/components/{componentName}/versions/{version}": {
            "delete": {
                "tags": [
                    "ComponentVersion"
                ],
                "summary": "Delete version.",
                "operationId": "RegistryComponentVersions_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "componentName",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Registry Component Version.": {
                        "$ref": "./examples/Registry/ComponentVersion/delete.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            },
            "get": {
                "tags": [
                    "ComponentVersion"
                ],
                "summary": "Get version.",
                "operationId": "RegistryComponentVersions_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "componentName",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ComponentVersionResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Registry Component Version.": {
                        "$ref": "./examples/Registry/ComponentVersion/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "ComponentVersion"
                ],
                "summary": "Create or update version.",
                "operationId": "RegistryComponentVersions_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "componentName",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Version entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ComponentVersionResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/ComponentVersionResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ComponentVersionResource"
                        },
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Azure-AsyncOperation": {
                                "description": "URI to poll for asynchronous operation status.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Registry Component Version.": {
                        "$ref": "./examples/Registry/ComponentVersion/createOrUpdate.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "original-uri"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/data": {
            "get": {
                "tags": [
                    "DataContainerRegistry"
                ],
                "summary": "List Data containers.",
                "operationId": "RegistryDataContainers_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "listViewType",
                        "description": "View type for including/excluding (for example) archived entities.",
                        "type": "string",
                        "default": "ActiveOnly",
                        "enum": [
                            "ActiveOnly",
                            "ArchivedOnly",
                            "All"
                        ],
                        "x-ms-enum": {
                            "name": "ListViewType",
                            "modelAsString": true,
                            "values": [
                                {
                                    "value": "ActiveOnly"
                                },
                                {
                                    "value": "ArchivedOnly"
                                },
                                {
                                    "value": "All"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DataContainerResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "RegistryList Registry Data Container.": {
                        "$ref": "./examples/Registry/DataContainer/registryList.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/data/{name}": {
            "delete": {
                "tags": [
                    "DataContainerRegistry"
                ],
                "summary": "Delete container.",
                "operationId": "RegistryDataContainers_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Registry Data Container.": {
                        "$ref": "./examples/Registry/DataContainer/delete.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            },
            "get": {
                "tags": [
                    "DataContainerRegistry"
                ],
                "summary": "Get container.",
                "operationId": "RegistryDataContainers_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DataContainerResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Registry Data Container.": {
                        "$ref": "./examples/Registry/DataContainer/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "DataContainerRegistry"
                ],
                "summary": "Create or update container.",
                "operationId": "RegistryDataContainers_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Container entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DataContainerResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/DataContainerResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/DataContainerResource"
                        },
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Azure-AsyncOperation": {
                                "description": "URI to poll for asynchronous operation status.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Registry Data Container.": {
                        "$ref": "./examples/Registry/DataContainer/createOrUpdate.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "original-uri"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/data/{name}/versions": {
            "get": {
                "tags": [
                    "DataVersionRegistry"
                ],
                "summary": "List data versions in the data container",
                "operationId": "RegistryDataVersions_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Data container's name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "query",
                        "name": "$orderBy",
                        "description": "Please choose OrderBy value from ['createdtime', 'modifiedtime']",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Top count of results, top count cannot be greater than the page size.\r\n                              If topCount > page size, results with be default page size count will be returned",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "$tags",
                        "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "listViewType",
                        "description": "[ListViewType.ActiveOnly, ListViewType.ArchivedOnly, ListViewType.All]View type for including/excluding (for example) archived entities.",
                        "type": "string",
                        "default": "ActiveOnly",
                        "enum": [
                            "ActiveOnly",
                            "ArchivedOnly",
                            "All"
                        ],
                        "x-ms-enum": {
                            "name": "ListViewType",
                            "modelAsString": true,
                            "values": [
                                {
                                    "value": "ActiveOnly"
                                },
                                {
                                    "value": "ArchivedOnly"
                                },
                                {
                                    "value": "All"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DataVersionBaseResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "RegistryList Registry Data Version Base.": {
                        "$ref": "./examples/Registry/DataVersionBase/registryList.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/data/{name}/versions/{version}": {
            "delete": {
                "tags": [
                    "DataVersionRegistry"
                ],
                "summary": "Delete version.",
                "operationId": "RegistryDataVersions_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Registry Data Version Base.": {
                        "$ref": "./examples/Registry/DataVersionBase/delete.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            },
            "get": {
                "tags": [
                    "DataVersionRegistry"
                ],
                "summary": "Get version.",
                "operationId": "RegistryDataVersions_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DataVersionBaseResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Registry Data Version Base.": {
                        "$ref": "./examples/Registry/DataVersionBase/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "DataVersionRegistry"
                ],
                "summary": "Create or update version.",
                "operationId": "RegistryDataVersions_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Version entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DataVersionBaseResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/DataVersionBaseResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/DataVersionBaseResource"
                        },
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Azure-AsyncOperation": {
                                "description": "URI to poll for asynchronous operation status.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Registry Data Version Base.": {
                        "$ref": "./examples/Registry/DataVersionBase/createOrUpdate.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "original-uri"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/data/{name}/versions/{version}/startPendingUpload": {
            "post": {
                "tags": [
                    "DataVersionRegistry"
                ],
                "summary": "Generate a storage location and credential for the client to upload a data asset to.",
                "operationId": "RegistryDataVersions_CreateOrGetStartPendingUpload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Data asset name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Pending upload request object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PendingUploadRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PendingUploadResponseDto"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrGetStartPendingUpload Registry Data Version Base.": {
                        "$ref": "./examples/Registry/DataVersionBase/createOrGetStartPendingUpload.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/environments": {
            "get": {
                "tags": [
                    "EnvironmentContainer"
                ],
                "summary": "List environment containers.",
                "operationId": "RegistryEnvironmentContainers_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "listViewType",
                        "description": "View type for including/excluding (for example) archived entities.",
                        "type": "string",
                        "default": "ActiveOnly",
                        "enum": [
                            "ActiveOnly",
                            "ArchivedOnly",
                            "All"
                        ],
                        "x-ms-enum": {
                            "name": "ListViewType",
                            "modelAsString": true,
                            "values": [
                                {
                                    "value": "ActiveOnly"
                                },
                                {
                                    "value": "ArchivedOnly"
                                },
                                {
                                    "value": "All"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EnvironmentContainerResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Registry Environment Container.": {
                        "$ref": "./examples/Registry/EnvironmentContainer/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/environments/{environmentName}": {
            "delete": {
                "tags": [
                    "EnvironmentContainer"
                ],
                "summary": "Delete container.",
                "operationId": "RegistryEnvironmentContainers_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "environmentName",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Registry Environment Container.": {
                        "$ref": "./examples/Registry/EnvironmentContainer/delete.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            },
            "get": {
                "tags": [
                    "EnvironmentContainer"
                ],
                "summary": "Get container.",
                "operationId": "RegistryEnvironmentContainers_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "environmentName",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EnvironmentContainerResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Registry Environment Container.": {
                        "$ref": "./examples/Registry/EnvironmentContainer/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "EnvironmentContainer"
                ],
                "summary": "Create or update container.",
                "operationId": "RegistryEnvironmentContainers_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "environmentName",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Container entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EnvironmentContainerResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/EnvironmentContainerResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/EnvironmentContainerResource"
                        },
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Azure-AsyncOperation": {
                                "description": "URI to poll for asynchronous operation status.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Registry Environment Container.": {
                        "$ref": "./examples/Registry/EnvironmentContainer/createOrUpdate.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "original-uri"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/environments/{environmentName}/versions": {
            "get": {
                "tags": [
                    "EnvironmentVersion"
                ],
                "summary": "List versions.",
                "operationId": "RegistryEnvironmentVersions_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "environmentName",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "query",
                        "name": "$orderBy",
                        "description": "Ordering of list.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Maximum number of records to return.",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "listViewType",
                        "description": "View type for including/excluding (for example) archived entities.",
                        "type": "string",
                        "default": "ActiveOnly",
                        "enum": [
                            "ActiveOnly",
                            "ArchivedOnly",
                            "All"
                        ],
                        "x-ms-enum": {
                            "name": "ListViewType",
                            "modelAsString": true,
                            "values": [
                                {
                                    "value": "ActiveOnly"
                                },
                                {
                                    "value": "ArchivedOnly"
                                },
                                {
                                    "value": "All"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "stage",
                        "description": "Stage for including/excluding (for example) archived entities. Takes priority over listViewType",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EnvironmentVersionResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Registry Environment Version.": {
                        "$ref": "./examples/Registry/EnvironmentVersion/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/environments/{environmentName}/versions/{version}": {
            "delete": {
                "tags": [
                    "EnvironmentVersion"
                ],
                "summary": "Delete version.",
                "operationId": "RegistryEnvironmentVersions_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "environmentName",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Registry Environment Version.": {
                        "$ref": "./examples/Registry/EnvironmentVersion/delete.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            },
            "get": {
                "tags": [
                    "EnvironmentVersion"
                ],
                "summary": "Get version.",
                "operationId": "RegistryEnvironmentVersions_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "environmentName",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EnvironmentVersionResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Registry Environment Version.": {
                        "$ref": "./examples/Registry/EnvironmentVersion/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "EnvironmentVersion"
                ],
                "summary": "Create or update version.",
                "operationId": "RegistryEnvironmentVersions_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "environmentName",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Version entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EnvironmentVersionResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/EnvironmentVersionResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/EnvironmentVersionResource"
                        },
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Azure-AsyncOperation": {
                                "description": "URI to poll for asynchronous operation status.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Registry Environment Version.": {
                        "$ref": "./examples/Registry/EnvironmentVersion/createOrUpdate.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "original-uri"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/models": {
            "get": {
                "tags": [
                    "ModelContainer"
                ],
                "summary": "List model containers.",
                "operationId": "RegistryModelContainers_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "listViewType",
                        "description": "View type for including/excluding (for example) archived entities.",
                        "type": "string",
                        "default": "ActiveOnly",
                        "enum": [
                            "ActiveOnly",
                            "ArchivedOnly",
                            "All"
                        ],
                        "x-ms-enum": {
                            "name": "ListViewType",
                            "modelAsString": true,
                            "values": [
                                {
                                    "value": "ActiveOnly"
                                },
                                {
                                    "value": "ArchivedOnly"
                                },
                                {
                                    "value": "All"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ModelContainerResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Registry Model Container.": {
                        "$ref": "./examples/Registry/ModelContainer/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/models/{modelName}": {
            "delete": {
                "tags": [
                    "ModelContainer"
                ],
                "summary": "Delete container.",
                "operationId": "RegistryModelContainers_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "modelName",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Registry Model Container.": {
                        "$ref": "./examples/Registry/ModelContainer/delete.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            },
            "get": {
                "tags": [
                    "ModelContainer"
                ],
                "summary": "Get container.",
                "operationId": "RegistryModelContainers_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "modelName",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ModelContainerResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Registry Model Container.": {
                        "$ref": "./examples/Registry/ModelContainer/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "ModelContainer"
                ],
                "summary": "Create or update model container.",
                "operationId": "RegistryModelContainers_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "modelName",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Container entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ModelContainerResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/ModelContainerResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ModelContainerResource"
                        },
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Azure-AsyncOperation": {
                                "description": "URI to poll for asynchronous operation status.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Registry Model Container.": {
                        "$ref": "./examples/Registry/ModelContainer/createOrUpdate.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "original-uri"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/models/{modelName}/versions": {
            "get": {
                "tags": [
                    "ModelVersion"
                ],
                "summary": "List versions.",
                "operationId": "RegistryModelVersions_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "modelName",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "$orderBy",
                        "description": "Ordering of list.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Maximum number of records to return.",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "description": "Version identifier.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "description",
                        "description": "Model description.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "properties",
                        "description": "Comma-separated list of property names (and optionally values). Example: prop1,prop2=value2",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "listViewType",
                        "description": "View type for including/excluding (for example) archived entities.",
                        "type": "string",
                        "default": "ActiveOnly",
                        "enum": [
                            "ActiveOnly",
                            "ArchivedOnly",
                            "All"
                        ],
                        "x-ms-enum": {
                            "name": "ListViewType",
                            "modelAsString": true,
                            "values": [
                                {
                                    "value": "ActiveOnly"
                                },
                                {
                                    "value": "ArchivedOnly"
                                },
                                {
                                    "value": "All"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ModelVersionResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Registry Model Version.": {
                        "$ref": "./examples/Registry/ModelVersion/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/models/{modelName}/versions/{version}": {
            "delete": {
                "tags": [
                    "ModelVersion"
                ],
                "summary": "Delete version.",
                "operationId": "RegistryModelVersions_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "modelName",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Registry Model Version.": {
                        "$ref": "./examples/Registry/ModelVersion/delete.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            },
            "get": {
                "tags": [
                    "ModelVersion"
                ],
                "summary": "Get version.",
                "operationId": "RegistryModelVersions_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "modelName",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ModelVersionResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Registry Model Version.": {
                        "$ref": "./examples/Registry/ModelVersion/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "ModelVersion"
                ],
                "summary": "Create or update version.",
                "operationId": "RegistryModelVersions_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "modelName",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Version entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ModelVersionResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/ModelVersionResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ModelVersionResource"
                        },
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Azure-AsyncOperation": {
                                "description": "URI to poll for asynchronous operation status.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Registry Model Version.": {
                        "$ref": "./examples/Registry/ModelVersion/createOrUpdate.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "original-uri"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/models/{modelName}/versions/{version}/package": {
            "post": {
                "tags": [
                    "ModelVersion"
                ],
                "summary": "Model Version Package operation.",
                "operationId": "RegistryModelVersions_Package",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "modelName",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Package operation request body.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PackageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PackageResponse"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Package Registry Model Version.": {
                        "$ref": "./examples/Registry/ModelVersion/package.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/registries/{registryName}/models/{modelName}/versions/{version}/startPendingUpload": {
            "post": {
                "tags": [
                    "ModelVersion"
                ],
                "summary": "Generate a storage location and credential for the client to upload a model asset to.",
                "operationId": "RegistryModelVersions_CreateOrGetStartPendingUpload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "registries.json#/parameters/RegistryNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "modelName",
                        "description": "Model name. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Pending upload request object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PendingUploadRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PendingUploadResponseDto"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrGetStartPendingUpload Registry Model Version.": {
                        "$ref": "./examples/Registry/ModelVersion/createOrGetStartPendingUpload.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints": {
            "get": {
                "tags": [
                    "BatchEndpoint"
                ],
                "summary": "Lists Batch inference endpoint in the workspace.",
                "operationId": "BatchEndpoints_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "query",
                        "name": "count",
                        "description": "Number of endpoints to be retrieved in a page of results.",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/BatchEndpointTrackedResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Workspace Batch Endpoint.": {
                        "$ref": "./examples/Workspace/BatchEndpoint/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}": {
            "delete": {
                "tags": [
                    "BatchEndpoint"
                ],
                "summary": "Delete Batch Inference Endpoint (asynchronous).",
                "operationId": "BatchEndpoints_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Inference Endpoint name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Workspace Batch Endpoint.": {
                        "$ref": "./examples/Workspace/BatchEndpoint/delete.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            },
            "get": {
                "tags": [
                    "BatchEndpoint"
                ],
                "summary": "Gets a batch inference endpoint by name.",
                "operationId": "BatchEndpoints_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Name for the Batch Endpoint.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/BatchEndpointTrackedResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Workspace Batch Endpoint.": {
                        "$ref": "./examples/Workspace/BatchEndpoint/get.json"
                    }
                }
            },
            "patch": {
                "tags": [
                    "BatchEndpoint"
                ],
                "summary": "Update a batch inference endpoint (asynchronous).",
                "operationId": "BatchEndpoints_Update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Name for the Batch inference endpoint.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Mutable batch inference endpoint definition object.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PartialMinimalTrackedResourceWithIdentity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/BatchEndpointTrackedResource"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Update Workspace Batch Endpoint.": {
                        "$ref": "./examples/Workspace/BatchEndpoint/update.json"
                    }
                },
                "x-ms-long-running-operation": true
            },
            "put": {
                "tags": [
                    "BatchEndpoint"
                ],
                "summary": "Creates a batch inference endpoint (asynchronous).",
                "operationId": "BatchEndpoints_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Name for the Batch inference endpoint.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Batch inference endpoint definition object.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchEndpointTrackedResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/BatchEndpointTrackedResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/BatchEndpointTrackedResource"
                        },
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Azure-AsyncOperation": {
                                "description": "URI to poll for asynchronous operation status.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Workspace Batch Endpoint.": {
                        "$ref": "./examples/Workspace/BatchEndpoint/createOrUpdate.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "original-uri"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/deployments": {
            "get": {
                "tags": [
                    "BatchDeployment"
                ],
                "summary": "Lists Batch inference deployments in the workspace.",
                "operationId": "BatchDeployments_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Endpoint name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "query",
                        "name": "$orderBy",
                        "description": "Ordering of list.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Top of list.",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/BatchDeploymentTrackedResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Workspace Batch Deployment.": {
                        "$ref": "./examples/Workspace/BatchDeployment/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/deployments/{deploymentName}": {
            "delete": {
                "tags": [
                    "BatchDeployment"
                ],
                "summary": "Delete Batch Inference deployment (asynchronous).",
                "operationId": "BatchDeployments_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Endpoint name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "deploymentName",
                        "description": "Inference deployment identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Workspace Batch Deployment.": {
                        "$ref": "./examples/Workspace/BatchDeployment/delete.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            },
            "get": {
                "tags": [
                    "BatchDeployment"
                ],
                "summary": "Gets a batch inference deployment by id.",
                "operationId": "BatchDeployments_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Endpoint name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "deploymentName",
                        "description": "The identifier for the Batch deployments.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/BatchDeploymentTrackedResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Workspace Batch Deployment.": {
                        "$ref": "./examples/Workspace/BatchDeployment/get.json"
                    }
                }
            },
            "patch": {
                "tags": [
                    "BatchDeployment"
                ],
                "summary": "Update a batch inference deployment (asynchronous).",
                "operationId": "BatchDeployments_Update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Inference endpoint name",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "deploymentName",
                        "description": "The identifier for the Batch inference deployment.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Batch inference deployment definition object.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PartialBatchDeploymentPartialMinimalTrackedResourceWithProperties"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/BatchDeploymentTrackedResource"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Update Workspace Batch Deployment.": {
                        "$ref": "./examples/Workspace/BatchDeployment/update.json"
                    }
                },
                "x-ms-long-running-operation": true
            },
            "put": {
                "tags": [
                    "BatchDeployment"
                ],
                "summary": "Creates/updates a batch inference deployment (asynchronous).",
                "operationId": "BatchDeployments_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Inference endpoint name",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "deploymentName",
                        "description": "The identifier for the Batch inference deployment.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Batch inference deployment definition object.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchDeploymentTrackedResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/BatchDeploymentTrackedResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/BatchDeploymentTrackedResource"
                        },
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Azure-AsyncOperation": {
                                "description": "URI to poll for asynchronous operation status.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Workspace Batch Deployment.": {
                        "$ref": "./examples/Workspace/BatchDeployment/createOrUpdate.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "original-uri"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/listkeys": {
            "post": {
                "tags": [
                    "BatchEndpoint"
                ],
                "summary": "Lists batch Inference Endpoint keys.",
                "operationId": "BatchEndpoints_ListKeys",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Inference Endpoint name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EndpointAuthKeys"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "ListKeys Workspace Batch Endpoint.": {
                        "$ref": "./examples/Workspace/BatchEndpoint/listKeys.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes": {
            "get": {
                "tags": [
                    "CodeContainer"
                ],
                "summary": "List containers.",
                "operationId": "CodeContainers_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CodeContainerResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Workspace Code Container.": {
                        "$ref": "./examples/Workspace/CodeContainer/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}": {
            "delete": {
                "tags": [
                    "CodeContainer"
                ],
                "summary": "Delete container.",
                "operationId": "CodeContainers_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Workspace Code Container.": {
                        "$ref": "./examples/Workspace/CodeContainer/delete.json"
                    }
                }
            },
            "get": {
                "tags": [
                    "CodeContainer"
                ],
                "summary": "Get container.",
                "operationId": "CodeContainers_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CodeContainerResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Workspace Code Container.": {
                        "$ref": "./examples/Workspace/CodeContainer/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "CodeContainer"
                ],
                "summary": "Create or update container.",
                "operationId": "CodeContainers_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Container entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CodeContainerResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/CodeContainerResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/CodeContainerResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Workspace Code Container.": {
                        "$ref": "./examples/Workspace/CodeContainer/createOrUpdate.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions": {
            "get": {
                "tags": [
                    "CodeVersion"
                ],
                "summary": "List versions.",
                "operationId": "CodeVersions_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "query",
                        "name": "$orderBy",
                        "description": "Ordering of list.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Maximum number of records to return.",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "hash",
                        "description": "If specified, return CodeVersion assets with specified content hash value, regardless of name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "hashVersion",
                        "description": "Hash algorithm version when listing by hash",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CodeVersionResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Workspace Code Version.": {
                        "$ref": "./examples/Workspace/CodeVersion/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions/{version}": {
            "delete": {
                "tags": [
                    "CodeVersion"
                ],
                "summary": "Delete version.",
                "operationId": "CodeVersions_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Workspace Code Version.": {
                        "$ref": "./examples/Workspace/CodeVersion/delete.json"
                    }
                }
            },
            "get": {
                "tags": [
                    "CodeVersion"
                ],
                "summary": "Get version.",
                "operationId": "CodeVersions_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CodeVersionResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Workspace Code Version.": {
                        "$ref": "./examples/Workspace/CodeVersion/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "CodeVersion"
                ],
                "summary": "Create or update version.",
                "operationId": "CodeVersions_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Version entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CodeVersionResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/CodeVersionResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/CodeVersionResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Workspace Code Version.": {
                        "$ref": "./examples/Workspace/CodeVersion/createOrUpdate.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions/{version}/startPendingUpload": {
            "post": {
                "tags": [
                    "CodeVersion"
                ],
                "summary": "Generate a storage location and credential for the client to upload a code asset to.",
                "operationId": "CodeVersions_CreateOrGetStartPendingUpload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Pending upload request object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PendingUploadRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PendingUploadResponseDto"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrGetStartPendingUpload Workspace Code Version.": {
                        "$ref": "./examples/Workspace/CodeVersion/createOrGetStartPendingUpload.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components": {
            "get": {
                "tags": [
                    "ComponentContainer"
                ],
                "summary": "List component containers.",
                "operationId": "ComponentContainers_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "listViewType",
                        "description": "View type for including/excluding (for example) archived entities.",
                        "type": "string",
                        "default": "ActiveOnly",
                        "enum": [
                            "ActiveOnly",
                            "ArchivedOnly",
                            "All"
                        ],
                        "x-ms-enum": {
                            "name": "ListViewType",
                            "modelAsString": true,
                            "values": [
                                {
                                    "value": "ActiveOnly"
                                },
                                {
                                    "value": "ArchivedOnly"
                                },
                                {
                                    "value": "All"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ComponentContainerResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Workspace Component Container.": {
                        "$ref": "./examples/Workspace/ComponentContainer/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}": {
            "delete": {
                "tags": [
                    "ComponentContainer"
                ],
                "summary": "Delete container.",
                "operationId": "ComponentContainers_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Workspace Component Container.": {
                        "$ref": "./examples/Workspace/ComponentContainer/delete.json"
                    }
                }
            },
            "get": {
                "tags": [
                    "ComponentContainer"
                ],
                "summary": "Get container.",
                "operationId": "ComponentContainers_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ComponentContainerResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Workspace Component Container.": {
                        "$ref": "./examples/Workspace/ComponentContainer/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "ComponentContainer"
                ],
                "summary": "Create or update container.",
                "operationId": "ComponentContainers_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Container entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ComponentContainerResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/ComponentContainerResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ComponentContainerResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Workspace Component Container.": {
                        "$ref": "./examples/Workspace/ComponentContainer/createOrUpdate.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}/versions": {
            "get": {
                "tags": [
                    "ComponentVersion"
                ],
                "summary": "List component versions.",
                "operationId": "ComponentVersions_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Component name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "query",
                        "name": "$orderBy",
                        "description": "Ordering of list.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Maximum number of records to return.",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "listViewType",
                        "description": "View type for including/excluding (for example) archived entities.",
                        "type": "string",
                        "default": "ActiveOnly",
                        "enum": [
                            "ActiveOnly",
                            "ArchivedOnly",
                            "All"
                        ],
                        "x-ms-enum": {
                            "name": "ListViewType",
                            "modelAsString": true,
                            "values": [
                                {
                                    "value": "ActiveOnly"
                                },
                                {
                                    "value": "ArchivedOnly"
                                },
                                {
                                    "value": "All"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "stage",
                        "description": "Component stage.",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ComponentVersionResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Workspace Component Version.": {
                        "$ref": "./examples/Workspace/ComponentVersion/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}/versions/{version}": {
            "delete": {
                "tags": [
                    "ComponentVersion"
                ],
                "summary": "Delete version.",
                "operationId": "ComponentVersions_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Workspace Component Version.": {
                        "$ref": "./examples/Workspace/ComponentVersion/delete.json"
                    }
                }
            },
            "get": {
                "tags": [
                    "ComponentVersion"
                ],
                "summary": "Get version.",
                "operationId": "ComponentVersions_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ComponentVersionResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Workspace Component Version.": {
                        "$ref": "./examples/Workspace/ComponentVersion/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "ComponentVersion"
                ],
                "summary": "Create or update version.",
                "operationId": "ComponentVersions_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Version entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ComponentVersionResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/ComponentVersionResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ComponentVersionResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Workspace Component Version.": {
                        "$ref": "./examples/Workspace/ComponentVersion/createOrUpdate.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data": {
            "get": {
                "tags": [
                    "DataContainer"
                ],
                "summary": "List data containers.",
                "operationId": "DataContainers_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "listViewType",
                        "description": "View type for including/excluding (for example) archived entities.",
                        "type": "string",
                        "default": "ActiveOnly",
                        "enum": [
                            "ActiveOnly",
                            "ArchivedOnly",
                            "All"
                        ],
                        "x-ms-enum": {
                            "name": "ListViewType",
                            "modelAsString": true,
                            "values": [
                                {
                                    "value": "ActiveOnly"
                                },
                                {
                                    "value": "ArchivedOnly"
                                },
                                {
                                    "value": "All"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DataContainerResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Workspace Data Container.": {
                        "$ref": "./examples/Workspace/DataContainer/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}": {
            "delete": {
                "tags": [
                    "DataContainer"
                ],
                "summary": "Delete container.",
                "operationId": "DataContainers_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Workspace Data Container.": {
                        "$ref": "./examples/Workspace/DataContainer/delete.json"
                    }
                }
            },
            "get": {
                "tags": [
                    "DataContainer"
                ],
                "summary": "Get container.",
                "operationId": "DataContainers_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DataContainerResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Workspace Data Container.": {
                        "$ref": "./examples/Workspace/DataContainer/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "DataContainer"
                ],
                "summary": "Create or update container.",
                "operationId": "DataContainers_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Container entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DataContainerResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/DataContainerResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/DataContainerResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Workspace Data Container.": {
                        "$ref": "./examples/Workspace/DataContainer/createOrUpdate.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}/versions": {
            "get": {
                "tags": [
                    "DataVersion"
                ],
                "summary": "List data versions in the data container",
                "operationId": "DataVersions_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Data container's name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "query",
                        "name": "$orderBy",
                        "description": "Please choose OrderBy value from ['createdtime', 'modifiedtime']",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Top count of results, top count cannot be greater than the page size.\r\n                              If topCount > page size, results with be default page size count will be returned",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "$tags",
                        "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "listViewType",
                        "description": "[ListViewType.ActiveOnly, ListViewType.ArchivedOnly, ListViewType.All]View type for including/excluding (for example) archived entities.",
                        "type": "string",
                        "default": "ActiveOnly",
                        "enum": [
                            "ActiveOnly",
                            "ArchivedOnly",
                            "All"
                        ],
                        "x-ms-enum": {
                            "name": "ListViewType",
                            "modelAsString": true,
                            "values": [
                                {
                                    "value": "ActiveOnly"
                                },
                                {
                                    "value": "ArchivedOnly"
                                },
                                {
                                    "value": "All"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "stage",
                        "description": "data stage",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DataVersionBaseResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Workspace Data Version Base.": {
                        "$ref": "./examples/Workspace/DataVersionBase/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}/versions/{version}": {
            "delete": {
                "tags": [
                    "DataVersion"
                ],
                "summary": "Delete version.",
                "operationId": "DataVersions_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Workspace Data Version Base.": {
                        "$ref": "./examples/Workspace/DataVersionBase/delete.json"
                    }
                }
            },
            "get": {
                "tags": [
                    "DataVersion"
                ],
                "summary": "Get version.",
                "operationId": "DataVersions_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DataVersionBaseResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Workspace Data Version Base.": {
                        "$ref": "./examples/Workspace/DataVersionBase/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "DataVersion"
                ],
                "summary": "Create or update version.",
                "operationId": "DataVersions_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Version entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DataVersionBaseResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/DataVersionBaseResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/DataVersionBaseResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Workspace Data Version Base.": {
                        "$ref": "./examples/Workspace/DataVersionBase/createOrUpdate.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores": {
            "get": {
                "tags": [
                    "Datastore"
                ],
                "summary": "List datastores.",
                "operationId": "Datastores_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "count",
                        "description": "Maximum number of results to return.",
                        "type": "integer",
                        "format": "int32",
                        "default": 30
                    },
                    {
                        "in": "query",
                        "name": "isDefault",
                        "description": "Filter down to the workspace default datastore.",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "names",
                        "description": "Names of datastores to return.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "searchText",
                        "description": "Text to search for in the datastore names.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "orderBy",
                        "description": "Order by property (createdtime | modifiedtime | name).",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "orderByAsc",
                        "description": "Order by property in ascending order.",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DatastoreResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List datastores.": {
                        "$ref": "./examples/Datastore/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}": {
            "delete": {
                "tags": [
                    "Datastore"
                ],
                "summary": "Delete datastore.",
                "operationId": "Datastores_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Datastore name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete datastore.": {
                        "$ref": "./examples/Datastore/delete.json"
                    }
                }
            },
            "get": {
                "tags": [
                    "Datastore"
                ],
                "summary": "Get datastore.",
                "operationId": "Datastores_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Datastore name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DatastoreResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get datastore.": {
                        "$ref": "./examples/Datastore/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "Datastore"
                ],
                "summary": "Create or update datastore.",
                "operationId": "Datastores_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Datastore name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "query",
                        "name": "skipValidation",
                        "description": "Flag to skip validation.",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Datastore entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DatastoreResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/DatastoreResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/DatastoreResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate datastore (AzureBlob w/ AccountKey).": {
                        "$ref": "./examples/Datastore/AzureBlobWAccountKey/createOrUpdate.json"
                    },
                    "CreateOrUpdate datastore (Azure Data Lake Gen1 w/ ServicePrincipal).": {
                        "$ref": "./examples/Datastore/AzureDataLakeGen1WServicePrincipal/createOrUpdate.json"
                    },
                    "CreateOrUpdate datastore (Azure Data Lake Gen2 w/ Service Principal).": {
                        "$ref": "./examples/Datastore/AzureDataLakeGen2WServicePrincipal/createOrUpdate.json"
                    },
                    "CreateOrUpdate datastore (Azure File store w/ AccountKey).": {
                        "$ref": "./examples/Datastore/AzureFileWAccountKey/createOrUpdate.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}/listSecrets": {
            "post": {
                "tags": [
                    "Datastore"
                ],
                "summary": "Get datastore secrets.",
                "operationId": "Datastores_ListSecrets",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Datastore name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "description": "Base definition for datastore secrets.",
                            "$ref": "#/definitions/DatastoreSecrets"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get datastore secrets.": {
                        "$ref": "./examples/Datastore/listSecrets.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments": {
            "get": {
                "tags": [
                    "EnvironmentContainer"
                ],
                "summary": "List environment containers.",
                "operationId": "EnvironmentContainers_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "listViewType",
                        "description": "View type for including/excluding (for example) archived entities.",
                        "type": "string",
                        "default": "ActiveOnly",
                        "enum": [
                            "ActiveOnly",
                            "ArchivedOnly",
                            "All"
                        ],
                        "x-ms-enum": {
                            "name": "ListViewType",
                            "modelAsString": true,
                            "values": [
                                {
                                    "value": "ActiveOnly"
                                },
                                {
                                    "value": "ArchivedOnly"
                                },
                                {
                                    "value": "All"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EnvironmentContainerResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Workspace Environment Container.": {
                        "$ref": "./examples/Workspace/EnvironmentContainer/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}": {
            "delete": {
                "tags": [
                    "EnvironmentContainer"
                ],
                "summary": "Delete container.",
                "operationId": "EnvironmentContainers_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Workspace Environment Container.": {
                        "$ref": "./examples/Workspace/EnvironmentContainer/delete.json"
                    }
                }
            },
            "get": {
                "tags": [
                    "EnvironmentContainer"
                ],
                "summary": "Get container.",
                "operationId": "EnvironmentContainers_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EnvironmentContainerResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Workspace Environment Container.": {
                        "$ref": "./examples/Workspace/EnvironmentContainer/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "EnvironmentContainer"
                ],
                "summary": "Create or update container.",
                "operationId": "EnvironmentContainers_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Container entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EnvironmentContainerResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/EnvironmentContainerResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/EnvironmentContainerResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Workspace Environment Container.": {
                        "$ref": "./examples/Workspace/EnvironmentContainer/createOrUpdate.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}/versions": {
            "get": {
                "tags": [
                    "EnvironmentVersion"
                ],
                "summary": "List versions.",
                "operationId": "EnvironmentVersions_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "query",
                        "name": "$orderBy",
                        "description": "Ordering of list.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Maximum number of records to return.",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "listViewType",
                        "description": "View type for including/excluding (for example) archived entities.",
                        "type": "string",
                        "default": "ActiveOnly",
                        "enum": [
                            "ActiveOnly",
                            "ArchivedOnly",
                            "All"
                        ],
                        "x-ms-enum": {
                            "name": "ListViewType",
                            "modelAsString": true,
                            "values": [
                                {
                                    "value": "ActiveOnly"
                                },
                                {
                                    "value": "ArchivedOnly"
                                },
                                {
                                    "value": "All"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "stage",
                        "description": "Stage for including/excluding (for example) archived entities. Takes priority over listViewType",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EnvironmentVersionResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Workspace Environment Version.": {
                        "$ref": "./examples/Workspace/EnvironmentVersion/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}/versions/{version}": {
            "delete": {
                "tags": [
                    "EnvironmentVersion"
                ],
                "summary": "Delete version.",
                "operationId": "EnvironmentVersions_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Workspace Environment Version.": {
                        "$ref": "./examples/Workspace/EnvironmentVersion/delete.json"
                    }
                }
            },
            "get": {
                "tags": [
                    "EnvironmentVersion"
                ],
                "summary": "Get version.",
                "operationId": "EnvironmentVersions_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EnvironmentVersionResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Workspace Environment Version.": {
                        "$ref": "./examples/Workspace/EnvironmentVersion/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "EnvironmentVersion"
                ],
                "summary": "Creates or updates an EnvironmentVersion.",
                "operationId": "EnvironmentVersions_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Name of EnvironmentVersion. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version of EnvironmentVersion.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Definition of EnvironmentVersion.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EnvironmentVersionResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/EnvironmentVersionResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/EnvironmentVersionResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Workspace Environment Version.": {
                        "$ref": "./examples/Workspace/EnvironmentVersion/createOrUpdate.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/featuresets": {
            "get": {
                "tags": [
                    "FeaturesetContainer"
                ],
                "summary": "List featurestore entity containers.",
                "operationId": "FeaturesetContainers_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "listViewType",
                        "description": "[ListViewType.ActiveOnly, ListViewType.ArchivedOnly, ListViewType.All]View type for including/excluding (for example) archived entities.",
                        "type": "string",
                        "default": "ActiveOnly",
                        "enum": [
                            "ActiveOnly",
                            "ArchivedOnly",
                            "All"
                        ],
                        "x-ms-enum": {
                            "name": "ListViewType",
                            "modelAsString": true,
                            "values": [
                                {
                                    "value": "ActiveOnly"
                                },
                                {
                                    "value": "ArchivedOnly"
                                },
                                {
                                    "value": "All"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "pageSize",
                        "description": "page size",
                        "type": "integer",
                        "format": "int32",
                        "default": 20
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "name for the featureset",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "description",
                        "description": "description for the feature set",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "createdBy",
                        "description": "createdBy user name",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FeaturesetContainerResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Workspace Featureset Container.": {
                        "$ref": "./examples/Workspace/FeaturesetContainer/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/featuresets/{featuresetName}/versions/{featuresetVersion}/features": {
            "get": {
                "tags": [
                    "Feature"
                ],
                "summary": "List Features.",
                "operationId": "Features_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "featuresetName",
                        "description": "Featureset name. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "featuresetVersion",
                        "description": "Featureset Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "featureName",
                        "description": "feature name.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "description",
                        "description": "Description of the featureset.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "listViewType",
                        "description": "[ListViewType.ActiveOnly, ListViewType.ArchivedOnly, ListViewType.All]View type for including/excluding (for example) archived entities.",
                        "type": "string",
                        "default": "ActiveOnly",
                        "enum": [
                            "ActiveOnly",
                            "ArchivedOnly",
                            "All"
                        ],
                        "x-ms-enum": {
                            "name": "ListViewType",
                            "modelAsString": true,
                            "values": [
                                {
                                    "value": "ActiveOnly"
                                },
                                {
                                    "value": "ArchivedOnly"
                                },
                                {
                                    "value": "All"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "pageSize",
                        "description": "Page size.",
                        "type": "integer",
                        "format": "int32",
                        "default": 1000
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FeatureResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Feature.": {
                        "$ref": "./examples/Feature/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/featuresets/{featuresetName}/versions/{featuresetVersion}/features/{featureName}": {
            "get": {
                "tags": [
                    "Feature"
                ],
                "summary": "Get feature.",
                "operationId": "Features_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "featuresetName",
                        "description": "Feature set name. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "featuresetVersion",
                        "description": "Feature set version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "featureName",
                        "description": "Feature Name. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FeatureResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Feature.": {
                        "$ref": "./examples/Feature/get.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/featuresets/{name}": {
            "delete": {
                "tags": [
                    "FeaturesetContainer"
                ],
                "summary": "Delete container.",
                "operationId": "FeaturesetContainers_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Workspace Featureset Container.": {
                        "$ref": "./examples/Workspace/FeaturesetContainer/delete.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            },
            "get": {
                "tags": [
                    "FeaturesetContainer"
                ],
                "summary": "Get container.",
                "operationId": "FeaturesetContainers_GetEntity",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FeaturesetContainerResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "GetEntity Workspace Featureset Container.": {
                        "$ref": "./examples/Workspace/FeaturesetContainer/getEntity.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "FeaturesetContainer"
                ],
                "summary": "Create or update container.",
                "operationId": "FeaturesetContainers_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Container entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FeaturesetContainerResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/FeaturesetContainerResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/FeaturesetContainerResource"
                        },
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Azure-AsyncOperation": {
                                "description": "URI to poll for asynchronous operation status.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Workspace Featureset Container.": {
                        "$ref": "./examples/Workspace/FeaturesetContainer/createOrUpdate.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "original-uri"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/featuresets/{name}/versions": {
            "get": {
                "tags": [
                    "FeaturesetVersion"
                ],
                "summary": "List versions.",
                "operationId": "FeaturesetVersions_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Featureset name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "listViewType",
                        "description": "[ListViewType.ActiveOnly, ListViewType.ArchivedOnly, ListViewType.All]View type for including/excluding (for example) archived entities.",
                        "type": "string",
                        "default": "ActiveOnly",
                        "enum": [
                            "ActiveOnly",
                            "ArchivedOnly",
                            "All"
                        ],
                        "x-ms-enum": {
                            "name": "ListViewType",
                            "modelAsString": true,
                            "values": [
                                {
                                    "value": "ActiveOnly"
                                },
                                {
                                    "value": "ArchivedOnly"
                                },
                                {
                                    "value": "All"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "pageSize",
                        "description": "page size",
                        "type": "integer",
                        "format": "int32",
                        "default": 20
                    },
                    {
                        "in": "query",
                        "name": "versionName",
                        "description": "name for the featureset version",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "description": "featureset version",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "description",
                        "description": "description for the feature set version",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "createdBy",
                        "description": "createdBy user name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "stage",
                        "description": "Specifies the featurestore stage",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FeaturesetVersionResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Workspace Featureset Version.": {
                        "$ref": "./examples/Workspace/FeaturesetVersion/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/featuresets/{name}/versions/{version}": {
            "delete": {
                "tags": [
                    "FeaturesetVersion"
                ],
                "summary": "Delete version.",
                "operationId": "FeaturesetVersions_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Workspace Featureset Version.": {
                        "$ref": "./examples/Workspace/FeaturesetVersion/delete.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            },
            "get": {
                "tags": [
                    "FeaturesetVersion"
                ],
                "summary": "Get version.",
                "operationId": "FeaturesetVersions_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FeaturesetVersionResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Workspace Featureset Version.": {
                        "$ref": "./examples/Workspace/FeaturesetVersion/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "FeaturesetVersion"
                ],
                "summary": "Create or update version.",
                "operationId": "FeaturesetVersions_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Version entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FeaturesetVersionResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/FeaturesetVersionResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/FeaturesetVersionResource"
                        },
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Azure-AsyncOperation": {
                                "description": "URI to poll for asynchronous operation status.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Workspace Featureset Version.": {
                        "$ref": "./examples/Workspace/FeaturesetVersion/createOrUpdate.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "original-uri"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/featuresets/{name}/versions/{version}/backfill": {
            "post": {
                "tags": [
                    "FeaturesetVersion"
                ],
                "summary": "Backfill.",
                "operationId": "FeaturesetVersions_Backfill",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Feature set version backfill request entity.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FeaturesetVersionBackfillRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FeaturesetJob"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Backfill Workspace Featureset Version.": {
                        "$ref": "./examples/Workspace/FeaturesetVersion/backfill.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/featuresets/{name}/versions/{version}/listMaterializationJobs": {
            "post": {
                "tags": [
                    "FeaturesetVersion"
                ],
                "summary": "List materialization Jobs.",
                "operationId": "FeaturesetVersions_ListMaterializationJobs",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "filters",
                        "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "featureWindowStart",
                        "description": "Start time of the feature window to filter materialization jobs.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "featureWindowEnd",
                        "description": "End time of the feature window to filter materialization jobs.",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FeaturesetJobArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "ListMaterializationJobs Workspace Featureset Version.": {
                        "$ref": "./examples/Workspace/FeaturesetVersion/listMaterializationJobs.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/featurestoreEntities": {
            "get": {
                "tags": [
                    "FeaturestoreEntityContainer"
                ],
                "summary": "List featurestore entity containers.",
                "operationId": "FeaturestoreEntityContainers_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "listViewType",
                        "description": "[ListViewType.ActiveOnly, ListViewType.ArchivedOnly, ListViewType.All]View type for including/excluding (for example) archived entities.",
                        "type": "string",
                        "default": "ActiveOnly",
                        "enum": [
                            "ActiveOnly",
                            "ArchivedOnly",
                            "All"
                        ],
                        "x-ms-enum": {
                            "name": "ListViewType",
                            "modelAsString": true,
                            "values": [
                                {
                                    "value": "ActiveOnly"
                                },
                                {
                                    "value": "ArchivedOnly"
                                },
                                {
                                    "value": "All"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "pageSize",
                        "description": "page size",
                        "type": "integer",
                        "format": "int32",
                        "default": 20
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "name for the featurestore entity",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "description",
                        "description": "description for the featurestore entity",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "createdBy",
                        "description": "createdBy user name",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FeaturestoreEntityContainerResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Workspace Featurestore Entity Container.": {
                        "$ref": "./examples/Workspace/FeaturestoreEntityContainer/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/featurestoreEntities/{name}": {
            "delete": {
                "tags": [
                    "FeaturestoreEntityContainer"
                ],
                "summary": "Delete container.",
                "operationId": "FeaturestoreEntityContainers_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Workspace Featurestore Entity Container.": {
                        "$ref": "./examples/Workspace/FeaturestoreEntityContainer/delete.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            },
            "get": {
                "tags": [
                    "FeaturestoreEntityContainer"
                ],
                "summary": "Get container.",
                "operationId": "FeaturestoreEntityContainers_GetEntity",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FeaturestoreEntityContainerResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "GetEntity Workspace Featurestore Entity Container.": {
                        "$ref": "./examples/Workspace/FeaturestoreEntityContainer/getEntity.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "FeaturestoreEntityContainer"
                ],
                "summary": "Create or update container.",
                "operationId": "FeaturestoreEntityContainers_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Container entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FeaturestoreEntityContainerResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/FeaturestoreEntityContainerResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/FeaturestoreEntityContainerResource"
                        },
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Azure-AsyncOperation": {
                                "description": "URI to poll for asynchronous operation status.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Workspace Featurestore Entity Container.": {
                        "$ref": "./examples/Workspace/FeaturestoreEntityContainer/createOrUpdate.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "original-uri"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/featurestoreEntities/{name}/versions": {
            "get": {
                "tags": [
                    "FeaturestoreEntityVersion"
                ],
                "summary": "List versions.",
                "operationId": "FeaturestoreEntityVersions_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Feature entity name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "listViewType",
                        "description": "[ListViewType.ActiveOnly, ListViewType.ArchivedOnly, ListViewType.All]View type for including/excluding (for example) archived entities.",
                        "type": "string",
                        "default": "ActiveOnly",
                        "enum": [
                            "ActiveOnly",
                            "ArchivedOnly",
                            "All"
                        ],
                        "x-ms-enum": {
                            "name": "ListViewType",
                            "modelAsString": true,
                            "values": [
                                {
                                    "value": "ActiveOnly"
                                },
                                {
                                    "value": "ArchivedOnly"
                                },
                                {
                                    "value": "All"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "pageSize",
                        "description": "page size",
                        "type": "integer",
                        "format": "int32",
                        "default": 20
                    },
                    {
                        "in": "query",
                        "name": "versionName",
                        "description": "name for the featurestore entity version",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "description": "featurestore entity version",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "description",
                        "description": "description for the feature entity version",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "createdBy",
                        "description": "createdBy user name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "stage",
                        "description": "Specifies the featurestore stage",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FeaturestoreEntityVersionResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Workspace Featurestore Entity Version.": {
                        "$ref": "./examples/Workspace/FeaturestoreEntityVersion/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/featurestoreEntities/{name}/versions/{version}": {
            "delete": {
                "tags": [
                    "FeaturestoreEntityVersion"
                ],
                "summary": "Delete version.",
                "operationId": "FeaturestoreEntityVersions_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Workspace Featurestore Entity Version.": {
                        "$ref": "./examples/Workspace/FeaturestoreEntityVersion/delete.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            },
            "get": {
                "tags": [
                    "FeaturestoreEntityVersion"
                ],
                "summary": "Get version.",
                "operationId": "FeaturestoreEntityVersions_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FeaturestoreEntityVersionResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Workspace Featurestore Entity Version.": {
                        "$ref": "./examples/Workspace/FeaturestoreEntityVersion/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "FeaturestoreEntityVersion"
                ],
                "summary": "Create or update version.",
                "operationId": "FeaturestoreEntityVersions_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Version entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FeaturestoreEntityVersionResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/FeaturestoreEntityVersionResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/FeaturestoreEntityVersionResource"
                        },
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Azure-AsyncOperation": {
                                "description": "URI to poll for asynchronous operation status.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Workspace Featurestore Entity Version.": {
                        "$ref": "./examples/Workspace/FeaturestoreEntityVersion/createOrUpdate.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "original-uri"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs": {
            "get": {
                "tags": [
                    "Job"
                ],
                "summary": "Lists Jobs in the workspace.",
                "operationId": "Jobs_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "jobType",
                        "description": "Type of job to be returned.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "tag",
                        "description": "Jobs returned will have this tag key.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "listViewType",
                        "description": "View type for including/excluding (for example) archived entities.",
                        "type": "string",
                        "default": "ActiveOnly",
                        "enum": [
                            "ActiveOnly",
                            "ArchivedOnly",
                            "All"
                        ],
                        "x-ms-enum": {
                            "name": "ListViewType",
                            "modelAsString": true,
                            "values": [
                                {
                                    "value": "ActiveOnly"
                                },
                                {
                                    "value": "ArchivedOnly"
                                },
                                {
                                    "value": "All"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "assetName",
                        "description": "Asset name the job's named output is registered with",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "scheduled",
                        "description": "Indicator whether the job is scheduled job.",
                        "type": "boolean"
                    },
                    {
                        "in": "query",
                        "name": "scheduleId",
                        "description": "The scheduled id for listing the job triggered from",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/JobBaseResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Command Job.": {
                        "$ref": "./examples/Job/CommandJob/list.json"
                    },
                    "List AutoML Job.": {
                        "$ref": "./examples/Job/AutoMLJob/list.json"
                    },
                    "List Sweep Job.": {
                        "$ref": "./examples/Job/SweepJob/list.json"
                    },
                    "List Pipeline Job.": {
                        "$ref": "./examples/Job/PipelineJob/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs/{id}": {
            "delete": {
                "tags": [
                    "Job"
                ],
                "summary": "Deletes a Job (asynchronous).",
                "operationId": "Jobs_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The name and identifier for the Job. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Job.": {
                        "$ref": "./examples/Job/delete.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            },
            "get": {
                "tags": [
                    "Job"
                ],
                "summary": "Gets a Job by name/id.",
                "operationId": "Jobs_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The name and identifier for the Job. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/JobBaseResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Command Job.": {
                        "$ref": "./examples/Job/CommandJob/get.json"
                    },
                    "Get AutoML Job.": {
                        "$ref": "./examples/Job/AutoMLJob/get.json"
                    },
                    "Get Sweep Job.": {
                        "$ref": "./examples/Job/SweepJob/get.json"
                    },
                    "Get Pipeline Job.": {
                        "$ref": "./examples/Job/PipelineJob/get.json"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Job"
                ],
                "summary": "Updates a Job.",
                "operationId": "Jobs_Update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The name and identifier for the Job. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Job definition to apply during the operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PartialJobBasePartialResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/JobBaseResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Update Job.": {
                        "$ref": "./examples/Job/update.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "Job"
                ],
                "summary": "Creates and executes a Job.",
                "operationId": "Jobs_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The name and identifier for the Job. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Job definition object.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobBaseResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/JobBaseResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/JobBaseResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Command Job.": {
                        "$ref": "./examples/Job/CommandJob/createOrUpdate.json"
                    },
                    "CreateOrUpdate AutoML Job.": {
                        "$ref": "./examples/Job/AutoMLJob/createOrUpdate.json"
                    },
                    "CreateOrUpdate Sweep Job.": {
                        "$ref": "./examples/Job/SweepJob/createOrUpdate.json"
                    },
                    "CreateOrUpdate Pipeline Job.": {
                        "$ref": "./examples/Job/PipelineJob/createOrUpdate.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs/{id}/cancel": {
            "post": {
                "tags": [
                    "Job"
                ],
                "summary": "Cancels a Job (asynchronous).",
                "operationId": "Jobs_Cancel",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The name and identifier for the Job. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Cancel Job.": {
                        "$ref": "./examples/Job/cancel.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs": {
            "get": {
                "tags": [
                    "LabelingJob"
                ],
                "summary": "Lists labeling jobs in the workspace.",
                "operationId": "LabelingJobs_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Number of labeling jobs to return.",
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LabelingJobResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Labeling Job.": {
                        "$ref": "./examples/LabelingJob/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}": {
            "delete": {
                "tags": [
                    "LabelingJob"
                ],
                "summary": "Delete a labeling job.",
                "operationId": "LabelingJobs_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The name and identifier for the LabelingJob.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Labeling Job.": {
                        "$ref": "./examples/LabelingJob/delete.json"
                    }
                }
            },
            "get": {
                "tags": [
                    "LabelingJob"
                ],
                "summary": "Gets a labeling job by name/id.",
                "operationId": "LabelingJobs_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The name and identifier for the LabelingJob.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LabelingJobResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Labeling Job.": {
                        "$ref": "./examples/LabelingJob/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "LabelingJob"
                ],
                "summary": "Creates or updates a labeling job (asynchronous).",
                "operationId": "LabelingJobs_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The name and identifier for the LabelingJob.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "LabelingJob definition object.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LabelingJobResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/LabelingJobResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/LabelingJobResource"
                        },
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Azure-AsyncOperation": {
                                "description": "URI to poll for asynchronous operation status.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Labeling Job.": {
                        "$ref": "./examples/LabelingJob/createOrUpdate.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "original-uri"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}/exportLabels": {
            "post": {
                "tags": [
                    "LabelingJob"
                ],
                "summary": "Export labels from a labeling job (asynchronous). Using the URL in the Location header, the status of the job export operation can be tracked.",
                "operationId": "LabelingJobs_ExportLabels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The name and identifier for the LabelingJob.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The export summary.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExportSummary"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ExportSummary"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "ExportLabels Labeling Job.": {
                        "$ref": "./examples/LabelingJob/exportLabels.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}/pause": {
            "post": {
                "tags": [
                    "LabelingJob"
                ],
                "summary": "Pause a labeling job.",
                "operationId": "LabelingJobs_Pause",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The name and identifier for the LabelingJob.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LabelingJob"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Pause Labeling Job.": {
                        "$ref": "./examples/LabelingJob/pause.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}/resume": {
            "post": {
                "tags": [
                    "LabelingJob"
                ],
                "summary": "Resume a labeling job (asynchronous).",
                "operationId": "LabelingJobs_Resume",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The name and identifier for the LabelingJob.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LabelingJob"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Resume Labeling Job.": {
                        "$ref": "./examples/LabelingJob/resume.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models": {
            "get": {
                "tags": [
                    "ModelContainer"
                ],
                "summary": "List model containers.",
                "operationId": "ModelContainers_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "count",
                        "description": "Maximum number of results to return.",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "listViewType",
                        "description": "View type for including/excluding (for example) archived entities.",
                        "type": "string",
                        "default": "ActiveOnly",
                        "enum": [
                            "ActiveOnly",
                            "ArchivedOnly",
                            "All"
                        ],
                        "x-ms-enum": {
                            "name": "ListViewType",
                            "modelAsString": true,
                            "values": [
                                {
                                    "value": "ActiveOnly"
                                },
                                {
                                    "value": "ArchivedOnly"
                                },
                                {
                                    "value": "All"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ModelContainerResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Workspace Model Container.": {
                        "$ref": "./examples/Workspace/ModelContainer/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}": {
            "delete": {
                "tags": [
                    "ModelContainer"
                ],
                "summary": "Delete container.",
                "operationId": "ModelContainers_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Workspace Model Container.": {
                        "$ref": "./examples/Workspace/ModelContainer/delete.json"
                    }
                }
            },
            "get": {
                "tags": [
                    "ModelContainer"
                ],
                "summary": "Get container.",
                "operationId": "ModelContainers_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ModelContainerResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Workspace Model Container.": {
                        "$ref": "./examples/Workspace/ModelContainer/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "ModelContainer"
                ],
                "summary": "Create or update container.",
                "operationId": "ModelContainers_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Container entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ModelContainerResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/ModelContainerResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ModelContainerResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Workspace Model Container.": {
                        "$ref": "./examples/Workspace/ModelContainer/createOrUpdate.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions": {
            "get": {
                "tags": [
                    "ModelVersion"
                ],
                "summary": "List model versions.",
                "operationId": "ModelVersions_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Model name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "$orderBy",
                        "description": "Ordering of list.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Maximum number of records to return.",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "description": "Model version.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "description",
                        "description": "Model description.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Number of initial results to skip.",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "properties",
                        "description": "Comma-separated list of property names (and optionally values). Example: prop1,prop2=value2",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "feed",
                        "description": "Name of the feed.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "listViewType",
                        "description": "View type for including/excluding (for example) archived entities.",
                        "type": "string",
                        "default": "ActiveOnly",
                        "enum": [
                            "ActiveOnly",
                            "ArchivedOnly",
                            "All"
                        ],
                        "x-ms-enum": {
                            "name": "ListViewType",
                            "modelAsString": true,
                            "values": [
                                {
                                    "value": "ActiveOnly"
                                },
                                {
                                    "value": "ArchivedOnly"
                                },
                                {
                                    "value": "All"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "stage",
                        "description": "Model stage",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ModelVersionResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Workspace Model Version.": {
                        "$ref": "./examples/Workspace/ModelVersion/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions/{version}": {
            "delete": {
                "tags": [
                    "ModelVersion"
                ],
                "summary": "Delete version.",
                "operationId": "ModelVersions_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Workspace Model Version.": {
                        "$ref": "./examples/Workspace/ModelVersion/delete.json"
                    }
                }
            },
            "get": {
                "tags": [
                    "ModelVersion"
                ],
                "summary": "Get version.",
                "operationId": "ModelVersions_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ModelVersionResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Workspace Model Version.": {
                        "$ref": "./examples/Workspace/ModelVersion/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "ModelVersion"
                ],
                "summary": "Create or update version.",
                "operationId": "ModelVersions_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Version entity to create or update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ModelVersionResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/ModelVersionResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ModelVersionResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Workspace Model Version.": {
                        "$ref": "./examples/Workspace/ModelVersion/createOrUpdate.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions/{version}/package": {
            "post": {
                "tags": [
                    "ModelVersion"
                ],
                "summary": "Model Version Package operation.",
                "operationId": "ModelVersions_Package",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Container name. This is case-sensitive.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "description": "Version identifier. This is case-sensitive.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Package operation request body.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PackageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PackageResponse"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Package Workspace Model Version.": {
                        "$ref": "./examples/Workspace/ModelVersion/package.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints": {
            "get": {
                "tags": [
                    "OnlineEndpoint"
                ],
                "summary": "List Online Endpoints.",
                "operationId": "OnlineEndpoints_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "Name of the endpoint.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "count",
                        "description": "Number of endpoints to be retrieved in a page of results.",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "query",
                        "name": "computeType",
                        "description": "EndpointComputeType to be filtered by.",
                        "type": "string",
                        "enum": [
                            "Managed",
                            "Kubernetes",
                            "AzureMLCompute"
                        ],
                        "x-ms-enum": {
                            "name": "EndpointComputeType",
                            "modelAsString": true
                        }
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "description": "A set of tags with which to filter the returned models. It is a comma separated string of tags key or tags key=value. Example: tagKey1,tagKey2,tagKey3=value3 .",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "properties",
                        "description": "A set of properties with which to filter the returned models. It is a comma separated string of properties key and/or properties key=value Example: propKey1,propKey2,propKey3=value3 .",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "orderBy",
                        "description": "The option to order the response.",
                        "type": "string",
                        "enum": [
                            "CreatedAtDesc",
                            "CreatedAtAsc",
                            "UpdatedAtDesc",
                            "UpdatedAtAsc"
                        ],
                        "x-ms-enum": {
                            "name": "OrderString",
                            "modelAsString": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OnlineEndpointTrackedResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Workspace Online Endpoint.": {
                        "$ref": "./examples/Workspace/OnlineEndpoint/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}": {
            "delete": {
                "tags": [
                    "OnlineEndpoint"
                ],
                "summary": "Delete Online Endpoint (asynchronous).",
                "operationId": "OnlineEndpoints_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Online Endpoint name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Workspace Online Endpoint.": {
                        "$ref": "./examples/Workspace/OnlineEndpoint/delete.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            },
            "get": {
                "tags": [
                    "OnlineEndpoint"
                ],
                "summary": "Get Online Endpoint.",
                "operationId": "OnlineEndpoints_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Online Endpoint name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OnlineEndpointTrackedResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Workspace Online Endpoint.": {
                        "$ref": "./examples/Workspace/OnlineEndpoint/get.json"
                    }
                }
            },
            "patch": {
                "tags": [
                    "OnlineEndpoint"
                ],
                "summary": "Update Online Endpoint (asynchronous).",
                "operationId": "OnlineEndpoints_Update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Online Endpoint name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Online Endpoint entity to apply during operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PartialMinimalTrackedResourceWithIdentity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OnlineEndpointTrackedResource"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Update Workspace Online Endpoint.": {
                        "$ref": "./examples/Workspace/OnlineEndpoint/update.json"
                    }
                },
                "x-ms-long-running-operation": true
            },
            "put": {
                "tags": [
                    "OnlineEndpoint"
                ],
                "summary": "Create or update Online Endpoint (asynchronous).",
                "operationId": "OnlineEndpoints_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Online Endpoint name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Online Endpoint entity to apply during operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnlineEndpointTrackedResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/OnlineEndpointTrackedResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/OnlineEndpointTrackedResource"
                        },
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Azure-AsyncOperation": {
                                "description": "URI to poll for asynchronous operation status.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Workspace Online Endpoint.": {
                        "$ref": "./examples/Workspace/OnlineEndpoint/createOrUpdate.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "original-uri"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments": {
            "get": {
                "tags": [
                    "OnlineDeployment"
                ],
                "summary": "List Inference Endpoint Deployments.",
                "operationId": "OnlineDeployments_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Inference endpoint name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "query",
                        "name": "$orderBy",
                        "description": "Ordering of list.",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "$top",
                        "description": "Top of list.",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OnlineDeploymentTrackedResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Online Deployments.": {
                        "$ref": "./examples/OnlineDeployment/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}": {
            "delete": {
                "tags": [
                    "OnlineDeployment"
                ],
                "summary": "Delete Inference Endpoint Deployment (asynchronous).",
                "operationId": "OnlineDeployments_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Inference endpoint name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "deploymentName",
                        "description": "Inference Endpoint Deployment name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Workspace Online Deployment.": {
                        "$ref": "./examples/Workspace/OnlineDeployment/delete.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            },
            "get": {
                "tags": [
                    "OnlineDeployment"
                ],
                "summary": "Get Inference Deployment Deployment.",
                "operationId": "OnlineDeployments_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Inference endpoint name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "deploymentName",
                        "description": "Inference Endpoint Deployment name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OnlineDeploymentTrackedResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Managed Online Deployment.": {
                        "$ref": "./examples/OnlineDeployment/ManagedOnlineDeployment/get.json"
                    },
                    "Get Kubernetes Online Deployment.": {
                        "$ref": "./examples/OnlineDeployment/KubernetesOnlineDeployment/get.json"
                    }
                }
            },
            "patch": {
                "tags": [
                    "OnlineDeployment"
                ],
                "summary": "Update Online Deployment (asynchronous).",
                "operationId": "OnlineDeployments_Update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Online Endpoint name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "deploymentName",
                        "description": "Inference Endpoint Deployment name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Online Endpoint entity to apply during operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PartialMinimalTrackedResourceWithSku"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OnlineDeploymentTrackedResource"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Update Managed Online Deployment.": {
                        "$ref": "./examples/OnlineDeployment/ManagedOnlineDeployment/update.json"
                    },
                    "Update Kubernetes Online Deployment.": {
                        "$ref": "./examples/OnlineDeployment/KubernetesOnlineDeployment/update.json"
                    }
                },
                "x-ms-long-running-operation": true
            },
            "put": {
                "tags": [
                    "OnlineDeployment"
                ],
                "summary": "Create or update Inference Endpoint Deployment (asynchronous).",
                "operationId": "OnlineDeployments_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Inference endpoint name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "in": "path",
                        "name": "deploymentName",
                        "description": "Inference Endpoint Deployment name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Inference Endpoint entity to apply during operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnlineDeploymentTrackedResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/OnlineDeploymentTrackedResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/OnlineDeploymentTrackedResource"
                        },
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Azure-AsyncOperation": {
                                "description": "URI to poll for asynchronous operation status.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Managed Online Deployment.": {
                        "$ref": "./examples/OnlineDeployment/ManagedOnlineDeployment/createOrUpdate.json"
                    },
                    "CreateOrUpdate Kubernetes Online Deployment.": {
                        "$ref": "./examples/OnlineDeployment/KubernetesOnlineDeployment/createOrUpdate.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "original-uri"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}/getLogs": {
            "post": {
                "tags": [
                    "OnlineDeployment"
                ],
                "summary": "Polls an Endpoint operation.",
                "operationId": "OnlineDeployments_GetLogs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Inference endpoint name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "deploymentName",
                        "description": "The name and identifier for the endpoint.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The request containing parameters for retrieving logs.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeploymentLogsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeploymentLogs"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Online Deployment Logs.": {
                        "$ref": "./examples/OnlineDeployment/getLogs.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}/skus": {
            "get": {
                "tags": [
                    "OnlineDeployment"
                ],
                "summary": "List Inference Endpoint Deployment Skus.",
                "operationId": "OnlineDeployments_ListSkus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Inference endpoint name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "deploymentName",
                        "description": "Inference Endpoint Deployment name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "query",
                        "name": "count",
                        "description": "Number of Skus to be retrieved in a page of results.",
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SkuResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Managed Online Deployment Skus.": {
                        "$ref": "./examples/OnlineDeployment/ManagedOnlineDeployment/listSkus.json"
                    },
                    "List Kubernetes Online Deployment Skus.": {
                        "$ref": "./examples/OnlineDeployment/KubernetesOnlineDeployment/listSkus.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/listKeys": {
            "post": {
                "tags": [
                    "OnlineEndpoint"
                ],
                "summary": "List EndpointAuthKeys for an Endpoint using Key-based authentication.",
                "operationId": "OnlineEndpoints_ListKeys",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Online Endpoint name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EndpointAuthKeys"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "ListKeys Workspace Online Endpoint.": {
                        "$ref": "./examples/Workspace/OnlineEndpoint/listKeys.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/regenerateKeys": {
            "post": {
                "tags": [
                    "OnlineEndpoint"
                ],
                "summary": "Regenerate EndpointAuthKeys for an Endpoint using Key-based authentication (asynchronous).",
                "operationId": "OnlineEndpoints_RegenerateKeys",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Online Endpoint name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "RegenerateKeys request .",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RegenerateEndpointKeysRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "RegenerateKeys Workspace Online Endpoint.": {
                        "$ref": "./examples/Workspace/OnlineEndpoint/regenerateKeys.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/token": {
            "post": {
                "tags": [
                    "OnlineEndpoint"
                ],
                "summary": "Retrieve a valid AML token for an Endpoint using AMLToken-based authentication.",
                "operationId": "OnlineEndpoints_GetToken",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "endpointName",
                        "description": "Online Endpoint name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EndpointAuthToken"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "GetToken Workspace Online Endpoint.": {
                        "$ref": "./examples/Workspace/OnlineEndpoint/getToken.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/schedules": {
            "get": {
                "tags": [
                    "Schedule"
                ],
                "summary": "List schedules in specified workspace.",
                "operationId": "Schedules_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    },
                    {
                        "in": "query",
                        "name": "listViewType",
                        "description": "Status filter for schedule.",
                        "type": "string",
                        "default": "EnabledOnly",
                        "enum": [
                            "EnabledOnly",
                            "DisabledOnly",
                            "All"
                        ],
                        "x-ms-enum": {
                            "name": "ScheduleListViewType",
                            "modelAsString": true,
                            "values": [
                                {
                                    "value": "EnabledOnly"
                                },
                                {
                                    "value": "DisabledOnly"
                                },
                                {
                                    "value": "All"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ScheduleResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Schedules.": {
                        "$ref": "./examples/Schedule/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/schedules/{name}": {
            "delete": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Delete schedule.",
                "operationId": "Schedules_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Schedule name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Schedule.": {
                        "$ref": "./examples/Schedule/delete.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            },
            "get": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Get schedule.",
                "operationId": "Schedules_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Schedule name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ScheduleResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Schedule.": {
                        "$ref": "./examples/Schedule/get.json"
                    }
                }
            },
            "put": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Create or update schedule.",
                "operationId": "Schedules_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Schedule name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Schedule definition.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScheduleResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/ScheduleResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ScheduleResource"
                        },
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Azure-AsyncOperation": {
                                "description": "URI to poll for asynchronous operation status.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Schedule.": {
                        "$ref": "./examples/Schedule/createOrUpdate.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "original-uri"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/serverlessEndpoints": {
            "get": {
                "tags": [
                    "ServerlessEndpoint"
                ],
                "summary": "List Serverless Endpoints.",
                "operationId": "ServerlessEndpoints_List",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ServerlessEndpointTrackedResourceArmPaginatedResult"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List Workspace Serverless Endpoint.": {
                        "$ref": "./examples/Workspace/ServerlessEndpoint/list.json"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/serverlessEndpoints/{name}": {
            "delete": {
                "tags": [
                    "ServerlessEndpoint"
                ],
                "summary": "Delete Serverless Endpoint (asynchronous).",
                "operationId": "ServerlessEndpoints_Delete",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Serverless Endpoint name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Delete Workspace Serverless Endpoint.": {
                        "$ref": "./examples/Workspace/ServerlessEndpoint/delete.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            },
            "get": {
                "tags": [
                    "ServerlessEndpoint"
                ],
                "summary": "Get Serverless Endpoint.",
                "operationId": "ServerlessEndpoints_Get",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Serverless Endpoint name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ServerlessEndpointTrackedResource"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Get Workspace Serverless Endpoint.": {
                        "$ref": "./examples/Workspace/ServerlessEndpoint/get.json"
                    }
                }
            },
            "patch": {
                "tags": [
                    "ServerlessEndpoint"
                ],
                "summary": "Update Serverless Endpoint (asynchronous).",
                "operationId": "ServerlessEndpoints_Update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Serverless Endpoint name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Serverless Endpoint entity to apply during operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PartialMinimalTrackedResourceWithSkuAndIdentity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ServerlessEndpointTrackedResource"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "Update Workspace Serverless Endpoint.": {
                        "$ref": "./examples/Workspace/ServerlessEndpoint/update.json"
                    }
                },
                "x-ms-long-running-operation": true
            },
            "put": {
                "tags": [
                    "ServerlessEndpoint"
                ],
                "summary": "Create or update Serverless Endpoint (asynchronous).",
                "operationId": "ServerlessEndpoints_CreateOrUpdate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Serverless Endpoint name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Serverless Endpoint entity to apply during operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ServerlessEndpointTrackedResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create or update request is successful.",
                        "schema": {
                            "$ref": "#/definitions/ServerlessEndpointTrackedResource"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ServerlessEndpointTrackedResource"
                        },
                        "headers": {
                            "x-ms-async-operation-timeout": {
                                "description": "Timeout for the client to use when polling the asynchronous operation.",
                                "type": "string",
                                "format": "duration"
                            },
                            "Azure-AsyncOperation": {
                                "description": "URI to poll for asynchronous operation status.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "CreateOrUpdate Workspace Serverless Endpoint.": {
                        "$ref": "./examples/Workspace/ServerlessEndpoint/createOrUpdate.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "original-uri"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/serverlessEndpoints/{name}/listKeys": {
            "post": {
                "tags": [
                    "ServerlessEndpoint"
                ],
                "summary": "List EndpointAuthKeys for an Endpoint using Key-based authentication.",
                "operationId": "ServerlessEndpoints_ListKeys",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Serverless Endpoint name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EndpointAuthKeys"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "ListKeys Workspace Serverless Endpoint.": {
                        "$ref": "./examples/Workspace/ServerlessEndpoint/listKeys.json"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/serverlessEndpoints/{name}/regenerateKeys": {
            "post": {
                "tags": [
                    "ServerlessEndpoint"
                ],
                "summary": "Regenerate EndpointAuthKeys for an Endpoint using Key-based authentication (asynchronous).",
                "operationId": "ServerlessEndpoints_RegenerateKeys",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
                    },
                    {
                        "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "description": "Serverless Endpoint name.",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
                    },
                    {
                        "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "RegenerateKeys request .",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RegenerateEndpointKeysRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EndpointAuthKeys"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "Location": {
                                "description": "URI to poll for asynchronous operation result.",
                                "type": "string"
                            },
                            "Retry-After": {
                                "description": "Duration the client should wait between requests, in seconds.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 600,
                                "minimum": 10
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "RegenerateKeys Workspace Serverless Endpoint.": {
                        "$ref": "./examples/Workspace/ServerlessEndpoint/regenerateKeys.json"
                    }
                },
                "x-ms-long-running-operation": true,
                "x-ms-long-running-operation-options": {
                    "final-state-via": "location"
                }
            }
        }
    },
    "definitions": {
        "AccountKeyDatastoreCredentials": {
            "description": "Account key datastore credentials configuration.",
            "required": [
                "secrets"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DatastoreCredentials"
                }
            ],
            "properties": {
                "secrets": {
                    "description": "[Required] Storage account secrets.",
                    "$ref": "#/definitions/AccountKeyDatastoreSecrets",
                    "x-ms-mutability": [
                        "create",
                        "update"
                    ],
                    "x-ms-secret": true
                }
            },
            "x-ms-discriminator-value": "AccountKey",
            "additionalProperties": false
        },
        "AccountKeyDatastoreSecrets": {
            "description": "Datastore account key secrets.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DatastoreSecrets"
                }
            ],
            "properties": {
                "key": {
                    "description": "Storage account key.",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "AccountKey",
            "additionalProperties": false
        },
        "AllFeatures": {
            "required": [
                "filterType"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/MonitoringFeatureFilterBase"
                }
            ],
            "x-ms-discriminator-value": "AllFeatures",
            "additionalProperties": false
        },
        "AllNodes": {
            "description": "All nodes means the service will be running on all of the nodes of the job",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Nodes"
                }
            ],
            "x-ms-discriminator-value": "All",
            "additionalProperties": false
        },
        "AmlToken": {
            "description": "AML Token identity configuration.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/IdentityConfiguration"
                }
            ],
            "x-ms-discriminator-value": "AMLToken",
            "additionalProperties": false
        },
        "AmlTokenComputeIdentity": {
            "description": "AML token compute identity definition.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/MonitorComputeIdentityBase"
                }
            ],
            "x-ms-discriminator-value": "AmlToken",
            "additionalProperties": false
        },
        "AssetJobInput": {
            "description": "Asset input type.",
            "required": [
                "uri"
            ],
            "type": "object",
            "properties": {
                "mode": {
                    "description": "Input Asset Delivery Mode.",
                    "default": "ReadOnlyMount",
                    "$ref": "#/definitions/InputDeliveryMode",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "uri": {
                    "description": "[Required] Input Asset URI.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "AssetJobOutput": {
            "description": "Asset output type.",
            "type": "object",
            "properties": {
                "assetName": {
                    "description": "Output Asset Name.",
                    "type": "string",
                    "x-nullable": true
                },
                "assetVersion": {
                    "description": "Output Asset Version.",
                    "type": "string",
                    "x-nullable": true
                },
                "autoDeleteSetting": {
                    "description": "Auto delete setting of output data asset.",
                    "$ref": "#/definitions/AutoDeleteSetting",
                    "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                    ],
                    "x-nullable": true
                },
                "mode": {
                    "description": "Output Asset Delivery Mode.",
                    "default": "ReadWriteMount",
                    "$ref": "#/definitions/OutputDeliveryMode",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "uri": {
                    "description": "Output Asset URI.",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "AssetReferenceBase": {
            "description": "Base definition for asset references.",
            "required": [
                "referenceType"
            ],
            "type": "object",
            "properties": {
                "referenceType": {
                    "description": "[Required] Specifies the type of asset reference.",
                    "$ref": "#/definitions/ReferenceType"
                }
            },
            "discriminator": "referenceType"
        },
        "AutoForecastHorizon": {
            "description": "Forecast horizon determined automatically by system.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ForecastHorizon"
                }
            ],
            "x-ms-discriminator-value": "Auto",
            "additionalProperties": false
        },
        "AutoMLJob": {
            "description": "AutoMLJob class.\r\nUse this class for executing AutoML tasks like Classification/Regression etc.\r\nSee TaskType enum for all the tasks supported.",
            "required": [
                "taskDetails"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/JobBase"
                }
            ],
            "properties": {
                "environmentId": {
                    "description": "The ARM resource ID of the Environment specification for the job.\r\nThis is optional value to provide, if not provided, AutoML will default this to Production AutoML curated environment version when running the job.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "environmentVariables": {
                    "description": "Environment variables included in the job.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "outputs": {
                    "description": "Mapping of output data bindings used in the job.",
                    "type": "object",
                    "additionalProperties": {
                        "description": "Job output definition container information on where to find job output/logs.",
                        "$ref": "#/definitions/JobOutput",
                        "x-nullable": true
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "queueSettings": {
                    "description": "Queue settings for the job",
                    "$ref": "#/definitions/QueueSettings",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "resources": {
                    "description": "Compute Resource configuration for the job.",
                    "default": "{}",
                    "$ref": "#/definitions/JobResourceConfiguration",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "taskDetails": {
                    "description": "[Required] This represents scenario which can be one of Tables/NLP/Image",
                    "$ref": "#/definitions/AutoMLVertical"
                }
            },
            "x-ms-discriminator-value": "AutoML",
            "additionalProperties": false
        },
        "AutoMLVertical": {
            "description": "AutoML vertical class.\r\nBase class for AutoML verticals - TableVertical/ImageVertical/NLPVertical",
            "required": [
                "taskType",
                "trainingData"
            ],
            "type": "object",
            "properties": {
                "logVerbosity": {
                    "description": "Log verbosity for the job.",
                    "default": "Info",
                    "$ref": "#/definitions/LogVerbosity"
                },
                "targetColumnName": {
                    "description": "Target column name: This is prediction values column.\r\nAlso known as label column name in context of classification tasks.",
                    "type": "string",
                    "x-nullable": true
                },
                "taskType": {
                    "description": "[Required] Task type for AutoMLJob.",
                    "$ref": "#/definitions/TaskType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "trainingData": {
                    "description": "[Required] Training data input.",
                    "$ref": "#/definitions/MLTableJobInput"
                }
            },
            "discriminator": "taskType"
        },
        "AutoNCrossValidations": {
            "description": "N-Cross validations determined automatically.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/NCrossValidations"
                }
            ],
            "x-ms-discriminator-value": "Auto",
            "additionalProperties": false
        },
        "AutoSeasonality": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Seasonality"
                }
            ],
            "x-ms-discriminator-value": "Auto",
            "additionalProperties": false
        },
        "AutoTargetLags": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/TargetLags"
                }
            ],
            "x-ms-discriminator-value": "Auto",
            "additionalProperties": false
        },
        "AutoTargetRollingWindowSize": {
            "description": "Target lags rolling window determined automatically.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/TargetRollingWindowSize"
                }
            ],
            "x-ms-discriminator-value": "Auto",
            "additionalProperties": false
        },
        "AzMonMonitoringAlertNotificationSettings": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/MonitoringAlertNotificationSettingsBase"
                }
            ],
            "x-ms-discriminator-value": "AzureMonitor",
            "additionalProperties": false
        },
        "AzureBlobDatastore": {
            "description": "Azure Blob datastore configuration.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AzureDatastore"
                },
                {
                    "$ref": "#/definitions/Datastore"
                }
            ],
            "properties": {
                "accountName": {
                    "description": "Storage account name.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "containerName": {
                    "description": "Storage account container name.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "endpoint": {
                    "description": "Azure cloud endpoint for the storage account.",
                    "type": "string",
                    "example": "core.windows.net",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "protocol": {
                    "description": "Protocol used to communicate with the storage account.",
                    "type": "string",
                    "example": "https",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "serviceDataAccessAuthIdentity": {
                    "description": "Indicates which identity to use to authenticate service data access to customer's storage.",
                    "default": "None",
                    "$ref": "#/definitions/ServiceDataAccessAuthIdentity",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "AzureBlob",
            "additionalProperties": false
        },
        "AzureDataLakeGen1Datastore": {
            "description": "Azure Data Lake Gen1 datastore configuration.",
            "required": [
                "storeName"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AzureDatastore"
                },
                {
                    "$ref": "#/definitions/Datastore"
                }
            ],
            "properties": {
                "serviceDataAccessAuthIdentity": {
                    "description": "Indicates which identity to use to authenticate service data access to customer's storage.",
                    "default": "None",
                    "$ref": "#/definitions/ServiceDataAccessAuthIdentity",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "storeName": {
                    "description": "[Required] Azure Data Lake store name.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "AzureDataLakeGen1",
            "additionalProperties": false
        },
        "AzureDataLakeGen2Datastore": {
            "description": "Azure Data Lake Gen2 datastore configuration.",
            "required": [
                "accountName",
                "filesystem"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AzureDatastore"
                },
                {
                    "$ref": "#/definitions/Datastore"
                }
            ],
            "properties": {
                "accountName": {
                    "description": "[Required] Storage account name.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "endpoint": {
                    "description": "Azure cloud endpoint for the storage account.",
                    "type": "string",
                    "example": "core.windows.net",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "filesystem": {
                    "description": "[Required] The name of the Data Lake Gen2 filesystem.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "protocol": {
                    "description": "Protocol used to communicate with the storage account.",
                    "type": "string",
                    "example": "https",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "serviceDataAccessAuthIdentity": {
                    "description": "Indicates which identity to use to authenticate service data access to customer's storage.",
                    "default": "None",
                    "$ref": "#/definitions/ServiceDataAccessAuthIdentity",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "AzureDataLakeGen2",
            "additionalProperties": false
        },
        "AzureDatastore": {
            "description": "Base definition for Azure datastore contents configuration.",
            "type": "object",
            "properties": {
                "resourceGroup": {
                    "description": "Azure Resource Group name",
                    "type": "string",
                    "x-nullable": true
                },
                "subscriptionId": {
                    "description": "Azure Subscription Id",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "AzureDevOpsWebhook": {
            "description": "Webhook details specific for Azure DevOps",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Webhook"
                }
            ],
            "x-ms-discriminator-value": "AzureDevOps",
            "additionalProperties": false
        },
        "AzureFileDatastore": {
            "description": "Azure File datastore configuration.",
            "required": [
                "accountName",
                "fileShareName"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AzureDatastore"
                },
                {
                    "$ref": "#/definitions/Datastore"
                }
            ],
            "properties": {
                "accountName": {
                    "description": "[Required] Storage account name.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "endpoint": {
                    "description": "Azure cloud endpoint for the storage account.",
                    "type": "string",
                    "example": "core.windows.net",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "fileShareName": {
                    "description": "[Required] The name of the Azure file share that the datastore points to.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "protocol": {
                    "description": "Protocol used to communicate with the storage account.",
                    "type": "string",
                    "example": "https",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "serviceDataAccessAuthIdentity": {
                    "description": "Indicates which identity to use to authenticate service data access to customer's storage.",
                    "default": "None",
                    "$ref": "#/definitions/ServiceDataAccessAuthIdentity",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "AzureFile",
            "additionalProperties": false
        },
        "AzureMLBatchInferencingServer": {
            "description": "Azure ML batch inferencing server configurations.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/InferencingServer"
                }
            ],
            "properties": {
                "codeConfiguration": {
                    "description": "Code configuration for AML batch inferencing server.",
                    "$ref": "#/definitions/CodeConfiguration",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "AzureMLBatch",
            "additionalProperties": false
        },
        "AzureMLOnlineInferencingServer": {
            "description": "Azure ML online inferencing configurations.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/InferencingServer"
                }
            ],
            "properties": {
                "codeConfiguration": {
                    "description": "Code configuration for AML inferencing server.",
                    "$ref": "#/definitions/CodeConfiguration",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "AzureMLOnline",
            "additionalProperties": false
        },
        "BanditPolicy": {
            "description": "Defines an early termination policy based on slack criteria, and a frequency and delay interval for evaluation",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/EarlyTerminationPolicy"
                }
            ],
            "properties": {
                "slackAmount": {
                    "format": "float",
                    "description": "Absolute distance allowed from the best performing run.",
                    "default": 0,
                    "type": "number"
                },
                "slackFactor": {
                    "format": "float",
                    "description": "Ratio of the allowed distance from the best performing run.",
                    "default": 0,
                    "type": "number"
                }
            },
            "x-ms-discriminator-value": "Bandit",
            "additionalProperties": false
        },
        "BaseEnvironmentId": {
            "description": "Base environment type.",
            "required": [
                "resourceId"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEnvironmentSource"
                }
            ],
            "properties": {
                "resourceId": {
                    "description": "[Required] Resource id accepting ArmId or AzureMlId.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string"
                }
            },
            "x-ms-discriminator-value": "EnvironmentAsset",
            "additionalProperties": false
        },
        "BaseEnvironmentSource": {
            "required": [
                "baseEnvironmentSourceType"
            ],
            "type": "object",
            "properties": {
                "baseEnvironmentSourceType": {
                    "description": "[Required] Base environment type.",
                    "$ref": "#/definitions/BaseEnvironmentSourceType"
                }
            },
            "discriminator": "baseEnvironmentSourceType"
        },
        "BaseEnvironmentSourceType": {
            "description": "Base environment type.",
            "enum": [
                "EnvironmentAsset"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "BaseEnvironmentSourceType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "EnvironmentAsset"
                    }
                ]
            },
            "additionalProperties": false
        },
        "BatchDeployment": {
            "description": "Batch inference settings per deployment.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/EndpointDeploymentPropertiesBase"
                }
            ],
            "properties": {
                "compute": {
                    "description": "Compute target for batch inference operation.",
                    "type": "string",
                    "x-nullable": true
                },
                "deploymentConfiguration": {
                    "description": "Properties relevant to different deployment types.",
                    "$ref": "#/definitions/BatchDeploymentConfiguration",
                    "x-nullable": true
                },
                "errorThreshold": {
                    "format": "int32",
                    "description": "Error threshold, if the error count for the entire input goes above this value,\r\nthe batch inference will be aborted. Range is [-1, int.MaxValue].\r\nFor FileDataset, this value is the count of file failures.\r\nFor TabularDataset, this value is the count of record failures.\r\nIf set to -1 (the lower bound), all failures during batch inference will be ignored.",
                    "default": -1,
                    "type": "integer"
                },
                "loggingLevel": {
                    "description": "Logging level for batch inference operation.",
                    "default": "Info",
                    "$ref": "#/definitions/BatchLoggingLevel"
                },
                "maxConcurrencyPerInstance": {
                    "format": "int32",
                    "description": "Indicates maximum number of parallelism per instance.",
                    "default": 1,
                    "type": "integer"
                },
                "miniBatchSize": {
                    "format": "int64",
                    "description": "Size of the mini-batch passed to each batch invocation.\r\nFor FileDataset, this is the number of files per mini-batch.\r\nFor TabularDataset, this is the size of the records in bytes, per mini-batch.",
                    "default": 10,
                    "type": "integer"
                },
                "model": {
                    "description": "Reference to the model asset for the endpoint deployment.",
                    "$ref": "#/definitions/AssetReferenceBase",
                    "x-nullable": true
                },
                "outputAction": {
                    "description": "Indicates how the output will be organized.",
                    "default": "AppendRow",
                    "$ref": "#/definitions/BatchOutputAction"
                },
                "outputFileName": {
                    "description": "Customized output file name for append_row output action.",
                    "default": "predictions.csv",
                    "type": "string"
                },
                "provisioningState": {
                    "description": "Provisioning state for the endpoint deployment.",
                    "$ref": "#/definitions/DeploymentProvisioningState",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ]
                },
                "resources": {
                    "description": "Indicates compute configuration for the job.\r\nIf not provided, will default to the defaults defined in ResourceConfiguration.",
                    "$ref": "#/definitions/DeploymentResourceConfiguration",
                    "x-nullable": true
                },
                "retrySettings": {
                    "description": "Retry Settings for the batch inference operation.\r\nIf not provided, will default to the defaults defined in BatchRetrySettings.",
                    "$ref": "#/definitions/BatchRetrySettings",
                    "x-nullable": true
                }
            },
            "x-ms-client-name": "BatchDeploymentProperties",
            "additionalProperties": false
        },
        "BatchDeploymentConfiguration": {
            "description": "Properties relevant to different deployment types.",
            "required": [
                "deploymentConfigurationType"
            ],
            "type": "object",
            "properties": {
                "deploymentConfigurationType": {
                    "description": "[Required] The type of the deployment",
                    "$ref": "#/definitions/BatchDeploymentConfigurationType"
                }
            },
            "discriminator": "deploymentConfigurationType"
        },
        "BatchDeploymentConfigurationType": {
            "description": "The enumerated property types for batch deployments.",
            "enum": [
                "Model",
                "PipelineComponent"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "BatchDeploymentConfigurationType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Model"
                    },
                    {
                        "value": "PipelineComponent"
                    }
                ]
            },
            "additionalProperties": false
        },
        "BatchDeploymentTrackedResource": {
            "required": [
                "location",
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
                }
            ],
            "properties": {
                "identity": {
                    "description": "Managed service identity (system assigned and/or user assigned identities)",
                    "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
                },
                "kind": {
                    "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
                    "type": "string"
                },
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/BatchDeployment"
                },
                "sku": {
                    "description": "Sku details required for ARM contract for Autoscaling.",
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
                }
            },
            "x-ms-client-name": "BatchDeployment",
            "additionalProperties": false
        },
        "BatchDeploymentTrackedResourceArmPaginatedResult": {
            "description": "A paginated list of BatchDeployment entities.",
            "type": "object",
            "properties": {
                "nextLink": {
                    "description": "The link to the next page of BatchDeployment objects. If null, there are no additional pages.",
                    "type": "string"
                },
                "value": {
                    "description": "An array of objects of type BatchDeployment.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BatchDeploymentTrackedResource"
                    }
                }
            },
            "additionalProperties": false
        },
        "BatchEndpoint": {
            "description": "Batch endpoint configuration.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/EndpointPropertiesBase"
                }
            ],
            "properties": {
                "defaults": {
                    "description": "Default values for Batch Endpoint.",
                    "$ref": "#/definitions/BatchEndpointDefaults",
                    "x-nullable": true
                },
                "provisioningState": {
                    "description": "Provisioning state for the endpoint.",
                    "$ref": "#/definitions/EndpointProvisioningState",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ]
                }
            },
            "x-ms-client-name": "BatchEndpointProperties",
            "additionalProperties": false
        },
        "BatchEndpointDefaults": {
            "description": "Batch endpoint default values",
            "type": "object",
            "properties": {
                "deploymentName": {
                    "description": "Name of the deployment that will be default for the endpoint.\r\nThis deployment will end up getting 100% traffic when the endpoint scoring URL is invoked.",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "BatchEndpointTrackedResource": {
            "required": [
                "location",
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
                }
            ],
            "properties": {
                "identity": {
                    "description": "Managed service identity (system assigned and/or user assigned identities)",
                    "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
                },
                "kind": {
                    "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
                    "type": "string"
                },
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/BatchEndpoint"
                },
                "sku": {
                    "description": "Sku details required for ARM contract for Autoscaling.",
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
                }
            },
            "x-ms-client-name": "BatchEndpoint",
            "additionalProperties": false
        },
        "BatchEndpointTrackedResourceArmPaginatedResult": {
            "description": "A paginated list of BatchEndpoint entities.",
            "type": "object",
            "properties": {
                "nextLink": {
                    "description": "The link to the next page of BatchEndpoint objects. If null, there are no additional pages.",
                    "type": "string"
                },
                "value": {
                    "description": "An array of objects of type BatchEndpoint.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BatchEndpointTrackedResource"
                    }
                }
            },
            "additionalProperties": false
        },
        "BatchLoggingLevel": {
            "description": "Log verbosity for batch inferencing.\r\nIncreasing verbosity order for logging is : Warning, Info and Debug.\r\nThe default value is Info.",
            "enum": [
                "Info",
                "Warning",
                "Debug"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "BatchLoggingLevel",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Info"
                    },
                    {
                        "value": "Warning"
                    },
                    {
                        "value": "Debug"
                    }
                ]
            },
            "additionalProperties": false
        },
        "BatchOutputAction": {
            "description": "Enum to determine how batch inferencing will handle output",
            "enum": [
                "SummaryOnly",
                "AppendRow"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "BatchOutputAction",
                "modelAsString": true,
                "values": [
                    {
                        "value": "SummaryOnly"
                    },
                    {
                        "value": "AppendRow"
                    }
                ]
            },
            "additionalProperties": false
        },
        "BatchPipelineComponentDeploymentConfiguration": {
            "description": "Properties for a Batch Pipeline Component Deployment.",
            "required": [
                "deploymentConfigurationType"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/BatchDeploymentConfiguration"
                }
            ],
            "properties": {
                "componentId": {
                    "description": "The ARM id of the component to be run.",
                    "$ref": "#/definitions/IdAssetReference",
                    "x-nullable": true
                },
                "description": {
                    "description": "The description which will be applied to the job.",
                    "type": "string",
                    "x-nullable": true
                },
                "settings": {
                    "description": "Run-time settings for the pipeline job.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "x-nullable": true
                },
                "tags": {
                    "description": "The tags which will be applied to the job.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "PipelineComponent",
            "additionalProperties": false
        },
        "BatchRetrySettings": {
            "description": "Retry settings for a batch inference operation.",
            "type": "object",
            "properties": {
                "maxRetries": {
                    "format": "int32",
                    "description": "Maximum retry count for a mini-batch",
                    "default": 3,
                    "type": "integer"
                },
                "timeout": {
                    "format": "duration",
                    "description": "Invocation timeout for a mini-batch, in ISO 8601 format.",
                    "default": "PT30S",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "BayesianSamplingAlgorithm": {
            "description": "Defines a Sampling Algorithm that generates values based on previous values",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/SamplingAlgorithm"
                }
            ],
            "x-ms-discriminator-value": "Bayesian",
            "additionalProperties": false
        },
        "CategoricalDataDriftMetricThreshold": {
            "required": [
                "metric"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DataDriftMetricThresholdBase"
                }
            ],
            "properties": {
                "metric": {
                    "description": "[Required] The categorical data drift metric to calculate.",
                    "$ref": "#/definitions/CategoricalDataDriftMetric",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "Categorical",
            "additionalProperties": false
        },
        "CategoricalDataQualityMetricThreshold": {
            "required": [
                "metric"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DataQualityMetricThresholdBase"
                }
            ],
            "properties": {
                "metric": {
                    "description": "[Required] The categorical data quality metric to calculate.",
                    "$ref": "#/definitions/CategoricalDataQualityMetric",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "Categorical",
            "additionalProperties": false
        },
        "CategoricalPredictionDriftMetricThreshold": {
            "required": [
                "metric"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/PredictionDriftMetricThresholdBase"
                }
            ],
            "properties": {
                "metric": {
                    "description": "[Required] The categorical prediction drift metric to calculate.",
                    "$ref": "#/definitions/CategoricalPredictionDriftMetric",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "Categorical",
            "additionalProperties": false
        },
        "CertificateDatastoreCredentials": {
            "description": "Certificate datastore credentials configuration.",
            "required": [
                "clientId",
                "secrets",
                "tenantId",
                "thumbprint"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DatastoreCredentials"
                }
            ],
            "properties": {
                "authorityUrl": {
                    "description": "Authority URL used for authentication.",
                    "type": "string",
                    "x-nullable": true
                },
                "clientId": {
                    "format": "uuid",
                    "description": "[Required] Service principal client ID.",
                    "type": "string"
                },
                "resourceUrl": {
                    "description": "Resource the service principal has access to.",
                    "type": "string",
                    "x-nullable": true
                },
                "secrets": {
                    "description": "[Required] Service principal secrets.",
                    "$ref": "#/definitions/CertificateDatastoreSecrets",
                    "x-ms-mutability": [
                        "create",
                        "update"
                    ],
                    "x-ms-secret": true
                },
                "tenantId": {
                    "format": "uuid",
                    "description": "[Required] ID of the tenant to which the service principal belongs.",
                    "type": "string"
                },
                "thumbprint": {
                    "description": "[Required] Thumbprint of the certificate used for authentication.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string"
                }
            },
            "x-ms-discriminator-value": "Certificate",
            "additionalProperties": false
        },
        "CertificateDatastoreSecrets": {
            "description": "Datastore certificate secrets.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DatastoreSecrets"
                }
            ],
            "properties": {
                "certificate": {
                    "description": "Service principal certificate.",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "Certificate",
            "additionalProperties": false
        },
        "Classification": {
            "description": "Classification task in AutoML Table vertical.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/TableVertical"
                },
                {
                    "$ref": "#/definitions/AutoMLVertical"
                }
            ],
            "properties": {
                "positiveLabel": {
                    "description": "Positive label for binary metrics calculation.",
                    "type": "string",
                    "x-nullable": true
                },
                "primaryMetric": {
                    "description": "Primary metric for the task.",
                    "default": "AUCWeighted",
                    "$ref": "#/definitions/ClassificationPrimaryMetrics"
                },
                "trainingSettings": {
                    "description": "Inputs for training phase for an AutoML Job.",
                    "$ref": "#/definitions/ClassificationTrainingSettings",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "Classification",
            "additionalProperties": false
        },
        "ClassificationModelPerformanceMetricThreshold": {
            "required": [
                "metric"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ModelPerformanceMetricThresholdBase"
                }
            ],
            "properties": {
                "metric": {
                    "description": "[Required] The classification model performance to calculate.",
                    "$ref": "#/definitions/ClassificationModelPerformanceMetric",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "Classification",
            "additionalProperties": false
        },
        "CocoExportSummary": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ExportSummary"
                }
            ],
            "properties": {
                "containerName": {
                    "description": "The container name to which the labels will be exported.",
                    "type": "string",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "snapshotPath": {
                    "description": "The output path where the labels will be exported.",
                    "type": "string",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "Coco",
            "additionalProperties": false
        },
        "CodeConfiguration": {
            "description": "Configuration for a scoring code asset.",
            "required": [
                "scoringScript"
            ],
            "type": "object",
            "properties": {
                "codeId": {
                    "description": "ARM resource ID of the code asset.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "scoringScript": {
                    "description": "[Required] The script to execute on startup. eg. \"score.py\"",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "additionalProperties": false
        },
        "CodeContainerResource": {
            "description": "Azure Resource Manager resource envelope.",
            "required": [
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
                }
            ],
            "properties": {
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/CodeContainer"
                }
            },
            "x-ms-client-name": "CodeContainer",
            "additionalProperties": false
        },
        "CodeContainerResourceArmPaginatedResult": {
            "description": "A paginated list of CodeContainer entities.",
            "type": "object",
            "properties": {
                "nextLink": {
                    "description": "The link to the next page of CodeContainer objects. If null, there are no additional pages.",
                    "type": "string"
                },
                "value": {
                    "description": "An array of objects of type CodeContainer.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CodeContainerResource"
                    }
                }
            },
            "additionalProperties": false
        },
        "CodeVersionResource": {
            "description": "Azure Resource Manager resource envelope.",
            "required": [
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
                }
            ],
            "properties": {
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/CodeVersion"
                }
            },
            "x-ms-client-name": "CodeVersion",
            "additionalProperties": false
        },
        "CodeVersionResourceArmPaginatedResult": {
            "description": "A paginated list of CodeVersion entities.",
            "type": "object",
            "properties": {
                "nextLink": {
                    "description": "The link to the next page of CodeVersion objects. If null, there are no additional pages.",
                    "type": "string"
                },
                "value": {
                    "description": "An array of objects of type CodeVersion.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CodeVersionResource"
                    }
                }
            },
            "additionalProperties": false
        },
        "Collection": {
            "type": "object",
            "properties": {
                "clientId": {
                    "description": "The msi client id used to collect logging to blob storage. If it's null,backend will pick a registered endpoint identity to auth.",
                    "type": "string",
                    "x-nullable": true
                },
                "dataCollectionMode": {
                    "description": "Enable or disable data collection.",
                    "default": "Disabled",
                    "$ref": "#/definitions/DataCollectionMode"
                },
                "dataId": {
                    "description": "The data asset arm resource id. Client side will ensure data asset is pointing to the blob storage, and backend will collect data to the blob storage.",
                    "type": "string",
                    "x-nullable": true
                },
                "samplingRate": {
                    "format": "double",
                    "description": "The sampling rate for collection. Sampling rate 1.0 means we collect 100% of data by default.",
                    "default": 1,
                    "type": "number"
                }
            },
            "additionalProperties": false
        },
        "CommandJob": {
            "description": "Command job definition.",
            "required": [
                "command",
                "environmentId"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/JobBase"
                }
            ],
            "properties": {
                "autologgerSettings": {
                    "description": "Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.",
                    "$ref": "#/definitions/AutologgerSettings",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "codeId": {
                    "description": "ARM resource ID of the code asset.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "command": {
                    "description": "[Required] The command to execute on startup of the job. eg. \"python train.py\"",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "distribution": {
                    "description": "Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, Ray, or null.",
                    "$ref": "#/definitions/DistributionConfiguration",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "environmentId": {
                    "description": "[Required] The ARM resource ID of the Environment specification for the job.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "environmentVariables": {
                    "description": "Environment variables included in the job.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "inputs": {
                    "description": "Mapping of input data bindings used in the job.",
                    "type": "object",
                    "additionalProperties": {
                        "description": "Command job definition.",
                        "$ref": "#/definitions/JobInput",
                        "x-nullable": true
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "limits": {
                    "description": "Command Job limit.",
                    "$ref": "#/definitions/CommandJobLimits",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "outputs": {
                    "description": "Mapping of output data bindings used in the job.",
                    "type": "object",
                    "additionalProperties": {
                        "description": "Job output definition container information on where to find job output/logs.",
                        "$ref": "#/definitions/JobOutput",
                        "x-nullable": true
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "parameters": {
                    "description": "Input parameters.",
                    "type": "object",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "queueSettings": {
                    "description": "Queue settings for the job",
                    "$ref": "#/definitions/QueueSettings",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "resources": {
                    "description": "Compute Resource configuration for the job.",
                    "default": "{}",
                    "$ref": "#/definitions/JobResourceConfiguration",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "Command",
            "additionalProperties": false
        },
        "CommandJobLimits": {
            "description": "Command Job limit class.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/JobLimits"
                }
            ],
            "x-ms-discriminator-value": "Command",
            "additionalProperties": false
        },
        "ComponentContainerResource": {
            "description": "Azure Resource Manager resource envelope.",
            "required": [
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
                }
            ],
            "properties": {
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/ComponentContainer"
                }
            },
            "x-ms-client-name": "ComponentContainer",
            "additionalProperties": false
        },
        "ComponentContainerResourceArmPaginatedResult": {
            "description": "A paginated list of ComponentContainer entities.",
            "type": "object",
            "properties": {
                "nextLink": {
                    "description": "The link to the next page of ComponentContainer objects. If null, there are no additional pages.",
                    "type": "string"
                },
                "value": {
                    "description": "An array of objects of type ComponentContainer.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ComponentContainerResource"
                    }
                }
            },
            "additionalProperties": false
        },
        "ComponentVersionResource": {
            "description": "Azure Resource Manager resource envelope.",
            "required": [
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
                }
            ],
            "properties": {
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/ComponentVersion"
                }
            },
            "x-ms-client-name": "ComponentVersion",
            "additionalProperties": false
        },
        "ComponentVersionResourceArmPaginatedResult": {
            "description": "A paginated list of ComponentVersion entities.",
            "type": "object",
            "properties": {
                "nextLink": {
                    "description": "The link to the next page of ComponentVersion objects. If null, there are no additional pages.",
                    "type": "string"
                },
                "value": {
                    "description": "An array of objects of type ComponentVersion.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ComponentVersionResource"
                    }
                }
            },
            "additionalProperties": false
        },
        "ContainerResourceRequirements": {
            "description": "Resource requirements for each container instance within an online deployment.",
            "type": "object",
            "properties": {
                "containerResourceLimits": {
                    "description": "Container resource limit info:",
                    "$ref": "#/definitions/ContainerResourceSettings",
                    "x-nullable": true
                },
                "containerResourceRequests": {
                    "description": "Container resource request info:",
                    "$ref": "#/definitions/ContainerResourceSettings",
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "ContainerResourceSettings": {
            "type": "object",
            "properties": {
                "cpu": {
                    "description": "Number of vCPUs request/limit for container. More info:\r\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                    "type": "string",
                    "example": "1",
                    "x-nullable": true
                },
                "gpu": {
                    "description": "Number of Nvidia GPU cards request/limit for container. More info:\r\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                    "type": "string",
                    "example": "1",
                    "x-nullable": true
                },
                "memory": {
                    "description": "Memory size request/limit for container. More info:\r\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                    "type": "string",
                    "example": "2Gi",
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "CreateMonitorAction": {
            "required": [
                "monitorDefinition"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ScheduleActionBase"
                }
            ],
            "properties": {
                "monitorDefinition": {
                    "description": "[Required] Defines the monitor.",
                    "$ref": "#/definitions/MonitorDefinition",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "CreateMonitor",
            "additionalProperties": false
        },
        "CredentialsType": {
            "description": "Enum to determine the datastore credentials type.",
            "enum": [
                "AccountKey",
                "Certificate",
                "None",
                "Sas",
                "ServicePrincipal",
                "KerberosKeytab",
                "KerberosPassword"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "CredentialsType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "AccountKey"
                    },
                    {
                        "value": "Certificate"
                    },
                    {
                        "value": "None"
                    },
                    {
                        "value": "Sas"
                    },
                    {
                        "value": "ServicePrincipal"
                    },
                    {
                        "value": "KerberosKeytab"
                    },
                    {
                        "value": "KerberosPassword"
                    }
                ]
            },
            "additionalProperties": false
        },
        "CronTrigger": {
            "required": [
                "expression"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/TriggerBase"
                }
            ],
            "properties": {
                "expression": {
                    "description": "[Required] Specifies cron expression of schedule.\r\nThe expression should follow NCronTab format.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string"
                }
            },
            "x-ms-discriminator-value": "Cron",
            "additionalProperties": false
        },
        "CsvExportSummary": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ExportSummary"
                }
            ],
            "properties": {
                "containerName": {
                    "description": "The container name to which the labels will be exported.",
                    "type": "string",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "snapshotPath": {
                    "description": "The output path where the labels will be exported.",
                    "type": "string",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "CSV",
            "additionalProperties": false
        },
        "CustomForecastHorizon": {
            "description": "The desired maximum forecast horizon in units of time-series frequency.",
            "required": [
                "value"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ForecastHorizon"
                }
            ],
            "properties": {
                "value": {
                    "format": "int32",
                    "description": "[Required] Forecast horizon value.",
                    "type": "integer"
                }
            },
            "x-ms-discriminator-value": "Custom",
            "additionalProperties": false
        },
        "CustomInferencingServer": {
            "description": "Custom inference server configurations.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/InferencingServer"
                }
            ],
            "properties": {
                "inferenceConfiguration": {
                    "description": "Inference configuration for custom inferencing.",
                    "$ref": "#/definitions/OnlineInferenceConfiguration",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "Custom",
            "additionalProperties": false
        },
        "CustomModelJobInput": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AssetJobInput"
                },
                {
                    "$ref": "#/definitions/JobInput"
                }
            ],
            "x-ms-discriminator-value": "custom_model",
            "additionalProperties": false
        },
        "CustomModelJobOutput": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AssetJobOutput"
                },
                {
                    "$ref": "#/definitions/JobOutput"
                }
            ],
            "x-ms-discriminator-value": "custom_model",
            "additionalProperties": false
        },
        "CustomMonitoringSignal": {
            "required": [
                "componentId",
                "metricThresholds",
                "workspaceConnection"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/MonitoringSignalBase"
                }
            ],
            "properties": {
                "componentId": {
                    "description": "[Required] ARM resource ID of the component resource used to calculate the custom metrics.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "inputAssets": {
                    "description": "Monitoring assets to take as input. Key is the component input port name, value is the data asset.",
                    "type": "object",
                    "additionalProperties": {
                        "description": "Monitoring input data base definition.",
                        "$ref": "#/definitions/MonitoringInputDataBase",
                        "x-nullable": true
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "inputs": {
                    "description": "Extra component parameters to take as input. Key is the component literal input port name, value is the parameter value.",
                    "type": "object",
                    "additionalProperties": {
                        "description": "Command job definition.",
                        "$ref": "#/definitions/JobInput",
                        "x-nullable": true
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "metricThresholds": {
                    "description": "[Required] A list of metrics to calculate and their associated thresholds.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetricThreshold"
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-ms-identifiers": []
                },
                "workspaceConnection": {
                    "description": "[Required] A list of metrics to calculate and their associated thresholds.",
                    "$ref": "#/definitions/MonitoringWorkspaceConnection",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "Custom",
            "additionalProperties": false
        },
        "CustomNCrossValidations": {
            "description": "N-Cross validations are specified by user.",
            "required": [
                "value"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/NCrossValidations"
                }
            ],
            "properties": {
                "value": {
                    "format": "int32",
                    "description": "[Required] N-Cross validations value.",
                    "type": "integer"
                }
            },
            "x-ms-discriminator-value": "Custom",
            "additionalProperties": false
        },
        "CustomSeasonality": {
            "required": [
                "value"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Seasonality"
                }
            ],
            "properties": {
                "value": {
                    "format": "int32",
                    "description": "[Required] Seasonality value.",
                    "type": "integer"
                }
            },
            "x-ms-discriminator-value": "Custom",
            "additionalProperties": false
        },
        "CustomTargetLags": {
            "required": [
                "values"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/TargetLags"
                }
            ],
            "properties": {
                "values": {
                    "description": "[Required] Set target lags values.",
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "x-ms-discriminator-value": "Custom",
            "additionalProperties": false
        },
        "CustomTargetRollingWindowSize": {
            "required": [
                "value"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/TargetRollingWindowSize"
                }
            ],
            "properties": {
                "value": {
                    "format": "int32",
                    "description": "[Required] TargetRollingWindowSize value.",
                    "type": "integer"
                }
            },
            "x-ms-discriminator-value": "Custom",
            "additionalProperties": false
        },
        "DataCollectionMode": {
            "enum": [
                "Enabled",
                "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "DataCollectionMode",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Enabled"
                    },
                    {
                        "value": "Disabled"
                    }
                ]
            },
            "additionalProperties": false
        },
        "DataCollector": {
            "required": [
                "collections"
            ],
            "type": "object",
            "properties": {
                "collections": {
                    "description": "[Required] The collection configuration. Each collection has it own configuration to collect model data and the name of collection can be arbitrary string.\r\nModel data collector can be used for either payload logging or custom logging or both of them. Collection request and response are reserved for payload logging, others are for custom logging.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Collection",
                        "x-nullable": true
                    }
                },
                "requestLogging": {
                    "description": "The request logging configuration for mdc, it includes advanced logging settings for all collections. It's optional.",
                    "$ref": "#/definitions/RequestLogging",
                    "x-nullable": true
                },
                "rollingRate": {
                    "description": "When model data is collected to blob storage, we need to roll the data to different path to avoid logging all of them in a single blob file.\r\nIf the rolling rate is hour, all data will be collected in the blob path /yyyy/MM/dd/HH/.\r\nIf it's day, all data will be collected in blob path /yyyy/MM/dd/.\r\nThe other benefit of rolling path is that model monitoring ui is able to select a time range of data very quickly.",
                    "default": "Hour",
                    "$ref": "#/definitions/RollingRateType"
                }
            },
            "additionalProperties": false
        },
        "DataContainerResource": {
            "description": "Azure Resource Manager resource envelope.",
            "required": [
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
                }
            ],
            "properties": {
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/DataContainer"
                }
            },
            "x-ms-client-name": "DataContainer",
            "additionalProperties": false
        },
        "DataContainerResourceArmPaginatedResult": {
            "description": "A paginated list of DataContainer entities.",
            "type": "object",
            "properties": {
                "nextLink": {
                    "description": "The link to the next page of DataContainer objects. If null, there are no additional pages.",
                    "type": "string"
                },
                "value": {
                    "description": "An array of objects of type DataContainer.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DataContainerResource"
                    }
                }
            },
            "additionalProperties": false
        },
        "DataDriftMetricThresholdBase": {
            "required": [
                "dataType"
            ],
            "type": "object",
            "properties": {
                "dataType": {
                    "description": "[Required] Specifies the data type of the metric threshold.",
                    "$ref": "#/definitions/MonitoringFeatureDataType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "threshold": {
                    "description": "The threshold value. If null, a default value will be set depending on the selected metric.",
                    "$ref": "#/definitions/MonitoringThreshold",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                }
            },
            "discriminator": "dataType"
        },
        "DataDriftMonitoringSignal": {
            "required": [
                "metricThresholds",
                "productionData",
                "referenceData"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/MonitoringSignalBase"
                }
            ],
            "properties": {
                "dataSegment": {
                    "description": "The data segment used for scoping on a subset of the data population.",
                    "$ref": "#/definitions/MonitoringDataSegment",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "featureDataTypeOverride": {
                    "description": "A dictionary that maps feature names to their respective data types.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/MonitoringFeatureDataType"
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "features": {
                    "description": "The feature filter which identifies which feature to calculate drift over.",
                    "$ref": "#/definitions/MonitoringFeatureFilterBase",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "metricThresholds": {
                    "description": "[Required] A list of metrics to calculate and their associated thresholds.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DataDriftMetricThresholdBase"
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-ms-identifiers": []
                },
                "productionData": {
                    "description": "[Required] The data which drift will be calculated for.",
                    "$ref": "#/definitions/MonitoringInputDataBase",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "referenceData": {
                    "description": "[Required] The data to calculate drift against.",
                    "$ref": "#/definitions/MonitoringInputDataBase",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "DataDrift",
            "additionalProperties": false
        },
        "DataImport": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DataVersionBase"
                }
            ],
            "properties": {
                "assetName": {
                    "description": "Name of the asset for data import job to create",
                    "type": "string",
                    "x-nullable": true
                },
                "source": {
                    "description": "Source data of the asset to import from",
                    "$ref": "#/definitions/DataImportSource",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "uri_folder",
            "additionalProperties": false
        },
        "DataImportSource": {
            "required": [
                "sourceType"
            ],
            "type": "object",
            "properties": {
                "connection": {
                    "description": "Workspace connection for data import source storage",
                    "type": "string",
                    "x-nullable": true
                },
                "sourceType": {
                    "description": "[Required] Specifies the type of data.",
                    "$ref": "#/definitions/DataImportSourceType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "discriminator": "sourceType"
        },
        "DataPathAssetReference": {
            "description": "Reference to an asset via its path in a datastore.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AssetReferenceBase"
                }
            ],
            "properties": {
                "datastoreId": {
                    "description": "ARM resource ID of the datastore where the asset is located.",
                    "type": "string",
                    "x-nullable": true
                },
                "path": {
                    "description": "The path of the file/directory in the datastore.",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "DataPath",
            "additionalProperties": false
        },
        "DataQualityMetricThresholdBase": {
            "required": [
                "dataType"
            ],
            "type": "object",
            "properties": {
                "dataType": {
                    "description": "[Required] Specifies the data type of the metric threshold.",
                    "$ref": "#/definitions/MonitoringFeatureDataType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "threshold": {
                    "description": "The threshold value. If null, a default value will be set depending on the selected metric.",
                    "$ref": "#/definitions/MonitoringThreshold",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                }
            },
            "discriminator": "dataType"
        },
        "DataQualityMonitoringSignal": {
            "required": [
                "metricThresholds",
                "productionData",
                "referenceData"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/MonitoringSignalBase"
                }
            ],
            "properties": {
                "featureDataTypeOverride": {
                    "description": "A dictionary that maps feature names to their respective data types.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/MonitoringFeatureDataType"
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "features": {
                    "description": "The features to calculate drift over.",
                    "$ref": "#/definitions/MonitoringFeatureFilterBase",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "metricThresholds": {
                    "description": "[Required] A list of metrics to calculate and their associated thresholds.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DataQualityMetricThresholdBase"
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-ms-identifiers": []
                },
                "productionData": {
                    "description": "[Required] The data produced by the production service which drift will be calculated for.",
                    "$ref": "#/definitions/MonitoringInputDataBase",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "referenceData": {
                    "description": "[Required] The data to calculate drift against.",
                    "$ref": "#/definitions/MonitoringInputDataBase",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "DataQuality",
            "additionalProperties": false
        },
        "DataVersionBase": {
            "description": "Data version base definition",
            "required": [
                "dataType",
                "dataUri"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AssetBase"
                }
            ],
            "properties": {
                "dataType": {
                    "description": "[Required] Specifies the type of data.",
                    "$ref": "#/definitions/DataType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "dataUri": {
                    "description": "[Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "intellectualProperty": {
                    "description": "Intellectual Property details. Used if data is an Intellectual Property.",
                    "$ref": "#/definitions/IntellectualProperty",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "stage": {
                    "description": "Stage in the data lifecycle assigned to this data asset",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "discriminator": "dataType",
            "x-ms-client-name": "DataVersionBaseProperties"
        },
        "DataVersionBaseResource": {
            "description": "Azure Resource Manager resource envelope.",
            "required": [
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
                }
            ],
            "properties": {
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/DataVersionBase"
                }
            },
            "x-ms-client-name": "DataVersionBase",
            "additionalProperties": false
        },
        "DataVersionBaseResourceArmPaginatedResult": {
            "description": "A paginated list of DataVersionBase entities.",
            "type": "object",
            "properties": {
                "nextLink": {
                    "description": "The link to the next page of DataVersionBase objects. If null, there are no additional pages.",
                    "type": "string"
                },
                "value": {
                    "description": "An array of objects of type DataVersionBase.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DataVersionBaseResource"
                    }
                }
            },
            "additionalProperties": false
        },
        "DatabaseSource": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DataImportSource"
                }
            ],
            "properties": {
                "query": {
                    "description": "SQL Query statement for data import Database source",
                    "type": "string",
                    "x-nullable": true
                },
                "storedProcedure": {
                    "description": "SQL StoredProcedure on data import Database source",
                    "type": "string",
                    "x-nullable": true
                },
                "storedProcedureParams": {
                    "description": "SQL StoredProcedure parameters",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "x-nullable": true,
                    "x-ms-identifiers": []
                },
                "tableName": {
                    "description": "Name of the table on data import Database source",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "database",
            "additionalProperties": false
        },
        "DatasetExportSummary": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ExportSummary"
                }
            ],
            "properties": {
                "labeledAssetName": {
                    "description": "The unique name of the labeled data asset.",
                    "type": "string",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "Dataset",
            "additionalProperties": false
        },
        "Datastore": {
            "description": "Base definition for datastore contents configuration.",
            "required": [
                "credentials",
                "datastoreType"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ResourceBase"
                }
            ],
            "properties": {
                "credentials": {
                    "description": "[Required] Account credentials.",
                    "$ref": "#/definitions/DatastoreCredentials"
                },
                "datastoreType": {
                    "description": "[Required] Storage type backing the datastore.",
                    "$ref": "#/definitions/DatastoreType"
                },
                "intellectualProperty": {
                    "description": "Intellectual Property details.",
                    "$ref": "#/definitions/IntellectualProperty",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "isDefault": {
                    "description": "Readonly property to indicate if datastore is the workspace default datastore",
                    "type": "boolean",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ]
                }
            },
            "discriminator": "datastoreType",
            "x-ms-client-name": "DatastoreProperties"
        },
        "DatastoreCredentials": {
            "description": "Base definition for datastore credentials.",
            "required": [
                "credentialsType"
            ],
            "type": "object",
            "properties": {
                "credentialsType": {
                    "description": "[Required] Credential type used to authentication with storage.",
                    "$ref": "#/definitions/CredentialsType"
                }
            },
            "discriminator": "credentialsType"
        },
        "DatastoreResource": {
            "description": "Azure Resource Manager resource envelope.",
            "required": [
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
                }
            ],
            "properties": {
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/Datastore"
                }
            },
            "x-ms-client-name": "Datastore",
            "additionalProperties": false
        },
        "DatastoreResourceArmPaginatedResult": {
            "description": "A paginated list of Datastore entities.",
            "type": "object",
            "properties": {
                "nextLink": {
                    "description": "The link to the next page of Datastore objects. If null, there are no additional pages.",
                    "type": "string"
                },
                "value": {
                    "description": "An array of objects of type Datastore.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DatastoreResource"
                    }
                }
            },
            "additionalProperties": false
        },
        "DatastoreSecrets": {
            "description": "Base definition for datastore secrets.",
            "required": [
                "secretsType"
            ],
            "type": "object",
            "properties": {
                "secretsType": {
                    "description": "[Required] Credential type used to authentication with storage.",
                    "$ref": "#/definitions/SecretsType"
                }
            },
            "discriminator": "secretsType"
        },
        "DatastoreType": {
            "description": "Enum to determine the datastore contents type.",
            "enum": [
                "AzureBlob",
                "AzureDataLakeGen1",
                "AzureDataLakeGen2",
                "AzureFile",
                "Hdfs",
                "OneLake"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "DatastoreType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "AzureBlob"
                    },
                    {
                        "value": "AzureDataLakeGen1"
                    },
                    {
                        "value": "AzureDataLakeGen2"
                    },
                    {
                        "value": "AzureFile"
                    },
                    {
                        "value": "Hdfs"
                    },
                    {
                        "value": "OneLake"
                    }
                ]
            },
            "additionalProperties": false
        },
        "DefaultScaleSettings": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/OnlineScaleSettings"
                }
            ],
            "x-ms-discriminator-value": "Default",
            "additionalProperties": false
        },
        "DeploymentLogs": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "The retrieved online deployment logs.",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "DeploymentProvisioningState": {
            "description": "Possible values for DeploymentProvisioningState.",
            "enum": [
                "Creating",
                "Deleting",
                "Scaling",
                "Updating",
                "Succeeded",
                "Failed",
                "Canceled"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "DeploymentProvisioningState",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Creating"
                    },
                    {
                        "value": "Deleting"
                    },
                    {
                        "value": "Scaling"
                    },
                    {
                        "value": "Updating"
                    },
                    {
                        "value": "Succeeded"
                    },
                    {
                        "value": "Failed"
                    },
                    {
                        "value": "Canceled"
                    }
                ]
            },
            "additionalProperties": false
        },
        "DeploymentResourceConfiguration": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ResourceConfiguration"
                }
            ],
            "additionalProperties": false
        },
        "DistributionConfiguration": {
            "description": "Base definition for job distribution configuration.",
            "required": [
                "distributionType"
            ],
            "type": "object",
            "properties": {
                "distributionType": {
                    "description": "[Required] Specifies the type of distribution framework.",
                    "$ref": "#/definitions/DistributionType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "discriminator": "distributionType"
        },
        "EarlyTerminationPolicy": {
            "description": "Early termination policies enable canceling poor-performing runs before they complete",
            "required": [
                "policyType"
            ],
            "type": "object",
            "properties": {
                "delayEvaluation": {
                    "format": "int32",
                    "description": "Number of intervals by which to delay the first evaluation.",
                    "default": 0,
                    "type": "integer"
                },
                "evaluationInterval": {
                    "format": "int32",
                    "description": "Interval (number of runs) between policy evaluations.",
                    "default": 0,
                    "type": "integer"
                },
                "policyType": {
                    "description": "[Required] Name of policy configuration",
                    "$ref": "#/definitions/EarlyTerminationPolicyType"
                }
            },
            "discriminator": "policyType"
        },
        "EgressPublicNetworkAccessType": {
            "description": "Enum to determine whether PublicNetworkAccess is Enabled or Disabled for egress of a deployment.",
            "enum": [
                "Enabled",
                "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "EgressPublicNetworkAccessType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Enabled"
                    },
                    {
                        "value": "Disabled"
                    }
                ]
            },
            "additionalProperties": false
        },
        "EmailMonitoringAlertNotificationSettings": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/MonitoringAlertNotificationSettingsBase"
                }
            ],
            "properties": {
                "emailNotificationSetting": {
                    "description": "Configuration for notification.",
                    "$ref": "#/definitions/NotificationSetting",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "Email",
            "additionalProperties": false
        },
        "EndpointAuthKeys": {
            "description": "Keys for endpoint authentication.",
            "type": "object",
            "properties": {
                "primaryKey": {
                    "description": "The primary key.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "secondaryKey": {
                    "description": "The secondary key.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "EndpointAuthMode": {
            "description": "Enum to determine endpoint authentication mode.",
            "enum": [
                "AMLToken",
                "Key",
                "AADToken"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "EndpointAuthMode",
                "modelAsString": true,
                "values": [
                    {
                        "value": "AMLToken"
                    },
                    {
                        "value": "Key"
                    },
                    {
                        "value": "AADToken"
                    }
                ]
            },
            "additionalProperties": false
        },
        "EndpointAuthToken": {
            "description": "Service Token",
            "type": "object",
            "properties": {
                "accessToken": {
                    "description": "Access token for endpoint authentication.",
                    "type": "string",
                    "x-nullable": true
                },
                "expiryTimeUtc": {
                    "format": "int64",
                    "description": "Access token expiry time (UTC).",
                    "default": 0,
                    "type": "integer"
                },
                "refreshAfterTimeUtc": {
                    "format": "int64",
                    "description": "Refresh access token after time (UTC).",
                    "default": 0,
                    "type": "integer"
                },
                "tokenType": {
                    "description": "Access token type.",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "EndpointComputeType": {
            "description": "Enum to determine endpoint compute type.",
            "enum": [
                "Managed",
                "Kubernetes",
                "AzureMLCompute"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "EndpointComputeType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Managed"
                    },
                    {
                        "value": "Kubernetes"
                    },
                    {
                        "value": "AzureMLCompute"
                    }
                ]
            },
            "additionalProperties": false
        },
        "EndpointDeploymentPropertiesBase": {
            "description": "Base definition for endpoint deployment.",
            "type": "object",
            "properties": {
                "codeConfiguration": {
                    "description": "Code configuration for the endpoint deployment.",
                    "$ref": "#/definitions/CodeConfiguration",
                    "x-nullable": true
                },
                "description": {
                    "description": "Description of the endpoint deployment.",
                    "type": "string",
                    "x-nullable": true
                },
                "environmentId": {
                    "description": "ARM resource ID of the environment specification for the endpoint deployment.",
                    "type": "string",
                    "x-nullable": true
                },
                "environmentVariables": {
                    "description": "Environment variables configuration for the deployment.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "x-nullable": true
                },
                "properties": {
                    "description": "Property dictionary. Properties can be added, but not removed or altered.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "EndpointPropertiesBase": {
            "description": "Inference Endpoint base definition",
            "required": [
                "authMode"
            ],
            "type": "object",
            "properties": {
                "authMode": {
                    "description": "[Required] Use 'Key' for key based authentication and 'AMLToken' for Azure Machine Learning token-based authentication. 'Key' doesn't expire but 'AMLToken' does.",
                    "$ref": "#/definitions/EndpointAuthMode"
                },
                "description": {
                    "description": "Description of the inference endpoint.",
                    "type": "string",
                    "x-nullable": true
                },
                "keys": {
                    "description": "EndpointAuthKeys to set initially on an Endpoint.\r\nThis property will always be returned as null. AuthKey values must be retrieved using the ListKeys API.",
                    "$ref": "#/definitions/EndpointAuthKeys",
                    "x-ms-mutability": [
                        "create"
                    ],
                    "x-ms-secret": true,
                    "x-nullable": true
                },
                "properties": {
                    "description": "Property dictionary. Properties can be added, but not removed or altered.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "x-nullable": true
                },
                "scoringUri": {
                    "format": "uri",
                    "description": "Endpoint URI.",
                    "type": "string",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "swaggerUri": {
                    "format": "uri",
                    "description": "Endpoint Swagger URI.",
                    "type": "string",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "EndpointProvisioningState": {
            "description": "State of endpoint provisioning.",
            "enum": [
                "Creating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Updating",
                "Canceled"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "EndpointProvisioningState",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Creating"
                    },
                    {
                        "value": "Deleting"
                    },
                    {
                        "value": "Succeeded"
                    },
                    {
                        "value": "Failed"
                    },
                    {
                        "value": "Updating"
                    },
                    {
                        "value": "Canceled"
                    }
                ]
            },
            "additionalProperties": false
        },
        "EndpointScheduleAction": {
            "required": [
                "actionType",
                "endpointInvocationDefinition"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ScheduleActionBase"
                }
            ],
            "properties": {
                "endpointInvocationDefinition": {
                    "description": "[Required] Defines Schedule action definition details.\r\n<see href=\"TBD\" />",
                    "type": "object",
                    "example": {
                        "endpoint": "azureml:/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/resourceGroup-1234/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/batchEndpoints/hello-pipeline",
                        "inputs": {
                            "create_time": "${{creation_context.trigger_time}}"
                        }
                    },
                    "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                    ]
                }
            },
            "x-ms-discriminator-value": "InvokeBatchEndpoint",
            "additionalProperties": false
        },
        "EnvironmentContainerResource": {
            "description": "Azure Resource Manager resource envelope.",
            "required": [
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
                }
            ],
            "properties": {
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/EnvironmentContainer"
                }
            },
            "x-ms-client-name": "EnvironmentContainer",
            "additionalProperties": false
        },
        "EnvironmentContainerResourceArmPaginatedResult": {
            "description": "A paginated list of EnvironmentContainer entities.",
            "type": "object",
            "properties": {
                "nextLink": {
                    "description": "The link to the next page of EnvironmentContainer objects. If null, there are no additional pages.",
                    "type": "string"
                },
                "value": {
                    "description": "An array of objects of type EnvironmentContainer.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EnvironmentContainerResource"
                    }
                }
            },
            "additionalProperties": false
        },
        "EnvironmentVersion": {
            "description": "Environment version details.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AssetBase"
                }
            ],
            "properties": {
                "autoRebuild": {
                    "description": "Defines if image needs to be rebuilt based on base image changes.",
                    "default": "Disabled",
                    "$ref": "#/definitions/AutoRebuildSetting",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "build": {
                    "description": "Configuration settings for Docker build context.",
                    "$ref": "#/definitions/BuildContext",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "condaFile": {
                    "description": "Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.\r\n<see href=\"https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment\" />",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "environmentType": {
                    "description": "Environment type is either user managed or curated by the Azure ML service\r\n<see href=\"https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments\" />",
                    "$ref": "#/definitions/EnvironmentType",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ]
                },
                "image": {
                    "description": "Name of the image that will be used for the environment.\r\n<seealso href=\"https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image\" />",
                    "type": "string",
                    "example": "docker.io/tensorflow/serving:latest",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "inferenceConfig": {
                    "description": "Defines configuration specific to inference.",
                    "$ref": "#/definitions/InferenceContainerProperties",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "intellectualProperty": {
                    "description": "Intellectual Property details. Used if environment is an Intellectual Property.",
                    "$ref": "#/definitions/IntellectualProperty",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "osType": {
                    "description": "The OS type of the environment.",
                    "default": "Linux",
                    "$ref": "#/definitions/OperatingSystemType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "provisioningState": {
                    "description": "Provisioning state for the environment version.",
                    "$ref": "#/definitions/AssetProvisioningState",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ]
                },
                "stage": {
                    "description": "Stage in the environment lifecycle assigned to this environment",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-ms-client-name": "EnvironmentVersionProperties",
            "additionalProperties": false
        },
        "EnvironmentVersionResource": {
            "description": "Azure Resource Manager resource envelope.",
            "required": [
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
                }
            ],
            "properties": {
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/EnvironmentVersion"
                }
            },
            "x-ms-client-name": "EnvironmentVersion",
            "additionalProperties": false
        },
        "EnvironmentVersionResourceArmPaginatedResult": {
            "description": "A paginated list of EnvironmentVersion entities.",
            "type": "object",
            "properties": {
                "nextLink": {
                    "description": "The link to the next page of EnvironmentVersion objects. If null, there are no additional pages.",
                    "type": "string"
                },
                "value": {
                    "description": "An array of objects of type EnvironmentVersion.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EnvironmentVersionResource"
                    }
                }
            },
            "additionalProperties": false
        },
        "ExportFormatType": {
            "description": "The format of exported labels.",
            "enum": [
                "Dataset",
                "Coco",
                "CSV"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "ExportFormatType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Dataset"
                    },
                    {
                        "value": "Coco"
                    },
                    {
                        "value": "CSV"
                    }
                ]
            },
            "additionalProperties": false
        },
        "ExportSummary": {
            "required": [
                "format"
            ],
            "type": "object",
            "properties": {
                "endDateTime": {
                    "format": "date-time",
                    "description": "The time when the export was completed.",
                    "type": "string",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "exportedRowCount": {
                    "format": "int64",
                    "description": "The total number of labeled datapoints exported.",
                    "type": "integer",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "format": {
                    "description": "[Required] The format of exported labels, also as the discriminator.",
                    "$ref": "#/definitions/ExportFormatType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "labelingJobId": {
                    "description": "Name and identifier of the job containing exported labels.",
                    "type": "string",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "startDateTime": {
                    "format": "date-time",
                    "description": "The time when the export was requested.",
                    "type": "string",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                }
            },
            "discriminator": "format"
        },
        "Feature": {
            "description": "Dto object representing feature",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ResourceBase"
                }
            ],
            "properties": {
                "dataType": {
                    "description": "Specifies type",
                    "default": "String",
                    "$ref": "#/definitions/FeatureDataType"
                },
                "featureName": {
                    "description": "Specifies name",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-ms-client-name": "FeatureProperties",
            "additionalProperties": false
        },
        "FeatureAttributionDriftMonitoringSignal": {
            "required": [
                "metricThreshold",
                "productionData",
                "referenceData"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/MonitoringSignalBase"
                }
            ],
            "properties": {
                "metricThreshold": {
                    "description": "[Required] A list of metrics to calculate and their associated thresholds.",
                    "$ref": "#/definitions/FeatureAttributionMetricThreshold",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "productionData": {
                    "description": "[Required] The data which drift will be calculated for.",
                    "type": "array",
                    "items": {
                        "description": "Monitoring input data base definition.",
                        "$ref": "#/definitions/MonitoringInputDataBase"
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-ms-identifiers": []
                },
                "referenceData": {
                    "description": "[Required] The data to calculate drift against.",
                    "$ref": "#/definitions/MonitoringInputDataBase",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "FeatureAttributionDrift",
            "additionalProperties": false
        },
        "FeatureResource": {
            "description": "Azure Resource Manager resource envelope.",
            "required": [
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
                }
            ],
            "properties": {
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/Feature"
                }
            },
            "x-ms-client-name": "Feature",
            "additionalProperties": false
        },
        "FeatureResourceArmPaginatedResult": {
            "description": "A paginated list of Feature entities.",
            "type": "object",
            "properties": {
                "nextLink": {
                    "description": "The link to the next page of Feature objects. If null, there are no additional pages.",
                    "type": "string"
                },
                "value": {
                    "description": "An array of objects of type Feature.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FeatureResource"
                    }
                }
            },
            "additionalProperties": false
        },
        "FeatureSubset": {
            "required": [
                "features",
                "filterType"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/MonitoringFeatureFilterBase"
                }
            ],
            "properties": {
                "features": {
                    "description": "[Required] The list of features to include.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "FeatureSubset",
            "additionalProperties": false
        },
        "FeatureWindow": {
            "description": "Specifies the feature window",
            "type": "object",
            "properties": {
                "featureWindowEnd": {
                    "format": "date-time",
                    "description": "Specifies the feature window end time",
                    "type": "string",
                    "x-nullable": true
                },
                "featureWindowStart": {
                    "format": "date-time",
                    "description": "Specifies the feature window start time",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "FeaturesetContainer": {
            "description": "Dto object representing feature set",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AssetContainer"
                }
            ],
            "properties": {
                "provisioningState": {
                    "description": "Provisioning state for the featureset container.",
                    "$ref": "#/definitions/AssetProvisioningState",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ]
                }
            },
            "x-ms-client-name": "FeaturesetContainerProperties",
            "additionalProperties": false
        },
        "FeaturesetContainerResource": {
            "description": "Azure Resource Manager resource envelope.",
            "required": [
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
                }
            ],
            "properties": {
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/FeaturesetContainer"
                }
            },
            "x-ms-client-name": "FeaturesetContainer",
            "additionalProperties": false
        },
        "FeaturesetContainerResourceArmPaginatedResult": {
            "description": "A paginated list of FeaturesetContainer entities.",
            "type": "object",
            "properties": {
                "nextLink": {
                    "description": "The link to the next page of FeaturesetContainer objects. If null, there are no additional pages.",
                    "type": "string"
                },
                "value": {
                    "description": "An array of objects of type FeaturesetContainer.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FeaturesetContainerResource"
                    }
                }
            },
            "additionalProperties": false
        },
        "FeaturesetJob": {
            "description": "Dto object representing the feature set job",
            "type": "object",
            "properties": {
                "createdDate": {
                    "format": "date-time",
                    "description": "Specifies the created date",
                    "type": "string",
                    "x-nullable": true
                },
                "displayName": {
                    "description": "Specifies the display name",
                    "type": "string",
                    "x-nullable": true
                },
                "duration": {
                    "format": "duration",
                    "description": "Specifies the duration",
                    "type": "string",
                    "x-nullable": true
                },
                "experimentId": {
                    "description": "Specifies the experiment id",
                    "type": "string",
                    "x-nullable": true
                },
                "featureWindow": {
                    "description": "Specifies the backfill feature window to be materialized",
                    "$ref": "#/definitions/FeatureWindow",
                    "x-nullable": true
                },
                "jobId": {
                    "description": "Specifies the job id",
                    "type": "string",
                    "x-nullable": true
                },
                "status": {
                    "description": "Specifies the job status",
                    "default": "Unknown",
                    "$ref": "#/definitions/JobStatus"
                },
                "tags": {
                    "description": "Specifies the tags if any",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "x-nullable": true
                },
                "type": {
                    "description": "Specifies the feature store job type",
                    "default": "RecurrentMaterialization",
                    "$ref": "#/definitions/FeaturestoreJobType"
                }
            },
            "additionalProperties": false
        },
        "FeaturesetVersion": {
            "description": "Dto object representing feature set version",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AssetBase"
                }
            ],
            "properties": {
                "entities": {
                    "description": "Specifies list of entities",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true
                },
                "materializationSettings": {
                    "description": "Specifies the materialization settings",
                    "$ref": "#/definitions/MaterializationSettings",
                    "x-nullable": true
                },
                "provisioningState": {
                    "description": "Provisioning state for the featureset version container.",
                    "$ref": "#/definitions/AssetProvisioningState",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ]
                },
                "specification": {
                    "description": "Specifies the feature spec details",
                    "$ref": "#/definitions/FeaturesetSpecification",
                    "x-nullable": true
                },
                "stage": {
                    "description": "Specifies the asset stage",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-ms-client-name": "FeaturesetVersionProperties",
            "additionalProperties": false
        },
        "FeaturesetVersionResource": {
            "description": "Azure Resource Manager resource envelope.",
            "required": [
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
                }
            ],
            "properties": {
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/FeaturesetVersion"
                }
            },
            "x-ms-client-name": "FeaturesetVersion",
            "additionalProperties": false
        },
        "FeaturestoreEntityContainer": {
            "description": "Dto object representing feature entity",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AssetContainer"
                }
            ],
            "properties": {
                "provisioningState": {
                    "description": "Provisioning state for the featurestore entity container.",
                    "$ref": "#/definitions/AssetProvisioningState",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ]
                }
            },
            "x-ms-client-name": "FeaturestoreEntityContainerProperties",
            "additionalProperties": false
        },
        "FeaturestoreEntityContainerResource": {
            "description": "Azure Resource Manager resource envelope.",
            "required": [
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
                }
            ],
            "properties": {
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/FeaturestoreEntityContainer"
                }
            },
            "x-ms-client-name": "FeaturestoreEntityContainer",
            "additionalProperties": false
        },
        "FeaturestoreEntityVersion": {
            "description": "Dto object representing feature entity version",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AssetBase"
                }
            ],
            "properties": {
                "indexColumns": {
                    "description": "Specifies index columns",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IndexColumn"
                    },
                    "x-nullable": true,
                    "x-ms-identifiers": []
                },
                "provisioningState": {
                    "description": "Provisioning state for the featurestore entity version.",
                    "$ref": "#/definitions/AssetProvisioningState",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ]
                },
                "stage": {
                    "description": "Specifies the asset stage",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-ms-client-name": "FeaturestoreEntityVersionProperties",
            "additionalProperties": false
        },
        "FeaturestoreEntityVersionResource": {
            "description": "Azure Resource Manager resource envelope.",
            "required": [
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
                }
            ],
            "properties": {
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/FeaturestoreEntityVersion"
                }
            },
            "x-ms-client-name": "FeaturestoreEntityVersion",
            "additionalProperties": false
        },
        "FeaturestoreJobType": {
            "enum": [
                "RecurrentMaterialization",
                "BackfillMaterialization"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "FeaturestoreJobType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "RecurrentMaterialization"
                    },
                    {
                        "value": "BackfillMaterialization"
                    }
                ]
            },
            "additionalProperties": false
        },
        "FileSystemSource": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DataImportSource"
                }
            ],
            "properties": {
                "path": {
                    "description": "Path on data import FileSystem source",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "file_system",
            "additionalProperties": false
        },
        "FixedInputData": {
            "description": "Fixed input data definition.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/MonitoringInputDataBase"
                }
            ],
            "x-ms-discriminator-value": "Fixed",
            "additionalProperties": false
        },
        "ForecastHorizon": {
            "description": "The desired maximum forecast horizon in units of time-series frequency.",
            "required": [
                "mode"
            ],
            "type": "object",
            "properties": {
                "mode": {
                    "description": "[Required] Set forecast horizon value selection mode.",
                    "$ref": "#/definitions/ForecastHorizonMode",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "discriminator": "mode"
        },
        "Forecasting": {
            "description": "Forecasting task in AutoML Table vertical.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/TableVertical"
                },
                {
                    "$ref": "#/definitions/AutoMLVertical"
                }
            ],
            "properties": {
                "forecastingSettings": {
                    "description": "Forecasting task specific inputs.",
                    "$ref": "#/definitions/ForecastingSettings",
                    "x-nullable": true
                },
                "primaryMetric": {
                    "description": "Primary metric for forecasting task.",
                    "default": "NormalizedRootMeanSquaredError",
                    "$ref": "#/definitions/ForecastingPrimaryMetrics"
                },
                "trainingSettings": {
                    "description": "Inputs for training phase for an AutoML Job.",
                    "$ref": "#/definitions/ForecastingTrainingSettings",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "Forecasting",
            "additionalProperties": false
        },
        "GenerationSafetyQualityMonitoringSignal": {
            "description": "Generation safety quality monitoring signal definition.",
            "required": [
                "metricThresholds",
                "samplingRate"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/MonitoringSignalBase"
                }
            ],
            "properties": {
                "metricThresholds": {
                    "description": "[Required] Gets or sets the metrics to calculate and the corresponding thresholds.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GenerationSafetyQualityMetricThreshold"
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-ms-identifiers": []
                },
                "productionData": {
                    "description": "Gets or sets the target data for computing metrics.",
                    "type": "array",
                    "items": {
                        "description": "Monitoring input data base definition.",
                        "$ref": "#/definitions/MonitoringInputDataBase"
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true,
                    "x-ms-identifiers": []
                },
                "samplingRate": {
                    "format": "double",
                    "description": "[Required] The sample rate of the target data, should be greater than 0 and at most 1.",
                    "type": "number",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "workspaceConnectionId": {
                    "description": "Gets or sets the workspace connection ID used to connect to the content generation endpoint.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "GenerationSafetyQuality",
            "additionalProperties": false
        },
        "GenerationTokenStatisticsSignal": {
            "description": "Generation token statistics signal definition.",
            "required": [
                "metricThresholds",
                "samplingRate"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/MonitoringSignalBase"
                }
            ],
            "properties": {
                "metricThresholds": {
                    "description": "[Required] Gets or sets the metrics to calculate and the corresponding thresholds.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GenerationTokenStatisticsMetricThreshold"
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-ms-identifiers": []
                },
                "productionData": {
                    "description": "Gets or sets the target data for computing metrics.",
                    "$ref": "#/definitions/MonitoringInputDataBase",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "samplingRate": {
                    "format": "double",
                    "description": "[Required] The sample rate of the target data, should be greater than 0 and at most 1.",
                    "type": "number",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "GenerationTokenStatistics",
            "additionalProperties": false
        },
        "GridSamplingAlgorithm": {
            "description": "Defines a Sampling Algorithm that exhaustively generates every value combination in the space",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/SamplingAlgorithm"
                }
            ],
            "x-ms-discriminator-value": "Grid",
            "additionalProperties": false
        },
        "HdfsDatastore": {
            "required": [
                "nameNodeAddress"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Datastore"
                }
            ],
            "properties": {
                "hdfsServerCertificate": {
                    "description": "The TLS cert of the HDFS server. Needs to be a base64 encoded string. Required if \"Https\" protocol is selected.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "nameNodeAddress": {
                    "description": "[Required] IP Address or DNS HostName.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "protocol": {
                    "description": "Protocol used to communicate with the storage account (Https/Http).",
                    "default": "http",
                    "type": "string",
                    "example": "https",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "Hdfs",
            "additionalProperties": false
        },
        "IdAssetReference": {
            "description": "Reference to an asset via its ARM resource ID.",
            "required": [
                "assetId"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AssetReferenceBase"
                }
            ],
            "properties": {
                "assetId": {
                    "description": "[Required] ARM resource ID of the asset.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string"
                }
            },
            "x-ms-discriminator-value": "Id",
            "additionalProperties": false
        },
        "IdentityConfiguration": {
            "description": "Base definition for identity configuration.",
            "required": [
                "identityType"
            ],
            "type": "object",
            "properties": {
                "identityType": {
                    "description": "[Required] Specifies the type of identity framework.",
                    "$ref": "#/definitions/IdentityConfigurationType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "discriminator": "identityType"
        },
        "ImageAnnotationType": {
            "description": "Annotation type of image data.",
            "enum": [
                "Classification",
                "BoundingBox",
                "InstanceSegmentation"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "ImageAnnotationType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Classification"
                    },
                    {
                        "value": "BoundingBox"
                    },
                    {
                        "value": "InstanceSegmentation"
                    }
                ]
            },
            "additionalProperties": false
        },
        "ImageClassification": {
            "description": "Image Classification. Multi-class image classification is used when an image is classified with only a single label\r\nfrom a set of classes - e.g. each image is classified as either an image of a 'cat' or a 'dog' or a 'duck'.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ImageClassificationBase"
                },
                {
                    "$ref": "#/definitions/AutoMLVertical"
                }
            ],
            "properties": {
                "primaryMetric": {
                    "description": "Primary metric to optimize for this task.",
                    "default": "Accuracy",
                    "$ref": "#/definitions/ClassificationPrimaryMetrics"
                }
            },
            "x-ms-discriminator-value": "ImageClassification",
            "additionalProperties": false
        },
        "ImageClassificationBase": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ImageVertical"
                }
            ],
            "properties": {
                "modelSettings": {
                    "description": "Settings used for training the model.",
                    "$ref": "#/definitions/ImageModelSettingsClassification",
                    "x-nullable": true
                },
                "searchSpace": {
                    "description": "Search space for sampling different combinations of models and their hyperparameters.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImageModelDistributionSettingsClassification"
                    },
                    "x-nullable": true,
                    "x-ms-identifiers": []
                }
            },
            "additionalProperties": false
        },
        "ImageClassificationMultilabel": {
            "description": "Image Classification Multilabel. Multi-label image classification is used when an image could have one or more labels\r\nfrom a set of labels - e.g. an image could be labeled with both 'cat' and 'dog'.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ImageClassificationBase"
                },
                {
                    "$ref": "#/definitions/AutoMLVertical"
                }
            ],
            "properties": {
                "primaryMetric": {
                    "description": "Primary metric to optimize for this task.",
                    "default": "IOU",
                    "$ref": "#/definitions/ClassificationMultilabelPrimaryMetrics"
                }
            },
            "x-ms-discriminator-value": "ImageClassificationMultilabel",
            "additionalProperties": false
        },
        "ImageInstanceSegmentation": {
            "description": "Image Instance Segmentation. Instance segmentation is used to identify objects in an image at the pixel level,\r\ndrawing a polygon around each object in the image.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ImageObjectDetectionBase"
                },
                {
                    "$ref": "#/definitions/AutoMLVertical"
                }
            ],
            "properties": {
                "primaryMetric": {
                    "description": "Primary metric to optimize for this task.",
                    "default": "MeanAveragePrecision",
                    "$ref": "#/definitions/InstanceSegmentationPrimaryMetrics"
                }
            },
            "x-ms-discriminator-value": "ImageInstanceSegmentation",
            "additionalProperties": false
        },
        "ImageObjectDetection": {
            "description": "Image Object Detection. Object detection is used to identify objects in an image and locate each object with a\r\nbounding box e.g. locate all dogs and cats in an image and draw a bounding box around each.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ImageObjectDetectionBase"
                },
                {
                    "$ref": "#/definitions/AutoMLVertical"
                }
            ],
            "properties": {
                "primaryMetric": {
                    "description": "Primary metric to optimize for this task.",
                    "default": "MeanAveragePrecision",
                    "$ref": "#/definitions/ObjectDetectionPrimaryMetrics"
                }
            },
            "x-ms-discriminator-value": "ImageObjectDetection",
            "additionalProperties": false
        },
        "ImageObjectDetectionBase": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ImageVertical"
                }
            ],
            "properties": {
                "modelSettings": {
                    "description": "Settings used for training the model.",
                    "$ref": "#/definitions/ImageModelSettingsObjectDetection",
                    "x-nullable": true
                },
                "searchSpace": {
                    "description": "Search space for sampling different combinations of models and their hyperparameters.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImageModelDistributionSettingsObjectDetection"
                    },
                    "x-nullable": true,
                    "x-ms-identifiers": []
                }
            },
            "additionalProperties": false
        },
        "ImageVertical": {
            "description": "Abstract class for AutoML tasks that train image (computer vision) models -\r\nsuch as Image Classification / Image Classification Multilabel / Image Object Detection / Image Instance Segmentation.",
            "required": [
                "limitSettings"
            ],
            "type": "object",
            "properties": {
                "limitSettings": {
                    "description": "[Required] Limit settings for the AutoML job.",
                    "$ref": "#/definitions/ImageLimitSettings"
                },
                "sweepSettings": {
                    "description": "Model sweeping and hyperparameter sweeping related settings.",
                    "$ref": "#/definitions/ImageSweepSettings",
                    "x-nullable": true
                },
                "validationData": {
                    "description": "Validation data inputs.",
                    "$ref": "#/definitions/MLTableJobInput",
                    "x-nullable": true
                },
                "validationDataSize": {
                    "format": "double",
                    "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided.",
                    "type": "number",
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "ImportDataAction": {
            "required": [
                "actionType",
                "dataImportDefinition"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ScheduleActionBase"
                }
            ],
            "properties": {
                "dataImportDefinition": {
                    "description": "[Required] Defines Schedule action definition details.",
                    "$ref": "#/definitions/DataImport",
                    "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                    ]
                }
            },
            "x-ms-discriminator-value": "ImportData",
            "additionalProperties": false
        },
        "IncrementalDataRefresh": {
            "description": "Whether IncrementalDataRefresh is enabled",
            "enum": [
                "Enabled",
                "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "IncrementalDataRefresh",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Enabled"
                    },
                    {
                        "value": "Disabled"
                    }
                ]
            },
            "additionalProperties": false
        },
        "InferencingServer": {
            "required": [
                "serverType"
            ],
            "type": "object",
            "properties": {
                "serverType": {
                    "description": "[Required] Inferencing server type for various targets.",
                    "$ref": "#/definitions/InferencingServerType"
                }
            },
            "discriminator": "serverType"
        },
        "InferencingServerType": {
            "description": "Inferencing server type for various targets.",
            "enum": [
                "AzureMLOnline",
                "AzureMLBatch",
                "Triton",
                "Custom"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "InferencingServerType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "AzureMLOnline"
                    },
                    {
                        "value": "AzureMLBatch"
                    },
                    {
                        "value": "Triton"
                    },
                    {
                        "value": "Custom"
                    }
                ]
            },
            "additionalProperties": false
        },
        "InputPathType": {
            "description": "Input path type for package inputs.",
            "enum": [
                "Url",
                "PathId",
                "PathVersion"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "InputPathType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Url"
                    },
                    {
                        "value": "PathId"
                    },
                    {
                        "value": "PathVersion"
                    }
                ]
            },
            "additionalProperties": false
        },
        "JobBase": {
            "description": "Base definition for a job.",
            "required": [
                "jobType"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ResourceBase"
                }
            ],
            "properties": {
                "componentId": {
                    "description": "ARM resource ID of the component resource.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "computeId": {
                    "description": "ARM resource ID of the compute resource.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "displayName": {
                    "description": "Display name of job.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "experimentName": {
                    "description": "The name of the experiment the job belongs to. If not set, the job is placed in the \"Default\" experiment.",
                    "default": "Default",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "identity": {
                    "description": "Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, UserIdentity or null.\r\nDefaults to AmlToken if null.",
                    "$ref": "#/definitions/IdentityConfiguration",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "isArchived": {
                    "description": "Is the asset archived?",
                    "default": false,
                    "type": "boolean",
                    "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                    ]
                },
                "jobType": {
                    "description": "[Required] Specifies the type of job.",
                    "$ref": "#/definitions/JobType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "notificationSetting": {
                    "description": "Notification setting for the job",
                    "$ref": "#/definitions/NotificationSetting",
                    "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                    ],
                    "x-nullable": true
                },
                "secretsConfiguration": {
                    "description": "Configuration for secrets to be made available during runtime.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/SecretConfiguration",
                        "x-nullable": true
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "services": {
                    "description": "List of JobEndpoints.\r\nFor local jobs, a job endpoint will have an endpoint value of FileStreamObject.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/JobService",
                        "x-nullable": true
                    },
                    "x-nullable": true
                },
                "status": {
                    "description": "Status of the job.",
                    "$ref": "#/definitions/JobStatus",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ]
                }
            },
            "discriminator": "jobType",
            "x-ms-client-name": "JobBaseProperties"
        },
        "JobBaseResource": {
            "description": "Azure Resource Manager resource envelope.",
            "required": [
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
                }
            ],
            "properties": {
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/JobBase"
                }
            },
            "x-ms-client-name": "JobBase",
            "additionalProperties": false
        },
        "JobInput": {
            "description": "Command job definition.",
            "required": [
                "jobInputType"
            ],
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description for the input.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "jobInputType": {
                    "description": "[Required] Specifies the type of job.",
                    "$ref": "#/definitions/JobInputType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "discriminator": "jobInputType"
        },
        "JobLimits": {
            "required": [
                "jobLimitsType"
            ],
            "type": "object",
            "properties": {
                "jobLimitsType": {
                    "description": "[Required] JobLimit type.",
                    "$ref": "#/definitions/JobLimitsType"
                },
                "timeout": {
                    "format": "duration",
                    "description": "The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "discriminator": "jobLimitsType"
        },
        "JobOutput": {
            "description": "Job output definition container information on where to find job output/logs.",
            "required": [
                "jobOutputType"
            ],
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description for the output.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "jobOutputType": {
                    "description": "[Required] Specifies the type of job.",
                    "$ref": "#/definitions/JobOutputType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "discriminator": "jobOutputType"
        },
        "JobProvisioningState": {
            "description": "Enum to determine the job provisioning state.",
            "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "InProgress"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "JobProvisioningState",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Succeeded"
                    },
                    {
                        "value": "Failed"
                    },
                    {
                        "value": "Canceled"
                    },
                    {
                        "value": "InProgress"
                    }
                ]
            },
            "additionalProperties": false
        },
        "JobScheduleAction": {
            "required": [
                "actionType",
                "jobDefinition"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ScheduleActionBase"
                }
            ],
            "properties": {
                "jobDefinition": {
                    "description": "[Required] Defines Schedule action definition details.",
                    "$ref": "#/definitions/JobBase",
                    "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                    ]
                }
            },
            "x-ms-discriminator-value": "CreateJob",
            "additionalProperties": false
        },
        "JobStatus": {
            "description": "The status of a job.",
            "enum": [
                "NotStarted",
                "Starting",
                "Provisioning",
                "Preparing",
                "Queued",
                "Running",
                "Finalizing",
                "CancelRequested",
                "Completed",
                "Failed",
                "Canceled",
                "NotResponding",
                "Paused",
                "Unknown",
                "Scheduled"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "JobStatus",
                "modelAsString": true,
                "values": [
                    {
                        "value": "NotStarted",
                        "description": "Run hasn't started yet."
                    },
                    {
                        "value": "Starting",
                        "description": "Run has started. The user has a run ID."
                    },
                    {
                        "value": "Provisioning",
                        "description": "(Not used currently) It will be used if ES is creating the compute target."
                    },
                    {
                        "value": "Preparing",
                        "description": "The run environment is being prepared."
                    },
                    {
                        "value": "Queued",
                        "description": "The job is queued in the compute target. For example, in BatchAI the job is in queued state, while waiting for all required nodes to be ready."
                    },
                    {
                        "value": "Running",
                        "description": "The job started to run in the compute target."
                    },
                    {
                        "value": "Finalizing",
                        "description": "Job is completed in the target. It is in output collection state now."
                    },
                    {
                        "value": "CancelRequested",
                        "description": "Cancellation has been requested for the job."
                    },
                    {
                        "value": "Completed",
                        "description": "Job completed successfully. This reflects that both the job itself and output collection states completed successfully"
                    },
                    {
                        "value": "Failed",
                        "description": "Job failed."
                    },
                    {
                        "value": "Canceled",
                        "description": "Following cancellation request, the job is now successfully canceled."
                    },
                    {
                        "value": "NotResponding",
                        "description": "When heartbeat is enabled, if the run isn't updating any information to RunHistory then the run goes to NotResponding state.\nNotResponding is the only state that is exempt from strict transition orders. A run can go from NotResponding to any of the previous states."
                    },
                    {
                        "value": "Paused",
                        "description": "The job is paused by users. Some adjustment to labeling jobs can be made only in paused state."
                    },
                    {
                        "value": "Unknown",
                        "description": "Default job status if not mapped to all other statuses"
                    },
                    {
                        "value": "Scheduled",
                        "description": "The job is in a scheduled state. Job is not in any active state."
                    }
                ]
            },
            "additionalProperties": false
        },
        "KerberosCredentials": {
            "required": [
                "kerberosKdcAddress",
                "kerberosPrincipal",
                "kerberosRealm"
            ],
            "type": "object",
            "properties": {
                "kerberosKdcAddress": {
                    "description": "[Required] IP Address or DNS HostName.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "kerberosPrincipal": {
                    "description": "[Required] Kerberos Username",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "kerberosRealm": {
                    "description": "[Required] Domain over which a Kerberos authentication server has the authority to authenticate a user, host or service.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "additionalProperties": false
        },
        "KerberosKeytabCredentials": {
            "required": [
                "secrets"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/KerberosCredentials"
                },
                {
                    "$ref": "#/definitions/DatastoreCredentials"
                }
            ],
            "properties": {
                "secrets": {
                    "description": "[Required] Keytab secrets.",
                    "$ref": "#/definitions/KerberosKeytabSecrets",
                    "x-ms-mutability": [
                        "create",
                        "update"
                    ],
                    "x-ms-secret": true
                }
            },
            "x-ms-discriminator-value": "KerberosKeytab",
            "additionalProperties": false
        },
        "KerberosKeytabSecrets": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DatastoreSecrets"
                }
            ],
            "properties": {
                "kerberosKeytab": {
                    "description": "Kerberos keytab secret.",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "KerberosKeytab",
            "additionalProperties": false
        },
        "KerberosPasswordCredentials": {
            "required": [
                "secrets"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/KerberosCredentials"
                },
                {
                    "$ref": "#/definitions/DatastoreCredentials"
                }
            ],
            "properties": {
                "secrets": {
                    "description": "[Required] Kerberos password secrets.",
                    "$ref": "#/definitions/KerberosPasswordSecrets",
                    "x-ms-mutability": [
                        "create",
                        "update"
                    ],
                    "x-ms-secret": true
                }
            },
            "x-ms-discriminator-value": "KerberosPassword",
            "additionalProperties": false
        },
        "KerberosPasswordSecrets": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DatastoreSecrets"
                }
            ],
            "properties": {
                "kerberosPassword": {
                    "description": "Kerberos password secret.",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "KerberosPassword",
            "additionalProperties": false
        },
        "KeyType": {
            "enum": [
                "Primary",
                "Secondary"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "KeyType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Primary"
                    },
                    {
                        "value": "Secondary"
                    }
                ]
            },
            "additionalProperties": false
        },
        "KubernetesOnlineDeployment": {
            "description": "Properties specific to a KubernetesOnlineDeployment.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/OnlineDeployment"
                }
            ],
            "properties": {
                "containerResourceRequirements": {
                    "description": "The resource requirements for the container (cpu and memory).",
                    "$ref": "#/definitions/ContainerResourceRequirements",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "Kubernetes",
            "additionalProperties": false
        },
        "LabelCategory": {
            "description": "Label category definition",
            "type": "object",
            "properties": {
                "classes": {
                    "description": "Dictionary of label classes in this category.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/LabelClass",
                        "x-nullable": true
                    },
                    "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                    ],
                    "x-nullable": true
                },
                "displayName": {
                    "description": "Display name of the label category.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "multiSelect": {
                    "description": "Indicates whether it is allowed to select multiple classes in this category.",
                    "default": "Disabled",
                    "$ref": "#/definitions/MultiSelect",
                    "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                    ]
                }
            },
            "additionalProperties": false
        },
        "LabelClass": {
            "description": "Label class definition",
            "type": "object",
            "properties": {
                "displayName": {
                    "description": "Display name of the label class.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "subclasses": {
                    "description": "Dictionary of subclasses of the label class.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/LabelClass",
                        "x-nullable": true
                    },
                    "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                    ],
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "LabelingDataConfiguration": {
            "description": "Labeling data configuration definition",
            "type": "object",
            "properties": {
                "dataId": {
                    "description": "Resource Id of the data asset to perform labeling.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "incrementalDataRefresh": {
                    "description": "Indicates whether to enable incremental data refresh.",
                    "default": "Disabled",
                    "$ref": "#/definitions/IncrementalDataRefresh",
                    "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                    ]
                }
            },
            "additionalProperties": false
        },
        "LabelingJob": {
            "description": "Labeling job definition",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/JobBase"
                }
            ],
            "properties": {
                "createdDateTime": {
                    "format": "date-time",
                    "description": "Created time of the job in UTC timezone.",
                    "type": "string",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "dataConfiguration": {
                    "description": "Configuration of data used in the job.",
                    "$ref": "#/definitions/LabelingDataConfiguration",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "jobInstructions": {
                    "description": "Labeling instructions of the job.",
                    "$ref": "#/definitions/LabelingJobInstructions",
                    "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                    ],
                    "x-nullable": true
                },
                "labelCategories": {
                    "description": "Label categories of the job.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/LabelCategory",
                        "x-nullable": true
                    },
                    "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                    ],
                    "x-nullable": true
                },
                "labelingJobMediaProperties": {
                    "description": "Media type specific properties in the job.",
                    "$ref": "#/definitions/LabelingJobMediaProperties",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "mlAssistConfiguration": {
                    "description": "Configuration of MLAssist feature in the job.",
                    "default": "{\"MLAssist\":\"Disabled\"}",
                    "$ref": "#/definitions/MLAssistConfiguration",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "progressMetrics": {
                    "description": "Progress metrics of the job.",
                    "$ref": "#/definitions/ProgressMetrics",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "projectId": {
                    "format": "uuid",
                    "description": "Internal id of the job(Previously called project).",
                    "type": "string",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ]
                },
                "provisioningState": {
                    "description": "Specifies the labeling job provisioning state.",
                    "$ref": "#/definitions/JobProvisioningState",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ]
                },
                "statusMessages": {
                    "description": "Status messages of the job.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StatusMessage"
                    },
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true,
                    "x-ms-identifiers": []
                }
            },
            "x-ms-discriminator-value": "Labeling",
            "x-ms-client-name": "LabelingJobProperties",
            "additionalProperties": false
        },
        "LabelingJobImageProperties": {
            "description": "Properties of a labeling job for image data",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/LabelingJobMediaProperties"
                }
            ],
            "properties": {
                "annotationType": {
                    "description": "Annotation type of image labeling job.",
                    "default": "Classification",
                    "$ref": "#/definitions/ImageAnnotationType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "Image",
            "additionalProperties": false
        },
        "LabelingJobInstructions": {
            "description": "Instructions for labeling job",
            "type": "object",
            "properties": {
                "uri": {
                    "description": "The link to a page with detailed labeling instructions for labelers.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                    ],
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "LabelingJobMediaProperties": {
            "description": "Properties of a labeling job",
            "required": [
                "mediaType"
            ],
            "type": "object",
            "properties": {
                "mediaType": {
                    "description": "[Required] Media type of the job.",
                    "$ref": "#/definitions/MediaType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "discriminator": "mediaType"
        },
        "LabelingJobResource": {
            "description": "Azure Resource Manager resource envelope.",
            "required": [
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
                }
            ],
            "properties": {
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/LabelingJob"
                }
            },
            "x-ms-client-name": "LabelingJob",
            "additionalProperties": false
        },
        "LabelingJobTextProperties": {
            "description": "Properties of a labeling job for text data",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/LabelingJobMediaProperties"
                }
            ],
            "properties": {
                "annotationType": {
                    "description": "Annotation type of text labeling job.",
                    "default": "Classification",
                    "$ref": "#/definitions/TextAnnotationType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "Text",
            "additionalProperties": false
        },
        "LakeHouseArtifact": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/OneLakeArtifact"
                }
            ],
            "x-ms-discriminator-value": "LakeHouse",
            "additionalProperties": false
        },
        "ListViewType": {
            "enum": [
                "ActiveOnly",
                "ArchivedOnly",
                "All"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "ListViewType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "ActiveOnly"
                    },
                    {
                        "value": "ArchivedOnly"
                    },
                    {
                        "value": "All"
                    }
                ]
            },
            "additionalProperties": false
        },
        "LiteralJobInput": {
            "description": "Literal input type.",
            "required": [
                "value"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/JobInput"
                }
            ],
            "properties": {
                "value": {
                    "description": "[Required] Literal value for the input.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string"
                }
            },
            "x-ms-discriminator-value": "literal",
            "additionalProperties": false
        },
        "MLAssistConfiguration": {
            "description": "Labeling MLAssist configuration definition",
            "required": [
                "mlAssist"
            ],
            "type": "object",
            "properties": {
                "mlAssist": {
                    "description": "[Required] Indicates whether MLAssist feature is enabled.",
                    "$ref": "#/definitions/MLAssistConfigurationType",
                    "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                    ]
                }
            },
            "discriminator": "mlAssist"
        },
        "MLAssistConfigurationDisabled": {
            "description": "Labeling MLAssist configuration definition when MLAssist is disabled",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/MLAssistConfiguration"
                }
            ],
            "x-ms-discriminator-value": "Disabled",
            "additionalProperties": false
        },
        "MLAssistConfigurationEnabled": {
            "description": "Labeling MLAssist configuration definition when MLAssist is enabled",
            "required": [
                "inferencingComputeBinding",
                "trainingComputeBinding"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/MLAssistConfiguration"
                }
            ],
            "properties": {
                "inferencingComputeBinding": {
                    "description": "[Required] AML compute binding used in inferencing.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                    ]
                },
                "trainingComputeBinding": {
                    "description": "[Required] AML compute binding used in training.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                    ]
                }
            },
            "x-ms-discriminator-value": "Enabled",
            "additionalProperties": false
        },
        "MLAssistConfigurationType": {
            "enum": [
                "Enabled",
                "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "MLAssistConfigurationType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Enabled"
                    },
                    {
                        "value": "Disabled"
                    }
                ]
            },
            "additionalProperties": false
        },
        "MLFlowModelJobInput": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AssetJobInput"
                },
                {
                    "$ref": "#/definitions/JobInput"
                }
            ],
            "x-ms-discriminator-value": "mlflow_model",
            "additionalProperties": false
        },
        "MLFlowModelJobOutput": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AssetJobOutput"
                },
                {
                    "$ref": "#/definitions/JobOutput"
                }
            ],
            "x-ms-discriminator-value": "mlflow_model",
            "additionalProperties": false
        },
        "MLTableData": {
            "description": "MLTable data definition",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DataVersionBase"
                }
            ],
            "properties": {
                "referencedUris": {
                    "description": "Uris referenced in the MLTable definition (required for lineage)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "mltable",
            "additionalProperties": false
        },
        "MLTableJobInput": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AssetJobInput"
                },
                {
                    "$ref": "#/definitions/JobInput"
                }
            ],
            "x-ms-discriminator-value": "mltable",
            "additionalProperties": false
        },
        "MLTableJobOutput": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AssetJobOutput"
                },
                {
                    "$ref": "#/definitions/JobOutput"
                }
            ],
            "x-ms-discriminator-value": "mltable",
            "additionalProperties": false
        },
        "ManagedComputeIdentity": {
            "description": "Managed compute identity definition.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/MonitorComputeIdentityBase"
                }
            ],
            "properties": {
                "identity": {
                    "description": "Managed service identity (system assigned and/or user assigned identities)",
                    "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "ManagedIdentity",
            "additionalProperties": false
        },
        "ManagedIdentity": {
            "description": "Managed identity configuration.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/IdentityConfiguration"
                }
            ],
            "properties": {
                "clientId": {
                    "format": "uuid",
                    "description": "Specifies a user-assigned identity by client ID. For system-assigned, do not set this field.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "objectId": {
                    "format": "uuid",
                    "description": "Specifies a user-assigned identity by object ID. For system-assigned, do not set this field.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "resourceId": {
                    "description": "Specifies a user-assigned identity by ARM resource ID. For system-assigned, do not set this field.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "Managed",
            "additionalProperties": false
        },
        "ManagedOnlineDeployment": {
            "description": "Properties specific to a ManagedOnlineDeployment.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/OnlineDeployment"
                }
            ],
            "x-ms-discriminator-value": "Managed",
            "additionalProperties": false
        },
        "MediaType": {
            "description": "Media type of data asset.",
            "enum": [
                "Image",
                "Text"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "MediaType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Image"
                    },
                    {
                        "value": "Text"
                    }
                ]
            },
            "additionalProperties": false
        },
        "MedianStoppingPolicy": {
            "description": "Defines an early termination policy based on running averages of the primary metric of all runs",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/EarlyTerminationPolicy"
                }
            ],
            "x-ms-discriminator-value": "MedianStopping",
            "additionalProperties": false
        },
        "ModelConfiguration": {
            "description": "Model configuration options.",
            "type": "object",
            "properties": {
                "mode": {
                    "description": "Input delivery mode for the model.",
                    "default": "Download",
                    "$ref": "#/definitions/PackageInputDeliveryMode"
                },
                "mountPath": {
                    "description": "Relative mounting path of the model in the target image.",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "ModelContainer": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AssetContainer"
                }
            ],
            "properties": {
                "provisioningState": {
                    "description": "Provisioning state for the model container.",
                    "$ref": "#/definitions/AssetProvisioningState",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ]
                }
            },
            "x-ms-client-name": "ModelContainerProperties",
            "additionalProperties": false
        },
        "ModelContainerResource": {
            "description": "Azure Resource Manager resource envelope.",
            "required": [
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
                }
            ],
            "properties": {
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/ModelContainer"
                }
            },
            "x-ms-client-name": "ModelContainer",
            "additionalProperties": false
        },
        "ModelContainerResourceArmPaginatedResult": {
            "description": "A paginated list of ModelContainer entities.",
            "type": "object",
            "properties": {
                "nextLink": {
                    "description": "The link to the next page of ModelContainer objects. If null, there are no additional pages.",
                    "type": "string"
                },
                "value": {
                    "description": "An array of objects of type ModelContainer.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ModelContainerResource"
                    }
                }
            },
            "additionalProperties": false
        },
        "ModelPackageInput": {
            "description": "Model package input options.",
            "required": [
                "inputType",
                "path"
            ],
            "type": "object",
            "properties": {
                "inputType": {
                    "description": "[Required] Type of the input included in the target image.",
                    "$ref": "#/definitions/PackageInputType"
                },
                "mode": {
                    "description": "Input delivery mode of the input.",
                    "default": "Copy",
                    "$ref": "#/definitions/PackageInputDeliveryMode"
                },
                "mountPath": {
                    "description": "Relative mount path of the input in the target image.",
                    "type": "string",
                    "x-nullable": true
                },
                "path": {
                    "description": "[Required] Location of the input.",
                    "$ref": "#/definitions/PackageInputPathBase"
                }
            },
            "additionalProperties": false
        },
        "ModelPerformanceMetricThresholdBase": {
            "required": [
                "modelType"
            ],
            "type": "object",
            "properties": {
                "modelType": {
                    "description": "[Required] Specifies the data type of the metric threshold.",
                    "$ref": "#/definitions/MonitoringModelType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "threshold": {
                    "description": "The threshold value. If null, a default value will be set depending on the selected metric.",
                    "$ref": "#/definitions/MonitoringThreshold",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                }
            },
            "discriminator": "modelType"
        },
        "ModelPerformanceSignal": {
            "description": "Model performance signal definition.",
            "required": [
                "metricThreshold",
                "productionData",
                "referenceData"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/MonitoringSignalBase"
                }
            ],
            "properties": {
                "dataSegment": {
                    "description": "The data segment.",
                    "$ref": "#/definitions/MonitoringDataSegment",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "metricThreshold": {
                    "description": "[Required] A list of metrics to calculate and their associated thresholds.",
                    "$ref": "#/definitions/ModelPerformanceMetricThresholdBase",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "productionData": {
                    "description": "[Required] The data produced by the production service which drift will be calculated for.",
                    "type": "array",
                    "items": {
                        "description": "Monitoring input data base definition.",
                        "$ref": "#/definitions/MonitoringInputDataBase"
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-ms-identifiers": []
                },
                "referenceData": {
                    "description": "[Required] The data to calculate drift against.",
                    "$ref": "#/definitions/MonitoringInputDataBase",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "ModelPerformance",
            "additionalProperties": false
        },
        "ModelProfile": {
            "required": [
                "modelUri"
            ],
            "type": "object",
            "properties": {
                "modelUri": {
                    "description": "[Required] The model to create a serverless endpoint of",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "ModelVersion": {
            "description": "Model asset version details.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AssetBase"
                }
            ],
            "properties": {
                "flavors": {
                    "description": "Mapping of model flavors to their properties.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/FlavorData",
                        "x-nullable": true
                    },
                    "x-nullable": true
                },
                "intellectualProperty": {
                    "description": "Intellectual Property details. Used if model is an Intellectual Property.",
                    "$ref": "#/definitions/IntellectualProperty",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "jobName": {
                    "description": "Name of the training job which produced this model",
                    "type": "string",
                    "x-nullable": true
                },
                "modelType": {
                    "description": "The storage format for this entity. Used for NCD.",
                    "type": "string",
                    "x-nullable": true
                },
                "modelUri": {
                    "description": "The URI path to the model contents.",
                    "type": "string",
                    "x-nullable": true
                },
                "provisioningState": {
                    "description": "Provisioning state for the model version.",
                    "$ref": "#/definitions/AssetProvisioningState",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ]
                },
                "stage": {
                    "description": "Stage in the model lifecycle assigned to this model",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-ms-client-name": "ModelVersionProperties",
            "additionalProperties": false
        },
        "ModelVersionResource": {
            "description": "Azure Resource Manager resource envelope.",
            "required": [
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
                }
            ],
            "properties": {
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/ModelVersion"
                }
            },
            "x-ms-client-name": "ModelVersion",
            "additionalProperties": false
        },
        "ModelVersionResourceArmPaginatedResult": {
            "description": "A paginated list of ModelVersion entities.",
            "type": "object",
            "properties": {
                "nextLink": {
                    "description": "The link to the next page of ModelVersion objects. If null, there are no additional pages.",
                    "type": "string"
                },
                "value": {
                    "description": "An array of objects of type ModelVersion.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ModelVersionResource"
                    }
                }
            },
            "additionalProperties": false
        },
        "MonitorComputeConfigurationBase": {
            "description": "Monitor compute configuration base definition.",
            "required": [
                "computeType"
            ],
            "type": "object",
            "properties": {
                "computeType": {
                    "description": "[Required] Specifies the type of signal to monitor.",
                    "$ref": "#/definitions/MonitorComputeType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "discriminator": "computeType"
        },
        "MonitorComputeIdentityBase": {
            "description": "Monitor compute identity base definition.",
            "required": [
                "computeIdentityType"
            ],
            "type": "object",
            "properties": {
                "computeIdentityType": {
                    "description": "[Required] Monitor compute identity type enum.",
                    "$ref": "#/definitions/MonitorComputeIdentityType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "discriminator": "computeIdentityType"
        },
        "MonitorServerlessSparkCompute": {
            "description": "Monitor serverless spark compute definition.",
            "required": [
                "computeIdentity",
                "instanceType",
                "runtimeVersion"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/MonitorComputeConfigurationBase"
                }
            ],
            "properties": {
                "computeIdentity": {
                    "description": "[Required] The identity scheme leveraged to by the spark jobs running on serverless Spark.",
                    "$ref": "#/definitions/MonitorComputeIdentityBase",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "instanceType": {
                    "description": "[Required] The instance type running the Spark job.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "runtimeVersion": {
                    "description": "[Required] The Spark runtime version.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "ServerlessSpark",
            "additionalProperties": false
        },
        "MonitoringAlertNotificationSettingsBase": {
            "required": [
                "alertNotificationType"
            ],
            "type": "object",
            "properties": {
                "alertNotificationType": {
                    "description": "[Required] Specifies the type of signal to monitor.",
                    "$ref": "#/definitions/MonitoringAlertNotificationType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "discriminator": "alertNotificationType"
        },
        "MonitoringFeatureFilterBase": {
            "required": [
                "filterType"
            ],
            "type": "object",
            "properties": {
                "filterType": {
                    "description": "[Required] Specifies the feature filter to leverage when selecting features to calculate metrics over.",
                    "$ref": "#/definitions/MonitoringFeatureFilterType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "discriminator": "filterType"
        },
        "MonitoringInputDataBase": {
            "description": "Monitoring input data base definition.",
            "required": [
                "inputDataType",
                "jobInputType",
                "uri"
            ],
            "type": "object",
            "properties": {
                "columns": {
                    "description": "Mapping of column names to special uses.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "dataContext": {
                    "description": "The context metadata of the data source.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "inputDataType": {
                    "description": "[Required] Specifies the type of signal to monitor.",
                    "$ref": "#/definitions/MonitoringInputDataType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "jobInputType": {
                    "description": "[Required] Specifies the type of job.",
                    "$ref": "#/definitions/JobInputType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "uri": {
                    "description": "[Required] Input Asset URI.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "discriminator": "inputDataType"
        },
        "MonitoringSignalBase": {
            "required": [
                "signalType"
            ],
            "type": "object",
            "properties": {
                "mode": {
                    "description": "The current notification mode for this signal.",
                    "default": "Disabled",
                    "$ref": "#/definitions/MonitoringNotificationMode",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "properties": {
                    "description": "Property dictionary. Properties can be added, but not removed or altered.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "x-nullable": true
                },
                "signalType": {
                    "description": "[Required] Specifies the type of signal to monitor.",
                    "$ref": "#/definitions/MonitoringSignalType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "discriminator": "signalType"
        },
        "Mpi": {
            "description": "MPI distribution configuration.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DistributionConfiguration"
                }
            ],
            "properties": {
                "processCountPerInstance": {
                    "format": "int32",
                    "description": "Number of processes per MPI node.",
                    "type": "integer",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "Mpi",
            "additionalProperties": false
        },
        "MultiSelect": {
            "description": "Whether multiSelect is enabled",
            "enum": [
                "Enabled",
                "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "MultiSelect",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Enabled"
                    },
                    {
                        "value": "Disabled"
                    }
                ]
            },
            "additionalProperties": false
        },
        "NCrossValidations": {
            "description": "N-Cross validations value.",
            "required": [
                "mode"
            ],
            "type": "object",
            "properties": {
                "mode": {
                    "description": "[Required] Mode for determining N-Cross validations.",
                    "$ref": "#/definitions/NCrossValidationsMode",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "discriminator": "mode"
        },
        "NlpVertical": {
            "description": "Abstract class for NLP related AutoML tasks.\r\nNLP - Natural Language Processing.",
            "type": "object",
            "properties": {
                "featurizationSettings": {
                    "description": "Featurization inputs needed for AutoML job.",
                    "$ref": "#/definitions/NlpVerticalFeaturizationSettings",
                    "x-nullable": true
                },
                "fixedParameters": {
                    "description": "Model/training parameters that will remain constant throughout training.",
                    "$ref": "#/definitions/NlpFixedParameters",
                    "x-nullable": true
                },
                "limitSettings": {
                    "description": "Execution constraints for AutoMLJob.",
                    "$ref": "#/definitions/NlpVerticalLimitSettings",
                    "x-nullable": true
                },
                "searchSpace": {
                    "description": "Search space for sampling different combinations of models and their hyperparameters.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NlpParameterSubspace"
                    },
                    "x-nullable": true,
                    "x-ms-identifiers": []
                },
                "sweepSettings": {
                    "description": "Settings for model sweeping and hyperparameter tuning.",
                    "$ref": "#/definitions/NlpSweepSettings",
                    "x-nullable": true
                },
                "validationData": {
                    "description": "Validation data inputs.",
                    "$ref": "#/definitions/MLTableJobInput",
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "Nodes": {
            "description": "Abstract Nodes definition",
            "required": [
                "nodesValueType"
            ],
            "type": "object",
            "properties": {
                "nodesValueType": {
                    "description": "[Required] Type of the Nodes value",
                    "$ref": "#/definitions/NodesValueType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "discriminator": "nodesValueType"
        },
        "NoneDatastoreCredentials": {
            "description": "Empty/none datastore credentials.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DatastoreCredentials"
                }
            ],
            "x-ms-discriminator-value": "None",
            "additionalProperties": false
        },
        "NumericalDataDriftMetricThreshold": {
            "required": [
                "metric"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DataDriftMetricThresholdBase"
                }
            ],
            "properties": {
                "metric": {
                    "description": "[Required] The numerical data drift metric to calculate.",
                    "$ref": "#/definitions/NumericalDataDriftMetric"
                }
            },
            "x-ms-discriminator-value": "Numerical",
            "additionalProperties": false
        },
        "NumericalDataQualityMetricThreshold": {
            "required": [
                "metric"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DataQualityMetricThresholdBase"
                }
            ],
            "properties": {
                "metric": {
                    "description": "[Required] The numerical data quality metric to calculate.",
                    "$ref": "#/definitions/NumericalDataQualityMetric",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "Numerical",
            "additionalProperties": false
        },
        "NumericalPredictionDriftMetricThreshold": {
            "required": [
                "metric"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/PredictionDriftMetricThresholdBase"
                }
            ],
            "properties": {
                "metric": {
                    "description": "[Required] The numerical prediction drift metric to calculate.",
                    "$ref": "#/definitions/NumericalPredictionDriftMetric",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "Numerical",
            "additionalProperties": false
        },
        "OneLakeArtifact": {
            "description": "OneLake artifact (data source) configuration.",
            "required": [
                "artifactName",
                "artifactType"
            ],
            "type": "object",
            "properties": {
                "artifactName": {
                    "description": "[Required] OneLake artifact name",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "artifactType": {
                    "description": "[Required] OneLake artifact type",
                    "$ref": "#/definitions/OneLakeArtifactType"
                }
            },
            "discriminator": "artifactType"
        },
        "OneLakeArtifactType": {
            "description": "Enum to determine OneLake artifact type.",
            "enum": [
                "LakeHouse"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "OneLakeArtifactType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "LakeHouse"
                    }
                ]
            },
            "additionalProperties": false
        },
        "OneLakeDatastore": {
            "description": "OneLake (Trident) datastore configuration.",
            "required": [
                "artifact",
                "oneLakeWorkspaceName"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/Datastore"
                }
            ],
            "properties": {
                "artifact": {
                    "description": "[Required] OneLake artifact backing the datastore.",
                    "$ref": "#/definitions/OneLakeArtifact",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "endpoint": {
                    "description": "OneLake endpoint to use for the datastore.",
                    "type": "string",
                    "example": "data.microsoft.com",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "oneLakeWorkspaceName": {
                    "description": "[Required] OneLake workspace name.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "serviceDataAccessAuthIdentity": {
                    "description": "Indicates which identity to use to authenticate service data access to customer's storage.",
                    "default": "None",
                    "$ref": "#/definitions/ServiceDataAccessAuthIdentity",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "OneLake",
            "additionalProperties": false
        },
        "OnlineDeployment": {
            "required": [
                "endpointComputeType"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/EndpointDeploymentPropertiesBase"
                }
            ],
            "properties": {
                "appInsightsEnabled": {
                    "description": "If true, enables Application Insights logging.",
                    "default": false,
                    "type": "boolean"
                },
                "dataCollector": {
                    "description": "The mdc configuration, we disable mdc when it's null.",
                    "$ref": "#/definitions/DataCollector",
                    "x-nullable": true
                },
                "egressPublicNetworkAccess": {
                    "description": "If Enabled, allow egress public network access. If Disabled, this will create secure egress. Default: Enabled.",
                    "default": "Enabled",
                    "$ref": "#/definitions/EgressPublicNetworkAccessType"
                },
                "endpointComputeType": {
                    "description": "[Required] The compute type of the endpoint.",
                    "$ref": "#/definitions/EndpointComputeType"
                },
                "instanceType": {
                    "description": "Compute instance type.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "livenessProbe": {
                    "description": "Liveness probe monitors the health of the container regularly.",
                    "$ref": "#/definitions/ProbeSettings",
                    "x-nullable": true
                },
                "model": {
                    "description": "The URI path to the model.",
                    "type": "string",
                    "x-nullable": true
                },
                "modelMountPath": {
                    "description": "The path to mount the model in custom container.",
                    "type": "string",
                    "x-nullable": true
                },
                "provisioningState": {
                    "description": "Provisioning state for the endpoint deployment.",
                    "$ref": "#/definitions/DeploymentProvisioningState",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ]
                },
                "readinessProbe": {
                    "description": "Readiness probe validates if the container is ready to serve traffic. The properties and defaults are the same as liveness probe.",
                    "$ref": "#/definitions/ProbeSettings",
                    "x-nullable": true
                },
                "requestSettings": {
                    "description": "Request settings for the deployment.",
                    "$ref": "#/definitions/OnlineRequestSettings",
                    "x-nullable": true
                },
                "scaleSettings": {
                    "description": "Scale settings for the deployment.\r\nIf it is null or not provided,\r\nit defaults to TargetUtilizationScaleSettings for KubernetesOnlineDeployment\r\nand to DefaultScaleSettings for ManagedOnlineDeployment.",
                    "$ref": "#/definitions/OnlineScaleSettings",
                    "x-nullable": true
                }
            },
            "discriminator": "endpointComputeType",
            "x-ms-client-name": "OnlineDeploymentProperties"
        },
        "OnlineDeploymentTrackedResource": {
            "required": [
                "location",
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
                }
            ],
            "properties": {
                "identity": {
                    "description": "Managed service identity (system assigned and/or user assigned identities)",
                    "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
                },
                "kind": {
                    "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
                    "type": "string"
                },
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/OnlineDeployment"
                },
                "sku": {
                    "description": "Sku details required for ARM contract for Autoscaling.",
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
                }
            },
            "x-ms-client-name": "OnlineDeployment",
            "additionalProperties": false
        },
        "OnlineEndpoint": {
            "description": "Online endpoint configuration",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/EndpointPropertiesBase"
                }
            ],
            "properties": {
                "compute": {
                    "description": "ARM resource ID of the compute if it exists.\r\noptional",
                    "type": "string",
                    "x-nullable": true
                },
                "mirrorTraffic": {
                    "description": "Percentage of traffic to be mirrored to each deployment without using returned scoring. Traffic values need to sum to utmost 50.",
                    "type": "object",
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "x-nullable": true
                },
                "provisioningState": {
                    "description": "Provisioning state for the endpoint.",
                    "$ref": "#/definitions/EndpointProvisioningState",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ]
                },
                "publicNetworkAccess": {
                    "description": "Set to \"Enabled\" for endpoints that should allow public access when Private Link is enabled.",
                    "default": "Enabled",
                    "$ref": "#/definitions/PublicNetworkAccessType"
                },
                "traffic": {
                    "description": "Percentage of traffic from endpoint to divert to each deployment. Traffic values need to sum to 100.",
                    "type": "object",
                    "additionalProperties": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "x-nullable": true
                }
            },
            "x-ms-client-name": "OnlineEndpointProperties",
            "additionalProperties": false
        },
        "OnlineEndpointTrackedResource": {
            "required": [
                "location",
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
                }
            ],
            "properties": {
                "identity": {
                    "description": "Managed service identity (system assigned and/or user assigned identities)",
                    "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
                },
                "kind": {
                    "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
                    "type": "string"
                },
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/OnlineEndpoint"
                },
                "sku": {
                    "description": "Sku details required for ARM contract for Autoscaling.",
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
                }
            },
            "x-ms-client-name": "OnlineEndpoint",
            "additionalProperties": false
        },
        "OnlineInferenceConfiguration": {
            "description": "Online inference configuration options.",
            "type": "object",
            "properties": {
                "configurations": {
                    "description": "Additional configurations",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "x-nullable": true
                },
                "entryScript": {
                    "description": "Entry script or command to invoke.",
                    "type": "string",
                    "x-nullable": true
                },
                "livenessRoute": {
                    "description": "The route to check the liveness of the inference server container.",
                    "$ref": "#/definitions/Route",
                    "x-nullable": true
                },
                "readinessRoute": {
                    "description": "The route to check the readiness of the inference server container.",
                    "$ref": "#/definitions/Route",
                    "x-nullable": true
                },
                "scoringRoute": {
                    "description": "The port to send the scoring requests to, within the inference server container.",
                    "$ref": "#/definitions/Route",
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "OnlineRequestSettings": {
            "description": "Online deployment scoring requests configuration.",
            "type": "object",
            "properties": {
                "maxConcurrentRequestsPerInstance": {
                    "format": "int32",
                    "description": "The number of maximum concurrent requests per node allowed per deployment. Defaults to 1.",
                    "default": 1,
                    "type": "integer"
                },
                "maxQueueWait": {
                    "format": "duration",
                    "description": "The maximum amount of time a request will stay in the queue in ISO 8601 format.\r\nDefaults to 500ms.",
                    "default": "PT0.5S",
                    "type": "string"
                },
                "requestTimeout": {
                    "format": "duration",
                    "description": "The scoring timeout in ISO 8601 format.\r\nDefaults to 5000ms.",
                    "default": "PT5S",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "OnlineScaleSettings": {
            "description": "Online deployment scaling configuration.",
            "required": [
                "scaleType"
            ],
            "type": "object",
            "properties": {
                "scaleType": {
                    "description": "[Required] Type of deployment scaling algorithm",
                    "$ref": "#/definitions/ScaleType"
                }
            },
            "discriminator": "scaleType"
        },
        "OutputPathAssetReference": {
            "description": "Reference to an asset via its path in a job output.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AssetReferenceBase"
                }
            ],
            "properties": {
                "jobId": {
                    "description": "ARM resource ID of the job.",
                    "type": "string",
                    "x-nullable": true
                },
                "path": {
                    "description": "The path of the file/directory in the job output.",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "OutputPath",
            "additionalProperties": false
        },
        "PackageBuildState": {
            "description": "Package build state returned in package response.",
            "enum": [
                "NotStarted",
                "Running",
                "Succeeded",
                "Failed"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "PackageBuildState",
                "modelAsString": true,
                "values": [
                    {
                        "value": "NotStarted"
                    },
                    {
                        "value": "Running"
                    },
                    {
                        "value": "Succeeded"
                    },
                    {
                        "value": "Failed"
                    }
                ]
            },
            "additionalProperties": false
        },
        "PackageInputDeliveryMode": {
            "description": "Mounting type of the model or the inputs",
            "enum": [
                "Copy",
                "Download"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "PackageInputDeliveryMode",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Copy"
                    },
                    {
                        "value": "Download"
                    }
                ]
            },
            "additionalProperties": false
        },
        "PackageInputPathBase": {
            "required": [
                "inputPathType"
            ],
            "type": "object",
            "properties": {
                "inputPathType": {
                    "description": "[Required] Input path type for package inputs.",
                    "$ref": "#/definitions/InputPathType"
                }
            },
            "discriminator": "inputPathType"
        },
        "PackageInputPathId": {
            "description": "Package input path specified with a resource id.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/PackageInputPathBase"
                }
            ],
            "properties": {
                "resourceId": {
                    "description": "Input resource id.",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "PathId",
            "additionalProperties": false
        },
        "PackageInputPathUrl": {
            "description": "Package input path specified as an url.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/PackageInputPathBase"
                }
            ],
            "properties": {
                "url": {
                    "description": "Input path url.",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "Url",
            "additionalProperties": false
        },
        "PackageInputPathVersion": {
            "description": "Package input path specified with name and version.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/PackageInputPathBase"
                }
            ],
            "properties": {
                "resourceName": {
                    "description": "Input resource name.",
                    "type": "string",
                    "x-nullable": true
                },
                "resourceVersion": {
                    "description": "Input resource version.",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "PathVersion",
            "additionalProperties": false
        },
        "PackageInputType": {
            "description": "Type of the inputs.",
            "enum": [
                "UriFile",
                "UriFolder"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "PackageInputType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "UriFile"
                    },
                    {
                        "value": "UriFolder"
                    }
                ]
            },
            "additionalProperties": false
        },
        "PackageRequest": {
            "description": "Model package operation request properties.",
            "required": [
                "inferencingServer",
                "targetEnvironmentId"
            ],
            "type": "object",
            "properties": {
                "baseEnvironmentSource": {
                    "description": "Base environment to start with.",
                    "$ref": "#/definitions/BaseEnvironmentSource",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "environmentVariables": {
                    "description": "Collection of environment variables.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "inferencingServer": {
                    "description": "[Required] Inferencing server configurations.",
                    "$ref": "#/definitions/InferencingServer",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "inputs": {
                    "description": "Collection of inputs.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ModelPackageInput"
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true,
                    "x-ms-identifiers": []
                },
                "modelConfiguration": {
                    "description": "Model configuration including the mount mode.",
                    "$ref": "#/definitions/ModelConfiguration",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "properties": {
                    "description": "Property dictionary. Properties can be added, removed, and updated.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "tags": {
                    "description": "Tag dictionary. Tags can be added, removed, and updated.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "targetEnvironmentId": {
                    "description": "[Required] Arm ID of the target environment to be created by package operation.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "additionalProperties": false
        },
        "PackageResponse": {
            "description": "Package response returned after async package operation completes successfully.",
            "type": "object",
            "properties": {
                "baseEnvironmentSource": {
                    "description": "Base environment to start with.",
                    "$ref": "#/definitions/BaseEnvironmentSource",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "buildId": {
                    "description": "Build id of the image build operation.",
                    "type": "string",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "buildState": {
                    "description": "Build state of the image build operation.",
                    "$ref": "#/definitions/PackageBuildState",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ]
                },
                "environmentVariables": {
                    "description": "Collection of environment variables.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "inferencingServer": {
                    "description": "Inferencing server configurations.",
                    "$ref": "#/definitions/InferencingServer",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "inputs": {
                    "description": "Collection of inputs.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ModelPackageInput"
                    },
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true,
                    "x-ms-identifiers": []
                },
                "logUrl": {
                    "description": "Log url of the image build operation.",
                    "type": "string",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "modelConfiguration": {
                    "description": "Model configuration including the mount mode.",
                    "$ref": "#/definitions/ModelConfiguration",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "properties": {
                    "description": "Property dictionary. Tags can be added, removed, and updated.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "tags": {
                    "description": "Tag dictionary. Tags can be added, removed, and updated.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "targetEnvironmentId": {
                    "description": "Asset ID of the target environment created by package operation.",
                    "type": "string",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "PartialBatchDeployment": {
            "description": "Mutable batch inference settings per deployment.",
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description of the endpoint deployment.",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "PartialBatchDeploymentPartialMinimalTrackedResourceWithProperties": {
            "description": "Strictly used in update requests.",
            "type": "object",
            "properties": {
                "properties": {
                    "description": "Additional attributes of the entity.",
                    "$ref": "#/definitions/PartialBatchDeployment"
                },
                "tags": {
                    "description": "Resource tags.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "x-nullable": true
                    }
                }
            },
            "additionalProperties": false
        },
        "PartialManagedServiceIdentity": {
            "description": "Managed service identity (system assigned and/or user assigned identities)",
            "type": "object",
            "properties": {
                "type": {
                    "description": "Managed service identity (system assigned and/or user assigned identities)",
                    "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentityType"
                },
                "userAssignedIdentities": {
                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/PartialUserAssignedIdentity"
                    }
                }
            },
            "additionalProperties": false
        },
        "PartialMinimalTrackedResource": {
            "description": "Strictly used in update requests.",
            "type": "object",
            "properties": {
                "tags": {
                    "description": "Resource tags.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "x-nullable": true
                    }
                }
            },
            "additionalProperties": false
        },
        "PartialMinimalTrackedResourceWithIdentity": {
            "description": "Strictly used in update requests.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/PartialMinimalTrackedResource"
                }
            ],
            "properties": {
                "identity": {
                    "description": "Managed service identity (system assigned and/or user assigned identities)",
                    "$ref": "#/definitions/PartialManagedServiceIdentity"
                }
            },
            "additionalProperties": false
        },
        "PartialMinimalTrackedResourceWithSkuAndIdentity": {
            "description": "Strictly used in update requests.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/PartialMinimalTrackedResource"
                }
            ],
            "properties": {
                "identity": {
                    "description": "Managed service identity (system assigned and/or user assigned identities)",
                    "$ref": "#/definitions/PartialManagedServiceIdentity"
                },
                "sku": {
                    "description": "Sku details required for ARM contract for Autoscaling.",
                    "$ref": "#/definitions/PartialSku"
                }
            },
            "additionalProperties": false
        },
        "PartialNotificationSetting": {
            "description": "Mutable configuration for notification.",
            "type": "object",
            "properties": {
                "webhooks": {
                    "description": "Send webhook callback to a service. Key is a user-provided name for the webhook.",
                    "type": "object",
                    "additionalProperties": {
                        "description": "Webhook base",
                        "$ref": "#/definitions/Webhook",
                        "x-nullable": true
                    },
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "PartialSku": {
            "description": "Common SKU definition.",
            "type": "object",
            "properties": {
                "capacity": {
                    "format": "int32",
                    "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
                    "type": "integer"
                },
                "family": {
                    "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the SKU. Ex - P3. It is typically a letter+number code.",
                    "type": "string"
                },
                "size": {
                    "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code.",
                    "type": "string"
                },
                "tier": {
                    "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/SkuTier"
                }
            },
            "additionalProperties": false
        },
        "PartialUserAssignedIdentity": {
            "type": "object",
            "additionalProperties": false
        },
        "PendingUploadCredentialDto": {
            "required": [
                "credentialType"
            ],
            "type": "object",
            "properties": {
                "credentialType": {
                    "description": "[Required] Credential type used to authentication with storage.",
                    "$ref": "#/definitions/PendingUploadCredentialType"
                }
            },
            "discriminator": "credentialType"
        },
        "PendingUploadRequestDto": {
            "type": "object",
            "properties": {
                "pendingUploadId": {
                    "description": "If PendingUploadId = null then random guid will be used.",
                    "type": "string",
                    "x-nullable": true
                },
                "pendingUploadType": {
                    "description": "TemporaryBlobReference is the only supported type",
                    "default": "TemporaryBlobReference",
                    "$ref": "#/definitions/PendingUploadType"
                }
            },
            "additionalProperties": false
        },
        "PendingUploadResponseDto": {
            "type": "object",
            "properties": {
                "blobReferenceForConsumption": {
                    "description": "Container level read, write, list SAS",
                    "$ref": "#/definitions/BlobReferenceForConsumptionDto",
                    "x-nullable": true
                },
                "pendingUploadId": {
                    "description": "ID for this upload request",
                    "type": "string",
                    "x-nullable": true
                },
                "pendingUploadType": {
                    "description": "TemporaryBlobReference is the only supported type",
                    "default": "TemporaryBlobReference",
                    "$ref": "#/definitions/PendingUploadType"
                }
            },
            "additionalProperties": false
        },
        "PipelineJob": {
            "description": "Pipeline Job definition: defines generic to MFE attributes.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/JobBase"
                }
            ],
            "properties": {
                "inputs": {
                    "description": "Inputs for the pipeline job.",
                    "type": "object",
                    "additionalProperties": {
                        "description": "Command job definition.",
                        "$ref": "#/definitions/JobInput",
                        "x-nullable": true
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "jobs": {
                    "description": "Jobs construct the Pipeline Job.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "x-nullable": true
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "outputs": {
                    "description": "Outputs for the pipeline job",
                    "type": "object",
                    "additionalProperties": {
                        "description": "Job output definition container information on where to find job output/logs.",
                        "$ref": "#/definitions/JobOutput",
                        "x-nullable": true
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "settings": {
                    "description": "Pipeline settings, for things like ContinueRunOnStepFailure etc.",
                    "type": "object",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "sourceJobId": {
                    "description": "ARM resource ID of source job.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "Pipeline",
            "additionalProperties": false
        },
        "PredictionDriftMetricThresholdBase": {
            "required": [
                "dataType"
            ],
            "type": "object",
            "properties": {
                "dataType": {
                    "description": "[Required] Specifies the data type of the metric threshold.",
                    "$ref": "#/definitions/MonitoringFeatureDataType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "threshold": {
                    "description": "The threshold value. If null, a default value will be set depending on the selected metric.",
                    "$ref": "#/definitions/MonitoringThreshold",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                }
            },
            "discriminator": "dataType"
        },
        "PredictionDriftMonitoringSignal": {
            "required": [
                "metricThresholds",
                "modelType",
                "productionData",
                "referenceData"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/MonitoringSignalBase"
                }
            ],
            "properties": {
                "metricThresholds": {
                    "description": "[Required] A list of metrics to calculate and their associated thresholds.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PredictionDriftMetricThresholdBase"
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-ms-identifiers": []
                },
                "modelType": {
                    "description": "[Required] The type of the model monitored.",
                    "$ref": "#/definitions/MonitoringModelType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "productionData": {
                    "description": "[Required] The data which drift will be calculated for.",
                    "$ref": "#/definitions/MonitoringInputDataBase",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "referenceData": {
                    "description": "[Required] The data to calculate drift against.",
                    "$ref": "#/definitions/MonitoringInputDataBase",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "PredictionDrift",
            "additionalProperties": false
        },
        "ProbeSettings": {
            "description": "Deployment container liveness/readiness probe configuration.",
            "type": "object",
            "properties": {
                "failureThreshold": {
                    "format": "int32",
                    "description": "The number of failures to allow before returning an unhealthy status.",
                    "default": 30,
                    "type": "integer"
                },
                "initialDelay": {
                    "format": "duration",
                    "description": "The delay before the first probe in ISO 8601 format.",
                    "type": "string",
                    "x-nullable": true
                },
                "period": {
                    "format": "duration",
                    "description": "The length of time between probes in ISO 8601 format.",
                    "default": "PT10S",
                    "type": "string"
                },
                "successThreshold": {
                    "format": "int32",
                    "description": "The number of successful probes before returning a healthy status.",
                    "default": 1,
                    "type": "integer"
                },
                "timeout": {
                    "format": "duration",
                    "description": "The probe timeout in ISO 8601 format.",
                    "default": "PT2S",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "ProgressMetrics": {
            "description": "Progress metrics definition",
            "type": "object",
            "properties": {
                "completedDatapointCount": {
                    "format": "int64",
                    "description": "The completed datapoint count.",
                    "type": "integer",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "incrementalDataLastRefreshDateTime": {
                    "format": "date-time",
                    "description": "The time of last successful incremental data refresh in UTC.",
                    "type": "string",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "skippedDatapointCount": {
                    "format": "int64",
                    "description": "The skipped datapoint count.",
                    "type": "integer",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "totalDatapointCount": {
                    "format": "int64",
                    "description": "The total datapoint count.",
                    "type": "integer",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "ProtectionLevel": {
            "description": "Protection level associated with the Intellectual Property.",
            "enum": [
                "All",
                "None"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "ProtectionLevel",
                "modelAsString": true,
                "values": [
                    {
                        "value": "All",
                        "description": "All means Intellectual Property is fully protected."
                    },
                    {
                        "value": "None",
                        "description": "None means it is not an Intellectual Property."
                    }
                ]
            },
            "additionalProperties": false
        },
        "PublicNetworkAccessType": {
            "description": "Enum to determine whether PublicNetworkAccess is Enabled or Disabled.",
            "enum": [
                "Enabled",
                "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "PublicNetworkAccessType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Enabled"
                    },
                    {
                        "value": "Disabled"
                    }
                ]
            },
            "additionalProperties": false
        },
        "PyTorch": {
            "description": "PyTorch distribution configuration.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DistributionConfiguration"
                }
            ],
            "properties": {
                "processCountPerInstance": {
                    "format": "int32",
                    "description": "Number of processes per node.",
                    "type": "integer",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "PyTorch",
            "additionalProperties": false
        },
        "RandomSamplingAlgorithm": {
            "description": "Defines a Sampling Algorithm that generates values randomly",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/SamplingAlgorithm"
                }
            ],
            "properties": {
                "logbase": {
                    "description": "An optional positive number or e in string format to be used as base for log based random sampling",
                    "type": "string",
                    "x-nullable": true
                },
                "rule": {
                    "description": "The specific type of random algorithm",
                    "default": "Random",
                    "$ref": "#/definitions/RandomSamplingAlgorithmRule"
                },
                "seed": {
                    "format": "int32",
                    "description": "An optional integer to use as the seed for random number generation",
                    "type": "integer",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "Random",
            "additionalProperties": false
        },
        "Ray": {
            "description": "Ray distribution configuration.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DistributionConfiguration"
                }
            ],
            "properties": {
                "address": {
                    "description": "The address of Ray head node.",
                    "type": "string",
                    "x-nullable": true
                },
                "dashboardPort": {
                    "format": "int32",
                    "description": "The port to bind the dashboard server to.",
                    "type": "integer",
                    "x-nullable": true
                },
                "headNodeAdditionalArgs": {
                    "description": "Additional arguments passed to ray start in head node.",
                    "type": "string",
                    "x-nullable": true
                },
                "includeDashboard": {
                    "description": "Provide this argument to start the Ray dashboard GUI.",
                    "type": "boolean",
                    "x-nullable": true
                },
                "port": {
                    "format": "int32",
                    "description": "The port of the head ray process.",
                    "type": "integer",
                    "x-nullable": true
                },
                "workerNodeAdditionalArgs": {
                    "description": "Additional arguments passed to ray start in worker node.",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "Ray",
            "additionalProperties": false
        },
        "RecurrenceTrigger": {
            "required": [
                "frequency",
                "interval"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/TriggerBase"
                }
            ],
            "properties": {
                "frequency": {
                    "description": "[Required] The frequency to trigger schedule.",
                    "$ref": "#/definitions/RecurrenceFrequency"
                },
                "interval": {
                    "format": "int32",
                    "description": "[Required] Specifies schedule interval in conjunction with frequency",
                    "type": "integer"
                },
                "schedule": {
                    "description": "The recurrence schedule.",
                    "$ref": "#/definitions/RecurrenceSchedule",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "Recurrence",
            "additionalProperties": false
        },
        "ReferenceType": {
            "description": "Enum to determine which reference method to use for an asset.",
            "enum": [
                "Id",
                "DataPath",
                "OutputPath"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "ReferenceType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Id"
                    },
                    {
                        "value": "DataPath"
                    },
                    {
                        "value": "OutputPath"
                    }
                ]
            },
            "additionalProperties": false
        },
        "RegenerateEndpointKeysRequest": {
            "required": [
                "keyType"
            ],
            "type": "object",
            "properties": {
                "keyType": {
                    "description": "[Required] Specification for which type of key to generate. Primary or Secondary.",
                    "$ref": "#/definitions/KeyType",
                    "example": "Primary"
                },
                "keyValue": {
                    "description": "The value the key is set to.",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "Regression": {
            "description": "Regression task in AutoML Table vertical.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/TableVertical"
                },
                {
                    "$ref": "#/definitions/AutoMLVertical"
                }
            ],
            "properties": {
                "primaryMetric": {
                    "description": "Primary metric for regression task.",
                    "default": "NormalizedRootMeanSquaredError",
                    "$ref": "#/definitions/RegressionPrimaryMetrics"
                },
                "trainingSettings": {
                    "description": "Inputs for training phase for an AutoML Job.",
                    "$ref": "#/definitions/RegressionTrainingSettings",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "Regression",
            "additionalProperties": false
        },
        "RegressionModelPerformanceMetricThreshold": {
            "required": [
                "metric"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ModelPerformanceMetricThresholdBase"
                }
            ],
            "properties": {
                "metric": {
                    "description": "[Required] The regression model performance metric to calculate.",
                    "$ref": "#/definitions/RegressionModelPerformanceMetric",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "Regression",
            "additionalProperties": false
        },
        "RequestLogging": {
            "type": "object",
            "properties": {
                "captureHeaders": {
                    "description": "For payload logging, we only collect payload by default. If customers also want to collect the specified headers, they can set them in captureHeaders so that backend will collect those headers along with payload.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "RollingRateType": {
            "enum": [
                "Year",
                "Month",
                "Day",
                "Hour",
                "Minute"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "RollingRateType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Year"
                    },
                    {
                        "value": "Month"
                    },
                    {
                        "value": "Day"
                    },
                    {
                        "value": "Hour"
                    },
                    {
                        "value": "Minute"
                    }
                ]
            },
            "additionalProperties": false
        },
        "Route": {
            "required": [
                "path",
                "port"
            ],
            "type": "object",
            "properties": {
                "path": {
                    "description": "[Required] The path for the route.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string"
                },
                "port": {
                    "format": "int32",
                    "description": "[Required] The port for the route.",
                    "type": "integer"
                }
            },
            "additionalProperties": false
        },
        "SASCredentialDto": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/PendingUploadCredentialDto"
                }
            ],
            "properties": {
                "sasUri": {
                    "format": "uri",
                    "description": "Full SAS Uri, including the storage, container/blob path and SAS token",
                    "type": "string",
                    "x-ms-secret": true,
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "SAS",
            "additionalProperties": false
        },
        "SamplingAlgorithm": {
            "description": "The Sampling Algorithm used to generate hyperparameter values, along with properties to\r\nconfigure the algorithm",
            "required": [
                "samplingAlgorithmType"
            ],
            "type": "object",
            "properties": {
                "samplingAlgorithmType": {
                    "description": "[Required] The algorithm used for generating hyperparameter values, along with configuration properties",
                    "$ref": "#/definitions/SamplingAlgorithmType"
                }
            },
            "discriminator": "samplingAlgorithmType"
        },
        "SasDatastoreCredentials": {
            "description": "SAS datastore credentials configuration.",
            "required": [
                "secrets"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DatastoreCredentials"
                }
            ],
            "properties": {
                "secrets": {
                    "description": "[Required] Storage container secrets.",
                    "$ref": "#/definitions/SasDatastoreSecrets",
                    "x-ms-mutability": [
                        "create",
                        "update"
                    ],
                    "x-ms-secret": true
                }
            },
            "x-ms-discriminator-value": "Sas",
            "additionalProperties": false
        },
        "SasDatastoreSecrets": {
            "description": "Datastore SAS secrets.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DatastoreSecrets"
                }
            ],
            "properties": {
                "sasToken": {
                    "description": "Storage container SAS token.",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "Sas",
            "additionalProperties": false
        },
        "ScaleType": {
            "enum": [
                "Default",
                "TargetUtilization"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "ScaleType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Default"
                    },
                    {
                        "value": "TargetUtilization"
                    }
                ]
            },
            "additionalProperties": false
        },
        "Schedule": {
            "description": "Base definition of a schedule",
            "required": [
                "action",
                "trigger"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/ResourceBase"
                }
            ],
            "properties": {
                "action": {
                    "description": "[Required] Specifies the action of the schedule",
                    "$ref": "#/definitions/ScheduleActionBase",
                    "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                    ]
                },
                "displayName": {
                    "description": "Display name of schedule.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "isEnabled": {
                    "description": "Is the schedule enabled?",
                    "default": true,
                    "type": "boolean",
                    "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                    ]
                },
                "provisioningState": {
                    "description": "Provisioning state for the schedule.",
                    "$ref": "#/definitions/ScheduleProvisioningStatus",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ]
                },
                "trigger": {
                    "description": "[Required] Specifies the trigger details",
                    "$ref": "#/definitions/TriggerBase",
                    "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                    ]
                }
            },
            "x-ms-client-name": "ScheduleProperties",
            "additionalProperties": false
        },
        "ScheduleActionBase": {
            "required": [
                "actionType"
            ],
            "type": "object",
            "properties": {
                "actionType": {
                    "description": "[Required] Specifies the action type of the schedule",
                    "$ref": "#/definitions/ScheduleActionType",
                    "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                    ]
                }
            },
            "discriminator": "actionType"
        },
        "ScheduleListViewType": {
            "enum": [
                "EnabledOnly",
                "DisabledOnly",
                "All"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "ScheduleListViewType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "EnabledOnly"
                    },
                    {
                        "value": "DisabledOnly"
                    },
                    {
                        "value": "All"
                    }
                ]
            },
            "additionalProperties": false
        },
        "ScheduleResource": {
            "description": "Azure Resource Manager resource envelope.",
            "required": [
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
                }
            ],
            "properties": {
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/Schedule"
                }
            },
            "x-ms-client-name": "Schedule",
            "additionalProperties": false
        },
        "ScheduleResourceArmPaginatedResult": {
            "description": "A paginated list of Schedule entities.",
            "type": "object",
            "properties": {
                "nextLink": {
                    "description": "The link to the next page of Schedule objects. If null, there are no additional pages.",
                    "type": "string"
                },
                "value": {
                    "description": "An array of objects of type Schedule.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduleResource"
                    }
                }
            },
            "additionalProperties": false
        },
        "Seasonality": {
            "description": "Forecasting seasonality.",
            "required": [
                "mode"
            ],
            "type": "object",
            "properties": {
                "mode": {
                    "description": "[Required] Seasonality mode.",
                    "$ref": "#/definitions/SeasonalityMode",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "discriminator": "mode"
        },
        "SecretsType": {
            "description": "Enum to determine the datastore secrets type.",
            "enum": [
                "AccountKey",
                "Certificate",
                "Sas",
                "ServicePrincipal",
                "KerberosPassword",
                "KerberosKeytab"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "SecretsType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "AccountKey"
                    },
                    {
                        "value": "Certificate"
                    },
                    {
                        "value": "Sas"
                    },
                    {
                        "value": "ServicePrincipal"
                    },
                    {
                        "value": "KerberosPassword"
                    },
                    {
                        "value": "KerberosKeytab"
                    }
                ]
            },
            "additionalProperties": false
        },
        "ServerlessEndpoint": {
            "required": [
                "modelProfile"
            ],
            "type": "object",
            "properties": {
                "inferenceUri": {
                    "format": "uri",
                    "description": "The inference uri to target when making requests against the serverless endpoint",
                    "type": "string",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "modelProfile": {
                    "description": "[Required] The model profile to configure the serverless endpoint with",
                    "$ref": "#/definitions/ModelProfile"
                },
                "provisioningState": {
                    "description": "Provisioning state for the endpoint.",
                    "$ref": "#/definitions/EndpointProvisioningState",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ]
                }
            },
            "x-ms-client-name": "ServerlessEndpointProperties",
            "additionalProperties": false
        },
        "ServerlessEndpointTrackedResource": {
            "required": [
                "location",
                "properties"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
                }
            ],
            "properties": {
                "identity": {
                    "description": "Managed service identity (system assigned and/or user assigned identities)",
                    "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
                },
                "kind": {
                    "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
                    "type": "string"
                },
                "properties": {
                    "description": "[Required] Additional attributes of the entity.",
                    "$ref": "#/definitions/ServerlessEndpoint"
                },
                "sku": {
                    "description": "Sku details required for ARM contract for Autoscaling.",
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
                }
            },
            "x-ms-client-name": "ServerlessEndpoint",
            "additionalProperties": false
        },
        "ServerlessEndpointTrackedResourceArmPaginatedResult": {
            "description": "A paginated list of ServerlessEndpoint entities.",
            "type": "object",
            "properties": {
                "nextLink": {
                    "description": "The link to the next page of ServerlessEndpoint objects. If null, there are no additional pages.",
                    "type": "string"
                },
                "value": {
                    "description": "An array of objects of type ServerlessEndpoint.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServerlessEndpointTrackedResource"
                    }
                }
            },
            "additionalProperties": false
        },
        "ServiceDataAccessAuthIdentity": {
            "enum": [
                "None",
                "WorkspaceSystemAssignedIdentity",
                "WorkspaceUserAssignedIdentity"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "ServiceDataAccessAuthIdentity",
                "modelAsString": true,
                "values": [
                    {
                        "value": "None",
                        "description": "Do not use any identity for service data access."
                    },
                    {
                        "value": "WorkspaceSystemAssignedIdentity",
                        "description": "Use the system assigned managed identity of the Workspace to authenticate service data access."
                    },
                    {
                        "value": "WorkspaceUserAssignedIdentity",
                        "description": "Use the user assigned managed identity of the Workspace to authenticate service data access."
                    }
                ]
            },
            "additionalProperties": false
        },
        "ServicePrincipalDatastoreCredentials": {
            "description": "Service Principal datastore credentials configuration.",
            "required": [
                "clientId",
                "secrets",
                "tenantId"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DatastoreCredentials"
                }
            ],
            "properties": {
                "authorityUrl": {
                    "description": "Authority URL used for authentication.",
                    "type": "string",
                    "x-nullable": true
                },
                "clientId": {
                    "format": "uuid",
                    "description": "[Required] Service principal client ID.",
                    "type": "string"
                },
                "resourceUrl": {
                    "description": "Resource the service principal has access to.",
                    "type": "string",
                    "x-nullable": true
                },
                "secrets": {
                    "description": "[Required] Service principal secrets.",
                    "$ref": "#/definitions/ServicePrincipalDatastoreSecrets",
                    "x-ms-mutability": [
                        "create",
                        "update"
                    ],
                    "x-ms-secret": true
                },
                "tenantId": {
                    "format": "uuid",
                    "description": "[Required] ID of the tenant to which the service principal belongs.",
                    "type": "string"
                }
            },
            "x-ms-discriminator-value": "ServicePrincipal",
            "additionalProperties": false
        },
        "ServicePrincipalDatastoreSecrets": {
            "description": "Datastore Service Principal secrets.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DatastoreSecrets"
                }
            ],
            "properties": {
                "clientSecret": {
                    "description": "Service principal secret.",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "ServicePrincipal",
            "additionalProperties": false
        },
        "SkuCapacity": {
            "description": "SKU capacity information",
            "type": "object",
            "properties": {
                "default": {
                    "format": "int32",
                    "description": "Gets or sets the default capacity.",
                    "default": 0,
                    "type": "integer"
                },
                "maximum": {
                    "format": "int32",
                    "description": "Gets or sets the maximum.",
                    "default": 0,
                    "type": "integer"
                },
                "minimum": {
                    "format": "int32",
                    "description": "Gets or sets the minimum.",
                    "default": 0,
                    "type": "integer"
                },
                "scaleType": {
                    "description": "Gets or sets the type of the scale.",
                    "default": "Automatic",
                    "$ref": "#/definitions/SkuScaleType"
                }
            },
            "additionalProperties": false
        },
        "SkuResource": {
            "description": "Fulfills ARM Contract requirement to list all available SKUS for a resource.",
            "type": "object",
            "properties": {
                "capacity": {
                    "description": "Gets or sets the Sku Capacity.",
                    "$ref": "#/definitions/SkuCapacity",
                    "x-nullable": true
                },
                "resourceType": {
                    "description": "The resource type name.",
                    "type": "string",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "sku": {
                    "description": "Gets or sets the Sku.",
                    "$ref": "#/definitions/SkuSetting",
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "SkuResourceArmPaginatedResult": {
            "description": "A paginated list of SkuResource entities.",
            "type": "object",
            "properties": {
                "nextLink": {
                    "description": "The link to the next page of SkuResource objects. If null, there are no additional pages.",
                    "type": "string"
                },
                "value": {
                    "description": "An array of objects of type SkuResource.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SkuResource"
                    },
                    "x-ms-identifiers": []
                }
            },
            "additionalProperties": false
        },
        "SkuScaleType": {
            "description": "Node scaling setting for the compute sku.",
            "enum": [
                "Automatic",
                "Manual",
                "None"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "SkuScaleType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Automatic",
                        "description": "Automatically scales node count."
                    },
                    {
                        "value": "Manual",
                        "description": "Node count scaled upon user request."
                    },
                    {
                        "value": "None",
                        "description": "Fixed set of nodes."
                    }
                ]
            },
            "additionalProperties": false
        },
        "SkuSetting": {
            "description": "SkuSetting fulfills the need for stripped down SKU info in ARM contract.",
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "description": "[Required] The name of the SKU. Ex - P3. It is typically a letter+number code.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string"
                },
                "tier": {
                    "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                    "default": "Basic",
                    "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/SkuTier"
                }
            },
            "additionalProperties": false
        },
        "SparkJob": {
            "description": "Spark job definition.",
            "required": [
                "codeId",
                "entry"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/JobBase"
                }
            ],
            "properties": {
                "archives": {
                    "description": "Archive files used in the job.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "args": {
                    "description": "Arguments for the job.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "codeId": {
                    "description": "[Required] ARM resource ID of the code asset.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "conf": {
                    "description": "Spark configured properties.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "entry": {
                    "description": "[Required] The entry to execute on startup of the job.",
                    "$ref": "#/definitions/SparkJobEntry",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "environmentId": {
                    "description": "The ARM resource ID of the Environment specification for the job.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "files": {
                    "description": "Files used in the job.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "inputs": {
                    "description": "Mapping of input data bindings used in the job.",
                    "type": "object",
                    "additionalProperties": {
                        "description": "Command job definition.",
                        "$ref": "#/definitions/JobInput",
                        "x-nullable": true
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "jars": {
                    "description": "Jar files used in the job.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "outputs": {
                    "description": "Mapping of output data bindings used in the job.",
                    "type": "object",
                    "additionalProperties": {
                        "description": "Job output definition container information on where to find job output/logs.",
                        "$ref": "#/definitions/JobOutput",
                        "x-nullable": true
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "pyFiles": {
                    "description": "Python files used in the job.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "queueSettings": {
                    "description": "Queue settings for the job",
                    "$ref": "#/definitions/QueueSettings",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "resources": {
                    "description": "Compute Resource configuration for the job.",
                    "$ref": "#/definitions/SparkResourceConfiguration",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "Spark",
            "additionalProperties": false
        },
        "SparkJobEntry": {
            "description": "Spark job entry point definition.",
            "required": [
                "sparkJobEntryType"
            ],
            "type": "object",
            "properties": {
                "sparkJobEntryType": {
                    "description": "[Required] Type of the job's entry point.",
                    "$ref": "#/definitions/SparkJobEntryType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "discriminator": "sparkJobEntryType"
        },
        "SparkJobPythonEntry": {
            "required": [
                "file"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/SparkJobEntry"
                }
            ],
            "properties": {
                "file": {
                    "description": "[Required] Relative python file path for job entry point.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "example": "train.py",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "SparkJobPythonEntry",
            "additionalProperties": false
        },
        "SparkJobScalaEntry": {
            "required": [
                "className"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/SparkJobEntry"
                }
            ],
            "properties": {
                "className": {
                    "description": "[Required] Scala class name used as entry point.",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_]",
                    "type": "string",
                    "example": "microsoft.aml.sample.myapp",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "SparkJobScalaEntry",
            "additionalProperties": false
        },
        "StaticInputData": {
            "description": "Static input data definition.",
            "required": [
                "windowEnd",
                "windowStart"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/MonitoringInputDataBase"
                }
            ],
            "properties": {
                "preprocessingComponentId": {
                    "description": "The ARM resource ID of the component resource used to preprocess the data.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "windowEnd": {
                    "format": "date-time",
                    "description": "[Required] The end date of the data window.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "windowStart": {
                    "format": "date-time",
                    "description": "[Required] The start date of the data window.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "Static",
            "additionalProperties": false
        },
        "StatusMessage": {
            "description": "Active message associated with project",
            "type": "object",
            "properties": {
                "code": {
                    "description": "Service-defined message code.",
                    "type": "string",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "createdDateTime": {
                    "format": "date-time",
                    "description": "Time in UTC at which the message was created.",
                    "type": "string",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                },
                "level": {
                    "description": "Severity level of message.",
                    "$ref": "#/definitions/StatusMessageLevel",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ]
                },
                "message": {
                    "description": "A human-readable representation of the message code.",
                    "type": "string",
                    "readOnly": true,
                    "x-ms-mutability": [
                        "read"
                    ],
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "StatusMessageLevel": {
            "enum": [
                "Error",
                "Information",
                "Warning"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "StatusMessageLevel",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Error"
                    },
                    {
                        "value": "Information"
                    },
                    {
                        "value": "Warning"
                    }
                ]
            },
            "additionalProperties": false
        },
        "SweepJob": {
            "description": "Sweep job definition.",
            "required": [
                "objective",
                "samplingAlgorithm",
                "searchSpace"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/JobBase"
                }
            ],
            "properties": {
                "componentConfiguration": {
                    "description": "Component Configuration for sweep over component",
                    "$ref": "#/definitions/ComponentConfiguration",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "earlyTermination": {
                    "description": "Early termination policies enable canceling poor-performing runs before they complete",
                    "$ref": "#/definitions/EarlyTerminationPolicy",
                    "x-nullable": true
                },
                "inputs": {
                    "description": "Mapping of input data bindings used in the job.",
                    "type": "object",
                    "additionalProperties": {
                        "description": "Command job definition.",
                        "$ref": "#/definitions/JobInput",
                        "x-nullable": true
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "limits": {
                    "description": "Sweep Job limit.",
                    "default": "{}",
                    "$ref": "#/definitions/SweepJobLimits",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "objective": {
                    "description": "[Required] Optimization objective.",
                    "$ref": "#/definitions/Objective"
                },
                "outputs": {
                    "description": "Mapping of output data bindings used in the job.",
                    "type": "object",
                    "additionalProperties": {
                        "description": "Job output definition container information on where to find job output/logs.",
                        "$ref": "#/definitions/JobOutput",
                        "x-nullable": true
                    },
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "queueSettings": {
                    "description": "Queue settings for the job",
                    "$ref": "#/definitions/QueueSettings",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "resources": {
                    "description": "Compute Resource configuration for the job.",
                    "default": "{}",
                    "$ref": "#/definitions/JobResourceConfiguration",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "samplingAlgorithm": {
                    "description": "[Required] The hyperparameter sampling algorithm",
                    "$ref": "#/definitions/SamplingAlgorithm"
                },
                "searchSpace": {
                    "description": "[Required] A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter",
                    "type": "object"
                },
                "trial": {
                    "description": "Trial component definition.",
                    "$ref": "#/definitions/TrialComponent",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "Sweep",
            "additionalProperties": false
        },
        "SweepJobLimits": {
            "description": "Sweep Job limit class.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/JobLimits"
                }
            ],
            "properties": {
                "maxConcurrentTrials": {
                    "format": "int32",
                    "description": "Sweep Job max concurrent trials.",
                    "type": "integer",
                    "x-nullable": true
                },
                "maxTotalTrials": {
                    "format": "int32",
                    "description": "Sweep Job max total trials.",
                    "type": "integer",
                    "x-nullable": true
                },
                "trialTimeout": {
                    "format": "duration",
                    "description": "Sweep Job Trial timeout value.",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "Sweep",
            "additionalProperties": false
        },
        "TableVertical": {
            "description": "Abstract class for AutoML tasks that use table dataset as input - such as Classification/Regression/Forecasting.",
            "type": "object",
            "properties": {
                "cvSplitColumnNames": {
                    "description": "Columns to use for CVSplit data.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true
                },
                "featurizationSettings": {
                    "description": "Featurization inputs needed for AutoML job.",
                    "$ref": "#/definitions/TableVerticalFeaturizationSettings",
                    "x-nullable": true
                },
                "fixedParameters": {
                    "description": "Model/training parameters that will remain constant throughout training.",
                    "$ref": "#/definitions/TableFixedParameters",
                    "x-nullable": true
                },
                "limitSettings": {
                    "description": "Execution constraints for AutoMLJob.",
                    "$ref": "#/definitions/TableVerticalLimitSettings",
                    "x-nullable": true
                },
                "nCrossValidations": {
                    "description": "Number of cross validation folds to be applied on training dataset\r\nwhen validation dataset is not provided.",
                    "$ref": "#/definitions/NCrossValidations",
                    "x-nullable": true
                },
                "searchSpace": {
                    "description": "Search space for sampling different combinations of models and their hyperparameters.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TableParameterSubspace"
                    },
                    "x-nullable": true,
                    "x-ms-identifiers": []
                },
                "sweepSettings": {
                    "description": "Settings for model sweeping and hyperparameter tuning.",
                    "$ref": "#/definitions/TableSweepSettings",
                    "x-nullable": true
                },
                "testData": {
                    "description": "Test data input.",
                    "$ref": "#/definitions/MLTableJobInput",
                    "x-nullable": true
                },
                "testDataSize": {
                    "format": "double",
                    "description": "The fraction of test dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided.",
                    "type": "number",
                    "x-nullable": true
                },
                "validationData": {
                    "description": "Validation data inputs.",
                    "$ref": "#/definitions/MLTableJobInput",
                    "x-nullable": true
                },
                "validationDataSize": {
                    "format": "double",
                    "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided.",
                    "type": "number",
                    "x-nullable": true
                },
                "weightColumnName": {
                    "description": "The name of the sample weight column. Automated ML supports a weighted column as an input, causing rows in the data to be weighted up or down.",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "additionalProperties": false
        },
        "TargetLags": {
            "description": "The number of past periods to lag from the target column.",
            "required": [
                "mode"
            ],
            "type": "object",
            "properties": {
                "mode": {
                    "description": "[Required] Set target lags mode - Auto/Custom",
                    "$ref": "#/definitions/TargetLagsMode",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "discriminator": "mode"
        },
        "TargetRollingWindowSize": {
            "description": "Forecasting target rolling window size.",
            "required": [
                "mode"
            ],
            "type": "object",
            "properties": {
                "mode": {
                    "description": "[Required] TargetRollingWindowSiz detection mode.",
                    "$ref": "#/definitions/TargetRollingWindowSizeMode",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "discriminator": "mode"
        },
        "TargetUtilizationScaleSettings": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/OnlineScaleSettings"
                }
            ],
            "properties": {
                "maxInstances": {
                    "format": "int32",
                    "description": "The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances.",
                    "default": 1,
                    "type": "integer"
                },
                "minInstances": {
                    "format": "int32",
                    "description": "The minimum number of instances to always be present.",
                    "default": 1,
                    "type": "integer"
                },
                "pollingInterval": {
                    "format": "duration",
                    "description": "The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.",
                    "default": "PT1S",
                    "type": "string"
                },
                "targetUtilizationPercentage": {
                    "format": "int32",
                    "description": "Target CPU usage for the autoscaler.",
                    "default": 70,
                    "type": "integer"
                }
            },
            "x-ms-discriminator-value": "TargetUtilization",
            "additionalProperties": false
        },
        "TensorFlow": {
            "description": "TensorFlow distribution configuration.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DistributionConfiguration"
                }
            ],
            "properties": {
                "parameterServerCount": {
                    "format": "int32",
                    "description": "Number of parameter server tasks.",
                    "default": 0,
                    "type": "integer",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "workerCount": {
                    "format": "int32",
                    "description": "Number of workers. If not specified, will default to the instance count.",
                    "type": "integer",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "TensorFlow",
            "additionalProperties": false
        },
        "TextAnnotationType": {
            "description": "Annotation type of text data.",
            "enum": [
                "Classification",
                "NamedEntityRecognition"
            ],
            "type": "string",
            "x-ms-enum": {
                "name": "TextAnnotationType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Classification"
                    },
                    {
                        "value": "NamedEntityRecognition"
                    }
                ]
            },
            "additionalProperties": false
        },
        "TextClassification": {
            "description": "Text Classification task in AutoML NLP vertical.\r\nNLP - Natural Language Processing.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/NlpVertical"
                },
                {
                    "$ref": "#/definitions/AutoMLVertical"
                }
            ],
            "properties": {
                "primaryMetric": {
                    "description": "Primary metric for Text-Classification task.",
                    "default": "Accuracy",
                    "$ref": "#/definitions/ClassificationPrimaryMetrics"
                }
            },
            "x-ms-discriminator-value": "TextClassification",
            "additionalProperties": false
        },
        "TextClassificationMultilabel": {
            "description": "Text Classification Multilabel task in AutoML NLP vertical.\r\nNLP - Natural Language Processing.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/NlpVertical"
                },
                {
                    "$ref": "#/definitions/AutoMLVertical"
                }
            ],
            "properties": {
                "primaryMetric": {
                    "description": "Primary metric for Text-Classification-Multilabel task.\r\nCurrently only Accuracy is supported as primary metric, hence user need not set it explicitly.",
                    "$ref": "#/definitions/ClassificationMultilabelPrimaryMetrics",
                    "readOnly": true
                }
            },
            "x-ms-discriminator-value": "TextClassificationMultilabel",
            "additionalProperties": false
        },
        "TextNer": {
            "description": "Text-NER task in AutoML NLP vertical.\r\nNER - Named Entity Recognition.\r\nNLP - Natural Language Processing.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/NlpVertical"
                },
                {
                    "$ref": "#/definitions/AutoMLVertical"
                }
            ],
            "properties": {
                "primaryMetric": {
                    "description": "Primary metric for Text-NER task.\r\nOnly 'Accuracy' is supported for Text-NER, so user need not set this explicitly.",
                    "$ref": "#/definitions/ClassificationPrimaryMetrics",
                    "readOnly": true
                }
            },
            "x-ms-discriminator-value": "TextNER",
            "additionalProperties": false
        },
        "TopNFeaturesByAttribution": {
            "required": [
                "filterType"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/MonitoringFeatureFilterBase"
                }
            ],
            "properties": {
                "top": {
                    "format": "int32",
                    "description": "The number of top features to include.",
                    "default": 10,
                    "type": "integer",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "TopNByAttribution",
            "additionalProperties": false
        },
        "TrailingInputData": {
            "description": "Trailing input data definition.",
            "required": [
                "windowOffset",
                "windowSize"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/MonitoringInputDataBase"
                }
            ],
            "properties": {
                "preprocessingComponentId": {
                    "description": "The ARM resource ID of the component resource used to preprocess the data.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "windowOffset": {
                    "format": "duration",
                    "description": "[Required] The time offset between the end of the data window and the monitor's current run time.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                },
                "windowSize": {
                    "format": "duration",
                    "description": "[Required] The size of the trailing data window.",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "x-ms-discriminator-value": "Trailing",
            "additionalProperties": false
        },
        "TriggerBase": {
            "required": [
                "triggerType"
            ],
            "type": "object",
            "properties": {
                "endTime": {
                    "description": "Specifies end time of schedule in ISO 8601, but without a UTC offset. Refer https://en.wikipedia.org/wiki/ISO_8601.\r\nRecommented format would be \"2022-06-01T00:00:01\"\r\nIf not present, the schedule will run indefinitely",
                    "type": "string",
                    "x-nullable": true
                },
                "startTime": {
                    "description": "Specifies start time of schedule in ISO 8601 format, but without a UTC offset.",
                    "type": "string",
                    "x-nullable": true
                },
                "timeZone": {
                    "description": "Specifies time zone in which the schedule runs.\r\nTimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11",
                    "default": "UTC",
                    "type": "string"
                },
                "triggerType": {
                    "description": "[Required] ",
                    "$ref": "#/definitions/TriggerType",
                    "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                    ]
                }
            },
            "discriminator": "triggerType"
        },
        "TritonInferencingServer": {
            "description": "Triton inferencing server configurations.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/InferencingServer"
                }
            ],
            "properties": {
                "inferenceConfiguration": {
                    "description": "Inference configuration for Triton.",
                    "$ref": "#/definitions/OnlineInferenceConfiguration",
                    "x-nullable": true
                }
            },
            "x-ms-discriminator-value": "Triton",
            "additionalProperties": false
        },
        "TritonModelJobInput": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AssetJobInput"
                },
                {
                    "$ref": "#/definitions/JobInput"
                }
            ],
            "x-ms-discriminator-value": "triton_model",
            "additionalProperties": false
        },
        "TritonModelJobOutput": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AssetJobOutput"
                },
                {
                    "$ref": "#/definitions/JobOutput"
                }
            ],
            "x-ms-discriminator-value": "triton_model",
            "additionalProperties": false
        },
        "TruncationSelectionPolicy": {
            "description": "Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/EarlyTerminationPolicy"
                }
            ],
            "properties": {
                "truncationPercentage": {
                    "format": "int32",
                    "description": "The percentage of runs to cancel at each evaluation interval.",
                    "default": 0,
                    "type": "integer"
                }
            },
            "x-ms-discriminator-value": "TruncationSelection",
            "additionalProperties": false
        },
        "UriFileDataVersion": {
            "description": "uri-file data version entity",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DataVersionBase"
                }
            ],
            "x-ms-discriminator-value": "uri_file",
            "additionalProperties": false
        },
        "UriFileJobInput": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AssetJobInput"
                },
                {
                    "$ref": "#/definitions/JobInput"
                }
            ],
            "x-ms-discriminator-value": "uri_file",
            "additionalProperties": false
        },
        "UriFileJobOutput": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AssetJobOutput"
                },
                {
                    "$ref": "#/definitions/JobOutput"
                }
            ],
            "x-ms-discriminator-value": "uri_file",
            "additionalProperties": false
        },
        "UriFolderDataVersion": {
            "description": "uri-folder data version entity",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DataVersionBase"
                }
            ],
            "x-ms-discriminator-value": "uri_folder",
            "additionalProperties": false
        },
        "UriFolderJobInput": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AssetJobInput"
                },
                {
                    "$ref": "#/definitions/JobInput"
                }
            ],
            "x-ms-discriminator-value": "uri_folder",
            "additionalProperties": false
        },
        "UriFolderJobOutput": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AssetJobOutput"
                },
                {
                    "$ref": "#/definitions/JobOutput"
                }
            ],
            "x-ms-discriminator-value": "uri_folder",
            "additionalProperties": false
        },
        "UserIdentity": {
            "description": "User identity configuration.",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/IdentityConfiguration"
                }
            ],
            "x-ms-discriminator-value": "UserIdentity",
            "additionalProperties": false
        },
        "Webhook": {
            "description": "Webhook base",
            "required": [
                "webhookType"
            ],
            "type": "object",
            "properties": {
                "eventType": {
                    "description": "Send callback on a specified notification event",
                    "type": "string",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ],
                    "x-nullable": true
                },
                "webhookType": {
                    "description": "[Required] Specifies the type of service to send a callback",
                    "$ref": "#/definitions/WebhookType",
                    "x-ms-mutability": [
                        "create",
                        "read"
                    ]
                }
            },
            "discriminator": "webhookType"
        }
    },
    "securityDefinitions": {
        "azure_auth": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
                "user_impersonation": "impersonate your user account"
            },
            "description": "Azure Active Directory OAuth2 Flow."
        }
    }
}
