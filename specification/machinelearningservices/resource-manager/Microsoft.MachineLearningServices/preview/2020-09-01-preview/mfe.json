{
  "swagger": "2.0",
  "info": {
    "title": "Azure Machine Learning Workspaces",
    "description": "These APIs allow end users to operate on Azure Machine Learning Workspace resources.",
    "version": "2020-09-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores": {
      "delete": {
        "tags": [
          "Datastore"
        ],
        "summary": "Delete all datastores within a workspace.",
        "operationId": "Datastores_DeleteAll",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Datastore"
        ],
        "summary": "List datastores.",
        "operationId": "Datastores_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Maximum number of results to return.",
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "in": "query",
            "name": "names",
            "description": "Names of datastores to return.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "searchText",
            "description": "Text to search for in the datastore names.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "Order by property (createdtime | modifiedtime | name).",
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderByAsc",
            "description": "Order by property in ascending order.",
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResourcePaginatedResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}": {
      "delete": {
        "tags": [
          "Datastore"
        ],
        "summary": "Delete datastore.",
        "operationId": "Datastores_Delete",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Datastore"
        ],
        "summary": "Get datastore.",
        "operationId": "Datastores_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResource"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Datastore"
        ],
        "summary": "Create or update datastore.",
        "operationId": "Datastores_CreateOrUpdate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Datastore entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResourceRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}/listSecret": {
      "post": {
        "tags": [
          "Datastore"
        ],
        "summary": "Get datastore secrets.",
        "operationId": "Datastores_GetSecrets",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastoreCredentials"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}/setAzureMLDefault": {
      "post": {
        "tags": [
          "Datastore"
        ],
        "summary": "Set default datastore.",
        "operationId": "Datastores_SetDefault",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/azuremldefault": {
      "get": {
        "tags": [
          "Datastore"
        ],
        "summary": "Get default datastore.",
        "operationId": "Datastores_GetDefault",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models": {
      "get": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "List model containers.",
        "operationId": "ModelContainers_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Maximum number of results to return.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResourcePaginatedResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}": {
      "delete": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Delete model container.",
        "operationId": "ModelContainers_Delete",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Model container name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Get model container.",
        "operationId": "ModelContainers_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Model container name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Create or update model container.",
        "operationId": "ModelContainers_CreateOrUpdate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Model container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Model container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelContainerResourceRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions": {
      "get": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "List model versions.",
        "operationId": "ModelVersions_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Model name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Model version.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Model description.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Maximum number of results to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Number of initial results to skip.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "tags",
            "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
            "type": "string"
          },
          {
            "in": "query",
            "name": "properties",
            "description": "Comma-separated list of property names (and optionally values). Example: prop1,prop2=value2",
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "Property by which to order the results.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "latestVersionOnly",
            "description": "Only return the most recent version of a model.",
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResourcePaginatedResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions/{version}": {
      "delete": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Delete model.",
        "operationId": "ModelVersions_Delete",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Model name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Model version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Get model.",
        "operationId": "ModelVersions_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Model name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Model version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Create or update model.",
        "operationId": "ModelVersions_CreateOrUpdate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Model name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Model version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Model entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelVersionResourceRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "InnerErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "innerError": {
          "$ref": "#/definitions/InnerErrorResponse"
        }
      }
    },
    "DebugInfoResponse": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "innerException": {
          "$ref": "#/definitions/DebugInfoResponse"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "errorResponse": {
          "$ref": "#/definitions/ErrorResponse"
        }
      }
    },
    "RootError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "severity": {
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "messageFormat": {
          "type": "string"
        },
        "messageParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "referenceCode": {
          "type": "string"
        },
        "detailsUri": {
          "format": "uri",
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RootError"
          }
        },
        "innerError": {
          "$ref": "#/definitions/InnerErrorResponse"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/RootError"
        },
        "correlation": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "environment": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "time": {
          "format": "date-time",
          "type": "string"
        },
        "componentName": {
          "type": "string"
        }
      }
    },
    "ContentsType": {
      "enum": [
        "AzureBlob",
        "AzureDataLake",
        "AzureDataLakeGen2",
        "AzureFile",
        "AzureMySql",
        "AzurePostgreSql",
        "AzureSqlDatabase",
        "GlusterFs"
      ],
      "type": "string"
    },
    "CredentialsType": {
      "enum": [
        "AccountKey",
        "Certificate",
        "Sas",
        "ServicePrincipal",
        "SqlAdmin"
      ],
      "type": "string"
    },
    "AccountKeySection": {
      "required": [
        "key"
      ],
      "type": "object",
      "properties": {
        "key": {
          "pattern": "\\w",
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "CertificateSection": {
      "required": [
        "certificate",
        "clientId",
        "tenantId",
        "thumbprint"
      ],
      "type": "object",
      "properties": {
        "authorityUrl": {
          "type": "string"
        },
        "resourceUri": {
          "type": "string"
        },
        "tenantId": {
          "format": "uuid",
          "type": "string"
        },
        "clientId": {
          "format": "uuid",
          "type": "string"
        },
        "certificate": {
          "pattern": "\\w",
          "type": "string",
          "x-ms-secret": true
        },
        "thumbprint": {
          "pattern": "\\w",
          "type": "string"
        }
      }
    },
    "SasSection": {
      "required": [
        "sasToken"
      ],
      "type": "object",
      "properties": {
        "sasToken": {
          "pattern": "\\w",
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "ServicePrincipalSection": {
      "required": [
        "clientId",
        "clientSecret",
        "tenantId"
      ],
      "type": "object",
      "properties": {
        "authorityUrl": {
          "type": "string"
        },
        "resourceUri": {
          "type": "string"
        },
        "tenantId": {
          "format": "uuid",
          "type": "string"
        },
        "clientId": {
          "format": "uuid",
          "type": "string"
        },
        "clientSecret": {
          "pattern": "\\w",
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "SqlAdminSection": {
      "required": [
        "password",
        "userId"
      ],
      "type": "object",
      "properties": {
        "userId": {
          "pattern": "\\w",
          "type": "string"
        },
        "password": {
          "pattern": "\\w",
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "DatastoreCredentials": {
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/CredentialsType"
        },
        "accountKey": {
          "$ref": "#/definitions/AccountKeySection"
        },
        "certificate": {
          "$ref": "#/definitions/CertificateSection"
        },
        "sas": {
          "$ref": "#/definitions/SasSection"
        },
        "servicePrincipal": {
          "$ref": "#/definitions/ServicePrincipalSection"
        },
        "sqlAdmin": {
          "$ref": "#/definitions/SqlAdminSection"
        }
      }
    },
    "AzureDataLakeSection": {
      "required": [
        "credentials",
        "storeName"
      ],
      "type": "object",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/DatastoreCredentials"
        },
        "storeName": {
          "pattern": "\\w",
          "type": "string"
        }
      }
    },
    "AzureMySqlSection": {
      "required": [
        "credentials",
        "databaseName",
        "endpoint",
        "portNumber",
        "serverName"
      ],
      "type": "object",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/DatastoreCredentials"
        },
        "databaseName": {
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "endpoint": {
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "portNumber": {
          "format": "int32",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "serverName": {
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "AzurePostgreSqlSection": {
      "required": [
        "credentials",
        "databaseName",
        "endpoint",
        "portNumber",
        "serverName"
      ],
      "type": "object",
      "properties": {
        "enableSSL": {
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "credentials": {
          "$ref": "#/definitions/DatastoreCredentials"
        },
        "databaseName": {
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "endpoint": {
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "portNumber": {
          "format": "int32",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "serverName": {
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "AzureSqlDatabaseSection": {
      "required": [
        "credentials",
        "databaseName",
        "endpoint",
        "portNumber",
        "serverName"
      ],
      "type": "object",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/DatastoreCredentials"
        },
        "databaseName": {
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "endpoint": {
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "portNumber": {
          "format": "int32",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "serverName": {
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "AzureStorageSection": {
      "required": [
        "accountName",
        "containerName",
        "credentials",
        "endpoint",
        "protocol"
      ],
      "type": "object",
      "properties": {
        "accountName": {
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "blobCacheTimeout": {
          "format": "int32",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "containerName": {
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "credentials": {
          "$ref": "#/definitions/DatastoreCredentials"
        },
        "endpoint": {
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "protocol": {
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "GlusterFsSection": {
      "required": [
        "serverAddress",
        "volumeName"
      ],
      "type": "object",
      "properties": {
        "serverAddress": {
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "volumeName": {
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "DatastoreContents": {
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/ContentsType"
        },
        "azureDataLake": {
          "$ref": "#/definitions/AzureDataLakeSection"
        },
        "azureMySql": {
          "$ref": "#/definitions/AzureMySqlSection"
        },
        "azurePostgreSql": {
          "$ref": "#/definitions/AzurePostgreSqlSection"
        },
        "azureSqlDatabase": {
          "$ref": "#/definitions/AzureSqlDatabaseSection"
        },
        "azureStorage": {
          "$ref": "#/definitions/AzureStorageSection"
        },
        "glusterFs": {
          "$ref": "#/definitions/GlusterFsSection"
        }
      }
    },
    "OriginType": {
      "enum": [
        "Synapse"
      ],
      "type": "string"
    },
    "LinkedInfo": {
      "type": "object",
      "properties": {
        "linkedId": {
          "type": "string"
        },
        "linkedResourceName": {
          "type": "string"
        },
        "origin": {
          "$ref": "#/definitions/OriginType"
        }
      }
    },
    "DatastoreProperties": {
      "required": [
        "contents"
      ],
      "type": "object",
      "properties": {
        "contents": {
          "$ref": "#/definitions/DatastoreContents"
        },
        "description": {
          "type": "string"
        },
        "hasBeenValidated": {
          "type": "boolean",
          "readOnly": true
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "readOnly": true
        },
        "isDefault": {
          "type": "boolean",
          "readOnly": true
        },
        "linkedInfo": {
          "$ref": "#/definitions/LinkedInfo"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "DatastorePropertiesResource": {
      "description": "Azure Resource Manager resource Envelope",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatastoreProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      ]
    },
    "DatastorePropertiesResourcePaginatedResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatastorePropertiesResource"
          }
        },
        "continuationToken": {
          "type": "string"
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "DatastorePropertiesResourceRequest": {
      "description": "Azure Resource Management create resource envelope.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatastoreProperties"
        }
      }
    },
    "AssetPath": {
      "description": "Details of an AssetUri.",
      "type": "object",
      "properties": {
        "path": {
          "description": "The path of file/directory.",
          "type": "string"
        },
        "isDirectory": {
          "description": "Whether the path defines a directory or a single file.",
          "type": "boolean"
        }
      }
    },
    "ModelVersion": {
      "description": "Details of an ModelDto",
      "type": "object",
      "properties": {
        "stage": {
          "description": "Model asset stage.",
          "type": "string"
        },
        "name": {
          "description": "The Name of the Asset.",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "description": "The Asset version assigned by service.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "The Asset description text.",
          "type": "string"
        },
        "datastoreId": {
          "description": "The Asset datastoreId",
          "type": "string"
        },
        "tags": {
          "description": "The Asset tag dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The Asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "assetPaths": {
          "description": "Details of asset path\r\nAdding list of back compat",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetPath"
          }
        },
        "linkedResourceIds": {
          "description": "Associated ARM resources. Key is the link type, value is a list of ARM IDs.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "ModelVersionResource": {
      "description": "Azure Resource Manager resource Envelope",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ModelVersion"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      ]
    },
    "ModelContainer": {
      "type": "object",
      "properties": {
        "latestVersions": {
          "description": "Latest Versions for all assets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelVersionResource"
          }
        },
        "name": {
          "description": "The Name of the Asset container",
          "type": "string"
        },
        "description": {
          "description": "The asset container description text.",
          "type": "string"
        },
        "tags": {
          "description": "The asset tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ModelContainerResource": {
      "description": "Azure Resource Manager resource Envelope",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ModelContainer"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        },
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      ]
    },
    "ModelContainerResourcePaginatedResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelContainerResource"
          }
        },
        "continuationToken": {
          "type": "string"
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "ModelContainerResourceRequest": {
      "description": "Azure Resource Management create resource envelope.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ModelContainer"
        }
      }
    },
    "ModelVersionResourcePaginatedResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelVersionResource"
          }
        },
        "continuationToken": {
          "type": "string"
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "ModelVersionResourceRequest": {
      "description": "Azure Resource Management create resource envelope.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ModelVersion"
        }
      }
    }
  }
}
