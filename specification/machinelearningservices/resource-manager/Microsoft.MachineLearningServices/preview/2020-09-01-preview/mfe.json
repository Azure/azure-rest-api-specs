{
  "swagger": "2.0",
  "info": {
    "title": "Azure Machine Learning Workspaces",
    "version": "2020-09-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}": {
      "put": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "CodeContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Code Container.": {
            "$ref": "./examples/CodeContainer/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "Get container.",
        "operationId": "CodeContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Code Container.": {
            "$ref": "./examples/CodeContainer/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "Delete container.",
        "operationId": "CodeContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Code Container.": {
            "$ref": "./examples/CodeContainer/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes": {
      "get": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "List containers.",
        "operationId": "CodeContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeContainerResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Code Container.": {
            "$ref": "./examples/CodeContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions/{version}": {
      "put": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Create or update version.",
        "operationId": "CodeVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Code Version.": {
            "$ref": "./examples/CodeVersion/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Get version.",
        "operationId": "CodeVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Code Version.": {
            "$ref": "./examples/CodeVersion/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Delete version.",
        "operationId": "CodeVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Code Version.": {
            "$ref": "./examples/CodeVersion/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions": {
      "get": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "List versions.",
        "operationId": "CodeVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeVersionResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Code Version.": {
            "$ref": "./examples/CodeVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}": {
      "put": {
        "tags": [
          "ComponentContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "ComponentContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Component Container.": {
            "$ref": "./examples/ComponentContainer/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "ComponentContainer"
        ],
        "summary": "Get container.",
        "operationId": "ComponentContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Component Container.": {
            "$ref": "./examples/ComponentContainer/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ComponentContainer"
        ],
        "summary": "Delete container.",
        "operationId": "ComponentContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Component Container.": {
            "$ref": "./examples/ComponentContainer/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components": {
      "get": {
        "tags": [
          "ComponentContainer"
        ],
        "summary": "List containers.",
        "operationId": "ComponentContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Component Container.": {
            "$ref": "./examples/ComponentContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}/versions/{version}": {
      "put": {
        "tags": [
          "ComponentVersion"
        ],
        "summary": "Create or update version.",
        "operationId": "ComponentVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Component Version.": {
            "$ref": "./examples/ComponentVersion/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "ComponentVersion"
        ],
        "summary": "Get version.",
        "operationId": "ComponentVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Component Version.": {
            "$ref": "./examples/ComponentVersion/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ComponentVersion"
        ],
        "summary": "Delete version.",
        "operationId": "ComponentVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Component Version.": {
            "$ref": "./examples/ComponentVersion/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}/versions": {
      "get": {
        "tags": [
          "ComponentVersion"
        ],
        "summary": "List versions.",
        "operationId": "ComponentVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Component Version.": {
            "$ref": "./examples/ComponentVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}": {
      "put": {
        "tags": [
          "DataContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "DataContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Data Container.": {
            "$ref": "./examples/DataContainer/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "DataContainer"
        ],
        "summary": "Get container.",
        "operationId": "DataContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Data Container.": {
            "$ref": "./examples/DataContainer/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DataContainer"
        ],
        "summary": "Delete container.",
        "operationId": "DataContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Data Container.": {
            "$ref": "./examples/DataContainer/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data": {
      "get": {
        "tags": [
          "DataContainer"
        ],
        "summary": "List containers.",
        "operationId": "DataContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataContainerResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Data Container.": {
            "$ref": "./examples/DataContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores": {
      "get": {
        "tags": [
          "Datastore"
        ],
        "summary": "List datastores.",
        "operationId": "Datastores_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Maximum number of results to return.",
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "in": "query",
            "name": "isDefault",
            "description": "Filter down to the workspace default datastore.",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "names",
            "description": "Names of datastores to return.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "searchText",
            "description": "Text to search for in the datastore names.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "Order by property (createdtime | modifiedtime | name).",
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderByAsc",
            "description": "Order by property in ascending order.",
            "type": "boolean",
            "default": false
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List datastores.": {
            "$ref": "./examples/Datastore/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}": {
      "delete": {
        "tags": [
          "Datastore"
        ],
        "summary": "Delete datastore.",
        "operationId": "Datastores_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete datastore.": {
            "$ref": "./examples/Datastore/delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "Datastore"
        ],
        "summary": "Get datastore.",
        "operationId": "Datastores_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResource"
            }
          }
        },
        "x-ms-examples": {
          "Get datastore.": {
            "$ref": "./examples/Datastore/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Datastore"
        ],
        "summary": "Create or update datastore.",
        "operationId": "Datastores_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Datastore entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResource"
            }
          }
        },
        "x-ms-examples": {
          "Create or update datastore.": {
            "$ref": "./examples/Datastore/createOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}/listSecrets": {
      "post": {
        "tags": [
          "Datastore"
        ],
        "summary": "Get datastore secrets.",
        "operationId": "Datastores_ListSecrets",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastoreCredentials"
            }
          }
        },
        "x-ms-examples": {
          "Get datastore secrets.": {
            "$ref": "./examples/Datastore/listSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}/versions/{version}": {
      "put": {
        "tags": [
          "DataVersion"
        ],
        "summary": "Create or update version.",
        "operationId": "DataVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataVersionResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataVersionResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Data Version.": {
            "$ref": "./examples/DataVersion/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "DataVersion"
        ],
        "summary": "Get version.",
        "operationId": "DataVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Data Version.": {
            "$ref": "./examples/DataVersion/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DataVersion"
        ],
        "summary": "Delete version.",
        "operationId": "DataVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Data Version.": {
            "$ref": "./examples/DataVersion/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}/versions": {
      "get": {
        "tags": [
          "DataVersion"
        ],
        "summary": "List versions.",
        "operationId": "DataVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataVersionResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Data Version.": {
            "$ref": "./examples/DataVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}": {
      "put": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "EnvironmentContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Environment Container.": {
            "$ref": "./examples/EnvironmentContainer/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "Get container.",
        "operationId": "EnvironmentContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Environment Container.": {
            "$ref": "./examples/EnvironmentContainer/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "Delete container.",
        "operationId": "EnvironmentContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Environment Container.": {
            "$ref": "./examples/EnvironmentContainer/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments": {
      "get": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "List containers.",
        "operationId": "EnvironmentContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Environment Container.": {
            "$ref": "./examples/EnvironmentContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}/versions/{version}": {
      "put": {
        "tags": [
          "EnvironmentSpecification"
        ],
        "summary": "Creates or updates an EnvironmentSpecificationVersion.",
        "operationId": "EnvironmentSpecificationVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Name of EnvironmentSpecificationVersion.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version of EnvironmentSpecificationVersion.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Definition of EnvironmentSpecificationVersion.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentSpecificationVersionResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentSpecificationVersionResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentSpecificationVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Environment Specification Version.": {
            "$ref": "./examples/EnvironmentSpecificationVersion/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "EnvironmentSpecification"
        ],
        "summary": "Get version.",
        "operationId": "EnvironmentSpecificationVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentSpecificationVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Environment Specification Version.": {
            "$ref": "./examples/EnvironmentSpecificationVersion/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "EnvironmentSpecification"
        ],
        "summary": "Delete version.",
        "operationId": "EnvironmentSpecificationVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Environment Specification Version.": {
            "$ref": "./examples/EnvironmentSpecificationVersion/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}/versions": {
      "get": {
        "tags": [
          "EnvironmentSpecification"
        ],
        "summary": "List versions.",
        "operationId": "EnvironmentSpecificationVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentSpecificationVersionResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Environment Specification Version.": {
            "$ref": "./examples/EnvironmentSpecificationVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs/{id}": {
      "put": {
        "tags": [
          "Job"
        ],
        "summary": "Creates and executes a Job.",
        "operationId": "Jobs_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Job definition object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Command Job.": {
            "$ref": "./examples/CommandJob/createOrUpdate.json"
          },
          "CreateOrUpdate Sweep Job.": {
            "$ref": "./examples/SweepJob/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Gets a Job by name/id.",
        "operationId": "Jobs_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Command Job.": {
            "$ref": "./examples/CommandJob/get.json"
          },
          "Get Sweep Job.": {
            "$ref": "./examples/SweepJob/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Job"
        ],
        "summary": "Deletes a Job.",
        "operationId": "Jobs_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "204": {
            "description": "Success"
          },
          "202": {
            "description": "Success",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "200": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Command Job.": {
            "$ref": "./examples/CommandJob/delete.json"
          },
          "Delete Sweep Job.": {
            "$ref": "./examples/SweepJob/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Lists Jobs in the workspace.",
        "operationId": "Jobs_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "jobType",
            "description": "Type of job to be returned.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "tags",
            "description": "Tags for job to be returned.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "tag",
            "description": "Jobs returned will have this tag key.",
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JobBaseResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Command Job.": {
            "$ref": "./examples/CommandJob/list.json"
          },
          "List Sweep Job.": {
            "$ref": "./examples/SweepJob/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs/{id}/cancel": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Cancels a Job.",
        "operationId": "Jobs_Cancel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Cancel Command Job.": {
            "$ref": "./examples/CommandJob/cancel.json"
          },
          "Cancel Sweep Job.": {
            "$ref": "./examples/SweepJob/cancel.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}": {
      "put": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Creates or updates a labeling job.",
        "operationId": "LabelingJobs_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "LabelingJob definition object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabelingJobResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LabelingJobResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LabelingJobResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Labeling Job.": {
            "$ref": "./examples/LabelingJob/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Gets a labeling job by name/id.",
        "operationId": "LabelingJobs_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "in": "query",
            "name": "includeJobInstructions",
            "description": "Boolean value to indicate whether to include JobInstructions in response.",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeLabelCategories",
            "description": "Boolean value to indicate Whether to include LabelCategories in response.",
            "type": "boolean"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LabelingJobResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Labeling Job.": {
            "$ref": "./examples/LabelingJob/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Delete a labeling job.",
        "operationId": "LabelingJobs_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Labeling Job.": {
            "$ref": "./examples/LabelingJob/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs": {
      "get": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Lists labeling jobs in the workspace.",
        "operationId": "LabelingJobs_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Number of labeling jobs to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LabelingJobResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Labeling Job.": {
            "$ref": "./examples/LabelingJob/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}/pause": {
      "post": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Pause a labeling job.",
        "operationId": "LabelingJobs_Pause",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Pause Labeling Job.": {
            "$ref": "./examples/LabelingJob/pause.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}/resume": {
      "post": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Resume a labeling job.",
        "operationId": "LabelingJobs_Resume",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Success",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          }
        },
        "x-ms-examples": {
          "Resume Labeling Job.": {
            "$ref": "./examples/LabelingJob/resume.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}/exportLabels": {
      "post": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Export labels from a labeling job.",
        "operationId": "LabelingJobs_ExportLabels",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The export summary.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportSummary"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExportSummary"
            }
          },
          "202": {
            "description": "Success",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          }
        },
        "x-ms-examples": {
          "ExportLabels Labeling Job.": {
            "$ref": "./examples/LabelingJob/exportLabels.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models": {
      "get": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "List model containers.",
        "operationId": "ModelContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Maximum number of results to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Model Container.": {
            "$ref": "./examples/ModelContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}": {
      "put": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "ModelContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Model Container.": {
            "$ref": "./examples/ModelContainer/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Get container.",
        "operationId": "ModelContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Model Container.": {
            "$ref": "./examples/ModelContainer/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Delete container.",
        "operationId": "ModelContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Model Container.": {
            "$ref": "./examples/ModelContainer/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions": {
      "get": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "List model versions.",
        "operationId": "ModelVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Model name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Maximum number of records to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Model version.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Model description.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Number of initial results to skip.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "tags",
            "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
            "type": "string"
          },
          {
            "in": "query",
            "name": "properties",
            "description": "Comma-separated list of property names (and optionally values). Example: prop1,prop2=value2",
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Model Version.": {
            "$ref": "./examples/ModelVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions/{version}": {
      "put": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Create or update version.",
        "operationId": "ModelVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Model Version.": {
            "$ref": "./examples/ModelVersion/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Get version.",
        "operationId": "ModelVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Model Version.": {
            "$ref": "./examples/ModelVersion/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Delete version.",
        "operationId": "ModelVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Model Version.": {
            "$ref": "./examples/ModelVersion/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments": {
      "get": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "List Inference Endpoint Deployments.",
        "operationId": "OnlineDeployments_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "in": "query",
            "name": "$orderBy",
            "description": "Ordering of list.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Top of list.",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Delete Inference Endpoint Deployment.",
        "operationId": "OnlineDeployments_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference Endpoint Deployment name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          },
          "202": {
            "description": "Success",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          }
        },
        "x-ms-examples": {
          "Delete Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Get Inference Deployment Deployment.",
        "operationId": "OnlineDeployments_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference Endpoint Deployment name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Create or update Inference Endpoint Deployment.",
        "operationId": "OnlineDeployments_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference Endpoint Deployment name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Inference Endpoint entity to apply during operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Update Online Deployment.",
        "operationId": "OnlineDeployments_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference Endpoint Deployment name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Online Endpoint entity to apply during operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialOnlineDeploymentPartialTrackedResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            }
          },
          "202": {
            "description": "Success",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          }
        },
        "x-ms-examples": {
          "Update Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/update.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}/getLogs": {
      "post": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Polls an Endpoint operation.",
        "operationId": "OnlineDeployments_GetLogs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "The name and identifier for the endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The request containing parameters for retrieving logs.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentLogsRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeploymentLogs"
            }
          }
        },
        "x-ms-examples": {
          "GetLogs Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/getLogs.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints": {
      "get": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "List Online Endpoints.",
        "operationId": "OnlineEndpoints_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "in": "query",
            "name": "name",
            "description": "Name of the endpoint.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Number of endpoints to be retrieved in a page of results.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "computeType",
            "description": "EndpointComputeType to be filtered by.",
            "type": "string",
            "enum": [
              "Managed",
              "AKS",
              "AzureMLCompute"
            ],
            "x-ms-enum": {
              "name": "EndpointComputeType",
              "modelAsString": true
            }
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "in": "query",
            "name": "tags",
            "description": "A set of tags with which to filter the returned models. It is a comma separated string of tags key or tags key=value. Example: tagKey1,tagKey2,tagKey3=value3 .",
            "type": "string"
          },
          {
            "in": "query",
            "name": "properties",
            "description": "A set of properties with which to filter the returned models. It is a comma separated string of properties key and/or properties key=value Example: propKey1,propKey2,propKey3=value3 .",
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The option to order the response.",
            "type": "string",
            "enum": [
              "CreatedAtDesc",
              "CreatedAtAsc",
              "UpdatedAtDesc",
              "UpdatedAtAsc"
            ],
            "x-ms-enum": {
              "name": "OrderString",
              "modelAsString": true
            }
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Online Endpoint.": {
            "$ref": "./examples/OnlineEndpoint/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}": {
      "delete": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Delete Online Endpoint.",
        "operationId": "OnlineEndpoints_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "204": {
            "description": "Success"
          },
          "202": {
            "description": "Success",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          },
          "200": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Online Endpoint.": {
            "$ref": "./examples/OnlineEndpoint/delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Get Online Endpoint.",
        "operationId": "OnlineEndpoints_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Online Endpoint.": {
            "$ref": "./examples/OnlineEndpoint/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Create or update Online Endpoint.",
        "operationId": "OnlineEndpoints_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Online Endpoint entity to apply during operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Online Endpoint.": {
            "$ref": "./examples/OnlineEndpoint/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Update Online Endpoint.",
        "operationId": "OnlineEndpoints_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Online Endpoint entity to apply during operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialOnlineEndpointPartialTrackedResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            }
          },
          "202": {
            "description": "Success",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          }
        },
        "x-ms-examples": {
          "Update Online Endpoint.": {
            "$ref": "./examples/OnlineEndpoint/update.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/regenerateKeys": {
      "post": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Regenerate EndpointAuthKeys for an Endpoint using Key-based authentication.",
        "operationId": "OnlineEndpoints_RegenerateKeys",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "RegenerateKeys request .",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateEndpointKeysRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Success",
            "headers": {
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "type": "string"
              },
              "Retry-After": {
                "description": "Duration the client should wait between requests, in seconds.",
                "type": "integer",
                "format": "int32",
                "maximum": 600,
                "minimum": 10
              }
            }
          }
        },
        "x-ms-examples": {
          "RegenerateKeys Online Endpoint.": {
            "$ref": "./examples/OnlineEndpoint/regenerateKeys.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/listKeys": {
      "post": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "List EndpointAuthKeys for an Endpoint using Key-based authentication.",
        "operationId": "OnlineEndpoints_ListKeys",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EndpointAuthKeys"
            }
          }
        },
        "x-ms-examples": {
          "ListKeys Online Endpoint.": {
            "$ref": "./examples/OnlineEndpoint/listKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/token": {
      "post": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Retrieve a valid AAD token for an Endpoint using AMLToken-based authentication.",
        "operationId": "OnlineEndpoints_GetToken",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EndpointAuthToken"
            }
          }
        },
        "x-ms-examples": {
          "GetToken Online Endpoint.": {
            "$ref": "./examples/OnlineEndpoint/getToken.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/schedules/{name}": {
      "put": {
        "tags": [
          "Schedule"
        ],
        "summary": "Create or update schedule.",
        "operationId": "Schedules_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Schedule name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Schedule definition.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScheduleBaseResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ScheduleBaseResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ScheduleBaseResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Schedule.": {
            "$ref": "./examples/Schedule/createOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Schedule"
        ],
        "summary": "Delete schedule.",
        "operationId": "Schedules_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Schedule name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Schedule.": {
            "$ref": "./examples/Schedule/delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Get schedule.",
        "operationId": "Schedules_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Schedule name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ScheduleBaseResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Schedule.": {
            "$ref": "./examples/Schedule/get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/schedules": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "List schedules in specified workspace.",
        "operationId": "Schedules_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/APIVersionParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "machineLearningServices.json#/definitions/MachineLearningServiceError"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ScheduleBaseResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Schedules.": {
            "$ref": "./examples/Schedule/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "CodeContainer": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "CodeContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/CodeContainer",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-azure-resource": true,
      "additionalProperties": false
    },
    "CodeContainerResourceArmPaginatedResult": {
      "description": "A paginated list of CodeContainer entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type CodeContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeContainerResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "AssetPath": {
      "description": "Details of an AssetUri.",
      "required": [
        "path"
      ],
      "type": "object",
      "properties": {
        "path": {
          "description": "The path of file/directory.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "isDirectory": {
          "description": "Whether the path defines a directory or a single file.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "AssetGenerator": {
      "description": "The target that initiated generation of this asset",
      "enum": [
        "User",
        "System"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "AssetGenerator",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "CodeVersion": {
      "description": "Details of an RegisteredCode",
      "type": "object",
      "properties": {
        "datastoreId": {
          "description": "The asset datastoreId",
          "type": "string"
        },
        "assetPath": {
          "description": "DEPRECATED - use Microsoft.MachineLearning.ManagementFrontEnd.Contracts.Assets.Asset.Path instead",
          "$ref": "#/definitions/AssetPath"
        },
        "path": {
          "description": "The path of the file/directory.",
          "type": "string"
        },
        "generatedBy": {
          "description": "If the name version are system generated (anonymous registration) or user generated.",
          "$ref": "#/definitions/AssetGenerator",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "CodeVersionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/CodeVersion",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-azure-resource": true,
      "additionalProperties": false
    },
    "CodeVersionResourceArmPaginatedResult": {
      "description": "A paginated list of CodeVersion entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type CodeVersion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeVersionResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ComponentContainer": {
      "type": "object",
      "properties": {
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "ComponentContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/ComponentContainer",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-azure-resource": true,
      "additionalProperties": false
    },
    "ComponentContainerResourceArmPaginatedResult": {
      "description": "A paginated list of ComponentContainer entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type ComponentContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComponentContainerResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "CodeConfiguration": {
      "required": [
        "command"
      ],
      "type": "object",
      "properties": {
        "codeArtifactId": {
          "description": "The ID of the code asset.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "command": {
          "description": "The command to execute on startup of the job. eg. [\"python\", \"train.py\"]",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "ComponentType": {
      "enum": [
        "CommandComponent"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ComponentType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "ComponentInputType": {
      "enum": [
        "Generic",
        "RangedNumber",
        "Enum"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ComponentInputType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "ComponentInput": {
      "required": [
        "dataType",
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of ComponentInput.",
          "$ref": "#/definitions/ComponentInputType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "optional": {
          "description": "If the input is optional. Defaults to false/required.",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "description": {
          "description": "Description for input.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "default": {
          "description": "Default value for an input. Must match the given type.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dataType": {
          "description": "Component input type. String is used for type extensibility.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "type",
      "additionalProperties": false
    },
    "ComponentInputRangedNumber": {
      "required": [
        "dataType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ComponentInput"
        }
      ],
      "properties": {
        "min": {
          "description": "The minimum value that can be accepted, used to validate the inputs for type float/int.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "max": {
          "description": "The maximum value that can be accepted, used to validate the inputs for type float/int.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "RangedNumber",
      "additionalProperties": false
    },
    "ComponentInputEnum": {
      "required": [
        "dataType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ComponentInput"
        }
      ],
      "properties": {
        "enum": {
          "description": "The enum definition list for enum types, used to validate the inputs for type enum.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "Enum",
      "additionalProperties": false
    },
    "ComponentInputGeneric": {
      "required": [
        "dataType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ComponentInput"
        }
      ],
      "x-ms-discriminator-value": "Generic",
      "additionalProperties": false
    },
    "ComponentOutput": {
      "required": [
        "dataType"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Description for output.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dataType": {
          "description": "Component output type. String is used for type extensibility.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "Component": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Component Type, should match the schema.",
          "$ref": "#/definitions/ComponentType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "displayName": {
          "description": "DisplayName of the component on the UI. Defaults to same as name.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "isDeterministic": {
          "description": "Whether or not its deterministic. Defaults to true.",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "inputs": {
          "description": "Defines input ports of the component. The string key is the name of input, which should be a valid Python variable name.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ComponentInput"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "outputs": {
          "description": "Defines output ports of the component. The string key is the name of Output, which should be a valid Python variable name.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ComponentOutput"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "ComponentVersion": {
      "required": [
        "codeConfiguration"
      ],
      "type": "object",
      "properties": {
        "environmentId": {
          "description": "Environment configuration of the component.",
          "type": "string",
          "example": "\"/subscriptions/{{subscriptionId}}/resourceGroups/{{resourceGroup}}/providers/Microsoft.MachineLearningServices/workspaces/{{workspaceName}}/Environments/AzureML-Minimal\"",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "codeConfiguration": {
          "description": "Code configuration of the job. Includes CodeArtifactId and Command.",
          "$ref": "#/definitions/CodeConfiguration",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "component": {
          "description": "Component definition details.",
          "$ref": "#/definitions/Component",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "generatedBy": {
          "description": "If the name version are system generated (anonymous registration) or user generated.",
          "$ref": "#/definitions/AssetGenerator",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "ComponentVersionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/ComponentVersion",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-azure-resource": true,
      "additionalProperties": false
    },
    "ComponentVersionResourceArmPaginatedResult": {
      "description": "A paginated list of ComponentVersion entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type ComponentVersion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComponentVersionResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "DataContainer": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "DataContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/DataContainer",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-azure-resource": true,
      "additionalProperties": false
    },
    "DataContainerResourceArmPaginatedResult": {
      "description": "A paginated list of DataContainer entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type DataContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataContainerResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ContentsType": {
      "enum": [
        "AzureBlob",
        "AzureDataLake",
        "AzureDataLakeGen2",
        "AzureFile",
        "AzureMySql",
        "AzurePostgreSql",
        "AzureSqlDatabase",
        "GlusterFs"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ContentsType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "CredentialsType": {
      "enum": [
        "AccountKey",
        "Certificate",
        "None",
        "Sas",
        "ServicePrincipal",
        "SqlAdmin"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "CredentialsType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "AccountKeySection": {
      "type": "object",
      "properties": {
        "key": {
          "description": "Storage account key.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      },
      "additionalProperties": false
    },
    "CertificateSection": {
      "required": [
        "clientId",
        "tenantId",
        "thumbprint"
      ],
      "type": "object",
      "properties": {
        "authorityUrl": {
          "description": "Authority URL used for authentication.",
          "type": "string"
        },
        "resourceUri": {
          "description": "Resource the service principal has access to.",
          "type": "string"
        },
        "tenantId": {
          "format": "uuid",
          "description": "ID of the tenant to which the service principal belongs.",
          "type": "string"
        },
        "clientId": {
          "format": "uuid",
          "description": "Service principal client ID.",
          "type": "string"
        },
        "certificate": {
          "description": "Service principal certificate.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        },
        "thumbprint": {
          "description": "Thumbprint of the certificate used for authentication.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "SasSection": {
      "type": "object",
      "properties": {
        "sasToken": {
          "description": "Storage container SAS token.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      },
      "additionalProperties": false
    },
    "ServicePrincipalSection": {
      "required": [
        "clientId",
        "tenantId"
      ],
      "type": "object",
      "properties": {
        "authorityUrl": {
          "description": "Authority URL used for authentication.",
          "type": "string"
        },
        "resourceUri": {
          "description": "Resource the service principal has access to.",
          "type": "string"
        },
        "tenantId": {
          "format": "uuid",
          "description": "ID of the tenant to which the service principal belongs.",
          "type": "string"
        },
        "clientId": {
          "format": "uuid",
          "description": "Service principal client ID.",
          "type": "string"
        },
        "clientSecret": {
          "description": "Service principal secret.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      },
      "additionalProperties": false
    },
    "SqlAdminSection": {
      "required": [
        "userId"
      ],
      "type": "object",
      "properties": {
        "userId": {
          "description": "SQL database user name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "password": {
          "description": "SQL database password.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      },
      "additionalProperties": false
    },
    "DatastoreCredentials": {
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "Credential type used to authentication with storage.",
          "$ref": "#/definitions/CredentialsType"
        },
        "accountKey": {
          "description": "Storage account key authentication.",
          "$ref": "#/definitions/AccountKeySection"
        },
        "certificate": {
          "description": "Service principal certificate authentication.",
          "$ref": "#/definitions/CertificateSection"
        },
        "sas": {
          "description": "Storage container SAS token authentication.",
          "$ref": "#/definitions/SasSection"
        },
        "servicePrincipal": {
          "description": "Service principal password authentication.",
          "$ref": "#/definitions/ServicePrincipalSection"
        },
        "sqlAdmin": {
          "description": "SQL user/password authentication.",
          "$ref": "#/definitions/SqlAdminSection"
        }
      },
      "additionalProperties": false
    },
    "AzureDataLakeSection": {
      "required": [
        "credentials",
        "storeName"
      ],
      "type": "object",
      "properties": {
        "credentials": {
          "description": "Azure Data Lake credentials.",
          "$ref": "#/definitions/DatastoreCredentials"
        },
        "storeName": {
          "description": "Azure Data Lake store name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "AzureMySqlSection": {
      "required": [
        "credentials",
        "databaseName",
        "endpoint",
        "portNumber",
        "serverName"
      ],
      "type": "object",
      "properties": {
        "credentials": {
          "description": "Azure SQL database credentials.",
          "$ref": "#/definitions/DatastoreCredentials"
        },
        "databaseName": {
          "description": "Azure SQL database name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "endpoint": {
          "description": "Azure cloud endpoint for the database.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "example": "database.windows.net",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "portNumber": {
          "format": "int32",
          "description": "Azure SQL server port.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "serverName": {
          "description": "Azure SQL server name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "AzurePostgreSqlSection": {
      "required": [
        "credentials",
        "databaseName",
        "endpoint",
        "portNumber",
        "serverName"
      ],
      "type": "object",
      "properties": {
        "enableSSL": {
          "description": "Whether the Azure PostgreSQL server requires SSL.",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "credentials": {
          "description": "Azure SQL database credentials.",
          "$ref": "#/definitions/DatastoreCredentials"
        },
        "databaseName": {
          "description": "Azure SQL database name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "endpoint": {
          "description": "Azure cloud endpoint for the database.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "example": "database.windows.net",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "portNumber": {
          "format": "int32",
          "description": "Azure SQL server port.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "serverName": {
          "description": "Azure SQL server name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "AzureSqlDatabaseSection": {
      "required": [
        "credentials",
        "databaseName",
        "endpoint",
        "portNumber",
        "serverName"
      ],
      "type": "object",
      "properties": {
        "credentials": {
          "description": "Azure SQL database credentials.",
          "$ref": "#/definitions/DatastoreCredentials"
        },
        "databaseName": {
          "description": "Azure SQL database name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "endpoint": {
          "description": "Azure cloud endpoint for the database.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "example": "database.windows.net",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "portNumber": {
          "format": "int32",
          "description": "Azure SQL server port.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "serverName": {
          "description": "Azure SQL server name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "AzureStorageSection": {
      "required": [
        "accountName",
        "containerName",
        "credentials",
        "endpoint",
        "protocol"
      ],
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Storage account name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "blobCacheTimeout": {
          "format": "int32",
          "description": "Blob storage cache timeout.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "containerName": {
          "description": "Storage account container name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "credentials": {
          "description": "Storage account credentials.",
          "$ref": "#/definitions/DatastoreCredentials"
        },
        "endpoint": {
          "description": "Azure cloud endpoint for the storage account.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "example": "core.windows.net",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "protocol": {
          "description": "Protocol used to communicate with the storage account.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "example": "https",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "GlusterFsSection": {
      "required": [
        "serverAddress",
        "volumeName"
      ],
      "type": "object",
      "properties": {
        "serverAddress": {
          "description": "GlusterFS server address (can be the IP address or server name).",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "volumeName": {
          "description": "GlusterFS volume name.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "DatastoreContents": {
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "Storage type backing the datastore.",
          "$ref": "#/definitions/ContentsType"
        },
        "azureDataLake": {
          "description": "Azure Data Lake (Gen1/2) storage information.",
          "$ref": "#/definitions/AzureDataLakeSection"
        },
        "azureMySql": {
          "description": "Azure Database for MySQL information.",
          "$ref": "#/definitions/AzureMySqlSection"
        },
        "azurePostgreSql": {
          "description": "Azure Database for PostgreSQL information.",
          "$ref": "#/definitions/AzurePostgreSqlSection"
        },
        "azureSqlDatabase": {
          "description": "Azure SQL Database information.",
          "$ref": "#/definitions/AzureSqlDatabaseSection"
        },
        "azureStorage": {
          "description": "Azure storage account (blobs, files) information.",
          "$ref": "#/definitions/AzureStorageSection"
        },
        "glusterFs": {
          "description": "GlusterFS volume information.",
          "$ref": "#/definitions/GlusterFsSection"
        }
      },
      "additionalProperties": false
    },
    "OriginType": {
      "enum": [
        "Synapse"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "OriginType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "LinkedInfo": {
      "type": "object",
      "properties": {
        "linkedId": {
          "description": "Linked service ID.",
          "type": "string"
        },
        "linkedResourceName": {
          "description": "Linked service resource name.",
          "type": "string"
        },
        "origin": {
          "description": "Type of the linked service.",
          "$ref": "#/definitions/OriginType"
        }
      },
      "additionalProperties": false
    },
    "DatastoreProperties": {
      "required": [
        "contents"
      ],
      "type": "object",
      "properties": {
        "contents": {
          "description": "Reference to the datastore storage contents.",
          "$ref": "#/definitions/DatastoreContents"
        },
        "hasBeenValidated": {
          "description": "Whether the service has validated access to the datastore with the provided credentials.",
          "type": "boolean",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "isDefault": {
          "description": "Whether this datastore is the default for the workspace.",
          "type": "boolean"
        },
        "linkedInfo": {
          "description": "Information about the datastore origin, if linked.",
          "$ref": "#/definitions/LinkedInfo"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "DatastorePropertiesResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/DatastoreProperties",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-azure-resource": true,
      "additionalProperties": false
    },
    "DatastorePropertiesResourceArmPaginatedResult": {
      "description": "A paginated list of DatastoreProperties entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type DatastoreProperties.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatastorePropertiesResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "DatasetType": {
      "enum": [
        "Simple",
        "Dataflow"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DatasetType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "DataVersion": {
      "description": "Details of an DatasetDto",
      "type": "object",
      "properties": {
        "datasetType": {
          "description": "The Format of dataset.",
          "$ref": "#/definitions/DatasetType"
        },
        "datastoreId": {
          "description": "The asset datastoreId",
          "type": "string"
        },
        "assetPath": {
          "description": "DEPRECATED - use Microsoft.MachineLearning.ManagementFrontEnd.Contracts.Assets.Asset.Path instead",
          "$ref": "#/definitions/AssetPath"
        },
        "path": {
          "description": "The path of the file/directory.",
          "type": "string"
        },
        "generatedBy": {
          "description": "If the name version are system generated (anonymous registration) or user generated.",
          "$ref": "#/definitions/AssetGenerator",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "DataVersionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/DataVersion",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-azure-resource": true,
      "additionalProperties": false
    },
    "DataVersionResourceArmPaginatedResult": {
      "description": "A paginated list of DataVersion entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type DataVersion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataVersionResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "EnvironmentContainer": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "EnvironmentContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/EnvironmentContainer",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-azure-resource": true,
      "additionalProperties": false
    },
    "EnvironmentContainerResourceArmPaginatedResult": {
      "description": "A paginated list of EnvironmentContainer entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type EnvironmentContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentContainerResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "EnvironmentSpecificationType": {
      "description": "Environment specification is either user created or curated by Azure ML service",
      "enum": [
        "Curated",
        "UserCreated"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EnvironmentSpecificationType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "DockerSpecificationType": {
      "description": "Docker specification must be either Build or Image",
      "enum": [
        "Build",
        "Image"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DockerSpecificationType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "OperatingSystemType": {
      "description": "The type of operating system.",
      "enum": [
        "Linux",
        "Windows"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "OperatingSystemType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "DockerImagePlatform": {
      "type": "object",
      "properties": {
        "operatingSystemType": {
          "description": "The OS type the Environment.",
          "$ref": "#/definitions/OperatingSystemType"
        }
      },
      "additionalProperties": false
    },
    "DockerSpecification": {
      "description": "Class to represent configuration settings for Docker",
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "Docker specification must be either Build or Image",
          "$ref": "#/definitions/DockerSpecificationType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "platform": {
          "description": "The platform information of the docker image.",
          "$ref": "#/definitions/DockerImagePlatform",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "type",
      "additionalProperties": false
    },
    "DockerImage": {
      "description": "Class to represent configuration settings for Docker Build",
      "required": [
        "dockerImageUri"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DockerSpecification"
        }
      ],
      "properties": {
        "dockerImageUri": {
          "description": "Image name of a custom base image.\r\n<seealso href=\"https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image\" />",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "Image",
      "additionalProperties": false
    },
    "DockerBuild": {
      "description": "Class to represent configuration settings for Docker Build",
      "required": [
        "dockerfile"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DockerSpecification"
        }
      ],
      "properties": {
        "dockerfile": {
          "description": "Docker command line instructions to assemble an image.\r\n<seealso href=\"https://repo2docker.readthedocs.io/en/latest/config_files.html#dockerfile-advanced-environments\" />",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "context": {
          "description": "Path to a snapshot of the Docker Context. This property is only valid if Dockerfile is specified.\r\nThe path is relative to the asset path which must contain a single Blob URI value.\r\nMicrosoft.MachineLearning.ManagementFrontEnd.Contracts.Assets.Asset.Path<seealso href=\"https://docs.docker.com/engine/context/working-with-contexts/\" />",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "Build",
      "additionalProperties": false
    },
    "Route": {
      "required": [
        "path",
        "port"
      ],
      "type": "object",
      "properties": {
        "path": {
          "description": "The path for the route.",
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "port": {
          "format": "int32",
          "description": "The port for the route.",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "InferenceContainerProperties": {
      "type": "object",
      "properties": {
        "livenessRoute": {
          "description": "The route to check the liveness of the inference server container.",
          "$ref": "#/definitions/Route"
        },
        "readinessRoute": {
          "description": "The route to check the readiness of the inference server container.",
          "$ref": "#/definitions/Route"
        },
        "scoringRoute": {
          "description": "The port to send the scoring requests to, within the inference server container.",
          "$ref": "#/definitions/Route"
        }
      },
      "additionalProperties": false
    },
    "EnvironmentSpecificationVersion": {
      "description": "Data Transfer Object (DTO) for an Execution Environment Specification. Name and\r\nversion should default to the AzureML-Minimal environment version tested with the\r\ncurrent SDK client version as this is a main use-case.\r\n<see href=\"https://repo2docker.readthedocs.io/en/latest/specification.html\" />",
      "type": "object",
      "properties": {
        "type": {
          "description": "Environment specification is either user managed or curated by the Azure ML service\r\n<see href=\"https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments\" />",
          "$ref": "#/definitions/EnvironmentSpecificationType",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "docker": {
          "$ref": "#/definitions/DockerSpecification"
        },
        "condaFile": {
          "description": "Standard configuration file used by conda that lets you install any kind of package, including Python, R, and C/C++ packages\r\n<see href=\"https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment\" />",
          "type": "string"
        },
        "inferenceContainerProperties": {
          "description": "Defines configuration specific to inference.",
          "$ref": "#/definitions/InferenceContainerProperties"
        },
        "generatedBy": {
          "description": "If the name version are system generated (anonymous registration) or user generated.",
          "$ref": "#/definitions/AssetGenerator",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "EnvironmentSpecificationVersionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/EnvironmentSpecificationVersion",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-azure-resource": true,
      "additionalProperties": false
    },
    "EnvironmentSpecificationVersionResourceArmPaginatedResult": {
      "description": "A paginated list of EnvironmentSpecificationVersion entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type EnvironmentSpecificationVersion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentSpecificationVersionResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "JobType": {
      "enum": [
        "Command",
        "Sweep",
        "Labeling",
        "Pipeline",
        "Data",
        "AutoML"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "JobType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "JobStatus": {
      "description": "The status of a job.",
      "enum": [
        "NotStarted",
        "Starting",
        "Provisioning",
        "Preparing",
        "Queued",
        "Running",
        "Finalizing",
        "CancelRequested",
        "Completed",
        "Failed",
        "Canceled",
        "NotResponding",
        "Paused"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "JobStatus",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "OptimizationMetric": {
      "enum": [
        "AUC_weighted",
        "Accuracy",
        "Norm_macro_recall",
        "Average_precision_score_weighted",
        "Precision_score_weighted",
        "Spearman_correlation",
        "Normalized_root_mean_squared_error",
        "R2_score",
        "Normalized_mean_absolute_error",
        "Normalized_root_mean_squared_log_error"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "OptimizationMetric",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "TaskType": {
      "description": "Experiment Task type.",
      "enum": [
        "Classification",
        "Regression",
        "Forecasting"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "TaskType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "GeneralSettings": {
      "description": "General Settings to submit an AutoML Job.",
      "type": "object",
      "properties": {
        "primaryMetric": {
          "description": "Primary optimization metric",
          "$ref": "#/definitions/OptimizationMetric"
        },
        "enableModelExplainability": {
          "description": "Flag to turn on explainability on best model.",
          "type": "boolean"
        },
        "taskType": {
          "description": "Type of AutoML Experiment [Classification, Regression, Forecasting]",
          "$ref": "#/definitions/TaskType"
        }
      },
      "additionalProperties": false
    },
    "ExperimentLimits": {
      "description": "Limit settings on AutoML Experiment.",
      "type": "object",
      "properties": {
        "maxTrials": {
          "format": "int32",
          "description": "Number of iterations.",
          "type": "integer"
        },
        "experimentTimeoutInMinutes": {
          "format": "int32",
          "description": "Experiment Timeout",
          "type": "integer"
        },
        "maxConcurrentTrials": {
          "format": "int32",
          "description": "Maximum Concurrent iterations",
          "type": "integer"
        },
        "maxCoresPerTrial": {
          "format": "int32",
          "description": "Max cores per iteration.",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "TrainingDataSettings": {
      "description": "Dataset datamodel.\r\nThis is the class represents the Dataset Json string structure that passed into Jasmine.",
      "type": "object",
      "properties": {
        "datasetArmId": {
          "description": "The Dataset Arm Id.",
          "type": "string"
        },
        "targetColumnName": {
          "description": "Label column name.",
          "type": "string"
        },
        "weightColumnName": {
          "description": "Weight column name.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ValidationDataSettings": {
      "type": "object",
      "properties": {
        "datasetArmId": {
          "description": "Dataset Arm id..",
          "type": "string"
        },
        "nCrossValidations": {
          "format": "int32",
          "description": "Number of cross validation folds to be applied on training dataset\r\nwhen validation dataset is not provided.",
          "type": "integer"
        },
        "validationSize": {
          "format": "double",
          "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided.",
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "DataSettings": {
      "description": "This class represents the Dataset Json that is passed into Jasmine for training.",
      "type": "object",
      "properties": {
        "trainingData": {
          "description": "The training_data",
          "$ref": "#/definitions/TrainingDataSettings"
        },
        "validationData": {
          "description": "The validation_data",
          "$ref": "#/definitions/ValidationDataSettings"
        }
      },
      "additionalProperties": false
    },
    "FeaturizationSettings": {
      "description": "Featurization Configuration",
      "type": "object",
      "properties": {
        "featurizationConfig": {
          "description": "Featurization config json string.",
          "type": "string"
        },
        "enableDnnFeaturization": {
          "description": "Enable Dnn featurization.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "ForecastingSettings": {
      "description": "Forecasting specific parameters.",
      "type": "object",
      "properties": {
        "forecastingCountryOrRegion": {
          "description": "Country or region for holidays for forecasting tasks.\r\nThese should be ISO 3166 two-letter country/region codes, for example 'US' or 'GB'.",
          "type": "string"
        },
        "timeColumnName": {
          "description": "Time column name",
          "type": "string"
        },
        "targetLags": {
          "description": "Target Lags.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "targetRollingWindowSize": {
          "format": "int32",
          "description": "Forecasting Window Size",
          "type": "integer"
        },
        "forecastHorizon": {
          "format": "int32",
          "description": "Forecasting Horizon.",
          "type": "integer"
        },
        "timeSeriesIdColumnNames": {
          "description": "Time series column names",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enableDnnTraining": {
          "description": "Enable recommendation of DNN models.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "TrainingSettings": {
      "description": "Training related configuration.",
      "type": "object",
      "properties": {
        "trialTimeoutInMinutes": {
          "format": "int32",
          "description": "Iteration Timeout",
          "type": "integer"
        },
        "blockListModels": {
          "description": "List of Algorithms/Models to be blocked for training.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowListModels": {
          "description": "List of Algorithms/Models to be Allowed for training.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "experimentExitScore": {
          "format": "double",
          "description": "Exit score for the AutoML experiment.",
          "type": "number"
        },
        "enableEarlyTermination": {
          "description": "Enable early termination.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "ComputeBinding": {
      "description": "Compute binding definition.",
      "type": "object",
      "properties": {
        "computeId": {
          "description": "Resource ID of the compute resource.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "nodeCount": {
          "format": "int32",
          "description": "Number of nodes.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "isLocal": {
          "description": "Set to true for jobs running on local compute.",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "JobOutput": {
      "type": "object",
      "properties": {
        "datastoreId": {
          "description": "ARM ID of the datastore where the job logs and artifacts are stored, or null for the default container (\"azureml\") in the workspace's storage account.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "path": {
          "description": "Path within the datastore to the job logs and artifacts.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "JobProvisioningState": {
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "InProgress"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "JobProvisioningState",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "JobBase": {
      "description": "Job base definition",
      "required": [
        "jobType"
      ],
      "type": "object",
      "properties": {
        "jobType": {
          "description": "Specifies the type of job.",
          "$ref": "#/definitions/JobType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/JobProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "interactionEndpoints": {
          "description": "Dictionary of endpoint URIs, keyed by enumerated job endpoints.\r\nFor local jobs, a job endpoint will have a value of FileStreamObject.",
          "type": "object",
          "properties": {
            "Tracking": {
              "format": "uri",
              "type": "string"
            },
            "Studio": {
              "format": "uri",
              "type": "string"
            },
            "Grafana": {
              "format": "uri",
              "type": "string"
            },
            "Tensorboard": {
              "format": "uri",
              "type": "string"
            },
            "Local": {
              "format": "uri",
              "type": "string"
            }
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "discriminator": "jobType",
      "additionalProperties": false
    },
    "ComputeJobBase": {
      "description": "Compute job base definition",
      "required": [
        "computeBinding",
        "jobType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobBase"
        }
      ],
      "properties": {
        "experimentName": {
          "description": "The name of the experiment the job belongs to. If not set, the job is placed in the \"Default\" experiment.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "computeBinding": {
          "description": "Compute binding for the job.",
          "$ref": "#/definitions/ComputeBinding",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "output": {
          "description": "Location of the job output logs and artifacts.",
          "$ref": "#/definitions/JobOutput",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "priority": {
          "format": "int32",
          "description": "Job priority for scheduling policy. Only applies to AMLCompute.\r\nPrivate preview  is only for whitelisted customers",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "jobType",
      "additionalProperties": false
    },
    "AutoMLJob": {
      "description": "AutoML Job definition",
      "required": [
        "computeBinding"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ComputeJobBase"
        }
      ],
      "properties": {
        "jobType": {
          "$ref": "#/definitions/JobType",
          "readOnly": true
        },
        "status": {
          "description": "Status of the job.",
          "$ref": "#/definitions/JobStatus",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "generalSettings": {
          "description": "General Settings",
          "$ref": "#/definitions/GeneralSettings"
        },
        "limitSettings": {
          "description": "Limit Settings",
          "$ref": "#/definitions/ExperimentLimits"
        },
        "dataSettings": {
          "description": "Collection of registered Tabular Dataset Ids required for training.",
          "$ref": "#/definitions/DataSettings"
        },
        "featurizationSettings": {
          "description": "Featurization related configuration.",
          "$ref": "#/definitions/FeaturizationSettings"
        },
        "forecastingSettings": {
          "description": "Forecasting experiment specific configuration.",
          "$ref": "#/definitions/ForecastingSettings"
        },
        "trainingSettings": {
          "description": "Advanced configuration settings for an AutoML Job.",
          "$ref": "#/definitions/TrainingSettings"
        }
      },
      "x-ms-discriminator-value": "AutoML",
      "additionalProperties": false
    },
    "DataBindingMode": {
      "description": "Describes how the data should be attached to the container.",
      "enum": [
        "Mount",
        "Download",
        "Upload"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DataBindingMode",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "DataBinding": {
      "description": "Data binding definition.",
      "type": "object",
      "properties": {
        "sourceDataReference": {
          "description": "Reference to source data artifact.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "localReference": {
          "description": "Location of data inside the container process.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "mode": {
          "description": "Mechanism for accessing the data artifact.",
          "$ref": "#/definitions/DataBindingMode",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "DistributionType": {
      "enum": [
        "PyTorch",
        "TensorFlow",
        "Mpi"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DistributionType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "DistributionConfiguration": {
      "required": [
        "distributionType"
      ],
      "type": "object",
      "properties": {
        "distributionType": {
          "description": "Specifies the type of distribution framework.",
          "$ref": "#/definitions/DistributionType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "distributionType",
      "additionalProperties": false
    },
    "TensorFlow": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DistributionConfiguration"
        }
      ],
      "properties": {
        "workerCount": {
          "format": "int32",
          "description": "Number of workers. Overwrites the node count in compute binding.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "parameterServerCount": {
          "format": "int32",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "TensorFlow",
      "additionalProperties": false
    },
    "Mpi": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DistributionConfiguration"
        }
      ],
      "properties": {
        "processCountPerInstance": {
          "format": "int32",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "Mpi",
      "additionalProperties": false
    },
    "PyTorch": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DistributionConfiguration"
        }
      ],
      "properties": {
        "processCount": {
          "format": "int32",
          "description": "Total process count for the distributed job.",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "PyTorch",
      "additionalProperties": false
    },
    "IdentityType": {
      "enum": [
        "Managed",
        "ServicePrincipal",
        "AMLToken"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "IdentityType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "IdentityConfiguration": {
      "required": [
        "identityType"
      ],
      "type": "object",
      "properties": {
        "identityType": {
          "description": "Specifies the type of identity framework.",
          "$ref": "#/definitions/IdentityType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "identityType",
      "additionalProperties": false
    },
    "AmlTokenConfiguration": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IdentityConfiguration"
        }
      ],
      "x-ms-discriminator-value": "AMLToken",
      "additionalProperties": false
    },
    "ManagedIdentityConfiguration": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IdentityConfiguration"
        }
      ],
      "properties": {
        "clientId": {
          "format": "uuid",
          "description": "Specifies a user-assigned identity by client ID. For system-assigned, do not set this field.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "objectId": {
          "format": "uuid",
          "description": "Specifies a user-assigned identity by object ID. For system-assigned, do not set this field.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "msiResourceId": {
          "description": "Specifies a user-assigned identity by resource ID. For system-assigned, do not set this field.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "Managed",
      "additionalProperties": false
    },
    "ServicePrincipalConfiguration": {
      "required": [
        "secret"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IdentityConfiguration"
        }
      ],
      "properties": {
        "secret": {
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-secret": true
        }
      },
      "x-ms-discriminator-value": "ServicePrincipal",
      "additionalProperties": false
    },
    "CommandJob": {
      "description": "Code Job definition",
      "required": [
        "codeConfiguration",
        "computeBinding"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ComputeJobBase"
        }
      ],
      "properties": {
        "jobType": {
          "$ref": "#/definitions/JobType",
          "readOnly": true
        },
        "status": {
          "description": "Status of the job.",
          "$ref": "#/definitions/JobStatus",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "maxRunDurationSeconds": {
          "format": "int64",
          "description": "The max run duration in seconds, after which the job will be cancelled.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "codeConfiguration": {
          "description": "Code configuration of the job.",
          "$ref": "#/definitions/CodeConfiguration",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "environmentId": {
          "description": "Environment specification of the job.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dataBindings": {
          "description": "Mapping of data bindings used in the job.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DataBinding"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "distributionConfiguration": {
          "$ref": "#/definitions/DistributionConfiguration"
        },
        "environmentVariables": {
          "description": "Environment variables included in the job.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "identityConfiguration": {
          "$ref": "#/definitions/IdentityConfiguration"
        },
        "parameters": {
          "description": "Input parameters.",
          "type": "object",
          "additionalProperties": {},
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "Command",
      "additionalProperties": false
    },
    "PipelineType": {
      "enum": [
        "AzureML"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "PipelineType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "InputData": {
      "type": "object",
      "properties": {
        "datasetId": {
          "description": "Dataset registration id.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "mode": {
          "description": "Mode type, can be set for DatasetId.",
          "$ref": "#/definitions/DataBindingMode",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "value": {
          "description": "Literal Value of a data binding. Example \"42\".",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "ComponentJobInput": {
      "type": "object",
      "properties": {
        "data": {
          "description": "Input data definition.",
          "$ref": "#/definitions/InputData",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "inputBinding": {
          "description": "Reference to an output of another job's ComponentJobInput or reference to a ComponentJobInput. Example \"input2\".",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "OutputData": {
      "type": "object",
      "properties": {
        "datasetName": {
          "description": "Output dataset name.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "datastore": {
          "description": "Datastore location for output data.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "datapath": {
          "description": "Path location within the datastore for output data.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "mode": {
          "description": "Mode type for data.",
          "$ref": "#/definitions/DataBindingMode",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "ComponentJobOutput": {
      "type": "object",
      "properties": {
        "data": {
          "description": "Output data definition.",
          "$ref": "#/definitions/OutputData",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "outputBinding": {
          "description": "This is to pull the ComponentJobOutput from the overall PipelineOutputs. Example \"outputPath\".",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "ComponentJob": {
      "type": "object",
      "properties": {
        "computeBinding": {
          "description": "Compute definition for job.",
          "$ref": "#/definitions/ComputeBinding",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "componentId": {
          "description": "Reference to component artifact.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "inputs": {
          "description": "Data input set for job.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ComponentJobInput"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "outputs": {
          "description": "Data output set for job.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ComponentJobOutput"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "PipelineInput": {
      "type": "object",
      "properties": {
        "data": {
          "description": "Input data definition.",
          "$ref": "#/definitions/InputData",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "PipelineOutput": {
      "type": "object",
      "properties": {
        "data": {
          "description": "Output data definition.",
          "$ref": "#/definitions/OutputData",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "Pipeline": {
      "type": "object",
      "properties": {
        "continueRunOnStepFailure": {
          "description": "Flag when set, continue pipeline execution if a step fails.",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "defaultDatastoreName": {
          "description": "Default datastore name shared by all pipeline jobs.",
          "type": "string"
        },
        "componentJobs": {
          "description": "JobDefinition set for PipelineStepJobs.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ComponentJob"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "inputs": {
          "description": "Data input set for jobs.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/PipelineInput"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "outputs": {
          "description": "Data output set for jobs.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/PipelineOutput"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "PipelineJob": {
      "description": "Pipeline Job definition",
      "required": [
        "computeBinding"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ComputeJobBase"
        }
      ],
      "properties": {
        "jobType": {
          "$ref": "#/definitions/JobType",
          "readOnly": true
        },
        "status": {
          "description": "Status of the job.",
          "$ref": "#/definitions/JobStatus",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "type": {
          "description": "Type of PipelineJob",
          "$ref": "#/definitions/PipelineType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "pipeline": {
          "description": "Pipeline details.",
          "$ref": "#/definitions/Pipeline",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "Pipeline",
      "additionalProperties": false
    },
    "ParameterSamplingType": {
      "enum": [
        "Grid",
        "Random",
        "Bayesian"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ParameterSamplingType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "ParameterSamplingConfiguration": {
      "description": "class for all hyperparameter sampling algorithms",
      "required": [
        "parameterSpace",
        "samplingType"
      ],
      "type": "object",
      "properties": {
        "parameterSpace": {
          "description": "A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter",
          "type": "object"
        },
        "samplingType": {
          "description": "Type of the hyperparameter sampling algorithms",
          "$ref": "#/definitions/ParameterSamplingType"
        }
      },
      "additionalProperties": false
    },
    "EarlyTerminationPolicyType": {
      "enum": [
        "Bandit",
        "MedianStopping",
        "TruncationSelection"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EarlyTerminationPolicyType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "EarlyTerminationPolicyConfiguration": {
      "description": "Early termination policies enable canceling poor-performing runs before they complete",
      "required": [
        "policyType"
      ],
      "type": "object",
      "properties": {
        "policyType": {
          "description": "Name of policy configuration",
          "$ref": "#/definitions/EarlyTerminationPolicyType"
        },
        "evaluationInterval": {
          "format": "int32",
          "type": "integer"
        },
        "delayEvaluation": {
          "format": "int32",
          "type": "integer"
        }
      },
      "discriminator": "policyType",
      "additionalProperties": false
    },
    "BanditPolicyConfiguration": {
      "description": "Defines an early termination policy based on slack criteria, and a frequency and delay interval for evaluation",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EarlyTerminationPolicyConfiguration"
        }
      ],
      "properties": {
        "slackFactor": {
          "format": "float",
          "type": "number"
        },
        "slackAmount": {
          "format": "float",
          "type": "number"
        }
      },
      "x-ms-discriminator-value": "Bandit",
      "additionalProperties": false
    },
    "MedianStoppingPolicyConfiguration": {
      "description": "Defines an early termination policy based on running averages of the primary metric of all runs",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EarlyTerminationPolicyConfiguration"
        }
      ],
      "x-ms-discriminator-value": "MedianStopping",
      "additionalProperties": false
    },
    "TruncationSelectionPolicyConfiguration": {
      "description": "Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EarlyTerminationPolicyConfiguration"
        }
      ],
      "properties": {
        "truncationPercentage": {
          "format": "int32",
          "type": "integer"
        },
        "excludeFinishedJobs": {
          "type": "boolean"
        }
      },
      "x-ms-discriminator-value": "TruncationSelection",
      "additionalProperties": false
    },
    "TerminationConfiguration": {
      "type": "object",
      "properties": {
        "maxTotalRuns": {
          "format": "int32",
          "type": "integer"
        },
        "maxConcurrentRuns": {
          "format": "int32",
          "type": "integer"
        },
        "maxDurationMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "earlyTerminationPolicyConfiguration": {
          "$ref": "#/definitions/EarlyTerminationPolicyConfiguration"
        }
      },
      "additionalProperties": false
    },
    "PrimaryMetricGoal": {
      "description": "Defines supported metric goals for hyperparameter tuning",
      "enum": [
        "Minimize",
        "Maximize"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "PrimaryMetricGoal",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "EvaluationConfiguration": {
      "required": [
        "primaryMetricGoal",
        "primaryMetricName"
      ],
      "type": "object",
      "properties": {
        "primaryMetricName": {
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "primaryMetricGoal": {
          "description": "Defines supported metric goals for hyperparameter tuning",
          "$ref": "#/definitions/PrimaryMetricGoal"
        }
      },
      "additionalProperties": false
    },
    "TrialComponent": {
      "type": "object",
      "properties": {
        "codeConfiguration": {
          "description": "Code configuration of the job.",
          "$ref": "#/definitions/CodeConfiguration"
        },
        "environmentId": {
          "description": "Environment id of the job.",
          "type": "string"
        },
        "dataBindings": {
          "description": "Mapping of data bindings used in the job.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DataBinding"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "environmentVariables": {
          "description": "Environment variables included in the job.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "distributionConfiguration": {
          "$ref": "#/definitions/DistributionConfiguration"
        }
      },
      "additionalProperties": false
    },
    "SweepJob": {
      "required": [
        "computeBinding",
        "evaluationConfiguration",
        "parameterSamplingConfiguration"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ComputeJobBase"
        }
      ],
      "properties": {
        "jobType": {
          "$ref": "#/definitions/JobType",
          "readOnly": true
        },
        "status": {
          "description": "The status of a job.",
          "$ref": "#/definitions/JobStatus",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "parameterSamplingConfiguration": {
          "description": "class for all hyperparameter sampling algorithms",
          "$ref": "#/definitions/ParameterSamplingConfiguration"
        },
        "terminationConfiguration": {
          "$ref": "#/definitions/TerminationConfiguration"
        },
        "evaluationConfiguration": {
          "$ref": "#/definitions/EvaluationConfiguration"
        },
        "trialComponent": {
          "$ref": "#/definitions/TrialComponent"
        },
        "identityConfiguration": {
          "$ref": "#/definitions/IdentityConfiguration"
        }
      },
      "x-ms-discriminator-value": "Sweep",
      "additionalProperties": false
    },
    "LabelClass": {
      "description": "Label class definition",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name of the label class.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "subclasses": {
          "description": "Dictionary of subclasses of the label class.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LabelClass"
          },
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      },
      "additionalProperties": false
    },
    "LabelCategory": {
      "description": "Label category definition",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name of the label category.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "allowMultiSelect": {
          "description": "Indicates whether it is allowed to select multiple classes in this category.",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "classes": {
          "description": "Dictionary of label classes in this category.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LabelClass"
          },
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      },
      "additionalProperties": false
    },
    "LabelingJobInstructions": {
      "description": "Instructions for labeling job",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The link to a page with detailed labeling instructions for labelers.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      },
      "additionalProperties": false
    },
    "LabelingDatasetConfiguration": {
      "description": "Labeling dataset configuration definition",
      "type": "object",
      "properties": {
        "assetName": {
          "description": "Name of the data asset to perform labeling.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "incrementalDatasetRefreshEnabled": {
          "description": "Indicates whether to enable incremental dataset refresh.",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "datasetVersion": {
          "description": "AML dataset version.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "MLAssistConfiguration": {
      "description": "Labeling MLAssist configuration definition",
      "type": "object",
      "properties": {
        "inferencingComputeBinding": {
          "description": "AML compute binding used in inferencing.",
          "$ref": "#/definitions/ComputeBinding",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "trainingComputeBinding": {
          "description": "AML compute binding used in training.",
          "$ref": "#/definitions/ComputeBinding",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "mlAssistEnabled": {
          "description": "Indicates whether MLAssist feature is enabled.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "MediaType": {
      "description": "Media type of data asset.",
      "enum": [
        "Image",
        "Text"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "MediaType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "ImageAnnotationType": {
      "description": "Annotation type of image data.",
      "enum": [
        "Classification",
        "BoundingBox",
        "InstanceSegmentation"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ImageAnnotationType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "LabelingJobMediaProperties": {
      "description": "Properties of a labeling job",
      "required": [
        "mediaType"
      ],
      "type": "object",
      "properties": {
        "mediaType": {
          "description": "Media type of the job.",
          "$ref": "#/definitions/MediaType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "mediaType",
      "additionalProperties": false
    },
    "LabelingJobImageProperties": {
      "description": "Properties of a labeling job for image data",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LabelingJobMediaProperties"
        }
      ],
      "properties": {
        "annotationType": {
          "description": "Annotation type of image labeling job.",
          "$ref": "#/definitions/ImageAnnotationType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "Image",
      "additionalProperties": false
    },
    "TextAnnotationType": {
      "description": "Annotation type of text data.",
      "enum": [
        "Classification"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "TextAnnotationType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "LabelingJobTextProperties": {
      "description": "Properties of a labeling job for text data",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LabelingJobMediaProperties"
        }
      ],
      "properties": {
        "annotationType": {
          "description": "Annotation type of text labeling job.",
          "$ref": "#/definitions/TextAnnotationType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "Text",
      "additionalProperties": false
    },
    "ProgressMetrics": {
      "description": "Progress metrics definition",
      "type": "object",
      "properties": {
        "totalDatapointCount": {
          "format": "int64",
          "description": "The total datapoint count.",
          "type": "integer",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "completedDatapointCount": {
          "format": "int64",
          "description": "The completed datapoint count.",
          "type": "integer",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "skippedDatapointCount": {
          "format": "int64",
          "description": "The skipped datapoint count.",
          "type": "integer",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "incrementalDatasetLastRefreshTime": {
          "format": "date-time",
          "description": "The time of last successful incremental dataset refresh in UTC.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "StatusMessageLevel": {
      "enum": [
        "Error",
        "Information",
        "Warning"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "StatusMessageLevel",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "StatusMessage": {
      "description": "Active message associated with project",
      "type": "object",
      "properties": {
        "level": {
          "description": "Severity level of message.",
          "$ref": "#/definitions/StatusMessageLevel",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "code": {
          "description": "Service-defined message code.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "message": {
          "description": "A human-readable representation of the message code.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "createdTimeUtc": {
          "format": "date-time",
          "description": "Time in UTC at which the message was created.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "LabelingJob": {
      "description": "Labeling job definition",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobBase"
        }
      ],
      "properties": {
        "labelCategories": {
          "description": "Label categories of the job.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LabelCategory"
          },
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "jobInstructions": {
          "description": "Labeling instructions of the job.",
          "$ref": "#/definitions/LabelingJobInstructions",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "datasetConfiguration": {
          "description": "Configuration of dataset used in the job.",
          "$ref": "#/definitions/LabelingDatasetConfiguration",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "mlAssistConfiguration": {
          "description": "Configuration of MLAssist feature in the job.",
          "$ref": "#/definitions/MLAssistConfiguration"
        },
        "labelingJobMediaProperties": {
          "$ref": "#/definitions/LabelingJobMediaProperties"
        },
        "projectId": {
          "format": "uuid",
          "description": "Internal id of the job(Previously called project).",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "status": {
          "description": "Status of the job.",
          "$ref": "#/definitions/JobStatus",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "progressMetrics": {
          "description": "Progress metrics of the job.",
          "$ref": "#/definitions/ProgressMetrics",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "statusMessages": {
          "description": "Status messages of the job.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusMessage"
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "createdTimeUtc": {
          "format": "date-time",
          "description": "Created time of the job in UTC timezone.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "Labeling",
      "additionalProperties": false
    },
    "JobBaseResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "properties": {
          "$ref": "#/definitions/JobBase"
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-azure-resource": true,
      "additionalProperties": false
    },
    "JobBaseResourceArmPaginatedResult": {
      "description": "A paginated list of JobBase entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type JobBase.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobBaseResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "LabelingJobResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/LabelingJob",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-azure-resource": true,
      "additionalProperties": false
    },
    "LabelingJobResourceArmPaginatedResult": {
      "description": "A paginated list of LabelingJob entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type LabelingJob.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LabelingJobResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ExportFormatType": {
      "description": "The format of exported labels.",
      "enum": [
        "Dataset",
        "Coco",
        "CSV"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ExportFormatType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "ExportSummary": {
      "required": [
        "format"
      ],
      "type": "object",
      "properties": {
        "format": {
          "description": "The format of exported labels, also as the discriminator.",
          "$ref": "#/definitions/ExportFormatType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "labelingJobId": {
          "description": "Name and identifier of the job containing exported labels.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "exportedRowCount": {
          "format": "int64",
          "description": "The total number of labeled datapoints exported.",
          "type": "integer",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "startTimeUtc": {
          "format": "date-time",
          "description": "The time when the export was requested.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "endTimeUtc": {
          "format": "date-time",
          "description": "The time when the export was completed.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "discriminator": "format",
      "additionalProperties": false
    },
    "CocoExportSummary": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ExportSummary"
        }
      ],
      "properties": {
        "snapshotPath": {
          "description": "The output path where the labels will be exported.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "containerName": {
          "description": "The container name to which the labels will be exported.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "Coco",
      "additionalProperties": false
    },
    "CsvExportSummary": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ExportSummary"
        }
      ],
      "properties": {
        "snapshotPath": {
          "description": "The output path where the labels will be exported.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "containerName": {
          "description": "The container name to which the labels will be exported.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "CSV",
      "additionalProperties": false
    },
    "DatasetExportSummary": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ExportSummary"
        }
      ],
      "properties": {
        "labeledAssetName": {
          "description": "The unique name of the labeled data asset.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "Dataset",
      "additionalProperties": false
    },
    "ModelContainer": {
      "type": "object",
      "properties": {
        "latestVersions": {
          "description": "Latest model versions for each stage. Key is the model stage, value is the model version ARM ID.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "ModelContainerResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/ModelContainer",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-azure-resource": true,
      "additionalProperties": false
    },
    "ModelContainerResourceArmPaginatedResult": {
      "description": "A paginated list of ModelContainer entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type ModelContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelContainerResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ModelVersion": {
      "description": "Details of an ModelDto",
      "type": "object",
      "properties": {
        "stage": {
          "description": "Model asset stage.",
          "type": "string"
        },
        "flavors": {
          "description": "Dictionary mapping model flavors to their properties.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "datastoreId": {
          "description": "The asset datastoreId",
          "type": "string"
        },
        "assetPath": {
          "description": "DEPRECATED - use Microsoft.MachineLearning.ManagementFrontEnd.Contracts.Assets.Asset.Path instead",
          "$ref": "#/definitions/AssetPath"
        },
        "path": {
          "description": "The path of the file/directory.",
          "type": "string"
        },
        "generatedBy": {
          "description": "If the name version are system generated (anonymous registration) or user generated.",
          "$ref": "#/definitions/AssetGenerator",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "ModelVersionResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/ModelVersion",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-azure-resource": true,
      "additionalProperties": false
    },
    "ModelVersionResourceArmPaginatedResult": {
      "description": "A paginated list of ModelVersion entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type ModelVersion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelVersionResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "UserAssignedIdentityMeta": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecretUrl": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ResourceIdentityInArm": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "principalId": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        },
        "userAssignedIdentities": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UserAssignedIdentityMeta"
          }
        }
      },
      "additionalProperties": false
    },
    "ScaleTypeMode": {
      "enum": [
        "Automatic",
        "Manual",
        "None"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ScaleTypeMode",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "OnlineDeploymentScaleSettings": {
      "type": "object",
      "properties": {
        "minimum": {
          "format": "int32",
          "type": "integer"
        },
        "maximum": {
          "format": "int32",
          "type": "integer"
        },
        "instanceCount": {
          "format": "int32",
          "type": "integer"
        },
        "scaleType": {
          "$ref": "#/definitions/ScaleTypeMode"
        }
      },
      "additionalProperties": false
    },
    "EndpointComputeType": {
      "enum": [
        "Managed",
        "AKS",
        "AzureMLCompute"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EndpointComputeType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "ModelDataCollection": {
      "description": "The Model data collection properties.",
      "type": "object",
      "properties": {
        "eventHubEnabled": {
          "description": "Option for enabling/disabling Event Hub.",
          "type": "boolean"
        },
        "storageEnabled": {
          "description": "Option for enabling/disabling storage.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "DeploymentConfigurationBase": {
      "required": [
        "computeType"
      ],
      "type": "object",
      "properties": {
        "computeType": {
          "$ref": "#/definitions/EndpointComputeType"
        },
        "appInsightsEnabled": {
          "type": "boolean"
        },
        "maxConcurrentRequestsPerInstance": {
          "format": "int32",
          "type": "integer"
        },
        "maxQueueWaitMs": {
          "format": "int32",
          "type": "integer"
        },
        "scoringTimeoutMs": {
          "format": "int32",
          "type": "integer"
        },
        "livenessProbeRequirements": {
          "$ref": "machineLearningServices.json#/definitions/LivenessProbeRequirements"
        }
      },
      "discriminator": "computeType",
      "additionalProperties": false
    },
    "AksDeploymentConfiguration": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DeploymentConfigurationBase"
        }
      ],
      "properties": {
        "containerResourceRequirements": {
          "$ref": "machineLearningServices.json#/definitions/ContainerResourceRequirements"
        },
        "modelDataCollection": {
          "description": "The Model data collection properties.",
          "$ref": "#/definitions/ModelDataCollection"
        }
      },
      "x-ms-discriminator-value": "AKS",
      "additionalProperties": false
    },
    "OSTypes": {
      "enum": [
        "Linux",
        "Windows"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "OSTypes",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "ManagedDeploymentConfiguration": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DeploymentConfigurationBase"
        }
      ],
      "properties": {
        "instanceType": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "osType": {
          "$ref": "#/definitions/OSTypes"
        },
        "readinessProbeRequirements": {
          "$ref": "machineLearningServices.json#/definitions/LivenessProbeRequirements"
        }
      },
      "x-ms-discriminator-value": "Managed",
      "additionalProperties": false
    },
    "DeploymentProvisioningState": {
      "enum": [
        "Creating",
        "Deleting",
        "Scaling",
        "Updating",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DeploymentProvisioningState",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "ReferenceType": {
      "enum": [
        "Id",
        "DataPath",
        "OutputPath"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ReferenceType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "AssetReferenceBase": {
      "required": [
        "referenceType"
      ],
      "type": "object",
      "properties": {
        "referenceType": {
          "description": "Specifies the type of asset reference.",
          "$ref": "#/definitions/ReferenceType"
        }
      },
      "discriminator": "referenceType",
      "additionalProperties": false
    },
    "IdAssetReference": {
      "required": [
        "id"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetReferenceBase"
        }
      ],
      "properties": {
        "id": {
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "Id",
      "additionalProperties": false
    },
    "DataPathAssetReference": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetReferenceBase"
        }
      ],
      "properties": {
        "path": {
          "type": "string"
        },
        "datastoreId": {
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "DataPath",
      "additionalProperties": false
    },
    "OutputPathAssetReference": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetReferenceBase"
        }
      ],
      "properties": {
        "path": {
          "type": "string"
        },
        "jobId": {
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "OutputPath",
      "additionalProperties": false
    },
    "OnlineDeployment": {
      "required": [
        "deploymentConfiguration",
        "modelReference"
      ],
      "type": "object",
      "properties": {
        "scaleSettings": {
          "$ref": "#/definitions/OnlineDeploymentScaleSettings"
        },
        "deploymentConfiguration": {
          "$ref": "#/definitions/DeploymentConfigurationBase"
        },
        "provisioningState": {
          "description": "Provisioning state for the endpoint deployment.",
          "$ref": "#/definitions/DeploymentProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "description": {
          "description": "Description of the endpoint deployment.",
          "type": "string"
        },
        "properties": {
          "description": "Property dictionary. Properties can be added, but not removed or altered.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "modelReference": {
          "$ref": "#/definitions/AssetReferenceBase"
        },
        "codeConfiguration": {
          "description": "Code configuration for the endpoint deployment.",
          "$ref": "#/definitions/CodeConfiguration"
        },
        "environmentId": {
          "description": "Environment specification for the endpoint deployment.",
          "type": "string"
        },
        "environmentVariables": {
          "description": "Environment variables configuration for the deployment.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "OnlineDeploymentTrackedResource": {
      "required": [
        "location",
        "properties"
      ],
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/ResourceIdentityInArm"
        },
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/OnlineDeployment",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-azure-resource": true,
      "additionalProperties": false
    },
    "OnlineDeploymentTrackedResourceArmPaginatedResult": {
      "description": "A paginated list of OnlineDeployment entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type OnlineDeployment.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OnlineDeploymentTrackedResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "PartialOnlineDeployment": {
      "description": "Mutable online deployment configuration",
      "type": "object",
      "properties": {
        "scaleSettings": {
          "$ref": "#/definitions/OnlineDeploymentScaleSettings"
        },
        "deploymentConfiguration": {
          "$ref": "#/definitions/DeploymentConfigurationBase"
        }
      },
      "additionalProperties": false
    },
    "PartialOnlineDeploymentPartialTrackedResource": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/ResourceIdentityInArm"
        },
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/PartialOnlineDeployment"
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "ContainerType": {
      "enum": [
        "StorageInitializer",
        "InferenceServer"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ContainerType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "DeploymentLogsRequest": {
      "type": "object",
      "properties": {
        "containerType": {
          "description": "The type of container to retrieve logs from.",
          "$ref": "#/definitions/ContainerType"
        },
        "tail": {
          "format": "int32",
          "description": "The maximum number of lines to tail.",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "DeploymentLogs": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "OrderString": {
      "enum": [
        "CreatedAtDesc",
        "CreatedAtAsc",
        "UpdatedAtDesc",
        "UpdatedAtAsc"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "OrderString",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "EndpointProvisioningState": {
      "description": "State of endpoint provisioning.",
      "enum": [
        "Creating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Updating",
        "Canceled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EndpointProvisioningState",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "ComputeConfiguration": {
      "required": [
        "computeType"
      ],
      "type": "object",
      "properties": {
        "computeType": {
          "$ref": "#/definitions/EndpointComputeType"
        }
      },
      "discriminator": "computeType",
      "additionalProperties": false
    },
    "AksComputeConfiguration": {
      "required": [
        "computeName"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ComputeConfiguration"
        }
      ],
      "properties": {
        "namespace": {
          "type": "string"
        },
        "computeName": {
          "pattern": "[a-zA-Z0-9_]",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "x-ms-discriminator-value": "AKS",
      "additionalProperties": false
    },
    "ManagedComputeConfiguration": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ComputeConfiguration"
        }
      ],
      "x-ms-discriminator-value": "Managed",
      "additionalProperties": false
    },
    "AzureMLComputeConfiguration": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ComputeConfiguration"
        }
      ],
      "x-ms-discriminator-value": "AzureMLCompute",
      "additionalProperties": false
    },
    "EndpointAuthModeType": {
      "enum": [
        "AMLToken",
        "Key",
        "AADToken"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EndpointAuthModeType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "OnlineEndpoint": {
      "description": "Online endpoint configuration",
      "required": [
        "authMode",
        "computeConfiguration"
      ],
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "State of endpoint provisioning.",
          "$ref": "#/definitions/EndpointProvisioningState",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "description": {
          "description": "Description of the inference endpoint.",
          "type": "string"
        },
        "properties": {
          "description": "Property dictionary. Properties can be added, but not removed or altered.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "trafficRules": {
          "description": "Traffic rules on how the traffic will be routed across deployments.",
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          }
        },
        "computeConfiguration": {
          "$ref": "#/definitions/ComputeConfiguration"
        },
        "endpoint": {
          "format": "uri",
          "description": "Endpoint URI",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "swaggerEndpoint": {
          "format": "uri",
          "description": "Endpoint Swagger URI",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "authMode": {
          "description": "Inference endpoint authentication mode type",
          "$ref": "#/definitions/EndpointAuthModeType"
        }
      },
      "additionalProperties": false
    },
    "OnlineEndpointTrackedResource": {
      "required": [
        "location",
        "properties"
      ],
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "pattern": "[a-zA-Z0-9_]",
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/ResourceIdentityInArm"
        },
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/OnlineEndpoint",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-azure-resource": true,
      "additionalProperties": false
    },
    "OnlineEndpointTrackedResourceArmPaginatedResult": {
      "description": "A paginated list of OnlineEndpoint entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type OnlineEndpoint.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OnlineEndpointTrackedResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "PartialOnlineEndpoint": {
      "description": "Mutable online endpoint configuration",
      "type": "object",
      "properties": {
        "trafficRules": {
          "description": "Traffic rules on how the traffic will be routed across deployments.",
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "additionalProperties": false
    },
    "PartialOnlineEndpointPartialTrackedResource": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/ResourceIdentityInArm"
        },
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "properties": {
          "description": "Additional attributes of the entity.",
          "$ref": "#/definitions/PartialOnlineEndpoint"
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "KeyType": {
      "enum": [
        "Primary",
        "Secondary"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "KeyType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "RegenerateEndpointKeysRequest": {
      "required": [
        "keyType"
      ],
      "type": "object",
      "properties": {
        "keyType": {
          "description": "Specification for which type of key to generate. Primary or Secondary.",
          "$ref": "#/definitions/KeyType"
        },
        "keyValue": {
          "description": "The value the key is set to.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "EndpointAuthKeys": {
      "type": "object",
      "properties": {
        "primaryKey": {
          "description": "The primary key.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "secondaryKey": {
          "description": "The secondary key.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "EndpointAuthToken": {
      "description": "Service Token",
      "type": "object",
      "properties": {
        "accessToken": {
          "description": "Access token.",
          "type": "string"
        },
        "tokenType": {
          "description": "Access token type.",
          "type": "string"
        },
        "expiryTimeUtc": {
          "format": "int64",
          "description": "Access token expiry time (UTC).",
          "type": "integer"
        },
        "refreshAfterTimeUtc": {
          "format": "int64",
          "description": "Refresh access token after time (UTC).",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "ScheduleType": {
      "enum": [
        "ComputeStartStop"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ScheduleType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "ComputeType": {
      "enum": [
        "ComputeInstance"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ComputeType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "ComputeStartStopTriggerType": {
      "enum": [
        "Recurrence",
        "Cron"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ComputeStartStopTriggerType",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "ComputePowerAction": {
      "enum": [
        "Start",
        "Stop"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ComputePowerAction",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "Frequency": {
      "enum": [
        "Month",
        "Week",
        "Day",
        "Hour",
        "Minute"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "Frequency",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "WeekDays": {
      "enum": [
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
        "Sunday"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "WeekDays",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "RecurrenceSchedule": {
      "type": "object",
      "properties": {
        "hours": {
          "description": "List of hours for the schedule.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "minutes": {
          "description": "List of minutes for the schedule.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "weekDays": {
          "description": "List of days for the schedule.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WeekDays"
          }
        }
      },
      "additionalProperties": false
    },
    "Recurrence": {
      "type": "object",
      "properties": {
        "frequency": {
          "description": "The frequency to trigger schedule.",
          "$ref": "#/definitions/Frequency"
        },
        "interval": {
          "format": "int32",
          "description": "Schedule interval.",
          "type": "integer"
        },
        "startTime": {
          "description": "Time to start the schedule.",
          "type": "string"
        },
        "timeZone": {
          "description": "Timezone of StartTime.",
          "type": "string"
        },
        "schedule": {
          "description": "The recurrence schedule.",
          "$ref": "#/definitions/RecurrenceSchedule"
        }
      },
      "additionalProperties": false
    },
    "Cron": {
      "type": "object",
      "properties": {
        "expression": {
          "description": "Cron expression.",
          "type": "string"
        },
        "startTime": {
          "description": "Time to start the schedule.",
          "type": "string"
        },
        "timeZone": {
          "description": "Timezone of StartTime.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ScheduleStatus": {
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ScheduleStatus",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "ScheduleProvisioningStatus": {
      "enum": [
        "Completed",
        "Provisioning",
        "Failed"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ScheduleProvisioningStatus",
        "modelAsString": true
      },
      "additionalProperties": false
    },
    "ScheduleBase": {
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of Schedule.",
          "$ref": "#/definitions/ScheduleType",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "targetResourceId": {
          "description": "Arm Id of the schedule target resource.",
          "type": "string"
        },
        "status": {
          "description": "Status of schedule.",
          "$ref": "#/definitions/ScheduleStatus"
        },
        "provisioningStatus": {
          "description": "Provisioning status of schedule resource.",
          "$ref": "#/definitions/ScheduleProvisioningStatus",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "discriminator": "type",
      "additionalProperties": false
    },
    "ComputeStartStopSchedule": {
      "required": [
        "action",
        "triggerType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ScheduleBase"
        }
      ],
      "properties": {
        "computeType": {
          "description": "Type of Compute.",
          "$ref": "#/definitions/ComputeType"
        },
        "triggerType": {
          "description": "Schedule's trigger type.",
          "$ref": "#/definitions/ComputeStartStopTriggerType"
        },
        "action": {
          "$ref": "#/definitions/ComputePowerAction"
        },
        "recurrence": {
          "description": "Recurrence schedule details.",
          "$ref": "#/definitions/Recurrence"
        },
        "cron": {
          "description": "Cron schedule details.",
          "$ref": "#/definitions/Cron"
        }
      },
      "x-ms-discriminator-value": "ComputeStartStop",
      "additionalProperties": false
    },
    "ScheduleBaseResource": {
      "description": "Azure Resource Manager resource envelope.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "properties": {
          "$ref": "#/definitions/ScheduleBase"
        },
        "systemData": {
          "description": "System data associated with resource provider",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "x-ms-azure-resource": true,
      "additionalProperties": false
    },
    "ScheduleBaseResourceArmPaginatedResult": {
      "description": "A paginated list of ScheduleBase entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type ScheduleBase.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScheduleBaseResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "description": "Azure Active Directory OAuth2 Flow."
    }
  }
}
