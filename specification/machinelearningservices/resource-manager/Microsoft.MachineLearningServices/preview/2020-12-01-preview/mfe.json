{
  "swagger": "2.0",
  "info": {
    "title": "Azure Machine Learning Workspaces",
    "version": "2020-12-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/deployments/{deploymentName}": {
      "put": {
        "tags": [
          "BatchDeployment"
        ],
        "summary": "Creates a batch inference deployment.",
        "operationId": "BatchDeployments_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "The identifier for the Batch inference deployment.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Version of Azure Machine Learning resource provider API.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Batch inference deployment definition object.",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Batch Deployment.": {
            "$ref": "./examples/BatchDeployment/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "BatchDeployment"
        ],
        "summary": "Gets a batch inference deployment by id.",
        "operationId": "BatchDeployments_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Endpoint name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "The identifier for the Batch deployments.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Version of Azure Machine Learning resource provider API.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Batch Deployment.": {
            "$ref": "./examples/BatchDeployment/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "BatchDeployment"
        ],
        "summary": "Delete Batch Inference deployment.",
        "operationId": "BatchDeployments_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Endpoint name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference deployment identifier.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Batch Deployment.": {
            "$ref": "./examples/BatchDeployment/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/deployments": {
      "get": {
        "tags": [
          "BatchDeployment"
        ],
        "summary": "Lists Batch inference deployments in the workspace.",
        "operationId": "BatchDeployments_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Endpoint name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Version of Azure Machine Learning resource provider API.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Continuation token for pagination.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Batch Deployment.": {
            "$ref": "./examples/BatchDeployment/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}": {
      "put": {
        "tags": [
          "BatchEndpoint"
        ],
        "summary": "Creates a batch inference endpoint.",
        "operationId": "BatchEndpoints_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Name for the Batch inference endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Version of Azure Machine Learning resource provider API.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Batch inference endpoint definition object.",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Batch Endpoint.": {
            "$ref": "./examples/BatchEndpoint/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "BatchEndpoint"
        ],
        "summary": "Gets a batch inference endpoint by name.",
        "operationId": "BatchEndpoints_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Name for the Batch Endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Version of Azure Machine Learning resource provider API.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Batch Endpoint.": {
            "$ref": "./examples/BatchEndpoint/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "BatchEndpoint"
        ],
        "summary": "Delete Batch Inference Endpoint.",
        "operationId": "BatchEndpoints_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Batch Endpoint.": {
            "$ref": "./examples/BatchEndpoint/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints": {
      "get": {
        "tags": [
          "BatchEndpoint"
        ],
        "summary": "Lists Batch inference endpoint in the workspace.",
        "operationId": "BatchEndpoints_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Version of Azure Machine Learning resource provider API.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Continuation token for pagination.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Batch Endpoint.": {
            "$ref": "./examples/BatchEndpoint/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/listkeys": {
      "post": {
        "tags": [
          "BatchEndpoint"
        ],
        "summary": "Lists batch Inference Endpoint keys.",
        "operationId": "BatchEndpoints_ListKeys",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InferenceEndpointKeysTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "ListKeys Batch Endpoint.": {
            "$ref": "./examples/BatchEndpoint/listKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}": {
      "put": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "CodeContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Code Container.": {
            "$ref": "./examples/CodeContainer/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "Get container.",
        "operationId": "CodeContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Code Container.": {
            "$ref": "./examples/CodeContainer/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "Delete container.",
        "operationId": "CodeContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Code Container.": {
            "$ref": "./examples/CodeContainer/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes": {
      "get": {
        "tags": [
          "CodeContainer"
        ],
        "summary": "List containers.",
        "operationId": "CodeContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Opaque token to retrieve the next page of results from a previous query.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeContainerResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Code Container.": {
            "$ref": "./examples/CodeContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions/{version}": {
      "put": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Create or update version.",
        "operationId": "CodeVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Code Version.": {
            "$ref": "./examples/CodeVersion/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Get version.",
        "operationId": "CodeVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Code Version.": {
            "$ref": "./examples/CodeVersion/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "Delete version.",
        "operationId": "CodeVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Code Version.": {
            "$ref": "./examples/CodeVersion/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions": {
      "get": {
        "tags": [
          "CodeVersion"
        ],
        "summary": "List versions.",
        "operationId": "CodeVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Opaque token to retrieve the next page of results from a previous query.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CodeVersionResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Code Version.": {
            "$ref": "./examples/CodeVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}": {
      "put": {
        "tags": [
          "DataContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "DataContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Data Container.": {
            "$ref": "./examples/DataContainer/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "DataContainer"
        ],
        "summary": "Get container.",
        "operationId": "DataContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Data Container.": {
            "$ref": "./examples/DataContainer/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DataContainer"
        ],
        "summary": "Delete container.",
        "operationId": "DataContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Data Container.": {
            "$ref": "./examples/DataContainer/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data": {
      "get": {
        "tags": [
          "DataContainer"
        ],
        "summary": "List containers.",
        "operationId": "DataContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Opaque token to retrieve the next page of results from a previous query.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataContainerResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Data Container.": {
            "$ref": "./examples/DataContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores": {
      "get": {
        "tags": [
          "Datastore"
        ],
        "summary": "List datastores.",
        "operationId": "Datastores_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Opaque token to retrieve the next page of results from a previous query.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Maximum number of results to return.",
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "in": "query",
            "name": "isDefault",
            "description": "Filter down to the workspace default datastore.",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "names",
            "description": "Names of datastores to return.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "searchText",
            "description": "Text to search for in the datastore names.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "Order by property (createdtime | modifiedtime | name).",
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderByAsc",
            "description": "Order by property in ascending order.",
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List datastores.": {
            "$ref": "./examples/Datastore/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}": {
      "delete": {
        "tags": [
          "Datastore"
        ],
        "summary": "Delete datastore.",
        "operationId": "Datastores_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete datastore.": {
            "$ref": "./examples/Datastore/delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "Datastore"
        ],
        "summary": "Get datastore.",
        "operationId": "Datastores_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResource"
            }
          }
        },
        "x-ms-examples": {
          "Get datastore.": {
            "$ref": "./examples/Datastore/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Datastore"
        ],
        "summary": "Create or update datastore.",
        "operationId": "Datastores_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Datastore entity to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastorePropertiesResource"
            }
          }
        },
        "x-ms-examples": {
          "Create or update datastore.": {
            "$ref": "./examples/Datastore/createOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}/listSecrets": {
      "post": {
        "tags": [
          "Datastore"
        ],
        "summary": "Get datastore secrets.",
        "operationId": "Datastores_ListSecrets",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Datastore name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DatastoreCredentials"
            }
          }
        },
        "x-ms-examples": {
          "Get datastore secrets.": {
            "$ref": "./examples/Datastore/listSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}/versions/{version}": {
      "put": {
        "tags": [
          "DataVersion"
        ],
        "summary": "Create or update version.",
        "operationId": "DataVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "schema": {
              "$ref": "#/definitions/DataVersionResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataVersionResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Data Version.": {
            "$ref": "./examples/DataVersion/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "DataVersion"
        ],
        "summary": "Get version.",
        "operationId": "DataVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Data Version.": {
            "$ref": "./examples/DataVersion/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DataVersion"
        ],
        "summary": "Delete version.",
        "operationId": "DataVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Data Version.": {
            "$ref": "./examples/DataVersion/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}/versions": {
      "get": {
        "tags": [
          "DataVersion"
        ],
        "summary": "List versions.",
        "operationId": "DataVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Opaque token to retrieve the next page of results from a previous query.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataVersionResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Data Version.": {
            "$ref": "./examples/DataVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}": {
      "put": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "EnvironmentContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Environment Container.": {
            "$ref": "./examples/EnvironmentContainer/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "Get container.",
        "operationId": "EnvironmentContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Environment Container.": {
            "$ref": "./examples/EnvironmentContainer/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "Delete container.",
        "operationId": "EnvironmentContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Environment Container.": {
            "$ref": "./examples/EnvironmentContainer/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments": {
      "get": {
        "tags": [
          "EnvironmentContainer"
        ],
        "summary": "List containers.",
        "operationId": "EnvironmentContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Opaque token to retrieve the next page of results from a previous query.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Environment Container.": {
            "$ref": "./examples/EnvironmentContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}/versions/{version}": {
      "put": {
        "tags": [
          "EnvironmentSpecification"
        ],
        "operationId": "EnvironmentSpecificationVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/EnvironmentSpecificationVersionResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentSpecificationVersionResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentSpecificationVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Environment Specification Version.": {
            "$ref": "./examples/EnvironmentSpecificationVersion/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "EnvironmentSpecification"
        ],
        "summary": "Get version.",
        "operationId": "EnvironmentSpecificationVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentSpecificationVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Environment Specification Version.": {
            "$ref": "./examples/EnvironmentSpecificationVersion/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "EnvironmentSpecification"
        ],
        "summary": "Delete version.",
        "operationId": "EnvironmentSpecificationVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Environment Specification Version.": {
            "$ref": "./examples/EnvironmentSpecificationVersion/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}/versions": {
      "get": {
        "tags": [
          "EnvironmentSpecification"
        ],
        "operationId": "EnvironmentSpecificationVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skipToken",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EnvironmentSpecificationVersionResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Environment Specification Version.": {
            "$ref": "./examples/EnvironmentSpecificationVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs/{id}": {
      "put": {
        "tags": [
          "Job"
        ],
        "summary": "Creates and executes a Job.",
        "operationId": "Jobs_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Version of Azure Machine Learning resource provider API.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Job definition object.",
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Command Job.": {
            "$ref": "./examples/CommandJob/createOrUpdate.json"
          },
          "CreateOrUpdate Sweep Job.": {
            "$ref": "./examples/SweepJob/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Gets a Job by name/id.",
        "operationId": "Jobs_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Version of Azure Machine Learning resource provider API.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Command Job.": {
            "$ref": "./examples/CommandJob/get.json"
          },
          "Get Sweep Job.": {
            "$ref": "./examples/SweepJob/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Job"
        ],
        "summary": "Deletes a Job.",
        "operationId": "Jobs_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Version of Azure Machine Learning resource provider API.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "204": {
            "description": "Success"
          },
          "202": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Command Job.": {
            "$ref": "./examples/CommandJob/delete.json"
          },
          "Delete Sweep Job.": {
            "$ref": "./examples/SweepJob/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Lists Jobs in the workspace.",
        "operationId": "Jobs_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Version of Azure Machine Learning resource provider API.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Continuation token for pagination.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JobBaseResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Command Job.": {
            "$ref": "./examples/CommandJob/list.json"
          },
          "List Sweep Job.": {
            "$ref": "./examples/SweepJob/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs/{id}/cancel": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Cancels a Job.",
        "operationId": "Jobs_Cancel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Version of Azure Machine Learning resource provider API.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Cancel Command Job.": {
            "$ref": "./examples/CommandJob/cancel.json"
          },
          "Cancel Sweep Job.": {
            "$ref": "./examples/SweepJob/cancel.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs/{id}/operationresults/{operationId}": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Polls a Job operation.",
        "operationId": "Jobs_Poll",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the Job.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "operationId",
            "description": "The operation ID of the async operation to be polled",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Version of Azure Machine Learning resource provider API.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Poll Command Job.": {
            "$ref": "./examples/CommandJob/poll.json"
          },
          "Poll Sweep Job.": {
            "$ref": "./examples/SweepJob/poll.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}": {
      "put": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Creates or updates a labeling job.",
        "operationId": "LabelingJobs_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Version of Azure Machine Learning resource provider API.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "LabelingJob definition object.",
            "schema": {
              "$ref": "#/definitions/LabelingJobResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LabelingJobResource"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LabelingJobResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Labeling Job.": {
            "$ref": "./examples/LabelingJob/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Gets a labeling job by name/id.",
        "operationId": "LabelingJobs_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Version of Azure Machine Learning resource provider API.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "includeJobInstructions",
            "description": "Boolean value to indicate whether to include JobInstructions in response.",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "includeLabelCategories",
            "description": "Boolean value to indicate Whether to include LabelCategories in response.",
            "type": "boolean"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LabelingJobResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Labeling Job.": {
            "$ref": "./examples/LabelingJob/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Delete a labeling job.",
        "operationId": "LabelingJobs_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Version of Azure Machine Learning resource provider API.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Labeling Job.": {
            "$ref": "./examples/LabelingJob/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs": {
      "get": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Lists labeling jobs in the workspace.",
        "operationId": "LabelingJobs_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Version of Azure Machine Learning resource provider API.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Continuation token for pagination.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Number of labeling jobs to return.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LabelingJobResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Labeling Job.": {
            "$ref": "./examples/LabelingJob/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}/pause": {
      "post": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Pause a labeling job.",
        "operationId": "LabelingJobs_Pause",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Version of Azure Machine Learning resource provider API.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Pause Labeling Job.": {
            "$ref": "./examples/LabelingJob/pause.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}/resume": {
      "post": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Resume a labeling job.",
        "operationId": "LabelingJobs_Resume",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Version of Azure Machine Learning resource provider API.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "202": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Resume Labeling Job.": {
            "$ref": "./examples/LabelingJob/resume.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}/exportLabels": {
      "post": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Export labels from a labeling job.",
        "operationId": "LabelingJobs_ExportLabels",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Version of Azure Machine Learning resource provider API.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The desired format of export operation.",
            "schema": {
              "description": "The format of exported labels.",
              "enum": [
                "Dataset",
                "Coco",
                "CSV"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ExportFormatType",
                "modelAsString": false
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "202": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "ExportLabels Labeling Job.": {
            "$ref": "./examples/LabelingJob/exportLabels.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/labelingJobs/{id}/exportLabels/{exportId}": {
      "get": {
        "tags": [
          "LabelingJob"
        ],
        "summary": "Get export summary from a labeling job.",
        "operationId": "LabelingJobs_GetExportSummary",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The name and identifier for the LabelingJob.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Version of Azure Machine Learning resource provider API.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "exportId",
            "description": "The unique identifier of Export Labels operation.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExportSummaryResource"
            }
          }
        },
        "x-ms-examples": {
          "GetExportSummary Labeling Job.": {
            "$ref": "./examples/LabelingJob/getExportSummary.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models": {
      "get": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "List model containers.",
        "operationId": "ModelContainers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Opaque token to retrieve the next page of results from a previous query.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Maximum number of results to return.",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Model Container.": {
            "$ref": "./examples/ModelContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}": {
      "put": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Create or update container.",
        "operationId": "ModelContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Container entity to create or update.",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Model Container.": {
            "$ref": "./examples/ModelContainer/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Get container.",
        "operationId": "ModelContainers_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Model Container.": {
            "$ref": "./examples/ModelContainer/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ModelContainer"
        ],
        "summary": "Delete container.",
        "operationId": "ModelContainers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Model Container.": {
            "$ref": "./examples/ModelContainer/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions": {
      "get": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "List model versions.",
        "operationId": "ModelVersions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Model name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Opaque token to retrieve the next page of results from a previous query.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Model version.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "description",
            "description": "Model description.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Maximum number of results to return.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Number of initial results to skip.",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "tags",
            "description": "Comma-separated list of tag names (and optionally values). Example: tag1,tag2=value2",
            "type": "string"
          },
          {
            "in": "query",
            "name": "properties",
            "description": "Comma-separated list of property names (and optionally values). Example: prop1,prop2=value2",
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "Property by which to order the results.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "latestVersionOnly",
            "description": "Only return the most recent version of a model.",
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Model Version.": {
            "$ref": "./examples/ModelVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions/{version}": {
      "put": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Create or update version.",
        "operationId": "ModelVersions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Version entity to create or update.",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Model Version.": {
            "$ref": "./examples/ModelVersion/createOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Get version.",
        "operationId": "ModelVersions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Model Version.": {
            "$ref": "./examples/ModelVersion/get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ModelVersion"
        ],
        "summary": "Delete version.",
        "operationId": "ModelVersions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "name",
            "description": "Container name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "version",
            "description": "Version identifier.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Model Version.": {
            "$ref": "./examples/ModelVersion/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments": {
      "get": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "List Inference Endpoint Deployments.",
        "operationId": "OnlineDeployments_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Opaque token to retrieve the next page of results from a previous query.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentPropertiesTrackedResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Online Deployment Properties.": {
            "$ref": "./examples/OnlineDeploymentProperties/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}": {
      "delete": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Delete Inference Endpoint Deployment.",
        "operationId": "OnlineDeployments_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference Endpoint Deployment name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Online Deployment Properties.": {
            "$ref": "./examples/OnlineDeploymentProperties/delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Get Inference Deployment Deployment.",
        "operationId": "OnlineDeployments_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference Endpoint Deployment name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentPropertiesTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Online Deployment Properties.": {
            "$ref": "./examples/OnlineDeploymentProperties/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Create or update Inference Endpoint Deployment.",
        "operationId": "OnlineDeployments_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "Inference Endpoint Deployment name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Inference Endpoint entity to apply during operation.",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentPropertiesTrackedResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentPropertiesTrackedResource"
            }
          },
          "202": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentPropertiesTrackedResourceLongRunningOperationResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Online Deployment Properties.": {
            "$ref": "./examples/OnlineDeploymentProperties/createOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}/getLogs": {
      "post": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Polls an Endpoint operation.",
        "operationId": "OnlineDeployments_GetLogs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "The name and identifier for the endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Version of Azure Machine Learning resource provider API.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The request containing parameters for retrieving logs.",
            "schema": {
              "$ref": "#/definitions/DeploymentLogsRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeploymentLogs"
            }
          }
        },
        "x-ms-examples": {
          "GetLogs Online Deployment Properties.": {
            "$ref": "./examples/OnlineDeploymentProperties/getLogs.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}/operationresults/{operationId}": {
      "get": {
        "tags": [
          "OnlineDeployment"
        ],
        "summary": "Polls an Endpoint operation.",
        "operationId": "OnlineDeployments_Poll",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Inference endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentName",
            "description": "The name and identifier for the endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "operationId",
            "description": "The operation ID of the async operation to be polled",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Version of Azure Machine Learning resource provider API.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentPropertiesTrackedResource"
            }
          },
          "202": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentPropertiesTrackedResourceLongRunningOperationResponse"
            }
          }
        },
        "x-ms-examples": {
          "Poll Online Deployment Properties.": {
            "$ref": "./examples/OnlineDeploymentProperties/poll.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints": {
      "get": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "List Online Endpoints.",
        "operationId": "OnlineEndpoints_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Opaque token to retrieve the next page of results from a previous query.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointPropertiesTrackedResourceArmPaginatedResult"
            }
          }
        },
        "x-ms-examples": {
          "List Online Endpoint Properties.": {
            "$ref": "./examples/OnlineEndpointProperties/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}": {
      "delete": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Delete Online Endpoint.",
        "operationId": "OnlineEndpoints_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "204": {
            "description": "Success"
          },
          "202": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Delete Online Endpoint Properties.": {
            "$ref": "./examples/OnlineEndpointProperties/delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Get Online Endpoint.",
        "operationId": "OnlineEndpoints_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointPropertiesTrackedResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Online Endpoint Properties.": {
            "$ref": "./examples/OnlineEndpointProperties/get.json"
          }
        }
      },
      "put": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Create or update Online Endpoint.",
        "operationId": "OnlineEndpoints_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Online Endpoint entity to apply during operation.",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointPropertiesTrackedResource"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointPropertiesTrackedResource"
            }
          },
          "202": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointPropertiesTrackedResourceLongRunningOperationResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Online Endpoint Properties.": {
            "$ref": "./examples/OnlineEndpointProperties/createOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/regenerateKeys": {
      "post": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Regenerate AuthKeys for an Endpoint using Key-based authentication.",
        "operationId": "OnlineEndpoints_RegenerateKeys",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "RegenerateKeys request .",
            "schema": {
              "$ref": "#/definitions/RegenerateEndpointKeysRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointPropertiesTrackedResourceLongRunningOperationResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegenerateKeys Online Endpoint Properties.": {
            "$ref": "./examples/OnlineEndpointProperties/regenerateKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/listKeys": {
      "post": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "List AuthKeys for an Endpoint using Key-based authentication.",
        "operationId": "OnlineEndpoints_ListKeys",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AuthKeys"
            }
          }
        },
        "x-ms-examples": {
          "ListKeys Online Endpoint Properties.": {
            "$ref": "./examples/OnlineEndpointProperties/listKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/token": {
      "post": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Retrieve a valid AAD token for an Endpoint using AMLToken-based authentication.",
        "operationId": "OnlineEndpoints_GetToken",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "Online Endpoint name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "API version.",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AuthToken"
            }
          }
        },
        "x-ms-examples": {
          "GetToken Online Endpoint Properties.": {
            "$ref": "./examples/OnlineEndpointProperties/getToken.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/operationresults/{operationId}": {
      "get": {
        "tags": [
          "OnlineEndpoint"
        ],
        "summary": "Polls an Endpoint operation.",
        "operationId": "OnlineEndpoints_Poll",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/workspaceNameParameter"
          },
          {
            "in": "path",
            "name": "endpointName",
            "description": "The name and identifier for the endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "operationId",
            "description": "The operation ID of the async operation to be polled",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Version of Azure Machine Learning resource provider API.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Success"
          }
        },
        "x-ms-examples": {
          "Poll Online Endpoint Properties.": {
            "$ref": "./examples/OnlineEndpointProperties/poll.json"
          }
        }
      }
    }
  },
  "definitions": {
    "UserAssignedIdentity": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecretUrl": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ManagedIdentity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "systemIdentityUrl": {
          "type": "string"
        },
        "principalId": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecretUrl": {
          "type": "string"
        },
        "userAssignedIdentities": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UserAssignedIdentity"
          }
        }
      },
      "additionalProperties": false
    },
    "DeploymentScaleSettings": {
      "type": "object",
      "properties": {
        "nodeCount": {
          "format": "int32",
          "description": "Number of Compute nodes to be used for running the deployment",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "BatchRetrySettings": {
      "description": "Retry settings for a batch inference operation.",
      "type": "object",
      "properties": {
        "maximumRetries": {
          "format": "int32",
          "description": "Maximum retry count for a mini-batch",
          "type": "integer"
        },
        "timeoutInSeconds": {
          "format": "int32",
          "description": "Invocation timeout for a mini-batch, in seconds.",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "BatchPartitioningScheme": {
      "description": "Partitioning scheme for batch inference operation.",
      "type": "object",
      "properties": {
        "partitioningKeys": {
          "description": "Partition keys list used for Named partitioning.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "miniBatchSize": {
          "format": "int64",
          "description": "Size of the mini-batch passed to each batch invocation.\r\nFor FileDataset, this is the number of files per mini-batch.\r\nFor TabularDataset, this is the size of the records in bytes, per mini-batch.",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "BatchOutputConfiguration": {
      "description": "Batch inference output configuration.",
      "type": "object",
      "properties": {
        "outputAction": {
          "description": "Indicates how the output will be organized.",
          "enum": [
            "SummaryOnly",
            "AppendRow"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BatchOutputAction",
            "modelAsString": false
          }
        },
        "appendRowFileName": {
          "description": "Customized output file name for append_row output action.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "BatchDeploymentSettings": {
      "description": "Batch inference specific settings per deployment.",
      "type": "object",
      "properties": {
        "computeId": {
          "description": "Resource ID of the compute resource",
          "type": "string"
        },
        "errorThreshold": {
          "format": "int32",
          "description": "Error threshold, if the error count for the entire input goes above this value,\r\nthe batch inference will be aborted. Range is [-1, int.MaxValue]\r\n-1 value indicates, ignore all failures during batch inference\r\nFor FileDataset count of file failures\r\nFor TabularDataset, this is the count of record failures",
          "type": "integer"
        },
        "retrySettings": {
          "$ref": "#/definitions/BatchRetrySettings"
        },
        "partitioningScheme": {
          "$ref": "#/definitions/BatchPartitioningScheme"
        },
        "loggingLevel": {
          "description": "Logging level for batch inference operation.",
          "enum": [
            "Info",
            "Warning",
            "Debug"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BatchLoggingLevel",
            "modelAsString": false
          }
        },
        "outputConfiguration": {
          "$ref": "#/definitions/BatchOutputConfiguration"
        }
      },
      "additionalProperties": false
    },
    "AssetReferenceBase": {
      "required": [
        "referenceType"
      ],
      "type": "object",
      "properties": {
        "referenceType": {
          "description": "Specifies the type of asset reference.",
          "enum": [
            "Id",
            "DataPath",
            "OutputPath"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ReferenceType",
            "modelAsString": false
          }
        }
      },
      "discriminator": "referenceType",
      "additionalProperties": false
    },
    "CodeConfiguration": {
      "required": [
        "codeArtifactId",
        "command"
      ],
      "type": "object",
      "properties": {
        "codeArtifactId": {
          "description": "The ID of the code asset.",
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "command": {
          "description": "The command to execute on startup of the job. eg. [\"python\", \"train.py\"]",
          "minLength": 1,
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "BatchDeployment": {
      "description": "Batch inference settings per deployment.",
      "required": [
        "modelReference"
      ],
      "type": "object",
      "properties": {
        "scaleSettings": {
          "$ref": "#/definitions/DeploymentScaleSettings"
        },
        "batchSettings": {
          "$ref": "#/definitions/BatchDeploymentSettings"
        },
        "description": {
          "description": "Description of the endpoint deployment.",
          "type": "string"
        },
        "properties": {
          "description": "Property dictionary. Properties can be added, but not removed or altered.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "modelReference": {
          "description": "Model Configuration.",
          "allOf": [
            {
              "$ref": "#/definitions/AssetReferenceBase"
            }
          ]
        },
        "codeConfiguration": {
          "$ref": "#/definitions/CodeConfiguration"
        },
        "environmentId": {
          "description": "Environment specification for the endpoint deployment.",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning state for the endpoint deployment.",
          "enum": [
            "Creating",
            "Deleting",
            "Scaling",
            "Updating",
            "Succeeded",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "DeploymentProvisioningState",
            "modelAsString": false
          }
        }
      },
      "additionalProperties": false
    },
    "SystemData": {
      "description": "Azure Resource Manager resource Envelope",
      "type": "object",
      "properties": {
        "createdAt": {
          "format": "date-time",
          "description": "the timestamp of resource creation (UTC)",
          "type": "string"
        },
        "createdBy": {
          "description": "a string identifier for the identity that created the resource",
          "type": "string"
        },
        "createdByType": {
          "description": "the type of identity that created the resource: user, application, managedIdentity, key",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "UserType",
            "modelAsString": false
          }
        },
        "lastModifiedAt": {
          "format": "date-time",
          "description": "the timestamp of resource last modification (UTC)",
          "type": "string"
        },
        "lastModifiedBy": {
          "description": "a string identifier for the identity that last modified the resource",
          "type": "string"
        },
        "lastModifiedByType": {
          "description": "the type of identity that last modified the resource: user, application, managedIdentity, key",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "UserType",
            "modelAsString": false
          }
        }
      },
      "additionalProperties": false
    },
    "TProperties": {
      "type": "object",
      "additionalProperties": false
    },
    "Resource`1": {
      "description": "Azure Resource Manager resource Envelope",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource URL of the entity (not URL encoded).",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource entity.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The resource provider and type.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/TProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      },
      "x-ms-azure-resource": true,
      "additionalProperties": false
    },
    "BatchDeploymentTrackedResource": {
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource`1"
        },
        {
          "type": "object",
          "properties": {
            "tags": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "location": {
              "type": "string"
            },
            "kind": {
              "type": "string"
            },
            "identity": {
              "$ref": "#/definitions/ManagedIdentity"
            },
            "properties": {
              "$ref": "#/definitions/BatchDeployment"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "InnerErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "innerError": {
          "$ref": "#/definitions/InnerErrorResponse"
        }
      },
      "additionalProperties": false
    },
    "RootError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "severity": {
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "messageFormat": {
          "type": "string"
        },
        "messageParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "referenceCode": {
          "type": "string"
        },
        "detailsUri": {
          "format": "uri",
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RootError"
          }
        },
        "innerError": {
          "$ref": "#/definitions/InnerErrorResponse"
        }
      },
      "additionalProperties": false
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/RootError"
        },
        "correlation": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "environment": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "time": {
          "format": "date-time",
          "type": "string"
        },
        "componentName": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "BatchDeploymentTrackedResourceArmPaginatedResult": {
      "description": "A paginated list of BatchDeployment entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type BatchDeployment.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchDeploymentTrackedResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ComputeConfiguration": {
      "required": [
        "computeType"
      ],
      "type": "object",
      "properties": {
        "computeType": {
          "enum": [
            "Managed",
            "AKS",
            "ACI"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ComputeType",
            "modelAsString": false
          }
        }
      },
      "discriminator": "computeType",
      "additionalProperties": false
    },
    "AuthKeys": {
      "type": "object",
      "properties": {
        "primaryKey": {
          "description": "The primary key.",
          "type": "string"
        },
        "secondaryKey": {
          "description": "The secondary key.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "BatchEndpoint": {
      "description": "Batch endpoint configuration",
      "required": [
        "authMode"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the inference endpoint.",
          "type": "string"
        },
        "properties": {
          "description": "Property dictionary. Properties can be added, but not removed or altered.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "trafficRules": {
          "description": "Traffic rules on how the traffic will be routed across deployments.",
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          }
        },
        "computeConfiguration": {
          "description": "Reference to compute configuration.",
          "allOf": [
            {
              "$ref": "#/definitions/ComputeConfiguration"
            }
          ]
        },
        "provisioningState": {
          "description": "State of provisioning",
          "enum": [
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "EndpointProvisioningState",
            "modelAsString": false
          },
          "x-ms-mutability": [
            "read"
          ]
        },
        "endpoint": {
          "format": "uri",
          "description": "Endpoint URI",
          "type": "string",
          "readOnly": true
        },
        "swaggerEndpoint": {
          "format": "uri",
          "description": "Endpoint Swagger URI",
          "type": "string",
          "readOnly": true
        },
        "authMode": {
          "description": "Inference endpoint authentication mode type",
          "enum": [
            "AMLToken",
            "Key"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EndpointAuthModeType",
            "modelAsString": false
          }
        },
        "keys": {
          "$ref": "#/definitions/AuthKeys"
        }
      },
      "additionalProperties": false
    },
    "BatchEndpointTrackedResource": {
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource`1"
        },
        {
          "type": "object",
          "properties": {
            "tags": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "location": {
              "type": "string"
            },
            "kind": {
              "type": "string"
            },
            "identity": {
              "$ref": "#/definitions/ManagedIdentity"
            },
            "properties": {
              "$ref": "#/definitions/BatchEndpoint"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "BatchEndpointTrackedResourceArmPaginatedResult": {
      "description": "A paginated list of BatchEndpoint entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type BatchEndpoint.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchEndpointTrackedResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "InferenceEndpointKeys": {
      "type": "object",
      "properties": {
        "endpointKey": {
          "description": "Endpoint keys",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "InferenceEndpointKeysTrackedResource": {
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource`1"
        },
        {
          "type": "object",
          "properties": {
            "tags": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "location": {
              "type": "string"
            },
            "kind": {
              "type": "string"
            },
            "identity": {
              "$ref": "#/definitions/ManagedIdentity"
            },
            "properties": {
              "$ref": "#/definitions/InferenceEndpointKeys"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "CodeContainer": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "CodeContainerResource": {
      "description": "Azure Resource Manager resource Envelope",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource`1"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "$ref": "#/definitions/CodeContainer"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "CodeContainerResourceArmPaginatedResult": {
      "description": "A paginated list of CodeContainer entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type CodeContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeContainerResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "AssetPath": {
      "description": "Details of an AssetUri.",
      "required": [
        "path"
      ],
      "type": "object",
      "properties": {
        "path": {
          "description": "The path of file/directory.",
          "pattern": "\\w",
          "type": "string"
        },
        "isDirectory": {
          "description": "Whether the path defines a directory or a single file.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "CodeVersion": {
      "description": "Details of an RegisteredCode",
      "type": "object",
      "properties": {
        "datastoreId": {
          "description": "The asset datastoreId",
          "type": "string"
        },
        "assetPath": {
          "$ref": "#/definitions/AssetPath"
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "CodeVersionResource": {
      "description": "Azure Resource Manager resource Envelope",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource`1"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "$ref": "#/definitions/CodeVersion"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "CodeVersionResourceArmPaginatedResult": {
      "description": "A paginated list of CodeVersion entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type CodeVersion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeVersionResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "DataContainer": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "DataContainerResource": {
      "description": "Azure Resource Manager resource Envelope",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource`1"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "$ref": "#/definitions/DataContainer"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "DataContainerResourceArmPaginatedResult": {
      "description": "A paginated list of DataContainer entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type DataContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataContainerResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "AccountKeySection": {
      "type": "object",
      "properties": {
        "key": {
          "description": "Storage account key.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      },
      "additionalProperties": false
    },
    "CertificateSection": {
      "required": [
        "clientId",
        "tenantId",
        "thumbprint"
      ],
      "type": "object",
      "properties": {
        "authorityUrl": {
          "description": "Authority URL used for authentication.",
          "type": "string"
        },
        "resourceUri": {
          "description": "Resource the service principal has access to.",
          "type": "string"
        },
        "tenantId": {
          "format": "uuid",
          "description": "ID of the tenant to which the service principal belongs.",
          "type": "string"
        },
        "clientId": {
          "format": "uuid",
          "description": "Service principal client ID.",
          "type": "string"
        },
        "certificate": {
          "description": "Service principal certificate.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        },
        "thumbprint": {
          "description": "Thumbprint of the certificate used for authentication.",
          "pattern": "\\w",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "SasSection": {
      "type": "object",
      "properties": {
        "sasToken": {
          "description": "Storage container SAS token.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      },
      "additionalProperties": false
    },
    "ServicePrincipalSection": {
      "required": [
        "clientId",
        "tenantId"
      ],
      "type": "object",
      "properties": {
        "authorityUrl": {
          "description": "Authority URL used for authentication.",
          "type": "string"
        },
        "resourceUri": {
          "description": "Resource the service principal has access to.",
          "type": "string"
        },
        "tenantId": {
          "format": "uuid",
          "description": "ID of the tenant to which the service principal belongs.",
          "type": "string"
        },
        "clientId": {
          "format": "uuid",
          "description": "Service principal client ID.",
          "type": "string"
        },
        "clientSecret": {
          "description": "Service principal secret.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      },
      "additionalProperties": false
    },
    "SqlAdminSection": {
      "required": [
        "userId"
      ],
      "type": "object",
      "properties": {
        "userId": {
          "description": "SQL database user name.",
          "pattern": "\\w",
          "type": "string"
        },
        "password": {
          "description": "SQL database password.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      },
      "additionalProperties": false
    },
    "DatastoreCredentials": {
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "Credential type used to authentication with storage.",
          "enum": [
            "AccountKey",
            "Certificate",
            "None",
            "Sas",
            "ServicePrincipal",
            "SqlAdmin"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CredentialsType",
            "modelAsString": false
          }
        },
        "accountKey": {
          "$ref": "#/definitions/AccountKeySection"
        },
        "certificate": {
          "$ref": "#/definitions/CertificateSection"
        },
        "sas": {
          "$ref": "#/definitions/SasSection"
        },
        "servicePrincipal": {
          "$ref": "#/definitions/ServicePrincipalSection"
        },
        "sqlAdmin": {
          "$ref": "#/definitions/SqlAdminSection"
        }
      },
      "additionalProperties": false
    },
    "AzureDataLakeSection": {
      "required": [
        "credentials",
        "storeName"
      ],
      "type": "object",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/DatastoreCredentials"
        },
        "storeName": {
          "description": "Azure Data Lake store name.",
          "pattern": "\\w",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "AzureMySqlSection": {
      "required": [
        "credentials",
        "databaseName",
        "endpoint",
        "portNumber",
        "serverName"
      ],
      "type": "object",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/DatastoreCredentials"
        },
        "databaseName": {
          "description": "Azure SQL database name.",
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "endpoint": {
          "description": "Azure cloud endpoint for the database.",
          "pattern": "\\w",
          "type": "string",
          "example": "database.windows.net",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "portNumber": {
          "format": "int32",
          "description": "Azure SQL server port.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "serverName": {
          "description": "Azure SQL server name.",
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "AzurePostgreSqlSection": {
      "required": [
        "credentials",
        "databaseName",
        "endpoint",
        "portNumber",
        "serverName"
      ],
      "type": "object",
      "properties": {
        "enableSSL": {
          "description": "Whether the Azure PostgreSQL server requires SSL.",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "credentials": {
          "$ref": "#/definitions/DatastoreCredentials"
        },
        "databaseName": {
          "description": "Azure SQL database name.",
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "endpoint": {
          "description": "Azure cloud endpoint for the database.",
          "pattern": "\\w",
          "type": "string",
          "example": "database.windows.net",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "portNumber": {
          "format": "int32",
          "description": "Azure SQL server port.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "serverName": {
          "description": "Azure SQL server name.",
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "AzureSqlDatabaseSection": {
      "required": [
        "credentials",
        "databaseName",
        "endpoint",
        "portNumber",
        "serverName"
      ],
      "type": "object",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/DatastoreCredentials"
        },
        "databaseName": {
          "description": "Azure SQL database name.",
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "endpoint": {
          "description": "Azure cloud endpoint for the database.",
          "pattern": "\\w",
          "type": "string",
          "example": "database.windows.net",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "portNumber": {
          "format": "int32",
          "description": "Azure SQL server port.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "serverName": {
          "description": "Azure SQL server name.",
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "AzureStorageSection": {
      "required": [
        "accountName",
        "containerName",
        "credentials",
        "endpoint",
        "protocol"
      ],
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Storage account name.",
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "blobCacheTimeout": {
          "format": "int32",
          "description": "Blob storage cache timeout.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "containerName": {
          "description": "Storage account container name.",
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "credentials": {
          "$ref": "#/definitions/DatastoreCredentials"
        },
        "endpoint": {
          "description": "Azure cloud endpoint for the storage account.",
          "pattern": "\\w",
          "type": "string",
          "example": "core.windows.net",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "protocol": {
          "description": "Protocol used to communicate with the storage account.",
          "pattern": "\\w",
          "type": "string",
          "example": "https",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "GlusterFsSection": {
      "required": [
        "serverAddress",
        "volumeName"
      ],
      "type": "object",
      "properties": {
        "serverAddress": {
          "description": "GlusterFS server address (can be the IP address or server name).",
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "volumeName": {
          "description": "GlusterFS volume name.",
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "DatastoreContents": {
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "Storage type backing the datastore.",
          "enum": [
            "AzureBlob",
            "AzureDataLake",
            "AzureDataLakeGen2",
            "AzureFile",
            "AzureMySql",
            "AzurePostgreSql",
            "AzureSqlDatabase",
            "GlusterFs"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ContentsType",
            "modelAsString": false
          }
        },
        "azureDataLake": {
          "$ref": "#/definitions/AzureDataLakeSection"
        },
        "azureMySql": {
          "$ref": "#/definitions/AzureMySqlSection"
        },
        "azurePostgreSql": {
          "$ref": "#/definitions/AzurePostgreSqlSection"
        },
        "azureSqlDatabase": {
          "$ref": "#/definitions/AzureSqlDatabaseSection"
        },
        "azureStorage": {
          "$ref": "#/definitions/AzureStorageSection"
        },
        "glusterFs": {
          "$ref": "#/definitions/GlusterFsSection"
        }
      },
      "additionalProperties": false
    },
    "LinkedInfo": {
      "type": "object",
      "properties": {
        "linkedId": {
          "description": "Linked service ID.",
          "type": "string"
        },
        "linkedResourceName": {
          "description": "Linked service resource name.",
          "type": "string"
        },
        "origin": {
          "description": "Type of the linked service.",
          "enum": [
            "Synapse"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "OriginType",
            "modelAsString": false
          }
        }
      },
      "additionalProperties": false
    },
    "DatastoreProperties": {
      "required": [
        "contents"
      ],
      "type": "object",
      "properties": {
        "contents": {
          "$ref": "#/definitions/DatastoreContents"
        },
        "hasBeenValidated": {
          "description": "Whether the service has validated access to the datastore with the provided credentials.",
          "type": "boolean",
          "readOnly": true
        },
        "isDefault": {
          "description": "Whether this datastore is the default for the workspace.",
          "type": "boolean"
        },
        "linkedInfo": {
          "$ref": "#/definitions/LinkedInfo"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "DatastorePropertiesResource": {
      "description": "Azure Resource Manager resource Envelope",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource`1"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "$ref": "#/definitions/DatastoreProperties"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "DatastorePropertiesResourceArmPaginatedResult": {
      "description": "A paginated list of DatastoreProperties entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type DatastoreProperties.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatastorePropertiesResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "DataVersion": {
      "description": "Details of an DatasetDto",
      "type": "object",
      "properties": {
        "datasetType": {
          "description": "The Format of dataset.",
          "enum": [
            "Simple",
            "Dataflow"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DatasetType",
            "modelAsString": false
          }
        },
        "datastoreId": {
          "description": "The asset datastoreId",
          "type": "string"
        },
        "assetPath": {
          "$ref": "#/definitions/AssetPath"
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "DataVersionResource": {
      "description": "Azure Resource Manager resource Envelope",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource`1"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "$ref": "#/definitions/DataVersion"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "DataVersionResourceArmPaginatedResult": {
      "description": "A paginated list of DataVersion entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type DataVersion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataVersionResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "EnvironmentContainer": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "EnvironmentContainerResource": {
      "description": "Azure Resource Manager resource Envelope",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource`1"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "$ref": "#/definitions/EnvironmentContainer"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "EnvironmentContainerResourceArmPaginatedResult": {
      "description": "A paginated list of EnvironmentContainer entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type EnvironmentContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentContainerResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "DockerSpecification": {
      "description": "Class to represent configuration settings for Docker",
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "Docker specification must be either Build or Image",
          "enum": [
            "Build",
            "Image"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DockerSpecificationType",
            "modelAsString": false
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "type",
      "additionalProperties": false
    },
    "EnvironmentSpecificationVersion": {
      "description": "Data Transfer Object (DTO) for an Execution Environment Specification. Name and\r\nversion should default to the AzureML-Minimal environment version tested with the\r\ncurrent SDK client version as this is a main use-case.\r\n<see href=\"https://repo2docker.readthedocs.io/en/latest/specification.html\" />",
      "type": "object",
      "properties": {
        "type": {
          "description": "Environment specification is either user managed or curated by the Azure ML service\r\n<see href=\"https://docs.microsoft.com/en-us/azure/machine-learning/resource-curated-environments\" />",
          "enum": [
            "Curated",
            "UserCreated"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "EnvironmentSpecificationType",
            "modelAsString": false
          }
        },
        "docker": {
          "description": "Configuration settings for Docker",
          "allOf": [
            {
              "$ref": "#/definitions/DockerSpecification"
            }
          ]
        },
        "condaFile": {
          "description": "Standard configuration file used by conda that lets you install any kind of package, including Python, R, and C/C++ packages\r\n<see href=\"https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment\" />",
          "type": "string"
        },
        "datastoreId": {
          "description": "The asset datastoreId",
          "type": "string"
        },
        "assetPath": {
          "$ref": "#/definitions/AssetPath"
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "EnvironmentSpecificationVersionResource": {
      "description": "Azure Resource Manager resource Envelope",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource`1"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "$ref": "#/definitions/EnvironmentSpecificationVersion"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "EnvironmentSpecificationVersionResourceArmPaginatedResult": {
      "description": "A paginated list of EnvironmentSpecificationVersion entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type EnvironmentSpecificationVersion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentSpecificationVersionResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "DataBinding": {
      "description": "Data binding definition.",
      "type": "object",
      "properties": {
        "sourceDataReference": {
          "description": "Reference to source data artifact.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "localReference": {
          "description": "Location of data inside the container process.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "mode": {
          "description": "Mechanism for accessing the data artifact.",
          "enum": [
            "Mount",
            "Download",
            "Upload"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataBindingMode",
            "modelAsString": false
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "DistributionConfiguration": {
      "required": [
        "distributionType"
      ],
      "type": "object",
      "properties": {
        "distributionType": {
          "description": "Specifies the type of distribution framework.",
          "enum": [
            "PyTorch",
            "Tensorflow",
            "Mpi"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DistributionType",
            "modelAsString": false
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "distributionType",
      "additionalProperties": false
    },
    "Tensorflow": {
      "allOf": [
        {
          "$ref": "#/definitions/DistributionConfiguration"
        },
        {
          "type": "object",
          "properties": {
            "workerCount": {
              "format": "int32",
              "description": "Number of workers. Overwrites the node count in compute binding.",
              "type": "integer"
            },
            "parameterServerCount": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Tensorflow",
      "additionalProperties": false
    },
    "Mpi": {
      "allOf": [
        {
          "$ref": "#/definitions/DistributionConfiguration"
        },
        {
          "type": "object",
          "properties": {
            "processCountPerNode": {
              "format": "int32",
              "type": "integer"
            },
            "nodeCount": {
              "format": "int32",
              "description": "Number of nodes. Overwrites the node count in compute binding.",
              "type": "integer"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Mpi",
      "additionalProperties": false
    },
    "PyTorch": {
      "allOf": [
        {
          "$ref": "#/definitions/DistributionConfiguration"
        },
        {
          "type": "object",
          "properties": {
            "communicationBackend": {
              "enum": [
                "Nccl",
                "Gloo"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "CommunicationBackend",
                "modelAsString": false
              }
            },
            "nodeCount": {
              "format": "int32",
              "description": "Number of nodes. Overwrites the node count in compute binding.",
              "type": "integer"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "PyTorch",
      "additionalProperties": false
    },
    "ComputeBinding": {
      "description": "Compute binding definition.",
      "required": [
        "computeId"
      ],
      "type": "object",
      "properties": {
        "computeId": {
          "description": "Resource ID of the compute resource.",
          "pattern": "\\w",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "nodeCount": {
          "format": "int32",
          "description": "Number of nodes.",
          "type": "integer",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "JobOutput": {
      "type": "object",
      "properties": {
        "datastoreId": {
          "description": "ARM ID of the datastore where the job logs and artifacts are stored, or null for the default container (\"azureml\") in the workspace's storage account.",
          "type": "string",
          "readOnly": true
        },
        "path": {
          "description": "Path within the datastore to the job logs and artifacts.",
          "type": "string",
          "readOnly": true
        }
      },
      "additionalProperties": false
    },
    "JobBase": {
      "description": "Job base definition",
      "required": [
        "jobType"
      ],
      "type": "object",
      "properties": {
        "jobType": {
          "description": "Specifies the type of job.",
          "enum": [
            "Command",
            "Sweep",
            "Labeling",
            "Pipeline",
            "Data",
            "AutoML"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "JobType",
            "modelAsString": false
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "interactionEndpoints": {
          "description": "Dictonary of endpoint URIs, keyed by enumerated job endpoints.",
          "type": "object",
          "properties": {
            "Tracking": {
              "format": "uri",
              "type": "string"
            },
            "Studio": {
              "format": "uri",
              "type": "string"
            },
            "Grafana": {
              "format": "uri",
              "type": "string"
            },
            "Tensorboard": {
              "format": "uri",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "discriminator": "jobType",
      "additionalProperties": false
    },
    "ComputeJobBase": {
      "description": "Compute job base definition",
      "required": [
        "computeBinding",
        "jobType"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/JobBase"
        },
        {
          "type": "object",
          "properties": {
            "experimentName": {
              "description": "The name of the experiment the job belongs to. If not set, the job is placed in the \"Default\" experiment.",
              "type": "string"
            },
            "computeBinding": {
              "$ref": "#/definitions/ComputeBinding"
            },
            "output": {
              "$ref": "#/definitions/JobOutput"
            }
          }
        }
      ],
      "discriminator": "jobType",
      "additionalProperties": false
    },
    "CommandJob": {
      "description": "Code Job definition",
      "required": [
        "codeConfiguration",
        "computeBinding",
        "jobType"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ComputeJobBase"
        },
        {
          "type": "object",
          "properties": {
            "jobType": {
              "enum": [
                "Command",
                "Sweep",
                "Labeling",
                "Pipeline",
                "Data",
                "AutoML"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "JobType",
                "modelAsString": false
              }
            },
            "status": {
              "description": "Status of the job.",
              "enum": [
                "NotStarted",
                "Starting",
                "Provisioning",
                "Preparing",
                "Queued",
                "Running",
                "Finalizing",
                "CancelRequested",
                "Completed",
                "Failed",
                "Canceled",
                "NotResponding",
                "Paused"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "JobStatus",
                "modelAsString": false
              }
            },
            "maxRunDurationSeconds": {
              "format": "int64",
              "description": "The max run duration in seconds, after which the job will be cancelled.",
              "type": "integer"
            },
            "codeConfiguration": {
              "$ref": "#/definitions/CodeConfiguration"
            },
            "environmentId": {
              "description": "Environment specification of the job.",
              "type": "string"
            },
            "dataBindings": {
              "description": "Mapping of data bindings used in the job.",
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/DataBinding"
              }
            },
            "distributionConfiguration": {
              "description": "Distribution configuration of the job. This should be one of MpiConfiguration, TensorflowConfiguration, or PyTorchConfiguration.",
              "allOf": [
                {
                  "$ref": "#/definitions/DistributionConfiguration"
                }
              ]
            }
          }
        }
      ],
      "discriminator": "jobType",
      "x-ms-discriminator-value": "Command",
      "additionalProperties": false
    },
    "AutomlJob": {
      "description": "Automl Job definition",
      "required": [
        "codeConfiguration",
        "computeBinding"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CommandJob"
        },
        {
          "type": "object",
          "properties": {
            "jobType": {
              "enum": [
                "Command",
                "Sweep",
                "Labeling",
                "Pipeline",
                "Data",
                "AutoML"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "JobType",
                "modelAsString": false
              }
            },
            "runType": {
              "description": "Run type",
              "type": "string"
            },
            "runSource": {
              "description": "Run source would be used by services calling AutoML CreateParentRun,\r\nif none is provided it would default to \"AutoML\"\r\nThis value would be used for RootAttribution",
              "type": "string"
            },
            "numIterations": {
              "format": "int32",
              "description": "Number of iterations.",
              "type": "integer"
            },
            "trainingType": {
              "description": "Training type",
              "enum": [
                "TrainFull",
                "TrainAndValidate",
                "CrossValidate",
                "MeanCrossValidate"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "TrainingType",
                "modelAsString": false
              }
            },
            "acquisitionFunction": {
              "description": "Aquisition function",
              "enum": [
                "EI",
                "PI",
                "UCB"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "AcquisitionFunction",
                "modelAsString": false
              }
            },
            "metrics": {
              "description": "Optimization metrics",
              "type": "array",
              "items": {
                "enum": [
                  "AUC_weighted",
                  "Accuracy",
                  "Norm_macro_recall",
                  "Average_precision_score_weighted",
                  "Precision_score_weighted",
                  "Spearman_correlation",
                  "Normalized_root_mean_squared_error",
                  "R2_score",
                  "Normalized_mean_absolute_error",
                  "Normalized_root_mean_squared_log_error",
                  "Mean_average_precision",
                  "Iou"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "OptimizationMetric",
                  "modelAsString": false
                }
              }
            },
            "primaryMetric": {
              "description": "Primary optimization metric",
              "enum": [
                "AUC_weighted",
                "Accuracy",
                "Norm_macro_recall",
                "Average_precision_score_weighted",
                "Precision_score_weighted",
                "Spearman_correlation",
                "Normalized_root_mean_squared_error",
                "R2_score",
                "Normalized_mean_absolute_error",
                "Normalized_root_mean_squared_log_error",
                "Mean_average_precision",
                "Iou"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "OptimizationMetric",
                "modelAsString": false
              }
            },
            "trainSplit": {
              "format": "double",
              "description": "Train split percentage",
              "type": "number"
            },
            "acquisitionParameter": {
              "format": "double",
              "description": "Aquisition parameter",
              "type": "number"
            },
            "numCrossValidation": {
              "format": "int32",
              "description": "Num cross validation",
              "type": "integer"
            },
            "target": {
              "description": "Target",
              "type": "string"
            },
            "amlSettingsJsonString": {
              "description": "AMLSettings Json string",
              "type": "string"
            },
            "dataPrepJsonString": {
              "description": "Serialized DataPrep dataflow object",
              "type": "string"
            },
            "enableSubsampling": {
              "description": "Enable subsampling",
              "type": "boolean"
            },
            "scenario": {
              "description": "Which scenario is being used to mapping to a curated environment",
              "type": "string"
            },
            "parentRunId": {
              "description": "The parent run id for the current parent run dto.",
              "type": "string"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "AutoML",
      "additionalProperties": false
    },
    "DataJob": {
      "description": "Data Job definition",
      "required": [
        "computeBinding"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ComputeJobBase"
        },
        {
          "type": "object",
          "properties": {
            "jobType": {
              "enum": [
                "Command",
                "Sweep",
                "Labeling",
                "Pipeline",
                "Data",
                "AutoML"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "JobType",
                "modelAsString": false
              }
            },
            "source": {
              "description": "Source datasetId",
              "type": "string"
            },
            "destination": {
              "description": "Destination datastoreId",
              "type": "string"
            },
            "name": {
              "description": "Destination dataset name",
              "type": "string"
            },
            "path": {
              "type": "string"
            },
            "flowType": {
              "enum": [
                "Movement",
                "Materialize",
                "Transformation"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "FlowType",
                "modelAsString": false
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Data",
      "additionalProperties": false
    },
    "ParameterSamplingConfiguration": {
      "description": "class for all hyperparameter sampling algorithms",
      "type": "object",
      "properties": {
        "parameterSpace": {
          "description": "A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter",
          "type": "object"
        },
        "properties": {
          "description": "A dictionary with additional properties for the algorithm.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "samplingType": {
          "description": "Type of the hyperparameter sampling algorithms",
          "enum": [
            "Grid",
            "Random",
            "Bayesian"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ParameterSamplingType",
            "modelAsString": false
          }
        }
      },
      "additionalProperties": false
    },
    "EarlyTerminationPolicyConfiguration": {
      "description": "Early termination policies enable canceling poor-performing runs before they complete",
      "required": [
        "policyType"
      ],
      "type": "object",
      "properties": {
        "policyType": {
          "description": "Name of policy configuration",
          "enum": [
            "Bandit",
            "MedianStopping",
            "TruncationSelection"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EarlyTerminationPolicyType",
            "modelAsString": false
          }
        },
        "evaluationInterval": {
          "format": "int32",
          "type": "integer"
        },
        "delayEvaluation": {
          "format": "int32",
          "type": "integer"
        }
      },
      "discriminator": "policyType",
      "additionalProperties": false
    },
    "BanditPolicyConfiguration": {
      "description": "Defines an early termination policy based on slack criteria, and a frequency and delay interval for evaluation",
      "allOf": [
        {
          "$ref": "#/definitions/EarlyTerminationPolicyConfiguration"
        },
        {
          "type": "object",
          "properties": {
            "slackFactor": {
              "format": "float",
              "type": "number"
            },
            "slackAmount": {
              "format": "float",
              "type": "number"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Bandit",
      "additionalProperties": false
    },
    "MedianStoppingPolicyConfiguration": {
      "description": "Defines an early termination policy based on running averages of the primary metric of all runs",
      "allOf": [
        {
          "$ref": "#/definitions/EarlyTerminationPolicyConfiguration"
        },
        {
          "type": "object"
        }
      ],
      "x-ms-discriminator-value": "MedianStopping",
      "additionalProperties": false
    },
    "TruncationSelectionPolicyConfiguration": {
      "description": "Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.",
      "allOf": [
        {
          "$ref": "#/definitions/EarlyTerminationPolicyConfiguration"
        },
        {
          "type": "object",
          "properties": {
            "truncationPercentage": {
              "format": "int32",
              "type": "integer"
            },
            "excludeFinishedJobs": {
              "type": "boolean"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "TruncationSelection",
      "additionalProperties": false
    },
    "TerminationConfiguration": {
      "type": "object",
      "properties": {
        "maxTotalRuns": {
          "format": "int32",
          "type": "integer"
        },
        "maxConcurrentRuns": {
          "format": "int32",
          "type": "integer"
        },
        "maxDurationMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "earlyTerminationPolicyConfiguration": {
          "description": "Early termination policies enable canceling poor-performing runs before they complete",
          "allOf": [
            {
              "$ref": "#/definitions/EarlyTerminationPolicyConfiguration"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "EvaluationConfiguration": {
      "type": "object",
      "properties": {
        "primaryMetricName": {
          "type": "string"
        },
        "primaryMetricGoal": {
          "description": "Defines supported metric goals for hyperparameter tuning",
          "enum": [
            "Minimize",
            "Maximize"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PrimaryMetricGoal",
            "modelAsString": false
          }
        }
      },
      "additionalProperties": false
    },
    "TrialJob": {
      "type": "object",
      "properties": {
        "codeConfiguration": {
          "$ref": "#/definitions/CodeConfiguration"
        },
        "environmentId": {
          "description": "Environment id of the job.",
          "type": "string"
        },
        "dataBindings": {
          "description": "Mapping of data bindings used in the job.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DataBinding"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "SweepJob": {
      "required": [
        "computeBinding"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ComputeJobBase"
        },
        {
          "type": "object",
          "properties": {
            "jobType": {
              "enum": [
                "Command",
                "Sweep",
                "Labeling",
                "Pipeline",
                "Data",
                "AutoML"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "JobType",
                "modelAsString": false
              }
            },
            "status": {
              "description": "The status of a job.",
              "enum": [
                "NotStarted",
                "Starting",
                "Provisioning",
                "Preparing",
                "Queued",
                "Running",
                "Finalizing",
                "CancelRequested",
                "Completed",
                "Failed",
                "Canceled",
                "NotResponding",
                "Paused"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "JobStatus",
                "modelAsString": false
              }
            },
            "parameterSamplingConfiguration": {
              "$ref": "#/definitions/ParameterSamplingConfiguration"
            },
            "terminationConfiguration": {
              "$ref": "#/definitions/TerminationConfiguration"
            },
            "evaluationConfiguration": {
              "$ref": "#/definitions/EvaluationConfiguration"
            },
            "trialJob": {
              "$ref": "#/definitions/TrialJob"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Sweep",
      "additionalProperties": false
    },
    "LabelClass": {
      "description": "Label class definition",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name of the label class.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "subclasses": {
          "description": "Dictionary of subclasses of the label class.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LabelClass"
          },
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      },
      "additionalProperties": false
    },
    "LabelCategory": {
      "description": "Label category definition",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name of the label category.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "allowMultiSelect": {
          "description": "Indicates whether it is allowed to select multiple classes in this category.",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "classes": {
          "description": "Dictionary of label classes in this category.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LabelClass"
          },
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      },
      "additionalProperties": false
    },
    "LabelingJobInstructions": {
      "description": "Instructions for labeling job",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The link to a page with detailed labeling instructions for labelers.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      },
      "additionalProperties": false
    },
    "LabelingDatasetConfiguration": {
      "description": "Labeling dataset configuration definition",
      "type": "object",
      "properties": {
        "assetName": {
          "description": "Name of the data asset to perform labeling.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "incrementalDatasetRefreshEnabled": {
          "description": "Indicates whether to enable incremental dataset refresh.",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "datasetVersion": {
          "description": "AML dataset version.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "MLAssistConfiguration": {
      "description": "Labeling MLAssist configuration definition",
      "type": "object",
      "properties": {
        "inferencingComputeBinding": {
          "$ref": "#/definitions/ComputeBinding"
        },
        "trainingComputeBinding": {
          "$ref": "#/definitions/ComputeBinding"
        },
        "mlAssistEnabled": {
          "description": "Indicates whether MLAssist feature is enabled.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "LabelingJobMediaProperties": {
      "description": "Properties of a labeling job",
      "required": [
        "mediaType"
      ],
      "type": "object",
      "properties": {
        "mediaType": {
          "description": "Media type of the job.",
          "enum": [
            "Image",
            "Text"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MediaType",
            "modelAsString": false
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "mediaType",
      "additionalProperties": false
    },
    "ProgressMetrics": {
      "description": "Progress metrics definition",
      "type": "object",
      "properties": {
        "totalDatapointCount": {
          "format": "int64",
          "description": "The total datapoint count.",
          "type": "integer",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "completedDatapointCount": {
          "format": "int64",
          "description": "The completed datapoint count.",
          "type": "integer",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "skippedDatapointCount": {
          "format": "int64",
          "description": "The skipped datapoint count.",
          "type": "integer",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "incrementalDatasetLastRefreshTime": {
          "format": "date-time",
          "description": "The time of last successful incremental dataset refresh in UTC.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "StatusMessage": {
      "description": "Active message associated with project",
      "type": "object",
      "properties": {
        "level": {
          "description": "Severity level of message.",
          "enum": [
            "Error",
            "Information",
            "Warning"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "StatusMessageLevel",
            "modelAsString": false
          },
          "x-ms-mutability": [
            "read"
          ]
        },
        "code": {
          "description": "Service-defined message code.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "message": {
          "description": "A human-readable representation of the message code.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "createdTimeUtc": {
          "format": "date-time",
          "description": "Time in UTC at which the message was created.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "additionalProperties": false
    },
    "LabelingJob": {
      "description": "Labeling job definition",
      "allOf": [
        {
          "$ref": "#/definitions/JobBase"
        },
        {
          "type": "object",
          "properties": {
            "labelCategories": {
              "description": "Label categories of the job.",
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/LabelCategory"
              }
            },
            "jobInstructions": {
              "$ref": "#/definitions/LabelingJobInstructions"
            },
            "datasetConfiguration": {
              "$ref": "#/definitions/LabelingDatasetConfiguration"
            },
            "mlAssistConfiguration": {
              "$ref": "#/definitions/MLAssistConfiguration"
            },
            "labelingJobMediaProperties": {
              "description": "Media type specific properties in the job.",
              "allOf": [
                {
                  "$ref": "#/definitions/LabelingJobMediaProperties"
                }
              ]
            },
            "projectId": {
              "format": "uuid",
              "description": "Internal id of the job(Previously called project).",
              "type": "string"
            },
            "status": {
              "description": "Status of the job.",
              "enum": [
                "NotStarted",
                "Starting",
                "Provisioning",
                "Preparing",
                "Queued",
                "Running",
                "Finalizing",
                "CancelRequested",
                "Completed",
                "Failed",
                "Canceled",
                "NotResponding",
                "Paused"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "JobStatus",
                "modelAsString": false
              }
            },
            "progressMetrics": {
              "$ref": "#/definitions/ProgressMetrics"
            },
            "statusMessages": {
              "description": "Status messages of the job.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatusMessage"
              }
            },
            "createdTimeUtc": {
              "format": "date-time",
              "description": "Created time of the job in UTC timezone.",
              "type": "string"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Labeling",
      "additionalProperties": false
    },
    "JobBaseResource": {
      "description": "Azure Resource Manager resource Envelope",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource`1"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "description": "Additional attributes of the entity.",
              "allOf": [
                {
                  "$ref": "#/definitions/JobBase"
                }
              ]
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "JobBaseResourceArmPaginatedResult": {
      "description": "A paginated list of JobBase entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type JobBase.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobBaseResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "LabelingJobResource": {
      "description": "Azure Resource Manager resource Envelope",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource`1"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "$ref": "#/definitions/LabelingJob"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "LabelingJobResourceArmPaginatedResult": {
      "description": "A paginated list of LabelingJob entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type LabelingJob.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LabelingJobResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ExportSummary": {
      "required": [
        "format"
      ],
      "type": "object",
      "properties": {
        "format": {
          "description": "The format of exported labels, also as the discriminator.",
          "enum": [
            "Dataset",
            "Coco",
            "CSV"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ExportFormatType",
            "modelAsString": false
          },
          "x-ms-mutability": [
            "read"
          ]
        },
        "exportId": {
          "format": "uuid",
          "description": "The unique identifier of completed Export Labels operation.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "labelingJobId": {
          "description": "Name and identifier of the job containing exported labels.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "exportedRowCount": {
          "format": "int64",
          "description": "The total number of labeled datapoints exported.",
          "type": "integer",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "startTimeUtc": {
          "format": "date-time",
          "description": "The time when the export was requested.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "endTimeUtc": {
          "format": "date-time",
          "description": "The time when the export was completed.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "state": {
          "description": "The state of the Export Labels operation.",
          "enum": [
            "Requested",
            "Running",
            "Failed",
            "Completed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "LabelExportState",
            "modelAsString": false
          },
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "discriminator": "format",
      "additionalProperties": false
    },
    "ExportSummaryResource": {
      "description": "Azure Resource Manager resource Envelope",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource`1"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "description": "Additional attributes of the entity.",
              "allOf": [
                {
                  "$ref": "#/definitions/ExportSummary"
                }
              ]
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "ModelVersion": {
      "description": "Details of an ModelDto",
      "type": "object",
      "properties": {
        "stage": {
          "description": "Model asset stage.",
          "type": "string"
        },
        "datastoreId": {
          "description": "The asset datastoreId",
          "type": "string"
        },
        "assetPath": {
          "$ref": "#/definitions/AssetPath"
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "ModelVersionResource": {
      "description": "Azure Resource Manager resource Envelope",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource`1"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "$ref": "#/definitions/ModelVersion"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "ModelContainer": {
      "type": "object",
      "properties": {
        "latestVersions": {
          "description": "Latest model versions for each stage.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelVersionResource"
          }
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The asset property dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "ModelContainerResource": {
      "description": "Azure Resource Manager resource Envelope",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource`1"
        },
        {
          "type": "object",
          "properties": {
            "properties": {
              "$ref": "#/definitions/ModelContainer"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "ModelContainerResourceArmPaginatedResult": {
      "description": "A paginated list of ModelContainer entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type ModelContainer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelContainerResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ModelVersionResourceArmPaginatedResult": {
      "description": "A paginated list of ModelVersion entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type ModelVersion.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelVersionResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ScaleSettings": {
      "type": "object",
      "properties": {
        "minimum": {
          "format": "int32",
          "type": "integer"
        },
        "maximum": {
          "format": "int32",
          "type": "integer"
        },
        "instanceCount": {
          "format": "int32",
          "type": "integer"
        },
        "scaleType": {
          "enum": [
            "Automatic",
            "Manual",
            "None"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ScaleTypeMode",
            "modelAsString": false
          }
        }
      },
      "additionalProperties": false
    },
    "EnvironmentOverrides": {
      "type": "object",
      "properties": {
        "environmentVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "DeploymentConfigurationBase": {
      "required": [
        "computeType"
      ],
      "type": "object",
      "properties": {
        "computeType": {
          "enum": [
            "Managed",
            "AKS",
            "ACI"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ComputeType",
            "modelAsString": false
          }
        },
        "appInsightsEnabled": {
          "type": "boolean"
        }
      },
      "discriminator": "computeType",
      "additionalProperties": false
    },
    "OnlineDeploymentProperties": {
      "required": [
        "deploymentConfiguration",
        "modelReference"
      ],
      "type": "object",
      "properties": {
        "scaleSettings": {
          "$ref": "#/definitions/ScaleSettings"
        },
        "environmentOverrides": {
          "$ref": "#/definitions/EnvironmentOverrides"
        },
        "deploymentConfiguration": {
          "allOf": [
            {
              "$ref": "#/definitions/DeploymentConfigurationBase"
            }
          ]
        },
        "description": {
          "description": "Description of the endpoint deployment.",
          "type": "string"
        },
        "properties": {
          "description": "Property dictionary. Properties can be added, but not removed or altered.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "modelReference": {
          "description": "Model Configuration.",
          "allOf": [
            {
              "$ref": "#/definitions/AssetReferenceBase"
            }
          ]
        },
        "codeConfiguration": {
          "$ref": "#/definitions/CodeConfiguration"
        },
        "environmentId": {
          "description": "Environment specification for the endpoint deployment.",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning state for the endpoint deployment.",
          "enum": [
            "Creating",
            "Deleting",
            "Scaling",
            "Updating",
            "Succeeded",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "DeploymentProvisioningState",
            "modelAsString": false
          }
        }
      },
      "additionalProperties": false
    },
    "OnlineDeploymentPropertiesTrackedResource": {
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource`1"
        },
        {
          "type": "object",
          "properties": {
            "tags": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "location": {
              "type": "string"
            },
            "kind": {
              "type": "string"
            },
            "identity": {
              "$ref": "#/definitions/ManagedIdentity"
            },
            "properties": {
              "$ref": "#/definitions/OnlineDeploymentProperties"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "OnlineDeploymentPropertiesTrackedResourceArmPaginatedResult": {
      "description": "A paginated list of OnlineDeploymentProperties entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type OnlineDeploymentProperties.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OnlineDeploymentPropertiesTrackedResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "OnlineDeploymentPropertiesTrackedResourceLongRunningOperationResponse": {
      "type": "object",
      "properties": {
        "completionResult": {
          "$ref": "#/definitions/OnlineDeploymentPropertiesTrackedResource"
        },
        "location": {
          "format": "uri",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "DeploymentLogsRequest": {
      "type": "object",
      "properties": {
        "containerType": {
          "description": "The type of container to retrieve logs from.",
          "enum": [
            "StorageInitializer",
            "InferenceServer"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ContainerType",
            "modelAsString": false
          }
        },
        "tail": {
          "format": "int32",
          "description": "The maximum number of lines to tail.",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "DeploymentLogs": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "OnlineEndpointProperties": {
      "description": "Online endpoint configuration",
      "required": [
        "authMode"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the inference endpoint.",
          "type": "string"
        },
        "properties": {
          "description": "Property dictionary. Properties can be added, but not removed or altered.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "trafficRules": {
          "description": "Traffic rules on how the traffic will be routed across deployments.",
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          }
        },
        "computeConfiguration": {
          "description": "Reference to compute configuration.",
          "allOf": [
            {
              "$ref": "#/definitions/ComputeConfiguration"
            }
          ]
        },
        "provisioningState": {
          "description": "State of provisioning",
          "enum": [
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "EndpointProvisioningState",
            "modelAsString": false
          },
          "x-ms-mutability": [
            "read"
          ]
        },
        "endpoint": {
          "format": "uri",
          "description": "Endpoint URI",
          "type": "string",
          "readOnly": true
        },
        "swaggerEndpoint": {
          "format": "uri",
          "description": "Endpoint Swagger URI",
          "type": "string",
          "readOnly": true
        },
        "authMode": {
          "description": "Inference endpoint authentication mode type",
          "enum": [
            "AMLToken",
            "Key"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EndpointAuthModeType",
            "modelAsString": false
          }
        },
        "keys": {
          "$ref": "#/definitions/AuthKeys"
        }
      },
      "additionalProperties": false
    },
    "OnlineEndpointPropertiesTrackedResource": {
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource`1"
        },
        {
          "type": "object",
          "properties": {
            "tags": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "location": {
              "type": "string"
            },
            "kind": {
              "type": "string"
            },
            "identity": {
              "$ref": "#/definitions/ManagedIdentity"
            },
            "properties": {
              "$ref": "#/definitions/OnlineEndpointProperties"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "OnlineEndpointPropertiesTrackedResourceArmPaginatedResult": {
      "description": "A paginated list of OnlineEndpointProperties entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "An array of objects of type OnlineEndpointProperties.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OnlineEndpointPropertiesTrackedResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "OnlineEndpointPropertiesTrackedResourceLongRunningOperationResponse": {
      "type": "object",
      "properties": {
        "completionResult": {
          "$ref": "#/definitions/OnlineEndpointPropertiesTrackedResource"
        },
        "location": {
          "format": "uri",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "RegenerateEndpointKeysRequest": {
      "type": "object",
      "properties": {
        "keyType": {
          "description": "Specification for which type of key to generate. Primary or Secondary.",
          "enum": [
            "Primary",
            "Secondary"
          ],
          "type": "string",
          "example": "Primary",
          "x-ms-enum": {
            "name": "KeyType",
            "modelAsString": false
          }
        },
        "keyValue": {
          "description": "The value the key is set to.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "AuthToken": {
      "description": "Service Token",
      "type": "object",
      "properties": {
        "accessToken": {
          "description": "Access token.",
          "type": "string"
        },
        "tokenType": {
          "description": "Access token type.",
          "type": "string"
        },
        "expiryTimeUtc": {
          "format": "int64",
          "description": "Access token expiry time (UTC).",
          "type": "integer"
        },
        "refreshAfterTimeUtc": {
          "format": "int64",
          "description": "Refresh access token after time (UTC).",
          "type": "integer"
        }
      },
      "additionalProperties": false
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "in": "path",
      "name": "subscriptionId",
      "description": "The Azure Subscription ID.",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    },
    "resourceGroupNameParameter": {
      "in": "path",
      "name": "resourceGroupName",
      "description": "The Name of the resource group in which the workspace is located.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "workspaceNameParameter": {
      "in": "path",
      "name": "workspaceName",
      "description": "The name of the workspace.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "experimentNameParameter": {
      "in": "path",
      "name": "experimentName",
      "description": "Experiment name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "experimentIdParameter": {
      "in": "path",
      "name": "experimentId",
      "description": "Experiment Id.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "description": "Azure Active Directory OAuth2 Flow."
    }
  }
}